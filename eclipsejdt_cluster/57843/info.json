{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5d8fb44d6cc85699f6624d40ba028a4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33da6d8fbd65b0a49378497ce90a22fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tprivate void findVariableName( \t\tchar[] token, \t\tchar[] qualifiedPackageName, \t\tchar[] qualifiedSourceName, \t\tchar[] sourceName, \t\tchar[][] excludeNames, \t\tint dim, \t\tint kind, \t\tint modifiers)", "signatureAfterChange": " \tprivate void findVariableName( \t\tchar[] token, \t\tchar[] qualifiedPackageName, \t\tchar[] qualifiedSourceName, \t\tchar[] sourceName, \t\tchar[][] excludeNames, \t\tint dim, \t\tint kind, \t\tint modifiers)", "diff": ["-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptVariableName(", "+\t\t\t\t\tCompletionEngine.this.noProposal = false;", "+\t\t\t\t\tCompletionEngine.this.requestor.acceptVariableName(", "-\t\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tCompletionEngine.this.startPosition - CompletionEngine.this.offset,", "+\t\t\t\t\t\tCompletionEngine.this.endPosition - CompletionEngine.this.offset,", "-\t\t\t\t\tjavaProject,", "+\t\t\t\t\tthis.javaProject,", "-\t\t\t\t\tjavaProject,", "+\t\t\t\t\tthis.javaProject,", "-\t\t\t\t\tjavaProject,", "+\t\t\t\t\tthis.javaProject,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1c98e6c98f49fef16400a1b11ca950", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "fced1a7a2b8f5ce77723d058091976d51b43704e", "commitAfterChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void acceptQualifiedTypes()", "signatureAfterChange": "  \tprivate void acceptQualifiedTypes()", "diff": ["-\t\tif(acceptedClasses != null){", "+\t\tif(this.acceptedClasses != null){", "-\t\t\tfor (int i = 0; i < acceptedClassesCount; i++) {", "-\t\t\t\tnoProposal = false;", "+\t\t\tfor (int i = 0; i < this.acceptedClassesCount; i++) {", "+\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\tacceptedClasses[i][0],", "-\t\t\t\t\tacceptedClasses[i][1],", "+\t\t\t\t\tthis.acceptedClasses[i][0],", "+\t\t\t\t\tthis.acceptedClasses[i][1],", "-\t\t\tacceptedClasses = null;", "-\t\t\tacceptedClassesCount = 0;", "+\t\t\tthis.acceptedClasses = null;", "+\t\t\tthis.acceptedClassesCount = 0;", "-\t\tif(acceptedInterfaces != null){", "+\t\tif(this.acceptedInterfaces != null){", "-\t\t\tfor (int i = 0; i < acceptedInterfacesCount; i++) {", "-\t\t\t\tnoProposal = false;", "+\t\t\tfor (int i = 0; i < this.acceptedInterfacesCount; i++) {", "+\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\tacceptedInterfaces[i][0],", "-\t\t\t\t\tacceptedInterfaces[i][1],", "+\t\t\t\t\tthis.acceptedInterfaces[i][0],", "+\t\t\t\t\tthis.acceptedInterfaces[i][1],", "-\t\t\tacceptedInterfaces = null;", "-\t\t\tacceptedInterfacesCount = 0;", "+\t\t\tthis.acceptedInterfaces = null;", "+\t\t\tthis.acceptedInterfacesCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8338f7ea32dccfb41b226874e235ea88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic String errorReportSource(char[] unitSource)", "signatureAfterChange": " \tpublic String errorReportSource(char[] unitSource)", "diff": ["-\t\tif ((startPosition > endPosition)", "-\t\t\t|| ((startPosition < 0) && (endPosition < 0)))", "+\t\tif ((this.startPosition > this.endPosition)", "+\t\t\t|| ((this.startPosition < 0) && (this.endPosition < 0)))", "-\t\terrorBuffer.append(Util.bind(\"problem.atLine\", String.valueOf(line))); //$NON-NLS-1$", "+\t\terrorBuffer.append(Util.bind(\"problem.atLine\", String.valueOf(this.line))); //$NON-NLS-1$", "-\t\tfor (begin = startPosition >= length ? length - 1 : startPosition; begin > 0; begin--) {", "+\t\tfor (begin = this.startPosition >= length ? length - 1 : this.startPosition; begin > 0; begin--) {", "-\t\tfor (end = endPosition >= length ? length - 1 : endPosition ; end+1 < length; end++) {", "+\t\tfor (end = this.endPosition >= length ? length - 1 : this.endPosition ; end+1 < length; end++) {", "-\t\tfor (int i = begin; i <startPosition; i++) {", "+\t\tfor (int i = begin; i <this.startPosition; i++) {", "-\t\tfor (int i = startPosition; i <= (endPosition >= length ? length - 1 : endPosition); i++) {", "+\t\tfor (int i = this.startPosition; i <= (this.endPosition >= length ? length - 1 : this.endPosition); i++) {"]}], "num": 57843}