{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca37b41efbe64fb5c9d0815b96e680f2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "029d3eceeff4cf069e4bef38d5a1a235", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "85633e99f21ec09406d32b988a3002563f4455d5", "commitAfterChange": "d6a5f7150c955097cc2dfb47cecf0f5f97dfc713", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "signatureAfterChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "diff": ["-\t\t\tMethodBinding[] receiverMethods = receiverType.getMethods(selector);", "+\t\t\tMethodBinding[] receiverMethods = receiverType.getMethods(selector, argumentTypes.length);", "-\t\t\tMethodBinding[] currentMethods = currentType.getMethods(selector);", "+\t\t\tMethodBinding[] currentMethods = currentType.getMethods(selector, argumentTypes.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e321d3023ac0ea418c997fbe1674add", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "faddcb079bee5b548a6f2f972d8258d3ff3dc5d3", "commitAfterChange": "7596807cbc20be2267cc443bfe387f40df0774fb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["+\t\t\tMethodBinding[] existingMethods = receiverType.methods();\r", "+\t\t\tfor(int i =0 ; i < existingMethods.length ; i++){\r", "+\t\t\t\tMethodBinding existingMethod = existingMethods[i];\r", "+\t\t\t\tif (CharOperation.equals(method.selector, existingMethod.selector, true)\r", "+\t\t\t\t\t&& method.areParametersEqual(existingMethod)){\r", "+\t\t\t\t\tcontinue next;\t\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "669aaa9d93c8cc68a61a7619c94e5f11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ed03b97e41cec71a1f276a24a6c89d537dde57f2", "commitAfterChange": "3617e411ab09a4b93e5840b8e6d451f0c6a8a8c9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tfaultInReceiverType(receiverType);", "-\t\tcompilationUnitScope().recordTypeReference(receiverType);", "-\t\tMethodBinding exactMethod = receiverType.getExactMethod(selector, argumentTypes);", "+\t\tMethodBinding exactMethod = receiverType.getExactMethod(selector, argumentTypes, compilationUnitScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "708f030a6795e9f44dad088f1aacfbe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\tif (receiverType.isBaseType())", "-\t\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, NotFound);", "-", "+\t\t\tswitch (receiverType.kind()) {", "+\t\t\t\tcase Binding.BASE_TYPE :", "+\t\t\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, NotFound);", "+\t\t\t\tcase Binding.ARRAY_TYPE :", "+\t\t\t\t\tcompilationUnitScope().recordTypeReference(receiverType);", "+\t\t\t\t\treturn findMethodForArray((ArrayBinding) receiverType, selector, argumentTypes, invocationSite);", "+\t\t\t}", "-\t\t\tif (receiverType.isArrayType())", "-\t\t\t\treturn findMethodForArray((ArrayBinding) receiverType, selector, argumentTypes, invocationSite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "721fd00356da1b522173ac0212dd7b18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8c67d56825136ce0d7026162576ad6997e930bdc", "commitAfterChange": "0b88f9a0bb1950edae0865a8658608a49edfc445", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "signatureAfterChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "diff": ["-\t\t\tif (receiverMethods.length > 0)", "-\t\t\t\tfound.addAll(receiverMethods);", "+\t\t\tfor (int index = 0, length = receiverMethods.length; index < length; index++) {", "+\t\t\t\tMethodBinding binding = receiverMethods[index];", "+\t\t\t\tif (binding.canBeSeenBy(receiverType, invocationSite, this)) {", "+\t\t\t\t\tfound.add(binding);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b678703567aed7f0e943c85c178b9b23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\tif (receiverType.isArrayType())", "-\t\t\t\treturn findMethodForArray((ArrayBinding) receiverType, selector, argumentTypes, invocationSite);", "-\t", "+", "+\t\t\tcompilationUnitScope().recordTypeReference(receiverType);", "+\t\t\tif (receiverType.isArrayType())", "+\t\t\t\treturn findMethodForArray((ArrayBinding) receiverType, selector, argumentTypes, invocationSite);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba299e8f53fdf8d426ed94df44c75519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "f7ce86a79f082187bb9d131f12b4c9c140c05c32", "commitAfterChange": "908256095b93d8e1bbc7e5e244cc22e547564057", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  private MethodBinding getMethodBinding(ReferenceBinding type, TypeBinding[] argumentTypes)", "signatureAfterChange": "  private MethodBinding getMethodBinding(ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes)", "diff": ["-private MethodBinding getMethodBinding(ReferenceBinding type, TypeBinding[] argumentTypes) {", "-\tMethodBinding[] methods = type.getMethods(this.pattern.selector);", "+private MethodBinding getMethodBinding(ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes) {", "+\tMethodBinding[] methods = type.getMethods(methodName);"]}], "num": 49861}