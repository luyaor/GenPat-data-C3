{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0af0631115872a83104066f1c294235a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81cd818f14d19ad5e63d1d375e50036", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\t\t\t\tint ptr = this.sourceParser.astPtr;", "-\t\t\t\twhile (ptr >= 0) {", "-\t\t\t\t\tObject node = this.sourceParser.astStack[ptr];", "-\t\t\t\t\tif (node instanceof TypeDeclaration) {", "-\t\t\t\t\t\tTypeDeclaration typeDecl = (TypeDeclaration) node;", "-\t\t\t\t\t\tif (typeDecl.bodyEnd == 0) { // type declaration currenly parsed", "-\t\t\t\t\t\t\tname = typeDecl.name;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tptr--;", "+\t\t\t\tTypeDeclaration typeDecl = getParsedTypeDeclaration();", "+\t\t\t\tif (typeDecl != null) {", "+\t\t\t\t\tname = typeDecl.name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1fd39f89c3409e1c7e42c4dc2414bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "ade181db7356e902754c81dd9d71430c049ed0c1", "commitAfterChange": "c3fe471c0fdcefebf95bb7bbebd413b0a2c46646", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location, BlockScope locationScope)", "signatureAfterChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location, BlockScope locationScope)", "diff": ["-\t} else {", "-\t\tint size = this.trackingVariables.size();", "-\t\tfor (int i=0; i<size; i++) {", "-\t\t\tFakedTrackingVariable tracker = (FakedTrackingVariable) this.trackingVariables.get(i);", "-\t\t\ttracker.resetReportingBits();", "-\t\t}"]}], "num": 49065}