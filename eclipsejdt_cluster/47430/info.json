{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbfb3eb3689d2f13af5dd2dcf9049302", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00cfb9c8bcfc8bd2375fca569df790d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "240396375bcd308bc801defacd8d000d9826bf17", "commitAfterChange": "d24d28f1cf95d80c381c825283113e7b36dcb836", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": " \t \tvoid findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\tprivate void findConstructors(", "+\t", "+\tvoid findConstructors(", "-\t\tboolean forAnonymousType) {", "+\t\tboolean forAnonymousType,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems) {", "-\t\t\t\t\t\trelevance += computeRelevanceForResolution();", "-\t\t\t\t\t\trelevance += computeRelevanceForInterestingProposal();", "-\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);", "+\t\trelevance += computeRelevanceForResolution();", "+\t\trelevance += computeRelevanceForInterestingProposal();", "+\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);", "-\t\tfindConstructors(currentType, argTypes, scope, invocationSite, forAnonymousType, true, false, relevance);", "+\t\tif (missingElements != null) {", "+\t\t\trelevance += computeRelevanceForMissingElements(missingElementsHaveProblems);", "+\t\t}", "+\t\t", "+\t\tfindConstructors(", "+\t\t\t\tcurrentType,", "+\t\t\t\targTypes,", "+\t\t\t\tscope,", "+\t\t\t\tinvocationSite,", "+\t\t\t\tforAnonymousType,", "+\t\t\t\tmissingElements,", "+\t\t\t\tmissingElementsStarts,", "+\t\t\t\tmissingElementsEnds,", "+\t\t\t\tmissingElementsHaveProblems,", "+\t\t\t\ttrue,", "+\t\t\t\tfalse,", "+\t\t\t\trelevance);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14028e6609f025673effc8693b34eeb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "240396375bcd308bc801defacd8d000d9826bf17", "commitAfterChange": "d24d28f1cf95d80c381c825283113e7b36dcb836", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tprivate void findAnonymousType( \t\t\tReferenceBinding currentType, \t\t\tTypeBinding[] argTypes, \t\t\tScope scope, \t\t\tInvocationSite invocationSite)", "signatureAfterChange": " \tvoid findAnonymousType( \t\t\tReferenceBinding currentType, \t\t\tTypeBinding[] argTypes, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\tprivate void findAnonymousType(", "+\tvoid findAnonymousType(", "-\t\t\tInvocationSite invocationSite) {", "+\t\t\tInvocationSite invocationSite,", "+\t\t\tBinding[] missingElements,", "+\t\t\tint[] missingElementsStarts,", "+\t\t\tint[] missingElementsEnds,", "+\t\t\tboolean missingElementsHaveProblems) {", "-\t\tfindAnonymousType(currentType, argTypes, scope, invocationSite, true, false, relevance);", "+\t\tif (missingElements != null) {", "+\t\t\trelevance += computeRelevanceForMissingElements(missingElementsHaveProblems);", "+\t\t}", "+\t\t", "+\t\tfindAnonymousType(", "+\t\t\t\tcurrentType,", "+\t\t\t\targTypes,", "+\t\t\t\tscope,", "+\t\t\t\tinvocationSite,", "+\t\t\t\tmissingElements,", "+\t\t\t\tmissingElementsStarts,", "+\t\t\t\tmissingElementsEnds,", "+\t\t\t\tmissingElementsHaveProblems,", "+\t\t\t\ttrue,", "+\t\t\t\tfalse,", "+\t\t\t\trelevance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227cfb5694ab41a487bfcb7a1a545fe5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "10d0299472db75b0d2601fb1ed8fd13d430fef5a", "commitAfterChange": "1d1bcfc5dd72fdf22291e7342487bb93d58df5c4", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\tScope scope) {", "+\t\tScope scope,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems) {", "+\t\t\t", "+\t\t\tif (missingElements != null) {", "+\t\t\t\trelevance += computeRelevanceForMissingElements(missingElementsHaveProblems);", "+\t\t\t}", "-\t\t\tcreateTypeProposal(memberType, memberType.qualifiedSourceName(), IAccessRule.K_ACCESSIBLE, completionName, relevance);", "+\t\t\tcreateTypeProposal(", "+\t\t\t\t\tmemberType,", "+\t\t\t\t\tmemberType.qualifiedSourceName(),", "+\t\t\t\t\tIAccessRule.K_ACCESSIBLE,", "+\t\t\t\t\tcompletionName,", "+\t\t\t\t\trelevance,", "+\t\t\t\t\tmissingElements,", "+\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\tmissingElementsHaveProblems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "361315686131d63879519225e511fa79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "542ce5451500fe1306b92aaa9a7c04d8d83f7f3f", "commitAfterChange": "9cbf7e62288f060b33b2dc1c1d579dae84747012", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 79, "signatureBeforeChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "signatureAfterChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds)", "diff": ["-\t\tboolean canBePrefixed) {", "+\t\tboolean canBePrefixed,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds) {", "-\t\t\t\t\t\tcanBePrefixed);", "+\t\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\t\tmissingElements,", "+\t\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\t\tmissingElementsEnds);", "-\t\t\t\t\t\tcanBePrefixed);", "+\t\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\t\tmissingElements,", "+\t\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\t\tmissingElementsEnds);", "-\t\t\t\t\t\tcanBePrefixed);", "+\t\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\t\tmissingElements,", "+\t\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\t\tmissingElementsEnds);", "-\t\t\t\t\t\tcanBePrefixed);", "+\t\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\t\tmissingElements,", "+\t\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\t\tmissingElementsEnds);", "-\t\t\t\t\tcanBePrefixed);", "+\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\tmissingElements,", "+\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\tmissingElementsEnds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "390cd9d7a891a8f9d25770eaabe59c3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "10d0299472db75b0d2601fb1ed8fd13d430fef5a", "commitAfterChange": "1d1bcfc5dd72fdf22291e7342487bb93d58df5c4", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tboolean proposeAllMemberTypes, \t\tSourceTypeBinding typeToIgnore, \t\tObjectVector typesFound)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tboolean proposeAllMemberTypes, \t\tSourceTypeBinding typeToIgnore, \t\tObjectVector typesFound, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\tObjectVector typesFound) {", "+\t\tObjectVector typesFound,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems) {", "-\t\t\t\tscope);", "+\t\t\t\tscope,", "+\t\t\t\tmissingElements,", "+\t\t\t\tmissingElementsStarts,", "+\t\t\t\tmissingElementsEnds,", "+\t\t\t\tmissingElementsHaveProblems);", "-\t\t\t\tscope);", "+\t\t\t\tscope,", "+\t\t\t\tmissingElements,", "+\t\t\t\tmissingElementsStarts,", "+\t\t\t\tmissingElementsEnds,", "+\t\t\t\tmissingElementsHaveProblems);", "-\t\t\t\t\tscope);", "+\t\t\t\t\tscope,", "+\t\t\t\t\tmissingElements,", "+\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\tmissingElementsHaveProblems);"]}], "num": 47430}