{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0aca1371067459be6de38b9e3e2a1370", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d74226ac94c342af2684abc87d4dfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "signatureAfterChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "diff": ["-\t\t\t\t\t\tReferenceBinding binding2 = problemReferenceBinding.closestMatch();", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.TypeBinding binding2 = problemReferenceBinding.closestMatch();", "-\t\t\t\t\tif (this.isRecoveredBinding) {", "-\t\t\t\t\t\tITypeBinding binding = (ITypeBinding) this.bindingTables.compilerBindingsToASTBindings.get(referenceBinding);", "-\t\t\t\t\t\tif (binding != null) {", "-\t\t\t\t\t\t\treturn binding;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbinding = new RecoveredTypeBinding(this, referenceBinding);", "-\t\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(referenceBinding, binding);", "+\t\t\t\t\tITypeBinding binding = (ITypeBinding) this.bindingTables.compilerBindingsToASTBindings.get(referenceBinding);", "+\t\t\t\t\tif (binding != null) {", "+\t\t\t\t\tif ((referenceBinding.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\t\tbinding = new TypeBinding(this, referenceBinding);", "+\t\t\t\t\t} else if (this.isRecoveringBindings) {", "+\t\t\t\t\t\tbinding = new RecoveredTypeBinding(this, referenceBinding);", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(referenceBinding, binding);", "+\t\t\t\t\treturn binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3847fd974efd3de0ca56c312160e342d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "432a9d5974b55509eb3dfbf8ecd190ef7ce8af61", "commitAfterChange": "6babe48369a471c3e35e8fc01b1af25fdd70c8bf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tprivate void addInnerClasses(ReferenceBinding refBinding)", "signatureAfterChange": "  \tpublic void recordInnerClasses(TypeBinding binding)", "diff": ["-\t */", "-\tprivate void addInnerClasses(ReferenceBinding refBinding) {", "-\t\t// check first if that reference binding is there", "-\t\tfor (int i = 0; i < numberOfInnerClasses; i++) {", "-\t\t\tif (innerClassesBindings[i] == refBinding)", "-\t\t\t\treturn;", "-\t\t}", "-\t\tint length = innerClassesBindings.length;", "-\t\tif (numberOfInnerClasses == length) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tinnerClassesBindings,", "-\t\t\t\t0,", "-\t\t\t\tinnerClassesBindings = new ReferenceBinding[length * 2],", "-\t\t\t\t0,", "-\t\t\t\tlength);", "-\t\t}", "-\t\tinnerClassesBindings[numberOfInnerClasses++] = refBinding;", "-\t}", "+\tpublic void recordInnerClasses(TypeBinding binding) {", "+\t\tif (this.innerClassesBindings == null) {", "+\t\t\tthis.innerClassesBindings = new HashSet(INNER_CLASSES_SIZE);", "+\t\tReferenceBinding innerClass = (ReferenceBinding) binding;", "+\t\tthis.innerClassesBindings.add(innerClass.erasure());", "+\t\tReferenceBinding enclosingType = innerClass.enclosingType();", "+\t\twhile (enclosingType != null", "+\t\t\t\t&& enclosingType.isNestedType()) {", "+\t\t\tthis.innerClassesBindings.add(enclosingType.erasure());", "+\t\t\tenclosingType = enclosingType.enclosingType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb150a12005acea277d8c0309e845acc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "b420bfdd4a859691c7aeac5921ac84f8a5db1f18", "commitAfterChange": "6cf1783794eb1a6e5e7c6e98927f2c861618e7ac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprivate String getInternalName()", "signatureAfterChange": "  \tprivate String getInternalName()", "diff": ["-\t\t} else if (this.referenceBinding != null) {", "-\t\t\torg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding typeBinding = null;", "-\t\t\tif (this.referenceBinding.isArrayType()) {", "-\t\t\t\tArrayBinding arrayBinding = (ArrayBinding) this.referenceBinding;", "-\t\t\t\tif (arrayBinding.leafComponentType instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) {", "-\t\t\t\t\ttypeBinding = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) arrayBinding.leafComponentType;", "-\t\t\t\t}", "-\t\t\t} else if (this.referenceBinding instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) {", "-\t\t\t\ttypeBinding = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) this.referenceBinding;", "-\t\t\t}", "-\t\t\tif (typeBinding != null) {", "-\t\t\t\treturn new String(typeBinding.compoundName[typeBinding.compoundName.length - 1]);", "-\t\t\t}", "+\t\t}", "+\t\tReferenceBinding referenceBinding = getReferenceBinding();", "+\t\tif (referenceBinding != null) {", "+\t\t\treturn new String(referenceBinding.compoundName[referenceBinding.compoundName.length - 1]);"]}], "num": 46859}