{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f97c010b8fa6d4c177f55dcbe89a981", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1a943f83064ddcfd76790f7c0e3973", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "67be753fec1b8f88653e28d3d4d4837dd29cdece", "commitAfterChange": "c76b87d837ed14384819cb84439501329f23edce", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \t\r \tpublic Expression convert(ThisReference reference)", "signatureAfterChange": "\r \t\r \tpublic Expression convert(ThisReference reference)", "diff": ["-\t\tif (reference instanceof QualifiedThisReference) {\r", "-\t\t\treturn convert((QualifiedThisReference) reference);\r", "-\t\t}\r", "-\t\tif (reference instanceof QualifiedSuperReference) {\r", "-\t\t\treturn convert((QualifiedSuperReference) reference);\r", "-\t\t}\r", "-\t\t} else {\r", "+\t\t} else if (reference instanceof QualifiedSuperReference) {\r", "+\t\t\treturn convert((QualifiedSuperReference) reference);\r", "+\t\t} else if (reference instanceof QualifiedThisReference) {\r", "+\t\t\treturn convert((QualifiedThisReference) reference);\r", "+\t\t}  else {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d375513aab6a46ba2d152c3a5b6ff64f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "ce0032759c3236d2ea392944fcdfb033987155c8", "commitAfterChange": "5033818fa872fa58eee8c84922d0bad01293db14", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["+\r", "-\t\t}\r", "-\t\tif (receiver == ThisReference.ThisImplicit  \r", "+\r", "+\t\t} else if (receiver == ThisReference.ThisImplicit  \r", "-\t\t}\r", "-\t\tif (receiver instanceof QualifiedSuperReference){ // qualified super\r", "+\r", "+\t\t} else if (receiver instanceof QualifiedThisReference){ // qualified this\r", "+\t\t\tSourceTypeBinding destinationType = (SourceTypeBinding)(((QualifiedThisReference)receiver).currentCompatibleType);\r", "+\t\t\tsyntheticAccessor = destinationType.addSyntheticMethod(binding);\r", "+\t\t\tcurrentScope.problemReporter().needToEmulateMethodAccess(binding, this);\r", "+\r", "+\t\t} else if (receiver instanceof QualifiedSuperReference){ // qualified super\r"]}], "num": 10416}