{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21d66ed0d311848595311bbd2c34efe0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1649cc816e3eb5f8e689cd53ea3d9a84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "9472bfacff21c9d9f09b03418005cc2657c071a6", "commitAfterChange": "a5ef8162429fa8120bc2dd5c589852474e7d47df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\t\t// Static interface methods can be explicitly invoked only through the type reference of the declaring interface or implicitly in the interface itself.", "+\t\t// Static interface methods can be explicitly invoked only through the type reference of the declaring interface or implicitly in the interface itself or via static import.", "-\t\tif (invocationSite.isTypeAccess() && TypeBinding.equalsEquals(receiverType, this.declaringClass))", "-\t\t\treturn true;", "-\t\tif (invocationSite.receiverIsImplicitThis() && TypeBinding.equalsEquals(invocationType, this.declaringClass))", "+\t\tif ((invocationSite.isTypeAccess() || invocationSite.receiverIsImplicitThis()) && TypeBinding.equalsEquals(receiverType, this.declaringClass))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5a009b7150295b733a842e0c35fddf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "8c67d56825136ce0d7026162576ad6997e930bdc", "commitAfterChange": "0b88f9a0bb1950edae0865a8658608a49edfc445", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\tif (isPublic()) return true;", "+\tif (this.declaringClass.isInterface() && isStatic()) {", "+\t\t// Static interface methods can be explicitly invoked only through the type reference of the declaring interface or implicitly in the interface itself.", "+\t\tif (scope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_8 || !(invocationSite instanceof MessageSend))", "+\t\t\treturn false;", "+\t\tMessageSend messageSend = (MessageSend) invocationSite;", "+\t\tif (messageSend.isTypeAccess() && receiverType == this.declaringClass)", "+\t\t\treturn true;", "+\t\tif (messageSend.receiver.isImplicitThis() && invocationType == this.declaringClass)", "+\t\t\treturn true;", "+\t\treturn false;", "+\t}", "+\t", "+\tif (isPublic()) return true;", "+\t", "+"]}], "num": 53759}