{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9da25c2bf63d7f5fd9f0da00b0cc3eb4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36cfa43cd18500f3d9c4ca75c4546d34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "3a52394f0d22844465ca678eae001b22da348629", "commitAfterChange": "204668dea8f27b8498b13996f1332d4610d869bb", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void testContainerInitializer17() throws CoreException", "signatureAfterChange": " public void testContainerInitializer17() throws CoreException", "diff": ["-\t\t\t\t", "+\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P3\", \"/P1/lib.jar\"}));", "+\t\tcreateJavaProject(", "+\t\t\t\t\"P3\", ", "+\t\t\t\tnew String[] {}, ", "+\t\t\t\tnew String[] {\"org.eclipse.jdt.core.tests.model.TEST_CONTAINER\"}, ", "+\t\t\t\t\"\");", "-\t\t// simulate concurrency (another thread is initializing all containers in parallel and thus this flag is set to false)", "-\t\tJavaModelManager.getJavaModelManager().deltaState.rootsAreStale = false;", "-\t\t", "-\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\"}));", "-\t\tContainerInitializer.initializer.initialize(new Path(\"org.eclipse.jdt.core.tests.model.TEST_CONTAINER\"), p2);", "+\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\"}) {", "+\t        public void initialize(IPath containerPath, IJavaProject project) throws CoreException {", "+\t        \t// simulate concurrency (another thread is initializing all containers in parallel and thus this flag is set to true)", "+\t        \tJavaModelManager.getJavaModelManager().batchContainerInitializations = true;", "+\t            super.initialize(containerPath, project);", "+\t        }", "+\t\t});", "+\t\tp2.getResolvedClasspath(true);", "+\t\tdeleteProject(\"P3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a235af073ef169b176f994aeda3252", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "commitAfterChange": "1681420a49895c71b06fecf2cdaa16ab79145282", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \t \tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tif (container == null) { // initializer failed to do its job: redirect to the failure container", "-\t\t\t\tClasspathContainerInitializer initializer = JavaCore.getClasspathContainerInitializer(containerPath.segment(0));", "-\t\t\t\tif (initializer == null) {", "-\t\t\t\t\t// create a dummy initializer and get the default failure container", "-\t\t\t\t\tcontainer = (new ClasspathContainerInitializer() {", "-\t\t\t\t\t\tpublic void initialize(IPath path, IJavaProject javaProject) throws CoreException {", "-\t\t\t\t\t\t\t// not used", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}).getFailureContainer(containerPath, project);", "-\t\t\t\t} else {", "-\t\t\t\t\tcontainer = initializer.getFailureContainer(containerPath, project);", "-\t\t\t\t}", "-\t\t\t\tif (container != null)", "-\t\t\t\t\tcontainerPut(project, containerPath, container);", "-\t\t\t}"]}], "num": 31803}