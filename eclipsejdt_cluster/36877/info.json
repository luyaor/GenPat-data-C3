{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0b2b62ede948a9afc9cd6bec7934433", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d30c06380a5ebb390e1449565e5f47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic TypeReference copyDims(int dim, Annotation[][] annotationsOnDimensions)", "signatureAfterChange": "  \tpublic TypeReference augmentTypeWithAdditionalDimensions(int additionalDimensions, Annotation[][] additionalAnnotations, boolean isVarargs)", "diff": ["-\t", "-\tpublic TypeReference copyDims(int dim, Annotation[][] annotationsOnDimensions){", "-\t\t//return a type reference copy of me with some dimensions", "-\t\t//warning : the new type ref has a null binding", "-\t\tArrayTypeReference arrayTypeReference = new ArrayTypeReference(this.token, dim, annotationsOnDimensions, (((long)this.sourceStart)<<32)+this.sourceEnd);", "+\tpublic TypeReference augmentTypeWithAdditionalDimensions(int additionalDimensions, Annotation[][] additionalAnnotations, boolean isVarargs) {", "+\t\tint totalDimensions = this.dimensions() + additionalDimensions;", "+\t\tAnnotation [][] allAnnotations = getMergedAnnotationsOnDimensions(additionalDimensions, additionalAnnotations);", "+\t\tArrayTypeReference arrayTypeReference = new ArrayTypeReference(this.token, totalDimensions, allAnnotations, (((long) this.sourceStart) << 32) + this.sourceEnd);", "-\t\tif (annotationsOnDimensions != null) {", "-\t\t\tarrayTypeReference.bits |= ASTNode.HasTypeAnnotations;", "-\t\t}", "+\t\tif (!isVarargs)", "+\t\t\tarrayTypeReference.extendedDimensions = additionalDimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4faa61303ac6131efda4b31699c10867", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic TypeReference copyDims(int dim, Annotation [][] annotationsOnDims)", "signatureAfterChange": " \t \tpublic TypeReference augmentTypeWithAdditionalDimensions(int additionalDimensions, Annotation [][] additionalAnnotations, boolean isVarargs)", "diff": ["-\t}", "-\tpublic TypeReference copyDims(int dim, Annotation [][] annotationsOnDims) {", "-\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference = new ParameterizedSingleTypeReference(this.token, this.typeArguments, dim, annotationsOnDims, (((long)this.sourceStart)<<32)+this.sourceEnd);", "+\t", "+\tpublic TypeReference augmentTypeWithAdditionalDimensions(int additionalDimensions, Annotation [][] additionalAnnotations, boolean isVarargs) {", "+\t\tint totalDimensions = this.dimensions() + additionalDimensions;", "+\t\tAnnotation [][] allAnnotations = getMergedAnnotationsOnDimensions(additionalDimensions, additionalAnnotations);", "+\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference = new ParameterizedSingleTypeReference(this.token, this.typeArguments, totalDimensions, allAnnotations, (((long) this.sourceStart) << 32) + this.sourceEnd);", "-\t\tif (annotationsOnDims != null) {", "-\t\t\tparameterizedSingleTypeReference.bits |= ASTNode.HasTypeAnnotations;", "-\t\t}", "+\t\tif (!isVarargs)", "+\t\t\tparameterizedSingleTypeReference.extendedDimensions = additionalDimensions;"]}], "num": 36877}