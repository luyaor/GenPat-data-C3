{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c89e1e464cced57b01067aeec73b6fa0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a0ab975707647553d9c4c1d7f726a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "ea035aff9493ec8381c8d6bd9548845ad9f81e22", "commitAfterChange": "3c8b95412c50bb73a8372fbf9db9df68231cc311", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t \tprivate int generateRuntimeAnnotationsForParameters(Argument[] arguments)", "signatureAfterChange": " \t \tprivate int generateRuntimeAnnotationsForParameters(Argument[] arguments)", "diff": ["+\t\tAnnotation annotation;", "-\t\t\t\t\tAnnotation annotation = annotations[j];", "+\t\t\t\t\tif ((annotation = annotations[j].getPersistibleAnnotation()) == null) continue; // already packaged into container.", "-\t\t\t\t\t\t\tAnnotation annotation = annotations[j];", "+\t\t\t\t\t\t\tif ((annotation = annotations[j].getPersistibleAnnotation()) == null) continue; // already packaged into container.", "-\t\t\t\t\t\t\tAnnotation annotation = annotations[j];", "+\t\t\t\t\t\t\tif ((annotation = annotations[j].getPersistibleAnnotation()) == null) continue; // already packaged into container."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3853ed9896a8db53c577116b9caeceb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "ea035aff9493ec8381c8d6bd9548845ad9f81e22", "commitAfterChange": "3c8b95412c50bb73a8372fbf9db9df68231cc311", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations, final boolean includeTypeUseAnnotations)", "signatureAfterChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations, final boolean includeTypeUseAnnotations)", "diff": ["-", "+\t\tAnnotation annotation;", "-\t\t\tAnnotation annotation = annotations[i];", "+\t\t\tif ((annotation = annotations[i].getPersistibleAnnotation()) == null) continue; // already packaged into container.", "-\t\t\t\tAnnotation annotation = annotations[i];", "+\t\t\t\tif ((annotation = annotations[i].getPersistibleAnnotation()) == null) continue; // already packaged into container.", "-\t\t\t\tAnnotation annotation = annotations[i];", "+\t\t\t\tif ((annotation = annotations[i].getPersistibleAnnotation()) == null) continue; // already packaged into container."]}], "num": 25543}