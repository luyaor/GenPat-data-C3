{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f5a93879cae43257313af22a83b9960", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15bd2e1366011caa43ba45889b89ceda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "c971e90f6253c316742413b3a46478447b02a85a", "commitAfterChange": "396d47b23135e9fb3aaeb3d8f844ebea73195461", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "            \tprivate List<AnnotationProcessorFactory> loadFactories( List<FactoryContainer> containers, IJavaProject project )", "signatureAfterChange": "            \tprivate List<AnnotationProcessorFactory> loadFactories( List<FactoryContainer> containers, IJavaProject project )", "diff": ["-\t\t\tList<AnnotationProcessorFactory> f = loadFactoryClasses( fc, classLoader );", "-\t\t\tfor ( AnnotationProcessorFactory apf : f )", "-\t\t\t\tfactories.add( apf  );", "+\t\t\ttry {", "+\t\t\t\tList<AnnotationProcessorFactory> f = loadFactoryClasses( fc, classLoader );", "+\t\t\t\tfor ( AnnotationProcessorFactory apf : f )", "+\t\t\t\t\tfactories.add( apf  );", "+\t\t\t}", "+\t\t\tcatch (FileNotFoundException fnfe) {", "+\t\t\t\tAptPlugin.log(fnfe, Messages.AnnotationProcessorFactoryLoader_jarNotFound + fnfe.getLocalizedMessage());", "+\t\t\t}", "+\t\t\tcatch (IOException ioe) {", "+\t\t\t\tAptPlugin.log(ioe, Messages.AnnotationProcessorFactoryLoader_ioError + ioe.getLocalizedMessage());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adfbfa68d726d9a9b0c4c52018a58d03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "2090b5298a9eb5bc7687aac3bc306c4718d688bb", "commitAfterChange": "7549708bfbb6541d509ec2f74894b85fedbf2954", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void loadFactoriesFromJars()", "signatureAfterChange": "      \tprivate void loadFactories( List<AnnotationProcessorFactory> factories, List<FactoryContainer> containers )", "diff": ["+    ", "+\tprivate void loadFactories( List<AnnotationProcessorFactory> factories, List<FactoryContainer> containers )", "+\t{", "+\t\tClassLoader classLoader = createClassLoader( containers );", "+\t\tfor ( FactoryContainer fc : containers )", "+\t\t{", "+\t\t\tList<AnnotationProcessorFactory> f = loadFactoryClasses( fc, classLoader );", "+\t\t\tfor ( AnnotationProcessorFactory apf : f )", "+\t\t\t\tfactories.add( apf  );", "+\t\t}", "+\t}", "-\t */", "-\tpublic void loadFactoriesFromJars() {", "-\t\t_factories.clear();", "-\t\t// TODO: get these values somehow", "-\t\tfinal String factoryClassName = null;", "-\t\tfinal File[] factoryPaths = new File[0];", "-\t\t_loadFromJars(factoryClassName, factoryPaths);", "-\t}"]}], "num": 21990}