{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5701e6b18f9097179de523b240c1f571", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a76073861914fdf9fc4d9762dcc868b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "6a334dc5fecea4de0ff36632e86ab211afcbc8f2", "commitAfterChange": "0211d10f15ff71cc5af2cdfdea11b787fd76fc0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprivate void computeCorrections(ICompilationUnit unit, int id, int start, int end, String[] arguments, ICorrectionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r \tpublic void computeCorrections(IProblem problem, ICompilationUnit targetUnit, ICorrectionRequestor requestor) throws JavaModelException", "diff": ["+\t */\r", "+\tpublic void computeCorrections(IProblem problem, ICompilationUnit targetUnit, ICorrectionRequestor requestor) throws JavaModelException {\r", "+\t\tif (requestor == null) {\r", "+\t\t\tthrow new IllegalArgumentException(Util.bind(\"correction.nullUnit\")); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tthis.computeCorrections(\r", "+\t\t\ttargetUnit, problem.getID(), \r", "+\t\t\tproblem.getSourceStart(), \r", "+\t\t\tproblem.getSourceEnd(), \r", "+\t\t\tproblem.getArguments(),\r", "+\t\t\trequestor);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e74cc7e336ee0b37fd8c9e072160e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void codeComplete(int offset, ICompletionRequestor requestor, WorkingCopyOwner workingCopyOwner) throws JavaModelException", "signatureAfterChange": " public void codeComplete(int offset, ICompletionRequestor requestor, WorkingCopyOwner workingCopyOwner) throws JavaModelException", "diff": ["-\tcodeComplete(this, isWorkingCopy() ? (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) getOriginalElement() : this, offset, requestor, workingCopyOwner);", "+\tif (requestor == null) {", "+\t\tthrow new IllegalArgumentException(\"Completion requestor cannot be null\"); //$NON-NLS-1$", "+\t}", "+\tcodeComplete(offset, new CompletionRequestorWrapper(requestor), workingCopyOwner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7632fc529b66c33a745b3ce57635877", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner workingCopyOwner) throws JavaModelException", "signatureAfterChange": " public void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner workingCopyOwner) throws JavaModelException", "diff": ["-\tcodeComplete(this, isWorkingCopy() ? (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) getOriginalElement() : this, offset, requestor, workingCopyOwner);", "+\tcodeComplete(", "+\t\t\tthis,", "+\t\t\tisWorkingCopy() ? (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) getOriginalElement() : this,", "+\t\t\toffset,", "+\t\t\trequestor,", "+\t\t\tworkingCopyOwner,", "+\t\t\tthis);"]}], "num": 20643}