{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a7029835d4b1555d1c3f89c5c38f424", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "000cdbde3fa11a45bf7b87cfde1ded7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "aa3a93ccc3206cb1748c8a2362c7163309a5a4d8", "commitAfterChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic boolean visit(UnaryExpression unaryExpression, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(UnaryExpression unaryExpression, BlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\t}", "-\t\tif (this.preferences.insert_space_after_unary_operator) this.scribe.space();", "+\t\tif (this.preferences.insert_space_after_unary_operator) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "037ce45373c03537530d84814d57fbee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "  ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\tif (answer.isBinaryType())", "+\tif (answer.isBinaryType()) {", "-\telse if (answer.isCompilationUnit())", "+\t} else if (answer.isCompilationUnit()) {", "-\telse if (answer.isSourceType())", "+\t} else if (answer.isSourceType()) {", "-", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f77bd7e36945e38fb3b55c74d0d3cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyArgument, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstArgument,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma)", "signatureAfterChange": "  \tpublic void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyArgument, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstArgument,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma)", "diff": ["-\t\t\t\t\tif (spaceBeforeFirstArgument) this.scribe.space();", "+\t\t\t\t\tif (spaceBeforeFirstArgument) {", "+\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t}", "-\t\t\t\t\t\tif (i > 0) this.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, spaceBeforeComma);", "+\t\t\t\t\t\tif (i > 0) {", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, spaceBeforeComma);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (i > 0 && spaceAfterComma) this.scribe.space();", "+\t\t\t\t\t\tif (i > 0 && spaceAfterComma) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4da7167205daee4ab2a81403ec9151", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "signatureAfterChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "diff": ["-\t\tif (newLineBeforeChunk > 0) this.scribe.printNewLines(newLineBeforeChunk);", "-", "+\t\tif (newLineBeforeChunk > 0) {", "+\t\t\tthis.scribe.printNewLines(newLineBeforeChunk);", "+\t\t}", "-\t\tif (newLinesBeforeField > 0) this.scribe.printNewLines(newLinesBeforeField);", "-", "+\t\tif (newLinesBeforeField > 0) {", "+\t\t\tthis.scribe.printNewLines(newLinesBeforeField);", "+\t\t}", "-\t\tif (multiFieldDeclaration.declarations[0].modifiers != NO_MODIFIERS) this.scribe.printModifiers();", "-", "+\t\tif (multiFieldDeclaration.declarations[0].modifiers != NO_MODIFIERS) {", "+\t\t\tthis.scribe.printModifiers();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c53c2cab9233aab4d40feba35998388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic boolean visit(PrefixExpression prefixExpression, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(PrefixExpression prefixExpression, BlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(prefixExpression, numberOfParens);", "-\t\t", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(prefixExpression, numberOfParens);", "+\t\t}", "-\t\tif (this.preferences.insert_space_after_prefix_operator) this.scribe.space();", "-", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(prefixExpression, numberOfParens);", "+\t\tif (this.preferences.insert_space_after_prefix_operator) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(prefixExpression, numberOfParens);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ced8b9e7eea2b1860a2c493a3635716", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "diff": ["-\t\t\t\t\tif (this.preferences.insert_space_within_message_send) this.scribe.space();", "+\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t}", "-\t\t\t\t\t\tif (i > 0) this.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_explicitconstructorcall_arguments);", "+\t\t\t\t\t\tif (i > 0) {", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_explicitconstructorcall_arguments);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (i > 0 && this.preferences.insert_space_after_comma_in_explicitconstructorcall_arguments) this.scribe.space();", "+\t\t\t\t\t\tif (i > 0 && this.preferences.insert_space_after_comma_in_explicitconstructorcall_arguments) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a324d7c600d50b6ab068bf05497a6515", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "signatureAfterChange": "  \tpublic void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "diff": ["-\t\t\t\t\tif (this.preferences.insert_space_within_message_send) this.scribe.space();", "+\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t}", "-\t\t\t\t\t\tif (i > 0) this.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_messagesend_arguments);", "+\t\t\t\t\t\tif (i > 0) {", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_messagesend_arguments);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (i > 0 && this.preferences.insert_space_after_comma_in_messagesend_arguments) this.scribe.space();", "+\t\t\t\t\t\tif (i > 0 && this.preferences.insert_space_after_comma_in_messagesend_arguments) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b74e8b5f81d1375127c0567e26b073e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\t \t \tprivate void format(FieldDeclaration fieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "signatureAfterChange": "\t \t \tprivate void format(FieldDeclaration fieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "diff": ["-\t\tif (newLineBeforeChunk > 0) this.scribe.printNewLines(newLineBeforeChunk);", "-", "+\t\tif (newLineBeforeChunk > 0) {", "+\t\t\tthis.scribe.printNewLines(newLineBeforeChunk);", "+\t\t}", "-\t\tif (newLinesBeforeField > 0) this.scribe.printNewLines(newLinesBeforeField);", "-", "+\t\tif (newLinesBeforeField > 0) {", "+\t\t\tthis.scribe.printNewLines(newLinesBeforeField);", "+\t\t}", "-\t\tif (fieldDeclaration.modifiers != NO_MODIFIERS) this.scribe.printModifiers();", "-", "+\t\tif (fieldDeclaration.modifiers != NO_MODIFIERS) {", "+\t\t\tthis.scribe.printModifiers();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccefc7eb16e30baa75a33df906344c09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompoundAssignment compoundAssignment, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompoundAssignment compoundAssignment, \t\tBlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(compoundAssignment, numberOfParens);", "-\t\t", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(compoundAssignment, numberOfParens);", "+\t\t}", "-\t\tif (this.preferences.insert_space_after_assignment_operators) this.scribe.space();", "-", "+\t\tif (this.preferences.insert_space_after_assignment_operators) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(compoundAssignment, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(compoundAssignment, numberOfParens);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f78db103023957f482aa5f5765124e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic boolean visit( \t\tPostfixExpression postfixExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tPostfixExpression postfixExpression, \t\tBlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(postfixExpression, numberOfParens);", "-", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(postfixExpression, numberOfParens);", "+\t\t}", "-\t\tif (this.preferences.insert_space_after_postfix_operator) this.scribe.space();", "-\t\t", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(postfixExpression, numberOfParens);", "+\t\tif (this.preferences.insert_space_after_postfix_operator) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(postfixExpression, numberOfParens);", "+\t\t}"]}], "num": 46967}