{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c267cfe4726ca88e7f4366daeac17e67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45dc9e8d2b6f9b304cbfb5acb73b26e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "2e56c16c054ee89ad0380a5a606694122f7187a1", "commitAfterChange": "9120b6c49a4b36e25b20147789ffde03aca85f97", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(SwitchStatement node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(SwitchStatement node)", "diff": ["+\t\t\t\tboolean isBreaking = statement instanceof BreakStatement || statement instanceof ReturnStatement", "+\t\t\t\t\t\t|| statement instanceof ContinueStatement || statement instanceof Block;", "+\t\t\t\tif (isBreaking)", "+\t\t\t\t\taddEmptyLineTokenAfter(this.tm.lastIndexIn(statement, -1));", "-\t\t\t\tboolean isBreaking = statement instanceof BreakStatement || statement instanceof ReturnStatement", "-\t\t\t\t\t\t|| statement instanceof ContinueStatement || statement instanceof Block;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb73ff5bad6c671fd134a7b51757f717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "8e16662f0ac598c8bd5851163f51568635e8acf6", "commitAfterChange": "7623f33d78c73547935e2e7601bcf7662d1f5c36", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(SwitchStatement node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(SwitchStatement node)", "diff": ["-\t\t\t\tnonBreakStatementEnd = (statement instanceof BreakStatement || statement instanceof ReturnStatement)", "-\t\t\t\t\t\t? -1 : this.tm.lastIndexIn(statement, -1);", "+\t\t\t\tboolean isBreaking = statement instanceof BreakStatement || statement instanceof ReturnStatement", "+\t\t\t\t\t\t|| statement instanceof ContinueStatement || statement instanceof Block;", "+\t\t\t\tnonBreakStatementEnd = isBreaking ? -1 : this.tm.lastIndexIn(statement, -1);"]}], "num": 15416}