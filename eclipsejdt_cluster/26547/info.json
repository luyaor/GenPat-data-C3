{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9149cb6bca501dac7fda23b22c9815f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a3e400662977350627279bcbe8469ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void testTypeParameter4() throws CoreException", "signatureAfterChange": " public void testTypeParameter4() throws CoreException", "diff": ["-\tICompilationUnit workingCopy = null;", "-\ttry {", "-\t\tworkingCopy = workingCopy(", "-\t\t\t\"package p;\\n\" +", "-\t\t\t\"public class Y<T extends List & Runnable & Comparable> {\\n\" +", "-\t\t\t\"}\"", "-\t\t);", "-\t\tITypeParameter[] typeParameters = workingCopy.getType(\"Y\").getTypeParameters();", "-\t\tassertTypeParametersEqual(", "-\t\t\t\"T extends List & Runnable & Comparable\\n\",", "-\t\t\ttypeParameters);", "-\t} finally {", "-\t\tif (workingCopy != null)", "-\t\t\tworkingCopy.discardWorkingCopy();", "-\t}", "+\tcreateWorkingCopy(", "+\t\t\"package p;\\n\" +", "+\t\t\"public class Y<T extends List & Runnable & Comparable> {\\n\" +", "+\t\t\"}\"", "+\t);", "+\tITypeParameter[] typeParameters = workingCopy.getType(\"Y\").getTypeParameters();", "+\tassertTypeParametersEqual(", "+\t\t\"T extends List & Runnable & Comparable\\n\",", "+\t\ttypeParameters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7122f83922690367ec506301f91438d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void testTypeParameter5() throws CoreException", "signatureAfterChange": " public void testTypeParameter5() throws CoreException", "diff": ["-\tICompilationUnit workingCopy = null;", "-\ttry {", "-\t\tworkingCopy = workingCopy(", "-\t\t\t\"package p;\\n\" +", "-\t\t\t\"public class Y {\\n\" +", "-\t\t\t\"  <T extends List, U extends X & Runnable> void foo() {\\n\" +", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"}\"", "-\t\t);", "-\t\tITypeParameter[] typeParameters = workingCopy.getType(\"Y\").getMethod(\"foo\", new String[]{}).getTypeParameters();", "-\t\tassertTypeParametersEqual(", "-\t\t\t\"T extends List\\n\" + ", "-\t\t\t\"U extends X & Runnable\\n\",", "-\t\t\ttypeParameters);", "-\t} finally {", "-\t\tif (workingCopy != null)", "-\t\t\tworkingCopy.discardWorkingCopy();", "-\t}", "-}", "+\tcreateWorkingCopy(", "+\t\t\"package p;\\n\" +", "+\t\t\"public class Y {\\n\" +", "+\t\t\"  <T extends List, U extends X & Runnable> void foo() {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"}\"", "+\t);", "+\tITypeParameter[] typeParameters = workingCopy.getType(\"Y\").getMethod(\"foo\", new String[]{}).getTypeParameters();", "+\tassertTypeParametersEqual(", "+\t\t\"T extends List\\n\" + ", "+\t\t\"U extends X & Runnable\\n\",", "+\t\ttypeParameters);"]}], "num": 26547}