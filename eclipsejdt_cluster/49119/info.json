{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1058d64ebf563db64e6adbd72c9efeab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f724e942715b37e7d8ed7c5ed77327", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "31d45554331a458304a632ad1dfc3ad3337a9ef2", "commitAfterChange": "d366f5f433c7fe59db354d2a1495faa1439a1057", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " public void testGetTypeSignatureKind2()", "signatureAfterChange": " public void testGetTypeSignatureKind2()", "diff": ["+\tassertEquals(", "+\t\t\"Signature#getTypeSignatureKind(char[]) is not correct 22\", ", "+\t\tSignature.WILDCARD_TYPE_SIGNATURE,", "+\t\tSignature.getTypeSignatureKind(\"*\".toCharArray()));", "+\tassertEquals(", "+\t\t\"Signature#getTypeSignatureKind(char[]) is not correct 23\", ", "+\t\tSignature.WILDCARD_TYPE_SIGNATURE,", "+\t\tSignature.getTypeSignatureKind(\"-Ljava.lang.Object;\".toCharArray()));", "+\tassertEquals(", "+\t\t\"Signature#getTypeSignatureKind(char[]) is not correct 24\", ", "+\t\tSignature.WILDCARD_TYPE_SIGNATURE,", "+\t\tSignature.getTypeSignatureKind(\"+Ljava.lang.Object;\".toCharArray()));", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d962bba66ba48810f4258a7e658461f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "31d45554331a458304a632ad1dfc3ad3337a9ef2", "commitAfterChange": "d366f5f433c7fe59db354d2a1495faa1439a1057", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public void testGetTypeSignatureKind()", "signatureAfterChange": " public void testGetTypeSignatureKind()", "diff": ["+\tassertEquals(", "+\t\t\"Signature#getTypeSignatureKind(char[]) is not correct 22\", ", "+\t\tSignature.WILDCARD_TYPE_SIGNATURE,", "+\t\tSignature.getTypeSignatureKind(\"*\"));", "+\tassertEquals(", "+\t\t\"Signature#getTypeSignatureKind(char[]) is not correct 23\", ", "+\t\tSignature.WILDCARD_TYPE_SIGNATURE,", "+\t\tSignature.getTypeSignatureKind(\"-Ljava.lang.Object;\"));", "+\tassertEquals(", "+\t\t\"Signature#getTypeSignatureKind(char[]) is not correct 24\", ", "+\t\tSignature.WILDCARD_TYPE_SIGNATURE,", "+\t\tSignature.getTypeSignatureKind(\"+Ljava.lang.Object;\"));"]}], "num": 49119}