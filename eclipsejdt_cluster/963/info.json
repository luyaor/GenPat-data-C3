{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d768f2db2187a88b497ed9c148d01236", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1befcd0e32d5eceacbf80e00888c04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "fe8f03030c996e7f3abaa101bf62fc6c88122090", "commitAfterChange": "6d1faf59eca3993e15acf1ea89971443445f40e5", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic MethodBinding getStaticFactory (ParameterizedTypeBinding allocationType, ReferenceBinding originalEnclosingType, TypeBinding[] argumentTypes, final InvocationSite allocationSite)", "signatureAfterChange": " \tpublic MethodBinding getStaticFactory (ParameterizedTypeBinding allocationType, ReferenceBinding originalEnclosingType, TypeBinding[] argumentTypes, final InvocationSite allocationSite)", "diff": ["-\t\t\t\tmap.put(original, staticFactory.typeVariables[j] = new TypeVariableBinding(CharOperation.concat(original.sourceName, prime.toCharArray()),", "+\t\t\t\tmap.put(original.unannotated(), staticFactory.typeVariables[j] = new TypeVariableBinding(CharOperation.concat(original.sourceName, prime.toCharArray()),", "-\t\t\t\tmap.put(methodTypeVariables[k], ", "+\t\t\t\tmap.put(methodTypeVariables[k].unannotated(), ", "-\t\t\t\t\t\tTypeBinding retVal = (TypeBinding) map.get(typeVariable);", "+\t\t\t\t\t\tTypeBinding retVal = (TypeBinding) map.get(typeVariable.unannotated());", "-\t\t\t\tTypeVariableBinding substitutedVariable = (TypeVariableBinding) map.get(originalVariable);", "+\t\t\t\tTypeVariableBinding substitutedVariable = (TypeVariableBinding) map.get(originalVariable.unannotated());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55d40ebefdeb82e7db2d3b37b90fe970", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "f9fd97babf149e18f3afb116cfe030e6686299f5", "commitAfterChange": "d194901334a783f2b61dc5145041caddd9ca21a2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "signatureAfterChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "diff": ["-\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(segmentCount);\r", "+\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(segmentCount).makeRelative();\r", "-\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(segmentCount);\r", "+\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(segmentCount).makeRelative();\r", "-\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension();\r", "+\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension().makeRelative();\r", "-\t\t\t\tIPath resourcePath = location.removeFirstSegments(segmentCount);\r", "+\t\t\t\tIPath resourcePath = location.removeFirstSegments(segmentCount).makeRelative();\r"]}], "num": 963}