{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7351d134ff0dfb13d281b8a252ada298", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "907c70117c60129d48443e1dc2d338f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "3f9a272754f4dbcde614fed0b8e02a6b49fdf380", "commitAfterChange": "07ee10ab5650bcb39d86bc9b77c1572a63409b02", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " protected void reportBinaryMemberDeclaration(IResource resource, IMember binaryMember, IBinaryType info, int accuracy) throws CoreException", "signatureAfterChange": " protected void reportBinaryMemberDeclaration(IResource resource, IMember binaryMember, IBinaryType info, int accuracy) throws CoreException", "diff": ["-\tISourceRange range = binaryMember.getNameRange();", "+\tClassFile classFile = (ClassFile) binaryMember.getClassFile();", "+\tISourceRange range = classFile.isOpen() ? binaryMember.getNameRange() : SourceMapper.fgUnknownRange;", "-\t\tClassFile classFile = (ClassFile) binaryMember.getClassFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfcf62d84420d42f92c042d2ce2b1ed5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "f8ad0d5bfc02915772c8bb705662d0256beab7ec", "commitAfterChange": "c22ae4e2acd996824ff94a2b0edaa0df69d9b3b1", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessMethod)", "signatureAfterChange": "  public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessMethod)", "diff": ["-\t\t\t\t\t? accessMethod.declaringClass.superclass() ", "-\t\t\t\t\t: accessMethod.declaringClass;\t\t\t\t", "+\t\t\t\t\t? (targetMethod.isDefaultMethod()", "+\t\t\t\t\t\t\t? targetMethod.declaringClass", "+\t\t\t\t\t\t\t: accessMethod.declaringClass.superclass())", "+\t\t\t\t\t: accessMethod.declaringClass;"]}], "num": 64662}