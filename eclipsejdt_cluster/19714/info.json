{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec6dbc29889fde52e576b9c6e095dc1f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3314244eae4ced2c98d4075f2ec9df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForClass.java", "commitBeforeChange": "153b885ea368bcdf606fcdf8ffbb265189dbdbee", "commitAfterChange": "5da4268a6e911ad3865241747a8e9714544fc990", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test055()", "signatureAfterChange": " \tpublic void test055()", "diff": ["-\t\t\t\t!IS_JRE_8 || (IS_JRE_8 && this.complianceLevel >= ClassFileConstants.JDK1_5) ? ", "-\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\t\t\"\t* <li> {@link Entry} </li>\\n\" + ", "-\t\t\t\t\t\t\"\t              ^^^^^\\n\" + ", "-\t\t\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "-\t\t\t\t\t\t\"----------\\n\":", "-\t\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\t\t\t\"\t* <li> {@link Entry} </li>\\n\" + ", "-\t\t\t\t\t\t\t\"\t              ^^^^^\\n\" + ", "-\t\t\t\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "-\t\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\t\t\t\t\"\tpublic interface X extends Map {\\n\" + ", "-\t\t\t\t\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\t\t\t\t\"The return types are incompatible for the inherited methods MapStream.values(), Map.values()\\n\" + ", "-\t\t\t\t\t\t\t\"----------\\n\");", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t* <li> {@link Entry} </li>\\n\" + ", "+\t\t\t\t\"\t              ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72ddadebaeb547670a978d6a6566cf75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "09c77a64b988d1b8740f2abeef7353a697d466b3", "commitAfterChange": "472457e984077a2dae302cbc6a3b8aff55ad1844", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " \tpublic void test0149()", "signatureAfterChange": " \tpublic void test0149()", "diff": ["-\t\tMap customOptions = getCompilerOptions();", "-\t\tcustomOptions.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation,", "-\t\t\t\tCompilerOptions.DISABLED);", "-\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_6 ?", "-\t\t\t\"----------\\n\":", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "-\t\t\t\t\"\tpublic Object[] toArray(Object[] a) {\\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^\\n\" +", "-\t\t\t\t\"Type safety: The return type Object[] for toArray(Object[]) from the type X needs unchecked conversion to conform to T[] from the type Collection<E>\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"2. WARNING in X.java (at line 2)\\n\" +", "-\t\t\t\t\"\tpublic Object[] toArray(Object[] a) {\\n\" +", "-\t\t\t\t\"\t                ^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"The method toArray(Object[]) of type X should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "-\t\t\t\t\"----------\\n\"\t);", "+\t\t\t\"----------\\n\");"]}], "num": 19714}