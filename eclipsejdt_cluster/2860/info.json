{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8074c2b3e3980351b997f3fde7d0ed1d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f265d107e6ae509e6fbf88520ddf694", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 3);", "-\t\t\t\t\t\tfinal IStackMapFrame[] stackMapFrames = stackMapTableAttribute.getStackMapFrame();", "-\t\t\t\t\t\tfor (int j = 0; j < numberOfEntries; j++) {", "-\t\t\t\t\t\t\tdisassemble(stackMapFrames[j], buffer, lineSeparator, tabNumber + 3, mode);", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tdisassemble(stackMapTableAttribute, buffer, lineSeparator, tabNumber, mode);", "+\t\t\t\t\t}", "+\t\t\t\t} else if (CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.STACK_MAP)) {", "+\t\t\t\t\tIStackMapAttribute stackMapAttribute = (IStackMapAttribute) attribute;", "+\t\t\t\t\tif (!isFirstAttribute) {", "+\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tisFirstAttribute = false;", "+\t\t\t\t\t\tdumpTab(tabNumber + 1, buffer);", "+\t\t\t\t\t}", "+\t\t\t\t\tint numberOfEntries = stackMapAttribute.getNumberOfEntries();", "+\t\t\t\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmapattributeheader, Integer.toString(numberOfEntries)));", "+\t\t\t\t\tif (numberOfEntries != 0) {", "+\t\t\t\t\t\tdisassemble(stackMapAttribute, buffer, lineSeparator, tabNumber, mode);", "-\t\t}\t\t", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f67b9fbd4cef60cd9e418dc827f1b73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "900392dc83f32684036212f916a5915ba3721662", "commitAfterChange": "adfa6eea97da9a8b8e860dcf2bcb64f1459b7350", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   \tprivate void disassemble(StackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "   \tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\tprivate void disassemble(StackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode) {", "-\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmaptableattributeheader,", "-\t\t\tnew String[] {", "-\t\t\t\tLong.toString(attribute.getAttributeLength()),", "-\t\t\t\tgetBytesAsString(attribute.getBytes(), lineSeparator, tabNumber)", "-\t\t\t}));", "+\t\tint numberOfEntries = attribute.getNumberOfEntries();", "+\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmaptableattributeheader, Integer.toString(numberOfEntries)));", "+\t\tif (numberOfEntries != 0) {", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\tfinal IStackMapFrame[] stackMapFrames = attribute.getStackMapFrame();", "+\t\t\tfor (int i = 0; i < numberOfEntries; i++) {", "+\t\t\t\tdisassemble(stackMapFrames[i], buffer, lineSeparator, tabNumber + 2, mode);", "+\t\t\t}", "+\t\t}"]}], "num": 2860}