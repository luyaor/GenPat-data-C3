{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "598ed41df1f287b8961a0f0b845f78d9", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165a1e7bf091938d6a03a99e86613cbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic String toStringExpression()", "signatureAfterChange": "   \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+", "+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "+", "+\t\toutput.append(\"new \"); //$NON-NLS-1$", "+\t\ttype.print(0, output); ", "+\t\tfor (int i = 0; i < dimensions.length; i++) {", "+\t\t\tif (dimensions[i] == null)", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\telse {", "+\t\t\t\toutput.append('[');", "+\t\t\t\tdimensions[i].printExpression(0, output);", "+\t\t\t\toutput.append(']');", "+\t\t\t}", "+\t\t} ", "+\t\tif (initializer != null) initializer.printExpression(0, output);", "+\t\treturn output;", "+\t}", "-\tpublic String toStringExpression() {", "-", "-\t\tString s = \"new \" + type.toString(0); //$NON-NLS-1$", "-\t\tfor (int i = 0; i < dimensions.length; i++) {", "-\t\t\tif (dimensions[i] == null)", "-\t\t\t\ts = s + \"[]\"; //$NON-NLS-1$", "-\t\t\telse", "-\t\t\t\ts = s + \"[\" + dimensions[i].toStringExpression() + \"]\"; //$NON-NLS-2$ //$NON-NLS-1$", "-\t\t} ", "-\t\tif (initializer != null)", "-\t\t\ts = s + initializer.toStringExpression();", "-\t\treturn s;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298199c6544b3ed6e8420da4def5dd55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " public String toStringExpression()", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "+\t", "+\t\toutput.append('{');", "+\t\tif (expressions != null) { \t", "+\t\t\tint j = 20 ; ", "+\t\t\tfor (int i = 0 ; i < expressions.length ; i++) {\t", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\texpressions[i].printExpression(0, output);", "+\t\t\t\tj -- ;", "+\t\t\t\tif (j == 0) {", "+\t\t\t\t\toutput.append('\\n');", "+\t\t\t\t\tprintIndent(indent+1, output);", "+\t\t\t\t\tj = 20;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn output.append('}');", "+\t}", "-}", "-public String toStringExpression() {", "-", "-\tString s = \"{\" ; //$NON-NLS-1$", "-\tif (expressions != null)", "-\t{ \tint j = 20 ; ", "-\t\tfor (int i = 0 ; i < expressions.length ; i++)", "-\t\t{\ts = s + expressions[i].toStringExpression() + \",\" ; //$NON-NLS-1$", "-\t\t\tj -- ;", "-\t\t\tif (j == 0)", "-\t\t\t{\ts = s + \"\\n                \"; j = 20;}}}; //$NON-NLS-1$", "-\ts = s + \"}\"; //$NON-NLS-1$", "-\treturn s;}"]}], "num": 17348}