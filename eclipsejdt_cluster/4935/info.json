{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12fe38ebb18c1560ab1b35fbb8bf64e1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea21a0685d3b9916a13d989f228609c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode)", "signatureAfterChange": " \tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode) throws Exception", "diff": ["-\tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode) {", "+\tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode) throws Exception {", "-\t\tString result = null;", "-\t\ttry {", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(classFile);", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tresult = disassembler.disassemble(classFileBytes, \"\\n\", mode);", "-\t\t} catch (IOException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"Should not happen : \", false);", "-\t\t} catch (ClassFormatException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"Should not happen : \", false);", "-\t\t}", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(classFile);", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", mode);", "-\t\t", "-\t\ttry {", "-\t\t\tFileInputStream stream = new FileInputStream(classFile);", "-\t\t\tClassFileReader.read(stream, className + \".class\", true);", "-\t\t\tstream.close();", "-\t\t} catch (org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "+\t\tFileInputStream stream = new FileInputStream(classFile);", "+\t\tClassFileReader.read(stream, className + \".class\", true);", "+\t\tstream.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfcd4015a778870dd0185594ad1dd51c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "9311f01535700952280c267b61bac8e5f05b9f55", "commitAfterChange": "833acf9fd171cc3b88beb3f35c58318abd7b1b7c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprotected void checkDisassembledClassFile(String fileName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException", "signatureAfterChange": " \tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode)", "diff": ["-\t", "-\tprotected void checkDisassembledClassFile(String fileName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException {", "+\tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode) {", "-\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(classFile);", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", mode);", "+\t\tString result = null;", "+\t\ttry {", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(classFile);", "+\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\t\tresult = disassembler.disassemble(classFileBytes, \"\\n\", mode);", "+\t\t} catch (IOException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tassertTrue(\"Should not happen : \", false);", "+\t\t} catch (ClassFormatException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tassertTrue(\"Should not happen : \", false);", "+\t\t}"]}], "num": 4935}