{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cc5e95c17ccf35de2a5e657aba7d424", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52567eb7b9fde285c3c71f8161283de5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "033b8a638ec057cd464f5964d22a3d23734c8a87", "commitAfterChange": "b53c28e0f23a1d6ae0dfae6485f23db8cf939ea1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["-\tchar[] qualifiedPattern = qualifiedPattern(this.pattern.declaringSimpleName, this.pattern.declaringQualification);", "-\tif (qualifiedPattern == null) return methodLevel; // since any declaring class will do", "+\tif (this.pattern.declaringSimpleName == null && this.pattern.declaringQualification == null) return methodLevel; // since any declaring class will do", "-\t\tdeclaringLevel = resolveLevelAsSubtype(qualifiedPattern, methodReceiverType, method.parameters);", "+\t\tdeclaringLevel = resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, methodReceiverType, method.parameters);", "-\t\tdeclaringLevel = resolveLevelForType(qualifiedPattern, method.declaringClass);", "+\t\tdeclaringLevel = resolveLevelForType(this.pattern.declaringSimpleName, this.pattern.declaringQualification, method.declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc7844a0a5472db259385732412d2ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "033b8a638ec057cd464f5964d22a3d23734c8a87", "commitAfterChange": "b53c28e0f23a1d6ae0dfae6485f23db8cf939ea1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["-\tchar[] qualifiedPattern = qualifiedPattern(this.pattern.declaringSimpleName, this.pattern.declaringQualification);", "-\tif (qualifiedPattern == null) return methodLevel; // since any declaring class will do", "+\tif (this.pattern.declaringSimpleName == null && this.pattern.declaringQualification == null) return methodLevel; // since any declaring class will do", "-\t\t? resolveLevelAsSubtype(qualifiedPattern, method.declaringClass, null)", "-\t\t: resolveLevelForType(qualifiedPattern, method.declaringClass);", "+\t\t? resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, method.declaringClass, null)", "+\t\t: resolveLevelForType(this.pattern.declaringSimpleName, this.pattern.declaringQualification, method.declaringClass);"]}], "num": 46192}