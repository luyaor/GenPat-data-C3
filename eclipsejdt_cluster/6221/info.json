{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a47d98acbb0cefcc23af07b1afb7889", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68204356dc736d75d8f8d144c4a65aa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "b944419a775a8766a80aaf50d5c9201201448e38", "commitAfterChange": "66a68a77c79dc8161adf91226d8f791e46bc037a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tBinding getDirectBinding(Expression someExpression)", "signatureAfterChange": "  public static Binding getDirectBinding(Expression someExpression)", "diff": ["+", "+public static Binding getDirectBinding(Expression someExpression) {", "+\tif (someExpression instanceof SingleNameReference) {", "+\t\treturn ((SingleNameReference)someExpression).binding;", "+\t} else if (someExpression instanceof FieldReference) {", "+\t\tFieldReference fieldRef = (FieldReference)someExpression;", "+\t\tif (fieldRef.receiver.isThis() && !(fieldRef.receiver instanceof QualifiedThisReference)) {", "+\t\t\treturn fieldRef.binding;", "+\t\t}\t\t\t", "+\t} else if (someExpression instanceof Assignment) {", "+\t\tExpression lhs = ((Assignment)someExpression).lhs;", "+\t\tif ((lhs.bits & ASTNode.IsStrictlyAssigned) != 0) {", "+\t\t\t// i = i = ...; // eq to int i = ...;", "+\t\t\treturn getDirectBinding (((Assignment)someExpression).lhs);", "+\t\t} else if (someExpression instanceof PrefixExpression) {", "+\t\t\t// i = i++; // eq to ++i;", "+\t\t\treturn getDirectBinding (((Assignment)someExpression).lhs);", "-", "-\tBinding getDirectBinding(Expression someExpression) {", "-\t\tif (someExpression instanceof SingleNameReference) {", "-\t\t\treturn ((SingleNameReference)someExpression).binding;", "-\t\t} else if (someExpression instanceof FieldReference) {", "-\t\t\tFieldReference fieldRef = (FieldReference)someExpression;", "-\t\t\tif (fieldRef.receiver.isThis() && !(fieldRef.receiver instanceof QualifiedThisReference)) {", "-\t\t\t\treturn fieldRef.binding;", "-\t\t\t}\t\t\t", "-\t\t}", "+\treturn null;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd0c7fdbfbb94eaab01f4f7f08a348f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 61, "signatureBeforeChange": " \t\t\t\t\t\t \tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference)", "signatureAfterChange": "  \tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference)", "diff": ["-\t\t\t\t\t\t", "-\tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference) {", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.SingleNameReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.SingleNameReference) reference);", "-\t\t}", "-\t\tthrow new IllegalArgumentException(\"Not yet implemented: convert(\" + reference.getClass() + \")\");//$NON-NLS-1$//$NON-NLS-2$", "-\t}\t", "+", "+\tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference) {", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) reference);", "+\t\t} else {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.SingleNameReference) reference);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd704c2fd635643f54dc41a07c2cdb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic Expression convert(Reference reference)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference)", "diff": ["-\tpublic Expression convert(Reference reference) {", "-\t\tif (reference instanceof NameReference) {", "-\t\t\treturn convert((NameReference) reference);", "+\tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference) {", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.NameReference) reference);", "-\t\tif (reference instanceof ThisReference) {", "-\t\t\treturn convert((ThisReference) reference);", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ThisReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ThisReference) reference);", "-\t\tif (reference instanceof ArrayReference) {", "-\t\t\treturn convert((ArrayReference) reference);", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ArrayReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ArrayReference) reference);", "-\t\tif (reference instanceof FieldReference) {", "-\t\t\treturn convert((FieldReference) reference);", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.FieldReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.FieldReference) reference);"]}], "num": 6221}