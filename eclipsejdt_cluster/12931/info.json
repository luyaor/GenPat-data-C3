{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d16ebb70390bfe28a1a2fd7b6860f4e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a617fc32157a84abc5d4406cf2a3010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){", "-\t\t\tif ((this.resolvedType == LongBinding)", "-\t\t\t\t|| (this.resolvedType == DoubleBinding)) {", "+\t\t\tif ((this.resolvedType == TypeBinding.LONG)", "+\t\t\t\t|| (this.resolvedType == TypeBinding.DOUBLE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed39001004f2a5b826fa2354db703932", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){", "-\t\t\tif (this.resolvedType == LongBinding", "-\t\t\t\t|| this.resolvedType == DoubleBinding) {", "+\t\t\tif (this.resolvedType == TypeBinding.LONG", "+\t\t\t\t|| this.resolvedType == TypeBinding.DOUBLE) {"]}], "num": 12931}