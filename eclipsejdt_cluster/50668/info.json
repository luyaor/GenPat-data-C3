{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a67528104c668057ffc431ab0fcc4b83", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5887d0911fd328f2fd819a3e5b03c846", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "6dbb2ec74b77026a9a8c00b4381c92a21f100370", "commitAfterChange": "2d88125c63a44736bd6507d03cfcacc7c43a6f63", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tpublic void generateCode(", "-\t\tBlockScope currentScope,", "-\t\tCodeStream codeStream,", "-\t\tboolean valueRequired) {", "-\t\t\t", "+", "+\tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired) {\t\t", "-\t\t\t\t\tif (valueRequired  || (!isFirst && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "-\t\t\t\t\t\t\t|| ((implicitConversion & TypeIds.UNBOXING) != 0)) {", "+\t\t\t\t\tTypeBinding requiredGenericCast = getGenericCast(this.otherCodegenBindings == null ? 0 : this.otherCodegenBindings.length);", "+\t\t\t\t\tif (valueRequired  ", "+\t\t\t\t\t\t\t|| (!isFirst && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "+\t\t\t\t\t\t\t|| ((implicitConversion & TypeIds.UNBOXING) != 0)", "+\t\t\t\t\t\t\t|| requiredGenericCast != null) {", "-\t\t\t\t\t\t\tTypeBinding requiredGenericCast = getGenericCast(this.otherCodegenBindings == null ? 0 : this.otherCodegenBindings.length);", "+\t\t\t\t\t\t\tif (requiredGenericCast != null) codeStream.checkcast(requiredGenericCast);", "-\t\t\t\t\t\t\t\tif (requiredGenericCast != null) codeStream.checkcast(requiredGenericCast);", "-\t\t\t\t\t\t\t\tif ((implicitConversion & TypeIds.UNBOXING) != 0) {", "-\t\t\t\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "-\t\t\t\t\t\t\t\tswitch (lastFieldBinding.type.id) {", "+\t\t\t\t\t\t\t\tboolean isUnboxing = (implicitConversion & TypeIds.UNBOXING) != 0;", "+\t\t\t\t\t\t\t\t// conversion only generated if unboxing", "+\t\t\t\t\t\t\t\tif (isUnboxing) codeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t\t\t\t\t\tswitch (isUnboxing ? postConversionType(currentScope).id : lastFieldBinding.type.id) {", "-\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e4b1774e61e957fd53555665c4e71d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "6dbb2ec74b77026a9a8c00b4381c92a21f100370", "commitAfterChange": "2d88125c63a44736bd6507d03cfcacc7c43a6f63", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tif (valueRequired || (!isThisReceiver && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "-\t\t\t|| ((implicitConversion & TypeIds.UNBOXING) != 0)) {", "+\tif (valueRequired ", "+\t\t\t|| (!isThisReceiver && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "+\t\t\t|| ((implicitConversion & TypeIds.UNBOXING) != 0)", "+\t\t\t|| (this.genericCast != null)) {", "+\t\t\t// required cast must occur even if no value is required", "+\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);", "-\t\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);", "-\t\t\t\tif ((implicitConversion & TypeIds.UNBOXING) != 0) {", "-\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t}", "-\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "-\t\t\t\tswitch (this.codegenBinding.type.id) {", "+\t\t\t\tboolean isUnboxing = (implicitConversion & TypeIds.UNBOXING) != 0;", "+\t\t\t\t// conversion only generated if unboxing", "+\t\t\t\tif (isUnboxing) codeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t\tswitch (isUnboxing ? postConversionType(currentScope).id : this.codegenBinding.type.id) {"]}], "num": 50668}