{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb48a85b7366c3cb79f056d682fa7ca7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa5570ad4757f0b21cbe1185b7127f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "d81e6de27221b2caec858658787abf55d91a925e", "commitAfterChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic boolean reduceOneConstraint(InferenceContext18 context, ConstraintFormula currentConstraint) throws InferenceFailureException", "signatureAfterChange": " \tpublic boolean reduceOneConstraint(InferenceContext18 context, ConstraintFormula currentConstraint) throws InferenceFailureException", "diff": ["-\t\tif (result == currentConstraint) {", "-\t\t\t// not reduceable", "-\t\t\tthrow new IllegalStateException(\"Failed to reduce constraint formula\"); //$NON-NLS-1$", "-\t\t}", "+\t\tif (result == currentConstraint) {", "+\t\t\t// not reduceable", "+\t\t\tthrow new IllegalStateException(\"Failed to reduce constraint formula\"); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe03ceb1c78bf9f11947475bcf97042", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "e2dd5ee821f887ad13e39f8b44d89f9abfea148f", "commitAfterChange": "0a42969cf5af4836de11a0ddb17424701edec007", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 225, "signatureBeforeChange": " protected void updateRecoveryState()", "signatureAfterChange": " protected void updateRecoveryState()", "diff": ["-\t/* may be able to retrieve completionNode as an orphan, and then attach it */", "-\tcompletionIdentifierCheck();", "-\t// attachOrphanCompletionNode pops various stacks to construct astNodeParent and enclosingNode. This does not gel well with extended recovery.", "+\t// completionIdentifierCheck && attachOrphanCompletionNode pops various stacks to construct astNodeParent and enclosingNode. This does not gel well with extended recovery.", "+\t", "+\t/* may be able to retrieve completionNode as an orphan, and then attach it */", "+\tcompletionIdentifierCheck();"]}], "num": 63034}