{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b81bc26e30f30132a7cdc49ed4f9119", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2648eba7cd992aea16dfa99ea78853ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/DeclaredTypeImpl.java", "commitBeforeChange": "fe964ab01ddcec37f8dfad2a7e0b4a4e86da2033", "commitAfterChange": "6b38a90674d8f322a6f0c632bd6a1269aa0b2341", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic TypeKind getKind()", "signatureAfterChange": "  \t@Override \tpublic TypeKind getKind()", "diff": ["-\t\tif (!binding().isValidBinding()) {", "+\t\t// Binding.isValidBinding() will return true for a parameterized or array type whose raw", "+\t\t// or member type is unresolved.  So we need to be a little more sensitive, so that we", "+\t\t// can report Zork<Quux> or Zork[] as error types.", "+\t\tReferenceBinding type = (ReferenceBinding)_binding;", "+\t\tif ((!type.isValidBinding() || ((type.tagBits & TagBits.HasMissingType) != 0))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "704f40dff3423eed69bf22349b693689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic TypeMirror newTypeMirror(Binding binding)", "signatureAfterChange": " \tpublic TypeMirror newTypeMirror(Binding binding)", "diff": ["+\t\t\tReferenceBinding referenceBinding = (ReferenceBinding) binding;", "+\t\t\tif ((referenceBinding.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\treturn getErrorType(referenceBinding);", "+\t\t\t}"]}], "num": 27699}