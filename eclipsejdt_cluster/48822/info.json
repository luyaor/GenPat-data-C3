{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c9042d7d15dab17bbd9c2dc4562aec7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "907fec3b2411f16918d888058bf9b79e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["+\t\t\t\tif (currentArg.startsWith(\"-nowarn\")) { //$NON-NLS-1$", "+\t\t\t\t\tswitch (currentArg.length()) {", "+\t\t\t\t\t\tcase 7:", "+\t\t\t\t\t\t\tdisableAll(ProblemSeverities.Warning);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase 8:", "+\t\t\t\t\t\t\tthrow new IllegalArgumentException(this.bind(", "+\t\t\t\t\t\t\t\t\t\"configure.invalidNowarnOption\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tint foldersStart = currentArg.indexOf('[') + 1;", "+\t\t\t\t\t\t\tint foldersEnd = currentArg.lastIndexOf(']');", "+\t\t\t\t\t\t\tif (foldersStart <= 8 || foldersEnd == -1 || foldersStart > foldersEnd", "+\t\t\t\t\t\t\t\t\t|| foldersEnd < currentArg.length() - 1) {", "+\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(this.bind(", "+\t\t\t\t\t\t\t\t\t\t\"configure.invalidNowarnOption\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tString folders = currentArg.substring(foldersStart, foldersEnd);", "+\t\t\t\t\t\t\tif (folders.length() > 0) {", "+\t\t\t\t\t\t\t\tchar[][] currentFolders = decodeIgnoreOptionalProblemsFromFolders(folders);", "+\t\t\t\t\t\t\t\tif (this.ignoreOptionalProblemsFromFolders != null) {", "+\t\t\t\t\t\t\t\t\tint length = this.ignoreOptionalProblemsFromFolders.length + currentFolders.length;", "+\t\t\t\t\t\t\t\t\tchar[][] tempFolders = new char[length][];", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(this.ignoreOptionalProblemsFromFolders, 0, tempFolders, 0, this.ignoreOptionalProblemsFromFolders.length);", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(currentFolders, 0, tempFolders, this.ignoreOptionalProblemsFromFolders.length, currentFolders.length);", "+\t\t\t\t\t\t\t\t\tthis.ignoreOptionalProblemsFromFolders = tempFolders;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthis.ignoreOptionalProblemsFromFolders = currentFolders;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(this.bind(", "+\t\t\t\t\t\t\t\t\t\t\"configure.invalidNowarnOption\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (currentArg.startsWith(\"-nowarn\")) { //$NON-NLS-1$", "-\t\t\t\t\tdisableAll(ProblemSeverities.Warning);", "-\t\t\t\t\tmode = DEFAULT;", "-\t\t\t\t\tcontinue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6f5018355fffb6954ab20bb5da1323", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "f27100c9a03d1ad4af3d49219ed6a35545e3cfed", "commitAfterChange": "da348589e3fa3fe0a889394dbec5343c317d63e7", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["-\t\t\t\t\t\t\tisEnabling = false; // mentionned warnings are disabled", "+\t\t\t\t\t\t\tisEnabling = false; // specified warnings are disabled", "-\t\t\t\t\tnextToken: while (tokenizer.hasMoreTokens()) {", "+\t\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "-\t\t\t\t\t\t\t\t\ttokenCounter = 0;", "-\t\t\t\t\t\t\t\t\tbreak nextToken;", "+\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfPlusOption\", token)); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\ttokenCounter = 0;", "-\t\t\t\t\t\t\t\t\tbreak nextToken;", "+\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfMinusOption\", token)); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tif (currentArg.startsWith(\"-error\")) { //$NON-NLS-1$", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tString errorOption = currentArg;", "+\t\t\t\t\tint length = currentArg.length();", "+\t\t\t\t\tif (length <= 7) {", "+\t\t\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\t\tthis.bind(\"configure.invalidErrorConfiguration\", errorOption)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tint errorTokenStart;", "+\t\t\t\t\tboolean isEnabling, allowPlusOrMinus;", "+\t\t\t\t\tswitch (errorOption.charAt(7)) {", "+\t\t\t\t\t\tcase '+' :", "+\t\t\t\t\t\t\terrorTokenStart = 8;", "+\t\t\t\t\t\t\tisEnabling = true;", "+\t\t\t\t\t\t\tallowPlusOrMinus = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase '-' :", "+\t\t\t\t\t\t\terrorTokenStart = 8;", "+\t\t\t\t\t\t\tisEnabling = false; // specified errors are disabled", "+\t\t\t\t\t\t\tallowPlusOrMinus = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tdisableErrors();", "+\t\t\t\t\t\t\terrorTokenStart = 7;", "+\t\t\t\t\t\t\tisEnabling = true;", "+\t\t\t\t\t\t\tallowPlusOrMinus = false;", "+\t\t\t\t\t}", "+", "+\t\t\t\t\tStringTokenizer tokenizer =", "+\t\t\t\t\t\tnew StringTokenizer(errorOption.substring(errorTokenStart, errorOption.length()), \",\"); //$NON-NLS-1$", "+\t\t\t\t\tint tokenCounter = 0;", "+", "+\t\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "+\t\t\t\t\t\tString token = tokenizer.nextToken();", "+\t\t\t\t\t\ttokenCounter++;", "+\t\t\t\t\t\tswitch(token.charAt(0)) {", "+\t\t\t\t\t\t\tcase '+' :", "+\t\t\t\t\t\t\t\tif (allowPlusOrMinus) {", "+\t\t\t\t\t\t\t\t\tisEnabling = true;", "+\t\t\t\t\t\t\t\t\ttoken = token.substring(1);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfPlusOption\", token)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase '-' :", "+\t\t\t\t\t\t\t\tif (allowPlusOrMinus) {", "+\t\t\t\t\t\t\t\t\tisEnabling = false;", "+\t\t\t\t\t\t\t\t\ttoken = token.substring(1);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfMinusOption\", token)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\thandleErrorToken(token, isEnabling);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (tokenCounter == 0) {", "+\t\t\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\t\tthis.bind(\"configure.invalidErrorOption\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t    mode = DEFAULT;", "+\t\t\t\t\tmode = DEFAULT;", "-\t\t\t\t    mode = DEFAULT;", "+\t\t\t\t\tmode = DEFAULT;", "-\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tthis.options.put(", "-\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tthis.options.put(", "-\t}", "-\tif (this.warnAllJavadocOn) {", "-\t\tthis.options.put(", "-\t\t\tCompilerOptions.OPTION_ReportMissingJavadocComments,", "-\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dff966c2dc6f99dfb4b32738996ecdf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "eb6a62cd301dd92365462b5f4580a54624129ed5", "commitAfterChange": "f363db69d77a20757ac0ea9e878cf9c696cd79df", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["-\t\t\t\t\tdisableWarnings();", "+\t\t\t\t\tdisableAll(ProblemSeverities.Warning);", "-\t\t\t\t\t\tdisableWarnings();", "+\t\t\t\t\t\tdisableAll(ProblemSeverities.Warning);", "-\t\t\t\t\tboolean isEnabling, allowPlusOrMinus;", "+\t\t\t\t\tboolean isEnabling;", "-\t\t\t\t\t\t\tallowPlusOrMinus = true;", "-\t\t\t\t\t\t\tallowPlusOrMinus = true;", "-\t\t\t\t\t\t\tdisableWarnings();", "+\t\t\t\t\t\t\tdisableAll(ProblemSeverities.Warning);", "-\t\t\t\t\t\t\tallowPlusOrMinus = false;", "-\t\t\t\t\t\t\t\tif (allowPlusOrMinus) {", "-\t\t\t\t\t\t\t\t\tisEnabling = true;", "-\t\t\t\t\t\t\t\t\ttoken = token.substring(1);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "-\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfPlusOption\", token)); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tisEnabling = true;", "+\t\t\t\t\t\t\t\ttoken = token.substring(1);", "-\t\t\t\t\t\t\t\tif (allowPlusOrMinus) {", "-\t\t\t\t\t\t\t\t\tisEnabling = false;", "-\t\t\t\t\t\t\t\t\ttoken = token.substring(1);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "-\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfMinusOption\", token)); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tisEnabling = false;", "+\t\t\t\t\t\t\t\ttoken = token.substring(1);", "-\t\t\t\t\tboolean isEnabling, allowPlusOrMinus;", "+\t\t\t\t\tboolean isEnabling;", "-\t\t\t\t\t\t\tallowPlusOrMinus = true;", "-\t\t\t\t\t\t\tallowPlusOrMinus = true;", "-\t\t\t\t\t\t\tdisableErrors();", "+\t\t\t\t\t\t\tdisableAll(ProblemSeverities.Error);", "-\t\t\t\t\t\t\tallowPlusOrMinus = false;", "-\t\t\t\t\t\t\t\tif (allowPlusOrMinus) {", "-\t\t\t\t\t\t\t\t\tisEnabling = true;", "-\t\t\t\t\t\t\t\t\ttoken = token.substring(1);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "-\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfPlusOption\", token)); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tisEnabling = true;", "+\t\t\t\t\t\t\t\ttoken = token.substring(1);", "-\t\t\t\t\t\t\t\tif (allowPlusOrMinus) {", "-\t\t\t\t\t\t\t\t\tisEnabling = false;", "-\t\t\t\t\t\t\t\t\ttoken = token.substring(1);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "-\t\t\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidUsageOfMinusOption\", token)); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tisEnabling = false;", "+\t\t\t\t\t\t\t\ttoken = token.substring(1);"]}], "num": 48822}