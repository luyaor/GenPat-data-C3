{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d702a129b6c6839009d9d20c4e6aed7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b1cadb852772c26af7dfdb31b729bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "bb58594beea7321f1a2a3673bab3e26af89ead20", "commitAfterChange": "7376fb10956e4a03cc528e86b634b5ca73ef755b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "signatureAfterChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "diff": ["+\t\tBlockScope lastInitializerScope = null;", "-\t\t\tint notEnumConstants = 0;", "+\t\t\tint remainingFieldCount = 0;", "-\t\t\t\t\t\t\tnotEnumConstants++;", "+\t\t\t\t\t\t\tremainingFieldCount++;", "-\t\t\tif (notEnumConstants != 0) {", "+\t\t\tif (remainingFieldCount != 0) {", "-\t\t\t\t\tif (fieldDecl.isStatic() && fieldDecl.getKind() != AbstractVariableDeclaration.ENUM_CONSTANT) {", "-\t\t\t\t\t\tfieldDecl.generateCode(staticInitializerScope, codeStream);", "+\t\t\t\t\tswitch (fieldDecl.getKind()) {", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT :", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.INITIALIZER :", "+\t\t\t\t\t\t\tif (!fieldDecl.isStatic()) ", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tlastInitializerScope = ((Initializer) fieldDecl).block.scope;", "+\t\t\t\t\t\t\tfieldDecl.generateCode(staticInitializerScope, codeStream);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.FIELD :", "+\t\t\t\t\t\t\tif (!fieldDecl.binding.isStatic()) ", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tlastInitializerScope = null;", "+\t\t\t\t\t\t\tfieldDecl.generateCode(staticInitializerScope, codeStream);", "+\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\tif (fieldDecl.isStatic()) {", "-\t\t\t\t\t\tfieldDecl.generateCode(staticInitializerScope, codeStream);", "+\t\t\t\t\tswitch (fieldDecl.getKind()) {", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.INITIALIZER :", "+\t\t\t\t\t\t\tif (!fieldDecl.isStatic()) ", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tlastInitializerScope = ((Initializer) fieldDecl).block.scope;", "+\t\t\t\t\t\t\tfieldDecl.generateCode(staticInitializerScope, codeStream);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.FIELD :", "+\t\t\t\t\t\t\tif (!fieldDecl.binding.isStatic()) ", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tlastInitializerScope = null;", "+\t\t\t\t\t\t\tfieldDecl.generateCode(staticInitializerScope, codeStream);", "+\t\t\t\t\t\t\tbreak;", "-\t\t\t\tint oldPosition = codeStream.position;", "+\t\t\t\tint before = codeStream.position;", "-\t\t\t\tcodeStream.updateLocalVariablesAttribute(oldPosition);", "+\t\t\t\tif (lastInitializerScope != null) {", "+\t\t\t\t\t// expand the last initializer variables to include the trailing return", "+\t\t\t\t\tcodeStream.updateLastRecordedEndPC(lastInitializerScope, before);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14339e9e5123b42f5b937ac82a7e9597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "commitAfterChange": "a53e05883d2e536e6d912a85c946fd372aae0f56", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tSearchMatch match = locator.newReferenceMatch(referenceType(), element, accuracy, reference.sourceStart, reference.sourceEnd+1);", "-\tlocator.report(match);", "+\tSearchMatch match = null;", "+\tint referenceType = referenceType();", "+\tswitch (referenceType) {", "+\t\tcase IJavaElement.PACKAGE_FRAGMENT:", "+\t\t\tmatch = locator.newPackageReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.TYPE:", "+\t\t\tmatch = locator.newTypeReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.FIELD:", "+\t\t\tmatch = locator.newFieldReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.METHOD:", "+\t\t\tmatch = locator.newMethodReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.LOCAL_VARIABLE:", "+\t\t\tmatch = locator.newLocalVariableReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t}", "+\tif (match != null) {", "+\t\tlocator.report(match);", "+\t}"]}], "num": 49521}