{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72d2d627058d54bfbb824a036f89623f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccbd420b5562a68d50b1d20be9491e2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "2001b039afb3494b66b4a4b694a48c1ddf006564", "commitAfterChange": "4f470c96fe8512fc8667dbb12384398ec0b5851a", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 273, "signatureBeforeChange": " public void test265()", "signatureAfterChange": " public void test265()", "diff": ["-\tif (new CompilerOptions(getCompilerOptions()).complianceLevel < ClassFileConstants.JDK1_6) return;", "-\tassertEquals(\"Wrong annotation on package-info interface \", \"@XmlSchema{ namespace = (String)\\\"test\\\"}\", annotations[0].toString());", "+\tassertEquals(\"Wrong annotation on package-info interface \", \"@XmlSchema(namespace = (String)\\\"test\\\")\", annotations[0].toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38a81913e3f26cd3f7cc7f8766bbb06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 337, "methodNumberAfterChange": 337, "signatureBeforeChange": " public void test187()", "signatureAfterChange": " public void test187()", "diff": ["-\t\t\t\"    double f(List<Integer> l) {return 0;}\\n\" +", "+\t\t\t\"    double f(List<Integer> l) {return 0;}\\n\" +// name clash in 7", "-    \t\t\t\"double f(List<Integer> l) {return 0;}\\n\" +", "+    \t\t\t\"double f(List<Integer> l) {return 0;}\\n\" +// name clash in 1.5 & 7", "-\t\tnew CompilerOptions(getCompilerOptions()).complianceLevel < ClassFileConstants.JDK1_7", "-\t\t\t? \"\"", "-\t\t\t: \"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tdouble f(List<Integer> l) {return 0;}\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method f(List<Integer>) of type Y has the same erasure as f(List<String>) of type X but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\tabstract class Z extends X implements I {}\\n\" + ", "-\t\t\t\"\t               ^\\n\" + ", "-\t\t\t\"Name clash: The method f(List<String>) of type X has the same erasure as f(List<Integer>) of type I but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\t\"\tint f(List<String> l) {return 0;}\\n\" + ", "-\t\t\t\"\t    ^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method f(List<String>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"\tdouble f(List<Integer> l) {return 0;}\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method f(List<Integer>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tdouble f(List<Integer> l) {return 0;}\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Name clash: The method f(List<Integer>) of type Y has the same erasure as f(List<String>) of type X but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tabstract class Z extends X implements I {}\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Name clash: The method f(List<String>) of type X has the same erasure as f(List<Integer>) of type I but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"\tint f(List<String> l) {return 0;}\\n\" + ", "+\t\t\"\t    ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method f(List<String>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\tdouble f(List<Integer> l) {return 0;}\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method f(List<Integer>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "+\t\t\"----------\\n\""]}], "num": 29341}