{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53d51e5ade062218ff528a71863a6c45", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497c0bcd0b44d1cc327245eec67b2839", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a8ed5c9ce2b125913ea11ffa5f66b79c1153133a", "commitAfterChange": "aff037e4075d974a1198e8a25c9e7f07acc35fc1", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": " private void createArgumentBindings(MethodBinding method)", "signatureAfterChange": " private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions)", "diff": ["-private void createArgumentBindings(MethodBinding method) {", "-\t// ensure nullness defaults are initialized at all enclosing levels:", "-\tswitch (this.nullnessDefaultInitialized) {", "-\tcase 0:", "-\t\tgetAnnotationTagBits(); // initialize", "-\t\t//$FALL-THROUGH$", "-\tcase 1:", "-\t\tgetPackage().isViewedAsDeprecated(); // initialize annotations", "-\t\tthis.nullnessDefaultInitialized = 2;", "-\t}", "+private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions) {", "+\tinitializeNullDefault();", "+\t\t// while creating argument bindings we also collect explicit null annotations:", "-\t\tif ((findNonNullDefault(methodDecl.scope, methodDecl.scope.environment()) == NONNULL_BY_DEFAULT)) {", "-\t\t\tmethod.fillInDefaultNonNullness();", "+\t\t// add implicit annotations (inherited(?) & default):", "+\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations).checkImplicitNullAnnotations(method, methodDecl, true, this.scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60b9cb18efd17b0b9b2ba942528a5bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "8542678e2ceb736a9d19d031551da2cab5ea4a72", "commitAfterChange": "4ac6f89083748b9c4fc37b738ed82ea1a7c9c63b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": " private void createArgumentBindings(MethodBinding method)", "signatureAfterChange": " private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions)", "diff": ["-private void createArgumentBindings(MethodBinding method) {", "-\t// ensure nullness defaults are initialized at all enclosing levels:", "-\tswitch (this.nullnessDefaultInitialized) {", "-\tcase 0:", "-\t\tgetAnnotationTagBits(); // initialize", "-\t\t//$FALL-THROUGH$", "-\tcase 1:", "-\t\tgetPackage().isViewedAsDeprecated(); // initialize annotations", "-\t\tthis.nullnessDefaultInitialized = 2;", "-\t}", "+private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions) {", "+\tinitializeNullDefault();", "+\t\t// while creating argument bindings we also collect explicit null annotations:", "-\t\tif ((findNonNullDefault(methodDecl.scope, methodDecl.scope.environment()) == NONNULL_BY_DEFAULT)) {", "-\t\t\tmethod.fillInDefaultNonNullness();", "+\t\t// add implicit annotations (inherited(?) & default):", "+\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations).checkImplicitNullAnnotations(method, methodDecl, true, this.scope);"]}], "num": 57235}