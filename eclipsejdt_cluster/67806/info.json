{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93c6dc736be691edbfd1fedee48701d7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1375dc5c11da169c689419fa4e8231e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "1e5960a8e1d6d5a1af8d629bddab71c46e5ed5a1", "commitAfterChange": "0d665ff7724ca0a2df27fa238eee0ddf6c106c65", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor, int annotationSourceKind)", "signatureAfterChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor, int annotationSourceKind)", "diff": ["+\t\t\t\tint tokenStartPosition = this.scanner.getCurrentTokenStartPosition();", "+\t\t\t\tint tokenEndPosition = this.scanner.getCurrentTokenEndPosition();", "-\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "-\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "-\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "-\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\tif (this.useTags && this.editsEnabled) {", "+\t\t\t\t\t\t\tboolean turnOff = false;", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken", "+\t\t\t\t\t\t\t\t&& CharOperation.equals(this.disablingTag, this.scanner.source, tokenStartPosition, tokenEndPosition+1)) {", "+    \t\t\t\t\t\t\tthis.editsEnabled = false;", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t    \t}", "+\t\t\t\t\t\t\tif (turnOff) {", "+\t\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "+\t\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "+\t\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "+\t\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && !this.editsEnabled) {", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken) {", "+\t    \t\t\t\t\t\tthis.editsEnabled = CharOperation.equals(this.enablingTag, this.scanner.source, tokenStartPosition, tokenEndPosition+1);", "+\t\t\t\t\t    \t}", "-\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "-\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "-\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "-\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\ttokenEndPosition = -this.scanner.commentStops[this.scanner.commentPtr];", "+\t\t\t\t\t\tif (this.useTags && this.editsEnabled) {", "+\t\t\t\t\t\t\tboolean turnOff = false;", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken", "+\t\t\t\t\t\t\t\t&& CharOperation.equals(this.disablingTag, this.scanner.source, tokenStartPosition, tokenEndPosition)) {", "+    \t\t\t\t\t\t\tthis.editsEnabled = false;", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t    \t}", "+\t\t\t\t\t\t\tif (turnOff) {", "+\t\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "+\t\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "+\t\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "+\t\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && !this.editsEnabled) {", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken) {", "+\t    \t\t\t\t\t\tthis.editsEnabled = CharOperation.equals(this.enablingTag, this.scanner.source, tokenStartPosition, tokenEndPosition);", "+\t\t\t\t\t    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9131c3bbefa24abef84f6351965d07be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "1e5960a8e1d6d5a1af8d629bddab71c46e5ed5a1", "commitAfterChange": "0d665ff7724ca0a2df27fa238eee0ddf6c106c65", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tvoid printComment(int kind, int trailing)", "signatureAfterChange": " \tvoid printComment(int kind, int trailing)", "diff": ["+\t\t\t\tint tokenStartPosition = this.scanner.getCurrentTokenStartPosition();", "-\t\t\t\t\t\tint whitespacesStartPosition = this.scanner.getCurrentTokenStartPosition();", "-\t\t\t\t\t\t\t\t\tcurrentTokenStartPosition = whitespacesStartPosition;", "+\t\t\t\t\t\t\t\t\tcurrentTokenStartPosition = tokenStartPosition;", "-\t\t\t\t\t\t\t\t\tthis.printNewLine(whitespacesStartPosition);", "+\t\t\t\t\t\t\t\t\tthis.printNewLine(tokenStartPosition);", "-\t\t\t\t\t\t\taddDeleteEdit(whitespacesStartPosition, whitespacesEndPosition);", "+\t\t\t\t\t\t\taddDeleteEdit(tokenStartPosition, whitespacesEndPosition);", "-\t\t\t\t\t\t\t\taddDeleteEdit(whitespacesStartPosition, whitespacesEndPosition);", "+\t\t\t\t\t\t\t\taddDeleteEdit(tokenStartPosition, whitespacesEndPosition);", "-\t\t\t\t\t\t\t\tcurrentTokenStartPosition = whitespacesStartPosition;", "+\t\t\t\t\t\t\t\tcurrentTokenStartPosition = tokenStartPosition;", "-\t\t\t\t\t\t\t\t\tthis.printNewLine(whitespacesStartPosition);", "+\t\t\t\t\t\t\t\t\tthis.printNewLine(tokenStartPosition);", "-\t\t\t\t\t\t\t\t\tpreserveEmptyLines(lines - 1, whitespacesStartPosition);", "+\t\t\t\t\t\t\t\t\tpreserveEmptyLines(lines - 1, tokenStartPosition);", "-\t\t\t\t\t\t\t\taddDeleteEdit(whitespacesStartPosition, whitespacesEndPosition);", "+\t\t\t\t\t\t\t\taddDeleteEdit(tokenStartPosition, whitespacesEndPosition);", "-\t\t\t\t\t\t\t\taddReplaceEdit(whitespacesStartPosition, whitespacesEndPosition, getPreserveEmptyLines(lines-1));", "+\t\t\t\t\t\t\t\taddReplaceEdit(tokenStartPosition, whitespacesEndPosition, getPreserveEmptyLines(lines-1));", "-\t\t\t\t\t\t\t\taddDeleteEdit(whitespacesStartPosition, whitespacesEndPosition);", "+\t\t\t\t\t\t\t\taddDeleteEdit(tokenStartPosition, whitespacesEndPosition);", "-\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "-\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "-\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "-\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\tif (this.useTags && this.editsEnabled) {", "+\t\t\t\t\t\t\tboolean turnOff = false;", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken", "+\t\t\t\t\t\t\t\t&& CharOperation.fragmentEquals(this.disablingTag, this.scanner.source, tokenStartPosition, true)) {", "+    \t\t\t\t\t\t\tthis.editsEnabled = false;", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t    \t}", "+\t\t\t\t\t\t\tif (turnOff) {", "+\t\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "+\t\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "+\t\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "+\t\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && !this.editsEnabled) {", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken) {", "+\t    \t\t\t\t\t\tthis.editsEnabled = CharOperation.fragmentEquals(this.enablingTag, this.scanner.source, tokenStartPosition, true);", "+\t\t\t\t\t    \t}", "-\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "-\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "-\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "-\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\tif (this.useTags && this.editsEnabled) {", "+\t\t\t\t\t\t\tboolean turnOff = false;", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken", "+\t\t\t\t\t\t\t\t&& CharOperation.fragmentEquals(this.disablingTag, this.scanner.source, tokenStartPosition, true)) {", "+    \t\t\t\t\t\t\tthis.editsEnabled = false;", "+\t\t\t\t\t\t\t\tturnOff = true;", "+\t\t\t\t\t    \t}", "+\t\t\t\t\t\t\tif (turnOff) {", "+\t\t\t\t\t\t\t\tif (!this.editsEnabled && this.editsIndex > 1) {", "+\t\t\t\t\t\t\t\t\tOptimizedReplaceEdit currentEdit = this.edits[this.editsIndex-1];", "+\t\t\t\t\t\t\t\t\tif (this.scanner.startPosition == currentEdit.offset+currentEdit.length) {", "+\t\t\t\t\t\t\t\t\t\tprintNewLinesBeforeDisablingComment();", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > 0) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && !this.editsEnabled) {", "+\t\t\t\t\t\t\tif (foundTaskCount > 0) {", "+\t\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "+\t\t\t\t\t\t\t} else if (this.tagsKind == this.currentToken) {", "+\t    \t\t\t\t\t\tthis.editsEnabled = CharOperation.fragmentEquals(this.enablingTag, this.scanner.source, tokenStartPosition, true);", "+\t\t\t\t\t    \t}"]}], "num": 67806}