{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49313de4b07d7bdbdbf00346783fcb20", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d83892b556b4ce803e5db654becbb80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "f09e5b387a9b27a1161db6587b5598aa2acd37a0", "commitAfterChange": "11f5a7cc7c9c65b20b52b279ac1ac913311b9b45", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic static String warningTokenFromIrritant(long irritant)", "signatureAfterChange": " \t \tpublic static String warningTokenFromIrritant(long irritant)", "diff": ["-\t\t\t\tcase (int) MethodWithConstructorName :", "-\t\t\t\t\treturn \"constructorName\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) OverriddenPackageDefaultMethod :", "-\t\t\t\t\treturn \"pkgDefaultMethod\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) FinallyBlockNotCompleting :", "+\t\t\t\t\treturn \"finally\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) FieldHiding :", "+\t\t\t\tcase (int) LocalVariableHiding :", "-\t\t\t\t\treturn \"maskedCatchBlock\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UnusedLocalVariable :", "-\t\t\t\t\treturn \"unusedLocal\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UnusedArgument :", "-\t\t\t\t\treturn \"unusedArgument\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) NoImplicitStringConversion :", "-\t\t\t\t\treturn \"charConcat\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) AccessEmulation :", "-\t\t\t\t\treturn \"syntheticAccess\"; //$NON-NLS-1$", "+\t\t\t\t\treturn \"hiding\"; //$NON-NLS-1$", "-\t\t\t\t\treturn \"unusedImport\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) NonStaticAccessToStatic :", "-\t\t\t\t\treturn \"staticReceiver\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) NoEffectAssignment :", "-\t\t\t\t\treturn \"noEffectAssign\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) IncompatibleNonInheritedInterfaceMethod :", "-\t\t\t\t\treturn \"intfNonInherited\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UnusedPrivateMember :", "-\t\t\t\t\treturn \"unusedPrivate\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) LocalVariableHiding :", "-\t\t\t\t\treturn \"localHiding\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) FieldHiding :", "-\t\t\t\t\treturn \"fieldHiding\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) AccidentalBooleanAssign :", "-\t\t\t\t\treturn \"conditionAssign\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) EmptyStatement :\t\t", "-\t\t\t\t\treturn \"semicolon\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) MissingJavadocComments :", "-\t\t\t\tcase (int) MissingJavadocTags :", "-\t\t\t\tcase (int) InvalidJavadoc :", "-\t\t\t\tcase (int) (MissingJavadocComments | MissingJavadocTags | InvalidJavadoc):", "-\t\t\t\t\treturn \"javadoc\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UnqualifiedFieldAccess :", "-\t\t\t\t\treturn \"unqualifiedField\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UnusedDeclaredThrownException :", "-\t\t\t\t\treturn \"unusedThrown\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) FinallyBlockNotCompleting :", "-\t\t\t\t\treturn \"finally\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UnnecessaryTypeCheck :", "-\t\t\t\t\treturn \"uselessTypeCheck\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UndocumentedEmptyBlock :", "-\t\t\t\t\treturn \"emptyBlock\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnusedLocalVariable :", "+\t\t\t\tcase (int) UnusedArgument :", "+\t\t\t\tcase (int) UnusedPrivateMember:", "+\t\t\t\tcase (int) UnusedDeclaredThrownException:", "+\t\t\t\t\treturn \"unused\"; //$NON-NLS-1$", "-\t\t\t\t\treturn \"indirectStatic\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) UnnecessaryElse :", "-\t\t\t\t\treturn \"unnecessaryElse\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) NonStaticAccessToStatic :", "+\t\t\t\t\treturn \"static-access\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) AccessEmulation :", "+\t\t\t\t\treturn \"synthetic-access\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnqualifiedFieldAccess :", "+\t\t\t\t\treturn \"unqualified-field-access\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (FinalParameterBound >>> 32) :", "-\t\t\t\t\treturn \"finalBound\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (EnumUsedAsAnIdentifier >>> 32) :", "-\t\t\t\t\treturn \"enumIdentifier\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (ForbiddenReference >>> 32) :", "-\t\t\t\tcase (int) (DiscouragedReference >>> 32) :", "-\t\t\t\tcase (int) ((ForbiddenReference | DiscouragedReference) >>> 32)  :", "-\t\t\t\t\treturn \"restricted\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (VarargsArgumentNeedCast >>> 32) :", "-\t\t\t\t\treturn \"varargs\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (NullReference >>> 32) :", "-\t\t\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (AnnotationSuperInterface >>> 32) :", "-\t\t\t\t\treturn \"intfAnnotation\"; //$NON-NLS-1$", "-\t\t\t\t\treturn \"typeHiding\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (MissingOverrideAnnotation >>> 32) :", "-\t\t\t\t\treturn \"over-ann\"; //$NON-NLS-1$", "+\t\t\t\t\treturn \"hiding\"; //$NON-NLS-1$", "-\t\t\t\t\treturn \"enumSwitch\"; //$NON-NLS-1$", "+\t\t\t\t\treturn \"incomplete-switch\"; //$NON-NLS-1$", "-\t\t\t\tcase (int) (UnhandledWarningToken >>> 32) :", "-\t\t\t\t\treturn \"warningToken\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babfb23a50e3e6ebc8ca7830e98c14d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "1924cfa5e4209a8742be0104afe1beaad86d0922", "commitAfterChange": "dfe897878a3115c90160783084107f96dcd301be", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tvoid suppressWarning(long irritant)", "signatureAfterChange": " \t \tpublic static String warningTokenFromIrritant(long irritant)", "diff": ["-\tvoid suppressWarning(long irritant) {", "-\t\tthis.warningThreshold &= ~irritant;", "-\t}", "+\t", "+\tpublic static String warningTokenFromIrritant(long irritant) {", "+\t\tint irritantInt = (int) irritant;", "+\t\tif (irritantInt == irritant) {", "+\t\t\tswitch (irritantInt) {", "+\t\t\t\tcase (int) MethodWithConstructorName :", "+\t\t\t\t\treturn \"constructorName\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) OverriddenPackageDefaultMethod :", "+\t\t\t\t\treturn \"pkgDefaultMethod\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UsingDeprecatedAPI :", "+\t\t\t\t\treturn \"deprecation\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) MaskedCatchBlock :", "+\t\t\t\t\treturn \"maskedCatchBlock\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnusedLocalVariable :", "+\t\t\t\t\treturn \"unusedLocal\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnusedArgument :", "+\t\t\t\t\treturn \"unusedArgument\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) NoImplicitStringConversion :", "+\t\t\t\t\treturn \"charConcat\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) AccessEmulation :", "+\t\t\t\t\treturn \"syntheticAccess\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) NonExternalizedString :", "+\t\t\t\t\treturn \"nls\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) AssertUsedAsAnIdentifier :", "+\t\t\t\t\treturn \"assertIdentifier\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnusedImport :", "+\t\t\t\t\treturn \"unusedImport\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) NonStaticAccessToStatic :", "+\t\t\t\t\treturn \"staticReceiver\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) NoEffectAssignment :", "+\t\t\t\t\treturn \"noEffectAssign\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) IncompatibleNonInheritedInterfaceMethod :", "+\t\t\t\t\treturn \"intfNonInherited\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnusedPrivateMember :", "+\t\t\t\t\treturn \"unusedPrivate\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) LocalVariableHiding :", "+\t\t\t\t\treturn \"localHiding\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) FieldHiding :", "+\t\t\t\t\treturn \"fieldHiding\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) AccidentalBooleanAssign :", "+\t\t\t\t\treturn \"conditionAssign\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) EmptyStatement :\t\t\t\t\t\t\t\t// TODO (philippe) still needed ?", "+\t\t\t\t\treturn \"emptyBlock\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) MissingJavadocComments :", "+\t\t\t\tcase (int) MissingJavadocTags :", "+\t\t\t\tcase (int) InvalidJavadoc :", "+\t\t\t\tcase (int) (MissingJavadocComments | MissingJavadocTags | InvalidJavadoc):", "+\t\t\t\t\treturn \"javadoc\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnqualifiedFieldAccess :", "+\t\t\t\t\treturn \"unqualifiedField\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnusedDeclaredThrownException :", "+\t\t\t\t\treturn \"unusedThrown\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) FinallyBlockNotCompleting :", "+\t\t\t\t\treturn \"finally\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnnecessaryTypeCheck :", "+\t\t\t\t\treturn \"uselessTypeCheck\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UndocumentedEmptyBlock :", "+\t\t\t\t\treturn \"emptyBlock\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) IndirectStaticAccess :", "+\t\t\t\t\treturn \"indirectStatic\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UnnecessaryElse :", "+\t\t\t\t\treturn \"unnecessaryElse\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) UncheckedTypeOperation :", "+\t\t\t\t\treturn \"unchecked\"; //$NON-NLS-1$", "+\t\t\t}", "+\t\t} else {", "+\t\t\tirritantInt = (int)(irritant >>> 32);", "+\t\t\tswitch (irritantInt) {", "+\t\t\t\tcase (int) (FinalParameterBound >>> 32) :", "+\t\t\t\t\treturn \"finalBound\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (MissingSerialVersion >>> 32) :", "+\t\t\t\t\treturn \"serial\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (EnumUsedAsAnIdentifier >>> 32) :", "+\t\t\t\t\treturn \"enumIdentifier\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (ForbiddenReference >>> 32) :", "+\t\t\t\tcase (int) (DiscouragedReference >>> 32) :", "+\t\t\t\tcase (int) ((ForbiddenReference | DiscouragedReference) >>> 32)  :", "+\t\t\t\t\treturn \"restricted\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (VarargsArgumentNeedCast >>> 32) :", "+\t\t\t\t\treturn \"varargs\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (NullReference >>> 32) :", "+\t\t\t\t\treturn \"null\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (Autoboxing >>> 32) :", "+\t\t\t\t\treturn \"boxing\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (AnnotationSuperInterface >>> 32) :", "+\t\t\t\t\treturn \"intfAnnotation\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (TypeParameterHiding >>> 32) :", "+\t\t\t\t\treturn \"typeHiding\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (MissingOverrideAnnotation >>> 32) :", "+\t\t\t\t\treturn \"over-ann\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (IncompleteEnumSwitch >>> 32) :", "+\t\t\t\t\treturn \"enumSwitch\"; //$NON-NLS-1$", "+\t\t\t\tcase (int) (MissingDeprecatedAnnotation >>> 32) :", "+\t\t\t\t\treturn \"dep-ann\"; //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\treturn null;", "+\t}"]}], "num": 55433}