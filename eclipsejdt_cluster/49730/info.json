{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53d96853cfa0f261256399fc1739e986", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa3246303522ed5b1ebd1fe18b78265", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void testTypeRefGenericAllG5_TypeArgument() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAllG5_TypeArgument() throws CoreException", "diff": ["-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<\ufffd|Object|\ufffd, Exception, RuntimeException> gm = new Multiple<Object, Exception, RuntimeException>();@115] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, \ufffd|Exception|\ufffd, RuntimeException> gm = new Multiple<Object, Exception, RuntimeException>();@123] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, \ufffd|RuntimeException|\ufffd> gm = new Multiple<Object, Exception, RuntimeException>();@134] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, RuntimeException> gm = new Multiple<\ufffd|Object|\ufffd, Exception, RuntimeException>();@170] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, RuntimeException> gm = new Multiple<Object, \ufffd|Exception|\ufffd, RuntimeException>();@178] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, RuntimeException> gm = new Multiple<Object, Exception, \ufffd|RuntimeException|\ufffd>();@189] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.<\ufffd|Object|\ufffd, Exception, RuntimeException>generic(new Object(), new Exception(), new RuntimeException());@367] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.<Object, \ufffd|Exception|\ufffd, RuntimeException>generic(new Object(), new Exception(), new RuntimeException());@375] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.<Object, Exception, \ufffd|RuntimeException|\ufffd>generic(new Object(), new Exception(), new RuntimeException());@386] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.paramTypesArgs(new Single<\ufffd|Object|\ufffd>(), new Single<Exception>(), new Single<RuntimeException>(), gm);@656] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<\ufffd|Exception|\ufffd>(), new Single<RuntimeException>(), gm);@678] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<Exception>(), new Single<\ufffd|RuntimeException|\ufffd>(), gm);@703] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm = gm.<\ufffd|Object|\ufffd, Exception, RuntimeException>complete(new Object(), new Exception(), new RuntimeException(), gm);@838] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm = gm.<Object, \ufffd|Exception|\ufffd, RuntimeException>complete(new Object(), new Exception(), new RuntimeException(), gm);@846] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm = gm.<Object, Exception, \ufffd|RuntimeException|\ufffd>complete(new Object(), new Exception(), new RuntimeException(), gm);@857] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testUnbound() [\t\tgm.paramTypesArgs(new Single<\ufffd|Object|\ufffd>(), new Single<Object>(), new Single<Object>(), gm);@1095] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testUnbound() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<\ufffd|Object|\ufffd>(), new Single<Object>(), gm);@1117] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testUnbound() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<Object>(), new Single<\ufffd|Object|\ufffd>(), gm);@1139] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<\ufffd|Object|\ufffd, ? extends Throwable, ? extends Exception> gm = new Multiple<Object, Exception, RuntimeException>();@1295] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<Object, ? extends Throwable, ? extends Exception> gm = new Multiple<\ufffd|Object|\ufffd, Exception, RuntimeException>();@1363] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<Object, ? extends Throwable, ? extends Exception> gm = new Multiple<Object, \ufffd|Exception|\ufffd, RuntimeException>();@1371] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<Object, ? extends Throwable, ? extends Exception> gm = new Multiple<Object, Exception, \ufffd|RuntimeException|\ufffd>();@1382] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.<\ufffd|Object|\ufffd, RuntimeException, RuntimeException>generic(new Object(), new RuntimeException(), new RuntimeException());@1409] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.<Object, \ufffd|RuntimeException|\ufffd, RuntimeException>generic(new Object(), new RuntimeException(), new RuntimeException());@1417] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.<Object, RuntimeException, \ufffd|RuntimeException|\ufffd>generic(new Object(), new RuntimeException(), new RuntimeException());@1435] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.paramTypesArgs(new Single<\ufffd|Object|\ufffd>(), new Single<Throwable>(), new Single<Exception>(), gm);@1554] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<\ufffd|Throwable|\ufffd>(), new Single<Exception>(), gm);@1576] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<Throwable>(), new Single<\ufffd|Exception|\ufffd>(), gm);@1601] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm = gm.<\ufffd|Object|\ufffd, RuntimeException, RuntimeException>complete(new Object(), new RuntimeException(), new RuntimeException(), gm);@1660] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm = gm.<Object, \ufffd|RuntimeException|\ufffd, RuntimeException>complete(new Object(), new RuntimeException(), new RuntimeException(), gm);@1668] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm = gm.<Object, RuntimeException, \ufffd|RuntimeException|\ufffd>complete(new Object(), new RuntimeException(), new RuntimeException(), gm);@1686] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<\ufffd|Object|\ufffd, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<Object, Exception, RuntimeException>();@1893] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<Object, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<\ufffd|Object|\ufffd, Exception, RuntimeException>();@1983] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<Object, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<Object, \ufffd|Exception|\ufffd, RuntimeException>();@1991] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<Object, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<Object, Exception, \ufffd|RuntimeException|\ufffd>();@2002] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.<\ufffd|Object|\ufffd, RuntimeException, IllegalMonitorStateException>generic(new Object(), new RuntimeException(), new IllegalMonitorStateException());@2029] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.<Object, \ufffd|RuntimeException|\ufffd, IllegalMonitorStateException>generic(new Object(), new RuntimeException(), new IllegalMonitorStateException());@2037] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.<Object, RuntimeException, \ufffd|IllegalMonitorStateException|\ufffd>generic(new Object(), new RuntimeException(), new IllegalMonitorStateException());@2055] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.paramTypesArgs(new Single<\ufffd|Object|\ufffd>(), new Single<RuntimeException>(), new Single<RuntimeException>(), gm);@2198] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<\ufffd|RuntimeException|\ufffd>(), new Single<RuntimeException>(), gm);@2220] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<RuntimeException>(), new Single<\ufffd|RuntimeException|\ufffd>(), gm);@2252] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm = gm.<\ufffd|Object|\ufffd, RuntimeException, IllegalMonitorStateException>complete(new Object(), new RuntimeException(), new IllegalMonitorStateException(), gm);@2318] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm = gm.<Object, \ufffd|RuntimeException|\ufffd, IllegalMonitorStateException>complete(new Object(), new RuntimeException(), new IllegalMonitorStateException(), gm);@2326] EXACT_MATCH\\n\" +", "-\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm = gm.<Object, RuntimeException, \ufffd|IllegalMonitorStateException|\ufffd>complete(new Object(), new RuntimeException(), new IllegalMonitorStateException(), gm);@2344] EXACT_MATCH\"", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<!|Object|!, Exception, RuntimeException> gm = new Multiple<Object, Exception, RuntimeException>();@115] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, !|Exception|!, RuntimeException> gm = new Multiple<Object, Exception, RuntimeException>();@123] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, !|RuntimeException|!> gm = new Multiple<Object, Exception, RuntimeException>();@134] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, RuntimeException> gm = new Multiple<!|Object|!, Exception, RuntimeException>();@170] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, RuntimeException> gm = new Multiple<Object, !|Exception|!, RuntimeException>();@178] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tMultiple<Object, Exception, RuntimeException> gm = new Multiple<Object, Exception, !|RuntimeException|!>();@189] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.<!|Object|!, Exception, RuntimeException>generic(new Object(), new Exception(), new RuntimeException());@367] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.<Object, !|Exception|!, RuntimeException>generic(new Object(), new Exception(), new RuntimeException());@375] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.<Object, Exception, !|RuntimeException|!>generic(new Object(), new Exception(), new RuntimeException());@386] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.paramTypesArgs(new Single<!|Object|!>(), new Single<Exception>(), new Single<RuntimeException>(), gm);@656] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<!|Exception|!>(), new Single<RuntimeException>(), gm);@678] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<Exception>(), new Single<!|RuntimeException|!>(), gm);@703] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm = gm.<!|Object|!, Exception, RuntimeException>complete(new Object(), new Exception(), new RuntimeException(), gm);@838] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm = gm.<Object, !|Exception|!, RuntimeException>complete(new Object(), new Exception(), new RuntimeException(), gm);@846] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [\t\tgm = gm.<Object, Exception, !|RuntimeException|!>complete(new Object(), new Exception(), new RuntimeException(), gm);@857] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testUnbound() [\t\tgm.paramTypesArgs(new Single<!|Object|!>(), new Single<Object>(), new Single<Object>(), gm);@1095] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testUnbound() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<!|Object|!>(), new Single<Object>(), gm);@1117] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testUnbound() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<Object>(), new Single<!|Object|!>(), gm);@1139] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<!|Object|!, ? extends Throwable, ? extends Exception> gm = new Multiple<Object, Exception, RuntimeException>();@1295] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<Object, ? extends Throwable, ? extends Exception> gm = new Multiple<!|Object|!, Exception, RuntimeException>();@1363] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<Object, ? extends Throwable, ? extends Exception> gm = new Multiple<Object, !|Exception|!, RuntimeException>();@1371] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tMultiple<Object, ? extends Throwable, ? extends Exception> gm = new Multiple<Object, Exception, !|RuntimeException|!>();@1382] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.<!|Object|!, RuntimeException, RuntimeException>generic(new Object(), new RuntimeException(), new RuntimeException());@1409] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.<Object, !|RuntimeException|!, RuntimeException>generic(new Object(), new RuntimeException(), new RuntimeException());@1417] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.<Object, RuntimeException, !|RuntimeException|!>generic(new Object(), new RuntimeException(), new RuntimeException());@1435] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.paramTypesArgs(new Single<!|Object|!>(), new Single<Throwable>(), new Single<Exception>(), gm);@1554] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<!|Throwable|!>(), new Single<Exception>(), gm);@1576] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<Throwable>(), new Single<!|Exception|!>(), gm);@1601] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm = gm.<!|Object|!, RuntimeException, RuntimeException>complete(new Object(), new RuntimeException(), new RuntimeException(), gm);@1660] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm = gm.<Object, !|RuntimeException|!, RuntimeException>complete(new Object(), new RuntimeException(), new RuntimeException(), gm);@1668] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [\t\tgm = gm.<Object, RuntimeException, !|RuntimeException|!>complete(new Object(), new RuntimeException(), new RuntimeException(), gm);@1686] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<!|Object|!, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<Object, Exception, RuntimeException>();@1893] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<Object, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<!|Object|!, Exception, RuntimeException>();@1983] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<Object, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<Object, !|Exception|!, RuntimeException>();@1991] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tMultiple<Object, ? super RuntimeException, ? super IllegalMonitorStateException> gm = new Multiple<Object, Exception, !|RuntimeException|!>();@2002] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.<!|Object|!, RuntimeException, IllegalMonitorStateException>generic(new Object(), new RuntimeException(), new IllegalMonitorStateException());@2029] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.<Object, !|RuntimeException|!, IllegalMonitorStateException>generic(new Object(), new RuntimeException(), new IllegalMonitorStateException());@2037] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.<Object, RuntimeException, !|IllegalMonitorStateException|!>generic(new Object(), new RuntimeException(), new IllegalMonitorStateException());@2055] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.paramTypesArgs(new Single<!|Object|!>(), new Single<RuntimeException>(), new Single<RuntimeException>(), gm);@2198] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<!|RuntimeException|!>(), new Single<RuntimeException>(), gm);@2220] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm.paramTypesArgs(new Single<Object>(), new Single<RuntimeException>(), new Single<!|RuntimeException|!>(), gm);@2252] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm = gm.<!|Object|!, RuntimeException, IllegalMonitorStateException>complete(new Object(), new RuntimeException(), new IllegalMonitorStateException(), gm);@2318] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm = gm.<Object, !|RuntimeException|!, IllegalMonitorStateException>complete(new Object(), new RuntimeException(), new IllegalMonitorStateException(), gm);@2326] EXACT_MATCH\\n\" +", "+\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [\t\tgm = gm.<Object, RuntimeException, !|IllegalMonitorStateException|!>complete(new Object(), new RuntimeException(), new IllegalMonitorStateException(), gm);@2344] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e54ab9494d33508a96585087a4a95a59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9f4083645d70a432f33ad4b76043e33c22dce66a", "commitAfterChange": "62b1363351c6bbbf8add0db3d16b932995188a11", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testStringParameterizedSingleArgument01() throws CoreException", "signatureAfterChange": " \tpublic void testStringParameterizedSingleArgument01() throws CoreException", "diff": ["-\t\t\t\"src/g1/t/m/ref/R1.java [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R1.java g1.t.m.ref.R1.gen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R1.java g1.t.m.ref.R1.qgen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R3.java [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.gen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.qgen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R4.java [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.gen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.qgen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_obj [Generic<Object>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_exc [Generic<Exception>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R1.java [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R1.java g1.t.m.ref.R1.gen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R1.java g1.t.m.ref.R1.qgen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R3.java [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.gen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.qgen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R4.java [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.gen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.qgen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_obj [Generic<Object>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_exc [Generic<Exception>] EQUIVALENT_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_thr [Generic<? extends Throwable>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_run [Generic<? super RuntimeException>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_obj [Generic<Object>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_exc [Generic<Exception>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_thr [Generic<? extends Throwable>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_run [Generic<? super RuntimeException>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_obj [Generic<Object>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_exc [Generic<Exception>] EQUIVALENT_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_thr [Generic<? extends Throwable>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_run [Generic<? super RuntimeException>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_obj [Generic<Object>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_exc [Generic<Exception>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_thr [Generic<? extends Throwable>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_run [Generic<? super RuntimeException>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_obj [Generic<Object>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_exc [Generic<Exception>] EQUIVALENT_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_thr [Generic<? extends Throwable>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_run [Generic<? super RuntimeException>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_obj [Generic<Object>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_exc [Generic<Exception>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_thr [Generic<? extends Throwable>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_run [Generic<? super RuntimeException>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_obj [Generic<Object>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_exc [Generic<Exception>] EQUIVALENT_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_thr [Generic<? extends Throwable>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_run [Generic<? super RuntimeException>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_obj [Generic<Object>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_exc [Generic<Exception>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_thr [Generic<? extends Throwable>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_run [Generic<? super RuntimeException>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_obj [Generic<Object>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_exc [Generic<Exception>] EQUIVALENT_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_thr [Generic<? extends Throwable>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_run [Generic<? super RuntimeException>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen [Generic] COMPATIBLE_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_obj [Generic<Object>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_exc [Generic<Exception>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_thr [Generic<? extends Throwable>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_run [Generic<? super RuntimeException>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen [Generic] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_obj [Generic<Object>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_exc [Generic<Exception>] EQUIVALENT_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_thr [Generic<? extends Throwable>] COMPATIBLE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_run [Generic<? super RuntimeException>] COMPATIBLE_MATCH\",", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_thr [Generic<? extends Throwable>] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_run [Generic<? super RuntimeException>] EQUIVALENT_MATCH\","]}], "num": 49730}