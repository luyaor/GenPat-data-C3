{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "796edfb83299beedc877fc268a839edf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ca4d4f0708ed25e1f9968d9a47f45a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\tString incompleteCPOption = JavaCore.getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH);", "+\t\t\t\t\tString incompleteCPOption = this.getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH, true);", "-\t\t\t\t\t\t\t\tString incompleteCPOption = JavaCore.getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH);", "+\t\t\t\t\t\t\t\tString incompleteCPOption = this.getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30335ee7c5a584cf4e8c8c3c64c801df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  static State read(DataInputStream in) throws IOException", "signatureAfterChange": "  static State read(DataInputStream in) throws IOException", "diff": ["+\tString encoding = JavaCore.create(ResourcesPlugin.getWorkspace().getRoot().getProject(newState.javaProjectName)).getOption(JavaCore.CORE_ENCODING, true);", "-\t\t\t\tnewState.classpathLocations[i] = ClasspathLocation.forSourceFolder(in.readUTF(), in.readUTF());", "+\t\t\t\tnewState.classpathLocations[i] = ClasspathLocation.forSourceFolder(in.readUTF(), in.readUTF(), encoding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "751520cc5081e7fa6792b960a2830baa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2b810e9ce6e62d5b8f5d0b01de3fab00973de806", "commitAfterChange": "e07ac4343b59e78d96b40c4bf7bf797b84cb728a", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\t\t\tif (!status.isOK())", "+\t\t\t\tif (!status.isOK()) {", "+\t\t\t\t\tString incompleteCPOption = JavaCore.getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH);", "-\t\t\t\t\t\tIMarker.SEVERITY_ERROR,", "+\t\t\t\t\t\tJavaCore.ERROR.equals(incompleteCPOption) ? IMarker.SEVERITY_ERROR : IMarker.SEVERITY_WARNING,", "+\t\t\t}", "-\t\t\t\t\t\t\tif (!status.isOK())", "+\t\t\t\t\t\t\tif (!status.isOK()) {", "+\t\t\t\t\t\t\t\tString incompleteCPOption = JavaCore.getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH);", "-\t\t\t\t\t\t\t\t\tIMarker.SEVERITY_ERROR,", "+\t\t\t\t\t\t\t\t\tJavaCore.ERROR.equals(incompleteCPOption) ? IMarker.SEVERITY_ERROR : IMarker.SEVERITY_WARNING,", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de00f5af863568eb2060cf67117d647a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static ClasspathLocation[] computeLocations( \tIWorkspaceRoot workspaceRoot, \tIJavaProject javaProject, \tString outputFolderLocation, \tArrayList sourceFolders, \tSimpleLookupTable binaryResources) throws JavaModelException", "signatureAfterChange": " public static ClasspathLocation[] computeLocations( \tIWorkspaceRoot workspaceRoot, \tIJavaProject javaProject, \tString outputFolderLocation, \tArrayList sourceFolders, \tSimpleLookupTable binaryResources) throws JavaModelException", "diff": ["-\t\tString circularCPOption = JavaCore.getOption(JavaCore.CORE_CIRCULAR_CLASSPATH);", "+\t\tString circularCPOption = javaProject.getOption(JavaCore.CORE_CIRCULAR_CLASSPATH, true);", "-", "+\tString encoding = javaProject.getOption(JavaCore.CORE_ENCODING, true);", "-\t\t\t\t\t\t\tClasspathLocation.forSourceFolder(resource.getLocation().toString(), outputFolderLocation);", "+\t\t\t\t\t\t\tClasspathLocation.forSourceFolder(resource.getLocation().toString(), outputFolderLocation, encoding);"]}], "num": 63272}