{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a0cfa4ab0ee900c943ee982c876d891", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41616476af3d2b47e26384d22610aa39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "1eeba055c4a858ddea83f6c85864678280808173", "commitAfterChange": "63b001f83264125c7dd42160689ada7c16b8afb5", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic static void setComplianceOptions(String compliance, Map options)", "signatureAfterChange": " \tpublic static void setComplianceOptions(String compliance, Map options)", "diff": ["+\t\t\t\tbreak;", "+\t\t\tcase ClassFileConstants.MAJOR_VERSION_1_8:", "+\t\t\t\toptions.put(JavaCore.COMPILER_COMPLIANCE, JavaCore.VERSION_1_8);", "+\t\t\t\toptions.put(JavaCore.COMPILER_SOURCE, JavaCore.VERSION_1_8);", "+\t\t\t\toptions.put(JavaCore.COMPILER_CODEGEN_TARGET_PLATFORM, JavaCore.VERSION_1_8);", "+\t\t\t\toptions.put(JavaCore.COMPILER_PB_ASSERT_IDENTIFIER, JavaCore.ERROR);", "+\t\t\t\toptions.put(JavaCore.COMPILER_PB_ENUM_IDENTIFIER, JavaCore.ERROR);", "+\t\t\t\toptions.put(JavaCore.COMPILER_CODEGEN_INLINE_JSR_BYTECODE, JavaCore.ENABLED);", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e027326f8d4e990a9419ee9b549838e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/old/CodeFormatter.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic String format(String string, int indentLevel, int[] positions, String lineSeparator)", "signatureAfterChange": " \t \tpublic String format(String string, int indentLevel, int[] positions, String lineSeparator)", "diff": ["-\t\tMap newOptions = DefaultCodeFormatterConstants.getDefaultSettings();", "+\t\tMap newOptions = DefaultCodeFormatterConstants.getEclipse21Settings();", "-\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_IN_CONTROL_STATEMENTS, JavaCore.INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_CATCH_IN_TRY_STATEMENT, JavaCore.INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_ELSE_IN_IF_STATEMENT, JavaCore.INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_FINALLY_IN_TRY_STATEMENT, JavaCore.INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_WHILE_IN_DO_STATEMENT, JavaCore.INSERT);", "-\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_IN_CONTROL_STATEMENTS, JavaCore.DO_NOT_INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_CATCH_IN_TRY_STATEMENT, JavaCore.DO_NOT_INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_ELSE_IN_IF_STATEMENT, JavaCore.DO_NOT_INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_FINALLY_IN_TRY_STATEMENT, JavaCore.DO_NOT_INSERT);", "+\t\t\t\tnewOptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_BEFORE_WHILE_IN_DO_STATEMENT, JavaCore.DO_NOT_INSERT);"]}], "num": 5775}