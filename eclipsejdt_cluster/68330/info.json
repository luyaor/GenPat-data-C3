{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "822c30a89f47b437f74443e8e3e9cc7c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c6ca785c7e8fe452cc45f60a4db64c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryClasspathContainerInitializer.java", "commitBeforeChange": "2fdac50d0a994a41e3b73d3202a0de983b014e1d", "commitAfterChange": "5291cd66203d5d42725b1c4b5cba50a5232bc244", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void requestClasspathContainerUpdate(IPath containerPath, IJavaProject project, IClasspathContainer containerSuggestion) throws CoreException", "signatureAfterChange": " \tpublic void requestClasspathContainerUpdate(IPath containerPath, IJavaProject project, IClasspathContainer containerSuggestion) throws CoreException", "diff": ["-\t\t\tString name= containerPath.segment(1);", "+\t\t\tString name = containerPath.segment(1);", "-\t\t\t\tUserLibrary library= new UserLibrary(containerSuggestion.getClasspathEntries(), containerSuggestion.getKind() == IClasspathContainer.K_SYSTEM);", "-\t\t\t\tUserLibraryManager.setUserLibrary(name, library, null); // should use a real progress monitor", "+\t\t\t\tJavaModelManager.getUserLibraryManager().setUserLibrary(name, containerSuggestion.getClasspathEntries(), containerSuggestion.getKind() == IClasspathContainer.K_SYSTEM);", "-\t\t\t\tUserLibraryManager.setUserLibrary(name, null, null); // should use a real progress monitor", "+\t\t\t\tJavaModelManager.getUserLibraryManager().removeUserLibrary(name);", "+\t\t\t// update of affected projects was done as a consequence of setUserLibrary() or removeUserLibrary()", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed19e178ac0d1d5e162c10a74c2d1158", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryClasspathContainerInitializer.java", "commitBeforeChange": "b8b907ea5f26b006c6f4def7b71e1ef512b2b5c3", "commitAfterChange": "fd8b48bd9b5a710ffef0faef23e79fc75292131d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void initialize(IPath containerPath, IJavaProject project) throws CoreException", "signatureAfterChange": " \tpublic void initialize(IPath containerPath, IJavaProject project) throws CoreException", "diff": ["-\t\t\tString userLibName= containerPath.segment(1);", "+\t\t\tString userLibName = containerPath.segment(1);", "-\t\t\tUserLibrary entries= UserLibraryManager.getUserLibrary(userLibName);", "+\t\t\tUserLibrary entries = UserLibraryManager.getUserLibrary(userLibName);", "-\t\t\t\tUserLibraryClasspathContainer container= new UserLibraryClasspathContainer(userLibName);", "+\t\t\t\tUserLibraryClasspathContainer container = new UserLibraryClasspathContainer(userLibName);", "+\t\t\t} else if (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\t\tverbose_no_user_library_found(project, userLibName);", "+\t\t} else if (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\tverbose_not_a_user_library(project, containerPath);"]}], "num": 68330}