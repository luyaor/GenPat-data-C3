{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4049c3311298b6625007da1c03445fe6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c5429690aaee79fbba64fe4cdf4906b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 58, "signatureBeforeChange": " public int literalIndexForJavaLangSystemOut()", "signatureAfterChange": " public int literalIndexForJavaLangStringBuilderConstructor()", "diff": ["+public int literalIndexForJavaLangStringBuilderConstructor() {", "+\tint index;", "+\tint nameAndTypeIndex;", "+\tint classIndex;", "+\t// Looking into the method ref table", "+\tif ((index = wellKnownMethods[STRINGBUILDER_STRING_CONSTR_METHOD]) == 0) {", "+\t\tclassIndex = literalIndexForJavaLangStringBuilder();", "+\t\tif ((nameAndTypeIndex = wellKnownMethodNameAndTypes[CONSTR_STRING_METHOD_NAME_AND_TYPE]) == 0) {", "+\t\t\tint nameIndex = literalIndex(QualifiedNamesConstants.Init);", "+\t\t\tint typeIndex = literalIndex(QualifiedNamesConstants.StringConstructorSignature);", "+\t\t\tnameAndTypeIndex = wellKnownMethodNameAndTypes[CONSTR_STRING_METHOD_NAME_AND_TYPE] = currentIndex++;", "+\t\t\twriteU1(NameAndTypeTag);", "+\t\t\twriteU2(nameIndex);", "+\t\t\twriteU2(typeIndex);", "+\t\t}", "+\t\tindex = wellKnownMethods[STRINGBUILDER_STRING_CONSTR_METHOD] = currentIndex++;", "+\t\tif (index > 0xFFFF){", "+\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "+\t\t}", "+\t\t// Write the method ref constant into the constant pool", "+\t\t// First add the tag", "+\t\twriteU1(MethodRefTag);", "+\t\t// Then write the class index", "+\t\twriteU2(classIndex);", "+\t\t// The write the nameAndType index", "+\t\twriteU2(nameAndTypeIndex);", "+\t}", "+\treturn index;", "+}", "- */", "-public int literalIndexForJavaLangSystemOut() {", "-\tint index;", "-\tif ((index = wellKnownFields[OUT_SYSTEM_FIELD]) == 0) {", "-\t\tint nameAndTypeIndex;", "-\t\tint classIndex;", "-\t\t// The entry doesn't exit yet", "-\t\tclassIndex = literalIndexForJavaLangSystem();", "-\t\tif ((nameAndTypeIndex = wellKnownMethodNameAndTypes[OUT_SYSTEM_NAME_AND_TYPE]) == 0) {", "-\t\t\tint nameIndex = literalIndex(QualifiedNamesConstants.Out);", "-\t\t\tint typeIndex = literalIndex(QualifiedNamesConstants.JavaIoPrintStreamSignature);", "-\t\t\tnameAndTypeIndex = wellKnownMethodNameAndTypes[OUT_SYSTEM_NAME_AND_TYPE] = currentIndex++;", "-\t\t\twriteU1(NameAndTypeTag);", "-\t\t\twriteU2(nameIndex);", "-\t\t\twriteU2(typeIndex);", "-\t\t}", "-\t\tindex = wellKnownFields[OUT_SYSTEM_FIELD] = currentIndex++;", "-\t\tif (index > 0xFFFF){", "-\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "-\t\t}", "-\t\twriteU1(FieldRefTag);", "-\t\twriteU2(classIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510cf4b854aafa9c888757a5069d6c0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 66, "signatureBeforeChange": " public int literalIndexForJavaLangStringValueOf(int typeID)", "signatureAfterChange": " public int literalIndexForJavaLangStringValueOf(int typeID)", "diff": ["-\tint classIndex = literalIndexForJavaLangString();", "-\t\t\tif ((index = wellKnownMethods[VALUEOF_INT_METHOD]) == 0) {", "+\t\t\tif ((index = wellKnownMethods[STRING_VALUEOF_INT_METHOD]) == 0) {", "+\t\t\t\tint classIndex = literalIndexForJavaLangString();", "-\t\t\t\tindex = wellKnownMethods[VALUEOF_INT_METHOD] = currentIndex++;", "+\t\t\t\tindex = wellKnownMethods[STRING_VALUEOF_INT_METHOD] = currentIndex++;", "-\t\t\tif ((index = wellKnownMethods[VALUEOF_LONG_METHOD]) == 0) {", "+\t\t\tif ((index = wellKnownMethods[STRING_VALUEOF_LONG_METHOD]) == 0) {", "+\t\t\t\tint classIndex = literalIndexForJavaLangString();", "-\t\t\t\tindex = wellKnownMethods[VALUEOF_LONG_METHOD] = currentIndex++;", "+\t\t\t\tindex = wellKnownMethods[STRING_VALUEOF_LONG_METHOD] = currentIndex++;", "-\t\t\tif ((index = wellKnownMethods[VALUEOF_FLOAT_METHOD]) == 0) {", "+\t\t\tif ((index = wellKnownMethods[STRING_VALUEOF_FLOAT_METHOD]) == 0) {", "+\t\t\t\tint classIndex = literalIndexForJavaLangString();", "-\t\t\t\tindex = wellKnownMethods[VALUEOF_FLOAT_METHOD] = currentIndex++;", "+\t\t\t\tindex = wellKnownMethods[STRING_VALUEOF_FLOAT_METHOD] = currentIndex++;", "-\t\t\tif ((index = wellKnownMethods[VALUEOF_DOUBLE_METHOD]) == 0) {", "+\t\t\tif ((index = wellKnownMethods[STRING_VALUEOF_DOUBLE_METHOD]) == 0) {", "+\t\t\t\tint classIndex = literalIndexForJavaLangString();", "-\t\t\t\tindex = wellKnownMethods[VALUEOF_DOUBLE_METHOD] = currentIndex++;", "+\t\t\t\tindex = wellKnownMethods[STRING_VALUEOF_DOUBLE_METHOD] = currentIndex++;", "-\t\t\tif ((index = wellKnownMethods[VALUEOF_CHAR_METHOD]) == 0) {", "+\t\t\tif ((index = wellKnownMethods[STRING_VALUEOF_CHAR_METHOD]) == 0) {", "+\t\t\t\tint classIndex = literalIndexForJavaLangString();", "-\t\t\t\tindex = wellKnownMethods[VALUEOF_CHAR_METHOD] = currentIndex++;", "+\t\t\t\tindex = wellKnownMethods[STRING_VALUEOF_CHAR_METHOD] = currentIndex++;", "-\t\t\tif ((index = wellKnownMethods[VALUEOF_BOOLEAN_METHOD]) == 0) {", "+\t\t\tif ((index = wellKnownMethods[STRING_VALUEOF_BOOLEAN_METHOD]) == 0) {", "+\t\t\t\tint classIndex = literalIndexForJavaLangString();", "-\t\t\t\tindex = wellKnownMethods[VALUEOF_BOOLEAN_METHOD] = currentIndex++;", "+\t\t\t\tindex = wellKnownMethods[STRING_VALUEOF_BOOLEAN_METHOD] = currentIndex++;", "-\t\t\tif ((index = wellKnownMethods[VALUEOF_OBJECT_METHOD]) == 0) {", "+\t\t\tif ((index = wellKnownMethods[STRING_VALUEOF_OBJECT_METHOD]) == 0) {", "+\t\t\t\tint classIndex = literalIndexForJavaLangString();", "-\t\t\t\tindex = wellKnownMethods[VALUEOF_OBJECT_METHOD] = currentIndex++;", "+\t\t\t\tindex = wellKnownMethods[STRING_VALUEOF_OBJECT_METHOD] = currentIndex++;"]}], "num": 54801}