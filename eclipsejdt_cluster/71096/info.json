{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0745d2a855252b72089c0b1ca48032a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c128c04892f44a7bfd577596fe3e44e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Continue.java", "commitBeforeChange": "eaee32bd339fc5b900ee7fbcc85cab6cea15fcf3", "commitAfterChange": "60933eae97254c48f0e49df950707297846712db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\ttraversedContext.recordContinueFrom(flowInfo);", "+\t\t\t} else if (traversedContext == targetContext) {", "+\t\t\t\t// only record continue info once accumulated through subroutines, and only against target context", "+\t\t\t\ttargetContext.recordContinueFrom(flowInfo);", "+\t\t\t\tbreak;", "-\t\t} while (traversedContext != targetContext && (traversedContext = traversedContext.parent) != null);", "+\t\t} while ((traversedContext = traversedContext.parent) != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7b1a28d62c9680ea14dc962066c95dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Break.java", "commitBeforeChange": "eaee32bd339fc5b900ee7fbcc85cab6cea15fcf3", "commitAfterChange": "60933eae97254c48f0e49df950707297846712db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\ttraversedContext.recordBreakFrom(flowInfo);", "+\t\t\t} else if (traversedContext == targetContext) {", "+\t\t\t\t// only record break info once accumulated through subroutines, and only against target context", "+\t\t\t\ttargetContext.recordBreakFrom(flowInfo);", "+\t\t\t\tbreak;", "-\t\t} while (traversedContext != targetContext && (traversedContext = traversedContext.parent) != null);", "-", "+\t\t} while ((traversedContext = traversedContext.parent) != null);", "+\t\t"]}], "num": 71096}