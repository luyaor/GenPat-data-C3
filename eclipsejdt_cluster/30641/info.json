{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4408bc2378ad47247f76afc40fe6e018", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01c40e4cc0d4606aa5f2bbe2015acafc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\tif (qualifier == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetQualifier(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.qualifier == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.qualifier = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.qualifier, QUALIFIER_PROPERTY);", "-\t\treturn qualifier;", "+\t\treturn this.qualifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0394de1e6039d6c28adbd478e8b759af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getArray()", "signatureAfterChange": "  \tpublic Expression getArray()", "diff": ["-\t\tif (arrayExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetArray(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.arrayExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.arrayExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.arrayExpression, ARRAY_PROPERTY);", "-\t\treturn arrayExpression;", "+\t\treturn this.arrayExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3209cd29bdd9c60a52319e812240e329", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getIndex()", "signatureAfterChange": "  \tpublic Expression getIndex()", "diff": ["-\t\tif (indexExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetIndex(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.indexExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.indexExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.indexExpression, INDEX_PROPERTY);", "-\t\treturn indexExpression;", "+\t\treturn this.indexExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3514cb5f7e497ace8026f21b87a66477", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/LabeledStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SimpleName getLabel()", "signatureAfterChange": "  \tpublic SimpleName getLabel()", "diff": ["-\t\tif (labelName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetLabel(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.labelName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.labelName= new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.labelName, LABEL_PROPERTY);", "-\t\treturn labelName;", "+\t\treturn this.labelName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea436b72da1a28890186015b6a5269f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CatchClause.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration getException()", "signatureAfterChange": "  \tpublic SingleVariableDeclaration getException()", "diff": ["-\t\tif (exceptionDecl == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetException(new SingleVariableDeclaration(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.exceptionDecl == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.exceptionDecl = new SingleVariableDeclaration(this.ast);", "+\t\t\tpostLazyInit(this.exceptionDecl, EXCEPTION_PROPERTY);", "-\t\treturn exceptionDecl;", "+\t\treturn this.exceptionDecl;"]}], "num": 30641}