{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13fd15e36e472540d43d95d97c6aa78d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c0b991446ee3334b6372aa55bd2d118", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test037() throws Exception", "signatureAfterChange": " \t \tpublic void test037_field() throws Exception", "diff": ["+\t", "+\tpublic void test037_field() throws Exception {", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tjava.util.List<? extends @A Number> field;\\n\" +", "+\t\t\t\t\"}\",", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {}\\n\",", "+\t\t},", "+\t\t\"\");", "+\t\t// javac-b81: Bytes:12[0 1 19 2 3 0 2 0 0 9 0 0]", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #10 @A(\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0), WILDCARD]\\n\" +", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// make sure annotation without target appears twice when set on a method declaration", "-\tpublic void test037() throws Exception {", "-\t\t\t\t\"import java.lang.annotation.Target;\\r\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\r\\n\" + ", "-\t\t\t\t\"\\r\\n\" + ", "-\t\t\t\t\"@Target(METHOD)\\r\\n\" + ", "-\t\t\t\t\"@interface Annot {\\r\\n\" + ", "-\t\t\t\t\"\tint value() default 0;\\r\\n\" + ", "-\t\t\t\t\"}\\r\\n\" + ", "-\t\t\t\t\"public class X {\\r\\n\" + ", "-\t\t\t\t\"\t@Annot(4)\\r\\n\" + ", "-\t\t\t\t\"\tpublic void foo() {\\r\\n\" + ", "-\t\t\t\t\"\t}\\r\\n\" + ", "-\t\t\t\"  public void foo();\\n\" + ", "-\t\t\t\"    0  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 11]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"    RuntimeInvisibleAnnotations: \\n\" + ", "-\t\t\t\"      #16 @Annot(\\n\" + ", "-\t\t\t\"        #17 value=(int) 4 (constant type)\\n\" + ", "-\t\t\t\"}\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7cd56ffc05683ddf5386952eb9ff2d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test017() throws Exception", "signatureAfterChange": " \t \tpublic void test028_methodTypeParameterBound() throws Exception", "diff": ["+\t", "+\tpublic void test028_methodTypeParameterBound() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {\\n\" + ", "+\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"Z.java\",", "+\t\t\t\t\"public class Z {}\",", "+\t\t\t\t\"\t<T extends @A Z> void foo(T t) {}\\n\" +", "+\t\t// javac-b81: Bytes:10[0 1 18 0 0 0 0 13 0 0]", "+\t\t\t\"      #23 @A(\\n\" + ", "+\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "+\t\t\t\"        type parameter index = 0 type parameter bound index = 0\\n\" + ", "-\t// method type parameter", "-\tpublic void test017() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t<@A @B(3) T> void foo(T t) {}\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t},", "-\t\t\"\");", "-\t\tString expectedOutput =", "-\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #27 @A(\\n\" + ", "-\t\t\t\"        target type = 0x20 METHOD_TYPE_PARAMETER\\n\" + ", "-\t\t\t\"        type parameter index = 0\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #23 @B(\\n\" + ", "-\t\t\t\"        #24 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x20 METHOD_TYPE_PARAMETER\\n\" + ", "-\t\t\t\"        type parameter index = 0\\n\" + ", "-\t\t\t\"      )\\n\";", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "-\t}"]}], "num": 31739}