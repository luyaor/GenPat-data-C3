{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaa476d069a7c224c867ab59c7054a59", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69fba2abc3bb606373eba0f8bf561f0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test038() throws Exception", "signatureAfterChange": " \t \tpublic void test038_field() throws Exception", "diff": ["+\t", "+\tpublic void test038_field() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"class AA { class BB<T> {}}\" + ", "+\t\t\t\t\"class X {\\n\" +", "+\t\t\t\t\"  AA.@A BB field;\\n\" +", "+", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A { }\\n\",", "+\t\t},", "+\t\t\"\");", "+\t\tString expectedOutput =", "+\t\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #8 @A(\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [INNER_TYPE]\\n\" + ", "+\t\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// make sure annotation without target appears twice when set on a method declaration", "-\tpublic void test038() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b42a1eb70e54538870900c992a7fe19d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void test036() throws Exception", "signatureAfterChange": " \t \tpublic void test036_field() throws Exception", "diff": ["+\t", "+\tpublic void test036_field() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {}\\n\",", "+\t\t\t\t", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tjava.util.List<String[][]@A[][]> field;\\n\" +", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\t// javac-b81: Bytes:14[0 1 19 3 3 0 0 0 0 0 0 9 0 0]", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #10 @A(\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0), ARRAY, ARRAY]\\n\" +", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// annotation on catch variable", "-\tpublic void test036() throws Exception {", "-\t\t\t\"        target type = 0x8 LOCAL_VARIABLE\\n\" + ", "-\t\t\t\"        target type = 0x8 LOCAL_VARIABLE\\n\" + "]}], "num": 31222}