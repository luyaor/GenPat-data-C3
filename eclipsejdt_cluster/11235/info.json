{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa1da5ac654bd15990392c6afaa5ba52", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f562c6722304329c208ecc50ed0fac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void acceptType(char[] packageName, char[] typeName, int modifiers, AccessRestriction accessRestriction)", "signatureAfterChange": "  \tpublic void acceptType(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, int modifiers, AccessRestriction accessRestriction)", "diff": ["-\tpublic void acceptType(char[] packageName, char[] typeName, int modifiers, AccessRestriction accessRestriction) {", "-\t\tif (CharOperation.equals(typeName, this.selectedIdentifier)) {", "-\t\t\tif(mustQualifyType(packageName, typeName)) {", "+\tpublic void acceptType(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, int modifiers, AccessRestriction accessRestriction) {", "+\t\tchar[] typeName = enclosingTypeNames == null ?", "+\t\t\t\tsimpleTypeName :", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\tCharOperation.concatWith(enclosingTypeNames, '.'),", "+\t\t\t\t\t\tsimpleTypeName,", "+\t\t\t\t\t\t'.');", "+\t\t", "+\t\tif (CharOperation.equals(simpleTypeName, this.selectedIdentifier)) {", "+\t\t\tchar[] flatEnclosingTypeNames =", "+\t\t\t\tenclosingTypeNames == null || enclosingTypeNames.length == 0 ?", "+\t\t\t\t\t\tnull :", "+\t\t\t\t\t\t\tCharOperation.concatWith(enclosingTypeNames, '.');", "+\t\t\tif(mustQualifyType(packageName, simpleTypeName, flatEnclosingTypeNames, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "549879aafd8d57c1b07906e21ad907ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "7159d03b35583ef652a35141b4e5f0e03996db0b", "commitAfterChange": "d2487ffafdbbe7eaca44a67066ee7584eaf4c775", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static String suggestSetterName(IJavaProject project, String fieldName, int modifiers, String[] excludedNames)", "signatureAfterChange": " \tpublic static char[] suggestSetterName(IJavaProject project, char[] fieldName, int modifiers, boolean isBoolean, char[][] excludedNames)", "diff": ["+\t */", "+\tpublic static char[] suggestSetterName(IJavaProject project, char[] fieldName, int modifiers, boolean isBoolean, char[][] excludedNames) {", "+", "+\t\tif (isBoolean) {", "+\t\t\tchar[] name = removePrefixAndSuffixForFieldName(project, fieldName, modifiers);", "+\t\t\tint prefixLen =  GETTER_BOOL_NAME.length;", "+\t\t\tif (CharOperation.startsWith(name, GETTER_BOOL_NAME) ", "+\t\t\t\t&& name.length > prefixLen && Character.isUpperCase(name[prefixLen])) {", "+\t\t\t\tname = CharOperation.subarray(name, prefixLen, name.length);", "+\t\t\t\treturn suggestNewName(", "+\t\t\t\t\tCharOperation.concat(SETTER_NAME, suggestAccessorName(project, name, modifiers)),", "+\t\t\t\t\texcludedNames", "+\t\t\t\t);", "+\t\t\t} else {", "+\t\t\t\treturn suggestNewName(", "+\t\t\t\t\tCharOperation.concat(SETTER_NAME, suggestAccessorName(project, fieldName, modifiers)),", "+\t\t\t\t\texcludedNames", "+\t\t\t\t);", "+\t\t\t}", "+\t\t} else {", "+\t\t\treturn suggestNewName(", "+\t\t\t\tCharOperation.concat(SETTER_NAME, suggestAccessorName(project, fieldName, modifiers)),", "+\t\t\t\texcludedNames", "+\t\t\t);", "+\t\t}"]}], "num": 11235}