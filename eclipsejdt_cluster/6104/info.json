{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cb49e2772af23a98964e87e58551fb7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2b16cbcb225f1c8c00eb9a22efbe6ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "fbfdac6d7ce3e57d87b2a41c24ca19b307df27cb", "commitAfterChange": "1f2bb3880562da32cc48ce4bb6e920301c0ee336", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void saveExternalLibTimeStamps() throws CoreException", "signatureAfterChange": "  \tpublic void saveExternalLibTimeStamps() throws CoreException", "diff": ["+\t\t", "+\t\t// cleanup to avoid any leak ( https://bugs.eclipse.org/bugs/show_bug.cgi?id=244849 )", "+\t\tHashSet toRemove = new HashSet();", "+\t\tif (this.roots != null) {", "+\t\t\tEnumeration keys = this.externalTimeStamps.keys();", "+\t\t\twhile (keys.hasMoreElements()) {", "+\t\t\t\tObject key = keys.nextElement();", "+\t\t\t\tif (this.roots.get(key) == null) {", "+\t\t\t\t\ttoRemove.add(key);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\t", "-\t\t\tout.writeInt(this.externalTimeStamps.size());", "+\t\t\tout.writeInt(this.externalTimeStamps.size() - toRemove.size());", "-\t\t\t\tout.writeUTF(key.toPortableString());", "-\t\t\t\tLong timestamp = (Long) entry.getValue();", "-\t\t\t\tout.writeLong(timestamp.longValue());", "+\t\t\t\tif (!toRemove.contains(key)) {", "+\t\t\t\t\tout.writeUTF(key.toPortableString());", "+\t\t\t\t\tLong timestamp = (Long) entry.getValue();", "+\t\t\t\t\tout.writeLong(timestamp.longValue());", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbeb29dcb7a66be42bde870b5a70ed28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "189e4902a8cd4c72cdcb57f23d61ddb627236e43", "commitAfterChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " protected void resolveDuplicates(SourceRefElement handle)", "signatureAfterChange": " protected void resolveDuplicates(SourceRefElement handle)", "diff": ["+", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=342393", "+\t// For anonymous source types, the occurrence count should be in the context", "+\t// of the enclosing type.", "+\tif (handle instanceof SourceType && handle.getElementName().length() == 0) {", "+\t\tObject key = handle.getParent().getAncestor(IJavaElement.TYPE);", "+\t\toccurenceCount = this.localOccurrenceCounts.get(key);", "+\t\tif (occurenceCount == -1)", "+\t\t\tthis.localOccurrenceCounts.put(key, 1);", "+\t\telse {", "+\t\t\tthis.localOccurrenceCounts.put(key, ++occurenceCount);", "+\t\t\t((SourceType)handle).localOccurrenceCount = occurenceCount;", "+\t\t}", "+\t}"]}], "num": 6104}