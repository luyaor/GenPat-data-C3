{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4ab8730c09b20bb46fadda8e35be6bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91b0ff7dee132c1ca51557b6d1f6d5bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "26246adf380e69c31de951eed4c0173edaa96dd1", "commitAfterChange": "2c076bc353a2d83c198fbf8764d9fb723677890e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tpublic NameEnvironmentAnswer readClassFile(\r \t\tString filename,\r \t\tchar[][] packageName)", "signatureAfterChange": "\t\r public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["+}\t\r", "+public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName) {\r", "+\tif (!isPackage(qualifiedPackageName)) return null; // most common case\r", "+\r", "+\ttry {\r", "+\t\tClassFileReader reader = ClassFileReader.read(zipFile, qualifiedBinaryFileName);\r", "+\t\tif (reader != null) return new NameEnvironmentAnswer(reader);\r", "+\t} catch (Exception e) {} // treat as if class file is missing\r", "+\treturn null;\r", "+}\r", "-\t\r", "-\tpublic NameEnvironmentAnswer readClassFile(\r", "-\t\tString filename,\r", "-\t\tchar[][] packageName) {\r", "-\t\t\t\r", "-\t\ttry {\r", "-\t\t\treturn new NameEnvironmentAnswer(\r", "-\t\t\t\tClassFileReader.read(\r", "-\t\t\t\t\tzipFile,\r", "-\t\t\t\t\tFileSystem.assembleName(filename, packageName, '/')));\r", "-\t\t} catch (Exception e) {\r", "-\t\t\treturn null; // treat as if class file is missing\r", "-\t\t}\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3786740b9f5e4bd07dd381732a544c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "71ca7b096c04e123348cb13b19efbd2de402f9f2", "commitAfterChange": "6872e25fe154a5852fcd3ac0c49b686e5e81ec7b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tpublic NameEnvironmentAnswer readClassFile(\r \t\tString filename,\r \t\tchar[][] packageName)", "signatureAfterChange": "\t\r public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["+}\t\r", "+public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName) {\r", "+\tif (!isPackage(qualifiedPackageName)) return null; // most common case\r", "+\r", "+\ttry {\r", "+\t\tClassFileReader reader = ClassFileReader.read(zipFile, qualifiedBinaryFileName);\r", "+\t\tif (reader != null) return new NameEnvironmentAnswer(reader);\r", "+\t} catch (Exception e) {} // treat as if class file is missing\r", "+\treturn null;\r", "+}\r", "-\t\r", "-\tpublic NameEnvironmentAnswer readClassFile(\r", "-\t\tString filename,\r", "-\t\tchar[][] packageName) {\r", "-\t\t\t\r", "-\t\ttry {\r", "-\t\t\treturn new NameEnvironmentAnswer(\r", "-\t\t\t\tClassFileReader.read(\r", "-\t\t\t\t\tzipFile,\r", "-\t\t\t\t\tFileSystem.assembleName(filename, packageName, '/')));\r", "-\t\t} catch (Exception e) {\r", "-\t\t\treturn null; // treat as if class file is missing\r", "-\t\t}\r", "-\t}\r"]}], "num": 29888}