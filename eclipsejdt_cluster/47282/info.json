{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0902731849389e13e017606d9ba3839f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "252023f21710410d3d6cb61f988d750a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  private static boolean initDirectories(StringBuffer buffer)", "signatureAfterChange": "  private static boolean initDirectories(StringBuffer buffer)", "diff": ["-\t\tif (!OUTPUT_DIR.exists() && !clean) {", "+\t\tif (clean) {", "+\t\t\tif (PATCH_BUG != null || JDT_CORE_HEAD) {", "+\t\t\t\tthrow new RuntimeException(\"Reference can only be updated using a version (i.e. with a closed buildnotes_jdt-core.html)!\");", "+\t\t\t}", "+\t\t} else if (!OUTPUT_DIR.exists()) {", "-\tsetLogDir(buffer);", "+\ttry {", "+\t\tsetLogDir(buffer);", "+\t} catch (CoreException e) {", "+\t\te.printStackTrace();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "288d5d4f9ed9fafe5fe9bedccc4aacdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "35ce3cd769971f5dca3aae3c48f3088e32084ea9", "commitAfterChange": "f2a8db55d9c2a91376afbcc21d15536fa997b8eb", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  \tprotected String getURLContents(URL baseLoc, String docUrlValue) throws JavaModelException", "signatureAfterChange": "  \tprotected String getURLContents(URL baseLoc, String docUrlValue) throws JavaModelException", "diff": ["+\t\tURL docUrl = null;", "+\t\tURLConnection connection = null;", "-\t\t\tURL docUrl = null;", "-\t\t\tURLConnection connection = null;", "-\t\t\t\t", "+", "-\t\t\t\t", "+", "-\t\t\t", "-\t\t\ttry {", "-\t\t\t\tstream = new BufferedInputStream(connection.getInputStream());", "-\t\t\t} catch (IllegalArgumentException e) {", "-\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316", "-\t\t\t\treturn null;", "-\t\t\t} catch (NullPointerException e) {", "-\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316", "-\t\t\t\treturn null;", "-\t\t\t}", "+", "+\t\t\tstream = new BufferedInputStream(connection.getInputStream());", "+", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316", "+\t\t\treturn null;", "+\t\t} catch (NullPointerException e) {", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316", "+\t\t\treturn null;", "+\t\t} catch(Exception e) {", "+\t\t\tif (e.getCause() instanceof IllegalArgumentException) return null;", "+\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.CANNOT_RETRIEVE_ATTACHED_JAVADOC);"]}], "num": 47282}