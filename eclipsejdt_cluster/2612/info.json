{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d42d7c3bc0af775d934595bea44b981", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a6b5d35098073d89b0a4509a4647c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "9d6421c97941435b71726699128d0343d2af1a6d", "commitAfterChange": "f6b352b97c4d3f236828cd9dab83777ae77d4959", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["+\t\tIJavaModelStatus status;", "-", "+\t\t\tstatus = null;", "+\t\t\t", "-\t\t\tIJavaModelStatus status = null;", "+\t\tif (generateMarkerOnError) {", "+\t\t\tstatus = JavaConventions.validateClasspath(this, resolvedPath, this.getOutputLocation());", "+\t\t\tif (!status.isOK()) createClasspathProblemMarker(status);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6164b6325d0a8178d867831cf4a87d6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e545c83d4c17deed9318734e91334eb8e0b9f1f6", "commitAfterChange": "15d3e8c6150f3af77b3e0d0c7bd80bfd130fd914", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["+\t\tIPath projectOutputLocation, // only set if needing full classpath validation (and markers)", "-\t\tif (generateMarkerOnError) {", "-\t\t\tstatus = JavaConventions.validateClasspath(this, resolvedPath, this.getOutputLocation());", "+\t\tif (generateMarkerOnError && projectOutputLocation != null) {", "+\t\t\tstatus = JavaConventions.validateClasspath(this, resolvedPath, projectOutputLocation);"]}], "num": 2612}