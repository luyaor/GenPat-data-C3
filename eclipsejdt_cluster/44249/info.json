{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e79b2116787e8b86589c5c0fb26f6c5c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de8db0b49e4084e6cd76a8f1361b90b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public TypeDeclaration getTypeDeclaration(String name)", "signatureAfterChange": "     public TypeDeclaration getTypeDeclaration(String name)", "diff": ["-\t\t// any AST is as good as the other.", "-\t\tITypeBinding typeBinding = _astRoot.getAST().resolveWellKnownType(name);", "+\t\t// any AST is as good as the other.\t\t", "+\t\tITypeBinding typeBinding = null;", "+\t\tif( _astRoot != null )", "+\t\t\ttypeBinding = _astRoot.getAST().resolveWellKnownType(name);", "-\t\t\tASTNode node = _astRoot.findDeclaringNode(typeKey);", "+\t\t\tASTNode node = null;", "+\t\t\tif( _astRoot != null )", "+\t\t\t\tnode = _astRoot.findDeclaringNode(typeKey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c898dd294adc85f6e2484cc0cb39ac5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "c3ad34ec44b228feb09e91ff5ac00fc774236d05", "commitAfterChange": "1d56e6175009cdfe398560b7ba099bb7669a1ef0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "diff": ["-\tHashtableOfObject results = new HashtableOfObject(13);", "-\tif (this.categoryOffsets == null)", "-\t\treturn results; // file is empty", "+\tif (this.categoryOffsets == null) return null; // file is empty", "+\tHashtableOfObject results = null; // initialized if needed", "-\t\t\t\taddQueryResult(results, key, wordsToDocNumbers, memoryIndex);", "+\t\t\t\tresults = addQueryResult(results, key, wordsToDocNumbers, memoryIndex);", "-\t\t\t\t\t\taddQueryResult(results, word, wordsToDocNumbers, memoryIndex);", "+\t\t\t\t\t\tresults = addQueryResult(results, word, wordsToDocNumbers, memoryIndex);", "+", "+\tif (results == null) return null;"]}], "num": 44249}