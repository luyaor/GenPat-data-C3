{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88ca562eaf65d697f8ae4e9672311187", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f5cd385b466fa9324ae342e2e39075", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "f5be514287a14c34eaf46764a8f15d56d8087272", "commitAfterChange": "e2e97eb1ed318448b72d60aca6f0daa8c5b48408", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tfinal CompilerOptions compilerOptions = scope.compilerOptions();", "+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled && (this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "+\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations)", "+\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5727fa46070b3018ba62e86d9b0d8563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "782a0e24567335275ab3b8e5f05394a3658a8693", "commitAfterChange": "4f45fe6a27b23817015e0ab45d5ac7052b924dc7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tfinal CompilerOptions compilerOptions = scope.compilerOptions();", "+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled && (this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "+\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations)", "+\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t}"]}], "num": 20111}