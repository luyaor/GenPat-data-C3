{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f605a322dec9aab99ee99dba19a9321", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95414d7b0483bc29a17244e7f2b2cb73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c81a3234d6e9e281ceade85abcd923313e6692f3", "commitAfterChange": "fb10f5b6f5b206adc99f69bee6a0a9b1052b5fcc", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType)", "signatureAfterChange": " TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType)", "diff": ["-\tParameterizedTypeBinding parameterizedType = createParameterizedType(actualType, typeArguments, null);", "+\tReferenceBinding actualEnclosing = actualType.enclosingType();", "+\tif (actualEnclosing != null) { // convert needed if read some static member type", "+\t\tactualEnclosing = (ReferenceBinding) convertToRawType(actualEnclosing);", "+\t}", "+\tParameterizedTypeBinding parameterizedType = createParameterizedType(actualType, typeArguments, actualEnclosing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b35eaed717b99c3de5f58321403b7dcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tpublic void consumeParameterizedType(char[] simpleTypeName, boolean isRaw)", "signatureAfterChange": " \t \tpublic void consumeParameterizedType(char[] simpleTypeName, boolean isRaw)", "diff": ["-\t\t\tthis.typeBinding = this.environment.createParameterizedType(this.genericType, arguments, null);", "+\t\t\tReferenceBinding enclosing = this.genericType.enclosingType();", "+\t\t\tif (enclosing != null) enclosing = (ReferenceBinding) this.environment.convertToRawType(enclosing); // TODO (jerome) backward compatible when null enclosing type - is it really meant to be raw all the time ?", "+\t\t\tthis.typeBinding = this.environment.createParameterizedType(this.genericType, arguments, enclosing);"]}], "num": 9426}