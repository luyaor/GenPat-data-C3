{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf435a46b6dea0172042468ec8d6f882", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0233da2530c40d64e43ffca3c99e4e59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "aa1c17694b27b504666c5ba8972f5deebf077d85", "commitAfterChange": "26ddee9495db90c29b250e3eed03a94e2269259d", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\t\tIPath path, \t\t\tIPath sourceAttachmentPath, \t\t\tIPath sourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\t\tIPath path, \t\t\tIPath sourceAttachmentPath, \t\t\tIPath sourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["-\t\tif (path == null) Assert.isTrue(false, \"Library path cannot be null\"); //$NON-NLS-1$", "-\t\tif (!path.isAbsolute()) Assert.isTrue(false, \"Path for IClasspathEntry must be absolute: \" + path); //$NON-NLS-1$", "+\t\tif (path == null) throw new ClasspathEntry.AssertionFailedException(\"Library path cannot be null\"); //$NON-NLS-1$", "+\t\tif (!path.isAbsolute()) throw new ClasspathEntry.AssertionFailedException(\"Path for IClasspathEntry must be absolute: \" + path); //$NON-NLS-1$", "-\t\t\t\tAssert.isTrue(false, \"Source attachment path '\" //$NON-NLS-1$", "+\t\t\t\tthrow new ClasspathEntry.AssertionFailedException(\"Source attachment path '\" //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21bba0cade4355210782074a6213e542", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "aa1c17694b27b504666c5ba8972f5deebf077d85", "commitAfterChange": "26ddee9495db90c29b250e3eed03a94e2269259d", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] inclusionPatterns, IPath[] exclusionPatterns, IPath specificOutputLocation, IClasspathAttribute[] extraAttributes)", "signatureAfterChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] inclusionPatterns, IPath[] exclusionPatterns, IPath specificOutputLocation, IClasspathAttribute[] extraAttributes)", "diff": ["-\t\tif (path == null) Assert.isTrue(false, \"Source path cannot be null\"); //$NON-NLS-1$", "-\t\tif (!path.isAbsolute()) Assert.isTrue(false, \"Path for IClasspathEntry must be absolute\"); //$NON-NLS-1$", "-\t\tif (exclusionPatterns == null) Assert.isTrue(false, \"Exclusion pattern set cannot be null\"); //$NON-NLS-1$", "-\t\tif (inclusionPatterns == null) Assert.isTrue(false, \"Inclusion pattern set cannot be null\"); //$NON-NLS-1$", "+\t\tif (path == null) throw new ClasspathEntry.AssertionFailedException(\"Source path cannot be null\"); //$NON-NLS-1$", "+\t\tif (!path.isAbsolute()) throw new ClasspathEntry.AssertionFailedException(\"Path for IClasspathEntry must be absolute\"); //$NON-NLS-1$", "+\t\tif (exclusionPatterns == null) throw new ClasspathEntry.AssertionFailedException(\"Exclusion pattern set cannot be null\"); //$NON-NLS-1$", "+\t\tif (inclusionPatterns == null) throw new ClasspathEntry.AssertionFailedException(\"Inclusion pattern set cannot be null\"); //$NON-NLS-1$"]}], "num": 10843}