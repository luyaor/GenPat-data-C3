{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e16219bf38781dbc0e01366500252856", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "038d6d1a61357fce977ff7669e66deac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-public String toString() {", "-\tString s = (returnType != null) ? returnType.debugName() : \"NULL TYPE\"; //$NON-NLS-1$", "-\ts += \" \"; //$NON-NLS-1$", "-\ts += (selector != null) ? new String(selector) : \"UNNAMED METHOD\"; //$NON-NLS-1$", "-", "-\ts += \"(\"; //$NON-NLS-1$", "-\tif (parameters != null) {", "-\t\tif (parameters != Binding.NO_PARAMETERS) {", "-\t\t\tfor (int i = 0, length = parameters.length; i < length; i++) {", "-\t\t\t\tif (i  > 0)", "-\t\t\t\t\ts += \", \"; //$NON-NLS-1$", "-\t\t\t\ts += (parameters[i] != null) ? parameters[i].debugName() : \"NULL TYPE\"; //$NON-NLS-1$", "-\t\t\t}", "-\t\t}", "-\t} else {", "-\t\ts += \"NULL PARAMETERS\"; //$NON-NLS-1$", "-\t}", "-\ts += \") \"; //$NON-NLS-1$", "-", "-\tif (thrownExceptions != null) {", "-\t\tif (thrownExceptions != Binding.NO_EXCEPTIONS) {", "-\t\t\ts += \"throws \"; //$NON-NLS-1$", "-\t\t\tfor (int i = 0, length = thrownExceptions.length; i < length; i++) {", "-\t\t\t\tif (i  > 0)", "-\t\t\t\t\ts += \", \"; //$NON-NLS-1$", "-\t\t\t\ts += (thrownExceptions[i] != null) ? thrownExceptions[i].debugName() : \"NULL TYPE\"; //$NON-NLS-1$", "-\t\t\t}", "-\t\t}", "-\t} else {", "-\t\ts += \"NULL THROWN EXCEPTIONS\"; //$NON-NLS-1$", "-\t}", "-\treturn s;", "-}", "+public String toString() {", "+\tStringBuffer output = new StringBuffer(10);", "+\tif ((this.modifiers & ExtraCompilerModifiers.AccUnresolved) != 0) {", "+\t\toutput.append(\"[unresolved] \"); //$NON-NLS-1$", "+\t}", "+\tASTNode.printModifiers(this.modifiers, output);", "+\toutput.append(returnType != null ? returnType.debugName() : \"<no type>\"); //$NON-NLS-1$", "+\toutput.append(\" \"); //$NON-NLS-1$", "+\toutput.append(selector != null ? new String(selector) : \"<no selector>\"); //$NON-NLS-1$", "+\toutput.append(\"(\"); //$NON-NLS-1$", "+\tif (parameters != null) {", "+\t\tif (parameters != Binding.NO_PARAMETERS) {", "+\t\t\tfor (int i = 0, length = parameters.length; i < length; i++) {", "+\t\t\t\tif (i  > 0)", "+\t\t\t\t\toutput.append(\", \"); //$NON-NLS-1$", "+\t\t\t\toutput.append(parameters[i] != null ? parameters[i].debugName() : \"<no argument type>\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\toutput.append(\"<no argument types>\"); //$NON-NLS-1$", "+\t}", "+\toutput.append(\") \"); //$NON-NLS-1$", "+", "+\tif (thrownExceptions != null) {", "+\t\tif (thrownExceptions != Binding.NO_EXCEPTIONS) {", "+\t\t\toutput.append(\"throws \"); //$NON-NLS-1$", "+\t\t\tfor (int i = 0, length = thrownExceptions.length; i < length; i++) {", "+\t\t\t\tif (i  > 0)", "+\t\t\t\t\toutput.append(\", \"); //$NON-NLS-1$", "+\t\t\t\toutput.append((thrownExceptions[i] != null) ? thrownExceptions[i].debugName() : \"<no exception type>\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\toutput.append(\"<no exception types>\"); //$NON-NLS-1$", "+\t}", "+\treturn output.toString();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2286df741f9b5c59a101c6ce270f4bc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "c62ecfd031507c11ea236866605fedd6f3a952c5", "commitAfterChange": "ded73445e8c5cf2db0a4abcc53e1680f02ae6cf7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "  private static File setProfilesDir(int profiles, File dir)", "signatureAfterChange": "  private static void setProfilesDir(int profiles, List subDirs)", "diff": ["+", "+private static void setProfilesDir(int profiles, List subDirs) {", "-\t\tdir = new File(new File(dir, \"join_lines\"), joinLines);", "+\t\tsubDirs.add(\"join_lines\");", "+\t\tsubDirs.add(joinLines);", "-\t\tdir = new File(dir, \"no_comments\");", "+\t\tsubDirs.add(\"no_comments\");", "-\t\tdir = new File(new File(dir, \"braces\"), braces);", "+\t\tsubDirs.add(\"braces\");", "+\t\tsubDirs.add(braces);", "-\t\tdir = new File(new File(dir, \"preserved_lines\"), Integer.toString(lines));", "+\t\tsubDirs.add(\"preserved_lines\");", "+\t\tsubDirs.add(Integer.toString(lines));", "-\treturn dir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43ef1d6f502c2c79697af78f3042652e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " public  String toString()", "signatureAfterChange": " public  String toString()", "diff": ["-\tString s = \"\"; //$NON-NLS-1$", "-\ts = s + \"elementKindStack : int[] = {\"; //$NON-NLS-1$", "+\tStringBuffer buffer = new StringBuffer();", "+\tbuffer.append(\"elementKindStack : int[] = {\"); //$NON-NLS-1$", "-\t\ts = s + String.valueOf(elementKindStack[i]) + \",\"; //$NON-NLS-1$", "+\t\tbuffer.append(String.valueOf(elementKindStack[i])).append(',');", "-\ts = s + \"}\\n\"; //$NON-NLS-1$", "-\ts = s + \"elementInfoStack : int[] = {\"; //$NON-NLS-1$", "+\tbuffer.append(\"}\\n\"); //$NON-NLS-1$", "+\tbuffer.append(\"elementInfoStack : int[] = {\"); //$NON-NLS-1$", "-\t\ts = s + String.valueOf(elementInfoStack[i]) + \",\"; //$NON-NLS-1$", "+\t\tbuffer.append(String.valueOf(elementInfoStack[i])).append(',');", "-\ts = s + \"}\\n\"; //$NON-NLS-1$", "-\treturn s + super.toString();", "+\tbuffer.append(\"}\\n\"); //$NON-NLS-1$", "+\tbuffer.append(super.toString());", "+\treturn String.valueOf(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63867b9ff0a90c68f7eb4e12d56f7177", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AstNode.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic static String modifiersString(int modifiers)", "signatureAfterChange": "  \tpublic static StringBuffer printModifiers(int modifiers, StringBuffer output)", "diff": ["-\tpublic static String modifiersString(int modifiers) {", "-\t\tString s = \"\"; //$NON-NLS-1$", "+", "+\tpublic static StringBuffer printModifiers(int modifiers, StringBuffer output) {", "+", "-\t\t\ts = s + \"public \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"public \"); //$NON-NLS-1$", "-\t\t\ts = s + \"private \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"private \"); //$NON-NLS-1$", "-\t\t\ts = s + \"protected \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"protected \"); //$NON-NLS-1$", "-\t\t\ts = s + \"static \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"static \"); //$NON-NLS-1$", "-\t\t\ts = s + \"final \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"final \"); //$NON-NLS-1$", "-\t\t\ts = s + \"synchronized \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"synchronized \"); //$NON-NLS-1$", "-\t\t\ts = s + \"volatile \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"volatile \"); //$NON-NLS-1$", "-\t\t\ts = s + \"transient \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"transient \"); //$NON-NLS-1$", "-\t\t\ts = s + \"native \"; //$NON-NLS-1$", "+\t\t\toutput.append(\"native \"); //$NON-NLS-1$", "-\t\t\ts = s + \"abstract \"; //$NON-NLS-1$", "-\t\treturn s;", "-\t}", "+\t\t\toutput.append(\"abstract \"); //$NON-NLS-1$", "+\t\treturn output;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a7034db1d12387d340e3ff49df15e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9dbcebbcaf11825267cb12e7ee6eb7bd73431114", "commitAfterChange": "f7b0e495847f4cba5d393348688e14a6dd333c0e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic int boxing(int id)", "signatureAfterChange": "  \tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env)", "diff": ["-\tpublic int boxing(int id) {", "-\t\tswitch (id) {", "-\t\t\tcase T_int :", "-\t\t\t\treturn T_JavaLangInteger;", "-\t\t\tcase T_byte :", "-\t\t\t\treturn T_JavaLangByte;", "-\t\t\tcase T_short :", "-\t\t\t\treturn T_JavaLangShort;", "-\t\t\tcase T_char :", "-\t\t\t\treturn T_JavaLangCharacter;", "-\t\t\tcase T_long :", "-\t\t\t\treturn T_JavaLangLong;", "-\t\t\tcase T_float :", "-\t\t\t\treturn T_JavaLangFloat;", "-\t\t\tcase T_double :", "-\t\t\t\treturn T_JavaLangDouble;", "-\t\t\tcase T_boolean :", "-\t\t\t\treturn T_JavaLangBoolean;", "-\t\t\tcase T_void :", "-\t\t\t\treturn T_JavaLangVoid;", "-\t\t}", "-\t\treturn id;", "-\t}", "+", "+\tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env) {", "+\t\t// only called if env.options.sourceLevel >= ClassFileConstants.JDK1_5", "+\t\tif (arg.isCompatibleWith(param))", "+\t\t\treturn COMPATIBLE;", "+\t\tif (arg.isBaseType() != param.isBaseType()) {", "+\t\t\tTypeBinding convertedType = env.computeBoxingType(arg);", "+\t\t\tif (convertedType == param)", "+\t\t\t\treturn AUTOBOX_EXACT_MATCH;", "+\t\t\tif (convertedType.isCompatibleWith(param))", "+\t\t\t\treturn AUTOBOX_COMPATIBLE;", "+\t\t}", "+\t\treturn NOT_COMPATIBLE;"]}], "num": 29147}