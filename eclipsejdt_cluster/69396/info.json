{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88a9ee9a8b5038a6c71fe7f9b72d9bdd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "445e448213b5b43855d4ea08c1d2b36b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "signatureAfterChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "diff": ["+\t", "+\t// filter out element not in hierarchy scope", "+\tif (this.locator.hierarchyResolver != null ", "+\t\t\t&& type.binding != null", "+\t\t\t&& !this.locator.hierarchyResolver.subOrSuperOfFocus(type.binding)) {", "+\t\treturn;", "+\t}", "+\t", "+\t// create type handle"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e582e5b3d41b97b0caa16601fbd53c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "a81195ff09b3e00d1785645fd080f14d3c2692cf", "commitAfterChange": "0300a57044fe7d054155c36f505a1e0c238247a4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "signatureAfterChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "diff": ["-\tboolean typeInHierarchy = ", "-\t\tthis.locator.hierarchyResolver == null ", "-\t\t\t|| type.binding == null", "-\t\t\t|| this.locator.hierarchyResolver.subOrSuperOfFocus(type.binding);", "+\tboolean typeInHierarchy = type.binding == null || this.locator.typeInHierarchy(type.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f14f03066581a42ba8f5faa57e47b2fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void locateMatchesInClassFile() throws CoreException, JavaModelException", "signatureAfterChange": " private void locateMatchesInClassFile() throws CoreException, JavaModelException", "diff": ["-\t\t\t// check methods", "+\t\t\t\t// filter out element not in hierarchy scope", "+\t\t\t\tif (this.locator.hierarchyResolver != null ", "+\t\t\t\t\t\t&& !this.locator.hierarchyResolver.subOrSuperOfFocus(binding)) {", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t", "+\t\t\t\t// check methods", "-\t\t\t}", "-\t\t\t// check fields", "-\t\t\tif (binding != null) {", "+\t\t\t\t// check fields"]}], "num": 69396}