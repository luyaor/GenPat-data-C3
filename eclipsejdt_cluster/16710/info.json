{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8683bcdfbbc86d16e34e87bf51335dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8248716ef5a10e8f102b97350b995e13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "ed25425f5de4194a0f32ce4c1315af886ca42c42", "commitAfterChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void putInfo(IJavaElement element, Object info)", "signatureAfterChange": " protected void putInfo(IJavaElement element, Object info)", "diff": ["-\t\t\tthis.modelInfo = (JavaModelInfo) info;", "+\t\t\tthis.modelInfo = info;", "-\t\t\tthis.rootCache.ensureSpaceLimit(((JavaElementInfo) info).children.length, element);", "+\t\t\tthis.rootCache.ensureSpaceLimit(info, element);", "-\t\t\tthis.pkgCache.ensureSpaceLimit(((JavaElementInfo) info).children.length, element);", "+\t\t\tthis.pkgCache.ensureSpaceLimit(info, element);", "-\t\t\tthis.openableCache.ensureSpaceLimit(((JavaElementInfo) info).children.length, element);", "+\t\t\tthis.openableCache.ensureSpaceLimit(info, element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe362e281fd0c1d1e33589ed994be30b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 113, "signatureBeforeChange": " public void testOrPattern() throws CoreException", "signatureAfterChange": " public void testOrPattern() throws CoreException", "diff": ["-\tISearchPattern leftPattern = SearchEngine.createSearchPattern(leftMethod, ALL_OCCURRENCES);", "+\tSearchPattern leftPattern = createPattern(leftMethod, ALL_OCCURRENCES);", "-\tISearchPattern rightPattern = SearchEngine.createSearchPattern(rightMethod, ALL_OCCURRENCES);", "-\tISearchPattern orPattern = SearchEngine.createOrSearchPattern(leftPattern, rightPattern);", "+\tSearchPattern rightPattern = createPattern(rightMethod, ALL_OCCURRENCES);", "+\tSearchPattern orPattern = SearchPattern.createOrPattern(leftPattern, rightPattern);", "-\tnew SearchEngine().search(", "-\t\tgetWorkspace(), ", "-\t\torPattern,", "+\tsearch(", "+\t\torPattern, "]}], "num": 16710}