{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48ddaece9f56c4f5ede1e6edb15cbe7e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f562c6722304329c208ecc50ed0fac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void acceptType(char[] packageName, char[] typeName, int modifiers, AccessRestriction accessRestriction)", "signatureAfterChange": "  \tpublic void acceptType(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, int modifiers, AccessRestriction accessRestriction)", "diff": ["-\tpublic void acceptType(char[] packageName, char[] typeName, int modifiers, AccessRestriction accessRestriction) {", "-\t\tif (CharOperation.equals(typeName, this.selectedIdentifier)) {", "-\t\t\tif(mustQualifyType(packageName, typeName)) {", "+\tpublic void acceptType(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, int modifiers, AccessRestriction accessRestriction) {", "+\t\tchar[] typeName = enclosingTypeNames == null ?", "+\t\t\t\tsimpleTypeName :", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\tCharOperation.concatWith(enclosingTypeNames, '.'),", "+\t\t\t\t\t\tsimpleTypeName,", "+\t\t\t\t\t\t'.');", "+\t\t", "+\t\tif (CharOperation.equals(simpleTypeName, this.selectedIdentifier)) {", "+\t\t\tchar[] flatEnclosingTypeNames =", "+\t\t\t\tenclosingTypeNames == null || enclosingTypeNames.length == 0 ?", "+\t\t\t\t\t\tnull :", "+\t\t\t\t\t\t\tCharOperation.concatWith(enclosingTypeNames, '.');", "+\t\t\tif(mustQualifyType(packageName, simpleTypeName, flatEnclosingTypeNames, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420869e49151fbad90ac58b38c5f75e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "signatureAfterChange": "\r \t\t\t\tpublic void acceptClass(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "diff": ["-\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor(){\r", "-\t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "-\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "-\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "-\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, 0);\r", "-\t\t\t}\r", "+\t\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor() {\r", "+\t\t\t\tpublic void acceptClass(\r", "+\t\t\t\t\tchar[] packageName,\r", "+\t\t\t\t\tchar[] simpleTypeName,\r", "+\t\t\t\t\tchar[][] enclosingTypeNames,\r", "+\t\t\t\t\tString path) {\r", "+\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "+\t\t\t\t\t\treturn; // accept only top level types\r", "+\t\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, IConstants.AccPublic);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a30d953b432d328e918210db6d9dfbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "signatureAfterChange": "\r \t\t\t\tpublic void acceptClass(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "diff": ["-\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor(){\r", "-\t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "-\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "-\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "-\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, 0);\r", "-\t\t\t}\r", "+\t\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor() {\r", "+\t\t\t\tpublic void acceptClass(\r", "+\t\t\t\t\tchar[] packageName,\r", "+\t\t\t\t\tchar[] simpleTypeName,\r", "+\t\t\t\t\tchar[][] enclosingTypeNames,\r", "+\t\t\t\t\tString path) {\r", "+\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "+\t\t\t\t\t\treturn; // accept only top level types\r", "+\t\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, IConstants.AccPublic);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a5612fa37ae9706cfdf32ea2fc0b1c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "signatureAfterChange": "\r \t\t\t\tpublic void acceptClass(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "diff": ["-\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor(){\r", "-\t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "-\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "-\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "-\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, 0);\r", "-\t\t\t}\r", "+\t\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor() {\r", "+\t\t\t\tpublic void acceptClass(\r", "+\t\t\t\t\tchar[] packageName,\r", "+\t\t\t\t\tchar[] simpleTypeName,\r", "+\t\t\t\t\tchar[][] enclosingTypeNames,\r", "+\t\t\t\t\tString path) {\r", "+\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "+\t\t\t\t\t\treturn; // accept only top level types\r", "+\t\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, IConstants.AccPublic);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935b03a7f1a8f0f07ab378a4802ab69b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "signatureAfterChange": "\r \t\t\t\tpublic void acceptClass(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "diff": ["-\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor(){\r", "-\t\t\tpublic void acceptClass(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "-\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "-\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "-\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, 0);\r", "-\t\t\t}\r", "+\t\t\tITypeNameRequestor nameRequestor = new ITypeNameRequestor() {\r", "+\t\t\t\tpublic void acceptClass(\r", "+\t\t\t\t\tchar[] packageName,\r", "+\t\t\t\t\tchar[] simpleTypeName,\r", "+\t\t\t\t\tchar[][] enclosingTypeNames,\r", "+\t\t\t\t\tString path) {\r", "+\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "+\t\t\t\t\t\treturn; // accept only top level types\r", "+\t\t\t\t\tstorage.acceptClass(packageName, simpleTypeName, IConstants.AccPublic);\r", "+\t\t\t\t}\r"]}], "num": 25030}