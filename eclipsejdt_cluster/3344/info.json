{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54fadc3e158b3bd8f4beed9751fa8b71", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c27dd80c5ff819a653dd3a260e42896", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, BlockScope blockScope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, BlockScope blockScope)", "diff": ["-\t\t\tif (receiver != null) {", "-\t\t\t\treceiver.traverse(visitor, blockScope);", "+\t\t\tif (this.receiver != null) {", "+\t\t\t\tthis.receiver.traverse(visitor, blockScope);", "-\t\t\tif (arguments != null) {", "-\t\t\t\tint argumentsLength = arguments.length;", "+\t\t\tif (this.arguments != null) {", "+\t\t\t\tint argumentsLength = this.arguments.length;", "-\t\t\t\t\targuments[i].traverse(visitor, blockScope);", "+\t\t\t\t\tthis.arguments[i].traverse(visitor, blockScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a10e8b52548be8674a8b55d27e03feea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "afcefcc52a6e235f9ed640317727929d84135cf0", "commitAfterChange": "5ce294a787e58643d5e8115fe2ddfea119e53aa2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic StringBuffer printBody(int indent, StringBuffer output)", "signatureAfterChange": "  public StringBuffer printBody(int indent, StringBuffer output)", "diff": ["-", "-\tpublic StringBuffer printBody(int indent, StringBuffer output) {", "-", "-\t\toutput.append(\" {\"); //$NON-NLS-1$", "-\t\tif (constructorCall != null) {", "-\t\t\toutput.append('\\n');", "-\t\t\tconstructorCall.printStatement(indent, output);", "-\t\tif (statements != null) {", "-\t\t\tfor (int i = 0; i < statements.length; i++) {", "-\t\t\t\toutput.append('\\n');", "-\t\t\t\tstatements[i].printStatement(indent, output);", "-\t\t\t}", "-\t\t}", "-\t\toutput.append('\\n');", "-\t\tprintIndent(indent == 0 ? 0 : indent - 1, output).append('}');", "-\t\treturn output;", "+", "+public StringBuffer printBody(int indent, StringBuffer output) {", "+\toutput.append(\" {\"); //$NON-NLS-1$", "+\tif (this.constructorCall != null) {", "+\t\toutput.append('\\n');", "+\t\tthis.constructorCall.printStatement(indent, output);", "+\t}", "+\tif (this.statements != null) {", "+\t\tfor (int i = 0; i < this.statements.length; i++) {", "+\t\t\toutput.append('\\n');", "+\t\t\tthis.statements[i].printStatement(indent, output);", "+\t\t}", "+\t}", "+\toutput.append('\\n');", "+\tprintIndent(indent == 0 ? 0 : indent - 1, output).append('}');", "+\treturn output;", "+}"]}], "num": 3344}