{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a61ffad8137fdde9a4800c77c82fdb3a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b894294045bdd3a28c9580fd24a6da77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic void test0172() throws JavaModelException", "signatureAfterChange": " \tpublic void test0172() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Canonical method binding\", methodBinding1 == methods[1]); //$NON-NLS-1$", "+\t\t// search method foo", "+\t\tIMethodBinding methodBinding = null;", "+\t\tloop: for (int i = 0, max = methods.length; i < max; i++) {", "+\t\t\tIMethodBinding currentMethod = methods[i];", "+\t\t\tif (\"foo\".equals(currentMethod.getName())) {", "+\t\t\t\tmethodBinding = currentMethod;", "+\t\t\t\tbreak loop;", "+\t\t\t}", "+\t\t}", "+\t\tassertNotNull(\"Cannot be null\", methodBinding);", "+\t\tassertTrue(\"Canonical method binding\", methodBinding1 == methodBinding); //$NON-NLS-1$", "-\t\tassertTrue(\"Canonical method binding\", methodBinding2 == methods[2]); //$NON-NLS-1$", "+\t\t// search main", "+\t\tmethodBinding = null;", "+\t\tloop: for (int i = 0, max = methods.length; i < max; i++) {", "+\t\t\tIMethodBinding currentMethod = methods[i];", "+\t\t\tif (\"main\".equals(currentMethod.getName())) {", "+\t\t\t\tmethodBinding = currentMethod;", "+\t\t\t\tbreak loop;", "+\t\t\t}", "+\t\t}", "+\t\tassertNotNull(\"Cannot be null\", methodBinding);\t\t", "+\t\tassertTrue(\"Canonical method binding\", methodBinding2 == methodBinding); //$NON-NLS-1$", "-\t\tassertNotNull(\"No method binding for main\", methodBinding3); //$NON-NLS-1$", "-\t\tassertTrue(\"Canonical method binding\", methodBinding3 == methods[3]); //$NON-NLS-1$", "+\t\tassertNotNull(\"No method binding for bar\", methodBinding3); //$NON-NLS-1$", "+\t\t// search method bar", "+\t\tmethodBinding = null;", "+\t\tloop: for (int i = 0, max = methods.length; i < max; i++) {", "+\t\t\tIMethodBinding currentMethod = methods[i];", "+\t\t\tif (\"bar\".equals(currentMethod.getName())) {", "+\t\t\t\tmethodBinding = currentMethod;", "+\t\t\t\tbreak loop;", "+\t\t\t}", "+\t\t}", "+\t\tassertNotNull(\"Cannot be null\", methodBinding);\t\t", "+\t\tassertTrue(\"Canonical method binding\", methodBinding3 == methodBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e14877f2e37639c6677461fe07abfd5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic void test0172() throws JavaModelException", "signatureAfterChange": " \tpublic void test0172() throws JavaModelException", "diff": ["+\t\tassertNotNull(\"No methods\", methods);", "-\t\tassertTrue(\"Canonical method binding\", methodBinding1 == methods[1]); //$NON-NLS-1$", "+\t\t// search method foo", "+\t\tIMethodBinding methodBinding = null;", "+\t\tloop: for (int i = 0, max = methods.length; i < max; i++) {", "+\t\t\tIMethodBinding currentMethod = methods[i];", "+\t\t\tif (\"foo\".equals(currentMethod.getName())) {", "+\t\t\t\tmethodBinding = currentMethod;", "+\t\t\t\tbreak loop;", "+\t\t\t}", "+\t\t}", "+\t\tassertNotNull(\"Cannot be null\", methodBinding);", "+\t\tassertTrue(\"Canonical method binding\", methodBinding1 == methodBinding); //$NON-NLS-1$", "-\t\tassertTrue(\"Canonical method binding\", methodBinding2 == methods[2]); //$NON-NLS-1$", "+\t\tmethodBinding = null;", "+\t\tloop: for (int i = 0, max = methods.length; i < max; i++) {", "+\t\t\tIMethodBinding currentMethod = methods[i];", "+\t\t\tif (\"main\".equals(currentMethod.getName())) {", "+\t\t\t\tmethodBinding = currentMethod;", "+\t\t\t\tbreak loop;", "+\t\t\t}", "+\t\t}", "+\t\tassertNotNull(\"Cannot be null\", methodBinding);", "+\t\tassertTrue(\"Canonical method binding\", methodBinding2 == methodBinding); //$NON-NLS-1$", "-\t\tassertTrue(\"Canonical method binding\", methodBinding3 == methods[3]); //$NON-NLS-1$", "+\t\tmethodBinding = null;", "+\t\tloop: for (int i = 0, max = methods.length; i < max; i++) {", "+\t\t\tIMethodBinding currentMethod = methods[i];", "+\t\t\tif (\"bar\".equals(currentMethod.getName())) {", "+\t\t\t\tmethodBinding = currentMethod;", "+\t\t\t\tbreak loop;", "+\t\t\t}", "+\t\t}\t\t", "+\t\tassertNotNull(\"Cannot be null\", methodBinding);", "+\t\tassertTrue(\"Canonical method binding\", methodBinding3 == methodBinding); //$NON-NLS-1$"]}], "num": 1296}