{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e65c892f404162a1dfae94c1957a743e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa77e9276d43b50af2eac1fff3dba99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected boolean needsResolve()", "signatureAfterChange": " protected boolean mustResolve()", "diff": ["-protected boolean needsResolve() {", "-", "+protected boolean mustResolve() {", "-\t// (see MethodDeclarationPattern.matchLevel and MethodReferencePattern.matchLevel)", "+\t// (see MethodPattern.matchLevel)", "-\t// (see MethodDeclarationPattern.matchLevel and MethodReferencePattern.matchLevel)", "+\t// (see MethodPattern.matchLevel)", "-\tif (parameterSimpleNames != null){", "-\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++){", "+\tif (parameterSimpleNames != null)", "+\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++)", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d04412249aec61e0e34a004617edbcbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "6b41f376eb5bd5fa3046b8ac6fedca194080b0bd", "commitAfterChange": "262490d9212f700275b0f63ee471ae3ff354e58f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean needsResolve()", "signatureAfterChange": " protected boolean needsResolve()", "diff": ["-\t// TODO: (jerome) should need resolve only if declaringSimpleName, declaringQualification, returnQualification or parameterQualifications[i] is not null", "-", "-\t// declaring type", "+\t// declaring type ", "+\t// If declaring type is specified - even with simple name - always resolves ", "+\t// (see MethodDeclarationPattern.matchLevel and MethodReferencePattern.matchLevel)", "+\t// If return type is specified - even with simple name - always resolves ", "+\t// (see MethodDeclarationPattern.matchLevel and MethodReferencePattern.matchLevel)", "-\t\t\tif (parameterQualifications[i] != null || parameterSimpleNames[i] != null) return true;", "+\t\t\tif (parameterQualifications[i] != null) return true;"]}], "num": 44140}