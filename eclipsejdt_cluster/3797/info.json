{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "358cefc9faccb0bf9cb945b6a117ecd2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "084cd61801c36b8e43b43242d9eaf981", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d795b0af41ca5479adab6c8aec6d78cf92232808", "commitAfterChange": "d29edf387991c3c5bc39221c8d52dae921643fe9", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["+\t\t\t\t\t\t\t// answers closest approximation, may not check argumentTypes or visibility", "-\t\t\t\t\t\t\t\t\tif (temp.canBeSeenBy(unitScope.fPackage)) {", "-\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "-\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "-\t\t\t\t\t\t\t\t\t\tif (foundInImport)", "-\t\t\t\t\t\t\t\t\t\t\t// Answer error binding -- import on demand conflict; name found in two import on demand types.", "-\t\t\t\t\t\t\t\t\t\t\treturn new ProblemMethodBinding(temp, selector, temp.parameters, Ambiguous);", "-\t\t\t\t\t\t\t\t\t\tfoundMethod = temp;", "-\t\t\t\t\t\t\t\t\t\tfoundInImport = true;", "+\t\t\t\t\t\t\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(temp, argumentTypes, invocationSite);", "+\t\t\t\t\t\t\t\t\tif (compatibleMethod != null) {", "+\t\t\t\t\t\t\t\t\t\tif (compatibleMethod.isValidBinding()) {", "+\t\t\t\t\t\t\t\t\t\t\tif (compatibleMethod.canBeSeenBy(unitScope.fPackage)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "+\t\t\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\t\t\t\t\tif (foundInImport)", "+\t\t\t\t\t\t\t\t\t\t\t\t\t// Answer error binding -- import on demand conflict; name found in two import on demand types.", "+\t\t\t\t\t\t\t\t\t\t\t\t\treturn new ProblemMethodBinding(compatibleMethod, selector, compatibleMethod.parameters, Ambiguous);", "+\t\t\t\t\t\t\t\t\t\t\t\tfoundMethod = compatibleMethod;", "+\t\t\t\t\t\t\t\t\t\t\t\tfoundInImport = true;", "+\t\t\t\t\t\t\t\t\t\t\t} else if (foundMethod == null) {", "+\t\t\t\t\t\t\t\t\t\t\t\tfoundMethod = new ProblemMethodBinding(compatibleMethod, selector, compatibleMethod.parameters, NotVisible);", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tfoundMethod = new ProblemMethodBinding(temp, selector, temp.parameters, NotVisible);", "+\t\t\t\t\t\t\t\t\t\tfoundMethod = new ProblemMethodBinding(temp, selector, argumentTypes, NotFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a04270332c5e98a52b963596381dae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "5a9617d46eeedacda30ce2f97acd9c0340885311", "commitAfterChange": "f3e681d78029f0800d6f55351b70c72cab18c6a2", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\tReferenceBinding foundType = null;", "+\t\tint problemId = NotFound;", "+\t\t\tReferenceBinding foundType = null;", "-\t\t\tif (foundType != null && foundType.problemId() != NotVisible)", "-\t\t\t\treturn foundType;", "+\t\t\tif (foundType != null) {", "+\t\t\t\tif (foundType.problemId() != NotVisible) return foundType;", "+\t\t\t\tproblemId = NotVisible;", "+\t\t\t}", "-\t\t\tboolean foundInImport = false;", "-\t\t\tReferenceBinding type = null;", "+\t\t\t\tboolean foundInImport = false;", "+\t\t\t\tReferenceBinding type = null;", "-\t\t\t\t\t\t\t\t? findType(name, (PackageBinding) resolvedImport, currentPackage)", "-\t\t\t\t\t\t\t\t: findDirectMemberType(name, (ReferenceBinding) resolvedImport);", "-\t\t\t\t\t\tif (temp != null && temp.isValidBinding()) {", "-\t\t\t\t\t\t\tImportReference importReference = someImport.reference;", "-\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "-\t\t\t\t\t\t\tif (foundInImport)", "-\t\t\t\t\t\t\t\t// Answer error binding -- import on demand conflict; name found in two import on demand packages.", "-\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, Ambiguous);", "-\t\t\t\t\t\t\ttype = temp;", "-\t\t\t\t\t\t\tfoundInImport = true;", "+\t\t\t\t\t\t\t? findType(name, (PackageBinding) resolvedImport, currentPackage)", "+\t\t\t\t\t\t\t: findDirectMemberType(name, (ReferenceBinding) resolvedImport);", "+\t\t\t\t\t\tif (temp != null) {", "+\t\t\t\t\t\t\tif (temp.isValidBinding()) {", "+\t\t\t\t\t\t\t\tImportReference importReference = someImport.reference;", "+\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\tif (foundInImport)", "+\t\t\t\t\t\t\t\t\t// Answer error binding -- import on demand conflict; name found in two import on demand packages.", "+\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, Ambiguous);", "+\t\t\t\t\t\t\t\ttype = temp;", "+\t\t\t\t\t\t\t\tfoundInImport = true;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tproblemId = temp.problemId();", "+\t\t\t\t\t\t\t}", "+\t\t\t\tif (type != null) return type;", "-\t\t\tif (type != null) return type;", "-\t\tif (foundType != null) return foundType; // problem type from above", "-\t\treturn new ProblemReferenceBinding(name, NotFound);", "+\t\treturn new ProblemReferenceBinding(name, problemId);"]}], "num": 3797}