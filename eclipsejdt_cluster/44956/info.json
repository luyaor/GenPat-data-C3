{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a96cd95aa7694c2d51eafba06ab004d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a278795af25e38022e180365b63e83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "70293ebfba1aa3d3dce9544e23e757d77487db91", "commitAfterChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "diff": ["-\t\treturn true;", "+\t\t", "+\t\tTypeParameter[] typeParameters = constructorDeclaration.typeParameters;", "+\t\tif (typeParameters != null) {", "+\t\t\tint typeParametersLength = typeParameters.length;", "+\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "+\t\t\t\ttypeParameters[i].traverse(this, constructorDeclaration.scope);", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tArgument[] arguments = constructorDeclaration.arguments;", "+\t\tif (arguments != null) {", "+\t\t\tint argumentLength = arguments.length;", "+\t\t\tfor (int i = 0; i < argumentLength; i++) {", "+\t\t\t\targuments[i].traverse(this, constructorDeclaration.scope);", "+\t\t\t}", "+\t\t}", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2707350fe8cf8c6a2ece577c918f560", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "70293ebfba1aa3d3dce9544e23e757d77487db91", "commitAfterChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "diff": ["-\t\treturn true;", "+\t\t", "+\t\tTypeParameter[] typeParameters = methodDeclaration.typeParameters;", "+\t\tif (typeParameters != null) {", "+\t\t\tint typeParametersLength = typeParameters.length;", "+\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "+\t\t\t\ttypeParameters[i].traverse(this, methodDeclaration.scope);", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tArgument[] arguments = methodDeclaration.arguments;", "+\t\tif (arguments != null) {", "+\t\t\tint argumentLength = arguments.length;", "+\t\t\tfor (int i = 0; i < argumentLength; i++) {", "+\t\t\t\targuments[i].traverse(this, methodDeclaration.scope);", "+\t\t\t}", "+\t\t}", "+\t\treturn false;"]}], "num": 44956}