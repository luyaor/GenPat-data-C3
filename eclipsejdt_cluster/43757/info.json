{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71aed15ebc2a8e90eb44ea2b3a6fa299", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a09dddb6708331ca7c1a90c4b6005b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "commitAfterChange": "6917637e4d94d6b430f2f9b2341abe83418f5e26", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-\t\t\tLambdaExpression expression = new LambdaExpression(this, resolvedType, interphase, sourceStart, sourceEnd, arrowPosition);", "+\t\t\tLambdaExpression expression = LambdaFactory.createLambdaExpression(this, resolvedType, interphase, sourceStart, sourceEnd, arrowPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "927471a02c5173943e699dc4acbe8f64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-\t\t\tif (!memento.hasMoreTokens()) return this;", "-\t\t\tString resolvedType = memento.nextToken();", "-\t\t\tLambdaExpression expression = LambdaFactory.createLambdaExpression(this, resolvedType, interphase, sourceStart, sourceEnd, arrowPosition);", "+\t\t\tLambdaExpression expression = LambdaFactory.createLambdaExpression(this, interphase, sourceStart, sourceEnd, arrowPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8d0d5903df1474fb3b7c8a72ef4bd72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-\t\t\tString name = memento.nextToken();", "+\t\t\tString resolvedType = memento.nextToken();", "-\t\t\tLambdaExpression expression = new LambdaExpression(this, name, interphase, sourceStart, sourceEnd, arrowPosition);", "+\t\t\tLambdaExpression expression = new LambdaExpression(this, resolvedType, interphase, sourceStart, sourceEnd, arrowPosition);"]}], "num": 43757}