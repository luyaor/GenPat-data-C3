{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71f34218d3a177ebbdb2480c74db2c22", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c58e63500c43c0c6e3507c9c95147e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "075bbe736870ef534cfc50806faa3a8faa0b22b3", "commitAfterChange": "cbf4d8b0c602d0860355a0bb315f58708fa257d2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testCreateTypeSignature() throws JavaModelException", "signatureAfterChange": " public void testCreateTypeSignature() throws JavaModelException", "diff": ["+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=41019", "+\tassertEquals(\"Signature#createTypeSignature is not correct9\", \"Linteration.test.MyData;\", Signature.createTypeSignature(\"interation.test.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct10\", \"Llongtest.MyData;\", Signature.createTypeSignature(\"longtest.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct11\", \"Lbooleantest.MyData;\", Signature.createTypeSignature(\"booleantest.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct12\", \"Lbytetest.MyData;\", Signature.createTypeSignature(\"bytetest.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct13\", \"Lchartest.MyData;\", Signature.createTypeSignature(\"chartest.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct14\", \"Lshorttest.MyData;\", Signature.createTypeSignature(\"shorttest.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct15\", \"Ldoubletest.MyData;\", Signature.createTypeSignature(\"doubletest.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct16\", \"Lfloattest.MyData;\", Signature.createTypeSignature(\"floattest.MyData\".toCharArray(), true));", "+\tassertEquals(\"Signature#createTypeSignature is not correct17\", \"Lvoidtest.MyData;\", Signature.createTypeSignature(\"voidtest.MyData\".toCharArray(), true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f14b2de05ead294c49f23b82cc28635e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTStructuralPropertyTest.java", "commitBeforeChange": "6a514a348b687707873fde0f6184e6b09d1607ee", "commitAfterChange": "15cb47257592351618c0f415edc117a6b315a803", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void testStructuralProperties()", "signatureAfterChange": " \tpublic void testStructuralProperties()", "diff": ["-\t\tfinal Set simpleProperties = new HashSet(400);", "-\t\tfinal Set childProperties = new HashSet(400);", "-\t\tfinal Set childListProperties = new HashSet(400);", "-\t\tfinal Set visitedProperties = new HashSet(400);", "-\t\tfinal Set nodeClasses = new HashSet(100);", "+\t\tfinal Set simpleProperties = new LinkedHashSet(400);", "+\t\tfinal Set childProperties = new LinkedHashSet(400);", "+\t\tfinal Set childListProperties = new LinkedHashSet(400);", "+\t\tfinal Set visitedProperties = new LinkedHashSet(400);", "+\t\tfinal Set nodeClasses = new LinkedHashSet(100);", "-\t\t\t\tvisitedProperties.add(me);", "-\t\t\t\tassertEquals(\"Wrong number of visited properties\", 82, visitedProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of visited properties\", 81, visitedProperties.size());", "-\t\t\t\tassertEquals(\"Wrong number of visited properties\", 104, visitedProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of visited properties\", 103, visitedProperties.size());", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS4 :", "+\t\t\t\tassertEquals(\"Wrong number of visited node classes\", 81, nodeClasses.size());", "+\t\t\t\tassertEquals(\"Wrong number of visited properties\", 103, visitedProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of simple properties\", 23, simpleProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of child properties\", 115, childProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of child list properties\", 54, childListProperties.size());", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS8 :", "+\t\t\t\tassertEquals(\"Wrong number of visited node classes\", 84, nodeClasses.size());", "+\t\t\t\tassertEquals(\"Wrong number of visited properties\", 105, visitedProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of simple properties\", 21, simpleProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of child properties\", 118, childProperties.size());", "+\t\t\t\tassertEquals(\"Wrong number of child list properties\", 66, childListProperties.size());", "+\t\t\t\tbreak;", "+\t\t\tdefault :", "+\t\t\t\tfail();"]}], "num": 12689}