{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "520bb3e6edfd700b7f226c3dad630658", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40550ea0caaa9ef717e9966361246a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": " public SyntheticAccessMethodBinding[] syntheticAccessMethods()", "signatureAfterChange": " public SyntheticMethodBinding[] syntheticMethods()", "diff": ["-public SyntheticAccessMethodBinding[] syntheticAccessMethods() {", "+public SyntheticMethodBinding[] syntheticMethods() {", "-\tSyntheticAccessMethodBinding[] bindings = new SyntheticAccessMethodBinding[1];", "+\tSyntheticMethodBinding[] bindings = new SyntheticMethodBinding[1];", "-\t\t\tSyntheticAccessMethodBinding[] methodAccessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "+\t\t\tSyntheticMethodBinding[] methodAccessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "-\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticAccessMethodBinding[index + numberOfAccessors]), 0, index);", "+\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticMethodBinding[index + numberOfAccessors]), 0, index);", "-\t\t\tSyntheticAccessMethodBinding[] fieldAccessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "+\t\t\tSyntheticMethodBinding[] fieldAccessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "-\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticAccessMethodBinding[index + numberOfAccessors]), 0, index);", "+\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticMethodBinding[index + numberOfAccessors]), 0, index);", "-\tSyntheticAccessMethodBinding[] sortedBindings = new SyntheticAccessMethodBinding[length = bindings.length];", "+\tSyntheticMethodBinding[] sortedBindings = new SyntheticMethodBinding[length = bindings.length];", "-\t\tSyntheticAccessMethodBinding binding = bindings[i];", "+\t\tSyntheticMethodBinding binding = bindings[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efecaa99a9bb126856b0e1e2739de7f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void addSpecialMethods()", "signatureAfterChange": " \tpublic void addSpecialMethods()", "diff": ["+\t    ", "-\t\tSourceTypeBinding currentBinding = referenceBinding;", "-\t\tMethodBinding[] defaultAbstractMethods =", "-\t\t\tcurrentBinding.getDefaultAbstractMethods();", "+\t\tgenerateMissingAbstractMethods(referenceBinding.scope.referenceType().missingAbstractMethods, referenceBinding.scope.referenceCompilationUnit().compilationResult);", "+", "+\t\tMethodBinding[] defaultAbstractMethods = this.referenceBinding.getDefaultAbstractMethods();", "-\t\tSyntheticAccessMethodBinding[] syntheticAccessMethods =", "-\t\t\tcurrentBinding.syntheticAccessMethods();", "+\t\tSyntheticAccessMethodBinding[] syntheticAccessMethods = this.referenceBinding.syntheticAccessMethods();", "-\t\t\t\t\t\taddSyntheticFieldReadAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\t\taddSyntheticFieldReadAccessMethod(accessMethodBinding);", "-\t\t\t\t\t\taddSyntheticFieldWriteAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\t\taddSyntheticFieldWriteAccessMethod(accessMethodBinding);", "-\t\t\t\t\t\t// generate a method info to emulate an access to a non-accessible method / super-method", "-\t\t\t\t\t\taddSyntheticMethodAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\tcase SyntheticAccessMethodBinding.BridgeMethodAccess :", "+\t\t\t\t\t\t// generate a method info to emulate an access to a non-accessible method / super-method or bridge method", "+\t\t\t\t\t\taddSyntheticMethodAccessMethod(accessMethodBinding);", "-\t\t\t\t\t\taddSyntheticConstructorAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\t\taddSyntheticConstructorAccessMethod(accessMethodBinding);", "+\t\t\t\t\t\tbreak;"]}], "num": 26793}