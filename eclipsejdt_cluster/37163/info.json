{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0338f084e0d3c85bdfd61cb8c145cafa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a494b9d96ab45ee22465ca5fbf75ba3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "605cc5dd745b7e1d6935bfc34c1be6fcea51b4ab", "commitAfterChange": "03be42bb9ac6b223bea20e29a7b3f31a76dae9e4", "methodNumberBeforeChange": 344, "methodNumberAfterChange": 344, "signatureBeforeChange": " public void testBug110336f() throws CoreException", "signatureAfterChange": " public void testBug110336f() throws CoreException", "diff": ["-\t\t\"src/b110336/Test.java void b110336.Test.foo(Test).test1 [Test]\\n\" +", "-\t\t\"src/b110336/Test.java void b110336.Test.foo(Test).test2 [Test]\\n\" +", "-\t\t\"src/b110336/Test.java void b110336.Test.foo(Test) [Test]\\n\" +", "-\t\t\"src/b110336/Test.java void b110336.Test.foo(Test).test4 [Test]\\n\" +", "-\t\t\"src/b110336/Test.java void b110336.Test.foo(Test).test3 [Test]\",", "+\t\t\"src/b110336/Test.java void b110336.Test.foo(Test) [Test]+[test1]\\n\" + ", "+\t\t\"src/b110336/Test.java void b110336.Test.foo(Test) [Test]+[test2]\\n\" + ", "+\t\t\"src/b110336/Test.java void b110336.Test.foo(Test) [Test]\\n\" + ", "+\t\t\"src/b110336/Test.java void b110336.Test.foo(Test) [Test]+[test4]\\n\" + ", "+\t\t\"src/b110336/Test.java void b110336.Test.foo(Test) [Test]+[test3]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41cb9171e9d6955b1698992018111e44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "413506076b5eca1e8bff0fe05f1ae6ca89cdfda0", "commitAfterChange": "84210148bd50897aa80e3947cfa4eab1021e65ca", "methodNumberBeforeChange": 582, "methodNumberAfterChange": 582, "signatureBeforeChange": " public void testBug216875h() throws CoreException", "signatureAfterChange": " public void testBug216875h() throws CoreException", "diff": ["-\t\t\"src/test/X.java void test.X.foo() [\t\t\ufffd|t1|\ufffd = t2;] WRITE ACCESS\\n\" +", "-\t\t\"src/test/X.java void test.X.foo() [\t\t\ufffd|t1|\ufffd.field = t1.field;] READ ACCESS\\n\" +", "-\t\t\"src/test/X.java void test.X.foo() [\t\tt1.field = \ufffd|t1|\ufffd.field;] READ ACCESS\\n\" +", "-\t\t\"src/test/X.java void test.X.foo() [\t\tt2.field = \ufffd|t1|\ufffd.field;] READ ACCESS\"", "+\t\t\"src/test/X.java void test.X.foo() [\t\t\ufffd|t1|\ufffd = t2;] WRITE ACCESS\\n\" +", "+\t\t\"src/test/X.java void test.X.foo() [\t\t\ufffd|t1|\ufffd.field = t1.field;] READ ACCESS\\n\" +", "+\t\t\"src/test/X.java void test.X.foo() [\t\tt1.field = \ufffd|t1|\ufffd.field;] READ ACCESS\\n\" +", "+\t\t\"src/test/X.java void test.X.foo() [\t\tt2.field = \ufffd|t1|\ufffd.field;] READ ACCESS\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6651106730f61d2e582ab2a6b9058fb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7b6db9de192fc1976c0d12542fea77102668b433", "commitAfterChange": "fe94bdafb4bfe9680e0611bb6d3516015883724d", "methodNumberBeforeChange": 466, "methodNumberAfterChange": 466, "signatureBeforeChange": " \tpublic void test464()", "signatureAfterChange": " \tpublic void test464()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" + ", "-\t\t\t\"\treturn sets;\\r\\n\" + ", "-\t\t\t\"\t       ^^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type Set[] needs unchecked conversion to conform to Set<String>[]\\n\" + ", "+\t\t\t\"\tList<Integer>[] nums = new List[] {Collections.singletonList(\\\"Uh oh\\\")};\\r\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type List[] needs unchecked conversion to conform to List<Integer>[]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0dc8f8e2335bf4a8df6848de0c5985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ReferenceCollection.java", "commitBeforeChange": "710d0ee9ae09d09e8125c82b35a8d0fef2cacaf9", "commitAfterChange": "9e0776587070dfdd20877d5ab72b8e4778784bf7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "signatureAfterChange": "  boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "diff": ["-\t\t\t\tSystem.out.println(\"  found well known match\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"Found well known match\"); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(\"  found match in well known package to \" + new String(simpleNames[i])); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.println(\"Found match in well known package to \" + new String(simpleNames[i])); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(\"  found well known match in \" + CharOperation.toString(qualifiedName)); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.println(\"Found well known match in \" + CharOperation.toString(qualifiedName)); //$NON-NLS-1$", "-\t\t\t\t\t\t\tSystem.out.println(\"  found match in \" + CharOperation.toString(qualifiedName) //$NON-NLS-1$", "+\t\t\t\t\t\t\tSystem.out.println(\"Found match in \" + CharOperation.toString(qualifiedName) //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee740bd2e8813bb0f126b5b1a9749da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void testBug83127d()", "signatureAfterChange": " \tpublic void testBug83127d()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8267d4efc5dafb3620eb3b29391ff0a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/EnumCompletionParserTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0003()", "signatureAfterChange": " public void test0003()", "diff": ["-\t\t\"case BAR : ;\\n\" +", "-\t\t\"case <CompleteOnName:FOO> : ;\\n\" +", "+\t\t\"case BAR :\\n\" +", "+\t\t\"case <CompleteOnName:FOO> :\\n\" +", "-\t\t\"      case BAR : ;\\n\" +", "-\t\t\"      case <CompleteOnName:FOO> : ;\\n\" +", "+\t\t\"      case BAR :\\n\" +", "+\t\t\"      case <CompleteOnName:FOO> :\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad336fefc33b9b51368afdf10cdd549e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "983c7fc5343f245d128eb822bd7ee4cfaee29d49", "commitAfterChange": "4aca51e66d266745777f6bebbf32a133f70b622d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void testJavadocConstructorStringReference() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocConstructorStringReference() throws CoreException", "diff": ["-\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [JavadocSearched] POTENTIAL_MATCH INSIDE_JAVADOC\\n\" + ", "-\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [JavadocSearched] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "-\t\t\t\"src/j1/JavadocValidRef.java void j1.JavadocValidRef.valid() [JavadocSearched] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "-\t\t\t\"src/j1/JavadocValidRef.java void j1.JavadocValidRef.valid() [JavadocSearched] EXACT_MATCH INSIDE_JAVADOC\"", "+\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [JavadocSearched()] POTENTIAL_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [JavadocSearched(int)] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j1/JavadocValidRef.java void j1.JavadocValidRef.valid() [JavadocSearched()] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j1/JavadocValidRef.java void j1.JavadocValidRef.valid() [JavadocSearched(String)] EXACT_MATCH INSIDE_JAVADOC\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b4e85b3f50b1641811b69a707457de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void test031()", "signatureAfterChange": " \tpublic void test031()", "diff": ["-\t\t\t\"     8  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     8  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    12  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\t\"    12  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 16] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 3, pc: 16] local: i index: 1 type: I\\n\";", "+\t\t\t\"        [pc: 0, pc: 16] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 3, pc: 16] local: i index: 1 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b995522309503d1431fb1ba679e4b294", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test002()", "signatureAfterChange": " \tpublic void test002()", "diff": ["-\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"     3  invokevirtual java.io.PrintStream.println() : void  [26]\\n\" + ", "-\t\t\t\"     6  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"     9  invokevirtual java.io.PrintStream.println() : void  [26]\\n\" + ", "+\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [16]\\n\" + ", "+\t\t\t\"     3  invokevirtual java.io.PrintStream.println() : void [22]\\n\" + ", "+\t\t\t\"     6  getstatic java.lang.System.out : java.io.PrintStream [16]\\n\" + ", "+\t\t\t\"     9  invokevirtual java.io.PrintStream.println() : void [22]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71e39756d457bede07148dd806f7394", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "194abd534b611ec2d23ab367d4102b5723758d82", "commitAfterChange": "c7d3258ae74375a57da545fcb11a05d452eeaa7b", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void test042() throws CoreException", "signatureAfterChange": " \tpublic void test042() throws CoreException", "diff": ["-\t\t\t\t\t\"LX;^1\",", "-\t\t\t\t\t\"LX;.field^0\"", "+\t\t\t\t\t\"LX;\",", "+\t\t\t\t\t\"LX;.field\"", "-\t\t\t\t\"LX;^1\\n\" + ", "-\t\t\t\t\"LX;.field^0\",", "+\t\t\t\t\"LX;\\n\" + ", "+\t\t\t\t\"LX;.field\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c8f0fb57b59ea29be762df0d8b204a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test017()", "signatureAfterChange": " \tpublic void test017()", "diff": ["-\t\t\t\"     6  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "-\t\t\t\"     9  invokevirtual java/io/PrintStream.println()V [26]\\n\" + ", "+\t\t\t\"     6  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "+\t\t\t\"     9  invokevirtual java.io.PrintStream.println() : void  [26]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 13] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 13] local: b index: 1 type: Z\\n\";", "+\t\t\t\"        [pc: 0, pc: 13] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 13] local: b index: 1 type: boolean\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea36ed512f175b08c889414c619045d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "c40952dd3377ae996ee676dcac3fcb724d57d010", "commitAfterChange": "1283becde4269d4bd1b131ede84504f893ae6981", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "  \tpublic void testBug209936_MemberFullyQualifiedSingleReference()", "signatureAfterChange": "  \tpublic void testBug209936_MemberFullyQualifiedSingleReference()", "diff": ["-\t\t\t\t\"\t\t\t \t\t * @see A.A1.A2.A3.A4#foo(Object)\\n\" +", "-\t\t\t\t\"\t\t\t \t\t * @see A.A1.A2.A3.A4#foo(R)\\n\" +", "+\t\t\t\t\"\t\t\t \t\t * @see p1.A.A1.A2.A3.A4#foo(Object)\\n\" +", "+\t\t\t\t\"\t\t\t \t\t * @see p1.A.A1.A2.A3.A4#foo(R)\\n\" +", "-\t\t\t\"\t* @see A.A1.A2.A3.A4#foo(R)\\r\\n\" +", "-\t\t\t\"\t                     ^^^\\n\" +", "+\t\t\t\"\t* @see p1.A.A1.A2.A3.A4#foo(R)\\r\\n\" +", "+\t\t\t\"\t                        ^^^\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5a727c748aedbb760f8cb189d91d3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "3a514d6cf7a163df7c9aa1b24e69e8f3a5b39e3c", "commitAfterChange": "0aeaaba7ea908a19742d309ce070fd6d99b6c4d4", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testBug47968constructor() throws CoreException", "signatureAfterChange": " \tpublic void testBug47968constructor() throws CoreException", "diff": ["-//\t\tJavaSearchResultCollector result = new JavaSearchResultCollector();", "-//\t\tresult.showAccuracy = true;", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s [Bug47968] EXACT_MATCH\\n\" + // This match was not found before...", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s.y [Bug47968] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s() [Bug47968] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/j2/Bug47968s.java void j2.Bug47968s.bar() [Bug47968] EXACT_MATCH\",", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s [Bug47968] EXACT_MATCH INSIDE_JAVADOC\\n\" + // This match was not found before...", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s.y [Bug47968] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s() [Bug47968] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j2/Bug47968s.java void j2.Bug47968s.bar() [Bug47968] EXACT_MATCH INSIDE_JAVADOC\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef47d9e7a4ead23166c5d350b2866ef1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testBug83127f()", "signatureAfterChange": " \tpublic void testBug83127f()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e24f9de215a297b664e7c9d338bb15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test017()", "signatureAfterChange": " \tpublic void test017()", "diff": ["-\t\t\t\"     1  istore_1\\n\" + ", "-\t\t\t\"     2  iload_1\\n\" + ", "+\t\t\t\"     1  istore_1 [b]\\n\" + ", "+\t\t\t\"     2  iload_1 [b]\\n\" + ", "-\t\t\t\"     6  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"     9  invokevirtual #26 <Method java/io/PrintStream.println()V>\\n\" + ", "+\t\t\t\"     6  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     9  invokevirtual java/io/PrintStream.println()V [26]\\n\" + "]}], "num": 37163}