{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1df938b690918e63fc02cd919e260454", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09400d4b6c5528761b2ad7448895c5db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "\r \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\t// change builder specs to build in the order given by the new classpath\r", "-\t\tJavaModelManager manager = project.getJavaModelManager();\r", "-\t\tmanager.setBuildOrder(\r", "-\t\t\t((JavaModel) project.getJavaModel()).computeBuildOrder(true));\r", "-\r", "-\t\tIClasspathEntry[] newExpandedPath = project.getExpandedClasspath(true, true);\r", "+\t\tIClasspathEntry[] newExpandedPath = \r", "+\t\t\tproject.getExpandedClasspath(true, this.canChangeResource);\r", "-\t\t\t\tmanager,\r", "+\t\t\t\tproject.getJavaModelManager(),\r", "+\t\t\r", "+\t\t// update cycle markers\r", "+\t\tupdateCycleMarkers();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fdde697fd2883df945d475a125964d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "1ce14f7d38953baa0407a7c04bf1e650dc1a4ab4", "commitAfterChange": "188c9c7dc3851a0a188854f7875a3d0a8c55cb71", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void initializeIndexLocations()", "signatureAfterChange": " private void initializeIndexLocations()", "diff": ["-\t\t\tIClasspathEntry[] focusEntries = null;", "-\t\t\tif (this.pattern instanceof MethodPattern) { // should consider polymorphic search for method patterns", "-\t\t\t\tJavaProject focusProject = focus instanceof JarPackageFragmentRoot ? (JavaProject) focus.getParent() : (JavaProject) focus;", "-\t\t\t\tfocusEntries = focusProject.getExpandedClasspath();", "-\t\t\t}", "+\t\t\tIJavaElement[] focuses = getFocusedElements(this.pattern, focus);", "-\t\t\t\t\tif (canSeeFocus(focus, project, focusEntries)) {", "+\t\t\t\t\tif (canSeeFocus(focuses, project)) {"]}], "num": 9002}