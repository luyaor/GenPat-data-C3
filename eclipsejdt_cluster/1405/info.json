{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57a5ffa4fd99d4aa1a9511dc4762da4d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54de9adae61935841df6059e4e3cc632", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["+ */", "+protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {", "+\tif (type == null) return INACCURATE_MATCH;", "+", "+\tchar[] qualifiedPackageName = type.qualifiedPackageName();", "+\tchar[] qualifiedSourceName = type instanceof LocalTypeBinding", "+\t\t\t? CharOperation.concat(\"1\".toCharArray(), type.qualifiedSourceName(), '.') //$NON-NLS-1$", "+\t\t\t: type.qualifiedSourceName();", "+\tchar[] fullyQualifiedTypeName = qualifiedPackageName.length == 0", "+\t\t? qualifiedSourceName", "+\t\t: CharOperation.concat(qualifiedPackageName, qualifiedSourceName, '.');", "+\tif (this.matchesType(simpleNamePattern, qualificationPattern, fullyQualifiedTypeName))", "+\t\treturn ACCURATE_MATCH;", "+\treturn IMPOSSIBLE_MATCH;", "+}", "- */", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {", "-\tif (type == null) return INACCURATE_MATCH;", "-\tchar[] qualifiedPackageName = type.qualifiedPackageName();", "-\tchar[] qualifiedSourceName = ", "-\t\ttype instanceof LocalTypeBinding ?", "-\t\t\tCharOperation.concat(\"1\".toCharArray(), type.qualifiedSourceName(), '.') : //$NON-NLS-1$", "-\t\t\ttype.qualifiedSourceName();", "-\tif (this.matchesType(", "-\t\t\tsimpleNamePattern, ", "-\t\t\tqualificationPattern, ", "-\t\t\tqualifiedPackageName.length == 0 ? ", "-\t\t\t\tqualifiedSourceName : ", "-\t\t\t\tCharOperation.concat(qualifiedPackageName, qualifiedSourceName, '.'))) {", "-\t\treturn ACCURATE_MATCH;", "-\t} else {", "-\t\treturn IMPOSSIBLE_MATCH;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8eb6a54e3f57c99a25bf2402d0254dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "6672145af9f0ffc7b3a43bbf4b4faa8f14d04d8b", "commitAfterChange": "5ae7e6b78bc18a365a04a008c907250a535fa48a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding binding)", "diff": ["-protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {", "-\treturn resolveLevelForType(qualifiedPattern(simpleNamePattern, qualificationPattern), type);", "+protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding binding) {", "+//\treturn resolveLevelForType(qualifiedPattern(simpleNamePattern, qualificationPattern), type);", "+\tchar[] qualifiedPattern = getQualifiedPattern(simpleNamePattern, qualificationPattern);", "+\tint level = resolveLevelForType(qualifiedPattern, binding);", "+\tif (level == ACCURATE_MATCH || binding == null) return level;", "+\tboolean match = false;", "+\tTypeBinding type = binding instanceof ArrayBinding ? ((ArrayBinding)binding).leafComponentType : binding;", "+\tif (type.isMemberType() || type.isLocalType()) {", "+\t\tif (qualificationPattern != null) {", "+\t\t\tmatch = CharOperation.equals(qualifiedPattern, getQualifiedSourceName(binding), this.isCaseSensitive);", "+\t\t} else {", "+\t\t\tmatch = CharOperation.equals(qualifiedPattern, binding.sourceName(), this.isCaseSensitive); // need to keep binding to get source name", "+\t\t}", "+\t} else if (qualificationPattern == null) {", "+\t\tmatch = CharOperation.equals(qualifiedPattern, getQualifiedSourceName(binding), this.isCaseSensitive);", "+\t}", "+\treturn match ? ACCURATE_MATCH : IMPOSSIBLE_MATCH;", "+"]}], "num": 1405}