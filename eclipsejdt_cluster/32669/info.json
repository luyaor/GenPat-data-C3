{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ed453c8c7a811a02d8639290ddbbf7c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1082d687714f249173d1ff21149cc813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-        \"    -missingNullDefault  report missing default nullness annotation\\n\" + ", "+        \"    -missingNullDefault  report missing default nullness annotation\\n\" +", "+        \"    -annotationpath <path>\\n\" + ", "+        \"                       Path to a base directory or zip file holding external\\n\" + ", "+        \"                       annotations to support annotation-based null analysis\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31cbab8f8c4c989f28059237d25337b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6dbb2ec74b77026a9a8c00b4381c92a21f100370", "commitAfterChange": "2d88125c63a44736bd6507d03cfcacc7c43a6f63", "methodNumberBeforeChange": 522, "methodNumberAfterChange": 522, "signatureBeforeChange": " \tpublic void test0505()", "signatureAfterChange": " \tpublic void test0505()", "diff": ["-\t\t\t\"    14  getstatic XB.CONST : XB [42]\\n\" + ", "-\t\t\t\"    17  invokevirtual java.io.PrintStream.print(java.lang.Object) : void [48]\\n\" + ", "-\t\t\t\"    20  return\\n\" + ", "+\t\t\t\"    14  aload_0 [this]\\n\" + ", "+\t\t\t\"    15  getfield X.e : XA [42]\\n\" + ", "+\t\t\t\"    18  checkcast XB [44]\\n\" + ", "+\t\t\t\"    21  pop\\n\" + ", "+\t\t\t\"    22  getstatic XB.CONST : XB [46]\\n\" + ", "+\t\t\t\"    25  invokevirtual java.io.PrintStream.print(java.lang.Object) : void [50]\\n\" + ", "+\t\t\t\"    28  return\\n\" + ", "-\t\t\t\"        [pc: 20, line: 19]\\n\" + ", "+\t\t\t\"        [pc: 28, line: 19]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 21] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 29] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 21] local: this index: 0 type: X<E>\\n\";", "+\t\t\t\"        [pc: 0, pc: 29] local: this index: 0 type: X<E>\\n\";"]}], "num": 32669}