{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86176f533a96299b1787a6a4254966a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f141b7e35a9969ca6a68b323697d920", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void resolve(BlockScope blockScope)", "signatureAfterChange": " public void resolve(BlockScope blockScope)", "diff": ["+ */", "-\t// local type declaration", "+\t", "-\tif ((this.bits & ASTNode.IsAnonymousType) == 0) blockScope.addLocalType(this);", "+\tif ((this.bits & ASTNode.IsAnonymousType) == 0) {", "+\t\t// check collision scenarii", "+\t\tBinding existing = blockScope.getType(this.name);", "+\t\tif (existing instanceof ReferenceBinding", "+\t\t\t\t&& existing != this.binding", "+\t\t\t\t&& existing.isValidBinding()) {", "+\t\t\tReferenceBinding existingType = (ReferenceBinding) existing;", "+\t\t\tif (existingType instanceof TypeVariableBinding) {", "+\t\t\t\tblockScope.problemReporter().typeHiding(this, (TypeVariableBinding) existingType);", "+\t\t\t} else if (existingType instanceof LocalTypeBinding", "+\t\t\t\t\t\t&& ((LocalTypeBinding) existingType).scope.methodScope() == blockScope.methodScope()) {", "+\t\t\t\t\t// dup in same method", "+\t\t\t\t\tblockScope.problemReporter().duplicateNestedType(this);", "+\t\t\t} else if (blockScope.isDefinedInType(existingType)) {", "+\t\t\t\t//\tcollision with enclosing type", "+\t\t\t\tblockScope.problemReporter().typeCollidesWithEnclosingType(this);", "+\t\t\t} else if (blockScope.isDefinedInSameUnit(existingType)){ // only consider hiding inside same unit", "+\t\t\t\t// hiding sibling", "+\t\t\t\tblockScope.problemReporter().typeHiding(this, existingType);", "+\t\t\t}", "+\t\t}", "+\t\tblockScope.addLocalType(this);", "+\t}", "-", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb5b47513b3a9f1142d6f9630a7cbcd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "4e15303074ce3ddf445b20016964bb1b3c8763d9", "commitAfterChange": "1133c6410b96942988ad1d041f5655442b099448", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void resolve(BlockScope blockScope)", "signatureAfterChange": " public void resolve(BlockScope blockScope)", "diff": ["+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=312989, check for collision with enclosing type.", "+\t\t\t\tScope outerScope = blockScope.parent;", "+checkOuterScope:while (outerScope != null) {", "+\t\t\t\t\tBinding existing2 = outerScope.getType(this.name);", "+\t\t\t\t\tif (existing2 instanceof TypeVariableBinding && existing2.isValidBinding()) {", "+\t\t\t\t\t\tTypeVariableBinding tvb = (TypeVariableBinding) existingType;", "+\t\t\t\t\t\tBinding declaringElement = tvb.declaringElement;", "+\t\t\t\t\t\tif (declaringElement instanceof ReferenceBinding", "+\t\t\t\t\t\t\t\t&& CharOperation.equals(((ReferenceBinding) declaringElement).sourceName(), this.name)) {", "+\t\t\t\t\t\t\tblockScope.problemReporter().typeCollidesWithEnclosingType(this);", "+\t\t\t\t\t\t\tbreak checkOuterScope;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else if (existing2 instanceof ReferenceBinding", "+\t\t\t\t\t\t\t&& existing2.isValidBinding()", "+\t\t\t\t\t\t\t&& outerScope.isDefinedInType((ReferenceBinding) existing2)) { ", "+\t\t\t\t\t\t\tblockScope.problemReporter().typeCollidesWithEnclosingType(this);", "+\t\t\t\t\t\t\tbreak checkOuterScope;", "+\t\t\t\t\t} else if (existing2 == null) {", "+\t\t\t\t\t\tbreak checkOuterScope;", "+\t\t\t\t\t}", "+\t\t\t\t\touterScope = outerScope.parent;", "+\t\t\t\t}"]}], "num": 3815}