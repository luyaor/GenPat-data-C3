{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2eab9d74c3b9871ee2d32455e0639a6c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f1eebc8121deef9a56ef78f3233e24b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeLiteral.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.type == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "645a368e596abca781ec25256abc8e90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CastExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.type == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991d6a7fd7097e45bc8fa6065b3488eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.type == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0590dbf24e4dafb40c33ed38e4a604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRefParameter.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.type == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1132941037bc802a4166c3d117d4bb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParameterizedType.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.type = new SimpleType(this.ast);", "-\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.type == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.type = new SimpleType(this.ast);", "+\t\t\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4b675c5996f91bc55bdeea6eaf1c75f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.type = new SimpleType(this.ast);", "-\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.type == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.type = new SimpleType(this.ast);", "+\t\t\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 23153}