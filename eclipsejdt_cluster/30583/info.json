{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "febef78ed9b58d1cb05dcd8eecb44f24", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca5303f59446e2b37171d41136d589a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (!(node instanceof TypeReference)) return false;\r", "-\r", "-\tTypeReference typeRef = (TypeReference)node;\r", "-\tif (!resolve) {\r", "-\t\tif (this.superSimpleName != null) {\r", "-\t\t\tchar[] typeRefSimpleName = null;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "-\t\t\t}\t\t\t\t\r", "-\t\t\tif (!this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "-\t\t\t\treturn false;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding binding = typeRef.binding;\r", "-\t\tif (binding != null && !this.matchesType(this.superSimpleName, this.superQualification, binding))\r", "-\t\t\treturn false;\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (!(node instanceof TypeReference)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tTypeReference typeRef = (TypeReference)node;\r", "+\tif (resolve) {\r", "+\t\tTypeBinding binding = typeRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn this.matchLevelForType(this.superSimpleName, this.superQualification, binding);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (this.superSimpleName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tchar[] typeRefSimpleName = null;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "+\t\t\t}\t\t\t\t\r", "+\t\t\tif (this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "+\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\telse\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4314bdf96c89bf4d7c68c492395eb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (!(node instanceof TypeReference)) return false;\r", "-\r", "-\tTypeReference typeRef = (TypeReference)node;\r", "-\tif (!resolve) {\r", "-\t\tif (this.superSimpleName != null) {\r", "-\t\t\tchar[] typeRefSimpleName = null;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "-\t\t\t}\t\t\t\t\r", "-\t\t\tif (!this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "-\t\t\t\treturn false;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding binding = typeRef.binding;\r", "-\t\tif (binding != null && !this.matchesType(this.superSimpleName, this.superQualification, binding))\r", "-\t\t\treturn false;\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (!(node instanceof TypeReference)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tTypeReference typeRef = (TypeReference)node;\r", "+\tif (resolve) {\r", "+\t\tTypeBinding binding = typeRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn this.matchLevelForType(this.superSimpleName, this.superQualification, binding);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (this.superSimpleName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tchar[] typeRefSimpleName = null;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "+\t\t\t}\t\t\t\t\r", "+\t\t\tif (this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "+\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\telse\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac013d3e02a903ceed4dba53c0b0147d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (!(node instanceof TypeReference)) return false;\r", "-\r", "-\tTypeReference typeRef = (TypeReference)node;\r", "-\tif (!resolve) {\r", "-\t\tif (this.superSimpleName != null) {\r", "-\t\t\tchar[] typeRefSimpleName = null;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "-\t\t\t}\t\t\t\t\r", "-\t\t\tif (!this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "-\t\t\t\treturn false;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding binding = typeRef.binding;\r", "-\t\tif (binding != null && !this.matchesType(this.superSimpleName, this.superQualification, binding))\r", "-\t\t\treturn false;\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (!(node instanceof TypeReference)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tTypeReference typeRef = (TypeReference)node;\r", "+\tif (resolve) {\r", "+\t\tTypeBinding binding = typeRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn this.matchLevelForType(this.superSimpleName, this.superQualification, binding);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (this.superSimpleName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tchar[] typeRefSimpleName = null;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "+\t\t\t}\t\t\t\t\r", "+\t\t\tif (this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "+\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\telse\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}], "num": 30583}