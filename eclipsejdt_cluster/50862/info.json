{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "393f4c7c83459c2d41489e4d2170d0e5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a5c6a133b1545827d404732c1b7d3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/TypeBindingTests308.java", "commitBeforeChange": "678bd63c535ed58308236db21b34dad57015766d", "commitAfterChange": "aea2687c86127b817448747104c627048ecdcecb", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \tpublic void testBinaryAnnotationType() throws CoreException, IOException", "signatureAfterChange": "\r \tpublic void testBinaryAnnotationType() throws CoreException, IOException", "diff": ["+\t\t\t\t\"@Deprecated\\n\" +\t\t\r", "-\t\t\tASTNode node = buildAST(contents, this.workingCopy);\r", "+\t\t\tASTNode node = buildAST(contents, this.workingCopy, false);\r", "-\t\t\tassertProblemsSize(compilationUnit, 0);\r", "+\t\t\tassertProblemsSize(compilationUnit, 1, \"The type T is deprecated\");\r", "-\t\t\tassertTrue(\"Should be 1\", annotations.length == 1);\r", "+\t\t\tassertTrue(\"Should be 2\", annotations.length == 2);\r", "+\t\t\tassertEquals(\"Annotation mismatch\", \"@Deprecated()\", annotations[1].toString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47484e2289291b8d08ca3e0e2f113bf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/TypeBindingTests308.java", "commitBeforeChange": "aadb2a658581a97e9459691d70634be53e0b7594", "commitAfterChange": "80724a8df94e8e8610a4d46586b0b0c806074736", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r \tpublic void testBinaryWithoutGenericSignature() throws CoreException, IOException", "signatureAfterChange": "\r \tpublic void testBinaryWithoutGenericSignature() throws CoreException, IOException", "diff": ["-\t\t\tassertTrue(\"Should be 1\", annotations.length == 1);\r", "-\t\t\tassertEquals(\"Annotation mismatch\", \"@T(value = 29)\", annotations[0].toString());\r", "+\t\t\tassertTrue(\"Should be 0\", annotations.length == 0);\r", "-\t\t\tassertTrue(\"Should be 1\", annotations.length == 1);\r", "-\t\t\tassertEquals(\"Annotation mismatch\", \"@T(value = 9)\", annotations[0].toString());\r", "+\t\t\tassertTrue(\"Should be 0\", annotations.length == 0);\r"]}], "num": 50862}