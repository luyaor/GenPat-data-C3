{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2fa503ee65a77c0f20ced94205d6061", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dbf38222832d1939a23da8b388817b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 175, "signatureBeforeChange": "  \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tcreateTypeProposal(", "+\t\t\t\t\t\t\t\tboolean allowingLongComputationProposals = isAllowingLongComputationProposals();", "+\t\t\t\t\t\t\t\tif (!this.assistNodeIsConstructor || !allowingLongComputationProposals) {", "+\t\t\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\t\tcreateTypeProposal(", "+\t\t\t\t\t\t\t\t\t\t\t\tlocalType,", "+\t\t\t\t\t\t\t\t\t\t\t\tlocalType.sourceName,", "+\t\t\t\t\t\t\t\t\t\t\t\tIAccessRule.K_ACCESSIBLE,", "+\t\t\t\t\t\t\t\t\t\t\t\tlocalType.sourceName,", "+\t\t\t\t\t\t\t\t\t\t\t\trelevance,", "+\t\t\t\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tif (this.assistNodeIsConstructor && allowingLongComputationProposals) {", "+\t\t\t\t\t\t\t\t\tfindConstructorsOrAnonymousTypes(", "-\t\t\t\t\t\t\t\t\t\t\tlocalType.sourceName,", "-\t\t\t\t\t\t\t\t\t\t\tIAccessRule.K_ACCESSIBLE,", "-\t\t\t\t\t\t\t\t\t\t\tlocalType.sourceName,", "-\t\t\t\t\t\t\t\t\t\t\trelevance,", "-\t\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t\t\t\t\tblockScope,", "+\t\t\t\t\t\t\t\t\t\t\tFakeInvocationSite,", "+\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\trelevance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ae86b2fec658b0926695308eaa9a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 167, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["+\t\t\tboolean allowingLongComputationProposals = isAllowingLongComputationProposals();", "+\t\t\t", "-\t\t\tcreateTypeProposal(", "-\t\t\t\t\tmemberType,", "-\t\t\t\t\tmemberType.qualifiedSourceName(),", "-\t\t\t\t\tIAccessRule.K_ACCESSIBLE,", "-\t\t\t\t\tcompletionName,", "-\t\t\t\t\trelevance,", "-\t\t\t\t\tmissingElements,", "-\t\t\t\t\tmissingElementsStarts,", "-\t\t\t\t\tmissingElementsEnds,", "-\t\t\t\t\tmissingElementsHaveProblems);", "+\t\t\tif (!this.assistNodeIsConstructor ||", "+\t\t\t\t\t!allowingLongComputationProposals ||", "+\t\t\t\t\thasStaticMemberTypes(memberType, invocationType, this.unitScope) ||", "+\t\t\t\t\t(memberType instanceof SourceTypeBinding && hasMemberTypesInEnclosingScope((SourceTypeBinding)memberType, scope))) {", "+\t\t\t\tcreateTypeProposal(", "+\t\t\t\t\t\tmemberType,", "+\t\t\t\t\t\tmemberType.qualifiedSourceName(),", "+\t\t\t\t\t\tIAccessRule.K_ACCESSIBLE,", "+\t\t\t\t\t\tcompletionName,", "+\t\t\t\t\t\trelevance,", "+\t\t\t\t\t\tmissingElements,", "+\t\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\t\tmissingElementsHaveProblems);", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (this.assistNodeIsConstructor && allowingLongComputationProposals) {", "+\t\t\t\tfindConstructorsOrAnonymousTypes(", "+\t\t\t\t\t\tmemberType,", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tFakeInvocationSite,", "+\t\t\t\t\t\tisQualified,", "+\t\t\t\t\t\trelevance);", "+\t\t\t}"]}], "num": 36815}