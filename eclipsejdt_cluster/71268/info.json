{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39164d12eff284fb1aff66353c8efcda", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "150d5d3f7aea9dd7c66a3462d79147b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void becomeWorkingCopy(IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void becomeWorkingCopy(IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tJavaModelManager.PerWorkingCopyInfo perWorkingCopyInfo = manager.getPerWorkingCopyInfo(this, false/*don't create*/, true /*record usage*/, null/*no problem requestor needed*/);", "+\tIPath path = this.getPath();", "+\tJavaModelManager.PerWorkingCopyInfo perWorkingCopyInfo = manager.getPerWorkingCopyInfo(this, path, false/*don't create*/, true /*record usage*/, null/*no problem requestor needed*/);", "-\t\tBecomeWorkingCopyOperation operation = new BecomeWorkingCopyOperation(this, null, problemRequestor);", "+\t\tBecomeWorkingCopyOperation operation = new BecomeWorkingCopyOperation(this, path, problemRequestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2db632e40e290b204aa070f036f784", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "40a6830e5d047359c5255f8a6387f3c89500c57a", "commitAfterChange": "0a14997b28c3a3bedf1328eae8dea74c42621edc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "diff": ["-\t\tif (rootIDs.contains(this)){", "+\t\tString projectRootId = this.rootID();", "+\t\tif (rootIDs.contains(projectRootId)){", "-\t\trootIDs.add(this);", "+\t\trootIDs.add(projectRootId);", "-\t\t\t\trootIDs.add(rootID);", "+\t\t\t\trootIDs.add(rootID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61309a1a3773e22dcf60bb076e1d2cfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["+\t\tIPath externalAnnotationPath = entry.getExternalAnnotationPath();", "-\t\t\t\t\t\tbLocation = ClasspathLocation.forLibrary((IFile) resource, accessRuleSet);", "+\t\t\t\t\t\tbLocation = ClasspathLocation.forLibrary((IFile) resource, accessRuleSet, externalAnnotationPath);", "-\t\t\t\t\tbLocations.add(ClasspathLocation.forLibrary(path.toString(), accessRuleSet));", "+\t\t\t\t\tbLocations.add(ClasspathLocation.forLibrary(path.toString(), accessRuleSet, externalAnnotationPath));"]}], "num": 71268}