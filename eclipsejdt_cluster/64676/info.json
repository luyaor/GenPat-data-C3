{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cc32240a13b142d191a26531ef8d258", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40e16f6d3c92c44386170249e9805874", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "9a828b6f308f1048d5448d6c6f9c881639322d34", "commitAfterChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static String createMethodSignature(String[] parameterTypes, String returnType)", "signatureAfterChange": " public static String createMethodSignature(String[] parameterTypes, String returnType)", "diff": ["-\tint parameterTypesLenth = parameterTypes.length;", "-\tchar[][] parameters = new char[parameterTypesLenth][];", "-\tfor (int i = 0; i < parameterTypesLenth; i++) {", "+\treturn createMethodSignature(parameterTypes, returnType, EMPTY_STRING_ARRAY, EMPTY_STRING_ARRAY);", "+}", "-\treturn new String(createMethodSignature(parameters, returnType.toCharArray()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0d40e50d0bb476e5f2a5e1eed4f3ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected IAnnotation enterAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation annotation, AnnotatableInfo parentInfo, JavaElement parentHandle)", "signatureAfterChange": " protected IAnnotation enterAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation annotation, AnnotatableInfo parentInfo, JavaElement parentHandle)", "diff": ["-\tAnnotation handle = new Annotation(parentHandle, nameString); //NB: occurenceCount is computed in resolveDuplicates", "+\tAnnotation handle = createAnnotation(parentHandle, nameString); //NB: occurenceCount is computed in resolveDuplicates", "-\t\tIMemberValuePair[] members = new IMemberValuePair[membersLength];", "-\t\tfor (int j = 0; j < membersLength; j++) {", "-\t\t\tmembers[j] = getMemberValuePair(memberValuePairs[j]);", "-\t\t}", "-\t\tinfo.members = members;", "+\t\tinfo.members = getMemberValuePairs(memberValuePairs);"]}], "num": 64676}