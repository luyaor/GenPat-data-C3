{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "370517595bab554d00db943c20c0a6f3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28339a634de29b004e4e3f662b0f697e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate JavaElement getUnresolvedJavaElement()", "signatureAfterChange": "  \tprivate JavaElement getUnresolvedJavaElement()", "diff": ["-\t\t\t// field", "-\t\t\tFieldBinding fieldBinding = (FieldBinding) this.binding;", "-\t\t\tif (fieldBinding.declaringClass == null) return null; // arraylength", "-\t\t\tIType declaringType = (IType) getDeclaringClass().getJavaElement();", "-\t\t\tif (declaringType == null) return null;", "-\t\t\treturn (JavaElement) declaringType.getField(getName());", "+\t\t\tif (this.resolver instanceof DefaultBindingResolver) {", "+\t\t\t\tDefaultBindingResolver defaultBindingResolver = (DefaultBindingResolver) this.resolver;", "+\t\t\t\treturn Util.getUnresolvedJavaElement(", "+\t\t\t\t\t\t(FieldBinding) this.binding,", "+\t\t\t\t\t\tdefaultBindingResolver.workingCopyOwner,", "+\t\t\t\t\t\tdefaultBindingResolver.getBindingsToNodesMap());", "+\t\t\t} else {", "+\t\t\t\treturn Util.getUnresolvedJavaElement((FieldBinding) this.binding, null, null);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b1c6cc14b583ea27eb1a789227954eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "2b5adfd5bdf5a370e30eef7cf60813025897bdd3", "commitAfterChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "diff": ["- protected void decodeIndexEntry(IEntryResult entryResult){", "-", "+protected void decodeIndexEntry(IEntryResult entryResult){", "-\tdecodedSuperSimpleName = CharOperation.subarray(word, slash+1, slash = CharOperation.indexOf(SEPARATOR, word, slash+1));", "+\tthis.decodedSuperSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "-\tslash = CharOperation.indexOf(SEPARATOR, word, slash+1);", "-\tif (slash == oldSlash+1){ // could not have been known at index time", "-\t\tdecodedSuperQualification = null;", "-\t} else {", "-\t\tdecodedSuperQualification = CharOperation.subarray(word, oldSlash+1, slash);", "-\t}", "-\tdecodedSuperClassOrInterface = word[slash+1];", "+\tslash = CharOperation.indexOf(SEPARATOR, word, slash + 1);", "+\tthis.decodedSuperQualification = (slash == oldSlash + 1)", "+\t\t? null // could not have been known at index time", "+\t\t: CharOperation.subarray(word, oldSlash + 1, slash);", "+\tthis.decodedSuperClassOrInterface = word[slash + 1];", "-\tdecodedSimpleName = CharOperation.subarray(word, slash+1, slash = CharOperation.indexOf(SEPARATOR, word, slash+1));", "+\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "-\tslash = CharOperation.indexOf(SEPARATOR, word, slash+1);", "-\tif (slash == oldSlash+1){ // could not have been known at index time", "-\t\tdecodedEnclosingTypeName = null;", "+\tslash = CharOperation.indexOf(SEPARATOR, word, slash + 1);", "+\tif (slash == oldSlash + 1) { // could not have been known at index time", "+\t\tthis.decodedEnclosingTypeName = null;", "-\t\tif (slash == oldSlash+2 && word[oldSlash+1] == ONE_ZERO[0]) {", "-\t\t\tdecodedEnclosingTypeName = ONE_ZERO;", "-\t\t} else {", "-\t\t\tdecodedEnclosingTypeName = CharOperation.subarray(word, oldSlash+1, slash);", "-\t\t}", "+\t\tthis.decodedEnclosingTypeName = (slash == oldSlash + 2 && word[oldSlash + 1] == ONE_ZERO[0])", "+\t\t\t? ONE_ZERO", "+\t\t\t: CharOperation.subarray(word, oldSlash + 1, slash);", "-\tslash = CharOperation.indexOf(SEPARATOR, word, slash+1);", "-\tif (slash == oldSlash+1){ // could not have been known at index time", "-\t\tdecodedQualification = null;", "-\t} else {", "-\t\tdecodedQualification = CharOperation.subarray(word, oldSlash+1, slash);", "-\t}", "-\t", "-\tdecodedClassOrInterface = word[slash+1];", "-\tdecodedModifiers = word[slash+2]; // implicit cast to int type", "+\tslash = CharOperation.indexOf(SEPARATOR, word, slash + 1);", "+\tthis.decodedQualification = (slash == oldSlash + 1)", "+\t\t? null // could not have been known at index time", "+\t\t: CharOperation.subarray(word, oldSlash + 1, slash);", "+\tthis.decodedClassOrInterface = word[slash + 1];", "+\tthis.decodedModifiers = word[slash + 2]; // implicit cast to int type"]}], "num": 10736}