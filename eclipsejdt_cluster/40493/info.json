{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ade4df62b50b506521a09e49af33b4d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14f5360647c639e70019dc71ef829e64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic ParameterizedTypeBinding getParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, ReferenceBinding enclosingType, AnnotationBinding [] annotations)", "signatureAfterChange": "  \tpublic ParameterizedTypeBinding getParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, ReferenceBinding enclosingType, AnnotationBinding [] annotations)", "diff": ["-\t\t   type references in source code. Probably need similar treatment for raw types and wildcards ?", "+\t\t   type references in source code.", "-\t\t\t", "+\t\t// generic type is expected to come in unannotated, if it came in with any misattributed annotations, they have been duly re-attributed and it is unannotated now.\t", "+\t\t", "-\t\tTypeBinding[] cachedInfo = (TypeBinding[]) this.annotatedTypes.get(genericType);", "+\t\tTypeBinding keyType = getUnannotatedType(genericType);", "+\t\tTypeBinding[] cachedInfo = (TypeBinding[]) this.annotatedTypes.get(keyType); // promotes better instance sharing", "-\t\t\tthis.annotatedTypes.put(genericType, cachedInfo = new TypeBinding[4]);", "+\t\t\tthis.annotatedTypes.put(keyType, cachedInfo = new TypeBinding[4]);", "-\t\t\tthis.annotatedTypes.put(genericType, cachedInfo);", "+\t\t\tthis.annotatedTypes.put(keyType, cachedInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171d2e34571a6ac723655b567f301940", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate ICompilationUnit getCachedWorkingCopy( ICompilationUnit parentCompilationUnit, String typeName )", "signatureAfterChange": " \tprivate ICompilationUnit getCachedWorkingCopy( ICompilationUnit parentCompilationUnit, String typeName ) \t\tthrows CoreException", "diff": ["+\t\tthrows CoreException", "-\t\tICompilationUnit workingCopy = (ICompilationUnit) _typeName2WorkingCopy.get( typeName );", "+\t\tIFile derivedFile = getIFileForTypeName( typeName );", "+\t\tICompilationUnit workingCopy = (ICompilationUnit) _generatedFile2WorkingCopy.get( derivedFile );", "-\t\t\tupdateMaps( typeName, parentCompilationUnit, workingCopy );", "+\t\t\taddEntryToWorkingCopyMaps( parentCompilationUnit, workingCopy );"]}], "num": 40493}