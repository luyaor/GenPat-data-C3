{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "489a3b22c09c6af4cedcf6c0166c492d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0403df5adc65684fc45eb768162fff52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "2adf5e7af76ae05ae6976726576af8c12845ba88", "commitAfterChange": "f8ad0d5bfc02915772c8bb705662d0256beab7ec", "methodNumberBeforeChange": 298, "methodNumberAfterChange": 265, "signatureBeforeChange": " protected void consumeInterfaceMethodDefault()", "signatureAfterChange": " protected void consumePushCombineModifiers()", "diff": ["+protected void consumePushCombineModifiers() {", "+\t// ModifiersWithDefault ::= Modifiersopt 'default' Modifiersopt'", "+\t// int stack on entry : ... Modifiers, ModifiersSourceStart, defaultSourceStart, defaultSourceEnd, Modifiers', Modifiers'SourceStart <<--- intPtr", "+\t// int stack on exit : ... combinedModifiers, combinedModifiersSourceStart <<--- intPtr", "+\t", "+\tthis.intPtr--; // pop modifiers'SourceStart, real location is with earlier block", "+\tint newModifiers = this.intStack[this.intPtr--] | ExtraCompilerModifiers.AccDefaultMethod; // pop modifiers", "+\tthis.intPtr -= 2; // pop location of 'default' keyword", "+\t", "+\tif ((this.intStack[this.intPtr - 1] & newModifiers) != 0) { // duplicate modifier(s) ?", "+\t\tnewModifiers |= ExtraCompilerModifiers.AccAlternateModifierProblem;", "+\t}", "+\tthis.intStack[this.intPtr - 1] |= newModifiers; // merge them in place", "+\t// Also fix number of annotations-modifiers:", "+\tthis.expressionLengthStack[this.expressionLengthPtr - 1] += this.expressionLengthStack[this.expressionLengthPtr--];", "+\tif (this.currentElement != null && this.annotationRecoveryActivated) {", "+\t\tthis.currentElement.addModifier(newModifiers, this.intStack[this.intPtr]);", "+\t}", "+}", "-}", "-protected void consumeInterfaceMethodDefault() {", "-\t// PushDefault ::= $empty", "-\t// Shift method co-ordinates past the default keyword.", "-\tAbstractMethodDeclaration md = (AbstractMethodDeclaration) this.astStack[this.astPtr];", "-\tmd.bodyStart = this.scanner.currentPosition;", "-\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57bd3d0d432d6296ebb2b81f57dc1348", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 154, "signatureBeforeChange": " protected void consumeFormalParameter()", "signatureAfterChange": " protected void consumeFormalParameter(boolean isVarArgs)", "diff": ["-protected void consumeFormalParameter() {", "+protected void consumeFormalParameter(boolean isVarArgs) {", "-\tastStack : ", "-\tidentifierStack : type identifier", "-\tintStack : dim dim", "+\tthis.astStack : ", "+\tthis.identifierStack : type identifier", "+\tthis.intStack : dim dim", "-\tastStack : Argument", "-\tidentifierStack :  ", "-\tintStack :  ", "+\tthis.astStack : Argument", "+\tthis.identifierStack :  ", "+\tthis.intStack :  ", "-\t\t\tthis.intStack[this.intPtr + 1] & ~AccDeprecated); // modifiers", "+\t\t\tthis.intStack[this.intPtr + 1] & ~AccDeprecated,", "+\t\t\tisVarArgs); // modifiers", "+\t// consume annotations", "+\tint length;", "+\tif ((length = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.expressionStack, ", "+\t\t\t(this.expressionPtr -= length) + 1, ", "+\t\t\targ.annotations = new Annotation[length], ", "+\t\t\t0, ", "+\t\t\tlength); ", "+\t}", "-\t/* if incomplete method header, listLength counter will not have been reset,", "+\t/* if incomplete method header, this.listLength counter will not have been reset,", "+\t", "+\tif(isVarArgs &&", "+\t\t\toptions.sourceLevel < ClassFileConstants.JDK1_5 &&", "+\t\t\tthis.lastErrorEndPositionBeforeRecovery < this.scanner.currentPosition) {", "+\t\tthis.problemReporter().invalidUsageOfVarargs(arg);", "+\t}"]}], "num": 38660}