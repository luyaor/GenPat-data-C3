{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6b6eadd644e28a8e121919922a8caa2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "794d31333d6a65c27d48ef80d3a0738f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  protected void copyExtraResourcesBack(ClasspathMultiDirectory sourceLocation, final boolean deletedAll) throws CoreException", "signatureAfterChange": "  protected void copyExtraResourcesBack(ClasspathMultiDirectory sourceLocation, final boolean deletedAll) throws CoreException", "diff": ["+\tfinal char[][] inclusionPatterns = sourceLocation.inclusionPatterns;", "-\t\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "-\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\tif (exclusionPatterns != null || inclusionPatterns != null)", "+\t\t\t\t\t\t\tif (Util.isExcluded(resource, inclusionPatterns, exclusionPatterns))", "+\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "-\t\t\t\t\t\t\treturn false;", "-", "+\t\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, inclusionPatterns, exclusionPatterns))", "+\t\t\t\t\t        return inclusionPatterns != null; // need to go further only if inclusionPatterns are set"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d95b47efaa758aef95799c8b07abd6b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "5121c9e56fe5f00b9263f63c8225d577bc580b73", "commitAfterChange": "ff119e6fb7d599c80d7b7bf4e0ea59e3938447d5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException", "signatureAfterChange": "  protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException", "diff": ["+\t\tfinal boolean isAlsoProject = sourceLocation.sourceFolder.equals(javaBuilder.currentProject);", "-\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "-\t\t\t\t\t\t\tif (resource == null)", "-\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "-\t\t\t\t\t\t\tsourceFiles.add(new SourceFile((IFile) resource, sourceLocation, encoding));", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn false;", "+\t\t\t\t\tswitch(proxy.getType()) {", "+\t\t\t\t\t\tcase IResource.FILE :", "+\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\tif (resource == null)", "+\t\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "+\t\t\t\t\t\t\t\tsourceFiles.add(new SourceFile((IFile) resource, sourceLocation, encoding));", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\tcase IResource.FOLDER :", "+\t\t\t\t\t\t\tif (isAlsoProject && isExcludedFromProject(proxy.requestFullPath())) return false;"]}], "num": 44165}