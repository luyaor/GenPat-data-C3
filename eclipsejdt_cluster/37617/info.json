{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5472011fd0e4d05a4ff123afabf0ef8f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d5386bf2ed6f0c361ddbdfe7a4945fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tClassScope classScope)", "signatureAfterChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tClassScope classScope)", "diff": ["+\t\t", "+\t\t\tif (this.annotations != null) {", "+\t\t\t\tint annotationsLength = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "+\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t}", "+\t\t\tif (this.typeParameters != null) {", "+\t\t\t\tint typeParametersLength = this.typeParameters.length;", "+\t\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "+\t\t\t\t\tthis.typeParameters[i].traverse(visitor, scope);", "+\t\t\t\t}", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0a8ad2df4f426d53525d33273aabdb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tClassScope classScope)", "signatureAfterChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tClassScope classScope)", "diff": ["+\t\t\tif (this.annotations != null) {", "+\t\t\t\tint annotationsLength = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "+\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t}", "+\t\t\tif (this.typeParameters != null) {", "+\t\t\t\tint typeParametersLength = this.typeParameters.length;", "+\t\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "+\t\t\t\t\tthis.typeParameters[i].traverse(visitor, scope);", "+\t\t\t\t}", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c550343486117c40a165a96b8bcdc01f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "signatureAfterChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "diff": ["+\t\tif (!this.editsEnabled) {", "+\t\t\tif (this.previousDisabledEdit != null && this.previousDisabledEdit.offset == offset) {", "+\t\t\t\treplacement = this.previousDisabledEdit.replacement;", "+\t\t\t}", "+\t\t\tthis.previousDisabledEdit = null;", "+\t\t\tif (replacement.indexOf(this.lineSeparator) >= 0) {", "+\t\t\t\tif (length == 0 || printNewLinesCharacters(offset, length)) {", "+\t\t\t\t\tthis.previousDisabledEdit = new OptimizedReplaceEdit(offset, length, replacement);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}"]}], "num": 37617}