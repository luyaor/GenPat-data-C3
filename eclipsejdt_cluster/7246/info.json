{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34dd0adc57b64ec036732ab34a1c309e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5790d4dcb0e1b90f59b59b9cf61ad0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMType.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void appendMemberDeclarationContents(CharArrayBuffer  buffer)", "signatureAfterChange": " protected void appendMemberDeclarationContents(CharArrayBuffer  buffer)", "diff": ["+\t\t\t} else if (fImplementsRange[0] > 0) {", "+\t\t\t\tbuffer.append(fDocument, fSuperclassRange[1] + 1, fImplementsRange[0] - fSuperclassRange[1] - 1);", "+\t\t\t\tbuffer.append(fDocument, fInterfacesRange[1] + 1, fOpenBodyRange[0] - fInterfacesRange[1] - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca3bdc6f968de828a0a6a1dbe7c0117a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "4e81456d91d85b9a795956ecc38cb1d7061bd32d", "commitAfterChange": "c221b518b7348e54695e056da6261b43107500f5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected void attachOrphanCompletionNode()", "signatureAfterChange": "\r protected void attachOrphanCompletionNode()", "diff": ["-\t\t\t\t\t//fieldDeclaration.modifiersSourceStart = intStack[intPtr-1];\r", "-\t\t\t\t\t//fieldDeclaration.modifiers = intStack[intPtr-2];\r", "+\r", "+\t\t\t\t\t// retrieve available modifiers if any\r", "+\t\t\t\t\tif (intPtr >= 2 && intStack[intPtr-1] == this.lastModifiersStart && intStack[intPtr-2] == this.lastModifiers){\r", "+\t\t\t\t\t\tfieldDeclaration.modifiersSourceStart = intStack[intPtr-1];\r", "+\t\t\t\t\t\tfieldDeclaration.modifiers = intStack[intPtr-2];\r", "+\t\t\t\t\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5695288140d6dd3e3b8e9976cd7973c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "78e007c83e9ad797ad0771b0f9dd7e2a02f61c63", "commitAfterChange": "1026ba61d7718642ee59052885b3bbf994431b1f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate static char[][] suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner)", "signatureAfterChange": " \t \tprivate static char[][] suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner)", "diff": ["+\t\t\t\t} else if(tempName[length-1] == 'y') {", "+\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "+\t\t\t\t\ttempName[length-1] = 'i';", "+\t\t\t\t\ttempName[length] = 'e';", "+\t\t\t\t\ttempName[length+1] = 's';"]}], "num": 7246}