{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c64bb4ce4b161812d7aadb115a24628", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043396a8bf96c40b0e361d9245efa576", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \tpublic void reportMethodDeclaration(\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tchar[][] definingTypeNames,\r \t\tint accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportMethodDeclaration(\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tIJavaElement parent,\r \t\tint accuracy)\r \t\tthrows CoreException", "diff": ["-\t\tchar[][] definingTypeNames,\r", "+\t\tIJavaElement parent,\r", "-\t\t// create method handle\r", "-\t\tIMethod method = this.createMethodHandle(methodDeclaration, definingTypeNames);\r", "-\t\tif (method == null) return;\r", "+\t\tIJavaElement enclosingElement;\r", "+\t\tif (parent instanceof IType) {\r", "+\t\t\t// create method handle\r", "+\t\t\tenclosingElement = this.createMethodHandle(methodDeclaration, (IType)parent);\r", "+\t\t\tif (enclosingElement == null) return;\r", "+\t\t} else {\r", "+\t\t\tenclosingElement = parent;\r", "+\t\t}\r", "-\t\tthis.report(nameSourceStart, nameSourceEnd, method, accuracy);\r", "+\t\tthis.report(nameSourceStart, nameSourceEnd, enclosingElement, accuracy);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "463dfd0d198d973e864de2db2448e078", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \tpublic void reportReference(\r \t\tAstNode reference,\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tchar[][] definingTypeNames,\r \t\tint accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportReference(\r \t\tAstNode reference,\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tIJavaElement parent,\r \t\tint accuracy)\r \t\tthrows CoreException", "diff": ["-\t\tchar[][] definingTypeNames,\r", "+\t\tIJavaElement parent,\r", "-\t\t// create defining method handle\r", "-\t\tIMethod method = this.createMethodHandle(methodDeclaration, definingTypeNames);\r", "-\t\tif (method == null) return; // case of a match found in a type other than the current class file\r", "+\t\tIJavaElement enclosingElement;\r", "+\t\tif (parent instanceof IType) {\r", "+\t\t\t// create defining method handle\r", "+\t\t\tenclosingElement = this.createMethodHandle(methodDeclaration, (IType)parent);\r", "+\t\t\tif (enclosingElement == null) return; // case of a match found in a type other than the current class file\r", "+\t\t} else {\r", "+\t\t\tenclosingElement = parent;\r", "+\t\t}\r", "-\t\t\tthis.pattern.matchReportReference(reference, method, accuracy, this);\r", "+\t\t\tthis.pattern.matchReportReference(reference, enclosingElement, accuracy, this);\r", "-\t\t\t\t\tmethod,\r", "+\t\t\t\t\tenclosingElement,\r", "-\t\t\t\tthis.report(reference.sourceStart, reference.sourceEnd, method, accuracy);\r", "+\t\t\t\tthis.report(reference.sourceStart, reference.sourceEnd, enclosingElement, accuracy);\r"]}], "num": 23844}