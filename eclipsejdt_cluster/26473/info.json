{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4211cb9a59b3d6fa41d6ec80888b21f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016938cf906ad0cfc164efd378c9e2eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "signatureAfterChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "diff": ["-\t\tboolean polyExpressionSeen = false;", "-\t\t\t\t\tpolyExpressionSeen = true;", "+\t\t\t\t\tthis.innersNeedUpdate = true;", "-\t\t\tthis.binding = findConstructorBinding(scope, this, allocationType, argumentTypes, polyExpressionSeen);", "+\t\t\tthis.binding = findConstructorBinding(scope, this, allocationType, argumentTypes);", "-\t\tMethodBinding inheritedBinding = findConstructorBinding(scope, this, anonymousSuperclass, argumentTypes, polyExpressionSeen);", "+\t\tMethodBinding inheritedBinding = findConstructorBinding(scope, this, anonymousSuperclass, argumentTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a81c8d31d3ed56500f722328efdc63f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "9d104d945debc84d285485abce2b81da74ac98c5", "commitAfterChange": "55b8138a08d89b11e13e7b2e4131608d674ff549", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tboolean polyExpressionSeen = false;", "+\tboolean argumentsNeedUpdate = false;", "-\t\t\tif (sourceLevel >= ClassFileConstants.JDK1_8 && argument.isPolyExpression())", "-\t\t\t\tpolyExpressionSeen = true;", "+\t\t\tif (sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\t\t\tif (argument.isPolyExpression()", "+\t\t\t\t\t|| (argument instanceof Invocation && ((Invocation)argument).usesInference()))", "+\t\t\t\t\targumentsNeedUpdate = true;", "+\t\t\t}", "-\tfindMethodBinding(scope, argumentTypes, polyExpressionSeen);", "+\tfindMethodBinding(scope, argumentTypes, argumentsNeedUpdate);"]}], "num": 26473}