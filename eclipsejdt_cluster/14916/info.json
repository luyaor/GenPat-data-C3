{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "790aaae473a3a753f63d895a86327aee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6571f58c2737304171025ba6518af80a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic String getResults()", "signatureAfterChange": " \tpublic String getResults()", "diff": ["+\t */", "-\t\tif(proposals.size() == 0)", "-\t\t\treturn \"\";", "-\t\t", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tif(proposals.size() == 1) {", "-\t\t\tappendProposal((CompletionProposal)proposals.elementAt(0), buffer);", "-\t\t} else {", "-\t\t\tCompletionProposal[] sortedProposals = (CompletionProposal[])proposals.toArray(new CompletionProposal[proposals.size()]);", "-\t\t\t", "-\t\t\tsortedProposals = quickSort(sortedProposals, 0, sortedProposals.length - 1);", "-\t\t\t", "-\t\t\tfor(int i = 0; i < sortedProposals.length; i++) {", "-\t\t\t\tif(i > 0) ", "-\t\t\t\t\tbuffer.append('\\n');", "-\t\t\t\tappendProposal(sortedProposals[i], buffer);", "+\t\tif(this.proposalsPtr < 0) return \"\";", "+\t\tquickSort(this.proposals, 0, this.proposalsPtr);", "+\t\treturn getResultsWithoutSorting();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccb5232b9132030e6c4f89c0fd6dbf22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "542ce5451500fe1306b92aaa9a7c04d8d83f7f3f", "commitAfterChange": "9cbf7e62288f060b33b2dc1c1d579dae84747012", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprotected StringBuffer printProposal(CompletionProposal proposal)", "signatureAfterChange": " \t \tprotected StringBuffer printProposal(CompletionProposal proposal, int tab, StringBuffer buffer)", "diff": ["-\t\tStringBuffer buffer = new StringBuffer(getElementName(proposal));", "+\t", "+\tprotected StringBuffer printProposal(CompletionProposal proposal, int tab, StringBuffer buffer) {", "+\t\tfor (int i = 0; i < tab; i++) {", "+\t\t\tbuffer.append(\"   \"); //$NON-NLS-1$", "+\t\t}", "+\t\tbuffer.append(getElementName(proposal));", "+\t\tif(this.showMissingTypes) {", "+\t\t\tCompletionProposal[] requiredProposals = proposal.getRequiredProposals();", "+\t\t\tif (requiredProposals != null) {", "+\t\t\t\tint length = requiredProposals.length;", "+\t\t\t\tSystem.arraycopy(requiredProposals, 0, requiredProposals = new CompletionProposal[length], 0, length);", "+\t\t\t\tquickSort(requiredProposals, 0, length - 1);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tbuffer.append('\\n');", "+\t\t\t\t\tprintProposal(requiredProposals[i], tab + 1, buffer);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 14916}