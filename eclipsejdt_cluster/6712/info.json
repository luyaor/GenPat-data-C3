{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b400055341af2eeddb160f78233e93c", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4651e35e1e259f0283455805ca95ccdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": "\r protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["+ */\r", "+protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "+\tif (type == null) return false; \r", "+\treturn \r", "+\t\tthis.matchesType(\r", "+\t\t\tsimpleNamePattern, \r", "+\t\t\tqualificationPattern, \r", "+\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "+\t\t\t\ttype.qualifiedSourceName() : \r", "+\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.')\r", "+\t\t);\r", "+}\r", "- */\r", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "-\tif (type == null) return INACCURATE_MATCH;\r", "-\tif (this.matchesType(\r", "-\t\t\tsimpleNamePattern, \r", "-\t\t\tqualificationPattern, \r", "-\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "-\t\t\t\ttype.qualifiedSourceName() : \r", "-\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.'))) {\r", "-\t\treturn ACCURATE_MATCH;\r", "-\t} else {\r", "-\t\treturn IMPOSSIBLE_MATCH;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7cb19cf157db79068a7a509272785a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": "\r protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["+ */\r", "+protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "+\tif (type == null) return false; \r", "+\treturn \r", "+\t\tthis.matchesType(\r", "+\t\t\tsimpleNamePattern, \r", "+\t\t\tqualificationPattern, \r", "+\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "+\t\t\t\ttype.qualifiedSourceName() : \r", "+\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.')\r", "+\t\t);\r", "+}\r", "- */\r", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "-\tif (type == null) return INACCURATE_MATCH;\r", "-\tif (this.matchesType(\r", "-\t\t\tsimpleNamePattern, \r", "-\t\t\tqualificationPattern, \r", "-\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "-\t\t\t\ttype.qualifiedSourceName() : \r", "-\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.'))) {\r", "-\t\treturn ACCURATE_MATCH;\r", "-\t} else {\r", "-\t\treturn IMPOSSIBLE_MATCH;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7b6237bf7259b91aa4c6a420ea887fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": "\r protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["+ */\r", "+protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "+\tif (type == null) return false; \r", "+\treturn \r", "+\t\tthis.matchesType(\r", "+\t\t\tsimpleNamePattern, \r", "+\t\t\tqualificationPattern, \r", "+\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "+\t\t\t\ttype.qualifiedSourceName() : \r", "+\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.')\r", "+\t\t);\r", "+}\r", "- */\r", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "-\tif (type == null) return INACCURATE_MATCH;\r", "-\tif (this.matchesType(\r", "-\t\t\tsimpleNamePattern, \r", "-\t\t\tqualificationPattern, \r", "-\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "-\t\t\t\ttype.qualifiedSourceName() : \r", "-\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.'))) {\r", "-\t\treturn ACCURATE_MATCH;\r", "-\t} else {\r", "-\t\treturn IMPOSSIBLE_MATCH;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99cd07c299f11675cc6c9368047c936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": "\r protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["+ */\r", "+protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "+\tif (type == null) return false; \r", "+\treturn \r", "+\t\tthis.matchesType(\r", "+\t\t\tsimpleNamePattern, \r", "+\t\t\tqualificationPattern, \r", "+\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "+\t\t\t\ttype.qualifiedSourceName() : \r", "+\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.')\r", "+\t\t);\r", "+}\r", "- */\r", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "-\tif (type == null) return INACCURATE_MATCH;\r", "-\tif (this.matchesType(\r", "-\t\t\tsimpleNamePattern, \r", "-\t\t\tqualificationPattern, \r", "-\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "-\t\t\t\ttype.qualifiedSourceName() : \r", "-\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.'))) {\r", "-\t\treturn ACCURATE_MATCH;\r", "-\t} else {\r", "-\t\treturn IMPOSSIBLE_MATCH;\r"]}], "num": 6712}