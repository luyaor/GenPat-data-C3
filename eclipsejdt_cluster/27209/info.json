{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb3a6b902a2e8239b77414de84cc7d16", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358b2fe3c799f6fd1ab26eeb9109350c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblemFactory.java", "commitBeforeChange": "749aa1c27be4903ff44650cbac7fb5e2a22e8990", "commitAfterChange": "500f73122f66aacb24affb61ea382198072d398b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public final String getLocalizedMessage(int id, int elaborationId, String[] problemArguments)", "signatureAfterChange": " public final String getLocalizedMessage(int id, int elaborationId, String[] problemArguments)", "diff": ["-\tString message = (String) this.messageTemplates.get(keyFromID(id & IProblem.IgnoreCategoriesMask));", "-\tif (message == null) {", "+\tString rawMessage = (String) this.messageTemplates.get(keyFromID(id & IProblem.IgnoreCategoriesMask));", "+\tif (rawMessage == null) {", "+\tchar[] message = rawMessage.toCharArray();", "-\t\t// make the substitution. String.replaceAll(String,String) cannot be used since it is", "-\t\t// defined only in 1.4", "-\t\tmessage = new String(CharOperation.replace(", "-\t\t\t\tmessage.toCharArray(),", "-\t\t\t\tFIRST_ARGUMENT,", "-\t\t\t\telaboration.toCharArray()));", "+\t\tmessage = CharOperation.replace(message, FIRST_ARGUMENT, elaboration.toCharArray());", "-\tchar[] messageWithNoDoubleQuotes =", "-\t\tCharOperation.replace(message.toCharArray(), DOUBLE_QUOTES, SINGLE_QUOTE);", "+\tmessage = CharOperation.replace(message, DOUBLE_QUOTES, SINGLE_QUOTE);", "-\tif (problemArguments == null) return new String(messageWithNoDoubleQuotes);", "+\tif (problemArguments == null) {", "+\t\treturn new String(message);", "+\t}", "-\tint length = messageWithNoDoubleQuotes.length;", "+\tint length = message.length;", "-\t\tif ((end = CharOperation.indexOf('{', messageWithNoDoubleQuotes, start)) > -1) {", "+\t\tif ((end = CharOperation.indexOf('{', message, start)) > -1) {", "-\t\t\toutput.append(messageWithNoDoubleQuotes, start, end - start);", "-\t\t\tif ((start = CharOperation.indexOf('}', messageWithNoDoubleQuotes, end + 1)) > -1) {", "-\t\t\t\tint index = -1;", "-\t\t\t\tString argId = new String(messageWithNoDoubleQuotes, end + 1, start - end - 1);", "+\t\t\toutput.append(message, start, end - start);", "+\t\t\tif ((start = CharOperation.indexOf('}', message, end + 1)) > -1) {", "-\t\t\t\t\tindex = Integer.parseInt(argId);", "-\t\t\t\t\toutput.append(problemArguments[index]);", "+\t\t\t\t\toutput.append(problemArguments[CharOperation.parseInt(message, end + 1, start - end - 1)]);", "-\t\t\t\t\toutput.append(messageWithNoDoubleQuotes, end + 1, start - end);", "+\t\t\t\t\toutput.append(message, end + 1, start - end);", "-\t\t\t\t\t\t+ message", "+\t\t\t\t\t\t+ new String(message)", "-\t\t\t\toutput.append(messageWithNoDoubleQuotes, end, length);", "+\t\t\t\toutput.append(message, end, length);", "-\t\t\tif (output == null) return new String(messageWithNoDoubleQuotes);", "-\t\t\toutput.append(messageWithNoDoubleQuotes, start, length - start);", "+\t\t\tif (output == null) {", "+\t\t\t\treturn new String(message);", "+\t\t\t}", "+\t\t\toutput.append(message, start, length - start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3cff761073c10df5e9d89ad3d20ce85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblemFactory.java", "commitBeforeChange": "f3797939fa5164cd62a3ae51074dba1ccea759ff", "commitAfterChange": "0df341e86846b5d019d9adfde0716c02f828f524", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " public final String getLocalizedMessage(int id, String[] problemArguments)", "signatureAfterChange": " public final String getLocalizedMessage(int id, String[] problemArguments)", "diff": ["-\tStringBuffer output = new StringBuffer(80);", "-\tif ((id & IProblem.Javadoc) != 0) {", "-\t\toutput.append(messageTemplates[IProblem.JavadocMessagePrefix & IProblem.IgnoreCategoriesMask]);", "-\t}", "-\tString message = messageTemplates[id & IProblem.IgnoreCategoriesMask]; ", "+\tString message = (String) this.messageTemplates.get(keyFromID(id & IProblem.IgnoreCategoriesMask)); ", "-\tmessage = new String(messageWithNoDoubleQuotes);", "-\tint length = message.length();", "-\tint start = -1, end = length;", "+\tif (problemArguments == null) return new String(messageWithNoDoubleQuotes);", "+", "+\tint length = messageWithNoDoubleQuotes.length;", "+\tint start = 0;", "+\tint end = length;", "+\tStringBuffer output = null;", "+\tif ((id & IProblem.Javadoc) != 0) {", "+\t\tif (output == null) output = new StringBuffer(10+length+problemArguments.length*20);", "+\t\toutput.append((String) this.messageTemplates.get(keyFromID(IProblem.JavadocMessagePrefix & IProblem.IgnoreCategoriesMask)));", "+\t}", "-\t\tif ((end = message.indexOf('{', start)) > -1) {", "-\t\t\toutput.append(message.substring(start + 1, end));", "-\t\t\tif ((start = message.indexOf('}', end)) > -1) {", "+\t\tif ((end = CharOperation.indexOf('{', messageWithNoDoubleQuotes, start)) > -1) {", "+\t\t\tif (output == null) output = new StringBuffer(length+problemArguments.length*20);", "+\t\t\toutput.append(messageWithNoDoubleQuotes, start, end - start);", "+\t\t\tif ((start = CharOperation.indexOf('}', messageWithNoDoubleQuotes, end + 1)) > -1) {", "+\t\t\t\tint index = -1;", "+\t\t\t\tString argId = new String(messageWithNoDoubleQuotes, end + 1, start - end - 1);", "-\t\t\t\t\toutput.append(", "-\t\t\t\t\t\tproblemArguments[Integer.parseInt(message.substring(end + 1, start))]); ", "+\t\t\t\t\tindex = Integer.parseInt(argId);", "+\t\t\t\t\toutput.append(problemArguments[index]);", "-\t\t\t\t\toutput.append(message.substring(end + 1, start + 1));", "+\t\t\t\t\toutput.append(messageWithNoDoubleQuotes, end + 1, start - end);", "+\t\t\t\tstart++;", "-\t\t\t\toutput.append(message.substring(end, length));", "+\t\t\t\toutput.append(messageWithNoDoubleQuotes, end, length);", "-\t\t\toutput.append(message.substring(start + 1, length));", "+\t\t\tif (output == null) return new String(messageWithNoDoubleQuotes);", "+\t\t\toutput.append(messageWithNoDoubleQuotes, start, length - start);", "+"]}], "num": 27209}