{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38306ece8d4105fded53659d2c484353", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae63580b31841b12e87fbbf7dabae9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "4d5ca8a02167bbefc92469b1dbb1f1e04260a45e", "commitAfterChange": "76edcbed1c0fde7a71f27c4d41397b66a882f551", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, boolean[] isInherited, int idx)", "signatureAfterChange": " boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, boolean[] isInherited, int idx)", "diff": ["-\t\tif (isParameterSubsignature(specific, general)) {", "+\t\tif (specific.declaringClass.isCompatibleWith(general.declaringClass) && isMethodSubsignature(specific, general)) {", "-\t\t\tisOverridden[idx] |= specific.declaringClass.isCompatibleWith(general.declaringClass);", "+\t\t\tisOverridden[idx] = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49df9d61257a7276d138e938108c523e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e2e97eb1ed318448b72d60aca6f0daa8c5b48408", "commitAfterChange": "ce089180323dc4b5ef74d43ea0b4475c385fcd97", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, int idx)", "signatureAfterChange": " boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, int idx)", "diff": ["-\t} else if (specificIsInterface == generalIsInterface) { ", "-\t\tif (isParameterSubsignature(specific, general)) {", "+\t} else if (specificIsInterface == generalIsInterface) {", "+\t\tif (specific.declaringClass.isCompatibleWith(general.declaringClass) && isMethodSubsignature(specific, general)) {", "-\t\t\tisOverridden[idx] = specific.declaringClass.isCompatibleWith(general.declaringClass);", "+\t\t\tisOverridden[idx] = true;"]}], "num": 56842}