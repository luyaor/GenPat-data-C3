{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98afd8e3a60516fe1107233b416f1dc5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc7a195ce0d4dfe51ccd4ddddc78c6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public String[] getExceptionTypes() throws JavaModelException", "signatureAfterChange": " public String[] getExceptionTypes() throws JavaModelException", "diff": ["-\t\tchar[][] eTypeNames = info.getExceptionTypeNames();", "-\t\tif (eTypeNames == null || eTypeNames.length == 0) {", "-\t\t\tthis.exceptionTypes = NO_TYPES;", "-\t\t} else {", "-\t\t\teTypeNames = ClassFile.translatedNames(eTypeNames);", "-\t\t\tthis.exceptionTypes = new String[eTypeNames.length];", "-\t\t\tfor (int j = 0, length = eTypeNames.length; j < length; j++) {", "-\t\t\t\t// 1G01HRY: ITPJCORE:WINNT - method.getExceptionType not in correct format", "-\t\t\t\tint nameLength = eTypeNames[j].length;", "-\t\t\t\tchar[] convertedName = new char[nameLength + 2];", "-\t\t\t\tSystem.arraycopy(eTypeNames[j], 0, convertedName, 1, nameLength);", "-\t\t\t\tconvertedName[0] = 'L';", "-\t\t\t\tconvertedName[nameLength + 1] = ';';", "-\t\t\t\tthis.exceptionTypes[j] = new String(convertedName);", "+\t\tchar[] genericSignature = info.getGenericSignature();", "+\t\tif (genericSignature != null) {", "+\t\t\tchar[] dotBasedSignature = CharOperation.replaceOnCopy(genericSignature, '/', '.');", "+\t\t\tthis.exceptionTypes = Signature.getThrownExceptionTypes(new String(dotBasedSignature));", "+\t\t}", "+\t\tif (this.exceptionTypes == null || this.exceptionTypes.length == 0) {", "+\t\t\tchar[][] eTypeNames = info.getExceptionTypeNames();", "+\t\t\tif (eTypeNames == null || eTypeNames.length == 0) {", "+\t\t\t\tthis.exceptionTypes = NO_TYPES;", "+\t\t\t} else {", "+\t\t\t\teTypeNames = ClassFile.translatedNames(eTypeNames);", "+\t\t\t\tthis.exceptionTypes = new String[eTypeNames.length];", "+\t\t\t\tfor (int j = 0, length = eTypeNames.length; j < length; j++) {", "+\t\t\t\t\t// 1G01HRY: ITPJCORE:WINNT - method.getExceptionType not in correct format", "+\t\t\t\t\tint nameLength = eTypeNames[j].length;", "+\t\t\t\t\tchar[] convertedName = new char[nameLength + 2];", "+\t\t\t\t\tSystem.arraycopy(eTypeNames[j], 0, convertedName, 1, nameLength);", "+\t\t\t\t\tconvertedName[0] = 'L';", "+\t\t\t\t\tconvertedName[nameLength + 1] = ';';", "+\t\t\t\t\tthis.exceptionTypes[j] = new String(convertedName);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71377c8401a110fc957b34c38bc10c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "5411e32aaeab6116e881e3fbe3ecd2e1380ba2a6", "commitAfterChange": "809dcc0b94a0ee014d34f856e18c64bec8618f2a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public String getSuperclassTypeSignature() throws JavaModelException", "signatureAfterChange": " public String getSuperclassTypeSignature() throws JavaModelException", "diff": ["-\tchar[] superclassName = info.getSuperclassName();", "-\tif (superclassName == null) {", "-\t\treturn null;", "+\tchar[] genericSignature = info.getGenericSignature();", "+\tif (genericSignature != null) {", "+\t\tint signatureLength = genericSignature.length;", "+\t\t// skip type parameters", "+\t\tint index = 0;", "+\t\tif (genericSignature[0] == '<') {", "+\t\t\tint count = 1;", "+\t\t\twhile (count > 0 && ++index < signatureLength) {", "+\t\t\t\tswitch (genericSignature[index]) {", "+\t\t\t\t\tcase '<': ", "+\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase '>':", "+\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tindex++;", "+\t\t}", "+\t\tint start = index;", "+\t\tindex = Util.scanClassTypeSignature(genericSignature, start) + 1;", "+\t\tchar[] superclassSig = CharOperation.subarray(genericSignature, start, index);", "+\t\treturn new String(ClassFile.translatedName(superclassSig));", "+\t} else {", "+\t\tchar[] superclassName = info.getSuperclassName();", "+\t\tif (superclassName == null) {", "+\t\t\treturn null;", "+\t\t}", "+\t\treturn new String(Signature.createTypeSignature(ClassFile.translatedName(superclassName), true));", "-\treturn new String(Signature.createTypeSignature(ClassFile.translatedName(superclassName), true));"]}], "num": 32479}