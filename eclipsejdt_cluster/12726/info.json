{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39c2ee5a22e8abe30ebcc4022983968d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f022f21a8cbfa1bdd153fa30fc1ff8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "6f6b135c3443a1f802996624e28e3fccc1ffade1", "commitAfterChange": "179d5d1c5c2a0bb83cd907094171a8fb72cf869e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "signatureAfterChange": "\r \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "diff": ["-\t\tif (type == null) {\r", "-\t\t\t// look inside the compilation unit that is being searched currently\r", "-\t\t\t//for a non-public or inner type.\r", "-\t\t\tif (this.unitToLookInside != null) {\r", "-\t\t\t\tif (this.unitToLookInside.getParent().getElementName().equals(packageName)) {\r", "-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\tIType[] allTypes = this.unitToLookInside.getTypes();\r", "-\t\t\t\t\t\tfor (int i = 0; i < allTypes.length; i++) {\r", "-\t\t\t\t\t\t\tif (allTypes[i].getElementName().equals(typeName)) {\r", "-\t\t\t\t\t\t\t\ttype = allTypes[i];\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb76ac995bdf82eb311aa8dc92b3f34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "0c0e9f808d4509f3cefc470c2105f7ba1290fdb7", "commitAfterChange": "87d442c9d1ef66a35b04453c972faa6e201fed9c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic Answer findType( \t\t\tString typeName, \t\t\tString packageName, \t\t\tboolean partialMatch, \t\t\tint acceptFlags, \t\t\tboolean considerSecondaryTypes, \t\t\tboolean waitForIndexes, \t\t\tboolean checkRestrictions, \t\t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic Answer findType( \t\t\tString typeName, \t\t\tString packageName, \t\t\tboolean partialMatch, \t\t\tint acceptFlags, \t\t\tboolean considerSecondaryTypes, \t\t\tboolean waitForIndexes, \t\t\tboolean checkRestrictions, \t\t\tIProgressMonitor monitor)", "diff": ["+\t\tif (type != null) {", "+\t\t\tICompilationUnit unit = type.getCompilationUnit();", "+\t\t\tif (unit != null && unit.isWorkingCopy()) { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=421902", "+\t\t\t\tIType[] types = null;", "+\t\t\t\ttry {", "+\t\t\t\t\ttypes = unit.getTypes();", "+\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t\tboolean typeFound = false;", "+\t\t\t\tfor (int i = 0, typesLength = types == null ? 0 : types.length; i < typesLength; i++) {", "+\t\t\t\t\tif (types[i].getElementName().equals(typeName)) {", "+\t\t\t\t\t\ttypeFound = true;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (!typeFound) type = null;", "+\t\t\t}", "+\t\t}"]}], "num": 12726}