{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3aeac0fa489b72cde74a89bc2e94d24", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "001dc43031612a15f5dc5e024d6421dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r private void injectAllTypesForTypeContainers(IClassFile[] containers, Vector types)", "signatureAfterChange": "\r \tprivate void injectAllTypesForTypeContainers(\r \t\tIClassFile[] containers,\r \t\tArrayList types)", "diff": ["+\t */\r", "+\tprivate void injectAllTypesForTypeContainers(\r", "+\t\tIClassFile[] containers,\r", "+\t\tArrayList types) {\r", "+\t\t\t\r", "+\t\ttry {\r", "+\t\t\tfor (int i = 0; i < containers.length; i++) {\r", "+\t\t\t\tIClassFile cf = containers[i];\r", "+\t\t\t\ttypes.add(cf.getType());\r", "+\t\t\t\tthis.worked(1);\r", "+\t\t} catch (JavaModelException e) {\r", "- */\r", "-private void injectAllTypesForTypeContainers(IClassFile[] containers, Vector types) {\r", "-\ttry {\r", "-\t\tfor (int i = 0; i < containers.length; i++) {\r", "-\t\t\tIClassFile cf = containers[i];\r", "-\t\t\ttypes.addElement(cf.getType());\r", "-\t\t\tthis.worked(1);\r", "-\t\t}\r", "-\t} catch (JavaModelException npe) {\r", "-\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8cb3298e322addc7d85503a9bbcec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private void injectAllTypesForPackageFragmentRoot(IPackageFragmentRoot root, Vector types)", "signatureAfterChange": "\r \tprivate void injectAllTypesForPackageFragmentRoot(\r \t\tIPackageFragmentRoot root,\r \t\tArrayList types)", "diff": ["+\t */\r", "+\tprivate void injectAllTypesForPackageFragmentRoot(\r", "+\t\tIPackageFragmentRoot root,\r", "+\t\tArrayList types) {\r", "+\t\ttry {\r", "+\t\t\tIJavaElement[] packFrags = root.getChildren();\r", "+\t\t\tfor (int k = 0; k < packFrags.length; k++) {\r", "+\t\t\t\tIPackageFragment packFrag = (IPackageFragment) packFrags[k];\r", "+\t\t\t\tinjectAllTypesForPackageFragment(packFrag, types);\r", "+\t\t\t}\r", "+\t\t} catch (JavaModelException e) {\r", "- */\r", "-private void injectAllTypesForPackageFragmentRoot(IPackageFragmentRoot root, Vector types) {\r", "-\ttry {\r", "-\t\tIJavaElement[] packFrags = root.getChildren();\r", "-\t\tfor (int k = 0; k < packFrags.length; k++) {\r", "-\t\t\tIPackageFragment packFrag = (IPackageFragment) packFrags[k];\r", "-\t\t\tinjectAllTypesForPackageFragment(packFrag, types);\r", "-\t\t}\r", "-\t} catch (JavaModelException npe) {\r", "-\t\treturn;\r", "-\t}\r", "-}\r"]}], "num": 4677}