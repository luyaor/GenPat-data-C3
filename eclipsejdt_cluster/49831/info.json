{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d106934dece8ea97d311eee206a953f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973b1b093430ed8a6b4047e65775bf0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "-", "+\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "-\t\tFlowInfo conditionFlowInfo =", "-\t\t\tthis.condition.analyseCode(currentScope, flowContext, flowInfo);", "+\t\tFlowInfo conditionFlowInfo = this.condition.analyseCode(currentScope, flowContext, flowInfo);", "+\t\tint initialComplaintLevel = (flowInfo.reachMode() & FlowInfo.UNREACHABLE) != 0 ? Statement.COMPLAINED_FAKE_REACHABLE : Statement.NOT_COMPLAINED;", "-\t\t\tthis.thenInitStateIndex =", "-\t\t\t\tcurrentScope.methodScope().recordInitializationStates(thenFlowInfo);", "-\t\t\tif (!this.thenStatement.complainIfUnreachable(thenFlowInfo, currentScope, false)) {", "-\t\t\t\tthenFlowInfo =", "-\t\t\t\t\tthis.thenStatement.analyseCode(currentScope, flowContext, thenFlowInfo);", "+\t\t\tthis.thenInitStateIndex = currentScope.methodScope().recordInitializationStates(thenFlowInfo);", "+\t\t\tif (this.thenStatement.complainIfUnreachable(thenFlowInfo, currentScope, initialComplaintLevel) < Statement.COMPLAINED_UNREACHABLE) {", "+\t\t\t\tthenFlowInfo = this.thenStatement.analyseCode(currentScope, flowContext, thenFlowInfo);", "-\t\t\tthis.elseInitStateIndex =", "-\t\t\t\tcurrentScope.methodScope().recordInitializationStates(elseFlowInfo);", "-\t\t\tif (!this.elseStatement.complainIfUnreachable(elseFlowInfo, currentScope, false)) {", "-\t\t\t\telseFlowInfo =", "-\t\t\t\t\tthis.elseStatement.analyseCode(currentScope, flowContext, elseFlowInfo);", "+\t\t\tthis.elseInitStateIndex = currentScope.methodScope().recordInitializationStates(elseFlowInfo);", "+\t\t\tif (this.elseStatement.complainIfUnreachable(elseFlowInfo, currentScope, initialComplaintLevel) < Statement.COMPLAINED_UNREACHABLE) {", "+\t\t\t\telseFlowInfo = this.elseStatement.analyseCode(currentScope, flowContext, elseFlowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d0a462a2edb88b848d5e950135576a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "-", "+\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "+\t\tint initialComplaintLevel = (flowInfo.reachMode() & FlowInfo.UNREACHABLE) != 0 ? Statement.COMPLAINED_FAKE_REACHABLE : Statement.NOT_COMPLAINED;", "-", "+\t\t", "-\t\t\tif (!this.action.complainIfUnreachable(actionInfo, this.scope, false)) {", "-\t\t\t\tactionInfo = this.action.analyseCode(this.scope, loopingContext, actionInfo).", "-\t\t\t\t\tunconditionalInits();", "+\t\t\tif (this.action.complainIfUnreachable(actionInfo, this.scope, initialComplaintLevel) < Statement.COMPLAINED_UNREACHABLE) {", "+\t\t\t\tactionInfo = this.action.analyseCode(this.scope, loopingContext, actionInfo).unconditionalInits();", "-\t\t}", "-\t\telse {", "+\t\t} else {", "+\t\t\tif (this.increments != null) {", "+\t\t\t\tif (initialComplaintLevel == Statement.NOT_COMPLAINED) {", "+\t\t\t\t\tcurrentScope.problemReporter().fakeReachable(this.increments[0]);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 49831}