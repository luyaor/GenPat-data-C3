{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19d2619bdfdc42e54fd584c147247b03", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d04488ed297e7e57be1a126f39ed2981", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tupdateIndex(element, delta);\r", "-\t\t\telementAdded(element, delta);\r", "+\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\tthis.elementAdded(element, delta);\r", "-\t\t\tupdateIndex(element, delta);\r", "-\t\t\telementRemoved(element, delta);\r", "+\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\tthis.elementRemoved(element, delta);\r", "+\t\t\t\t// content has changed\r", "-\t\t\t\tupdateIndex(element, delta);\r", "-\t\t\t\tcontentChanged(element, delta);\r", "-\t\t\t} else if ((flags & IResourceDelta.OPEN) != 0) {\r", "-\t\t\t\telement = this.createElement(delta.getResource(), elementType, project);\r", "+\t\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\t\tthis.contentChanged(element, delta);\r", "+\t\t\t} else if (elementType == IJavaElement.JAVA_PROJECT\r", "+\t\t\t\t\t&& (flags & IResourceDelta.OPEN) != 0) {\r", "+\t\t\t\t// project has been opened or closed\r", "+\t\t\t\tIProject res = (IProject)delta.getResource();\r", "+\t\t\t\telement = this.createElement(res, elementType, project);\r", "-\t\t\t\tupdateIndex(element, delta);\r", "-\t\t\t\tif (isOpen(delta.getResource())) {\r", "-\t\t\t\t\telementOpened(element, delta);\r", "+\t\t\t\tif (res.isOpen()) {\r", "+\t\t\t\t\tthis.elementOpened(element, delta);\r", "-\t\t\t\t\telementClosed(element, delta);\r", "+\t\t\t\t\tthis.elementClosed(element, delta);\r", "+\t\t\t\tthis.updateIndex(element, delta);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d54051142c201970e776aa6cf5dca964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "410d11642750f05a6243be841d06f42ceed7a0e1", "commitAfterChange": "e69b75f122af6f64c831ddc9380ae2c446ae4d8b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\telement = this.createElement(delta.getResource(), elementType, project);\r", "-\t\t\tif (element == null) throw newInvalidElementType();\r", "+\t\t\tIResource deltaRes = delta.getResource();\r", "+\t\t\telement = this.createElement(deltaRes, elementType, project);\r", "+\t\t\tif (element == null) {\r", "+\t\t\t\t// resource might be containing shared roots (see bug 19058)\r", "+\t\t\t\tthis.updateRoots(deltaRes.getFullPath(), delta);\r", "+\t\t\t\tthrow newInvalidElementType();\r", "+\t\t\t}\r", "-\t\t\telement = this.createElement(delta.getResource(), elementType, project);\r", "-\t\t\tif (element == null) throw newInvalidElementType();\r", "+\t\t\tdeltaRes = delta.getResource();\r", "+\t\t\telement = this.createElement(deltaRes, elementType, project);\r", "+\t\t\tif (element == null) {\r", "+\t\t\t\t// resource might be containing shared roots (see bug 19058)\r", "+\t\t\t\tthis.updateRoots(deltaRes.getFullPath(), delta);\r", "+\t\t\t\tthrow newInvalidElementType();\r", "+\t\t\t}\r", "-\t\t\t\t\tif (element == null) throw newInvalidElementType();\r", "+\t\t\t\t\tif (element == null) {\r", "+\t\t\t\t\t\t// resource might be containing shared roots (see bug 19058)\r", "+\t\t\t\t\t\tthis.updateRoots(res.getFullPath(), delta);\r", "+\t\t\t\t\t\tthrow newInvalidElementType();\r", "+\t\t\t\t\t}\r", "-\t\t\t\t\t\tif (element == null) throw newInvalidElementType();\r", "+\t\t\t\t\t\tif (element == null) throw newInvalidElementType(); // note its resources are still visible as roots to other projects\r"]}], "num": 24654}