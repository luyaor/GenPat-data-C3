{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e223cce7c820d685dd950e3d12b128e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59ac8b878f1b1f3ca19493f97521d92e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "fb96a1c85d64a712beb45b02ec6ef71c691d3831", "commitAfterChange": "382b067fdb60eb61ee53faad83800b76fff0bbbf", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 314, "signatureBeforeChange": " public void testFavoriteImports013() throws JavaModelException", "signatureAfterChange": " public void testFavoriteImports013() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, false, true);", "+\trequestor.allowAllRequiredProposals();", "+\tint relevance1 = R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED;", "+\tint start1 = str.lastIndexOf(\"foo\") + \"\".length();", "+\tint end1 = start1 + \"foo\".length();", "+\tint start2 = str.lastIndexOf(\"public class\");", "+\tint end2 = start2 + \"\".length();", "-\t\t\t\"foo[METHOD_REF]{test.p.ZZZ.foo(), Ltest.p.ZZZ;, ()I, foo, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\"foo[METHOD_REF]{foo(), Ltest.p.ZZZ;, ()I, foo, null, [\"+start1+\", \"+end1+\"], \"+(relevance1)+\"}\\n\" +", "+\t\t\t\"   foo[METHOD_IMPORT]{import static test.p.ZZZ.foo;\\n, Ltest.p.ZZZ;, ()I, foo, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea6594b9316dc21755782fd15cff8c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "fb96a1c85d64a712beb45b02ec6ef71c691d3831", "commitAfterChange": "382b067fdb60eb61ee53faad83800b76fff0bbbf", "methodNumberBeforeChange": 710, "methodNumberAfterChange": 710, "signatureBeforeChange": " public void testFavoriteImports007() throws JavaModelException", "signatureAfterChange": " public void testFavoriteImports007() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, false, true);", "+\trequestor.allowAllRequiredProposals();", "+\tint relevance1 = R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED;", "+\tint start1 = str.lastIndexOf(\"foo\") + \"\".length();", "+\tint end1 = start1 + \"foo\".length();", "+\tint start2 = str.lastIndexOf(\"public class\");", "+\tint end2 = start2 + \"\".length();", "-\t\t\t\"foo[METHOD_REF]{test.p.ZZZ.foo(), Ltest.p.ZZZ;, ()I, foo, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\"foo[METHOD_REF]{ZZZ.foo(), Ltest.p.ZZZ;, ()I, foo, null, [\"+start1+\", \"+end1+\"], \"+(relevance1)+\"}\\n\" +", "+\t\t\t\"   ZZZ[TYPE_IMPORT]{import test.p.ZZZ;\\n, test.p, Ltest.p.ZZZ;, null, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29180145e063b098ab001fffdba10ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "fb96a1c85d64a712beb45b02ec6ef71c691d3831", "commitAfterChange": "382b067fdb60eb61ee53faad83800b76fff0bbbf", "methodNumberBeforeChange": 312, "methodNumberAfterChange": 312, "signatureBeforeChange": " public void testFavoriteImports011() throws JavaModelException", "signatureAfterChange": " public void testFavoriteImports011() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, false, true);", "+\trequestor.allowAllRequiredProposals();", "+\tint relevance1 = R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED;", "+\tint start1 = str.lastIndexOf(\"foo\") + \"\".length();", "+\tint end1 = start1 + \"foo\".length();", "+\tint start2 = str.lastIndexOf(\"public class\");", "+\tint end2 = start2 + \"\".length();", "-\t\t\t\"foo[METHOD_REF]{test.p.ZZZ.foo(), Ltest.p.ZZZ;, ()I, foo, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\"foo[METHOD_REF]{foo(), Ltest.p.ZZZ;, ()I, foo, null, [\"+start1+\", \"+end1+\"], \"+(relevance1)+\"}\\n\" +", "+\t\t\t\"   foo[METHOD_IMPORT]{import static test.p.ZZZ.foo;\\n, Ltest.p.ZZZ;, ()I, foo, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\","]}], "num": 42935}