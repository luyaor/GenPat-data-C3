{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6ec99ea4d95c0f1e34b80912b354e78", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d6643827a83aed410c1caf0b92339c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(Reference node, MatchingNodeSet nodeSet)", "diff": ["-//public void match(MessageSend node, MatchingNodeSet nodeSet) - SKIP IT", "-public void match(Reference node, MatchingNodeSet nodeSet) { // interested in FieldReference, NameReference & its subtypes", "+//public int match(MessageSend node, MatchingNodeSet nodeSet) - SKIP IT", "+public int match(Reference node, MatchingNodeSet nodeSet) { // interested in FieldReference, NameReference & its subtypes", "-\t\tmatchReference(node, nodeSet, false);", "+\t\treturn matchReference(node, nodeSet, false);", "+", "+\treturn IMPOSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba525c4ad969acc64bf3162c9f39dd5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(TypeDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-//public void match(Reference node, MatchingNodeSet nodeSet) - SKIP IT", "-public void match(TypeDeclaration node, MatchingNodeSet nodeSet) {", "+//public int match(Reference node, MatchingNodeSet nodeSet) - SKIP IT", "+public int match(TypeDeclaration node, MatchingNodeSet nodeSet) {", "-\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+\t\treturn nodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+", "+\treturn IMPOSSIBLE_MATCH;"]}], "num": 32225}