{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91720ee383358fb288ace632aeda0dd7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530d8c5f10d27020294a1c8c46da5ce7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "82d58f9af854b98a92f7d694d40ac1e84e13013c", "commitAfterChange": "6d114aac1fbfd4c23041534efbb02c24c883ba25", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "    public void resolve()", "signatureAfterChange": "    public void resolve()", "diff": ["-\t\tboolean hasEnumConstantsWithoutBody = false;", "+\t\tFieldDeclaration[] enumConstantsWithoutBody = null;", "-\t\t\t\t\t\tif (!(field.initialization instanceof QualifiedAllocationExpression))", "-\t\t\t\t\t\t\thasEnumConstantsWithoutBody = true;", "+\t\t\t\t\t\tif (!(field.initialization instanceof QualifiedAllocationExpression)) {", "+\t\t\t\t\t\t\tif (enumConstantsWithoutBody == null)", "+\t\t\t\t\t\t\t\tenumConstantsWithoutBody = new FieldDeclaration[count];", "+\t\t\t\t\t\t\tenumConstantsWithoutBody[i] = field;", "+\t\t\t\t\t\t}", "-\t\t\t\t\tif (!hasEnumConstants || hasEnumConstantsWithoutBody) {", "+\t\t\t\t\tif (!hasEnumConstants) {", "+\t\t\t\t\t\tfor (int i = 0, count = this.methods.length; i < count; i++) {", "+\t\t\t\t\t\t\tfinal AbstractMethodDeclaration methodDeclaration = this.methods[i];", "+\t\t\t\t\t\t\tif (methodDeclaration.isAbstract() && methodDeclaration.binding != null)", "+\t\t\t\t\t\t\t\tthis.scope.problemReporter().enumAbstractMethodMustBeImplemented(methodDeclaration);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else if (enumConstantsWithoutBody != null) {", "-\t\t\t\t\t\t\t\tthis.scope.problemReporter().enumAbstractMethodMustBeImplemented(methodDeclaration);", "+\t\t\t\t\t\t\t\tfor (int f = 0, l = enumConstantsWithoutBody.length; f < l; f++)", "+\t\t\t\t\t\t\t\t\tif (enumConstantsWithoutBody[f] != null)", "+\t\t\t\t\t\t\t\t\t\tthis.scope.problemReporter().enumConstantMustImplementAbstractMethod(methodDeclaration, enumConstantsWithoutBody[f]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9021dd7d2be7f6c5ec562a93cf8af5c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "0d8b14fcdd186ef07894db465104582e473b32af", "commitAfterChange": "cb1176594034666f0f8d852dc8fc01987d54d11b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t   \tpublic void resolve()", "signatureAfterChange": " \t   \tpublic void resolve()", "diff": ["-\t\t\tif (kind() == IGenericType.ANNOTATION_TYPE_DECL) {", "-\t\t\t\tif (this.superclass != null) {", "-\t\t\t\t\tthis.scope.problemReporter().annotationTypeDeclarationCannotHaveSuperclass(this);", "-\t\t\t\t}", "-\t\t\t\tif (this.superInterfaces != null) {", "-\t\t\t\t\tthis.scope.problemReporter().annotationTypeDeclarationCannotHaveSuperinterfaces(this);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t// check enum abstract methods", "-\t\t\tif (kind() == IGenericType.ENUM_DECL && this.binding.isAbstract()) {", "-\t\t\t\tif (!hasEnumConstants || hasEnumConstantsWithoutBody) {", "-\t\t\t\t\tfor (int i = 0, count = this.methods.length; i < count; i++) {", "-\t\t\t\t\t\tfinal AbstractMethodDeclaration methodDeclaration = this.methods[i];", "-\t\t\t\t\t\tif (methodDeclaration.isAbstract() && methodDeclaration.binding != null) {", "-\t\t\t\t\t\t\tthis.scope.problemReporter().enumAbstractMethodMustBeImplemented(methodDeclaration);", "+\t\t\tswitch(kind(this.modifiers)) {", "+\t\t\t\tcase TypeDeclaration.ANNOTATION_TYPE_DECL :", "+\t\t\t\t\tif (this.superclass != null) {", "+\t\t\t\t\t\tthis.scope.problemReporter().annotationTypeDeclarationCannotHaveSuperclass(this);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (this.superInterfaces != null) {", "+\t\t\t\t\t\tthis.scope.problemReporter().annotationTypeDeclarationCannotHaveSuperinterfaces(this);", "+\t\t\t\t\t}\t\t", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase TypeDeclaration.ENUM_DECL :", "+\t\t\t\t\t// check enum abstract methods", "+\t\t\t\t\tif (this.binding.isAbstract()) {", "+\t\t\t\t\t\tif (!hasEnumConstants || hasEnumConstantsWithoutBody) {", "+\t\t\t\t\t\t\tfor (int i = 0, count = this.methods.length; i < count; i++) {", "+\t\t\t\t\t\t\t\tfinal AbstractMethodDeclaration methodDeclaration = this.methods[i];", "+\t\t\t\t\t\t\t\tif (methodDeclaration.isAbstract() && methodDeclaration.binding != null) {", "+\t\t\t\t\t\t\t\t\tthis.scope.problemReporter().enumAbstractMethodMustBeImplemented(methodDeclaration);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t"]}], "num": 65284}