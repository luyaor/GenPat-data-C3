{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a57693509b9c62f95a55d468fde5df85", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49fd0505fbbbf9bda3f34676f0259a20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "09d520048a79a4812282d70b47bc4c3652b67e68", "commitAfterChange": "bbb21a5affc4d3b9808e8ab897f64d3b1e68b6b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static synchronized char[] scannedIdentifier(String id, String sourceLevel, String complianceLevel)", "signatureAfterChange": " \tprivate static synchronized char[] scannedIdentifier(String id, String sourceLevel, String complianceLevel)", "diff": ["-\t\t// Get scanner for given source and compliance levels", "-\t\tlong lSourceLevel = CompilerOptions.versionToJdkLevel(sourceLevel);", "-\t\tlong lComplianceLevel = CompilerOptions.versionToJdkLevel(complianceLevel);\t", "-\t\tint sourceIndex = ((int)(lSourceLevel>>> 16)) - ClassFileConstants.MAJOR_VERSION_1_3 ;", "-\t\tint complianceIndex = ((int)(lComplianceLevel >>> 16)) - ClassFileConstants.MAJOR_VERSION_1_3;", "-\t\tif (complianceIndex < 0) complianceIndex = 0;", "-\t\tif (sourceIndex < 0) sourceIndex = 0;", "-\t\tif (sourceIndex > complianceIndex) sourceIndex = complianceIndex;", "-\t\tint index = MAP_INDEXES[complianceIndex][sourceIndex];", "-\t\tif (SCANNERS[index] == null) {", "-\t\t\tSCANNERS[index] = new Scanner(", "-\t\t\t\t\tfalse /*comment*/,", "-\t\t\t\t\tfalse /*whitespace*/,", "-\t\t\t\t\tfalse /*nls*/,", "-\t\t\t\t\tlSourceLevel,", "-\t\t\t\t\tlComplianceLevel,", "-\t\t\t\t\tnull/*taskTag*/,", "-\t\t\t\t\tnull/*taskPriorities*/,", "-\t\t\t\t\ttrue /*taskCaseSensitive*/);", "-\t\t}", "-\t\tScanner scanner = SCANNERS[index];", "+\t\t// Set scanner for given source and compliance levels", "+\t\tSCANNER.sourceLevel = sourceLevel == null ? ClassFileConstants.JDK1_3 : CompilerOptions.versionToJdkLevel(sourceLevel);", "+\t\tSCANNER.complianceLevel = complianceLevel == null ? ClassFileConstants.JDK1_3 : CompilerOptions.versionToJdkLevel(complianceLevel);\t", "+\t\t// Read identifier", "-\t\t\tscanner.setSource(id.toCharArray());", "-\t\t\tint token = scanner.getNextToken();", "+\t\t\tSCANNER.setSource(id.toCharArray());", "+\t\t\tint token = SCANNER.getNextToken();", "-\t\t\t\tcurrentIdentifier = scanner.getCurrentIdentifierSource();", "+\t\t\t\tcurrentIdentifier = SCANNER.getCurrentIdentifierSource();", "-\t\t\tint nextToken= scanner.getNextToken();", "+\t\t\tint nextToken= SCANNER.getNextToken();", "-\t\t\t\t&& scanner.startPosition == scanner.source.length) { // to handle case where we had an ArrayIndexOutOfBoundsException ", "+\t\t\t\t&& SCANNER.startPosition == SCANNER.source.length) { // to handle case where we had an ArrayIndexOutOfBoundsException "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83adb5ff868fc5666557f9b15f393e30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static synchronized char[] scannedIdentifier(String id)", "signatureAfterChange": " \tprivate static synchronized char[] scannedIdentifier(String id, String sourceLevel, String complianceLevel)", "diff": ["-\tprivate static synchronized char[] scannedIdentifier(String id) {", "+\tprivate static synchronized char[] scannedIdentifier(String id, String sourceLevel, String complianceLevel) {", "+", "+\t\t// Get scanner for given source and compliance levels", "+\t\tlong lSourceLevel = CompilerOptions.versionToJdkLevel(sourceLevel);", "+\t\tlong lComplianceLevel = CompilerOptions.versionToJdkLevel(complianceLevel);\t", "+\t\tint sourceIndex = ((int)(lSourceLevel>>> 16)) - ClassFileConstants.MAJOR_VERSION_1_3 ;", "+\t\tint complianceIndex = ((int)(lComplianceLevel >>> 16)) - ClassFileConstants.MAJOR_VERSION_1_3;", "+\t\tif (complianceIndex < 0) complianceIndex = 0;", "+\t\tif (sourceIndex < 0) sourceIndex = 0;", "+\t\tif (sourceIndex > complianceIndex) sourceIndex = complianceIndex;", "+\t\tint index = MAP_INDEXES[complianceIndex][sourceIndex];", "+\t\tif (SCANNERS[index] == null) {", "+\t\t\tSCANNERS[index] = new Scanner(", "+\t\t\t\t\tfalse /*comment*/,", "+\t\t\t\t\tfalse /*whitespace*/,", "+\t\t\t\t\tfalse /*nls*/,", "+\t\t\t\t\tlSourceLevel,", "+\t\t\t\t\tlComplianceLevel,", "+\t\t\t\t\tnull/*taskTag*/,", "+\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\ttrue /*taskCaseSensitive*/);", "+\t\t}", "+\t\tScanner scanner = SCANNERS[index];", "+", "-\t\t\tSCANNER.setSource(id.toCharArray());", "-\t\t\tint token = SCANNER.getNextToken();", "+\t\t\tscanner.setSource(id.toCharArray());", "+\t\t\tint token = scanner.getNextToken();", "-\t\t\t\tcurrentIdentifier = SCANNER.getCurrentIdentifierSource();", "+\t\t\t\tcurrentIdentifier = scanner.getCurrentIdentifierSource();", "-\t\t\tint nextToken= SCANNER.getNextToken();", "+\t\t\tint nextToken= scanner.getNextToken();", "-\t\t\t\t&& SCANNER.startPosition == SCANNER.source.length) { // to handle case where we had an ArrayIndexOutOfBoundsException ", "+\t\t\t\t&& scanner.startPosition == scanner.source.length) { // to handle case where we had an ArrayIndexOutOfBoundsException "]}], "num": 24929}