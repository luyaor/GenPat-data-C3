{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54b86c0d9e5fc3da52a5fe12c173c3f8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7615e136cac78a553cae476f4ea34b06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\tif (fieldBinding.problemId() == Ambiguous) {", "-\t\t\t\t\t\t\t\t\t\tif (foundField == null || foundField.problemId() == NotVisible)", "+\t\t\t\t\t\t\t\t\tif (fieldBinding.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\t\t\t\t\t\t\t\tif (foundField == null || foundField.problemId() == ProblemReasons.NotVisible)", "-\t\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tNonStaticReferenceInConstructorInvocation);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.NonStaticReferenceInConstructorInvocation);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tNonStaticReferenceInStaticContext);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.NonStaticReferenceInStaticContext);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\tif (foundField == null || (foundField.problemId() == NotVisible && fieldBinding.problemId() != NotVisible)) {", "+\t\t\t\t\t\t\t\t\tif (foundField == null || (foundField.problemId() == ProblemReasons.NotVisible && fieldBinding.problemId() != ProblemReasons.NotVisible)) {", "-\t\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ReceiverTypeNotVisible);", "+\t\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ProblemReasons.ReceiverTypeNotVisible);", "-\t\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, null, Ambiguous);", "+\t\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, null, ProblemReasons.Ambiguous);", "-\t\t\treturn new ProblemBinding(name, enclosingSourceType(), NotFound);", "+\t\t\treturn new ProblemBinding(name, enclosingSourceType(), ProblemReasons.NotFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb39b937c1de763419b52943b2188a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tif (methodBinding.problemId() == Ambiguous) {", "-\t\t\tif (foundMethod == null || foundMethod.problemId() == NotVisible)", "+\t\tif (methodBinding.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\tif (foundMethod == null || foundMethod.problemId() == ProblemReasons.NotVisible)", "-\t\t\t\treturn new ProblemMethodBinding(selector, methodBinding.parameters, InheritedNameHidesEnclosingName);", "+\t\t\t\treturn new ProblemMethodBinding(selector, methodBinding.parameters, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, NotFound);", "+\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, ProblemReasons.NotFound);", "-\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, NotVisible);", "+\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, ProblemReasons.NotVisible);", "-\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, NonStaticReferenceInConstructorInvocation);", "+\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, ProblemReasons.NonStaticReferenceInConstructorInvocation);", "-\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, NonStaticReferenceInStaticContext);", "+\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, ProblemReasons.NonStaticReferenceInStaticContext);", "-\t\t\t\t\treturn new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, InheritedNameHidesEnclosingName);", "+\t\t\t\t\treturn new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\tif (foundMethod == null || (foundMethod.problemId() == NotVisible && methodBinding.problemId() != NotVisible)) {", "+\t\tif (foundMethod == null || (foundMethod.problemId() == ProblemReasons.NotVisible && methodBinding.problemId() != ProblemReasons.NotVisible)) {", "-\treturn new ProblemMethodBinding(selector, argumentTypes, NotFound);", "+\treturn new ProblemMethodBinding(selector, argumentTypes, ProblemReasons.NotFound);"]}], "num": 55995}