{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e86d477e680d8f7084098718be3726b1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0040729a9f7706d7153c7b9c1fe5c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "2314f2b038c548685d179883c3a134764eda5d7c", "commitAfterChange": "ca571b042ce9fb42ec7529ae2bbfff42124817bf", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public AbstractMethodDeclaration sourceMethod()", "signatureAfterChange": " public AbstractMethodDeclaration sourceMethod()", "diff": ["+\tif (isSynthetic()) {", "+\t\treturn null;", "+\t}", "-\tfor (int i = methods.length; --i >= 0;)", "-\t\tif (this == methods[i].binding)", "-\t\t\treturn methods[i];", "+\tif (methods != null) {", "+\t\tfor (int i = methods.length; --i >= 0;)", "+\t\t\tif (this == methods[i].binding)", "+\t\t\t\treturn methods[i];", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0ab1e71564f13d9eb713fae400d97f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8b43d224642ee7d1b616bb187976b917b924c6e2", "commitAfterChange": "8728875c2badeba6a33c75154be535794f7d1a9c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tprivate char[][] findEnclosingTypeNames(Scope scope)", "signatureAfterChange": " \t \tprivate char[][] findEnclosingTypeNames(Scope scope)", "diff": ["-\t\t\t\t\tfor (int i = 0; i < classTypeParameters.length; i++) {", "-\t\t\t\t\t\tTypeParameter typeParameter = classTypeParameters[i];", "-\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "-\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\tif(classTypeParameters != null) {", "+\t\t\t\t\t\tfor (int i = 0; i < classTypeParameters.length; i++) {", "+\t\t\t\t\t\t\tTypeParameter typeParameter = classTypeParameters[i];", "+\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "+\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\tfor (int i = 0; i < methodTypeParameters.length; i++) {", "-\t\t\t\t\t\t\tTypeParameter typeParameter = methodTypeParameters[i];", "-\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "-\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\tif(methodTypeParameters != null) {", "+\t\t\t\t\t\t\tfor (int i = 0; i < methodTypeParameters.length; i++) {", "+\t\t\t\t\t\t\t\tTypeParameter typeParameter = methodTypeParameters[i];", "+\t\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;"]}], "num": 49538}