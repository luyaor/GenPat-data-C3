{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0606e976a92d168d722bbc041b9a7aba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17dfa2a5a546b2b35bfd1c85247d11b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate static void addFileWithMissingTypeError( \t\t\tfinal IFile file,  \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<char[]> sourceForFilesWithMissingType, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \t \tprivate static void addFileWithMissingTypeError( \t\t\tfinal IFile file,  \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType, \t\t\tfinal ProcessorEnvImpl processorEnv)", "diff": ["-\t\t\tfinal List<char[]> sourceForFilesWithMissingType,", "+\t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType,", "-\t\tfinal CompilationUnit unit = processorEnv.getAstCompilationUnit(file);", "-\t\tassert unit != null : \"cannot locate compilation unit for \" + file.getName(); //$NON-NLS-1$", "-\t\tfinal IProblem[] problems = unit.getProblems();", "+\t\tfinal CompilationUnit domUnit = processorEnv.getAstCompilationUnit(file);", "+\t\tassert domUnit != null : \"cannot locate compilation unit for \" + file.getName(); //$NON-NLS-1$", "+\t\tfinal IProblem[] problems = domUnit.getProblems();", "-\t\t\t\tfinal char[] src = processorEnv.getSourceForFile(file);", "-\t\t\t\tassert src != null : \"cannot locate source for file \" + file.getName(); //$NON-NLS-1$", "-\t\t\t\tsourceForFilesWithMissingType.add(src);", "+\t\t\t\tfinal ICompilationUnit unit = processorEnv.getICompilationUnitForFile(file);", "+\t\t\t\tassert unit != null : \"cannot locate ICompilationUnit for file \" + file.getName(); //$NON-NLS-1$", "+\t\t\t\tunitsForFilesWithMissingType.add(unit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29af1a59997a6f8c951895c0b56e01da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "a5c56b9d9a1a6a7a2412b9e4fe79595e9a454729", "commitAfterChange": "808f8a4c125739a8b2d2237ba90c04dc1390f0b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, String genericTypeSignature) throws JavaModelException", "signatureAfterChange": "  \tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, String uniqueKey) throws JavaModelException", "diff": ["-\tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, String genericTypeSignature) throws JavaModelException {", "-\t\tchar[][] typeArguments = Signature.getTypeArguments(genericTypeSignature.toCharArray());", "+", "+\tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, String uniqueKey) throws JavaModelException {", "+\t\tString[] typeArguments = new BindingKey(uniqueKey).getTypeArguments();", "-\t\t\tchar[] typeArgument = typeArguments[i];", "-\t\t\tCharOperation.replace(typeArgument, '/', '.');", "-\t\t\tbuffer.append(Signature.toCharArray(typeArgument));", "+\t\t\tString typeArgument = typeArguments[i];", "+\t\t\ttypeArgument.replace('/', '.');", "+\t\t\tbuffer.append(Signature.toString(typeArgument));"]}], "num": 56443}