{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14aa96e68946fb80e641ef7173c30c68", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676b6cffb0df1762bbec1f274b64ffe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "signatureAfterChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "diff": ["+\t\tencodePatterns(this.accessibleFiles, TAG_ACCESSIBLE, parameters);", "+\t\tencodePatterns(this.nonAccessibleFiles, TAG_NONACCESSIBLE, parameters);", "+\t\t", "-\t\twriter.printTag(TAG_CLASSPATHENTRY, parameters, indent, newLine, true);", "+\t\tboolean hasExtraAttributes = this.extraAttributes != NO_EXTRA_ATTRIBUTES;", "+\t\twriter.printTag(TAG_CLASSPATHENTRY, parameters, indent, newLine, !hasExtraAttributes /*close tag if no extra attributes*/);", "+\t\t", "+\t\tif (hasExtraAttributes) {", "+\t\t\tencodeExtraAttributes(writer, indent, newLine);", "+\t\t\twriter.endTag(TAG_CLASSPATHENTRY, indent);", "+\t\t\t", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39c53a1f616a7eeb31a1730b552be88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "signatureAfterChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "diff": ["-\t\tencodePatterns(this.accessibleFiles, TAG_ACCESSIBLE, parameters);", "-\t\tencodePatterns(this.nonAccessibleFiles, TAG_NONACCESSIBLE, parameters);", "-\t\tif (this.entryKind == CPE_PROJECT && !this.combineAccessRestrictions)", "-\t\t\tparameters.put(TAG_COMBINE_ACCESS_RESTRICTIONS, \"false\"); //$NON-NLS-1$", "+\t\tif (this.entryKind == CPE_PROJECT && !this.combineAccessRules)", "+\t\t\tparameters.put(TAG_COMBINE_ACCESS_RULES, \"false\"); //$NON-NLS-1$", "-\t\twriter.printTag(TAG_CLASSPATHENTRY, parameters, indent, newLine, !hasExtraAttributes /*close tag if no extra attributes*/);", "+\t\tboolean hasRestrictions = getAccessRuleSet() != null;", "+\t\twriter.printTag(TAG_CLASSPATHENTRY, parameters, indent, newLine, !hasExtraAttributes && !hasRestrictions /*close tag if no extra attributes and no restriction*/);", "-\t\tif (hasExtraAttributes) {", "+\t\tif (hasExtraAttributes)", "+\t", "+\t\tif (hasRestrictions)", "+\t\t\tencodeAccessRules(writer, indent, newLine);", "+", "+\t\tif (hasExtraAttributes || hasRestrictions)", "-\t\t\t", "-\t\t}"]}], "num": 22763}