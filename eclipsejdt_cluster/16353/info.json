{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0742c8be925c2faf289e1fba77bf2f5e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed78e3a8afc09f739dc81de3f5175c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void test101()", "signatureAfterChange": " \tpublic void test101()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "-\t\t\t\"\tpublic class X <T extends String> {\\n\" + ", "-\t\t\t\"\t                          ^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "-\t\t\t\"\t  ^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Bound mismatch: The type ? extends AX is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "-\t\t\t\"\t                          ^^\\n\" + ", "-\t\t\t\"Bound mismatch: The type AX<String> is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "-\t\t\t\"----------\\n\");\t\t", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\"\tpublic class X <T extends String> {\\n\" + ", "+\t\t\"\t                          ^^^^^^\\n\" + ", "+\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\"\t  ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Bound mismatch: The type ? extends AX is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\"\t                          ^^\\n\" + ", "+\t\t\"Bound mismatch: The type AX<String> is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\"\tx.t.foo(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The method foo(Object) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\"----------\\n\");\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9abb0662d908e95f87a231c5b1aa5982", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 721, "methodNumberAfterChange": 721, "signatureBeforeChange": " public void test715()", "signatureAfterChange": " public void test715()", "diff": ["+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tComparable<String> c = (java.util.List)bar(5, 5.0);\\n\" + ", "+\t\t\"\t                        ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6badb0366c032bc96b5062147ea43ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 622, "methodNumberAfterChange": 622, "signatureBeforeChange": " \tpublic void test618()", "signatureAfterChange": " \tpublic void test618()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Map.java (at line 5)\\n\" + ", "-\t\t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "-\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method foo cannot be declared static; static methods can only be declared in a static or top level type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in Map.java (at line 5)\\n\" + ", "-\t\t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in Map.java (at line 8)\\n\" + ", "-\t\t\t\"\tEntry<String> entry; // invalid static ref\\n\" + ", "-\t\t\t\"\t^^^^^\\n\" + ", "-\t\t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in Map.java (at line 11)\\n\" + ", "-\t\t\t\"\tvoid c(Map.Entry<String> e) { } // illegal \\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "-\t\t\t\"The member type Map.Entry<String> must be qualified with a parameterized type, since it is not static\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. ERROR in Map.java (at line 5)\\n\" + ", "+    \t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "+    \t\t\"\t            ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"The method foo cannot be declared static; static methods can only be declared in a static or top level type\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in Map.java (at line 5)\\n\" + ", "+    \t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "+    \t\t\"\t                ^^^^^\\n\" + ", "+    \t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in Map.java (at line 8)\\n\" + ", "+    \t\t\"\tEntry<String> entry; // invalid static ref\\n\" + ", "+    \t\t\"\t^^^^^\\n\" + ", "+    \t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. ERROR in Map.java (at line 11)\\n\" + ", "+    \t\t\"\tvoid c(Map.Entry<String> e) { } // illegal \\n\" + ", "+    \t\t\"\t       ^^^^^^^^^\\n\" + ", "+    \t\t\"The member type Map.Entry<String> must be qualified with a parameterized type, since it is not static\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"5. WARNING in Map.java (at line 12)\\n\" + ", "+    \t\t\"\tvoid b(Entry e) { } // OK\\n\" + ", "+    \t\t\"\t       ^^^^^\\n\" + ", "+    \t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<M>.Entry<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfea5650ea99c7827de1ceaaff3b1c93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 620, "methodNumberAfterChange": 620, "signatureBeforeChange": " \tpublic void test616()", "signatureAfterChange": " \tpublic void test616()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Map.java (at line 9)\\n\" + ", "-\t\t\t\"\tvoid c(Map.Entry<String> e) { } // illegal (correctly flagged)\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "-\t\t\t\"The member type Map.Entry<String> must be qualified with a parameterized type, since it is not static\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. ERROR in Map.java (at line 9)\\n\" + ", "+    \t\t\"\tvoid c(Map.Entry<String> e) { } // illegal (correctly flagged)\\n\" + ", "+    \t\t\"\t       ^^^^^^^^^\\n\" + ", "+    \t\t\"The member type Map.Entry<String> must be qualified with a parameterized type, since it is not static\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in Map.java (at line 10)\\n\" + ", "+    \t\t\"\tvoid b(Entry e) { } // OK\\n\" + ", "+    \t\t\"\t       ^^^^^\\n\" + ", "+    \t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<M>.Entry<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\");"]}], "num": 16353}