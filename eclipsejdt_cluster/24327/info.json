{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fef3b61524ee5ff6c9aaa172eead76c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2716242da07dbff98a123d434611c8cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t public HierarchyResolver( \tINameEnvironment nameEnvironment, \tIErrorHandlingPolicy policy, \tMap settings, \tIHierarchyRequestor requestor, \tIProblemFactory problemFactory)", "signatureAfterChange": " \t public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, IHierarchyRequestor requestor, IProblemFactory problemFactory)", "diff": ["-public HierarchyResolver(", "-\tINameEnvironment nameEnvironment,", "-\tIErrorHandlingPolicy policy,", "-\tMap settings,", "-\tIHierarchyRequestor requestor,", "-\tIProblemFactory problemFactory) {", "-", "-\t// create a problem handler given a handling policy", "-\toptions = settings == null ? new CompilerOptions() : new CompilerOptions(settings);", "-\tProblemReporter problemReporter = new ProblemReporter(policy, options, problemFactory);", "-\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);", "-\tthis.requestor = requestor;", "-", "-\tthis.typeIndex = -1;", "-\tthis.typeModels = new IGenericType[5];", "-\tthis.typeBindings = new ReferenceBinding[5];", "-}", "+\t// create a problem handler with the 'exit after all problems' handling policy", "+\toptions = settings == null ? new CompilerOptions() : new CompilerOptions(settings);", "+\tIErrorHandlingPolicy policy = DefaultErrorHandlingPolicies.exitAfterAllProblems();", "+\tProblemReporter problemReporter = new ProblemReporter(policy, options, problemFactory);", "+", "+\tthis.initialize(", "+\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment),", "+\t\trequestor);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b401bce025df1bb0a9f74d1860f07b15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Problem.java", "commitBeforeChange": "be31a53c2323c83d56652e268a602a87f32eef5d", "commitAfterChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic Problem(String location, String message, IPath resourcePath, int start, int end, int categoryId)", "signatureAfterChange": " \t \tpublic Problem(String location, String message, IPath resourcePath, int start, int end, int categoryId)", "diff": ["-\tpublic Problem(String location, String message, IPath resourcePath, int start, int end, int categoryId){", "+\tpublic Problem(String location, String message, IPath resourcePath, int start, int end, int categoryId) {", "+\t\tthis(location, message, resourcePath, start, end, categoryId, IMarker.SEVERITY_ERROR);", "+\t}"]}], "num": 24327}