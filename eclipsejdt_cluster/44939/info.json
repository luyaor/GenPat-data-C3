{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e522e2068a50392d3ae2e1c7d8999d9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3897e21b4ba393e70a84d9b9cc227435", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "commitAfterChange": "5f9b5f6bde6ddbfdbfa46be3b81806de99313773", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\tFlowInfo actionInfo = flowInfo.copy().unconditionalInits().discardNullRelatedInitializations();", "-\t\t\tflowInfo = action.analyseCode(currentScope, loopingContext, flowInfo);", "+\t\t\tactionInfo = action.analyseCode(currentScope, loopingContext, actionInfo);", "-\t\t\tif (!flowInfo.isReachable() && !loopingContext.initsOnContinue.isReachable()) {", "+\t\t\tif (!actionInfo.isReachable() && !loopingContext.initsOnContinue.isReachable()) {", "-\t\tflowInfo.setReachMode(previousMode);", "+\t\tactionInfo.setReachMode(previousMode);", "-\t\tflowInfo =", "+\t\tactionInfo =", "-\t\t\t\t\t? flowInfo", "-\t\t\t\t\t: (flowInfo.mergedWith(loopingContext.initsOnContinue))));", "+\t\t\t\t\t? actionInfo", "+\t\t\t\t\t: (actionInfo.mergedWith(loopingContext.initsOnContinue))));", "-\t\t\tloopingContext.complainOnDeferredChecks(currentScope, flowInfo);", "+\t\t\tloopingContext.complainOnDeferredChecks(currentScope, actionInfo);", "-\t\t\t\tflowInfo.initsWhenFalse(), ", "+\t\t\t\tactionInfo.initsWhenFalse().addInitializationsFrom(flowInfo), // recover null inits from before condition analysis"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c016cb6773ca928bfa36131438297a78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "signatureAfterChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "diff": ["-\tUnconditionalFlowInfo flowInfo = this.upstreamNullFlowInfo.", "+\tUnconditionalFlowInfo incomingInfo = this.upstreamNullFlowInfo.", "+\t\t\tFlowInfo flowInfo =  (this.nullInfos[i] != null)", "+\t\t\t\t\t\t\t\t\t? incomingInfo.copy().addNullInfoFrom(this.nullInfos[i])", "+\t\t\t\t\t\t\t\t\t: incomingInfo;", "-\t\t\t\t\t\tthis.parent.recordNullityMismatch(scope, (Expression)location, this.providedExpectedTypes[i][0], this.providedExpectedTypes[i][1], nullStatus);", "+\t\t\t\t\t\tthis.parent.recordNullityMismatch(scope, (Expression)location, this.providedExpectedTypes[i][0], this.providedExpectedTypes[i][1], flowInfo, nullStatus);", "+\t\t\tFlowInfo flowInfo =  (this.nullInfos[i] != null)", "+\t\t\t\t\t? incomingInfo.copy().addNullInfoFrom(this.nullInfos[i])", "+\t\t\t\t\t: incomingInfo;", "-\tthis.initsOnBreak.addPotentialNullInfoFrom(flowInfo);", "+\tthis.initsOnBreak.addPotentialNullInfoFrom(incomingInfo);", "-\t\tthis.breakTargetContexts[i].initsOnBreak.addPotentialNullInfoFrom(flowInfo);", "+\t\tthis.breakTargetContexts[i].initsOnBreak.addPotentialNullInfoFrom(incomingInfo);"]}], "num": 44939}