{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f832183d98bc84fd08efa7c6db818070", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c862c4fc1cdc8fe751f992c23e5a5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "b63ee5a669593061b975bc2def28757d777c16ca", "commitAfterChange": "09bf35df2168c2ab3f5a24971ca9aae42bfc8d5b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate void pushThrowName(TypeReference typeRef)", "signatureAfterChange": "  \tprivate void pushThrowName(TypeReference typeRef)", "diff": ["-\t\t// TODO (frederic) To be changed when mixed tags declaration will be accepted", "-\t\tswitch (this.astLengthPtr) {", "-\t\t\tcase -1 :", "-\t\t\t\t// no @param previously declared", "-\t\t\t\tpushOnAstStack(null, true); // push 0 for parameters size", "-\t\t\tcase 0 :", "-\t\t\t\t// push first class name", "-\t\t\t\tpushOnAstStack(typeRef, true);", "-\t\t\t\tbreak;", "-\t\t\tcase 1 :", "-\t\t\t\t// push other class name", "-\t\t\t\tpushOnAstStack(typeRef, false);", "-\t\t\t\tbreak;", "-\t\t\tdefault :", "-\t\t\t\tthis.sourceParser.problemReporter().annotationUnexpectedTag(typeRef.sourceStart, typeRef.sourceEnd);", "+\t\tif (this.astLengthPtr == -1) { // First push", "+\t\t\tpushOnAstStack(null, true);", "+\t\t\tpushOnAstStack(typeRef, true);", "+\t\t} else {", "+\t\t\tswitch (this.astLengthPtr % ORDERED_TAGS_NUMBER) {", "+\t\t\t\tcase PARAM_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @param tag => push new @throws tag", "+\t\t\t\t\tpushOnAstStack(typeRef, true);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase THROWS_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @throws tag => push another @throws tag", "+\t\t\t\t\tpushOnAstStack(typeRef, false);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SEE_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @see tag => push empty @param and new @throws tags", "+\t\t\t\t\tpushOnAstStack(null, true);", "+\t\t\t\t\tpushOnAstStack(typeRef, true);", "+\t\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87a4c7fba3ed1a46ab051aca24b933bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "b63ee5a669593061b975bc2def28757d777c16ca", "commitAfterChange": "09bf35df2168c2ab3f5a24971ca9aae42bfc8d5b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate void pushSeeRef(Statement statement)", "signatureAfterChange": " \tprivate void pushSeeRef(Statement statement)", "diff": ["+\t */", "-\t\t// TODO (frederic) To be changed when mixed tags declaration will be accepted", "-\t\tswitch (this.astLengthPtr) {", "-\t\t\tcase -1 :", "-\t\t\t\t// no @param previously declared, nor @throw/@exception", "-\t\t\t\tpushOnAstStack(null, true); // push 0 for parameters size", "-\t\t\tcase 0 :", "-\t\t\t\t// no @throw/@exception previously declared", "-\t\t\t\tpushOnAstStack(null, true); // push 0 for thrownExceptions size", "-\t\t\tcase 1 :", "-\t\t\t\t// push first reference", "-\t\t\t\tpushOnAstStack(statement, true);", "-\t\t\t\tbreak;", "-\t\t\tcase 2 :", "-\t\t\t\t// push other reference", "-\t\t\t\tpushOnAstStack(statement, false);", "-\t\t\t\tbreak;", "-\t\t\tdefault :", "-\t\t\t\tthis.sourceParser.problemReporter().annotationUnexpectedTag(statement.sourceStart, statement.sourceEnd);", "+\t\tif (this.astLengthPtr == -1) { // First push", "+\t\t\tpushOnAstStack(null, true);", "+\t\t\tpushOnAstStack(null, true);", "+\t\t\tpushOnAstStack(statement, true);", "+\t\t} else {", "+\t\t\tswitch (this.astLengthPtr % ORDERED_TAGS_NUMBER) {", "+\t\t\t\tcase PARAM_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @param tag => push empty @throws tag and new @see tag", "+\t\t\t\t\tpushOnAstStack(null, true);", "+\t\t\t\t\tpushOnAstStack(statement, true);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase THROWS_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @throws tag => push new @see tag", "+\t\t\t\t\tpushOnAstStack(statement, true);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SEE_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @see tag => push another @see tag", "+\t\t\t\t\tpushOnAstStack(statement, false);", "+\t\t\t\t\tbreak;", "+\t\t\t}"]}], "num": 2747}