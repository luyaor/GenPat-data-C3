{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f38ab37da950c02e390acbc28cf1074e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aa345bf377ae62bc960e1bcee86d498", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\t\t\tint length = others==null ? 0 : others.length;", "-\t\t\t\tif (length > 0) {", "-\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "-\t\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "-\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\tif (others != null) {", "+\t\t\t\t\tint length = others.length;", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "+\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "+\t\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac99193536c43ef6f9eb831a2bf5466a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprotected void assertSearchResults(String message, String expected, JavaSearchResultCollector collector)", "signatureAfterChange": " \tprotected void assertSearchResults(String message, String expected, JavaSearchResultCollector collector)", "diff": ["+\t\t\tif (this.workingCopies != null) {", "+\t\t\t\tint length = this.workingCopies.length;", "+\t\t\t\tString[] sources = new String[length*2];", "+\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\tsources[i*2] = this.workingCopies[i].getPath().toString();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tsources[i*2+1] = this.workingCopies[i].getSource();", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// ignore", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tSystem.out.println(\"--------------------------------------------------------------------------------\");", "+\t\t\t\tfor (int i=0; i<length; i+=2) {", "+\t\t\t\t\tSystem.out.println(sources[i]);", "+\t\t\t\t\tSystem.out.println(sources[i+1]);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee24a2bca988106d21d2468147ab7b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "2b810e9ce6e62d5b8f5d0b01de3fab00973de806", "commitAfterChange": "e07ac4343b59e78d96b40c4bf7bf797b84cb728a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["+\t// Abort build only if there are classpath errors", "-\tif (markers.length > 0) {", "+\tboolean buildPathHasError = false;", "+\tfor (int i = 0, length = markers.length; i < length; i++) {", "+\t\tIMarker marker = markers[i];", "+\t\tif (((Integer)marker.getAttribute(IMarker.SEVERITY)).intValue() == IMarker.SEVERITY_ERROR) {", "+\t\t\tbuildPathHasError = true;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (buildPathHasError) {", "-\t\t\tSystem.out.println(\"Aborted build because project is involved in a cycle or has classpath problems\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"Aborted build because project has classpath errors (incomplete or involved in cycle)\"); //$NON-NLS-1$"]}], "num": 35947}