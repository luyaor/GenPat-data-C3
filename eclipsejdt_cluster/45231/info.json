{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "187f1b8ee264403e001892c97478d42c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a317fc1c3ad3815efeadf89aaf0daa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected void addAllSourceFiles(final ArrayList locations, final ArrayList typeNames) throws CoreException", "signatureAfterChange": "  protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException", "diff": ["-protected void addAllSourceFiles(final ArrayList locations, final ArrayList typeNames) throws CoreException {", "-\tfor (int i = 0, length = sourceFolders.length; i < length; i++) {", "-\t\tfinal int srcFolderLength = sourceFolders[i].getLocation().addTrailingSeparator().toString().length();", "-\t\tsourceFolders[i].accept(", "-\t\t\tnew IResourceVisitor() {", "-\t\t\t\tpublic boolean visit(IResource resource) {", "-\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\tif (JavaBuilder.JAVA_EXTENSION.equalsIgnoreCase(resource.getFileExtension())) {", "-\t\t\t\t\t\t\tString sourceLocation = resource.getLocation().toString();", "-\t\t\t\t\t\t\tlocations.add(sourceLocation);", "-\t\t\t\t\t\t\ttypeNames.add(sourceLocation.substring(srcFolderLength, sourceLocation.length() - 5)); // length of .java", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t\t}", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t);", "-\t\tnotifier.checkCancel();", "-\t}", "-}", "+protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException {", "+\tfor (int i = 0, l = sourceLocations.length; i < l; i++) {", "+\t\tfinal ClasspathMultiDirectory sourceLocation = sourceLocations[i];", "+\t\tfinal char[][] exclusionPatterns = sourceLocation.exclusionPatterns;", "+\t\tsourceLocation.sourceFolder.accept(", "+\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\tif (JavaBuilder.JAVA_EXTENSION.equalsIgnoreCase(resource.getFileExtension()))", "+\t\t\t\t\t\t\tsourceFiles.add(new SourceFile((IFile) resource, sourceLocation, encoding));", "+\t\tnotifier.checkCancel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceced68a64f654c3068068e15a584b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\tObject[] nonJavaResources = new IResource[5];", "-\t\tint nonJavaResourcesCounter = 0;", "+\t\tObject[] resources = new IResource[5];", "+\t\tint resourcesCounter = 0;", "-\t\t\t\t\t\tif (nonJavaResources.length == nonJavaResourcesCounter) {", "+\t\t\t\t\t\tif (resources.length == resourcesCounter) {", "-\t\t\t\t\t\t\t\tnonJavaResources,", "+\t\t\t\t\t\t\t\tresources,", "-\t\t\t\t\t\t\t\t(nonJavaResources = new IResource[nonJavaResourcesCounter * 2]),", "+\t\t\t\t\t\t\t\t(resources = new IResource[resourcesCounter * 2]),", "-\t\t\t\t\t\t\t\tnonJavaResourcesCounter);", "+\t\t\t\t\t\t\t\tresourcesCounter);", "-\t\t\t\t\t\tnonJavaResources[nonJavaResourcesCounter++] = res;", "+\t\t\t\t\t\tresources[resourcesCounter++] = res;", "-\t\t\t\t\t\tif (nonJavaResources.length == nonJavaResourcesCounter) {", "+\t\t\t\t\t\tif (resources.length == resourcesCounter) {", "-\t\t\t\t\t\t\t\tnonJavaResources,", "+\t\t\t\t\t\t\t\tresources,", "-\t\t\t\t\t\t\t\t(nonJavaResources = new IResource[nonJavaResourcesCounter * 2]),", "+\t\t\t\t\t\t\t\t(resources = new IResource[resourcesCounter * 2]),", "-\t\t\t\t\t\t\t\tnonJavaResourcesCounter);", "+\t\t\t\t\t\t\t\tresourcesCounter);", "-\t\t\t\t\t\tnonJavaResources[nonJavaResourcesCounter++] = res;", "+\t\t\t\t\t\tresources[resourcesCounter++] = res;", "-\t\t\tif (nonJavaResources.length != nonJavaResourcesCounter) {", "+\t\t\tif (resources.length != resourcesCounter) {", "-\t\t\t\t\tnonJavaResources,", "+\t\t\t\t\tresources,", "-\t\t\t\t\t(nonJavaResources = new IResource[nonJavaResourcesCounter]),", "+\t\t\t\t\t(resources = new IResource[resourcesCounter]),", "-\t\t\t\t\tnonJavaResourcesCounter);", "+\t\t\t\t\tresourcesCounter);", "-\t\t\tnonJavaResources = NO_NON_JAVA_RESOURCES;", "-\t\t\tnonJavaResourcesCounter = 0;", "+\t\t\tresources = NO_NON_JAVA_RESOURCES;", "+\t\t\tresourcesCounter = 0;", "-\t\treturn nonJavaResources;", "+\t\treturn resources;", "+\t}"]}], "num": 45231}