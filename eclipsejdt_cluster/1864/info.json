{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0332e389ea5195d5dc7570597a275b3f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b033a7d9e1d15f87a481fb977cdc799", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": " public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\tif ((methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangStringBuffer) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Append))) {", "-\t\t\t\tswitch (methodBinding.parameters[0].id) {", "-\t\t\t\t\tcase T_int :", "-\t\t\t\t\tcase T_byte :", "-\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t// This method binding is append(int)", "-\t\t\t\t\t\treturn APPEND_INT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t// This method binding is append(float)", "-\t\t\t\t\t\treturn APPEND_FLOAT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t// This method binding is append(long)", "-\t\t\t\t\t\treturn APPEND_LONG_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_JavaLangObject :", "-\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "-\t\t\t\t\t\treturn APPEND_OBJECT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t// This method binding is append(char)", "-\t\t\t\t\t\treturn APPEND_CHAR_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_JavaLangString :", "-\t\t\t\t\t\t// This method binding is append(java.lang.String)", "-\t\t\t\t\t\treturn APPEND_STRING_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t// This method binding is append(boolean)", "-\t\t\t\t\t\treturn APPEND_BOOLEAN_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t// This method binding is append(double)", "-\t\t\t\t\t\treturn APPEND_DOUBLE_METHOD_NAME_AND_TYPE;", "+\t\t\tif ((methodBinding.parameters.length == 1) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Append)) {", "+\t\t\t\tif (methodBinding.returnType.id == T_JavaLangStringBuffer) {", "+\t\t\t\t\tswitch (methodBinding.parameters[0].id) {", "+\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t// This method binding is append(int)", "+\t\t\t\t\t\t\treturn APPEND_INT_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t// This method binding is append(float)", "+\t\t\t\t\t\t\treturn APPEND_FLOAT_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t// This method binding is append(long)", "+\t\t\t\t\t\t\treturn APPEND_LONG_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_JavaLangObject :", "+\t\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "+\t\t\t\t\t\t\treturn APPEND_OBJECT_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t// This method binding is append(char)", "+\t\t\t\t\t\t\treturn APPEND_CHAR_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_JavaLangString :", "+\t\t\t\t\t\t\t// This method binding is append(java.lang.String)", "+\t\t\t\t\t\t\treturn APPEND_STRING_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t// This method binding is append(boolean)", "+\t\t\t\t\t\t\treturn APPEND_BOOLEAN_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t// This method binding is append(double)", "+\t\t\t\t\t\t\treturn APPEND_DOUBLE_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (methodBinding.returnType.id == T_JavaLangStringBuilder) {", "+\t\t\t\t\tswitch (methodBinding.parameters[0].id) {", "+\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t// This method binding is append(int)", "+\t\t\t\t\t\t\treturn APPEND_INT_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t// This method binding is append(float)", "+\t\t\t\t\t\t\treturn APPEND_FLOAT_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t// This method binding is append(long)", "+\t\t\t\t\t\t\treturn APPEND_LONG_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_JavaLangObject :", "+\t\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "+\t\t\t\t\t\t\treturn APPEND_OBJECT_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t// This method binding is append(char)", "+\t\t\t\t\t\t\treturn APPEND_CHAR_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_JavaLangString :", "+\t\t\t\t\t\t\t// This method binding is append(java.lang.String)", "+\t\t\t\t\t\t\treturn APPEND_STRING_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t// This method binding is append(boolean)", "+\t\t\t\t\t\t\treturn APPEND_BOOLEAN_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t// This method binding is append(double)", "+\t\t\t\t\t\t\treturn APPEND_DOUBLE_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "+\t\t\t\t\t}", "-\t\t\t\t// This method binding is toString()", "+\t\t\t\t// This method binding is intern()java.lang.String", "-\t\t\t}       ", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase 'h' :", "+\t\t\tif ((methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_boolean) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.HasNext))) {", "+\t\t\t\t// This method binding is hasNext()Z", "+\t\t\t\treturn HASNEXT_METHOD_NAME_AND_TYPE;", "+\t\t\t}", "+\t\tcase 'n' :", "+\t\t\tif ((methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangObject) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Next))) {", "+\t\t\t\t// This method binding is next()java.lang.Object", "+\t\t\t\treturn NEXT_METHOD_NAME_AND_TYPE;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e8cba9cb191d1e15c55266d984ef6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int indexOfWellKnownMethods(MethodBinding methodBinding)", "signatureAfterChange": " public int indexOfWellKnownMethods(MethodBinding methodBinding)", "diff": ["-\t\t\t\treturn FORNAME_CLASS_METHOD;", "+\t\t\t\treturn CLASS_FORNAME_METHOD;", "-\t\t\t\t\treturn DESIREDASSERTIONSTATUS_CLASS_METHOD;", "+\t\t\t\t\treturn CLASS_DESIREDASSERTIONSTATUS_METHOD;", "-\t\t\t\treturn GETCOMPONENTTYPE_CLASS_METHOD;", "+\t\t\t\treturn CLASS_GETCOMPONENTTYPE_METHOD;", "-\t\t\t\t\t\treturn APPEND_INT_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_INT_METHOD;", "-\t\t\t\t\t\treturn APPEND_FLOAT_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_FLOAT_METHOD;", "-\t\t\t\t\t\treturn APPEND_LONG_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_LONG_METHOD;", "-\t\t\t\t\t\treturn APPEND_OBJECT_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_OBJECT_METHOD;", "-\t\t\t\t\t\treturn APPEND_CHAR_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_CHAR_METHOD;", "-\t\t\t\t\t\treturn APPEND_STRING_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_STRING_METHOD;", "-\t\t\t\t\t\treturn APPEND_BOOLEAN_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_BOOLEAN_METHOD;", "-\t\t\t\t\t\treturn APPEND_DOUBLE_METHOD;", "+\t\t\t\t\t\treturn STRINGBUFFER_APPEND_DOUBLE_METHOD;", "+\t\tcase T_JavaLangStringBuilder :", "+\t\t\tif ((firstChar == 'a') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangStringBuilder) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Append))) {", "+\t\t\t\tswitch (methodBinding.parameters[0].id) {", "+\t\t\t\t\tcase T_int :", "+\t\t\t\t\tcase T_byte :", "+\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t// This method binding is append(int)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_INT_METHOD;", "+\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t// This method binding is append(float)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_FLOAT_METHOD;", "+\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t// This method binding is append(long)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_LONG_METHOD;", "+\t\t\t\t\tcase T_JavaLangObject :", "+\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_OBJECT_METHOD;", "+\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t// This method binding is append(char)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_CHAR_METHOD;", "+\t\t\t\t\tcase T_JavaLangString :", "+\t\t\t\t\t\t// This method binding is append(java.lang.String)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_STRING_METHOD;", "+\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t// This method binding is append(boolean)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_BOOLEAN_METHOD;", "+\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t// This method binding is append(double)", "+\t\t\t\t\t\treturn STRINGBUILDER_APPEND_DOUBLE_METHOD;", "+\t\t\t\t}", "+\t\t\t} else", "+\t\t\t\tif ((firstChar == 't') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ToString))) {", "+\t\t\t\t\t// This method binding is toString()", "+\t\t\t\t\treturn STRINGBUILDER_TOSTRING_METHOD;", "+\t\t\t\t} else", "+\t\t\t\t\tif ((firstChar == '<') && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init))) {", "+\t\t\t\t\t\tif ((methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_JavaLangString)) {", "+\t\t\t\t\t\t\t// This method binding is <init>(String)                    ", "+\t\t\t\t\t\t\treturn STRINGBUILDER_STRING_CONSTR_METHOD;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (methodBinding.parameters.length == 0) {", "+\t\t\t\t\t\t\t\t// This method binding is <init>()", "+\t\t\t\t\t\t\t\treturn STRINGBUILDER_DEFAULT_CONSTR_METHOD;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\tbreak;", "-\t\t\t\t\t\treturn VALUEOF_OBJECT_METHOD;", "+\t\t\t\t\t\treturn STRING_VALUEOF_OBJECT_METHOD;", "-\t\t\t\t\t\treturn VALUEOF_INT_METHOD;", "+\t\t\t\t\t\treturn STRING_VALUEOF_INT_METHOD;", "-\t\t\t\t\t\treturn VALUEOF_LONG_METHOD;", "+\t\t\t\t\t\treturn STRING_VALUEOF_LONG_METHOD;", "-\t\t\t\t\t\treturn VALUEOF_FLOAT_METHOD;", "+\t\t\t\t\t\treturn STRING_VALUEOF_FLOAT_METHOD;", "-\t\t\t\t\t\treturn VALUEOF_DOUBLE_METHOD;", "+\t\t\t\t\t\treturn STRING_VALUEOF_DOUBLE_METHOD;", "-\t\t\t\t\t\treturn VALUEOF_BOOLEAN_METHOD;", "+\t\t\t\t\t\treturn STRING_VALUEOF_BOOLEAN_METHOD;", "-\t\t\t\t\t\treturn VALUEOF_CHAR_METHOD;", "+\t\t\t\t\t\treturn STRING_VALUEOF_CHAR_METHOD;", "-\t\t\t\t\treturn GETCLASS_OBJECT_METHOD;", "-\t\t\t}\t\t\t", "+\t\t\t\t\treturn OBJECT_GETCLASS_METHOD;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase T_JavaUtilIterator :", "+\t\t\tif (methodBinding.parameters.length == 0) {", "+\t\t\t\tif (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.HasNext)) {", "+\t\t\t\t\treturn ITERATOR_HASNEXT_METHOD;", "+\t\t\t\t}", "+\t\t\t\tif (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Next)) {", "+\t\t\t\t\treturn ITERATOR_NEXT_METHOD;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 1864}