{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d46fa923bb289e73f449c511080a0c5a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7afe3ece77c8a943703a2a81bc5e9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b6fe6f5260b125d69b0514fb7ed6ac0364e3e649", "commitAfterChange": "2253f3dfcbdf32f3d1a5ff419b874f53e57d43c1", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "diff": ["-\t\tString sharedClasspath = loadClasspath();\r", "-\t\tif (sharedClasspath != null) {\r", "-\t\t\ttry {\r", "+\t\ttry {\r", "+\t\t\tString sharedClasspath = loadClasspath();\r", "+\t\t\tif (sharedClasspath != null) {\r", "-\t\t\t} catch(IOException e){\r", "-\t\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r", "-\t\t\t// extract out the output location\r", "-\t\t\tif (classpath != null && classpath.length > 0) {\r", "-\t\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];\r", "-\t\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "-\t\t\t\t\tIClasspathEntry[] copy = new IClasspathEntry[classpath.length - 1];\r", "-\t\t\t\t\tSystem.arraycopy(classpath, 0, copy, 0, copy.length);\r", "-\t\t\t\t\tclasspath = copy;\r", "-\t\t\t\t}\r", "+\t\t} catch(IOException e){\r", "+\t\t\tUtil.log(e, \r", "+\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$\r", "+\t\t\t\t+\"/.classpath, will revert to default classpath\"); //$NON-NLS-1$\r", "+\t\t\t//throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r", "+\t\t}\r", "+\t\t// extract out the output location\r", "+\t\tif (classpath != null && classpath.length > 0) {\r", "+\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];\r", "+\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "+\t\t\t\tIClasspathEntry[] copy = new IClasspathEntry[classpath.length - 1];\r", "+\t\t\t\tSystem.arraycopy(classpath, 0, copy, 0, copy.length);\r", "+\t\t\t\tclasspath = copy;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e7197f0b861ef11523367fe39f861d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b6fe6f5260b125d69b0514fb7ed6ac0364e3e649", "commitAfterChange": "2253f3dfcbdf32f3d1a5ff419b874f53e57d43c1", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "signatureAfterChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "diff": ["-\t\tString sharedClasspath = loadClasspath();\r", "-\t\tif (sharedClasspath != null) {\r", "-\t\t\ttry {\r", "+\t\ttry {\r", "+\t\t\tString sharedClasspath = loadClasspath();\r", "+\t\t\tif (sharedClasspath != null) {\r", "-\t\t\t} catch(IOException e){\r", "-\t\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r", "-\t\t\t// extract out the output location\r", "-\t\t\tif (classpath != null && classpath.length > 0) {\r", "-\t\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];\r", "-\t\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "-\t\t\t\t\toutputLocation = entry.getPath();\r", "-\t\t\t\t}\r", "+\t\t} catch(IOException e){\r", "+\t\t\tUtil.log(e, \r", "+\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$\r", "+\t\t\t\t+\"/.classpath, will revert to default output location\"); //$NON-NLS-1$\r", "+\t\t\t//throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r", "+\t\t}\r", "+\t\t// extract out the output location\r", "+\t\tif (classpath != null && classpath.length > 0) {\r", "+\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];\r", "+\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "+\t\t\t\toutputLocation = entry.getPath();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f83e2bc5c39e2c7890aeccd7becf4c33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b6fe6f5260b125d69b0514fb7ed6ac0364e3e649", "commitAfterChange": "2253f3dfcbdf32f3d1a5ff419b874f53e57d43c1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tprotected boolean generateInfos(\r \t\tOpenableElementInfo info,\r \t\tIProgressMonitor pm,\r \t\tMap newElements,\r \t\tIResource underlyingResource)\tthrows JavaModelException", "signatureAfterChange": "\r \tprotected boolean generateInfos(\r \t\tOpenableElementInfo info,\r \t\tIProgressMonitor pm,\r \t\tMap newElements,\r \t\tIResource underlyingResource)\tthrows JavaModelException", "diff": ["-\t\t\t\tString sharedClasspath = loadClasspath();\r", "-\t\t\t\tif (sharedClasspath != null) {\r", "-\t\t\t\t\ttry {\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tString sharedClasspath = loadClasspath();\r", "+\t\t\t\t\tif (sharedClasspath != null) {\r", "-\t\t\t\t\t} catch(IOException e){\r", "-\t\t\t\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r", "+\t\t\t\t} catch(IOException e){\r", "+\t\t\t\t\tUtil.log(e, \r", "+\t\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$\r", "+\t\t\t\t\t\t+\"/.classpath, will revert to default classpath\"); //$NON-NLS-1$\r", "+\t\t\t\t\t//throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r", "+\t\t\t\t}\r", "-\t\t\t\t\t// extract out the output location\r", "-\t\t\t\t\tif (classpath != null && classpath.length > 0) {\r", "-\t\t\t\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];\r", "-\t\t\t\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "-\t\t\t\t\t\t\toutputLocation = entry.getPath();\r", "-\t\t\t\t\t\t\tIClasspathEntry[] copy = new IClasspathEntry[classpath.length - 1];\r", "-\t\t\t\t\t\t\tSystem.arraycopy(classpath, 0, copy, 0, copy.length);\r", "-\t\t\t\t\t\t\tclasspath = copy;\r", "-\t\t\t\t\t\t}\r", "+\t\t\t\t// extract out the output location\r", "+\t\t\t\tif (classpath != null && classpath.length > 0) {\r", "+\t\t\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];\r", "+\t\t\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "+\t\t\t\t\t\toutputLocation = entry.getPath();\r", "+\t\t\t\t\t\tIClasspathEntry[] copy = new IClasspathEntry[classpath.length - 1];\r", "+\t\t\t\t\t\tSystem.arraycopy(classpath, 0, copy, 0, copy.length);\r", "+\t\t\t\t\t\tclasspath = copy;\r"]}], "num": 3091}