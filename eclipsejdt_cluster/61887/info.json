{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce06b03d3cd794d13d27ea970bff7f85", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1098477160326fb76cd04d04095a35b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "76b6aef868544c4d2f6d21575e84412f247472ae", "commitAfterChange": "406d61c9a16be8f709e407a59600ccbf947335dd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "\r \r \tpublic void resolve(ClassScope upperScope)", "diff": ["-\t\t\tcheckName();\r", "-\r", "-\t\t\t// and then ....deep jump into statements.....\r", "-\t\t\tif (statements != null) {\r", "-\t\t\t\tint i = 0, length = statements.length;\r", "-\t\t\t\twhile (i < length)\r", "-\t\t\t\t\tstatements[i++].resolve(scope);\r", "-\t\t\t}\r", "+\t\t\tresolveStatements(upperScope);\r", "+\t\t} \r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f11e8e9ef2e9377d0642c5a767c4d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "76b6aef868544c4d2f6d21575e84412f247472ae", "commitAfterChange": "406d61c9a16be8f709e407a59600ccbf947335dd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r \tpublic void checkName()", "signatureAfterChange": "\r \r \tpublic void resolveStatements(ClassScope upperScope)", "diff": ["-\tpublic void checkName() {\r", "-\t\t//check whether the name of the method is correct\r", "-\t}\r", "+\r", "+\tpublic void resolveStatements(ClassScope upperScope) {\r", "+\r", "+\t\tif (statements != null) {\r", "+\t\t\tint i = 0, length = statements.length;\r", "+\t\t\twhile (i < length)\r", "+\t\t\t\tstatements[i++].resolve(scope);\r"]}], "num": 61887}