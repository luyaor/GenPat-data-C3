{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05ebd8c95ac71d99597fc2f0ea68d0be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604f657b33d5102effcfa6d5e90752b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "c2d93f84777a172153dcbac16d43bc3ee8d7d762", "commitAfterChange": "e1d010570c5db8a931b881b6acf90e4de06ed138", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void addReconcileDelta(IWorkingCopy workingCopy, IJavaElementDelta delta)", "signatureAfterChange": " \tprotected void addReconcileDelta(IWorkingCopy workingCopy, IJavaElementDelta delta)", "diff": ["-\t\t// TODO: (jerome) should merge deltas if previous reconcile delta was already registered for this working copy", "-\t\tJavaModelManager.getJavaModelManager().reconcileDeltas.put(workingCopy, delta);", "+\t\tHashMap reconcileDeltas = JavaModelManager.getJavaModelManager().reconcileDeltas;", "+\t\tJavaElementDelta previousDelta = (JavaElementDelta)reconcileDeltas.get(workingCopy);", "+\t\tif (previousDelta != null) {", "+\t\t\tIJavaElementDelta[] children = delta.getAffectedChildren();", "+\t\t\tfor (int i = 0, length = children.length; i < length; i++) {", "+\t\t\t\tJavaElementDelta child = (JavaElementDelta)children[i];", "+\t\t\t\tpreviousDelta.insertDeltaTree(child.getElement(), child);", "+\t\t\t}", "+\t\t} else {", "+\t\t\treconcileDeltas.put(workingCopy, delta);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "792636d01e317797324d3a34e58e1a35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "f98ff60ea4aadb5ad960a35b0293f0998e35fc18", "commitAfterChange": "e9dab03249c4cb99686aef75ce88b855ecbdceb7", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public void mergeDeltas()", "signatureAfterChange": "\r public void mergeDeltas()", "diff": ["-\tJavaElementDelta rootDelta = new JavaElementDelta(getJavaModel());\r", "+\tIJavaElement javaModel = this.getJavaModel();\r", "+\tJavaElementDelta rootDelta = new JavaElementDelta(javaModel);\r", "-\t\tIJavaElementDelta delta = (IJavaElementDelta)deltas.next();\r", "+\t\tJavaElementDelta delta = (JavaElementDelta)deltas.next();\r", "-\t\tIJavaElementDelta[] children = delta.getAffectedChildren();\r", "-\t\tfor (int j = 0; j < children.length; j++) {\r", "-\t\t\tJavaElementDelta projectDelta = (JavaElementDelta) children[j];\r", "-\t\t\trootDelta.insertDeltaTree(projectDelta.getElement(), projectDelta);\r", "+\t\tIJavaElement element = delta.getElement();\r", "+\t\tif (javaModel.equals(element)) {\r", "+\t\t\tIJavaElementDelta[] children = delta.getAffectedChildren();\r", "+\t\t\tfor (int j = 0; j < children.length; j++) {\r", "+\t\t\t\tJavaElementDelta projectDelta = (JavaElementDelta) children[j];\r", "+\t\t\t\trootDelta.insertDeltaTree(projectDelta.getElement(), projectDelta);\r", "+\t\t\t\tinsertedTree = true;\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\trootDelta.insertDeltaTree(element, delta);\r"]}], "num": 56895}