{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "694db8d2f294e0722190a8dec93e28ce", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a93d254ae8d8cae9c973c2e15624c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "5739eb5b2f82f16d73f7174ce6602e0e03939d00", "commitAfterChange": "c18c68a976e1e7ddfc35757dbbd26a3f421830be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected void beginToCompile(org.eclipse.jdt.internal.compiler.env.ICompilationUnit[] sourceUnits, String[] bindingKeys)", "signatureAfterChange": " \tprotected void beginToCompile(org.eclipse.jdt.internal.compiler.env.ICompilationUnit[] sourceUnits, String[] bindingKeys)", "diff": ["-\t\t\t\tthis.requestedKeys.put(parsedUnit.compilationResult.getFileName(), bindingKey);", "+\t\t\t\tchar[] fileName = parsedUnit.compilationResult.getFileName();", "+\t\t\t\tObject existing = this.requestedKeys.get(fileName);", "+\t\t\t\tif (existing == null)", "+\t\t\t\t\tthis.requestedKeys.put(fileName, bindingKey);", "+\t\t\t\telse if (existing instanceof ArrayList)", "+\t\t\t\t\t((ArrayList) existing).add(bindingKey);", "+\t\t\t\telse {", "+\t\t\t\t\tArrayList list = new ArrayList();", "+\t\t\t\t\tlist.add(existing);", "+\t\t\t\t\tlist.add(bindingKey);", "+\t\t\t\t\tthis.requestedKeys.put(fileName, list);", "+\t\t\t\t} ", "+\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "464633f581666beaf4ef56251ca2c7d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "c117a64cdf0af5bb1016a70197fdaaecfa29c6f9", "commitAfterChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner, IProgressMonitor monitor)", "signatureAfterChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tICompilationUnit source = (ICompilationUnit) this.requestedSources.removeKey(fileName);", "+\t\t\t\t\t\tICompilationUnit source = (ICompilationUnit) this.requestedSources.get(fileName);", "-\t\t\t\t\t\tObject key = this.requestedKeys.removeKey(fileName);", "+\t\t\t\t\t\tObject key = this.requestedKeys.get(fileName);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\t// remove at the end so that we don't resolve twice if a source and a key for the same file name have been requested", "+\t\t\t\t\t\tthis.requestedSources.removeKey(fileName);", "+\t\t\t\t\t\tthis.requestedKeys.removeKey(fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a370ea2bbdefa9fb8031322f8ff2e1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "729d195ede25ca6ee5a445494cda26bf5f4b94a7", "commitAfterChange": "9e025388268143d227b16d19d468b4e4bff0d580", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getCompilerBinding(CompilationUnitResolver resolver)", "diff": ["-\t\t\tif (resolver.requestedKeys.containsKey(fileName) || resolver.requestedSources.containsKey(fileName))", "-\t\t\t\tthrow new RuntimeException(\"Key is part of a file that is being requested already\"); //$NON-NLS-1$", "-\t\t\tresolver.process(parsedUnit, resolver.totalUnits+1);", "+\t\t\t// don't resolve a second time the same unit (this would create the same bindingd twice)", "+\t\t\tif (!resolver.requestedKeys.containsKey(fileName) && !resolver.requestedSources.containsKey(fileName))", "+\t\t\t\tresolver.process(parsedUnit, resolver.totalUnits+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809ca537922cb64bc000a06a4998ee18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "65bc58d731b2b7495611004f31fbf68869bf0c34", "commitAfterChange": "a618dea008dd005a2062d94159d61d7900b021b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getCompilerBinding()", "diff": ["-\t Binding getCompilerBinding(CompilationUnitResolver resolver) {", "-\t\tCompilationUnitDeclaration parsedUnit = getCompilationUnitDeclaration(resolver.lookupEnvironment);", "+\t Binding getCompilerBinding() {", "+\t\tCompilationUnitDeclaration parsedUnit = getCompilationUnitDeclaration();", "-\t\t\tif (!resolver.requestedKeys.containsKey(fileName) && !resolver.requestedSources.containsKey(fileName))", "-\t\t\t\tresolver.process(parsedUnit, resolver.totalUnits+1);", "+\t\t\tif (!this.resolver.requestedKeys.containsKey(fileName) && !this.resolver.requestedSources.containsKey(fileName))", "+\t\t\t\tthis.resolver.process(parsedUnit, this.resolver.totalUnits+1);", "-\t\treturn getCompilerBinding(parsedUnit, resolver);", "+\t\treturn getCompilerBinding(parsedUnit);"]}], "num": 5697}