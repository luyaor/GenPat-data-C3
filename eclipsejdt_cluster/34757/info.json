{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14fd6665329b652ba2f165d31a152076", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "034a77d769f2110497abb22d223d222e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 264, "signatureBeforeChange": " public void test116()", "signatureAfterChange": " public void test116()", "diff": ["-\tString expectedOutput = new CompilerOptions(options).sourceLevel < ClassFileConstants.JDK1_6", "-\t?\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tZork foo() {}\\n\" + ", "-\t\t\"\t^^^^\\n\" + ", "-\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\"\tObject foo() {\\n\" + ", "-\t\t\"\t       ^^^^^\\n\" + ", "-\t\t\"The method foo() of type X must override a superclass method\\n\" + ", "-\t\t\"----------\\n\"", "-\t:\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tZork foo() {}\\n\" + ", "-\t\t\"\t^^^^\\n\" + ", "-\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\"\tObject foo() {\\n\" + ", "-\t\t\"\t       ^^^^^\\n\" + ", "-\t\t\"The method foo() of type X must override or implement a supertype method\\n\" + ", "-\t\t\"----------\\n\";\t", "-   \tthis.runNegativeTest(", "+\tthis.runNegativeTest(", "-\t\texpectedOutput,", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tZork foo() {}\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tObject foo() {\\n\" + ", "+\t\t\"\t       ^^^^^\\n\" + ", "+\t\tmustOverrideMessage(\"foo()\", \"X\") + ", "+\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b68e95ef0c5dbfbc227b55411237fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 212, "signatureBeforeChange": " \tpublic void test074a()", "signatureAfterChange": " \tpublic void test074a()", "diff": ["-\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "-\t\t?\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                        ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                             ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type I must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t:\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                        ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                             ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type I must override or implement a supertype method\\n\" + ", "-\t\t\t\"----------\\n\";\t\t", "-\t\t\texpectedOutput);", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in I.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                        ^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in I.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                             ^^^^^^^\\n\" + ", "+\t\t\tmustOverrideMessage(\"clone()\", \"I\") + ", "+\t\t\t\"----------\\n\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ccb534df05fad6f4248b715a811f7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 211, "signatureBeforeChange": " \tpublic void test074()", "signatureAfterChange": " \tpublic void test074()", "diff": ["-\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "-\t\t?\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                  ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type J must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t:\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                  ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type J must override or implement a supertype method\\n\" + ", "-\t\t\t\"----------\\n\";\t\t", "-\t\t\texpectedOutput);", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in I.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                                  ^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in I.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "+\t\t\tmustOverrideMessage(\"clone()\", \"J\") + ", "+\t\t\t\"----------\\n\"", "+\t\t);"]}], "num": 34757}