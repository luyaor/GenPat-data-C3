{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89d171ded646b36e60126256bc4d7e96", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4811df02820fa6f0cde9413771915402", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "44b2ae0b9ea2797846c8f36e5cf3be1acaab875d", "commitAfterChange": "0492d8e41c1aba4d81d43f5d644f4506ed10c8ab", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "signatureAfterChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "diff": ["-\t\tif (haveProperTargetType || !invocation.getExpressionContext().definesTargetType()) {", "+\t\tboolean inferredInvocationType = false;", "+\t\tif (targetType != null || !invocation.getExpressionContext().definesTargetType()) {", "+\t\t\t\t\tinferredInvocationType = true;", "-\t\tif (!haveProperTargetType && invocation.getExpressionContext().definesTargetType())", "-\t\t\treturn method; // still not ready!", "-", "-\t\tif (finalMethod != null) {", "+\t\tif (inferredInvocationType) {", "+\t\t} else if (!haveProperTargetType && invocation.getExpressionContext().definesTargetType()) {", "+\t\t\treturn method; // still not ready!"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a8ff00c64586e1638e91db1c8d2d31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "341ead40b71a0bffec0f8325f6b29d2b567caf8a", "commitAfterChange": "f5884fa8b0573c548eaeabaa37cd99c51e41fd3b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "signatureAfterChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "diff": ["-\t\tboolean inferredInvocationType = false;", "-\t\tif (targetType != null || !invocation.getExpressionContext().definesTargetType()) {", "+\t\tif (haveProperTargetType || !invocation.getExpressionContext().definesTargetType()) {", "-\t\t\t\t\tinferredInvocationType = true;", "-\t\tif (inferredInvocationType) {", "+\t\tif (!haveProperTargetType && invocation.getExpressionContext().definesTargetType())", "+\t\t\treturn method; // still not ready!", "+", "+\t\tif (finalMethod != null) {", "-\t\t} else if (!haveProperTargetType && invocation.getExpressionContext().definesTargetType()) {", "-\t\t\treturn method; // still not ready!"]}], "num": 8238}