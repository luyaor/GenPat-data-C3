{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5de6dcc1ff1871d062c5910ccf4fad6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19875dac7610c0fd70ac2b5d9699174e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "8bcd93659b03cef1840f96fe89a46264aadd1f45", "commitAfterChange": "1e32662c898d48e42c11c75277a879371be6f4bc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static final int[] getMatchingRegions(String pattern, String name, int matchRule)", "signatureAfterChange": " public static final int[] getMatchingRegions(String pattern, String name, int matchRule)", "diff": ["+\t\tcase SearchPattern.R_SUBSTRING_MATCH:", "+\t\t\tif (patternLength <= nameLength) {", "+\t\t\t\tint next = CharOperation.indexOf(pattern.toCharArray(), name.toCharArray(), false);", "+\t\t\t\treturn next >= 0 ? new int[] {next, patternLength} : null;", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d82e68f41ec258a0c4b695252722ea0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "9fd2916b8907779bca609e5ee05006511e7cfce5", "commitAfterChange": "490ee096388ec5ea05bab9dd08dfca50fb5379f6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["+\t\tfinal Annotation[] annotations = previousVariable.annotations;", "+\t\tif (annotations != null) {", "+\t\t\tfinal int annotationsLength = annotations.length;", "+\t\t\tSystem.arraycopy(annotations, 0, declaration.annotations = new Annotation[annotationsLength], 0, annotationsLength);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "576b81b4bbbf0af3297f2e7aaa606fa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "efd39c4e3bbbc1ff2403eb10e8bcc419fecf75d8", "commitAfterChange": "e91e9b805ee7b378e28d5d6fb52f9fda14a67a4d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private IGenericType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IGenericType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "diff": ["+\t\t", "+\t\t// case of binary inner type -> take the last part", "+\t\tint start = CharOperation.lastIndexOf('$', simpleName) + 1;", "+\t\tif (start != 0) {", "+\t\t\tint nameLength = simpleName.length - start;", "+\t\t\tSystem.arraycopy(simpleName, start, simpleName = new char[nameLength], 0, nameLength);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f63d6b0e337adde8598e7692459abc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "38faf3efd9d7a9e66ede29f2210a34a5031698a0", "commitAfterChange": "102c35a2a8562c276abba3a19ac61f3d18639af8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate IClassFile getClassFile(char[] fileName)", "signatureAfterChange": " \tprivate IClassFile getClassFile(char[] fileName)", "diff": ["+\t\tint jarSeparator = CharOperation.indexOf(IDependent.JAR_FILE_ENTRY_SEPARATOR, fileName);", "-\t\tif (lastSlash == -1)", "-\t\t\treturn null;", "-\t\tIPackageFragment pkg = getPackageFragment(fileName, lastSlash);", "+\t\tif (lastSlash <= jarSeparator) // if jarSeparator == -1 and there is no slash, lastSlash should be 0", "+\t\t\tlastSlash = jarSeparator+1;", "+\t\tIPackageFragment pkg = getPackageFragment(fileName, lastSlash, jarSeparator);", "-\t\tint start;", "-\t\treturn pkg.getClassFile(new String(fileName, start = lastSlash+1, fileName.length - start));", "+\t\tint start = lastSlash == jarSeparator+1 ? lastSlash : lastSlash+1;", "+\t\treturn pkg.getClassFile(new String(fileName, start, fileName.length - start));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de645043ec477b8de6214f25d64f86c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9fd2916b8907779bca609e5ee05006511e7cfce5", "commitAfterChange": "490ee096388ec5ea05bab9dd08dfca50fb5379f6", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["+\t\tfinal Annotation[] annotations = previousVariable.annotations;", "+\t\tif (annotations != null) {", "+\t\t\tfinal int annotationsLength = annotations.length;", "+\t\t\tSystem.arraycopy(annotations, 0, declaration.annotations = new Annotation[annotationsLength], 0, annotationsLength);", "+\t\t}"]}], "num": 8181}