{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41a617117eb0c8cb6d6fb829ab77318f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5295962440194c0c563d17fde75b908c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["+\t\t\t\t\t\tif (this.initialization instanceof CastExpression ", "+\t\t\t\t\t\t\t\t&& (this.initialization.bits & ASTNode.UnnecessaryCastMASK) == 0) {", "+\t\t\t\t\t\t\tCastExpression.checkNeedForAssignedCast(scope, variableType, (CastExpression) this.initialization);", "+\t\t\t\t\t\t}\t", "+\t\t\t\t\t\tif (this.initialization instanceof CastExpression ", "+\t\t\t\t\t\t\t\t&& (this.initialization.bits & ASTNode.UnnecessaryCastMASK) == 0) {", "+\t\t\t\t\t\t\tCastExpression.checkNeedForAssignedCast(scope, variableType, (CastExpression) this.initialization);", "+\t\t\t\t\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd38dccc23b34cd188692c7a5076fbb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (this.initialization instanceof CastExpression ", "+\t\t\t\t\t\t\t\t\t&& (this.initialization.bits & ASTNode.UnnecessaryCastMASK) == 0) {", "+\t\t\t\t\t\t\t\tCastExpression.checkNeedForAssignedCast(initializationScope, fieldType, (CastExpression) this.initialization);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tif (this.initialization instanceof CastExpression ", "+\t\t\t\t\t\t\t\t\t&& (this.initialization.bits & ASTNode.UnnecessaryCastMASK) == 0) {", "+\t\t\t\t\t\t\t\tCastExpression.checkNeedForAssignedCast(initializationScope, fieldType, (CastExpression) this.initialization);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t"]}], "num": 51320}