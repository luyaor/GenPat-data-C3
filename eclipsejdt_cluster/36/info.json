{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8104f181d2a85803889f9d8b06c7e8ce", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d459c039ed7d2fc17ff4b0aa2d2ddb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "b7e412596013883ea5a197320620d3a941f98770", "commitAfterChange": "cc9c0e2f2fd1f7dbe2567253bf0c6cb676752fcb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "signatureAfterChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "diff": ["-\t\tif (!valueType.isCompatibleWith(requiredType)) {", "-\t\t\tif (!(requiredType.isArrayType() && requiredType.dimensions() == 1 && valueType.isCompatibleWith(requiredType.leafComponentType()))) {", "+\t\tTypeBinding leafType = requiredType.leafComponentType();", "+\t\tif (!((this.value.isConstantValueOfTypeAssignableToType(valueType, requiredType)", "+\t\t\t\t|| (requiredType.isBaseType() && BaseTypeBinding.isWidening(requiredType.id, valueType.id)))", "+\t\t\t\t|| valueType.isCompatibleWith(requiredType))) {", "+", "+\t\t\tif (!(requiredType.isArrayType() ", "+\t\t\t\t\t&& requiredType.dimensions() == 1 ", "+\t\t\t\t\t&& (this.value.isConstantValueOfTypeAssignableToType(valueType, leafType)", "+\t\t\t\t\t\t\t|| (leafType.isBaseType() && BaseTypeBinding.isWidening(leafType.id, valueType.id)))", "+\t\t\t\t\t\t\t|| valueType.isCompatibleWith(leafType))) {", "+\t\t\t\t", "-\t\t\tTypeBinding leafType = requiredType.leafComponentType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8faca17b54247d557a3ef48b6398de5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "80080d1e96379be6c9c99ed84d6a5c9d17d9a3c6", "commitAfterChange": "ae07afa33c5a0a665d213062189be9e8f0f95c54", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t(this.requestor.isAllowingRequiredProposals(CompletionProposal.FIELD_REF, CompletionProposal.TYPE_REF) || ", "+\t\t\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.METHOD_REF, CompletionProposal.TYPE_REF))) {", "-\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t(this.requestor.isAllowingRequiredProposals(CompletionProposal.FIELD_REF, CompletionProposal.TYPE_REF) ||", "+\t\t\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.METHOD_REF, CompletionProposal.TYPE_REF))) {", "-\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t(this.requestor.isAllowingRequiredProposals(CompletionProposal.FIELD_REF, CompletionProposal.TYPE_REF) ||", "+\t\t\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.METHOD_REF, CompletionProposal.TYPE_REF))) {"]}], "num": 36}