{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee8dec6bbdf8593016ea70b3ccd4592c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c7347557a78033bd5ecec31182c7d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "83445beb69e15e5eb2488d8746136cbbd8c4461a", "commitAfterChange": "cff902ed861deb5cff157c45c8eb21f377de7ae3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic boolean setUpperBounds(TypeBinding[] upperBounds, ReferenceBinding javaLangObject)", "signatureAfterChange": " \t \tpublic boolean setUpperBounds(TypeBinding[] upperBounds, ReferenceBinding javaLangObject)", "diff": ["+\t\tif (!isConsistentIntersection(upperBounds))", "+\t\t\treturn false;", "-\t\t\tif (!aBound.isWildcard() && !aBound.isTypeVariable() && aBound.isProperType(true)) {", "-\t\t\t\t// check for inconsistency between any two real types:", "-\t\t\t\tfor (int j = 0; j < upperBounds.length; j++) {", "-\t\t\t\t\tif (i == j) continue;", "-\t\t\t\t\tTypeBinding otherBound = upperBounds[j];", "-\t\t\t\t\tif (!otherBound.isWildcard() && !otherBound.isTypeVariable() && otherBound.isProperType(true))", "-\t\t\t\t\t\tif (aBound.erasure().isCompatibleWith(otherBound.erasure()))", "-\t\t\t\t\t\t\tif (!aBound.isCompatibleWith(otherBound))", "-\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t\t\tthis.superclass = (ReferenceBinding) upperBounds[i];", "+\t\t\t\t\tthis.superclass = (ReferenceBinding) aBound;", "-\t\t\t\t// TODO: what about additional super classes?? (see isCompatibleWith)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11e00527be690352aca374e18dcbae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeDeclarationImpl.java", "commitBeforeChange": "238b301df7cb5125a4e6d087ba6269a3cf07b5f3", "commitAfterChange": "3aebcb4b2371750285802175f3c95756763f800e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public String toString()", "signatureAfterChange": "          public String toString()", "diff": ["-    \tif( binding.isRawType() || !binding.isParameterizedType() )", "-    \t\treturn getQualifiedName();", "-    \t", "-    \tfinal StringBuilder buffer = new StringBuilder();", "-    \tbuffer.append(getQualifiedName());", "-    \tfinal ITypeBinding[] typeArgs = binding.getTypeArguments();", "-    \tif(typeArgs != null){", "-    \t\tbuffer.append('<');    \t", "-\t    \tfor( int i=0; i<typeArgs.length; i++ ){", "-\t    \t\tif( i != 0 )", "-\t    \t\t\tbuffer.append(',');", "-\t    \t\tbuffer.append(typeArgs[i].getName());", "-\t    \t}", "-\t    \tbuffer.append('>');", "-    \t}", "-    \t", "-        return buffer.toString();\t\t", "+\t\treturn binding.getQualifiedName();    "]}], "num": 40998}