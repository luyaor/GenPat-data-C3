{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fce879d8a51dafd6a87e55b5806b05b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a108ce41d98c4b5730513c0348d7a89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3f665dc08ffa02e27b74efb0940c16f2120a11f8", "commitAfterChange": "307e2de84d078daed3099015a7ac89d980746b6b", "methodNumberBeforeChange": 606, "methodNumberAfterChange": 606, "signatureBeforeChange": " \tpublic void test0588()", "signatureAfterChange": " \tpublic void test0588()", "diff": ["-\t\t\t\t\"public class X<S extends Comparable<S>> {\\n\" + ", "-\t\t\t\t\"    public void f() {\\n\" + ", "-\t\t\t\t\"        Class<S> currentClass = null;\\n\" + ", "-\t\t\t\t\"        boolean b = currentClass == Long.class;\\n\" + // not provably distinct types", "-\t\t\t\t\"\t\t\\n\" + ", "-\t\t\t\t\"\t\tboolean c = X.class == Long.class;\\n\" + // provably distinct types", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"}\\n\",", "+    \t\t\t\"public class X<S extends Comparable<S>> {\\n\" + ", "+    \t\t\t\"\tpublic void f() {\\n\" + ", "+    \t\t\t\"\t\tClass<? extends Comparable<?>> cc = Long.class;\\n\" + ", "+    \t\t\t\"\t\tClass<S> currentClass = null;\\n\" + ", "+    \t\t\t\"\t\tboolean b = currentClass == Long.class;\\n\" + ", "+    \t\t\t\"\t\tboolean c = X.class == Long.class;\\n\" + ", "+    \t\t\t\"    }\\n\" + ", "+    \t\t\t\"}\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73bd1e709170ed2fe6448ff72bd7305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "2ce6255dd4ec5ed8642a03ac881dd120c66b8a90", "commitAfterChange": "44812880b1f64f568edbe98bb8d70e4f3eb124f9", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic void testBug65180b()", "signatureAfterChange": " \tpublic void testBug65180b()", "diff": ["-\t\t\t\t\t\"\tpublic class Inner {\\n\" + ", "-\t\t\t\t\t\"\t\t/**\\n\" + ", "-\t\t\t\t\t\"\t\t * Does something.\\n\" + ", "-\t\t\t\t\t\"\t\t * \\n\" + ", "-\t\t\t\t\t\"\t\t * @see Test#testFunc\\n\" + ", "-\t\t\t\t\t\"\t\t * @see Test#testFunc()\\n\" + ", "-\t\t\t\t\t\"\t\t */\\n\" + ", "-\t\t\t\t\t\"\t\tpublic void innerFunc() {\\n\" + ", "-\t\t\t\t\t\"\t\t\ttestFunc();\\n\" + ", "-\t\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\t\"\t\\n\" + ", "-\t\t\t\t\t\"\tpublic void testFunc() {}\\n\" + ", "-\t\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\t\"\\n\"", "+\t\t\t\t\"\tpublic class Inner {\\n\" + ", "+\t\t\t\t\"\t\t/**\\n\" + ", "+\t\t\t\t\"\t\t * Does something.\\n\" + ", "+\t\t\t\t\"\t\t * \\n\" + ", "+\t\t\t\t\"\t\t * @see Test#testFunc\\n\" + ", "+\t\t\t\t\"\t\t * @see Test#testFunc()\\n\" + ", "+\t\t\t\t\"\t\t */\\n\" + ", "+\t\t\t\t\"\t\tpublic void innerFunc() {\\n\" + ", "+\t\t\t\t\"\t\t\ttestFunc();\\n\" + ", "+\t\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\t\\n\" + ", "+\t\t\t\t\"\tpublic void testFunc() {}\\n\" + ", "+\t\t\t\t\"}\\n\""]}], "num": 58782}