{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d905cf77c1caae17573bf044486165f6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b12639dccc0b5c16430edf6ed375674e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "d5bf24a5adf23d2657a6e779176b2c9b14138ec2", "commitAfterChange": "fe650c9f34b5f46aea24c9c914c82b1f8d0ec026", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void discardJobsUntilNextProjectAddition(String jobFamily)", "signatureAfterChange": "\r public void discardJobsUntilNextProjectAddition(String jobFamily)", "diff": ["-\t\t// wait until current job has completed\r", "-\t\twhile (thread != null && executing){\r", "-\t\t\ttry {\r", "-\t\t\t\tThread.currentThread().sleep(50);\r", "-\t\t\t} catch(InterruptedException e){\r", "-\t\t\t}\r", "-\t\t}\r", "-\r", "-\t\t\tif (jobFamily == null) continue; // discard\r", "-\t\t\tif (currentJob.belongsTo(jobFamily)){ // might discard\r", "-\t\t\t\tif (!(foundProjectAddition || (foundProjectAddition = currentJob instanceof IndexAllProject))) continue; // discard\r", "+\t\t\tboolean discard = jobFamily == null;\r", "+\t\t\tif (!discard && currentJob.belongsTo(jobFamily)){ // might discard\r", "+\t\t\t\tif (!(foundProjectAddition || (foundProjectAddition = currentJob instanceof IndexAllProject))) {\r", "+\t\t\t\t\tdiscard = true;\r", "+\t\t\t\t}\r", "-\t\t\tawaitingJobs[++loc] = currentJob;\r", "+\t\t\tif (discard) {\r", "+\t\t\t\tif (i == jobStart) {\r", "+\t\t\t\t\t// request a cancel and wait until current job has accepted the cancel\r", "+\t\t\t\t\tcurrentJob.cancel();\r", "+\t\t\t\t\twhile (thread != null && executing){\r", "+\t\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t\tThread.currentThread().sleep(50);\r", "+\t\t\t\t\t\t} catch(InterruptedException e){\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tawaitingJobs[++loc] = currentJob;\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0dd71af02c5e510588048744ee02744", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "commitAfterChange": "c84496f37e5dff715764911530c1fceaa60b14ee", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["+\t\tboolean isThisReceiver = this.receiver instanceof ThisReference;", "-\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "-\t\t\tif (!isStatic){", "-\t\t\t\tcodeStream.invokeObjectGetClass();", "-\t\t\t\tcodeStream.pop();", "+\t\t\tif (!isThisReceiver) {", "+\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "+\t\t\t\tif (!isStatic){", "+\t\t\t\t\tcodeStream.invokeObjectGetClass();", "+\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t}", "-\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "-\t\t\tif (valueRequired || currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4) {", "+\t\t\tif (valueRequired || (!isThisReceiver && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)) {", "+\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "-\t\t\t\tif (!isStatic){", "-\t\t\t\t\tif (!(this.receiver instanceof ThisReference)) codeStream.invokeObjectGetClass(); // perform null check", "-\t\t\t\t\tcodeStream.pop();", "+\t\t\t\tif (!isThisReceiver) {", "+\t\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);\t\t\t\t", "+\t\t\t\t\tif (!isStatic){", "+\t\t\t\t\t\tcodeStream.invokeObjectGetClass(); // perform null check", "+\t\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t\t}"]}], "num": 66869}