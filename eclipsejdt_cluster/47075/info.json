{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35abe946155d34b7274f6ceef5d0d968", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed74839ccb54a3695cf7621531120f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "9c377922fe401713f5937bb475dd1fc1bedb4d8f", "commitAfterChange": "6a9a7eb1601e3179b18eecef90d5d4fdfbc52bfa", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\t\t\t\treturn Util.bind(\"classpath.unboundContainerPath\", description); //$NON-NLS-1$", "+\t\t\t\t\treturn Util.bind(\"classpath.unboundContainerPath\", description, javaProject.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\treturn Util.bind(\"classpath.invalidContainer\", description); //$NON-NLS-1$", "+\t\t\t\t\treturn Util.bind(\"classpath.invalidContainer\", description, javaProject.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\treturn Util.bind(\"classpath.unboundVariablePath\", path.makeRelative().toString()); //$NON-NLS-1$", "+\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\treturn Util.bind(\"classpath.unboundVariablePath\", path.makeRelative().toString(), javaProject.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\tjavaProject = (IJavaProject)elements[0];", "-\t\t\t\t\treturn Util.bind(\"classpath.cycle\", javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\treturn Util.bind(\"classpath.cycle\", javaProject.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\treturn Util.bind(\"classpath.disabledExclusionPatterns\", path.makeRelative().toString()); //$NON-NLS-1$", "+\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\tString projectName = javaProject.getElementName();", "+\t\t\t\tIPath newPath = path;", "+\t\t\t\tif (path.segment(0).toString().equals(projectName)) {", "+\t\t\t\t\tnewPath = path.removeFirstSegments(1);", "+\t\t\t\t}", "+\t\t\t\treturn Util.bind(\"classpath.disabledExclusionPatterns\", newPath.makeRelative().toString(), projectName); //$NON-NLS-1$", "-\t\t\t\t\treturn Util.bind(\"classpath.disabledMultipleOutputLocations\", path.makeRelative().toString()); //$NON-NLS-1$", "+\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\tprojectName = javaProject.getElementName();", "+\t\t\t\tnewPath = path;", "+\t\t\t\tif (path.segment(0).toString().equals(projectName)) {", "+\t\t\t\t\tnewPath = path.removeFirstSegments(1);", "+\t\t\t\t}", "+\t\t\t\treturn Util.bind(\"classpath.disabledMultipleOutputLocations\", newPath.makeRelative().toString(), projectName); //$NON-NLS-1$", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757867f8479ed6e6a1a73436298007f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "0d655eb7c5734b22e978a732e9dc70711c6565d1", "commitAfterChange": "e8e6bc5be64017fb64d9068aa06ee69d945c7195", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 214, "signatureBeforeChange": " \tpublic void _test0580() throws JavaModelException", "signatureAfterChange": " \tpublic void test0580() throws JavaModelException", "diff": ["-\tpublic void _test0580() throws JavaModelException {", "+\tpublic void test0580() throws JavaModelException {", "+\t\t\tString source = \"package p;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\td String[][]tab;\\n\" +", "+\t\t\t\"}\";", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\td\\n\" +", "-\t\t\t\t\"\t\\n\" +", "-\t\t\t\t\"\tString[][]tab;\\n\" +", "-\t\t\t\t\"}\",", "-\t\t\t\tworkingCopy);", "+\t\t\t\tsource,", "+\t\t\t\tworkingCopy,", "+\t\t\t\tfalse);", "+\t\t\tCompilationUnit compilationUnit = (CompilationUnit) node;", "+\t\t\tnode = getASTNode(compilationUnit, 0, 0);", "+\t\t\tassertEquals(\"wrong type\", ASTNode.FIELD_DECLARATION, node.getNodeType());", "+\t\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) node;", "+\t\t\tcheckSourceRange(fieldDeclaration, \"d String[][]\", source.toCharArray());", "+\t\t\tType type = fieldDeclaration.getType();", "+\t\t\tassertTrue(\"Not a simple type\", type.isSimpleType());", "+\t\t\tList fragments = fieldDeclaration.fragments();", "+\t\t\tassertEquals(\"Wrong size\", 1, fragments.size());", "+\t\t\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) fragments.get(0);", "+\t\t\tassertEquals(\"Wrong extended dimensions\", 2, fragment.getExtraDimensions());"]}], "num": 47075}