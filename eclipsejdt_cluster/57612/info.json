{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd5523e29e766c8d34db13e01f6ae962", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d9bd3dc3d653267d6a281459633ef7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(VariableDeclarationFragment node)", "diff": ["-\t\tif (node.getInitializer() != null) {", "-\t\t\tthis.wrapIndexes.add(this.tm.firstIndexIn(node.getInitializer(), -1));", "-\t\t\tthis.wrapParentIndex = this.tm.firstIndexBefore(node.getInitializer(), TokenNameEQUAL);", "-\t\t\tthis.wrapGroupEnd = this.tm.lastIndexIn(node.getInitializer(), -1);", "-\t\t\thandleWrap(this.options.alignment_for_assignment);", "-\t\t}", "+\t\tif (node.getInitializer() == null)", "+\t\t\treturn true;", "+\t\tint wrapIndex = this.tm.firstIndexIn(node.getInitializer(), -1);", "+\t\tif (this.tm.get(wrapIndex).getLineBreaksBefore() > 0)", "+\t\t\treturn true;", "+\t\tint equalIndex = this.tm.firstIndexBefore(node.getInitializer(), TokenNameEQUAL);", "+", "+\t\tthis.wrapIndexes.add(wrapIndex);", "+\t\tthis.secondaryWrapIndexes.add(equalIndex);", "+\t\tthis.wrapParentIndex = equalIndex - 1;", "+\t\tthis.wrapGroupEnd = this.tm.lastIndexIn(node.getInitializer(), -1);", "+\t\thandleWrap(this.options.alignment_for_assignment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33f500e25c5352c11bfed50c5f1d77b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(IfStatement node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(IfStatement node)", "diff": ["-\t\t\tif (this.tm.get(thenIndex).getLineBreaksBefore() == 0)", "+\t\t\tif (this.tm.get(thenIndex).getLineBreaksBefore() == 0) {", "+\t\t\t\tthis.wrapParentIndex = this.tm.firstIndexAfter(node.getExpression(), TokenNameRPAREN);", "+\t\t\t\tthis.wrapGroupEnd = this.tm.lastIndexIn(node.getThenStatement(), -1);", "+\t\t\t\thandleWrap(this.options.alignment_for_compact_if, node);", "+\t\t\t}", "-\t\t\tif (this.tm.get(elseIndex).getLineBreaksBefore() == 0)", "+\t\t\tif (this.tm.get(elseIndex).getLineBreaksBefore() == 0) {", "-\t\t}", "-\t\tif (!this.wrapIndexes.isEmpty()) {", "-\t\t\tthis.wrapParentIndex = this.tm.firstIndexAfter(node.getExpression(), TokenNameRPAREN);", "-\t\t\tthis.wrapGroupEnd = this.tm.lastIndexIn(node, -1);", "-\t\t\thandleWrap(this.options.alignment_for_compact_if, node);", "+\t\t\t\tthis.wrapParentIndex = this.tm.firstIndexAfter(node.getExpression(), TokenNameRPAREN);", "+\t\t\t\tthis.wrapGroupEnd = this.tm.lastIndexIn(elseStatement, -1);", "+\t\t\t\thandleWrap(this.options.alignment_for_compact_if, node);", "+\t\t\t}"]}], "num": 57612}