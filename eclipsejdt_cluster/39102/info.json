{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "015419a48d5b419b06b2ba1cf04eaf91", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b56e2bc754f4d972d1b8ff12a8c90f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tif (expectedType != enclosingInstanceType) // must call before computeConversion() and typeMismatchError()", "+\t\t\t\tscope.compilationUnitScope().recordTypeConversion(expectedType, enclosingInstanceType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cfb364c932a94979f4cd3acc3b6d0d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "diff": ["+\t\t\t\t\tif (expectedElementsTb != expressionTb) // must call before computeConversion() and typeMismatchError()", "+\t\t\t\t\t\tscope.compilationUnitScope().recordTypeConversion(expectedElementsTb, expressionTb);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c029da8766af255601f50b96d67c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["+\t\tif (methodType != expressionType) // must call before computeConversion() and typeMismatchError()", "+\t\t\tscope.compilationUnitScope().recordTypeConversion(methodType, expressionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d89b4d42b4670ca64a41f776fcc82c0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tif (lhsType != rhsType) // must call before computeConversion() and typeMismatchError()", "+\t\t\tscope.compilationUnitScope().recordTypeConversion(lhsType, rhsType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9c33ed8b4666272b5496d82f065e54c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t \tvoid checkMemberValues(MemberValuePair[] valuePairs, Scope scope)", "signatureAfterChange": " \t \t \tvoid checkMemberValues(MemberValuePair[] valuePairs, Scope scope)", "diff": ["+\t\t\t\t\tif (expectedValueType != valueType) // must call before computeConversion() and typeMismatchError()", "+\t\t\t\t\t\tscope.compilationUnitScope().recordTypeConversion(expectedValueType, valueType);"]}], "num": 39102}