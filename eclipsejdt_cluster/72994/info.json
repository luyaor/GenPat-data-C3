{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cae0b5baa30b5dccd963dea9025e89f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e4d7f30638d5c5fb0242660c85c502", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 285, "signatureBeforeChange": " public void testBug330313_wksp1_12()", "signatureAfterChange": " public void testBug330313_wksp1_12()", "diff": ["-\t\t\"\t\t\t\tdoc.addPositionUpdater(\\n\" + ", "-\t\t\"\t\t\t\t\t\tnew DefaultPositionUpdater(POS_CATEGORY) {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\tprotected boolean notDeleted() {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\tif (fOffset < fPosition.offset\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t&& (fPosition.offset\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t+ fPosition.length < fOffset\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ fLength)) {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\treturn false;\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t}\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\treturn true;\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t}\\n\" + ", "-\t\t\"\t\t\t\t\t\t});\\n\" + ", "+\t\t\"\t\t\t\tdoc.addPositionUpdater(new DefaultPositionUpdater(POS_CATEGORY) {\\n\" + ", "+\t\t\"\t\t\t\t\tprotected boolean notDeleted() {\\n\" + ", "+\t\t\"\t\t\t\t\t\tif (fOffset < fPosition.offset\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t&& (fPosition.offset + fPosition.length < fOffset\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t+ fLength)) {\\n\" + ", "+\t\t\"\t\t\t\t\t\t\treturn false;\\n\" + ", "+\t\t\"\t\t\t\t\t\t}\\n\" + ", "+\t\t\"\t\t\t\t\t\treturn true;\\n\" + ", "+\t\t\"\t\t\t\t\t}\\n\" + ", "+\t\t\"\t\t\t\t});\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ebee197ea6d40b16b34d72276d8e191", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 286, "signatureBeforeChange": " public void testBug330313_wksp1_12_njl()", "signatureAfterChange": " public void testBug330313_wksp1_12_njl()", "diff": ["-\t\t\"\t\t\t\tdoc.addPositionUpdater(\\n\" + ", "-\t\t\"\t\t\t\t\t\tnew DefaultPositionUpdater(POS_CATEGORY) {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\tprotected boolean notDeleted() {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\tif (fOffset < fPosition.offset\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t&& (fPosition.offset\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t+ fPosition.length < fOffset\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ fLength)) {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\treturn false;\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t}\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\treturn true;\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t}\\n\" + ", "-\t\t\"\t\t\t\t\t\t});\\n\" + ", "+\t\t\"\t\t\t\tdoc.addPositionUpdater(new DefaultPositionUpdater(POS_CATEGORY) {\\n\" + ", "+\t\t\"\t\t\t\t\tprotected boolean notDeleted() {\\n\" + ", "+\t\t\"\t\t\t\t\t\tif (fOffset < fPosition.offset\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t&& (fPosition.offset + fPosition.length < fOffset\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t+ fLength)) {\\n\" + ", "+\t\t\"\t\t\t\t\t\t\treturn false;\\n\" + ", "+\t\t\"\t\t\t\t\t\t}\\n\" + ", "+\t\t\"\t\t\t\t\t\treturn true;\\n\" + ", "+\t\t\"\t\t\t\t\t}\\n\" + ", "+\t\t\"\t\t\t\t});\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87dcd88072f32d0783cbc9bd3c7aa2a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "183f54b68364b226246fe663acdbcbf6f6f1dd9e", "commitAfterChange": "42389b5a6a8ef8c4646bcecf0b3ebcc0d07e69ed", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 410, "signatureBeforeChange": " \tpublic void test407()", "signatureAfterChange": " \tpublic void test408()", "diff": ["-\t// 78008", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"import java.util.*;\\n\" + ", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"    public Integer[] getTypes() {\\n\" + ", "-\t\t\t\t\"        List<Integer> list = new ArrayList<Integer>();\\n\" + ", "-\t\t\t\t\"        return list == null \\n\" + ", "-\t\t\t\t\"            ? new Integer[0] \\n\" + ", "-\t\t\t\t\"            : list.toArray(new Integer[list.size()]);\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"    public static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"        Class clazz = null;\\n\" + ", "-\t\t\t\t\"        try {\\n\" + ", "-\t\t\t\t\"            clazz = Class.forName(\\\"X\\\");\\n\" + ", "-\t\t\t\t\"\t\t\t System.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\t\t\"        } catch (Throwable e) {\\n\" + ", "-\t\t\t\t\"            e.printStackTrace();\\n\" + ", "-\t\t\t\t\"        }\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t},", "-\t\t\t\"SUCCESS\");\t", "-\t}\t\t\t", "+\t// 78008", "+\tpublic void test408() {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import java.util.*;\\n\" + ", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"    public Integer[] getTypes() {\\n\" + ", "+\t\t\t\t\"        List<Integer> list = new ArrayList<Integer>();\\n\" + ", "+\t\t\t\t\"        return list == null \\n\" + ", "+\t\t\t\t\"            ? new Integer[0] \\n\" + ", "+\t\t\t\t\"            : list.toArray(new Integer[list.size()]);\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"    public static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"        Class clazz = null;\\n\" + ", "+\t\t\t\t\"        try {\\n\" + ", "+\t\t\t\t\"            clazz = Class.forName(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"    \t     System.out.println(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\t\"        } catch (Throwable e) {\\n\" + ", "+\t\t\t\t\"            e.printStackTrace();\\n\" + ", "+\t\t\t\t\"        }\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t},", "+\t\t\t\"SUCCESS\");\t", "+\t}\t"]}], "num": 72994}