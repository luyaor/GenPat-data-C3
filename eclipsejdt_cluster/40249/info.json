{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27a467cd3b8e66b1ad7f600f1a64bba8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f56b1fb484007e1ee8c5249a39a9dc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "7797096336d167760ec7955fb6a19b2897e639df", "commitAfterChange": "2644ed448d205d4df42080128a051b031dcbdd4c", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 161, "signatureBeforeChange": " public void _testONLY_160() throws Exception", "signatureAfterChange": " public void test165() throws Exception", "diff": ["-public void _testONLY_160() throws Exception {", "+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=128563 - variation", "+public void test165() throws Exception {", "+\tthis.runConformTest(new String[] {", "+\t\t\"package1/A.java\",//=======================", "+\t\t\"package package1;\\n\" + ", "+\t\t\"abstract class A {\\n\" + ", "+\t\t\"    static protected final void outerMethod() {\\n\" + ", "+\t\t\"    }\\n\" + ", "+\t\t\"}\\n\",", "+\t\t\"package1/B.java\",//=======================", "+\t\t\"package package1;\\n\" + ", "+\t\t\"public class B extends A {\\n\" + ", "+\t\t\"}\\n\", ", "+\t\t\"package2/C.java\",//=======================", "+\t\t\"package package2;\\n\" + ", "+\t\t\"import package1.B;\\n\" + ", "+\t\t\"public class C extends B {\\n\" + ", "+\t\t\"    private final MyInner myInner = new MyInner();\\n\" + ", "+\t\t\"    private class MyInner {\\n\" + ", "+\t\t\"        public void innerMethod() {\\n\" + ", "+\t\t\"            C.this.outerMethod();\\n\" + ", "+\t\t\"        }\\n\" + ", "+\t\t\"    }\\n\" + ", "+\t\t\"    public static void main(String[] args) {\\n\" + ", "+\t\t\"        final C c = new C();\\n\" + ", "+\t\t\"        c.myInner.innerMethod();\\n\" + ", "+\t\t\"    }\\n\" + ", "+\t\t\"}\\n\",", "+\t},", "+\t\"\");", "+\tString expectedOutput =", "+\t\t\"  // Method descriptor #8 ()V\\n\" + ", "+\t\t\"  // Stack: 0, Locals: 0\\n\" + ", "+\t\t\"  static synthetic void access$0();\\n\" + ", "+\t\t\"    0  invokestatic package2.C.outerMethod() : void\";", "+\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"package2\" + File.separator + \"C.class\", \"C\", expectedOutput);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8be5e0bbae8d31776fb159e1b29a31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RepeatableAnnotationTest.java", "commitBeforeChange": "3c8b95412c50bb73a8372fbf9db9df68231cc311", "commitAfterChange": "618a6ff3d34de5a5e41db8b1f1893c42061e44cd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void _test039()", "signatureAfterChange": " \tpublic void test039() throws Exception", "diff": ["-\t// Test that repeated annotations can appear at package targets - doesn't work due to VarifyClassLoader not defining packages.", "-\tpublic void _test039() {", "+\t// Test that repeated annotations can appear at package targets", "+\tpublic void test039() throws Exception {", "-\t\t\t\t\"          System.out.println(repeatable.Main.class.getClassLoader().getClass().getSimpleName());\\n\" + ", "-\t\t\t\t\"          System.out.println(\\\"Pacakage has \\\" + Main.class.getClassLoader().getClass().getName());\\n\" +", "-\t\t\t\t\"        System.out.println(\\\"The pacakage has \\\" + Main.class.getPackage().getAnnotationsByType(Foo.class).length + \\\" annotations\\\");\\n\" +", "-\t\trunConformTest(testFiles, \"The package has 2 annotations\");", "+\t\trunConformTest(testFiles, \"\");", "+\t\tString expectedOutout = ", "+\t\t\t\t\"  RuntimeVisibleAnnotations: \\n\" + ", "+\t\t\t\t\"    #8 @repeatable.FooContainer(\\n\" + ", "+\t\t\t\t\"      #9 value=[\\n\" + ", "+\t\t\t\t\"        annotation value =\\n\" + ", "+\t\t\t\t\"            #10 @repeatable.Foo(\\n\" + ", "+\t\t\t\t\"            )\\n\" + ", "+\t\t\t\t\"        annotation value =\\n\" + ", "+\t\t\t\t\"            #10 @repeatable.Foo(\\n\" + ", "+\t\t\t\t\"            )\\n\" + ", "+\t\t\t\t\"        ]\\n\" + ", "+\t\t\t\t\"    )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"repeatable\" + File.separator + \"package-info.class\", \"package-info\", expectedOutout, ClassFileBytesDisassembler.SYSTEM);"]}], "num": 40249}