{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a41b14abbd1a374ffb26585d077dd101", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4875d1c2d3178752ca4816bdb75f4c42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "bec584357dd9f5416d76c043f6bc97254c43e356", "commitAfterChange": "790a4755f1e08ee65c34f5b100ef95ca16f9dd1e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "signatureAfterChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "diff": ["+\t\t\tif (type == null || !type.isValidBinding())", "+\t\t\t\treturn null;", "-\t\t\tif (type != null && type.isValidBinding() && !this.hasIgnoredMandatoryErrors && !enclosingScopesHaveErrors()) {", "+\t\t\tif (!this.hasIgnoredMandatoryErrors && !enclosingScopesHaveErrors()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bcf1d111d952066bdfe69918daeaf94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "bec584357dd9f5416d76c043f6bc97254c43e356", "commitAfterChange": "790a4755f1e08ee65c34f5b100ef95ca16f9dd1e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t \tpublic boolean isCompatibleWith(TypeBinding left, final Scope someScope)", "signatureAfterChange": " \t \tpublic boolean isCompatibleWith(TypeBinding left, final Scope someScope)", "diff": ["+\t\t\t\tif (type == null || !type.isValidBinding())", "+\t\t\t\t\treturn false;", "-\t\t\t\tif (type == null || !type.isValidBinding() || this.hasIgnoredMandatoryErrors || enclosingScopesHaveErrors()) {", "+\t\t\t\tif (this.hasIgnoredMandatoryErrors || enclosingScopesHaveErrors()) {"]}], "num": 61649}