{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12f8258bc50ad882d801e03c60e7e656", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad736aab9bfc6297655d5a423d6d86df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["-\t\tint fieldLength = fieldName.length;", "-\t\tfor (int i = fields.length; --i >= 0;) {", "-\t\t\tFieldBinding field = fields[i];", "-\t\t\tif (field.name.length == fieldLength && CharOperation.equals(field.name, fieldName))", "-\t\t\t\treturn field;", "-\t\t}", "-\t\treturn null;", "+\t\treturn ReferenceBinding.binarySearch(fieldName, this.fields);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1070ceac28a1d9ecca84d395ccfdaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tpublic IType createTypeHandle(char[] simpleTypeName)", "diff": ["-\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\tpublic IType createTypeHandle(char[] simpleTypeName) {\r", "-\t\t\tint length = simpleTypeNames.length;\r", "-\t\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\t\t\tfor (int i = 1; i < length; i++) {\r", "-\t\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\t\t\t}\r", "-\t\t\treturn type;\r", "+\t\t\treturn unit.getType(new String(simpleTypeName));\r", "+\t}\r"]}], "num": 20718}