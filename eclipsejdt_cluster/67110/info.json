{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "130ed276e38ef950cfb346311cc07520", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1777c8a6ad886098f24ee5b14c67a2e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IntersectionCastTypeReference.java", "commitBeforeChange": "9bafd098a4f01cb487df1e23626d9ca01b29c273", "commitAfterChange": "79363a0cf2877d51c36b4085a9d2b719b103bf6c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\t\tif (visitor.visit(this, scope)) {", "-\t\t\tint length = this.typeReferences == null ? 0 : this.typeReferences.length;", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tthis.typeReferences[i].traverse(visitor, scope);", "-\t\t\t}", "-\t\t}", "-\t\tvisitor.endVisit(this, scope);", "+\t\tthrow new UnsupportedOperationException(\"Unexpected traversal request: IntersectionTypeReference in class scope\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d667b2873044bd033602f888d702b7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NormalAnnotation.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "diff": ["-\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {", "-\t\tif (visitor.visit(this, scope)) {", "-\t\t\tif (this.memberValuePairs != null) {", "-\t\t\t\tint memberValuePairsLength = this.memberValuePairs.length;", "-\t\t\t\tfor (int i = 0; i < memberValuePairsLength; i++)", "-\t\t\t\t\tthis.memberValuePairs[i].traverse(visitor, scope);", "-\t\t\t}", "-\t\t}", "-\t\tvisitor.endVisit(this, scope);", "-\t}"]}], "num": 67110}