{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d29615df86a725dea12bf282ff80ce3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ede0530cd2cfba95e55b34a2b4cef5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "3c7abdea60e3dea7a9b2b822e92d260aea9179a7", "commitAfterChange": "85d82ef92c86e257cfcb71c0ec95b6b64432a5cb", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 288, "signatureBeforeChange": " protected void consumeLambdaExpression()", "signatureAfterChange": " protected void consumeLambdaExpression()", "diff": ["+\tlexp.hasParentheses = (this.scanner.getSource()[lexp.sourceStart] == '(');", "+\tif (body instanceof Expression) {", "+\t\tExpression expression = (Expression) body;", "+\t\texpression.statementEnd = body.sourceEnd;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59083f26e4a41dc71e2291d7214a3f09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "5c6cb8db910a517d56a630d54a58e799b87e5f3d", "commitAfterChange": "5ec0d4f852b715851ad782798e616c99fb28d2e1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": "\r protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\t\t\t\tbreak;\r", "+\t\t\tcase BindingIds.VARIABLE : //============unbound cases===========\r", "+\t\t\tcase BindingIds.TYPE | BindingIds.VARIABLE :\t\t\t\t\t\t\r", "+\t\t\t\tif (binding instanceof ProblemBinding) {\r", "+\t\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;\r", "+\t\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r"]}], "num": 33479}