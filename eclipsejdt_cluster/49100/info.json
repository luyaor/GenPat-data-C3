{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ad505e726b91606ebbf06b7b005a2fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3960b29e432a04a15208c10981c89b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "ff2fe8665a4cc197831509bf8ec85eecac35f7cf", "commitAfterChange": "b035f7a4c467249c63cc869fd5f75e4bad8cf303", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic TypeVariableBinding(TypeVariableBinding prototype)", "signatureAfterChange": " \tprotected TypeVariableBinding(char[] sourceName, LookupEnvironment environment)", "diff": ["+\t// for subclass CaptureBinding", "+\tprotected TypeVariableBinding(char[] sourceName, LookupEnvironment environment) {", "+\t\tthis.sourceName = sourceName;", "+\t\tthis.modifiers = ClassFileConstants.AccPublic | ExtraCompilerModifiers.AccGenericSignature; // treat type var as public", "+\t\tthis.tagBits |= TagBits.HasTypeVariable;", "+\t\tthis.environment = environment;", "+\t\tthis.typeBits = TypeIds.BitUninitialized;", "+\t\t// don't yet compute the ID!", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8897254eb2f9575c42d08866b1ded51a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic CaptureBinding(CaptureBinding prototype)", "signatureAfterChange": " \tprotected CaptureBinding(ReferenceBinding sourceType, char[] sourceName, int position, int captureID, LookupEnvironment environment)", "diff": ["+\t// for subclass CaptureBinding18", "+\tprotected CaptureBinding(ReferenceBinding sourceType, char[] sourceName, int position, int captureID, LookupEnvironment environment) {", "+\t\tsuper(sourceName, null, 0, environment);", "+\t\tthis.modifiers = ClassFileConstants.AccPublic | ExtraCompilerModifiers.AccGenericSignature; // treat capture as public", "+\t\tthis.sourceType = sourceType;", "+\t\tthis.position = position;", "+\t\tthis.captureID = captureID;", "+\t}"]}], "num": 49100}