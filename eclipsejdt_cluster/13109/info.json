{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa76c8312117484642a2285d47e19653", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5231edf7789c5e2ae9773d4df019b54f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "bec882b73e7c0461cc0585cc90fdee9b599b323f", "commitAfterChange": "2d93f702c418ae37553e53fb53a22c5fb9d1c19a", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r protected void consumeConstructorDeclaration()", "signatureAfterChange": "\r protected void consumeConstructorDeclaration()", "diff": ["-\t\tconstructorCall = SuperReference.implicitSuperConstructorCall();\r", "+\t\tif (!diet){\r", "+\t\t\t// add it only in non-diet mode, if diet_bodies, then constructor call will be added elsewhere.\r", "+\t\t\tconstructorCall = SuperReference.implicitSuperConstructorCall();\r", "+\t\t}\r", "-\tif (cd.constructorCall.sourceEnd == 0) {\r", "+\tif (constructorCall != null && cd.constructorCall.sourceEnd == 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8abacac9d49513be76ff61001e1fcd15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void parseStatements(Parser parser, CompilationUnitDeclaration unit)", "signatureAfterChange": " \t \tpublic void parseStatements(Parser parser, CompilationUnitDeclaration unit)", "diff": ["-\t\tif (isDefaultConstructor){", "-\t\t\tconstructorCall = SuperReference.implicitSuperConstructorCall();", "-\t\t\tconstructorCall.sourceStart = sourceStart;", "-\t\t\tconstructorCall.sourceEnd = sourceEnd; ", "+\t\tif (isDefaultConstructor && this.constructorCall == null){", "+\t\t\tthis.constructorCall = SuperReference.implicitSuperConstructorCall();", "+\t\t\tthis.constructorCall.sourceStart = this.sourceStart;", "+\t\t\tthis.constructorCall.sourceEnd = this.sourceEnd; "]}], "num": 13109}