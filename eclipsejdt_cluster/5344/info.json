{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "741c07aa49f0cfeb5585d7275acc9419", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7fe4c1be3c6dd426a5f6b52f809748", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "commitAfterChange": "369ffd3db09511488e039ba2575df2eeea055320", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \t\r private boolean isOnClasspath(IClasspathEntry[] classpath, IResource res)", "signatureAfterChange": "\r \t\r private boolean isOnClasspath(IPath path)", "diff": ["-private boolean isOnClasspath(IClasspathEntry[] classpath, IResource res) {\r", "-\tIPath path = res.getFullPath();\r", "-\tif (classpath == null) {\r", "-\t\treturn true;\r", "-\t} else if (classpath == UNKNOWN_CLASSPATH) {\r", "-\t\treturn false;\r", "-\t} else {\r", "-\t\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "-\t\t\tif (classpath[i].getPath().isPrefixOf(path)) {\r", "-\t\t\t\treturn true;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn false;\r", "-\t}\r", "+private boolean isOnClasspath(IPath path) {\r", "+\treturn this.roots.get(path) != null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdf7625fec30f898e6df20c7a2920a1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void launchVerifyTestsIfNeeded(String[] classpaths, String[] vmArguments)", "signatureAfterChange": " private void launchVerifyTestsIfNeeded(String[] classpaths, String[] vmArguments)", "diff": ["-\t\tboolean sameClasspaths = true;", "-\t\tfor (int i = 0; i < classpaths.length; i++) {", "-\t\t\tif (!this.classpathCache[i].equals(classpaths[i])) {", "-\t\t\t\tsameClasspaths = false;", "-\t\t\t\tbreak;", "+\t\tif (classpaths.length == classpathCache.length) {", "+\t\t\tboolean sameClasspaths = true;", "+\t\t\tfor (int i = 0; i < classpaths.length; i++) {", "+\t\t\t\tif (!this.classpathCache[i].equals(classpaths[i])) {", "+\t\t\t\t\tsameClasspaths = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t}", "-\t\tif (sameClasspaths) {", "-\t\t\treturn;", "+\t\t\tif (sameClasspaths) {", "+\t\t\t\treturn;", "+\t\t\t}"]}], "num": 5344}