{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fa2f1523473941d27248dede9c52ac7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d1a6fd77839487d288a794d65122f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "0233b0a3d5d502ed0630a3da620010b258692d93", "commitAfterChange": "72a2a8bd6aba4ed5b8105709cfbdeb4e7360d6b9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void computeAllRootPaths(IPackageFragmentRoot root)", "signatureAfterChange": " \t \tprivate void computeAllRootPaths(IPackageFragmentRoot root)", "diff": ["-\t\t\tSystem.out.println(\"Found \" + this.rootPaths.size() + \" root paths\");\t//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tfinal int size = this.rootPaths.size();", "+\t\t\tSystem.out.println(\"Found \" + size + \" root paths\");\t//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tint i = 0;", "+\t\t\tfor (Iterator iterator = this.rootPaths.iterator(); iterator.hasNext();) {", "+\t\t\t\tString rootpath = (String) iterator.next();", "+\t\t\t\tSystem.out.println(\"root[\" + i + \"]=\" + rootpath);//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\ti++;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f234802551bc6d2a95f6253847c3a788", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "cba4a74f046a7c7d43d81e11b279554f1ab8b4ad", "commitAfterChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public void saveIndexes()", "signatureAfterChange": "\r public void saveIndexes()", "diff": ["-\tEnumeration indexList = indexes.elements();\r", "-\twhile (indexList.hasMoreElements()){\r", "-\t\tIIndex index = (IIndex)indexList.nextElement();\r", "+\r", "+\tArrayList indexList = new ArrayList();\r", "+\tsynchronized(this){\r", "+\t\tIIndex[] indexArray = new IIndex[indexes.size()];\r", "+\t\tfor (Iterator iter = indexes.values().iterator(); iter.hasNext();){\r", "+\t\t\tindexList.add(iter.next());\r", "+\t\t}\r", "+\t}\r", "+\r", "+\tfor (Iterator iter = indexList.iterator(); iter.hasNext();){\t\t\r", "+\t\tIIndex index = (IIndex)iter.next();\r"]}], "num": 38960}