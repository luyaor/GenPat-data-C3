{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6b1c41ac42425534dbcac259ef3f2fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b6ee132df1e0d3560a3e16e538cc97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionNodeDetector.java", "commitBeforeChange": "c614621106519ff8481a1054577c7b362708dd68", "commitAfterChange": "283007dac99c2184e8a3866c05be98ceb42f71c9", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \t \tprivate void endVisit(AstNode astNode)", "signatureAfterChange": " \t \tprivate void endVisit(AstNode astNode)", "diff": ["-\t\t\tif(!(astNode instanceof AllocationExpression && ((AllocationExpression) astNode).type == searchedNode)) {", "+\t\t\tif(!(astNode instanceof AllocationExpression && ((AllocationExpression) astNode).type == searchedNode)", "+\t\t\t\t&& !(astNode instanceof ConditionalExpression && ((ConditionalExpression) astNode).valueIfTrue == searchedNode)", "+\t\t\t\t&& !(astNode instanceof ConditionalExpression && ((ConditionalExpression) astNode).valueIfFalse == searchedNode)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81404aeb9db61e3ca7d421cc2b531009", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionNodeDetector.java", "commitBeforeChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "commitAfterChange": "f08042169ed40835df5f51519ff1fa8d2ac0cd70", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \t \tprivate void endVisit(ASTNode astNode)", "signatureAfterChange": " \t \tprivate void endVisit(ASTNode astNode)", "diff": ["-\t\tif(result && parent == null && astNode != searchedNode) {", "-\t\t\tif(!(astNode instanceof AllocationExpression && ((AllocationExpression) astNode).type == searchedNode)", "-\t\t\t\t&& !(astNode instanceof ConditionalExpression && ((ConditionalExpression) astNode).valueIfTrue == searchedNode)", "-\t\t\t\t&& !(astNode instanceof ConditionalExpression && ((ConditionalExpression) astNode).valueIfFalse == searchedNode)) {", "-\t\t\t\tparent = astNode;\t", "+\t\tif(this.result && this.parent == null && astNode != this.searchedNode) {", "+\t\t\tif(!(astNode instanceof AllocationExpression && ((AllocationExpression) astNode).type == this.searchedNode)", "+\t\t\t\t&& !(astNode instanceof ConditionalExpression && ((ConditionalExpression) astNode).valueIfTrue == this.searchedNode)", "+\t\t\t\t&& !(astNode instanceof ConditionalExpression && ((ConditionalExpression) astNode).valueIfFalse == this.searchedNode)) {", "+\t\t\t\tthis.parent = astNode;\t"]}], "num": 60814}