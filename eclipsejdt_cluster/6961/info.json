{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d652e732c279b8c0d732dd3efd897d30", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0164fcb5977fd9764cdf8a1b012caed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "36ef129881167aaca524bd32a5aa2c4e26ffd187", "commitAfterChange": "19b7207c9f9b8245eee7ba353b5eb784e8fb1b81", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public IMethod getMethod(String name, String[] parameterTypeSignatures)", "signatureAfterChange": " public IMethod getMethod(String selector, String[] parameterTypeSignatures)", "diff": ["-public IMethod getMethod(String name, String[] parameterTypeSignatures) {", "-\treturn new BinaryMethod(this, name, parameterTypeSignatures);", "+public IMethod getMethod(String selector, String[] parameterTypeSignatures) {", "+\treturn new BinaryMethod(this, selector, parameterTypeSignatures);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980f453e89ab629c50f83ed8dbe45316", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "36ef129881167aaca524bd32a5aa2c4e26ffd187", "commitAfterChange": "19b7207c9f9b8245eee7ba353b5eb784e8fb1b81", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public IMethod getMethod(String name, String[] parameterTypeSignatures)", "signatureAfterChange": " public IMethod getMethod(String selector, String[] parameterTypeSignatures)", "diff": ["-public IMethod getMethod(String name, String[] parameterTypeSignatures) {", "-\treturn new SourceMethod(this, name, parameterTypeSignatures);", "+public IMethod getMethod(String selector, String[] parameterTypeSignatures) {", "+\treturn new SourceMethod(this, selector, parameterTypeSignatures);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a253d2db4b099c88c86666ae2ffde07d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/MethodNameMatchRequestorWrapper.java", "commitBeforeChange": "297840d814bc6fb8f78f68a36eb74676aea7b3b0", "commitAfterChange": "65a147b80f31dc3e10f9d46f87c3805f7af615cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void acceptMethod(char[] methodName, int parameterCount, char[] declaringQualifier, \t\t\tchar[] simpleTypeName, int typeModifiers, char[] packageName, char[] signature, char[][] parameterTypes, \t\t\tchar[][] parameterNames, char[] returnType, int modifiers, String path, \t\t\tAccessRestriction access, int methodIndex)", "signatureAfterChange": "  \t@Override \tpublic void acceptMethod(char[] methodName, int parameterCount, char[] declaringQualifier, \t\t\tchar[] simpleTypeName, int typeModifiers, char[] packageName, char[] signature, char[][] parameterTypes, \t\t\tchar[][] parameterNames, char[] returnType, int modifiers, String path, \t\t\tAccessRestriction access, int methodIndex)", "diff": ["-\t\tIMethod method = type.getMethod(new String(methodName), CharOperation.toStrings(parameterTypes));", "+\t\tString[] paramTypeSigs = CharOperation.NO_STRINGS;", "+\t\tif (parameterTypes.length > 0) {", "+\t\t\tint l = parameterTypes.length;", "+\t\t\tparamTypeSigs = new String[l];", "+\t\t\tfor (int i = 0; i < l; ++i) {", "+\t\t\t\tparamTypeSigs[i] = Signature.createTypeSignature(parameterTypes[i], false);", "+\t\t\t}", "+\t\t}", "+\t\tIMethod method = type.getMethod(new String(methodName), paramTypeSigs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b53ed48ee214982b4855bd458f74f16f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "337d4986fc0de05d9cd5064cca973a58fbc65105", "commitAfterChange": "78267c00ce6cb5f649542b2e63042ae14138a0aa", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "signatureAfterChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "diff": ["-\t\t\t\t\t\treturn type.getMethod(new String(selector), CharOperation.toStrings(parameterTypes));", "+\t\t\t\t\t\treturn createMethodHandle(type, new String(selector), CharOperation.toStrings(parameterTypes));", "-\treturn type.getMethod(new String(method.selector), parameterTypeSignatures);", "+", "+\treturn createMethodHandle(type, new String(method.selector), parameterTypeSignatures);", "+}"]}], "num": 6961}