{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb86419fb6bc4a74ecc1b9677386bbbc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5553297873151dd4693cfbda5be47215", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f2d39aa25493d372eb044b624dbbd72fed5a98c6", "commitAfterChange": "201a4d7535850d71f8963e39324858c8555e83ea", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic static void run(IWorkspaceRunnable action, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void run(IWorkspaceRunnable action, ISchedulingRule rule, IProgressMonitor monitor) throws CoreException", "diff": ["+\t */", "+\tpublic static void run(IWorkspaceRunnable action, ISchedulingRule rule, IProgressMonitor monitor) throws CoreException {", "-\t\t\tworkspace.run(new BatchOperation(action), monitor);", "+\t\t\tworkspace.run(new BatchOperation(action), rule, IWorkspace.AVOID_UPDATE, monitor);", "-\t}", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab2190d82ecc969a66ab31b55cc5067a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void openParent(HashMap newElements, IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected void openParent(Object childInfo, HashMap newElements, IProgressMonitor pm) throws JavaModelException", "diff": ["-protected void openParent(HashMap newElements, IProgressMonitor pm) throws JavaModelException {", "+protected void openParent(Object childInfo, HashMap newElements, IProgressMonitor pm) throws JavaModelException {", "-\t\topenableParent.openWhenClosed(newElements, pm);", "+\t\topenableParent.generateInfos(openableParent.createElementInfo(), newElements, pm);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a57e362c910388df585be924131e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, char[][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, char[][][] missingTypeNames) {", "+private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType,", "+\t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "+{", "-\t\targs.add(getTypeFromVariantTypeSignature(wrapper, staticVariables, enclosingType, genericType, rank++, missingTypeNames));", "+\t\targs.add(getTypeFromVariantTypeSignature(wrapper, staticVariables, enclosingType, genericType, rank, missingTypeNames,", "+\t\t\t\t\twalker.toTypeArgument(rank++)));"]}], "num": 46978}