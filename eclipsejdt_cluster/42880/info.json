{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00ea584e4650ba90951708d5498907d6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218a0789a56180cf997dcb46e3eadc22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "7dcc81b9483bd917811b239ba748dff59d4ce7dc", "commitAfterChange": "4136248cb1581d6af7c774a979b9c48c11440c8d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["-\t\t\t} else {", "-\t\t\t\treturn this.source = Util.getResourceContentsAsCharArray((IFile) this.resource);", "+\t\t\treturn this.source = Util.getResourceContentsAsCharArray((IFile) this.resource);", "-\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "-\t\t\tif (sourceMapper != null) {", "-\t\t\t\tString fileName = getSourceFileName();", "-\t\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "+\t\t\tString fileName = getSourceFileName();", "+\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "-\t\t\t\tIType type = ((ClassFile) this.openable).getType();", "-\t\t\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\t\t\t}", "+\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "+\t\t\tIType type = ((ClassFile) this.openable).getType();", "+\t\t\treturn this.source = sourceMapper.findSource(type, fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9091fad4726e10f1979e1a8d84d7d83d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["-\ttry {", "-\t\tif (this.openable instanceof CompilationUnit) {", "-\t\t\tif (((CompilationUnit) this.openable).isWorkingCopy()) {", "-\t\t\t\tIBuffer buffer = this.openable.getBuffer();", "-\t\t\t\tif (buffer == null) return null;", "-\t\t\t\treturn this.source = buffer.getCharacters();", "-\t\t\t}", "-\t\t\treturn this.source = Util.getResourceContentsAsCharArray((IFile) this.resource);", "-\t\t} else if (this.openable instanceof ClassFile) {", "-\t\t\tString fileName = getSourceFileName();", "-\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "+\tif (this.openable instanceof ClassFile) {", "+\t\tString fileName = getSourceFileName();", "+\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "-\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "-\t\t\tIType type = ((ClassFile) this.openable).getType();", "-\t\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\t\t}", "-\t} catch (JavaModelException e) { // ignored", "+\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "+\t\tIType type = ((ClassFile) this.openable).getType();", "+\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\treturn null;", "+\treturn this.source = this.document.getCharContents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "960d45deba2af278886b70417ab07953", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["+}", "+public char[] getContents() {", "+\tchar[] source = null;", "+\ttry {", "+\t\tif (this.openable instanceof CompilationUnit) {", "+\t\t\tif (((CompilationUnit) this.openable).isWorkingCopy()) {", "+\t\t\t\tIBuffer buffer = this.openable.getBuffer();", "+\t\t\t\tif (buffer == null) return null;", "+\t\t\t\tsource = buffer.getCharacters();", "+\t\t\t} else {", "+\t\t\t\tsource = Util.getResourceContentsAsCharArray((IFile) this.resource);", "+\t\t} else if (this.openable instanceof ClassFile) {", "+\t\t\t\tString fileName = getSourceFileName();", "+\t\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "+", "+\t\t\t\tIType type = ((ClassFile) this.openable).getType();", "+\t} catch (JavaModelException e) {", "-\tpublic char[] getContents() {", "-\t\tchar[] source = null;", "-\t\ttry {", "-\t\t\tif (this.openable instanceof CompilationUnit) {", "-\t\t\t\tif (((CompilationUnit)this.openable).isWorkingCopy()) {", "-\t\t\t\t\tIBuffer buffer = this.openable.getBuffer();", "-\t\t\t\t\tif (buffer == null) return null;", "-\t\t\t\t\tsource = buffer.getCharacters();", "-\t\t\t\t} else {", "-\t\t\t\t\tsource = Util.getResourceContentsAsCharArray((IFile)this.resource);", "-\t\t\t\t}", "-\t\t\t} else if (this.openable instanceof ClassFile) {", "-\t\t\t\tsource = findClassFileSource();", "-\t\t\t}", "-\t\t} catch (JavaModelException e) {", "-\t\t}", "-\t\tif (source == null) return CharOperation.NO_CHAR;", "-\t\treturn source;", "-\t}", "+\tif (source == null) return CharOperation.NO_CHAR;", "+\treturn source;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0ab73662899a04cf4f5273a552c6bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "commitAfterChange": "c065b0d569ec3f9c64ce0f4814c700b82af5514f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["-\tif (this.source != null) return this.source;", "-", "-\tif (this.openable instanceof ClassFile) {", "-\t\tString fileName = getSourceFileName();", "-\t\tif (fileName == NO_SOURCE_FILE_NAME) return CharOperation.NO_CHAR;", "-", "-\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "-\t\tIType type = ((ClassFile) this.openable).getType();", "-\t\treturn this.source = sourceMapper.findSource(type, fileName);", "+\tchar[] contents = (this.source == NO_SOURCE_FILE) ? null : this.source;", "+\tif (this.source == null) {", "+\t\tif (this.openable instanceof ClassFile) {", "+\t\t\tString fileName = getSourceFileName();", "+\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return CharOperation.NO_CHAR;", "+\t", "+\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "+\t\t\tIType type = ((ClassFile) this.openable).getType();", "+\t\t\tcontents = sourceMapper.findSource(type, fileName);", "+\t\t} else {", "+\t\t\tcontents = this.document.getCharContents();", "+\t\t}", "+\t\tthis.source = (contents == null) ? NO_SOURCE_FILE : contents;", "-\treturn this.source = this.document.getCharContents();", "+\treturn contents;"]}], "num": 42880}