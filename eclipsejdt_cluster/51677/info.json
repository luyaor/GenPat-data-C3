{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3cfcb7acfb084010b70c73d3d68f09a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9cedb8d292cca4b12b3cb183f9fca7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a689ad07ca8ba338d705bde61cab6ba7c1398518", "commitAfterChange": "f8069544c2b2660f8b2415856be61642ab9369f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void analyseCode(CompilationUnitScope unitScope)", "signatureAfterChange": " \tpublic void analyseCode(CompilationUnitScope unitScope)", "diff": ["+\t\t\tReferenceBinding[] defaultHandledExceptions = new ReferenceBinding[] { scope.getJavaLangThrowable()}; // tolerate any kind of exception", "-\t\t\t\t\tif (fields[i].isStatic()) {", "+\t\t\t\t\tFieldDeclaration field = fields[i];", "+\t\t\t\t\tif (field.isStatic()) {", "+\t\t\t\t\t\tif (field.isField()){", "+\t\t\t\t\t\t\tstaticInitializerContext.handledExceptions = NoExceptions; // no exception is allowed jls8.3.2", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tstaticInitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tfields[i].analyseCode(", "+\t\t\t\t\t\t\tfield.analyseCode(", "-\t\t\t\t\t\t\tstaticInitializerScope.problemReporter().initializerMustCompleteNormally(", "-\t\t\t\t\t\t\t\tfields[i]);", "+\t\t\t\t\t\t\tstaticInitializerScope.problemReporter().initializerMustCompleteNormally(field);", "+\t\t\t\t\t\tif (field.isField()){", "+\t\t\t\t\t\t\tinitializerContext.handledExceptions = NoExceptions; // no exception is allowed jls8.3.2", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tinitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tfields[i].analyseCode(initializerScope, initializerContext, nonStaticFieldInfo);", "+\t\t\t\t\t\t\tfield.analyseCode(initializerScope, initializerContext, nonStaticFieldInfo);", "-\t\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(fields[i]);", "+\t\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4f55364ac2d9cb02b4b16b3ef33bb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a689ad07ca8ba338d705bde61cab6ba7c1398518", "commitAfterChange": "f8069544c2b2660f8b2415856be61642ab9369f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void analyseCode(ClassScope classScope1)", "signatureAfterChange": " \tpublic void analyseCode(ClassScope classScope1)", "diff": ["+", "+\t\t\tReferenceBinding[] defaultHandledExceptions = new ReferenceBinding[] { scope.getJavaLangThrowable()}; // tolerate any kind of exception", "-\t\t\t\t\tif (fields[i].isStatic()) {", "+\t\t\t\t\tFieldDeclaration field = fields[i];", "+\t\t\t\t\tif (field.isStatic()) {", "+\t\t\t\t\t\tif (field.isField()){", "+\t\t\t\t\t\t\tstaticInitializerContext.handledExceptions = NoExceptions; // no exception is allowed jls8.3.2", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tstaticInitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tfields[i].analyseCode(", "+\t\t\t\t\t\t\tfield.analyseCode(", "-\t\t\t\t\t\t\tstaticInitializerScope.problemReporter().initializerMustCompleteNormally(", "-\t\t\t\t\t\t\t\tfields[i]);", "+\t\t\t\t\t\t\tstaticInitializerScope.problemReporter().initializerMustCompleteNormally(field);", "-\t\t\t\t\t\tnonStaticFieldInfo =", "-\t\t\t\t\t\t\tfields[i].analyseCode(initializerScope, initializerContext, nonStaticFieldInfo);", "+\t\t\t\t\t\tif (field.isField()){", "+\t\t\t\t\t\t\tinitializerContext.handledExceptions = NoExceptions; // no exception is allowed jls8.3.2", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tinitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tnonStaticFieldInfo = field.analyseCode(initializerScope, initializerContext, nonStaticFieldInfo);", "-\t\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(fields[i]);", "+\t\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(field);"]}], "num": 51677}