{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30c0f30a0cc9831125aacde6e49978d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac81015a0e673e296e3d625b722b820a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "79230cd7762a4c67bbe12b2445e22b464f420455", "commitAfterChange": "0e2b95cbd8acd25a30eff4aa5a4e5b34fa13b0c5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tfor (int i = 0, max = searchIndexes.length; i < max; i++) {\r", "-\t\t\tisComplete &= search(searchIndexes[i], progressMonitor);\r", "+\t\ttry {\r", "+\t\t\tint max = searchIndexes.length;\r", "+\t\t\tif (progressMonitor != null) {\r", "+\t\t\t\tprogressMonitor.beginTask(\"\", max); //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t\tfor (int i = 0; i < max; i++) {\r", "+\t\t\t\tisComplete &= search(searchIndexes[i], progressMonitor);\r", "+\t\t\t\tif (progressMonitor != null) {\r", "+\t\t\t\t\tif (progressMonitor.isCanceled()) {\r", "+\t\t\t\t\t\tthrow new OperationCanceledException();\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tprogressMonitor.worked(1);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tif (JobManager.VERBOSE) {\r", "+\t\t\t\tSystem.out.println(\r", "+\t\t\t\t\t\"-> execution time: \" + executionTime + \" ms. for : \" + this);//$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t\t//$NON-NLS-2$ //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t\treturn isComplete;\r", "+\t\t} finally {\r", "+\t\t\tif (progressMonitor != null) {\r", "+\t\t\t\tprogressMonitor.done();\r", "+\t\t\t}\r", "-\t\tif (JobManager.VERBOSE) {\r", "-\t\t\tSystem.out.println(\r", "-\t\t\t\t\"-> execution time: \" + executionTime + \" ms. for : \" + this);//$NON-NLS-1$//$NON-NLS-2$\r", "-\t\t\t//$NON-NLS-2$ //$NON-NLS-1$\r", "-\t\t}\r", "-\t\treturn isComplete;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8432892201d0f6401c7b5cf600aea2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "302f1877ad74fd63c3cd5c56aacc5cc510a8d88b", "commitAfterChange": "240c118718aa210b0d9c1362ebe7843e41fba8b4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tprivate void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\t\tSubProgressMonitor subMonitor= monitor==null ? null : new SubProgressMonitor(monitor, 1000);", "+\t\t\t\tif (subMonitor != null) subMonitor.beginTask(\"\", 1000); //$NON-NLS-1$", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.indexing\", participant.getDescription())); //$NON-NLS-1$", "-\t\t\t\t\t\tmonitor);", "+\t\t\t\t\t\tsubMonitor);", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.matching\", participant.getDescription())); //$NON-NLS-1$", "-\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, monitor);", "+\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, subMonitor);"]}], "num": 54108}