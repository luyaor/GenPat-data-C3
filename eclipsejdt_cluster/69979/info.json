{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5561fe65106d01ed2e4e27ca0e6b828", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e4088bb81fbeb0230241cde9ae5cf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "6c7de59cc4e8b7d3ff952cb73eea6ba69e83b190", "commitAfterChange": "8eda346eb2b6784c607071f6828a328415623f59", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic boolean visit(IntersectionCastTypeReference intersectionCastTypeReference, BlockScope scope)", "signatureAfterChange": " public TypeReference[] getTypeReferences()", "diff": ["-\tpublic boolean visit(IntersectionCastTypeReference intersectionCastTypeReference, BlockScope scope) {", "-\t\tint length = intersectionCastTypeReference.typeReferences == null ? 0 : intersectionCastTypeReference.typeReferences.length;", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\tthis.info2 = i;", "-\t\t\tintersectionCastTypeReference.typeReferences[i].traverse(this, scope);", "-\t\t}", "-\t\treturn false; // iteration was done here, do not repeat in the caller", "-\t}", "+public TypeReference[] getTypeReferences() {", "+\treturn new TypeReference [] { this };", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adc64545634e8e7c3e939752a6f6b487", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "4ddddb5424dafb4b8650d4349863e03fece6ac06", "commitAfterChange": "21d3c1ac784a9ef78a64389e4df817ec0452ce19", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(IntersectionCastTypeReference intersectionCastTypeReference, BlockScope scope)", "diff": ["+\tpublic boolean visit(IntersectionCastTypeReference intersectionCastTypeReference, BlockScope scope) {", "+\t\tint length = intersectionCastTypeReference.typeReferences == null ? 0 : intersectionCastTypeReference.typeReferences.length;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tthis.info2 = i;", "+\t\t\tintersectionCastTypeReference.typeReferences[i].traverse(this, scope);", "+\t\t}", "+\t\treturn false; // iteration was done here, do not repeat in the caller", "+\t}"]}], "num": 69979}