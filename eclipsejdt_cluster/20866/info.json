{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf40be787ba7a6478f7f60a41f2f2d37", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5441eb298b1425618f4cfebe9dd24ff8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void searchVisibleMethods( \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope, \t\t\tboolean onlyStaticMethods, \t\t\tboolean notInJavadoc, \t\t\tObjectVector methodsFound)", "signatureAfterChange": "  \tprivate void searchVisibleMethods( \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope, \t\t\tboolean onlyStaticMethods, \t\t\tboolean notInJavadoc, \t\t\tObjectVector methodsFound)", "diff": ["-\t\t\t\t\t\tsuperInterfaces[i] = (ReferenceBinding)superInterfaces[i].capture(invocationScope, invocationSite.sourceEnd());", "+\t\t\t\t\t\tsuperInterfaces[i] = (ReferenceBinding)superInterfaces[i].capture(invocationScope, invocationSite.sourceStart(), invocationSite.sourceEnd());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dab45d7d15ba98d27f6c7b3026f1758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\t\t\t\tsuperInterfaces[i] = (ReferenceBinding)superInterfaces[i].capture(invocationScope, invocationSite.sourceEnd());", "+\t\t\t\t\t\tsuperInterfaces[i] = (ReferenceBinding)superInterfaces[i].capture(invocationScope, invocationSite.sourceStart(), invocationSite.sourceEnd());"]}], "num": 20866}