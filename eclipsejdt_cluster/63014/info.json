{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cdead20e5d51d4772a94ef2e7a400bc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1918c18ca30eeb477ebf250ab8b93bef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "23ce85b62062adfb602af4a47162da068d113e83", "commitAfterChange": "979c704dde214191e3f8aa31211aee678c05ced2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["+\t\t\t\tIProject project = (IProject)resource;", "+\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "-\t\t\t\t\t\tIProject project = (IProject)resource;", "-\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "-\t\t\t\t\t\t\tproject = (IProject)resource;", "-\t\t\t\t\t\t\t\tjavaProject = (JavaProject)JavaCore.create(project);", "-\t\t\t\t\t\t\t\t\tjavaProject = (JavaProject)JavaCore.create(project);", "-\t\t\t\t\t\t\t\t\t\tthis.addToParentInfo((JavaProject)JavaCore.create(project));", "+\t\t\t\t\t\t\t\t\t\tthis.addToParentInfo(javaProject);", "-\t\t\t\t\t\t\t\t\tthis.addToParentInfo((JavaProject)JavaCore.create(project));", "+\t\t\t\t\t\t\t\t\tthis.addToParentInfo(javaProject);", "+\t\t\t\t", "+\t\t\t\t// in all cases, refresh the external jars for this project", "+\t\t\t\taddForRefresh(javaProject);", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eb60bc53f7c338ec3152f41d2d89e52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "23ce85b62062adfb602af4a47162da068d113e83", "commitAfterChange": "979c704dde214191e3f8aa31211aee678c05ced2", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs)", "signatureAfterChange": " \tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs)", "diff": ["-\t\t", "+", "-\t\t\t\t\t\t\tif (!JavaProject.hasJavaNature(project)) {", "+\t\t\t\t\t\t\tboolean wasJavaProject = this.manager.getJavaModel().findJavaProject(project) != null;", "+\t\t\t\t\t\t\tif (wasJavaProject && !isJavaProject) {", "-\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (isJavaProject) {", "+\t\t\t\t\t\t\t// check if all entries exist", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\t\tjavaProject.getResolvedClasspath(true/*ignore unresolved entry*/, true/*generate marker on error*/);", "+\t\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t\t// project doesn't exist: ignore"]}], "num": 63014}