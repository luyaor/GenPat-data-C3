{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce2ec7e87f6b1188e858f8f315b5e6d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bb2826ba9cb3ec910a78539f1f11b9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d5b9ab15bb3f769b7e2ac485fe6da55027818828", "commitAfterChange": "e98478cd38caef5e23457b8b0fdc364bf2846afc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void annotationInvalidSeeReference(int sourceStart, int sourceEnd)", "signatureAfterChange": " public void annotationInvalidSeeReference(int sourceStart, int sourceEnd)", "diff": ["-public void annotationInvalidSeeReference(int sourceStart, int sourceEnd) {", "-\tString[] arguments = new String[0];", "-\t\tIProblem.AnnotationInvalidSeeReference,", "+public void annotationInvalidSeeReference(int sourceStart, int sourceEnd) {", "+\tthis.handle(IProblem.AnnotationInvalidSeeReference, NoArgument, NoArgument, sourceStart, sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ae8d2a0c7b4eac8afadd343be52ab9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "10eb4fe1c3f61da399332d4475de97a7108327b6", "commitAfterChange": "a177bb7fe17619982bbbfa40c9b97d8a1fb8bcb9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \tpublic void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tReferenceBinding[] defaultHandledExceptions = new ReferenceBinding[] { scope.getJavaLangThrowable()}; // tolerate any kind of exception", "-\t\t\t\t\tstaticInitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\tstaticInitializerContext.handledExceptions = AnyException; // tolerate them all, and record them", "-\t\t\t\t\t\tinitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\t\tinitializerContext.handledExceptions = AnyException; // tolerate them all, and record them"]}], "num": 22119}