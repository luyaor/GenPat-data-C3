{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ba079a68b4a08103acf5ade27a2c341", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103001f4706061913a75bbb32e7d589d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "16a26bc49f78acb9a7d0c10a9d6bedce29952111", "commitAfterChange": "e70f557904c0f4a9dab2a8974c294cadedac3b10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tif (!isStatic && ((bits & DepthMASK) != 0)){\r", "-\t\t// outer method can be reached through emulation\r", "+\tif (!isStatic && ((bits & DepthMASK) != 0) && (receiver == ThisReference.ThisImplicit)){\r", "+\t\t// outer method can be reached through emulation if implicit access\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64457239ec8586b32f5ea62280b946f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "4f1dce29ccef2494b704e59771c3c8d8204a85f9", "commitAfterChange": "99cffc8541c4397656cecbf3b21b77793b2ea53d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r \r public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t&& (scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "-\t\t\t\t|| !binding.declaringClass.canBeSeenBy(scope))) {\r", "+\t\t&& ((receiver != ThisReference.ThisImplicit // comply to jck lang/BINC/binc02301 (seems a bug)\r", "+\t\t\t\t&& scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4)\r", "+\t\t\t|| !binding.declaringClass.canBeSeenBy(scope))) {\r"]}], "num": 33281}