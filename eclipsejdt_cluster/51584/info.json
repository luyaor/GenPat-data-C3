{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa658242337fcc9201ae33404af82e04", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c9bec823089fac406405e00e745392b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "4224ed338b096a221dba6dc1bfeabf46bad0c43f", "commitAfterChange": "4f3e6e808c3352288b20b9a17621a861ee976387", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public ICompilationUnit getCompilationUnit(String name)", "signatureAfterChange": " public ICompilationUnit getCompilationUnit(String name)", "diff": ["-\tICompilationUnit primaryCU =  new CompilationUnit(this, name, DefaultWorkingCopyOwner.PRIMARY);", "-\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\tMap sharedWorkingCopies = manager.sharedWorkingCopies;", "-\tMap perOwnerWorkingCopies = (Map) sharedWorkingCopies.get(DefaultWorkingCopyOwner.PRIMARY);", "-\tif (perOwnerWorkingCopies == null) return primaryCU;", "-\tICompilationUnit sharedWC = (ICompilationUnit)perOwnerWorkingCopies.get(primaryCU);", "-\tif (sharedWC == null) {", "-\t\treturn primaryCU;", "-\t} else {", "-\t\treturn sharedWC;", "-\t}", "+\treturn  new CompilationUnit(this, name, DefaultWorkingCopyOwner.PRIMARY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7168ff640daaa010f6408fde69046af8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic static IWorkingCopy[] getSharedWorkingCopies(IBufferFactory factory)", "signatureAfterChange": " \tpublic static IWorkingCopy[] getSharedWorkingCopies(IBufferFactory factory)", "diff": ["-\t\tMap sharedWorkingCopies = JavaModelManager.getJavaModelManager().sharedWorkingCopies;", "-\t\t", "-\t\tMap perFactoryWorkingCopies = (Map) sharedWorkingCopies.get(owner);", "-\t\tif (perFactoryWorkingCopies == null) return JavaModelManager.NoWorkingCopy;", "-\t\tCollection copies = perFactoryWorkingCopies.values();", "-\t\tIWorkingCopy[] result = new IWorkingCopy[copies.size()];", "-\t\tcopies.toArray(result);", "-\t\treturn result;", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\treturn manager.getWorkingCopies(owner, false/*don't add primary WCs*/);"]}], "num": 51584}