{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "918c8ac46de78788b1b65d1a9aeea3e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4faba200109544e0acd73d07f731ccb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "3861d4cfff200f4a20f9b2846cf8819b2fe85539", "commitAfterChange": "1ab7b833f2e8fe1eaa17a4c72f8b9580f4ae1592", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\t// return if this is not necessary to report", "+\tif (this.pattern.isParameterized() && !this.isEquivalentMatch &&!this.isErasureMatch) {", "+\t\treturn;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f32259310b0bb5dc690822b142314505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "203954a19427f44b197aa09593f6f49177e09606", "commitAfterChange": "3ed9acfe644f3aa92ee72abfaf147fb3ef3a87d3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+}", "-\t\tint lastIndex = importRef.tokens.length - 1;", "+\t\tint lastIndex = importRef.tokens.length - 1;", "+\t\tif (importRef.isStatic() && !importRef.onDemand && !typeBinding.isMemberType()) {", "+\t\t\t// for field static import, do not use last token", "+\t\t\tlastIndex--;", "+\t\t}"]}], "num": 22165}