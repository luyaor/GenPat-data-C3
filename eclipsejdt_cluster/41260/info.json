{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bae5951efe0f254a002eda54db9eb50d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "151e83ab02d23fcb89ddf111a9aab0d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarClassLoader.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t@Override \tpublic synchronized InputStream getResourceAsStream(String name)", "signatureAfterChange": " \t \t@Override \tpublic synchronized InputStream getResourceAsStream(String name)", "diff": ["-\t\topen();", "-\t\ttry {", "-\t\t\tfor (JarFile j : _jars) {", "-\t\t\t\ttry {", "-\t\t\t\t\tZipEntry entry = j.getEntry(name);", "-\t\t\t\t\tif (entry != null) {", "-\t\t\t\t\t\tInputStream zipInput = j.getInputStream(entry);", "-\t\t\t\t\t\treturn new JarCLInputStream(zipInput);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException ioe) {", "-\t\t\t\t\tAptPlugin.log(ioe, \"Unable to get entry from jar: \" + j); //$NON-NLS-1$", "+\t\t", "+\t\tif (!_open) ", "+\t\t\treturn null;", "+\t", "+\t\tfor (JarFile j : _jars) {", "+\t\t\ttry {", "+\t\t\t\tZipEntry entry = j.getEntry(name);", "+\t\t\t\tif (entry != null) {", "+\t\t\t\t\tInputStream zipInput = j.getInputStream(entry);", "+\t\t\t\t\treturn openInputStream(zipInput);", "-\t\t\treturn null;", "+\t\t\tcatch (IOException ioe) {", "+\t\t\t\tAptPlugin.log(ioe, \"Unable to get entry from jar: \" + j); //$NON-NLS-1$", "+\t\t\t}", "-\t\tfinally {", "-\t\t\tclose();", "-\t\t}", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e45db43b0d3dd73c4aa2d6bc5a53111", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarClassLoader.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic synchronized void close()", "signatureAfterChange": " \t \tpublic synchronized void close()", "diff": ["-\t\tif (_openCounter < 1) {", "-\t\t\tthrow new IllegalStateException(\"Attempt to close an already closed JarClassLoader\"); //$NON-NLS-1$", "-\t\t}", "-\t\t_openCounter--;", "-\t\tif (_openCounter == 0) {", "-\t\t\tfor (JarFile jar : _jars) {", "-\t\t\t\ttry {", "-\t\t\t\t\tjar.close();", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException ioe) {", "-\t\t\t\t\tAptPlugin.log(ioe, \"Failed to close jar: \" + jar); //$NON-NLS-1$", "-\t\t\t\t}", "+\t\tif (! _open) return;", "+\t\t_open = false;", "+\t\t", "+\t\tfor (JarCLInputStream st : _openStreams) {", "+\t\t\ttry {", "+\t\t\t\tst.close();", "-\t\t\t_jars = null;", "+\t\t\tcatch (IOException ioe) {", "+\t\t\t\tAptPlugin.log(ioe, \"Failed to close stream\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t_openStreams = null;", "+", "+\t\tfor (JarFile jar : _jars) {", "+\t\t\ttry {", "+\t\t\t\tjar.close();", "+\t\t\t}", "+\t\t\tcatch (IOException ioe) {", "+\t\t\t\tAptPlugin.log(ioe, \"Failed to close jar: \" + jar); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\t_jars = null;", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff6378fa33211e82170d4d300b87e0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarClassLoader.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic synchronized void open()", "signatureAfterChange": " \t \tprivate void open()", "diff": ["-\tpublic synchronized void open() {", "-\t\t_openCounter++;", "-\t\tif (_openCounter == 1) {", "-\t\t\t// Create all jar files", "-\t\t\t_jars = new ArrayList<JarFile>(_files.size());", "-\t\t\tfor (File f : _files) {", "-\t\t\t\ttry {", "-\t\t\t\t\tJarFile jar = new JarFile(f);", "-\t\t\t\t\t_jars.add(jar);", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException ioe) {", "-\t\t\t\t\tAptPlugin.log(ioe, \"Unable to create JarFile for file: \" + f); //$NON-NLS-1$", "-\t\t\t\t}", "+\tprivate void open() {", "+\t\t// Create all jar files", "+\t\t_jars = new ArrayList<JarFile>(_files.size());", "+\t\tfor (File f : _files) {", "+\t\t\ttry {", "+\t\t\t\tJarFile jar = new JarFile(f);", "+\t\t\t\t_jars.add(jar);", "+\t\t\t}", "+\t\t\tcatch (IOException ioe) {", "+\t\t\t\tAptPlugin.log(ioe, \"Unable to create JarFile for file: \" + f); //$NON-NLS-1$"]}], "num": 41260}