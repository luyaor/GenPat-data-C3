{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b07c936425b96b5e3aa8cda03080766c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc4c86966a5dfefd988151e6ed0b1b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "commitAfterChange": "447dafd45d9eea3d096b0cc1d1d11fe893f03ec0", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["-\t\t\t\tImportReference importRef = (ImportReference) node;", "-\t\t\t\tBinding binding = (importRef.bits & ASTNode.OnDemand) != 0", "-\t\t\t\t\t? unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "-\t\t\t\t\t: unitScope.getImport(importRef.tokens, false, importRef.isStatic());", "-\t\t\t\tthis.patternLocator.matchLevelAndReportImportRef(importRef, binding, this);", "+\t\t\t\tif (this.patternFineGrain == 0 || (this.patternFineGrain & IJavaSearchConstants.IMPORT_DECLARATION_TYPE_REFERENCE) != 0) {", "+\t\t\t\t\tImportReference importRef = (ImportReference) node;", "+\t\t\t\t\tBinding binding = (importRef.bits & ASTNode.OnDemand) != 0", "+\t\t\t\t\t\t? unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "+\t\t\t\t\t\t: unitScope.getImport(importRef.tokens, false, importRef.isStatic());", "+\t\t\t\t\tthis.patternLocator.matchLevelAndReportImportRef(importRef, binding, this);", "+\t\t\t\t}", "-\tif (unit.javadoc != null) {", "+\tif (unit.javadoc != null && this.patternFineGrain == 0) {", "-\t\t\t\t\tif (encloses(element))", "+\t\t\t\t\tif (encloses(element) && this.patternFineGrain == 0) {", "+\t\t\t\t\t}", "-\t\t\t\tif (level != null) {", "-\t\t\t\t\tBinding binding = (importRef.bits & ASTNode.OnDemand) != 0", "-\t\t\t\t\t\t? unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "-\t\t\t\t\t\t: unitScope.getImport(importRef.tokens, false, importRef.isStatic());", "-\t\t\t\t\tthis.patternLocator.matchReportImportRef(importRef, binding, createImportHandle(importRef), level.intValue(), this);", "+\t\t\t\tif (level != null && (this.patternFineGrain == 0 || (this.patternFineGrain & IJavaSearchConstants.IMPORT_DECLARATION_TYPE_REFERENCE) != 0)) {", "+\t\t\t\t\tthis.patternLocator.matchReportImportRef(importRef, null /*no binding*/, createImportHandle(importRef), level.intValue(), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b6fc5f04978d57ab61c4a0606b7a03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["+\t\tSystem.out.println(\"\t- fine grain flags=\"+ JavaSearchPattern.getFineGrainFlagString(this.patternLocator.fineGrain())); //$NON-NLS-1$", "-\t\t\t\tif (this.patternFineGrain == 0 || (this.patternFineGrain & IJavaSearchConstants.IMPORT_DECLARATION_TYPE_REFERENCE) != 0) {", "-\t\t\t\t\tImportReference importRef = (ImportReference) node;", "-\t\t\t\t\tBinding binding = (importRef.bits & ASTNode.OnDemand) != 0", "-\t\t\t\t\t\t? unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "-\t\t\t\t\t\t: unitScope.getImport(importRef.tokens, false, importRef.isStatic());", "-\t\t\t\t\tthis.patternLocator.matchLevelAndReportImportRef(importRef, binding, this);", "-\t\t\t\t}", "+\t\t\t\tImportReference importRef = (ImportReference) node;", "+\t\t\t\tBinding binding = (importRef.bits & ASTNode.OnDemand) != 0", "+\t\t\t\t\t? unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "+\t\t\t\t\t: unitScope.getImport(importRef.tokens, false, importRef.isStatic());", "+\t\t\t\tthis.patternLocator.matchLevelAndReportImportRef(importRef, binding, this);", "-\tif (unit.javadoc != null && this.patternFineGrain == 0) {", "+\tif (unit.javadoc != null) {", "-\t\t\t\t\tif (encloses(element) && this.patternFineGrain == 0) {", "+\t\t\t\t\tif (encloses(element)) {", "-\t\t\t\tif (level != null && (this.patternFineGrain == 0 || (this.patternFineGrain & IJavaSearchConstants.IMPORT_DECLARATION_TYPE_REFERENCE) != 0)) {", "+\t\t\t\tif (level != null) {"]}], "num": 45794}