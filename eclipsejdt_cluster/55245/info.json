{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09f5fa884d1e17cda65aeb82c240a7d3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8849943fbc65a9a53bb65663e39fe7b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "980e2ed65938249223128b7fd8d8778c9eb3b8a3", "commitAfterChange": "929a0b3bf0dc89629d94cc4afbe6066815008f9f", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " public void parseError( \tint startPosition,  \tint endPosition,  \tchar[] currentTokenSource,  \tString errorTokenName,  \tString[] possibleTokens)", "signatureAfterChange": " public void parseError( \tint startPosition,  \tint endPosition,  \tint currentToken, \tchar[] currentTokenSource,  \tString errorTokenName,  \tString[] possibleTokens)", "diff": ["+\tint currentToken,", "-\t\tif (isKeyword(currentTokenSource)) {", "+\t\tif (isKeyword(currentToken)) {", "-\tif (isKeyword(currentTokenSource)) {", "+\tif (isKeyword(currentToken)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfbca0b879a0ff857767d8965cd68dfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "fc8ad684cd40eead6263b5107f1ff8c7f0890a8b", "commitAfterChange": "92d0dd4e2b5e041546b8d441e016f40c7cf1e442", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  protected void parseTags(boolean hasLineComment)", "signatureAfterChange": "  protected void parseTags(boolean hasLineComment)", "diff": ["+\t\tfinal int currentTokenStart = getCurrentTokenStartPosition();", "+\t\tif (linePtr < 0) {", "+\t\t\tif (currentTokenStart == 0) {", "+\t\t\t\t// the whole line is commented out", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t} else if (currentTokenStart == (lineEnds[linePtr] + 1)) {", "+\t\t\t// the whole line is commented out", "+\t\t\treturn;", "+\t\t}"]}], "num": 55245}