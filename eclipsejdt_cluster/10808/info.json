{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44b77e888130e16e28cff21b4ec9d929", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0959eab0ab6b98ae6d32093705317428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "510bca02ec1705cb49e8296894c2f20084ae432d", "commitAfterChange": "4b7339d0380d230f31bd3019b0bc7395f10d2215", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void _test009()", "signatureAfterChange": " public void test009()", "diff": ["-// TODO (maxime) reenable once passing on Linux", "-public void _test009(){", "+public void test009(){", "-\t        \"\tZork z;\\r\\n\" + ", "+\t        \"\tZork z;\\n\" + ", "-        + \" -cp \\\"\" + OUTPUT_DIR + \"[+OK2.java;~Warn.java;-KO.java]\\\"\"", "+        + \" -cp \\\"\" + OUTPUT_DIR + \"[+OK2.java\" + File.pathSeparator + \"~Warn.java\" ", "+        \t+ File.pathSeparator + \"-KO.java]\\\"\"", "-        \"[5 .class files generated]\\r\\n\", ", "-        \"----------\\r\\n\" + ", "-        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\\\\X.java\\r\\n\" + ", "-        \" (at line 5)\\r\\n\" + ", "-        \"\tWarn warn;\\r\\n\" + ", "-        \"\t^^^^\\r\\n\" + ", "-        \"Discouraged access: Warn\\r\\n\" + ", "-        \"----------\\r\\n\" + ", "-        \"----------\\r\\n\" + ", "-        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\\\\X.java\\r\\n\" + ", "-        \" (at line 6)\\r\\n\" + ", "-        \"\tKO ko;\\r\\n\" + ", "-        \"\t^^\\r\\n\" + ", "-        \"Access restriction: KO\\r\\n\" + ", "-        \"----------\\r\\n\" + ", "-        \"----------\\r\\n\" + ", "-        \"3. ERROR in ---OUTPUT_DIR_PLACEHOLDER---\\\\X.java\\r\\n\" + ", "-        \" (at line 7)\\r\\n\" + ", "-        \"\tZork z;\\r\\n\" + ", "-        \"\t^^^^\\r\\n\" + ", "-        \"Zork cannot be resolved to a type\\r\\n\" + ", "-        \"----------\\r\\n\" + ", "+        \"[5 .class files generated]\\n\", ", "+        \"----------\\n\" + ", "+        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 5)\\n\" + ", "+        \"\tWarn warn;\\n\" + ", "+        \"\t^^^^\\n\" + ", "+        \"Discouraged access: Warn\\n\" + ", "+        \"----------\\n\" + ", "+        \"----------\\n\" + ", "+        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 6)\\n\" + ", "+        \"\tKO ko;\\n\" + ", "+        \"\t^^\\n\" + ", "+        \"Access restriction: KO\\n\" + ", "+        \"----------\\n\" + ", "+        \"----------\\n\" + ", "+        \"3. ERROR in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 7)\\n\" + ", "+        \"\tZork z;\\n\" + ", "+        \"\t^^^^\\n\" + ", "+        \"Zork cannot be resolved to a type\\n\" + ", "+        \"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d73aa88bfc9e66e1582554f6d37ef84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "551b0235ed10e5d5f4d3b002cdf8b4334747504f", "commitAfterChange": "6c1edb564d07834166fc74b2c0a63633a50ccf36", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic void test086()", "signatureAfterChange": " \tpublic void _test086()", "diff": ["-\tpublic void test086() {", "+\tpublic void _test086() {", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static void checkConversions(byte _byte) {\\n\" + ", "-\t\t\t\t\"\t\tShort s = (short) _byte; // cast reported is necessary\\n\" + ", "-\t\t\t\t\"\t\tShort s2 = _byte; // ko\\n\" + ", "-\t\t\t\t\"\t} \\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"    public static void main(String args[]) {\\n\" + ", "-\t\t\t\t\"        byte _byte = 2;\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"        checkConversions(_byte);\\n\" + ", "-\t\t\t\t\"        System.out.println(\\\"OK\\\");\\n\" + ", "-\t\t\t\t\"      }\\n\" + ", "+\t\t\t\t\"  private static void checkConversions(byte _byte) {\\n\" + ", "+\t\t\t\t\"    Short s = (short) _byte; // cast is necessary\\n\" + ", "+\t\t\t\t\"    Short s2 = _byte; // ko\\n\" + ", "+\t\t\t\t\"  } \\n\" + ", "+\t\t\t\t\"  public static void main(String args[]) {\\n\" + ", "+\t\t\t\t\"    byte _byte = 2;\\n\" + ", "+\t\t\t\t\"    checkConversions(_byte);\\n\" + ", "+\t\t\t\t\"    System.out.println(\\\"OK\\\");\\n\" + ", "+\t\t\t\t\"  }\\n\" + ", "-            \"----------\\n\" + ", "-            \"1. WARNING in X.java (at line 4)\\n\" + ", "-            \"   Short s = (short) _byte; // cast reported is necessary\\n\" + ", "-            \"             ^^^^^^^^^^^^^\\n\" + ", "-            \"The expression of type short is boxed into Short\\n\" + ", "-            \"----------\\n\" + ", "-            \"2. ERROR in X.java (at line 5)\\n\" + ", "-            \"   Short s2 = _byte; // ko\\n\" + ", "-            \"         ^^\\n\" + ", "-            \"Type mismatch: cannot convert from byte to Short\\n\" + ", "-            \"----------\\n\");", "+        \"----------\\n\" + ", "+        \"1. WARNING in X.java (at line 3)\\n\" + ", "+        \"   Short s = (short) _byte; // cast is necessary\\n\" + ", "+        \"             ^^^^^^^^^^^^^\\n\" + ", "+        \"The expression of type short is boxed into Short\\n\" + ", "+        \"----------\\n\" + ", "+        \"2. ERROR in X.java (at line 4)\\n\" + ", "+        \"   Short s2 = _byte; // ko\\n\" + ", "+        \"         ^^\\n\" + ", "+        \"Type mismatch: cannot convert from byte to Short\\n\" + ", "+        \"----------\\n\");"]}], "num": 10808}