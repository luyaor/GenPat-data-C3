{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16b678a1130c70788e1789f277fcd0c8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a0dc77495fddfcdeaa7b4f52f585bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "973af06dbc6df022ac42e8e0a0c238581d8558f6", "commitAfterChange": "f61787e560ec300f4e60b2d9cc64378b38b8a03a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     \tReferenceBinding resolve(LookupEnvironment environment)", "signatureAfterChange": "     \tReferenceBinding resolve(LookupEnvironment environment)", "diff": ["-\t\t\tthis.superclass = BinaryTypeBinding.resolveUnresolvedType(this.superclass, environment, true);", "+\t\t\tthis.superclass = BinaryTypeBinding.resolveType(this.superclass, environment, true);", "-\t\t\t\tinterfaces[i] = BinaryTypeBinding.resolveUnresolvedType(interfaces[i], environment, true);", "+\t\t\t\tinterfaces[i] = BinaryTypeBinding.resolveType(interfaces[i], environment, true);", "-\t\tthis.modifiers &= ~ExtraCompilerModifiers.AccUnresolved;", "-\t", "-\t\t// finish resolving the types", "-\t\tif (this.superclass != null)", "-\t\t\tthis.superclass = BinaryTypeBinding.resolveType(this.superclass, environment, true);", "-\t\tfor (int i = interfaces.length; --i >= 0;)", "-\t\t\tinterfaces[i] = BinaryTypeBinding.resolveType(interfaces[i], environment, true);", "-", "+\t\tthis.modifiers &= ~ExtraCompilerModifiers.AccUnresolved;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ad5d388b62b0aa37504c7e10b744345", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-", "-\t// Remember that interfaces can only define public instance methods", "-\tif (concreteMethod.isStatic())", "-\t\t// Cannot inherit a static method which is specified as an instance method by an interface", "-\t\tproblemReporter().staticInheritedMethodConflicts(type, concreteMethod, abstractMethods);\t", "-\tif (!concreteMethod.isPublic())", "-\t\t// Cannot reduce visibility of a public method specified by an interface", "-\t\tproblemReporter().inheritedMethodReducesVisibility(type, concreteMethod, abstractMethods);", "-\tif (concreteMethod.thrownExceptions != NoExceptions)", "-\t\tfor (int i = abstractMethods.length; --i >= 0;)", "-\t\t\tcheckExceptions(concreteMethod, abstractMethods[i]);", "+\tcheckConcreteInheritedMethod(concreteMethod, abstractMethods);"]}], "num": 19090}