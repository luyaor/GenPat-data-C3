{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0847934e554d2dd63e4e03605d813820", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "528e77800f6fe50401ae31e95621ff77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AssertStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\tif (expression == null) {", "-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\tif (this.expression == null) {", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0663c3b4bcb07511832803d0005b58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic Name getName()", "signatureAfterChange": " \tpublic Name getName()", "diff": ["-\t\tif (typeName == null) {", "-\t\t\tpreLazyInit();", "-\t\t\tthis.typeName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.typeName, NAME_PROPERTY);", "+\t\tif (this.typeName == null) {", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.typeName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.typeName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.typeName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 23318}