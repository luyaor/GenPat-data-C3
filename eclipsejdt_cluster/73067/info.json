{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41a52ccca361fd04603cb4605bf917b0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647aa35df3db85bce48d3c0e19f06b3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "750411fd91e15b66837e5cc237fa33c82adf90d0", "commitAfterChange": "09a38f4195143b17d0fe6ada6fffa00f76c68a20", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected void consumeMethodInvocationName()", "signatureAfterChange": "\r protected void consumeMethodInvocationName()", "diff": ["-\tExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(accessMode);\r", "+\tfinal ExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(accessMode);\r", "-\tpushOnAstStack(constructorCall);\r", "+\tif (!diet){\r", "+\t\tpushOnAstStack(constructorCall);\r", "+\t\tthis.restartRecovery\t= true;\t// force to restart in recovery mode\r", "+\t\tthis.lastIgnoredToken = -1;\r", "+\t} else {\r", "+\t\tpushOnExpressionStack(new Expression(){\r", "+\t\t\tpublic TypeBinding resolveType(BlockScope scope) {\r", "+\t\t\t\tconstructorCall.resolve(scope);\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "+\t\t});\r", "+\t}\r", "-\trestartRecovery\t= true;\t// force to restart in recovery mode\r", "-\tisOrphanCompletionNode = true;\t\r", "+\tthis.isOrphanCompletionNode = true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9631b919f1213c5b5871d6db2b3ae55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "750411fd91e15b66837e5cc237fa33c82adf90d0", "commitAfterChange": "09a38f4195143b17d0fe6ada6fffa00f76c68a20", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected void consumeMethodInvocationPrimary()", "signatureAfterChange": "\r protected void consumeMethodInvocationPrimary()", "diff": ["-\tExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(accessMode);\r", "+\tfinal ExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(accessMode);\r", "-\tpushOnAstStack(constructorCall);\r", "+\tif (!diet){\r", "+\t\tpushOnAstStack(constructorCall);\r", "+\t\tthis.restartRecovery\t= true;\t// force to restart in recovery mode\r", "+\t\tthis.lastIgnoredToken = -1;\r", "+\t} else {\r", "+\t\tpushOnExpressionStack(new Expression(){\r", "+\t\t\tpublic TypeBinding resolveType(BlockScope scope) {\r", "+\t\t\t\tconstructorCall.resolve(scope);\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "+\t\t});\r", "+\t}\r", "+\t\r", "-\trestartRecovery\t= true;\t// force to restart in recovery mode\r", "-\tisOrphanCompletionNode = true;\t\r", "+\tthis.isOrphanCompletionNode = true;\r"]}], "num": 73067}