{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32980763225c6000bb008126997f6218", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37cc20c1137c5404a01c3bdc342f3393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "signatureAfterChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "diff": ["-\t\t\t\t\tcase T_JavaLangObject:", "+\t\t\t\t\tcase TypeIds.T_JavaLangObject:", "-\t\t\t\t\tcase T_byte:", "-\t\t\t\t\tcase T_short:", "-\t\t\t\t\tcase T_char:", "-\t\t\t\t\tcase T_boolean:", "-\t\t\t\t\tcase T_int:", "-\t\t\t\t\tcase T_long:", "-\t\t\t\t\tcase T_float:", "-\t\t\t\t\tcase T_double:", "+\t\t\t\t\tcase TypeIds.T_byte:", "+\t\t\t\t\tcase TypeIds.T_short:", "+\t\t\t\t\tcase TypeIds.T_char:", "+\t\t\t\t\tcase TypeIds.T_boolean:", "+\t\t\t\t\tcase TypeIds.T_int:", "+\t\t\t\t\tcase TypeIds.T_long:", "+\t\t\t\t\tcase TypeIds.T_float:", "+\t\t\t\t\tcase TypeIds.T_double:", "-\t\t\t\tif (erasedSuperType == otherType || erasedSuperType.id == T_JavaLangObject && otherType.isInterface()) {", "+\t\t\t\tif (erasedSuperType == otherType || erasedSuperType.id == TypeIds.T_JavaLangObject && otherType.isInterface()) {", "-\t\t\t\t\t\tif (otherType.id == T_JavaLangObject && erasedSuperType.isInterface()) continue nextOtherType; // keep Object for an interface", "+\t\t\t\t\t\tif (otherType.id == TypeIds.T_JavaLangObject && erasedSuperType.isInterface()) continue nextOtherType; // keep Object for an interface", "-\t\t\t\t\t\t\t&& otherType.leafComponentType().id == T_JavaLangObject", "+\t\t\t\t\t\t\t&& otherType.leafComponentType().id == TypeIds.T_JavaLangObject"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7615e136cac78a553cae476f4ea34b06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\tif (fieldBinding.problemId() == Ambiguous) {", "-\t\t\t\t\t\t\t\t\t\tif (foundField == null || foundField.problemId() == NotVisible)", "+\t\t\t\t\t\t\t\t\tif (fieldBinding.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\t\t\t\t\t\t\t\tif (foundField == null || foundField.problemId() == ProblemReasons.NotVisible)", "-\t\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tNonStaticReferenceInConstructorInvocation);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.NonStaticReferenceInConstructorInvocation);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tNonStaticReferenceInStaticContext);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.NonStaticReferenceInStaticContext);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\tif (foundField == null || (foundField.problemId() == NotVisible && fieldBinding.problemId() != NotVisible)) {", "+\t\t\t\t\t\t\t\t\tif (foundField == null || (foundField.problemId() == ProblemReasons.NotVisible && fieldBinding.problemId() != ProblemReasons.NotVisible)) {", "-\t\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ReceiverTypeNotVisible);", "+\t\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ProblemReasons.ReceiverTypeNotVisible);", "-\t\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, null, Ambiguous);", "+\t\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, null, ProblemReasons.Ambiguous);", "-\t\t\treturn new ProblemBinding(name, enclosingSourceType(), NotFound);", "+\t\t\treturn new ProblemBinding(name, enclosingSourceType(), ProblemReasons.NotFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb39b937c1de763419b52943b2188a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tif (methodBinding.problemId() == Ambiguous) {", "-\t\t\tif (foundMethod == null || foundMethod.problemId() == NotVisible)", "+\t\tif (methodBinding.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\tif (foundMethod == null || foundMethod.problemId() == ProblemReasons.NotVisible)", "-\t\t\t\treturn new ProblemMethodBinding(selector, methodBinding.parameters, InheritedNameHidesEnclosingName);", "+\t\t\t\treturn new ProblemMethodBinding(selector, methodBinding.parameters, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, NotFound);", "+\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, ProblemReasons.NotFound);", "-\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, NotVisible);", "+\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, argumentTypes, ProblemReasons.NotVisible);", "-\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, NonStaticReferenceInConstructorInvocation);", "+\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, ProblemReasons.NonStaticReferenceInConstructorInvocation);", "-\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, NonStaticReferenceInStaticContext);", "+\t\t\t\t\tinsideProblem = new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, ProblemReasons.NonStaticReferenceInStaticContext);", "-\t\t\t\t\treturn new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, InheritedNameHidesEnclosingName);", "+\t\t\t\t\treturn new ProblemMethodBinding(methodBinding, methodBinding.selector, methodBinding.parameters, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\tif (foundMethod == null || (foundMethod.problemId() == NotVisible && methodBinding.problemId() != NotVisible)) {", "+\t\tif (foundMethod == null || (foundMethod.problemId() == ProblemReasons.NotVisible && methodBinding.problemId() != ProblemReasons.NotVisible)) {", "-\treturn new ProblemMethodBinding(selector, argumentTypes, NotFound);", "+\treturn new ProblemMethodBinding(selector, argumentTypes, ProblemReasons.NotFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9941c5eba6e95b064af7ef8ce7cd0394", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "diff": ["-\t\tcase NotFound :", "+\t\tcase ProblemReasons.NotFound :", "-\t\tcase NotVisible :", "+\t\tcase ProblemReasons.NotVisible :", "-\t\tcase Ambiguous :", "+\t\tcase ProblemReasons.Ambiguous :", "-\t\tcase InheritedNameHidesEnclosingName :", "+\t\tcase ProblemReasons.InheritedNameHidesEnclosingName :", "-\t\tcase NonStaticReferenceInConstructorInvocation :", "+\t\tcase ProblemReasons.NonStaticReferenceInConstructorInvocation :", "-\t\tcase NonStaticReferenceInStaticContext :", "+\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "-\t\tcase ReceiverTypeNotVisible :", "+\t\tcase ProblemReasons.ReceiverTypeNotVisible :", "-\t\tcase ParameterBoundMismatch :", "+\t\tcase ProblemReasons.ParameterBoundMismatch :", "-\t\tcase TypeParameterArityMismatch :", "+\t\tcase ProblemReasons.TypeParameterArityMismatch :", "-\t\tcase ParameterizedMethodTypeMismatch :", "+\t\tcase ProblemReasons.ParameterizedMethodTypeMismatch :", "-\t\tcase TypeArgumentsForRawGenericMethod :", "+\t\tcase ProblemReasons.TypeArgumentsForRawGenericMethod :", "-\t\tcase NoError : // 0", "+\t\tcase ProblemReasons.NoError : // 0"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c5cbe4ac87340b5668700c03d817c9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 214, "signatureBeforeChange": " public void invokeStringValueOf(int typeID)", "signatureAfterChange": " public void invokeStringValueOf(int typeID)", "diff": ["-\t\tcase T_int :", "-\t\tcase T_byte :", "-\t\tcase T_short :", "+\t\tcase TypeIds.T_int :", "+\t\tcase TypeIds.T_byte :", "+\t\tcase TypeIds.T_short :", "-\t\tcase T_long :", "+\t\tcase TypeIds.T_long :", "-\t\tcase T_float :", "+\t\tcase TypeIds.T_float :", "-\t\tcase T_double :", "+\t\tcase TypeIds.T_double :", "-\t\tcase T_char :", "+\t\tcase TypeIds.T_char :", "-\t\tcase T_boolean :", "+\t\tcase TypeIds.T_boolean :", "-\t\tcase T_JavaLangObject :", "-\t\tcase T_JavaLangString :", "-\t\tcase T_null :", "-\t\tcase T_undefined :", "+\t\tcase TypeIds.T_JavaLangObject :", "+\t\tcase TypeIds.T_JavaLangString :", "+\t\tcase TypeIds.T_null :", "+\t\tcase TypeIds.T_undefined :", "-\t\t\tOPC_invokestatic,", "+\t\t\tOpcodes.OPC_invokestatic,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab6da7fb6a886226ee089532bb1381a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void generateConstant(Constant constant, int implicitConversionCode)", "signatureAfterChange": " public void generateConstant(Constant constant, int implicitConversionCode)", "diff": ["-\tint targetTypeID = (implicitConversionCode & IMPLICIT_CONVERSION_MASK) >> 4;", "+\tint targetTypeID = (implicitConversionCode & TypeIds.IMPLICIT_CONVERSION_MASK) >> 4;", "-\t\t\tcase T_boolean :", "+\t\t\tcase TypeIds.T_boolean :", "-\t\t\tcase T_char :", "+\t\t\tcase TypeIds.T_char :", "-\t\t\tcase T_byte :", "+\t\t\tcase TypeIds.T_byte :", "-\t\t\tcase T_short :", "+\t\t\tcase TypeIds.T_short :", "-\t\t\tcase T_int :", "+\t\t\tcase TypeIds.T_int :", "-\t\t\tcase T_long :", "+\t\t\tcase TypeIds.T_long :", "-\t\t\tcase T_float :", "+\t\t\tcase TypeIds.T_float :", "-\t\t\tcase T_double :", "+\t\t\tcase TypeIds.T_double :", "-\t\t\tcase T_JavaLangString :", "+\t\t\tcase TypeIds.T_JavaLangString :", "-\tif ((implicitConversionCode & BOXING) != 0) {", "+\tif ((implicitConversionCode & TypeIds.BOXING) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf23c78fe50e70b86194e50887c1881c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 191, "signatureBeforeChange": "  public void invokeJavaLangAssertionErrorConstructor(int typeBindingID)", "signatureAfterChange": " public void invokeJavaLangAssertionErrorConstructor(int typeBindingID)", "diff": ["+public void invokeJavaLangAssertionErrorConstructor(int typeBindingID) {", "+\t// invokespecial: java.lang.AssertionError.<init>(typeBindingID)V", "+\tif (DEBUG) System.out.println(position + \"\\t\\tinvokespecial: java.lang.AssertionError.<init>(typeBindingID)V\"); //$NON-NLS-1$", "+\tint argCount = 1;", "+\tchar[] signature = null;", "+\tswitch (typeBindingID) {", "+\t\tcase TypeIds.T_int :", "+\t\tcase TypeIds.T_byte :", "+\t\tcase TypeIds.T_short :", "+\t\t\tsignature = ConstantPool.IntConstrSignature;", "+\t\t\tbreak;", "+\t\tcase TypeIds.T_long :", "+\t\t\tsignature = ConstantPool.LongConstrSignature;", "+\t\t\targCount = 2;", "+\t\t\tbreak;", "+\t\tcase TypeIds.T_float :", "+\t\t\tsignature = ConstantPool.FloatConstrSignature;", "+\t\t\tbreak;", "+\t\tcase TypeIds.T_double :", "+\t\t\tsignature = ConstantPool.DoubleConstrSignature;", "+\t\t\targCount = 2;", "+\t\t\tbreak;", "+\t\tcase TypeIds.T_char :", "+\t\t\tsignature = ConstantPool.CharConstrSignature;", "+\t\t\tbreak;", "+\t\tcase TypeIds.T_boolean :", "+\t\t\tsignature = ConstantPool.BooleanConstrSignature;", "+\t\t\tbreak;", "+\t\tcase TypeIds.T_JavaLangObject :", "+\t\tcase TypeIds.T_JavaLangString :", "+\t\tcase TypeIds.T_null :", "+\t\t\tsignature = ConstantPool.ObjectConstrSignature;", "+\t\t\tbreak;", "+\t}", "+\tthis.invoke(", "+\t\t\tOpcodes.OPC_invokespecial,", "+\t\t\targCount, // argCount", "+\t\t\t0, // return type size", "+\t\t\tConstantPool.JavaLangAssertionErrorConstantPoolName,", "+\t\t\tConstantPool.Init,", "+\t\t\tsignature);", "+}", "-", "-public void invokeJavaLangAssertionErrorConstructor(int typeBindingID) {", "-\t// invokespecial: java.lang.AssertionError.<init>(typeBindingID)V", "-\tif (DEBUG) System.out.println(position + \"\\t\\tinvokespecial: java.lang.AssertionError.<init>(typeBindingID)V\"); //$NON-NLS-1$", "-\tint argCount = 1;", "-\tchar[] signature = null;", "-\tswitch (typeBindingID) {", "-\t\tcase T_int :", "-\t\tcase T_byte :", "-\t\tcase T_short :", "-\t\t\tsignature = ConstantPool.IntConstrSignature;", "-\t\t\tbreak;", "-\t\tcase T_long :", "-\t\t\tsignature = ConstantPool.LongConstrSignature;", "-\t\t\targCount = 2;", "-\t\t\tbreak;", "-\t\tcase T_float :", "-\t\t\tsignature = ConstantPool.FloatConstrSignature;", "-\t\t\tbreak;", "-\t\tcase T_double :", "-\t\t\tsignature = ConstantPool.DoubleConstrSignature;", "-\t\t\targCount = 2;", "-\t\t\tbreak;", "-\t\tcase T_char :", "-\t\t\tsignature = ConstantPool.CharConstrSignature;", "-\t\t\tbreak;", "-\t\tcase T_boolean :", "-\t\t\tsignature = ConstantPool.BooleanConstrSignature;", "-\t\t\tbreak;", "-\t\tcase T_JavaLangObject :", "-\t\tcase T_JavaLangString :", "-\t\tcase T_null :", "-\t\t\tsignature = ConstantPool.ObjectConstrSignature;", "-\t\t\tbreak;", "-\t}", "-\tthis.invoke(", "-\t\t\tOPC_invokespecial,", "-\t\t\targCount, // argCount", "-\t\t\t0, // return type size", "-\t\t\tConstantPool.JavaLangAssertionErrorConstantPoolName,", "-\t\t\tConstantPool.Init,", "-\t\t\tsignature);", "-}"]}], "num": 17616}