{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a32a530a4342490b87816fc6a5a3000", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d88a88ec0cc9a6e99e3f0e1cc0c3d7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "8ac2041929c9d6b50c0c848d701c4bff84336c3f", "commitAfterChange": "99e4df2949efc34d2761be7fafc5129385421683", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic IJavaElement getJavaElement()", "signatureAfterChange": "  \tpublic IJavaElement getJavaElement()", "diff": ["-\t\t\t\t\t// best effort: we don't know if the recovered binding is a binary or source binding, so go with a compilation unit", "-\t\t\t\t\treturn ((PackageFragment) javaElement).getCompilationUnit(new String(this.binding.sourceName()) + SuffixConstants.SUFFIX_STRING_java);", "+\t\t\t\t\t// best effort: we don't know if the recovered binding is a binary or source binding, so go with a simple source type", "+\t\t\t\t\treturn ((PackageFragment) javaElement).getCompilationUnit(new String(this.binding.sourceName()) + SuffixConstants.SUFFIX_STRING_java).getType(this.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c28c6730b3c43da2712c338727d7fa1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "8ac2041929c9d6b50c0c848d701c4bff84336c3f", "commitAfterChange": "99e4df2949efc34d2761be7fafc5129385421683", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic IJavaElement getJavaElement()", "signatureAfterChange": " \tpublic IJavaElement getJavaElement()", "diff": ["-\t\t\t\t// best effort: we don't know if the recovered binding is a binary or source binding, so go with a compilation unit", "-\t\t\t\treturn ((PackageFragment) javaElement).getCompilationUnit(getInternalName() + SuffixConstants.SUFFIX_STRING_java);", "+\t\t\t\t// best effort: we don't know if the recovered binding is a binary or source binding, so go with a simple source type", "+\t\t\t\treturn ((PackageFragment) javaElement).getCompilationUnit(getInternalName() + SuffixConstants.SUFFIX_STRING_java).getType(this.getName());"]}], "num": 14323}