{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87d58020c84a0ee4cae7c3767a6a6251", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ea06ab58420969f5acafa55e46a65dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "988db3ec863dadeb2db80ab85efafc59fca27d63", "commitAfterChange": "bba7694c48471620eaabd1cb9ca1daab01462bcd", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles, \t\tString expectedProblemLog, \t\tString[] classLibraries, \t\tboolean shouldFlushOutputDirectory, \t\tMap customOptions, \t\tboolean generateOutput, \t\tboolean showCategory, \t\tboolean showWarningToken)", "signatureAfterChange": " \tprotected void runNegativeTest( \t\t\tString[] testFiles, \t\t\tString expectedCompilerLog, \t\t\tString[] classLibraries, \t\t\tboolean shouldFlushOutputDirectory, \t\t\tMap customOptions, \t\t\tString expectedErrorString)", "diff": ["+\t\t\tString[] testFiles,", "+\t\t\tString expectedCompilerLog,", "+\t\t\tString[] classLibraries,", "+\t\t\tboolean shouldFlushOutputDirectory,", "+\t\t\tMap customOptions,", "+\t\t\tString expectedErrorString) {", "+\t\t\trunTest(", "+\t\t \t\t// test directory preparation", "+\t\t\t\tshouldFlushOutputDirectory /* should flush output directory */,", "+\t\t\t\ttestFiles /* test files */,", "+\t\t\t\t// compiler options", "+\t\t\t\tclassLibraries /* class libraries */,", "+\t\t\t\tcustomOptions /* custom options */,", "+\t\t\t\tfalse /* do not perform statements recovery */,", "+\t\t\t\tnew Requestor( /* custom requestor */", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tnull /* no custom requestor */,", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tfalse),", "+\t\t\t\t// compiler results", "+\t\t\t\texpectedCompilerLog == null || /* expecting compiler errors */", "+\t\t\t\t\texpectedCompilerLog.indexOf(\"ERROR\") != -1,", "+\t\t\t\texpectedCompilerLog /* expected compiler log */,", "+\t\t\t\t// runtime options", "+\t\t\t\tfalse /* do not force execution */,", "+\t\t\t\tnull /* no vm arguments */,", "+\t\t\t\t// runtime results", "+\t\t\t\tnull /* do not check output string */,", "+\t\t\t\texpectedErrorString /* do not check error string */,", "+\t\t\t\t// javac options", "+\t\t\t\tJavacTestOptions.DEFAULT /* default javac test options */);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1107af83016710e65f72b82a48d9980", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "05c0ef920f8f629670a61fe160e2d7350d9d88d5", "commitAfterChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles, \t\tString expectedProblemLog, \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " protected void runNegativeTest(String[] testFiles, String expectedCompilerLog, boolean performStatementRecovery)", "diff": ["+protected void runNegativeTest(String[] testFiles, String expectedCompilerLog, boolean performStatementRecovery) {", "+\trunTest(", "+ \t\t// test directory preparation", "+\t\ttrue /* flush output directory */,", "+\t\ttestFiles /* test files */,", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tnull /* no custom options */,", "+\t\tperformStatementRecovery,", "+\t\tnew Requestor( /* custom requestor */", "+\t\t\t\tfalse,", "+\t\t\t\tnull /* no custom requestor */,", "+\t\t\t\tfalse,", "+\t\t\t\tfalse),", "+\t\t// compiler results", "+\t\texpectedCompilerLog == null || /* expecting compiler errors */", "+\t\t\texpectedCompilerLog.indexOf(\"ERROR\") != -1,", "+\t\texpectedCompilerLog /* expected compiler log */,", "+\t\t// runtime options", "+\t\tfalse /* do not force execution */,", "+\t\tnull /* no vm arguments */,", "+\t\t// runtime results", "+\t\tnull /* do not check output string */,", "+\t\tnull /* do not check error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.DEFAULT /* default javac test options */);", "+}"]}], "num": 52494}