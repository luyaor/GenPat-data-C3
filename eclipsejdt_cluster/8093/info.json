{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91cdd0c72d86d368af39c06e217ec5d9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48878a42ab391a76578217ba3ea43172", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "bcf1522935dfbdb0bc359777ceee5d7211666ccc", "commitAfterChange": "05a18c8df0376c4fc525317208425f9e4450ec08", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public final void pushLineSeparator() throws InvalidInputException", "signatureAfterChange": "  public final void pushLineSeparator() throws InvalidInputException", "diff": ["-\t\tif ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;", "+\t\t//TODO : (olivier) david - why the following line was \"if ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;\" ?", "+\t\tif ((linePtr >= 0) && (lineEnds[linePtr] >= separatorPos)) return;", "-\t\t\t\tif ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;", "+\t\t\t\t//TODO : (olivier) david - why the following line was \"if ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;\" ?", "+\t\t\t\tif ((linePtr >= 0) && (lineEnds[linePtr] >= separatorPos)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f6fcfb0b85a5f5df4d432d1bde3e1a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "3631cf47f01fc0da1be7732f6c067adbe5bd4214", "commitAfterChange": "bcf1522935dfbdb0bc359777ceee5d7211666ccc", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public final void pushLineSeparator() throws InvalidInputException", "signatureAfterChange": "  public final void pushLineSeparator() throws InvalidInputException", "diff": ["-\t\tif ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;", "+\t\t//TODO : (olivier) david - why the following line was \"if ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;\" ?", "+\t\tif ((linePtr >= 0) && (lineEnds[linePtr] >= separatorPos)) return;", "-\t\t\t\tif ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;", "+\t\t\t\t//TODO : (olivier) david - why the following line was \"if ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;\" ?", "+\t\t\t\tif ((linePtr >= 0) && (lineEnds[linePtr] >= separatorPos)) return;"]}], "num": 8093}