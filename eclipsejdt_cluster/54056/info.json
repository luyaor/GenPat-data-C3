{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0d522ca2faa72649e572004e96fc8c4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb22226076718bbaf72e5a287b5f8307", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test0006_field_with_method_call()", "signatureAfterChange": " public void test0012_field_with_method_call()", "diff": ["+// null analysis -- field", "+public void test0012_field_with_method_call() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  Object o;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    o = null;\\n\" + ", "+\t\t\t\"    bar();\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  static void bar() {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\" // still ok because the class may hold a pointer to this", "+\t);", "+}", "-\t// null analysis -- field", "-\tpublic void test0006_field_with_method_call() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t Object o;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t o = null;\\n\" + ", "-\t\t\t\t\"\t\t bar();\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"\t static void bar() {\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\" // still ok because the class may hold a pointer to this", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec4cd721fdb7550bfc0f11eece72f57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test0007_field_with_method_call()", "signatureAfterChange": " public void test0013_field_with_method_call()", "diff": ["+// null analysis -- field", "+public void test0013_field_with_method_call() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  static Object o;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    o = null;\\n\" + ", "+\t\t\t\"    bar();\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void bar() {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\" // still ok because this may place a static call upon X", "+\t);", "+}", "-\t// null analysis -- field", "-\tpublic void test0007_field_with_method_call() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t static Object o;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t o = null;\\n\" + ", "-\t\t\t\t\"\t\t bar();\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"\t void bar() {\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\" // still ok because this may place a static call upon X", "-\t\t);", "-\t}"]}], "num": 54056}