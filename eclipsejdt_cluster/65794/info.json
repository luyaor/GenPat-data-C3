{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c21d32e942e52dfd241d52090074bab3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d973b6c7cea16cb7072c066856f47c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void test0072() throws JavaModelException", "signatureAfterChange": " public void test0072() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src3\", \"test0072\", \"Test.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"test0072.p.ImportedClass.ZZ\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertResults(", "-\t\t\t\"ZZZ1[FIELD_REF]{test0072.p.ImportedClass.ZZZ1;, Ltest0072.p.ImportedClass;, I, ZZZ1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"ZZZ2[METHOD_IMPORT]{test0072.p.ImportedClass.ZZZ2;, Ltest0072.p.ImportedClass;, ()V, ZZZ2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"ZZZ2[METHOD_IMPORT]{test0072.p.ImportedClass.ZZZ2;, Ltest0072.p.ImportedClass;, (I)V, ZZZ2, (i), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t\trequestor.getResults());", "+\tICompilationUnit importedClass = null;", "+\ttry {", "+\t\timportedClass = getWorkingCopy(", "+\t\t\t\t\"/Completion/src3/test0072/p/ImportedClass.java\",", "+\t\t\t\t\"package test0072.p;\\n\"+", "+\t\t\t\t\"\\n\"+", "+\t\t\t\t\"public class ImportedClass {\\n\"+", "+\t\t\t\t\"\tpublic static int ZZZ1;\\n\"+", "+\t\t\t\t\"\tpublic static void ZZZ2() {}\\n\"+", "+\t\t\t\t\"\tpublic static void ZZZ2(int i) {}\\n\"+", "+\t\t\t\t\"}\");", "+\t\t", "+\t\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src3\", \"test0072\", \"Test.java\");", "+\t", "+\t\tString str = cu.getSource();", "+\t\tString completeBehind = \"test0072.p.ImportedClass.ZZ\";", "+\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t\tcu.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t\tassertResults(", "+\t\t\t\t\"ZZZ1[FIELD_REF]{test0072.p.ImportedClass.ZZZ1;, Ltest0072.p.ImportedClass;, I, ZZZ1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZZ2[METHOD_IMPORT]{test0072.p.ImportedClass.ZZZ2;, Ltest0072.p.ImportedClass;, ()V, ZZZ2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZZ2[METHOD_IMPORT]{test0072.p.ImportedClass.ZZZ2;, Ltest0072.p.ImportedClass;, (I)V, ZZZ2, (i), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tif(importedClass != null) {", "+\t\t\timportedClass.discardWorkingCopy();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5207021ac4fde368ef058b395c2dfe11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void test0073() throws JavaModelException", "signatureAfterChange": " public void test0073() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src3\", \"test0073\", \"Test.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"test0073.p.ImportedClass.Inner.ZZ\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertResults(", "-\t\t\t\"ZZZ1[FIELD_REF]{test0073.p.ImportedClass.Inner.ZZZ1;, Ltest0073.p.ImportedClass$Inner;, I, ZZZ1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"ZZZ2[METHOD_IMPORT]{test0073.p.ImportedClass.Inner.ZZZ2;, Ltest0073.p.ImportedClass$Inner;, ()V, ZZZ2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"ZZZ2[METHOD_IMPORT]{test0073.p.ImportedClass.Inner.ZZZ2;, Ltest0073.p.ImportedClass$Inner;, (I)V, ZZZ2, (i), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t\trequestor.getResults());", "+\tICompilationUnit importedClass = null;", "+\ttry {", "+\t\timportedClass = getWorkingCopy(", "+\t\t\t\t\"/Completion/src3/test0073/p/ImportedClass.java\",", "+\t\t\t\t\"package test0073.p;\\n\"+", "+\t\t\t\t\"\\n\"+", "+\t\t\t\t\"public class ImportedClass {\\n\"+", "+\t\t\t\t\"\tpublic static class Inner {\\n\"+", "+\t\t\t\t\"\t\tpublic static int ZZZ1;\\n\"+", "+\t\t\t\t\"\t\tpublic static void ZZZ2() {}\\n\"+", "+\t\t\t\t\"\t\tpublic static void ZZZ2(int i) {}\\n\"+", "+\t\t\t\t\"\t}\\n\"+", "+\t\t\t\t\"}\");", "+\t\t", "+\t\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src3\", \"test0073\", \"Test.java\");", "+\t", "+\t\tString str = cu.getSource();", "+\t\tString completeBehind = \"test0073.p.ImportedClass.Inner.ZZ\";", "+\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t\tcu.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t\tassertResults(", "+\t\t\t\t\"ZZZ1[FIELD_REF]{test0073.p.ImportedClass.Inner.ZZZ1;, Ltest0073.p.ImportedClass$Inner;, I, ZZZ1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZZ2[METHOD_IMPORT]{test0073.p.ImportedClass.Inner.ZZZ2;, Ltest0073.p.ImportedClass$Inner;, ()V, ZZZ2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZZ2[METHOD_IMPORT]{test0073.p.ImportedClass.Inner.ZZZ2;, Ltest0073.p.ImportedClass$Inner;, (I)V, ZZZ2, (i), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tif(importedClass != null) {", "+\t\t\timportedClass.discardWorkingCopy();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a95249756c4910477da13cd3ab40c1e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void test0074() throws JavaModelException", "signatureAfterChange": " public void test0074() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src3\", \"test0074\", \"Test.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"test0074.p.ImportedClass.Inner.ZZ\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertResults(", "-\t\t\t\"ZZZ1[FIELD_REF]{test0074.p.ImportedClass.Inner.ZZZ1;, Ltest0074.p.ImportedClass$Inner;, I, ZZZ1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"ZZZ2[METHOD_IMPORT]{test0074.p.ImportedClass.Inner.ZZZ2;, Ltest0074.p.ImportedClass$Inner;, ()V, ZZZ2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"ZZZ2[METHOD_IMPORT]{test0074.p.ImportedClass.Inner.ZZZ2;, Ltest0074.p.ImportedClass$Inner;, (I)V, ZZZ2, (i), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t\trequestor.getResults());", "+\tICompilationUnit importedClass = null;", "+\ttry {", "+\t\timportedClass = getWorkingCopy(", "+\t\t\t\t\"/Completion/src3/test0074/p/ImportedClass.java\",", "+\t\t\t\t\"package test0074.p;\\n\"+", "+\t\t\t\t\"\\n\"+", "+\t\t\t\t\"public class ImportedClass {\\n\"+", "+\t\t\t\t\"\tpublic class Inner {\\n\"+", "+\t\t\t\t\"\t\tpublic static int ZZZ1;\\n\"+", "+\t\t\t\t\"\t\tpublic static void ZZZ2() {}\\n\"+", "+\t\t\t\t\"\t\tpublic static void ZZZ2(int i) {}\\n\"+", "+\t\t\t\t\"\t}\\n\"+", "+\t\t\t\t\"}\");", "+\t\t", "+\t\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src3\", \"test0074\", \"Test.java\");", "+\t", "+\t\tString str = cu.getSource();", "+\t\tString completeBehind = \"test0074.p.ImportedClass.Inner.ZZ\";", "+\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t\tcu.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t\tassertResults(", "+\t\t\t\t\"ZZZ1[FIELD_REF]{test0074.p.ImportedClass.Inner.ZZZ1;, Ltest0074.p.ImportedClass$Inner;, I, ZZZ1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZZ2[METHOD_IMPORT]{test0074.p.ImportedClass.Inner.ZZZ2;, Ltest0074.p.ImportedClass$Inner;, ()V, ZZZ2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZZ2[METHOD_IMPORT]{test0074.p.ImportedClass.Inner.ZZZ2;, Ltest0074.p.ImportedClass$Inner;, (I)V, ZZZ2, (i), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tif(importedClass != null) {", "+\t\t\timportedClass.discardWorkingCopy();", "+\t\t}", "+\t}"]}], "num": 65794}