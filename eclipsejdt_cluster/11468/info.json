{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c581a9613a82186b1a790a027bceffec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1623e8656d36f5447ec376a1b4033230", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1798df591429fc6a5448f8a074f2d563846bcebb", "commitAfterChange": "e8a92b10517fc0e6b59559ac009096fb50176b96", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "signatureAfterChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "diff": ["-\tif (this.annotationPath != null) {", "+\tif (this.annotationPaths != null && CompilerOptions.ENABLED.equals(this.options.get(CompilerOptions.OPTION_AnnotationBasedNullAnalysis))) {", "-\t\t\t\t((ClasspathJar) cp).annotationPath = this.annotationPath;", "+\t\t\t\t((ClasspathJar) cp).annotationPaths = this.annotationPaths;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c04003b9770149d2bcd1f42df7026ee2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "ad2166cdb4061bd08d277e145a390369585ad35a", "commitAfterChange": "3ecd15451330956435ccef213a5775052d6006c5", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement node)", "signatureAfterChange": " \tpublic boolean visit(SwitchStatement node)", "diff": ["-\t\t\t\tint insertIndent= getIndent(node.getStartPosition()) + 1;", "-", "+\t\t\t\tint insertIndent= getIndent(node.getStartPosition());", "+\t\t\t\tif (DefaultCodeFormatterConstants.TRUE.equals(this.options.get(DefaultCodeFormatterConstants.FORMATTER_INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH))) {", "+\t\t\t\t\tinsertIndent++;", "+\t\t\t\t}", "+\t\t\t\t"]}], "num": 11468}