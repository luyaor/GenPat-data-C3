{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7c1f69acaa6e4e798826b5ac8c35871", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac1680a8c6cc8abbb60e2b06fc39be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "da5d5f5dcaeaf009feb139b87f69fd7bf09595b3", "commitAfterChange": "65f5152e309a08bb91b2b35f96e93b2fa93bae4f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static void compileTree(JavaCompiler compiler, List<String> options, File targetFolder, boolean useJLS8Processors)", "signatureAfterChange": " \t \tpublic static void compileTree(JavaCompiler compiler, List<String> options, File targetFolder,  \t\t\tDiagnosticListener<? super JavaFileObject> listener)", "diff": ["+\t", "+\tpublic static void compileTree(JavaCompiler compiler, List<String> options, File targetFolder, ", "+\t\t\tDiagnosticListener<? super JavaFileObject> listener) {", "+\t\tcompileTree(compiler, options, targetFolder, false, listener);", "+\t}", "-\t\tCompilationTask task = compiler.getTask(printWriter, manager, null, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91cf3153d4f383c48a365bd3b44368f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "8a17153af69ddcddcc6ac5bd94649f0b523f5b72", "commitAfterChange": "a6fddb558f09852d0df8b3655125e6a25d3ce37b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static boolean compileTreeWithErrors( \t\t\tJavaCompiler compiler, \t\t\tList<String> options, \t\t\tFile targetFolder, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tboolean useJLS8Processors)", "signatureAfterChange": " \tpublic static boolean compileTreeWithErrors( \t\t\tJavaCompiler compiler, \t\t\tList<String> options, \t\t\tFile targetFolder, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tboolean addProcessorsToClasspath)", "diff": ["-\t\t\tboolean useJLS8Processors) {", "+\t\t\tboolean addProcessorsToClasspath) {", "+\t\treturn compileTreeWithErrors(compiler, options, targetFolder, diagnosticListener, false, addProcessorsToClasspath);", "+\t}", "-\t\taddProcessorPaths(options, useJLS8Processors);"]}], "num": 12094}