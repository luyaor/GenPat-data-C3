{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48d02c78a21445531185a10fee4be3b2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "347886285fbd478a07871ae52ae7f0da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "53e59f4bd82e02ab18d570f640623d6567762067", "commitAfterChange": "83c109b7c53737ef4619646925b9d4265eb983d8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\t\t((SourceTypeBinding) fieldBinding.declaringClass).resolveTypeFor(fieldBinding);\t\t\t", "+\t\t\tif (fieldBinding == null) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\t((SourceTypeBinding) fieldBinding.declaringClass).resolveTypeFor(fieldBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35a1fa1d643553830b9cbb3db48890ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "b267dc5fd07e62c802290616c0cbe7abef453463", "commitAfterChange": "aa0984d79780a8b5715722d33a45cdb0c134a6fb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t((SourceTypeBinding) binding.declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());", "+\t\t\t\t\t((SourceTypeBinding) this.codegenBinding.declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a912a787dd1b081822ed3bb123913da1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "543f951d6390669f9bed8c637d9d6aef509af249", "commitAfterChange": "aac32d052b463fcebfbd1f5deeece1cbb26b197a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-", "-\t\t\tthis.syntheticAccessor = ((SourceTypeBinding)codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isSuperAccess());", "+\t\t\tthis.syntheticAccessor = ((SourceTypeBinding)codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, false /* not super access there */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb51c6d91d6b858776313a21673a305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "cb586d1ec75e8da71f4da23a7a5eb911d6960b1c", "commitAfterChange": "543f951d6390669f9bed8c637d9d6aef509af249", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "signatureAfterChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "diff": ["-\t\t\tpath[count++] = ((SourceTypeBinding) syntheticField.declaringClass).addSyntheticMethod(syntheticField, true);", "+\t\t\tpath[count++] = ((SourceTypeBinding) syntheticField.declaringClass).addSyntheticMethod(syntheticField, true/*read*/, false /*not super access*/);"]}], "num": 134}