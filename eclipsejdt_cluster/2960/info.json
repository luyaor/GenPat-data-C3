{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6428d977cf485f693b83a1d8d303a5a9", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "251efc7f0981807c250860f0a255123c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "  \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tboolean proposeAllMemberTypes, \t\tSourceTypeBinding typeToIgnore, \t\tObjectVector typesFound, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": "  \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tboolean proposeAllMemberTypes, \t\tSourceTypeBinding typeToIgnore, \t\tObjectVector typesFound, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;", "-\t\t\t\tif(memberTypes[i] != typeToIgnore) {", "+\t\t\t\tif(TypeBinding.notEquals(memberTypes[i], typeToIgnore)) {", "-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafe3a2a24eb501141ec400bc67ff8d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " SimpleSet findSuperinterfaceCollisions(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " SimpleSet findSuperinterfaceCollisions(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;", "-\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;", "-\t\t\t\tif (next.isValidBinding() && next.erasure() == erasure) {", "+\t\t\t\tif (next.isValidBinding() && TypeBinding.equalsEquals(next.erasure(), erasure)) {"]}], "num": 2960}