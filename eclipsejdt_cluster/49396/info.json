{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d6b222b8fd549758ac48197e6f1fadc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86aca4e8072f0164319b9a670263eb64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "50acefc2048260070d2acf9418003e0db6eb34ad", "commitAfterChange": "92852bca9a4e0ceab73bc2cba44652396852b1a5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate void formatStatements(final List statements, boolean insertNewLineAfterLastStatement)", "signatureAfterChange": " \t \tprivate void formatStatements(final List statements, boolean insertNewLineAfterLastStatement)", "diff": ["-\t\tfor (int i = 0; i < statementsLength; i++) {", "-\t\t\tfinal Statement statement = (Statement) statements.get(i);", "+\t\tif (statementsLength > 1) {", "+\t\t\tStatement previousStatement = (Statement) statements.get(0);", "+\t\t\tpreviousStatement.accept(this);", "+\t\t\tfor (int i = 1; i < statementsLength - 1; i++) {", "+\t\t\t\tfinal Statement statement = (Statement) statements.get(i);", "+\t\t\t\tif (i > 0", "+\t\t\t\t\t\t&& (previousStatement.getNodeType() == ASTNode.EMPTY_STATEMENT)", "+\t\t\t\t\t\t&& (statement.getNodeType() != ASTNode.EMPTY_STATEMENT)) {", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t}", "+\t\t\t\tstatement.accept(this);", "+\t\t\t\tpreviousStatement = statement;", "+\t\t\t}", "+\t\t\tfinal Statement statement = ((Statement) statements.get(statementsLength - 1));", "+\t\t\tif (previousStatement.getNodeType() == ASTNode.EMPTY_STATEMENT", "+\t\t\t\t\t&& statement.getNodeType() != ASTNode.EMPTY_STATEMENT) {", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t}", "+\t\t} else {", "+\t\t\t((Statement) statements.get(0)).accept(this);", "+\t\t}", "+\t\tif (insertNewLineAfterLastStatement) {", "+\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc0b5918a2fd5273f1b3304933dea739", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "commitAfterChange": "dbd0d1d22c0c3005a7b77030231806c749e2cebd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate void formatStatements(final List statements, boolean insertNewLineAfterLastStatement)", "signatureAfterChange": " \t \tprivate void formatStatements(final List statements, boolean insertNewLineAfterLastStatement)", "diff": ["+\t\t\tfinal int previousStatementNodeType = previousStatement.getNodeType();", "-\t\t\t\tif (i > 0", "-\t\t\t\t\t\t&& (previousStatement.getNodeType() == ASTNode.EMPTY_STATEMENT)", "-\t\t\t\t\t\t&& (statement.getNodeType() != ASTNode.EMPTY_STATEMENT)) {", "+\t\t\t\tfinal int statementNodeType = statement.getNodeType();", "+\t\t\t\tif ((previousStatementNodeType == ASTNode.EMPTY_STATEMENT", "+\t\t\t\t\t\t&& statementNodeType != ASTNode.EMPTY_STATEMENT)", "+\t\t\t\t\t|| (previousStatementNodeType != ASTNode.EMPTY_STATEMENT", "+\t\t\t\t\t\t&& statementNodeType != ASTNode.EMPTY_STATEMENT)) {", "-\t\t\tif (previousStatement.getNodeType() == ASTNode.EMPTY_STATEMENT", "-\t\t\t\t\t&& statement.getNodeType() != ASTNode.EMPTY_STATEMENT) {", "+\t\t\tfinal int statementNodeType = statement.getNodeType();", "+\t\t\tif ((previousStatementNodeType == ASTNode.EMPTY_STATEMENT", "+\t\t\t\t\t&& statementNodeType != ASTNode.EMPTY_STATEMENT)", "+\t\t\t\t|| (previousStatementNodeType != ASTNode.EMPTY_STATEMENT", "+\t\t\t\t\t&& statementNodeType != ASTNode.EMPTY_STATEMENT)) {"]}], "num": 49396}