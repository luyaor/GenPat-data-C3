{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "612005c19a082d5a1f3e9ff49d98ea19", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f5030e75b16867e4d68d7f547cf5f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "ac7c104cc39c5e68079fabb4375be3bd00f62981", "commitAfterChange": "a066e157e07228bf479c3f3d0f88167910651951", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  private String format(long number)", "signatureAfterChange": " private String format(long number)", "diff": ["-", "-\tStringBuffer buffer = new StringBuffer();", "-\tlong q = n / 1000L;", "-\tint r = (int) (n - q*1000);", "-\tbuffer.append(r);", "-//\tint x = 0;", "+\tlong q = n;", "+\tint[] values = new int[10];", "+\tint m = -1;", "-\t\tr = (int) (n - q*1000);", "-\t\tbuffer = new StringBuffer()", "-\t\t\t.append(r)", "-\t\t\t.append(',')", "-\t\t\t.append(buffer);", "-//\t\tx++;", "+\t\tvalues[++m] = (int) (n - q*1000);", "-//\tswitch (x) {", "-//\t\tcase 1:", "-//\t\t\tbuffer.append('K');", "-//\t\t\tbreak;", "-//\t\tcase 2:", "-//\t\t\tbuffer.append('M');", "-//\t\t\tbreak;", "-//\t}", "+\tStringBuffer buffer = new StringBuffer();", "+\tbuffer.append(values[m]);", "+\tfor (int i=m-1; i>=0; i--) {", "+\t\tbuffer.append(',').append(DIGIT_FORMAT.format(values[i]));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6cf25e31b9fc61673df9207ff391366", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tif (binding instanceof ImportBinding) {", "-\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, importRef.tokens, element, accuracy);", "-\t\t} else if (binding instanceof ReferenceBinding) {", "+\t\tlong[] positions = importRef.sourcePositions;", "+\t\tint last = positions.length - 1;", "+\t\tif (binding instanceof ProblemReferenceBinding)", "+\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "+\t\tif (binding instanceof ReferenceBinding) {", "-\t\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, pkgBinding.compoundName, element, accuracy);", "-\t\t\telse", "-\t\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, importRef.tokens, element, accuracy);", "-\t\t} ", "+\t\t\t\tlast = pkgBinding.compoundName.length;", "+\t\t}", "+\t\tlocator.report(positions[0], positions[last - 1], element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff59b5d9b7121c8702b94cba85e8adfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "cf143a6a7ccd7553042fd4fda437966abe78a9e6", "commitAfterChange": "31d3be0ab92dab378331be6840b8f198d91f8e2d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void disassemble(IAnnotationComponent annotationComponent, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(IRuntimeVisibleAnnotationsAttribute runtimeVisibleAnnotationsAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["+\t", "+\tprivate void disassemble(IRuntimeVisibleAnnotationsAttribute runtimeVisibleAnnotationsAttribute, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\tbuffer.append(Util.bind(\"disassembler.runtimevisibleannotationsattributeheader\")); //$NON-NLS-1$", "+\t\tIAnnotation[] annotations = runtimeVisibleAnnotationsAttribute.getAnnotations();", "+\t\tfor (int i = 0, max = annotations.length; i < max; i++) {", "+\t\t\tdisassemble(annotations[i], buffer, lineSeparator, tabNumber + 1);", "+\t\t}", "+\t}"]}], "num": 69932}