{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c4d9153a25b1536b251d85c1ab50412", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a774c2acbf5c0d796200f962db6e85b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "15be40cf5262e06998d74b41636698f1f284a564", "commitAfterChange": "a4862af7684f06076791ef9ff6f765210c06b259", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["-\t\t\t\tIJavaElement element = createTypeHandle(new String(unit.getMainTypeName()));", "+\t\t\t\tIJavaElement element = createPackageDeclarationHandle(unit);", "-\t\t\tIJavaElement element = createTypeHandle(new String(unit.getMainTypeName()));", "+\t\t\tIJavaElement element = createPackageDeclarationHandle(unit);", "-\tthis.patternLocator.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55e9a40f1e94d6784cb8f08ac1c4b8ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "c4f17ac79e05c4dff8c3cc6e660e1fc73ee3406f", "commitAfterChange": "29d06747dc9924aaa37b6f5478bee32ae657345a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "diff": ["-\t\t\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "-\t\t\t\tElement element = ElementFactory.newElement(currentBinding);", "+\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(binding.getAnnotationType()); ", "+\t\t\t\tElement element = Factory.newElement(currentBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "672fe783e4f503e8efdaccd38998a15b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "6b83d22a910c2e140d2fd3f8ea7f6dbc1b911422", "commitAfterChange": "8d0d90902203ccd1f00600a41aa29bdae4aef363", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "diff": ["-\t\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "-\t\t\tElement element = ElementFactory.newElement(currentBinding);", "-\t\t\t_annoToElement.put(anno, element);", "+\t\t\tif (binding != null) { // binding should be resolved, but in case it's not, ignore it", "+\t\t\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "+\t\t\t\tElement element = ElementFactory.newElement(currentBinding);", "+\t\t\t\t_annoToElement.put(anno, element);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba118a6e53022486ed4d7112b4faedb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "7163191ad837ee4dbd99301bb257966d1ab9ea7a", "commitAfterChange": "efcbc8246985c2d4ce62d9f4d57040e9d6aab069", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding currentBinding)", "diff": ["-\t\t\tif (binding != null) { // binding should be resolved, but in case it's not, ignore it: it could have been wrapped into a container.", "-\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(binding.getAnnotationType());", "+\t\t\tReferenceBinding annotationType = binding.getAnnotationType();", "+\t\t\tif (binding != null", "+\t\t\t\t\t&& Annotation.isAnnotationTargetAllowed(scope, annotationType, currentBinding)", "+\t\t\t\t\t) { // binding should be resolved, but in case it's not, ignore it: it could have been wrapped into a container.", "+\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(annotationType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4636c12b230653d367a65d9b94d6604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Override \tpublic List<? extends Element> getAllMembers(TypeElement type)", "signatureAfterChange": " \t@Override \tpublic List<? extends Element> getAllMembers(TypeElement type)", "diff": ["-\t\t\tallMembers.add(Factory.newElement(nestedType));", "+\t\t\tallMembers.add(_env.getFactory().newElement(nestedType));", "-\t\t\tallMembers.add(Factory.newElement(field));", "+\t\t\tallMembers.add(_env.getFactory().newElement(field));", "-\t\t\t\tallMembers.add(Factory.newElement(method));", "+\t\t\t\tallMembers.add(_env.getFactory().newElement(method));"]}], "num": 1878}