{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21e8166bb6ded6da5ea546596f1d4c3e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10454a650eee1949a0fe74207089cad0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "c87a79156f1dc9a83ba58914de459221d3943f61", "commitAfterChange": "1de8e2f6bc728cee690d70795383b83c1f0d652a", "methodNumberBeforeChange": 846, "methodNumberAfterChange": 846, "signatureBeforeChange": " public void test0825() throws Exception", "signatureAfterChange": " public void test0825() throws Exception", "diff": ["-\tString expectedOutput =", "+\tString expectedOutput = this.complianceLevel < ClassFileConstants.JDK1_8 ? ", "-\t\t\"        [pc: 0, pc: 45] local: t index: 1 type: T\\n\";", "+\t\t\"        [pc: 0, pc: 45] local: t index: 1 type: T\\n\" :", "+\t\t\t", "+\t\t\t\"  // Method descriptor #17 (Ljava/io/Serializable;)V\\n\" + ", "+\t\t\t\"  // Signature: (TT;)V\\n\" + ", "+\t\t\t\"  // Stack: 2, Locals: 5\\n\" + ", "+\t\t\t\"  void foo(java.io.Serializable t);\\n\" + ", "+\t\t\t\"     0  aload_1 [t]\\n\" + ", "+\t\t\t\"     1  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\t\"     4  astore_2 [r1]\\n\" + ", "+\t\t\t\"     5  aload_0 [this]\\n\" + ", "+\t\t\t\"     6  ifnonnull 16\\n\" + ", "+\t\t\t\"     9  aload_1 [t]\\n\" + ", "+\t\t\t\"    10  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\t\"    13  goto 20\\n\" + ", "+\t\t\t\"    16  aload_1 [t]\\n\" + ", "+\t\t\t\"    17  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\t\"    20  astore_3 [r2]\\n\" + ", "+\t\t\t\"    21  aload_1 [t]\\n\" + ", "+\t\t\t\"    22  astore 4 [r3]\\n\" + ", "+\t\t\t\"    24  aload_0 [this]\\n\" + ", "+\t\t\t\"    25  aload_1 [t]\\n\" + ", "+\t\t\t\"    26  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\t\"    29  invokevirtual X.bar(java.lang.Runnable) : void [22]\\n\" + ", "+\t\t\t\"    32  aload_0 [this]\\n\" + ", "+\t\t\t\"    33  aload_0 [this]\\n\" + ", "+\t\t\t\"    34  ifnonnull 44\\n\" + ", "+\t\t\t\"    37  aload_1 [t]\\n\" + ", "+\t\t\t\"    38  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\t\"    41  goto 48\\n\" + ", "+\t\t\t\"    44  aload_1 [t]\\n\" + ", "+\t\t\t\"    45  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\t\"    48  invokevirtual X.bar(java.lang.Runnable) : void [22]\\n\" + ", "+\t\t\t\"    51  aload_0 [this]\\n\" + ", "+\t\t\t\"    52  aload_1 [t]\\n\" + ", "+\t\t\t\"    53  invokevirtual X.bar(java.lang.Runnable) : void [22]\\n\" + ", "+\t\t\t\"    56  return\\n\" + ", "+\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "+\t\t\t\"        [pc: 5, line: 6]\\n\" + ", "+\t\t\t\"        [pc: 21, line: 7]\\n\" + ", "+\t\t\t\"        [pc: 24, line: 9]\\n\" + ", "+\t\t\t\"        [pc: 32, line: 10]\\n\" + ", "+\t\t\t\"        [pc: 51, line: 11]\\n\" + ", "+\t\t\t\"        [pc: 56, line: 12]\\n\" + ", "+\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 57] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 57] local: t index: 1 type: java.io.Serializable\\n\" + ", "+\t\t\t\"        [pc: 5, pc: 57] local: r1 index: 2 type: java.lang.Runnable\\n\" + ", "+\t\t\t\"        [pc: 21, pc: 57] local: r2 index: 3 type: java.lang.Runnable\\n\" + ", "+\t\t\t\"        [pc: 24, pc: 57] local: r3 index: 4 type: java.lang.Runnable\\n\" + ", "+\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 57] local: this index: 0 type: X<T,V>\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 57] local: t index: 1 type: T\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1322218c3be245ccc36163a871775adb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test022()", "signatureAfterChange": " \tpublic void test022()", "diff": ["-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X<T extends Object> {\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y<V extends String> extends X<V> {\\n\" +", "-\t\t\t\t\"  public <W extends String> Y<W> make(Class<W> clazz) {\\n\" +", "-\t\t\t\t\"    return new Y<W>();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  public <U extends Object> X<U> make(Class<U> clazz) {\\n\" +", "-\t\t\t\t\"    return new X<U>();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  public static void main(String[] args) throws Exception {\\n\" +", "-\t\t\t\t\"    Y y = new Y();\\n\" +", "-\t\t\t\t\"    y.make(String.class);\\n\" +", "-\t\t\t\t\"    y.make(getClazz());\\n\" +", "-\t\t\t\t\"    y.make(getClazz().newInstance().getClass());\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  public static Class getClazz() {\\n\" +", "-\t\t\t\t\"    return String.class;\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"}\"", "-\t\t\t},", "+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tclass Y<V extends String> extends X<V> {\\n\" + ", "+\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\"The type parameter V should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tpublic <W extends String> Y<W> make(Class<W> clazz) {\\n\" + ", "+\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\"The type parameter W should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tpublic <W extends String> Y<W> make(Class<W> clazz) {\\n\" + ", "+\t\t\"\t                               ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method make(Class<W>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tpublic <U extends Object> X<U> make(Class<U> clazz) {\\n\" + ", "+\t\t\"\t                               ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method make(Class<U>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\"\tY y = new Y();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Y is a raw type. References to generic type Y<V> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\"\tY y = new Y();\\n\" + ", "+\t\t\"\t          ^\\n\" + ", "+\t\t\"Y is a raw type. References to generic type Y<V> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"\ty.make(String.class);\\n\" + ", "+\t\t\"\t  ^^^^\\n\" + ", "+\t\t\"The method make(Class) is ambiguous for the type Y\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"\ty.make(getClazz());\\n\" + ", "+\t\t\"\t  ^^^^\\n\" + ", "+\t\t\"The method make(Class) is ambiguous for the type Y\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"9. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\ty.make(getClazz().newInstance().getClass());\\n\" + ", "+\t\t\"\t  ^^^^\\n\" + ", "+\t\t\"The method make(Class) is ambiguous for the type Y\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"10. WARNING in X.java (at line 16)\\n\" + ", "+\t\t\"\tpublic static Class getClazz() {\\n\" + ", "+\t\t\"\t              ^^^^^\\n\" + ", "+\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\":", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\";", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X<T extends Object> {\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y<V extends String> extends X<V> {\\n\" +", "+\t\t\t\t\"  public <W extends String> Y<W> make(Class<W> clazz) {\\n\" +", "+\t\t\t\t\"    return new Y<W>();\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public <U extends Object> X<U> make(Class<U> clazz) {\\n\" +", "+\t\t\t\t\"    return new X<U>();\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public static void main(String[] args) throws Exception {\\n\" +", "+\t\t\t\t\"    Y y = new Y();\\n\" +", "+\t\t\t\t\"    y.make(String.class);\\n\" +", "+\t\t\t\t\"    y.make(getClazz());\\n\" +", "+\t\t\t\t\"    y.make(getClazz().newInstance().getClass());\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public static Class getClazz() {\\n\" +", "+\t\t\t\t\"    return String.class;\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"}\"", "+\t\t\t},", "+\t\t\texpectedCompilerLog"]}], "num": 3394}