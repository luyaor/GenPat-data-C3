{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "066cd332b4ed2e40182d20727110fded", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d33c140e4a927cabbbf9e012bf49a53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "a96eb1003c8f030ad3ac54b72eb69895f0a3e0dd", "commitAfterChange": "905dec82e916c38704735fea38fad8cba693cc45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": "  ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["+\tReferenceBinding targetType;", "-\t\tthis.prototype.resolve(environment, convertGenericToRawType);", "-\t\treturn this.resolvedType;", "+\t\ttargetType = this.prototype.resolve(environment, convertGenericToRawType);", "+\t\tif (convertGenericToRawType && targetType != null && targetType.isRawType()) {", "+\t\t\ttargetType = (ReferenceBinding) environment.createAnnotatedType(targetType, this.typeAnnotations);", "+\t\t} else {", "+\t\t\ttargetType = this.resolvedType;", "+\t\t}", "+\t\treturn targetType;", "-    ReferenceBinding targetType = this.resolvedType;", "+\ttargetType = this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0255c0b56459c2e0a44152f96003d39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType)", "diff": ["+\t\t\tenclosingType = this.resolvedType.enclosingType(); // if member type", "+\t\t\tif (enclosingType != null) {", "+\t\t\t\tReferenceBinding currentType = (ReferenceBinding) this.resolvedType;", "+\t\t\t\tif (currentType.isStatic() && enclosingType.isGenericType()) {", "+\t\t\t\t\tenclosingType = scope.environment().createRawType(enclosingType, enclosingType.enclosingType());", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f27cc1ab24b37fcb254b26ddc18f8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "fadf1abae52c545aab219b8e3a9b23913222e6c2", "commitAfterChange": "302f1877ad74fd63c3cd5c56aacc5cc510a8d88b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ParameterizedTypeBinding(ReferenceBinding type, TypeBinding[] arguments,  ReferenceBinding enclosingType, LookupEnvironment environment)", "signatureAfterChange": " \t \tpublic ParameterizedTypeBinding(ReferenceBinding type, TypeBinding[] arguments,  ReferenceBinding enclosingType, LookupEnvironment environment)", "diff": ["+\t\tif (type.isParameterizedType() && type.isMemberType()) { // fixup instance of parameterized member type, e.g. Map<K,V>.Entry + <A,B>", "+\t\t\tenclosingType = type.enclosingType(); // use enclosing from previously parameterized", "+\t\t\ttype = (ReferenceBinding)type.erasure(); // connect to erasure of member type", "+\t\t}", "-\t\tfor (int i = 0, l = arguments == null ? 0 : arguments.length; i < l; i++)", "-\t\t\tif (arguments[i] instanceof UnresolvedReferenceBinding)", "-\t\t\t\t((UnresolvedReferenceBinding) arguments[i]).addWrapper(this);", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0, l = arguments.length; i < l; i++)", "+\t\t\t\tif (arguments[i] instanceof UnresolvedReferenceBinding)", "+\t\t\t\t\t((UnresolvedReferenceBinding) arguments[i]).addWrapper(this);", "+\t\t}"]}], "num": 52136}