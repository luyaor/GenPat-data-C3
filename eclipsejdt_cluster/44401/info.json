{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35ac0cceab0bf0ed79424a672ed6f736", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3dec41fc8bb093e54af663e099025a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "81760d211469bf12100fd76e7231799f80190c5f", "commitAfterChange": "d3721d56cc1a3428241d332af8c31ddc07515e58", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName, \t\tfinal int packageMatchRule, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName, \t\tfinal int packageMatchRule, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\tif (!scope.encloses(workingCopy)) continue;", "+\t\t\t\t\tif (scope instanceof HierarchyScope) {", "+\t\t\t\t\t\tif (!((HierarchyScope)scope).encloses(workingCopy, progressMonitor)) continue;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (!scope.encloses(workingCopy)) continue;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c03afa5272ff7b52d90e852eab7db910", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "81760d211469bf12100fd76e7231799f80190c5f", "commitAfterChange": "d3721d56cc1a3428241d332af8c31ddc07515e58", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic void searchAllConstructorDeclarations( \t\tfinal char[] packageName, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessConstructorRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \t \tpublic void searchAllConstructorDeclarations( \t\tfinal char[] packageName, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessConstructorRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\tif (!scope.encloses(workingCopy)) continue;", "+\t\t\t\t\tif (scope instanceof HierarchyScope) {", "+\t\t\t\t\t\tif (!((HierarchyScope)scope).encloses(workingCopy, progressMonitor)) continue;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (!scope.encloses(workingCopy)) continue;", "+\t\t\t\t\t}", "+\t\t\t\t\t"]}], "num": 44401}