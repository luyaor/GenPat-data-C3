{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0171b4581f6bb410e33a90b7bd3c6d4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ad0f65181d5cfa3b72e07276ed610c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test005()", "signatureAfterChange": " \tpublic void test005()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return;", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" +", "-\t\t\t\"\tnew X().foo();\\n\" +", "-\t\t\t\"\t        ^^^\\n\" +", "-\t\t\t\"The method foo() is ambiguous for the type X\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\t<S extends A> void foo() { }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\t<N extends B> N foo() { return null; }\\n\" + ", "+\t\t\t\"\t                ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+/* javac 7", "+X.java:3: name clash: <N>foo() and <S>foo() have the same erasure", "+                 <N extends B> N foo() { return null; }", "+                                 ^", "+  where N,S are type-variables:", "+    N extends B declared in method <N>foo()", "+    S extends A declared in method <S>foo()", "+1 error", "+ */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86980b123fe06f417fc60d09748e07cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic void test050d()", "signatureAfterChange": " \tpublic void test050d()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\t\"class A<T> {}\" +", "-\t\t\t\t\"class Y {}\" +", "+\t\t\t\t\"class A<T> {}\\n\" +", "+\t\t\t\t\"class Y {}\\n\" +", "-\t\t\t\"\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\t<T extends Y, U> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C7\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C7\\n\" + ", "+\t\t\t\"----------\\n\"", "+/* javac 7", "+X.java:4: name clash: <T#1>foo(Object) and <T#2,U>foo(Object) have the same erasure", "+                <T extends Z> T foo(Object o) {  return null; } // ok", "+                                ^", "+  where T#1,T#2,U are type-variables:", "+    T#1 extends Z declared in method <T#1>foo(Object)", "+    T#2 extends Y declared in method <T#2,U>foo(Object)", "+    U extends Object declared in method <T#2,U>foo(Object)", "+1 error", "+ */"]}], "num": 64656}