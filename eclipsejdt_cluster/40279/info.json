{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55ff59a607a27e9ab0d63a1b35fe29e4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60cf24e0fa7508788df5cc189cf501ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f2f45b09c61cdc4a3bb7702f92f8e4fdcb969052", "commitAfterChange": "f33fe27819e8270eb24d0e5a64c8fba3d823b0e8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "signatureAfterChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "diff": ["-\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), true, false);", "+\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), true);", "-\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), modified, false);", "+\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), modified);", "-\t\treturn new FileGenerationResult((IFile)workingCopy.getResource(), true, false);", "+\t\treturn new FileGenerationResult((IFile)workingCopy.getResource(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3d027ce0545bb585b44e1010468cb44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "fa5043035008baa87658a861702929b4e6cc6033", "commitAfterChange": "1f110c3776a429c5c16a660065de0c3ffe5e4639", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "signatureAfterChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "diff": ["-\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), true);", "+\t\t\t\t", "+\t\t\t\t// TODO:  pass in correct flag for source-patch changed.  This is probably not going to matter.  Per 103183, we will either ", "+\t\t\t\t// disable reconcile-time generation, or do it without any modifications, so we shouldn't have to worry about this.   ", "+\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), true, false);", "-\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), modified);", "+\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), modified, false);", "-\t\treturn new FileGenerationResult((IFile)workingCopy.getResource(), true);", "+\t\treturn new FileGenerationResult((IFile)workingCopy.getResource(), true, false);"]}], "num": 40279}