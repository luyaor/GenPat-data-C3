{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc79111ae61ae494a950974c15bbc7ae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "063933b2495b9b06845513be25b4f249", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "28aa61d66b2a96d76f9d88da4d04bca3cbc0e8b8", "commitAfterChange": "dc6cfc95d2e4c607e420e7f9e33cff815caf4698", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate String[] createArrayOfString(String s)", "signatureAfterChange": "  \tprivate String[] createArrayOfString(String s)", "diff": ["-\t\tString delim = null;", "-\t\tint indexOfBackslashN = s.indexOf('\\n');", "-\t\tint indexOfBackslashR = s.indexOf('\\r');", "-\t\tif (indexOfBackslashN != -1) {", "-\t\t\tif (indexOfBackslashR != -1) {", "-\t\t\t\tdelim = \"\\r\\n\";", "-\t\t\t} else {", "-\t\t\t\tdelim = \"\\n\";", "-\t\t\t}", "-\t\t} else if (indexOfBackslashR != -1) {", "-\t\t\tdelim = \"\\r\";", "-\t\t} else {", "-\t\t\treturn new String[] {s};", "-\t\t}", "-\t\tint start = 0;", "-\t\tint index = s.indexOf(delim, start);", "-", "-\t\twhile (index != -1) {", "-\t\t\tarrayList.add(s.substring(start, index));", "-\t\t\tstart = index + delim.length();", "-\t\t\tindex = s.indexOf(delim, start);", "-\t\t}", "-\t\tif (s.endsWith(delim)) {", "-\t\t\tarrayList.add(\"\");", "+\t\tint start = 0;", "+\t\tchar[] source = s.toCharArray();", "+\t\tfor (int i = 0, max = source.length; i < max; i++) {", "+\t\t\tswitch(source[i]) {", "+\t\t\t\tcase '\\r':", "+\t\t\t\t\tarrayList.add(s.substring(start, i));", "+\t\t\t\t\tif ((i + 1) < max) {", "+\t\t\t\t\t\tif (source[i + 1] == '\\n') {", "+\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tstart = i + 1;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase '\\n' :", "+\t\t\t\t\tarrayList.add(s.substring(start, i));", "+\t\t\t\t\tstart = i + 1;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cda996db5b2ad6e35671dce7abf750c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "474eb5356258f18fd9cfbd1a24f6dbe20ed6eea5", "commitAfterChange": "b0f361db26dd11f4be4974027111b70136b11d5b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void tearDownSuite() throws Exception", "signatureAfterChange": "  \tprivate static int getASTLevelsForTest(String name)", "diff": ["-", "-\tpublic void tearDownSuite() throws Exception {", "-\t\tsuper.tearDownSuite();", "+\tprivate static int getASTLevelsForTest(String name) {", "+\t\tint index = name.indexOf(ONLY_AST_STRING);", "+\t\tint levels = 0;", "+\t\tif (index == -1) {", "+\t\t\tindex = name.indexOf(SINCE_AST_STRING);", "+\t\t\tif (index != -1) {", "+\t\t\t\tString subString = name.substring(index, name.length());", "+\t\t\t\tif (subString.indexOf(STRING_8) != -1) {", "+\t\t\t\t\treturn LEVEL_8;", "+\t\t\t\t} else if (subString.indexOf(STRING_4) != -1) {", "+\t\t\t\t\treturn SINCE_4;", "+\t\t\t\t} else if (subString.indexOf(STRING_3) != -1) {", "+\t\t\t\t\treturn SINCE_3;", "+\t\t\t\t} else {", "+\t\t\t\t\treturn SINCE_2;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tString subString = name.substring(index, name.length());", "+\t\t\tif (subString.indexOf(STRING_2) != -1) {", "+\t\t\t\tlevels |= LEVEL_2;", "+\t\t\t}", "+\t\t\tif (subString.indexOf(STRING_3) != -1) {", "+\t\t\t\tlevels |= LEVEL_3;", "+\t\t\t}", "+\t\t\tif (subString.indexOf(STRING_4) != -1) {", "+\t\t\t\tlevels |= LEVEL_4;", "+\t\t\t}", "+\t\t\tif (subString.indexOf(STRING_8) != -1) {", "+\t\t\t\tlevels |= LEVEL_8;", "+\t\t\t}", "+\t\t\treturn levels;", "+\t\t}", "+\t\treturn SINCE_2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a49fc717763432a4d3608059b0c40e3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "commitAfterChange": "73e4e5da548699442420cad384be2992b7f88d9b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\t\t\t\tthis.disabling_tag = stringValue.toCharArray();", "+\t\t\t\t\tint idx = stringValue.indexOf('\\r');", "+\t\t\t\t\tif (idx == 0) {", "+\t\t\t\t\t\tthis.disabling_tag = null;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tString tag = idx < 0 ? stringValue : stringValue.substring(0, idx);", "+\t\t\t\t\t\tidx = stringValue.indexOf('\\n');", "+\t\t\t\t\t\tif (idx == 0) {", "+\t\t\t\t\t\t\tthis.disabling_tag = null;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (idx > 0) {", "+\t\t\t\t\t\t\t\ttag = tag.substring(0, idx);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthis.disabling_tag = tag.toCharArray();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.enabling_tag = stringValue.toCharArray();", "+\t\t\t\t\tint idx = stringValue.indexOf('\\r');", "+\t\t\t\t\tif (idx == 0) {", "+\t\t\t\t\t\tthis.enabling_tag = null;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tString tag = idx < 0 ? stringValue : stringValue.substring(0, idx);", "+\t\t\t\t\t\tidx = stringValue.indexOf('\\n');", "+\t\t\t\t\t\tif (idx == 0) {", "+\t\t\t\t\t\t\tthis.enabling_tag = null;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (idx > 0) {", "+\t\t\t\t\t\t\t\ttag = tag.substring(0, idx);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthis.enabling_tag = tag.toCharArray();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 35525}