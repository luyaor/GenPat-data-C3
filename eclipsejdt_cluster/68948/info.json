{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd8971f06a7c833833952f22a4dc9b32", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c97aa438ac89e086f04bf0b3bbe4f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "50e0e7da8192eb9b9c5384858d97fb1be7728cb8", "commitAfterChange": "2a30b7796e104d164bc9609af22cb015f45e16fc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "signatureAfterChange": "\r protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "diff": ["-\t//fix for 1FVXGDK\r", "+\r", "-\tif (packageName == null || packageName.length == 0) {\r", "-\t\t// default package\r", "-\t\ttype= fNameLookup.findType(new String(typeName), false, acceptFlags);\r", "-\t} else {\r", "-\t\tIPackageFragment[] pkgs = fNameLookup.findPackageFragments(new String(packageName), false);\r", "-\t\tif (pkgs != null) {\r", "-\t\t\tfor (int i = 0, length = pkgs.length; i < length; i++) {\r", "-\t\t\t\ttype= fNameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags);\r", "-\t\t\t\tif (type != null) break;\t\r", "-\t\t\t}\r", "-\t\t}\r", "+\tIPackageFragment[] pkgs = fNameLookup.findPackageFragments(\r", "+\t\t(packageName == null || packageName.length == 0) ? IPackageFragment.DEFAULT_PACKAGE_NAME : new String(packageName), \r", "+\t\tfalse);\r", "+\t// iterate type lookup in each package fragment\r", "+\tfor (int i = 0, length = pkgs == null ? 0 : pkgs.length; i < length; i++) {\r", "+\t\ttype= fNameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags);\r", "+\t\tif (type != null) break;\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a402cdb5384dc996bdfeffbd99ace401", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment2.java", "commitBeforeChange": "b736a4b7b5e36e43e9911cb920eaa27b719a1739", "commitAfterChange": "f7ef9224b59ac5e8fd98d69dbf74c94b4c3ba7fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public NameEnvironmentAnswer findType(char[][] compoundName)", "signatureAfterChange": "  public NameEnvironmentAnswer findType(char[][] compoundName)", "diff": ["-public NameEnvironmentAnswer findType(char[][] compoundName) {", "-\tif (compoundName == null) return null;", "-\tNameEnvironmentAnswer answer = findTypeInPotentialMatches(compoundName);", "-\tif (answer != null) return answer;", "-\treturn this.nameEnvironment.findType(compoundName);", "-}", "+", "+public NameEnvironmentAnswer findType(char[][] compoundName) {", "+\tif (compoundName != null)", "+\t\treturn findClass(", "+\t\t\tnew String(CharOperation.concatWith(compoundName, '/')),", "+\t\t\tcompoundName[compoundName.length - 1]);", "+\treturn null;", "+}"]}], "num": 68948}