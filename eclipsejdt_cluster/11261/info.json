{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ec56cea1424f60fd45c42ee68b1ef8e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a14dd314711a73efd5af4bb2f662209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "commitAfterChange": "1ae160aec8c2770799af520f2104ef31bd7dce0c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void adjustSourcePositionsForParent(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": " \t \tprotected void adjustSourcePositionsForParent(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\t\t\texpression.sourceEnd = this.scanner.startPosition - 1;", "+\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isFakeTokenInserted()) {", "+\t\t\t\texpression.sourceEnd =  this.scanner.startPosition;", "+\t\t\t} else {", "+\t\t\t\texpression.sourceEnd = this.scanner.startPosition - 1;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3031e5b46a30fa13a3482116dad854e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "787257b7f904a5d229cd823de8c5673381972038", "commitAfterChange": "a9350c2b120d179766a1ddbf26ea8f42a99618dc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void adjustSourcePositionsForParent(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": " \t \tprotected void adjustSourcePositionsForParent(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isInsertedToken()) {", "-\t\t\t\texpression.sourceEnd =  this.scanner.startPosition;", "-\t\t\t} else {", "-\t\t\t\texpression.sourceEnd = this.scanner.startPosition - 1;", "-\t\t\t}", "+\t\t\texpression.sourceEnd = this.scanner.startPosition - 1;"]}], "num": 11261}