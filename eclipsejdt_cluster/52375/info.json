{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "558e7cc01900af9de693ddd710debfb9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f93e33bcb432e63fe5834697a67ac3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\tfindClassField(this.completionToken, (TypeBinding) qualifiedBinding, scope);", "-\t\t\t\t\t}", "-", "-\t\t\t\t\tif (!this.requestor.isIgnored(CompletionProposal.FIELD_REF)", "-\t\t\t\t\t\t\t|| !this.requestor.isIgnored(CompletionProposal.JAVADOC_FIELD_REF)) {", "-\t\t\t\tTypeBinding[] argTypes = computeTypes(messageSend.arguments);", "+\t\t\t\tTypeBinding[] argTypes = null; //computeTypes(messageSend.arguments);", "-\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\tfalse/* prefix match */,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fd99cfed5dc193cc103a9db09add8a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "20be6646800f3125c106d8286602e4c341b0c9f2", "commitAfterChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public void resolve(MethodScope initializationScope)", "signatureAfterChange": "\r public void resolve(MethodScope initializationScope)", "diff": ["-\t\t// cannot define static non-constant field inside nested class\r", "-\t\tif (binding.isStatic() && binding.constant == NotAConstant)\r", "-\t\t\tif (binding.declaringClass.isNestedType() && binding.declaringClass.isClass() && !binding.declaringClass.isStatic())\r", "-\t\t\t\tinitializationScope.problemReporter().unexpectedStaticModifierForField((SourceTypeBinding)binding.declaringClass, this);\t\t\r"]}], "num": 52375}