{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "494e95f9feab7a55361a26d544cccc0c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "097a0b4825bbcb422c74e45e37d0e3db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " public static long getIrritant(int problemID)", "signatureAfterChange": " public static long getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.LocalVariableMayBeNull :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ff8eb7c7d01321dfee472eb582c460", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d57293f4f12e1bef48b48f8eb4effbb7e4554bd3", "commitAfterChange": "80133b35a6b0bcde494737060ceebe86e07b8204", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public int computeSeverity(int problemID)", "signatureAfterChange": " public int computeSeverity(int problemID)", "diff": ["+\t\tcase IProblem.ToleratedMisplacedTypeAnnotations:\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d80fbf08bd4fac1ddf094f4a4426c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "7ae58cbb90a0e72a8dd69c0cd98dc1505a8668bf", "commitAfterChange": "4a1a6051dae9d70af8f16177f47bcc456f4eca12", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static long getIrritant(int problemID)", "signatureAfterChange": " \t \tpublic static long getIrritant(int problemID)", "diff": ["+\tpublic static long getIrritant(int problemID) {", "+\t\tswitch(problemID){", "+\t\t\tcase IProblem.MaskedCatch : ", "+\t\t\t\treturn CompilerOptions.MaskedCatchBlock;", "+\t", "+\t\t\tcase IProblem.UnusedImport :", "+\t\t\t\treturn CompilerOptions.UnusedImport;", "+\t\t\t\t", "+\t\t\tcase IProblem.MethodButWithConstructorName :", "+\t\t\t\treturn CompilerOptions.MethodWithConstructorName;", "+\t\t\t", "+\t\t\tcase IProblem.OverridingNonVisibleMethod :", "+\t\t\t\treturn CompilerOptions.OverriddenPackageDefaultMethod;", "+\t", "+\t\t\tcase IProblem.IncompatibleReturnTypeForNonInheritedInterfaceMethod :", "+\t\t\tcase IProblem.IncompatibleExceptionInThrowsClauseForNonInheritedInterfaceMethod :", "+\t\t\t\treturn CompilerOptions.IncompatibleNonInheritedInterfaceMethod;", "+\t", "+\t\t\tcase IProblem.OverridingDeprecatedMethod :\t\t\t\t", "+\t\t\tcase IProblem.UsingDeprecatedType :\t\t\t\t", "+\t\t\tcase IProblem.UsingDeprecatedMethod :", "+\t\t\tcase IProblem.UsingDeprecatedConstructor :", "+\t\t\tcase IProblem.UsingDeprecatedField :", "+\t\t\t\treturn CompilerOptions.UsingDeprecatedAPI;", "+\t\t\t", "+\t\t\tcase IProblem.LocalVariableIsNeverUsed :", "+\t\t\t\treturn CompilerOptions.UnusedLocalVariable;", "+\t\t\t", "+\t\t\tcase IProblem.ArgumentIsNeverUsed :", "+\t\t\t\treturn CompilerOptions.UnusedArgument;", "+\t", "+\t\t\tcase IProblem.NoImplicitStringConversionForCharArrayExpression :", "+\t\t\t\treturn CompilerOptions.NoImplicitStringConversion;", "+\t", "+\t\t\tcase IProblem.NeedToEmulateFieldReadAccess :", "+\t\t\tcase IProblem.NeedToEmulateFieldWriteAccess :", "+\t\t\tcase IProblem.NeedToEmulateMethodAccess :", "+\t\t\tcase IProblem.NeedToEmulateConstructorAccess :\t\t\t", "+\t\t\t\treturn CompilerOptions.AccessEmulation;", "+\t", "+\t\t\tcase IProblem.NonExternalizedStringLiteral :", "+\t\t\tcase IProblem.UnnecessaryNLSTag :", "+\t\t\t\treturn CompilerOptions.NonExternalizedString;", "+\t", "+\t\t\tcase IProblem.UseAssertAsAnIdentifier :", "+\t\t\t\treturn CompilerOptions.AssertUsedAsAnIdentifier;", "+\t\t\t\t", "+\t\t\tcase IProblem.UseEnumAsAnIdentifier :", "+\t\t\t\treturn CompilerOptions.EnumUsedAsAnIdentifier;", "+\t", "+\t\t\tcase IProblem.NonStaticAccessToStaticMethod :", "+\t\t\tcase IProblem.NonStaticAccessToStaticField :", "+\t\t\t\treturn CompilerOptions.NonStaticAccessToStatic;", "+\t", "+\t\t\tcase IProblem.IndirectAccessToStaticMethod :", "+\t\t\tcase IProblem.IndirectAccessToStaticField :", "+\t\t\tcase IProblem.IndirectAccessToStaticType :", "+\t\t\t\treturn CompilerOptions.IndirectStaticAccess;", "+\t", "+\t\t\tcase IProblem.AssignmentHasNoEffect:", "+\t\t\t\treturn CompilerOptions.NoEffectAssignment;", "+\t", "+\t\t\tcase IProblem.UnusedPrivateConstructor:", "+\t\t\tcase IProblem.UnusedPrivateMethod:", "+\t\t\tcase IProblem.UnusedPrivateField:", "+\t\t\tcase IProblem.UnusedPrivateType:", "+\t\t\t\treturn CompilerOptions.UnusedPrivateMember;", "+\t", "+\t\t\tcase IProblem.LocalVariableHidingLocalVariable:", "+\t\t\tcase IProblem.LocalVariableHidingField:", "+\t\t\tcase IProblem.ArgumentHidingLocalVariable:", "+\t\t\tcase IProblem.ArgumentHidingField:", "+\t\t\t\treturn CompilerOptions.LocalVariableHiding;", "+\t", "+\t\t\tcase IProblem.FieldHidingLocalVariable:", "+\t\t\tcase IProblem.FieldHidingField:", "+\t\t\t\treturn CompilerOptions.FieldHiding;", "+\t", "+\t\t\tcase IProblem.TypeParameterHidingType:", "+\t\t\t\treturn CompilerOptions.TypeParameterHiding;", "+\t\t\t\t", "+\t\t\tcase IProblem.PossibleAccidentalBooleanAssignment:", "+\t\t\t\treturn CompilerOptions.AccidentalBooleanAssign;", "+\t", "+\t\t\tcase IProblem.SuperfluousSemicolon:", "+\t\t\tcase IProblem.EmptyControlFlowStatement:", "+\t\t\t\treturn CompilerOptions.EmptyStatement;", "+\t", "+\t\t\tcase IProblem.UndocumentedEmptyBlock:", "+\t\t\t\treturn CompilerOptions.UndocumentedEmptyBlock;", "+\t\t\t\t", "+\t\t\tcase IProblem.UnnecessaryCast:", "+\t\t\tcase IProblem.UnnecessaryInstanceof:", "+\t\t\t\treturn CompilerOptions.UnnecessaryTypeCheck;", "+\t\t\t\t", "+\t\t\tcase IProblem.FinallyMustCompleteNormally:", "+\t\t\t\treturn CompilerOptions.FinallyBlockNotCompleting;", "+\t\t\t\t", "+\t\t\tcase IProblem.UnusedMethodDeclaredThrownException:", "+\t\t\tcase IProblem.UnusedConstructorDeclaredThrownException:", "+\t\t\t\treturn CompilerOptions.UnusedDeclaredThrownException;", "+\t", "+\t\t\tcase IProblem.UnqualifiedFieldAccess:", "+\t\t\t\treturn CompilerOptions.UnqualifiedFieldAccess;", "+\t\t\t", "+\t\t\tcase IProblem.UnnecessaryElse:", "+\t\t\t\treturn CompilerOptions.UnnecessaryElse;", "+\t", "+\t\t\tcase IProblem.UnsafeRawConstructorInvocation:", "+\t\t\tcase IProblem.UnsafeRawMethodInvocation:", "+\t\t\tcase IProblem.UnsafeTypeConversion:", "+\t\t\tcase IProblem.UnsafeRawFieldAssignment:", "+\t\t\tcase IProblem.UnsafeGenericCast:", "+\t\t\tcase IProblem.UnsafeReturnTypeOverride:", "+\t\t\tcase IProblem.UnsafeRawGenericMethodInvocation:", "+\t\t\tcase IProblem.UnsafeRawGenericConstructorInvocation:", "+\t\t\tcase IProblem.UnsafeGenericArrayForVarargs:", "+\t\t\t\treturn CompilerOptions.UncheckedTypeOperation;", "+\t", "+\t\t\tcase IProblem.RawTypeReference:", "+\t\t\t\treturn CompilerOptions.RawTypeReference;", "+\t", "+\t\t\tcase IProblem.MissingOverrideAnnotation:", "+\t\t\t\treturn CompilerOptions.MissingOverrideAnnotation;", "+\t\t\t\t", "+\t\t\tcase IProblem.FieldMissingDeprecatedAnnotation:", "+\t\t\tcase IProblem.MethodMissingDeprecatedAnnotation:", "+\t\t\tcase IProblem.TypeMissingDeprecatedAnnotation:", "+\t\t\t\treturn CompilerOptions.MissingDeprecatedAnnotation;", "+\t\t\t\t", "+\t\t\tcase IProblem.FinalBoundForTypeVariable:", "+\t\t\t    return CompilerOptions.FinalParameterBound;", "+\t", "+\t\t\tcase IProblem.MissingSerialVersion:", "+\t\t\t\treturn CompilerOptions.MissingSerialVersion;", "+\t\t\t", "+\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\treturn CompilerOptions.ForbiddenReference;", "+\t", "+\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\treturn CompilerOptions.DiscouragedReference;", "+\t", "+\t\t\tcase IProblem.MethodVarargsArgumentNeedCast :", "+\t\t\tcase IProblem.ConstructorVarargsArgumentNeedCast :", "+\t\t\t\treturn CompilerOptions.VarargsArgumentNeedCast;", "+\t", "+\t\t\tcase IProblem.LocalVariableCannotBeNull :", "+\t\t\tcase IProblem.LocalVariableCanOnlyBeNull :", "+\t\t\tcase IProblem.LocalVariableMayBeNull :", "+\t\t\t\treturn CompilerOptions.NullReference;", "+\t\t\t\t", "+\t\t\tcase IProblem.BoxingConversion :", "+\t\t\tcase IProblem.UnboxingConversion :", "+\t\t\t\treturn CompilerOptions.AutoBoxing;", "+\t", "+\t\t\tcase IProblem.MissingEnumConstantCase :", "+\t\t\t\treturn CompilerOptions.IncompleteEnumSwitch;", "+\t\t\t\t", "+\t\t\tcase IProblem.AnnotationTypeUsedAsSuperInterface :", "+\t\t\t\treturn CompilerOptions.AnnotationSuperInterface;", "+\t\t\t\t", "+\t\t\tcase IProblem.UnhandledWarningToken :", "+\t\t\t\treturn CompilerOptions.UnhandledWarningToken;", "+\t\t\t\t", "+\t\t\tcase IProblem.UnusedLabel :", "+\t\t\t\treturn CompilerOptions.UnusedLabel;", "+\t", "+\t\t\tcase IProblem.JavadocUnexpectedTag:", "+\t\t\tcase IProblem.JavadocDuplicateReturnTag:", "+\t\t\tcase IProblem.JavadocInvalidThrowsClass:", "+\t\t\tcase IProblem.JavadocInvalidSeeReference:", "+\t\t\tcase IProblem.JavadocInvalidParamTagName:", "+\t\t\tcase IProblem.JavadocInvalidParamTagTypeParameter:", "+\t\t\tcase IProblem.JavadocMalformedSeeReference:", "+\t\t\tcase IProblem.JavadocInvalidSeeHref:", "+\t\t\tcase IProblem.JavadocInvalidSeeArgs:", "+\t\t\tcase IProblem.JavadocInvalidTag:", "+\t\t\tcase IProblem.JavadocUnterminatedInlineTag:", "+\t\t\tcase IProblem.JavadocMissingHashCharacter:", "+\t\t\tcase IProblem.JavadocEmptyReturnTag:", "+\t\t\tcase IProblem.JavadocUnexpectedText:", "+\t\t\tcase IProblem.JavadocInvalidParamName:", "+\t\t\tcase IProblem.JavadocDuplicateParamName:", "+\t\t\tcase IProblem.JavadocMissingParamName:", "+\t\t\tcase IProblem.JavadocMissingIdentifier:", "+\t\t\tcase IProblem.JavadocInvalidThrowsClassName:", "+\t\t\tcase IProblem.JavadocDuplicateThrowsClassName:", "+\t\t\tcase IProblem.JavadocMissingThrowsClassName:", "+\t\t\tcase IProblem.JavadocMissingSeeReference:", "+\t\t\tcase IProblem.JavadocInvalidValueReference:", "+\t\t\tcase IProblem.JavadocUndefinedField:", "+\t\t\tcase IProblem.JavadocAmbiguousField:", "+\t\t\tcase IProblem.JavadocUndefinedConstructor:", "+\t\t\tcase IProblem.JavadocAmbiguousConstructor:", "+\t\t\tcase IProblem.JavadocUndefinedMethod:", "+\t\t\tcase IProblem.JavadocAmbiguousMethod:", "+\t\t\tcase IProblem.JavadocAmbiguousMethodReference:", "+\t\t\tcase IProblem.JavadocParameterMismatch:", "+\t\t\tcase IProblem.JavadocUndefinedType:", "+\t\t\tcase IProblem.JavadocAmbiguousType:", "+\t\t\tcase IProblem.JavadocInternalTypeNameProvided:", "+\t\t\tcase IProblem.JavadocNoMessageSendOnArrayType:", "+\t\t\tcase IProblem.JavadocNoMessageSendOnBaseType:", "+\t\t\tcase IProblem.JavadocInheritedMethodHidesEnclosingName:", "+\t\t\tcase IProblem.JavadocInheritedFieldHidesEnclosingName:", "+\t\t\tcase IProblem.JavadocInheritedNameHidesEnclosingTypeName:", "+\t\t\tcase IProblem.JavadocNonStaticTypeFromStaticInvocation:", "+\t\t\tcase IProblem.JavadocGenericMethodTypeArgumentMismatch:", "+\t\t\tcase IProblem.JavadocNonGenericMethod:", "+\t\t\tcase IProblem.JavadocIncorrectArityForParameterizedMethod:", "+\t\t\tcase IProblem.JavadocParameterizedMethodArgumentTypeMismatch:", "+\t\t\tcase IProblem.JavadocTypeArgumentsForRawGenericMethod:", "+\t\t\tcase IProblem.JavadocGenericConstructorTypeArgumentMismatch:", "+\t\t\tcase IProblem.JavadocNonGenericConstructor:", "+\t\t\tcase IProblem.JavadocIncorrectArityForParameterizedConstructor:", "+\t\t\tcase IProblem.JavadocParameterizedConstructorArgumentTypeMismatch:", "+\t\t\tcase IProblem.JavadocTypeArgumentsForRawGenericConstructor:", "+\t\t\tcase IProblem.JavadocNotVisibleField:", "+\t\t\tcase IProblem.JavadocNotVisibleConstructor:", "+\t\t\tcase IProblem.JavadocNotVisibleMethod:", "+\t\t\tcase IProblem.JavadocNotVisibleType:", "+\t\t\tcase IProblem.JavadocUsingDeprecatedField:", "+\t\t\tcase IProblem.JavadocUsingDeprecatedConstructor:", "+\t\t\tcase IProblem.JavadocUsingDeprecatedMethod:", "+\t\t\tcase IProblem.JavadocUsingDeprecatedType:", "+\t\t\t\treturn CompilerOptions.InvalidJavadoc;", "+\t", "+\t\t\tcase IProblem.JavadocMissingParamTag:", "+\t\t\tcase IProblem.JavadocMissingReturnTag:", "+\t\t\tcase IProblem.JavadocMissingThrowsTag:", "+\t\t\t\treturn CompilerOptions.MissingJavadocTags;", "+\t", "+\t\t\tcase IProblem.JavadocMissing:", "+\t\t\t\treturn CompilerOptions.MissingJavadocComments;", "+\t", "+\t\t\tcase IProblem.ParameterAssignment:", "+\t\t\t\treturn CompilerOptions.ParameterAssignment;", "+\t", "+\t\t\tcase IProblem.FallthroughCase:", "+\t\t\t\treturn CompilerOptions.FallthroughCase;", "+\t\t}", "+\t\treturn 0;", "+\t}", "-public static long getIrritant(int problemID) {", "-\tswitch(problemID){", "-", "-\t\tcase IProblem.MaskedCatch : ", "-\t\t\treturn CompilerOptions.MaskedCatchBlock;", "-", "-\t\tcase IProblem.UnusedImport :", "-\t\t\treturn CompilerOptions.UnusedImport;", "-\t\t\t", "-\t\tcase IProblem.MethodButWithConstructorName :", "-\t\t\treturn CompilerOptions.MethodWithConstructorName;", "-\t\t", "-\t\tcase IProblem.OverridingNonVisibleMethod :", "-\t\t\treturn CompilerOptions.OverriddenPackageDefaultMethod;", "-", "-\t\tcase IProblem.IncompatibleReturnTypeForNonInheritedInterfaceMethod :", "-\t\tcase IProblem.IncompatibleExceptionInThrowsClauseForNonInheritedInterfaceMethod :", "-\t\t\treturn CompilerOptions.IncompatibleNonInheritedInterfaceMethod;", "-", "-\t\tcase IProblem.OverridingDeprecatedMethod :\t\t\t\t", "-\t\tcase IProblem.UsingDeprecatedType :\t\t\t\t", "-\t\tcase IProblem.UsingDeprecatedMethod :", "-\t\tcase IProblem.UsingDeprecatedConstructor :", "-\t\tcase IProblem.UsingDeprecatedField :", "-\t\t\treturn CompilerOptions.UsingDeprecatedAPI;", "-\t\t", "-\t\tcase IProblem.LocalVariableIsNeverUsed :", "-\t\t\treturn CompilerOptions.UnusedLocalVariable;", "-\t\t", "-\t\tcase IProblem.ArgumentIsNeverUsed :", "-\t\t\treturn CompilerOptions.UnusedArgument;", "-", "-\t\tcase IProblem.NoImplicitStringConversionForCharArrayExpression :", "-\t\t\treturn CompilerOptions.NoImplicitStringConversion;", "-", "-\t\tcase IProblem.NeedToEmulateFieldReadAccess :", "-\t\tcase IProblem.NeedToEmulateFieldWriteAccess :", "-\t\tcase IProblem.NeedToEmulateMethodAccess :", "-\t\tcase IProblem.NeedToEmulateConstructorAccess :\t\t\t", "-\t\t\treturn CompilerOptions.AccessEmulation;", "-", "-\t\tcase IProblem.NonExternalizedStringLiteral :", "-\t\tcase IProblem.UnnecessaryNLSTag :", "-\t\t\treturn CompilerOptions.NonExternalizedString;", "-", "-\t\tcase IProblem.UseAssertAsAnIdentifier :", "-\t\t\treturn CompilerOptions.AssertUsedAsAnIdentifier;", "-\t\t\t", "-\t\tcase IProblem.UseEnumAsAnIdentifier :", "-\t\t\treturn CompilerOptions.EnumUsedAsAnIdentifier;", "-", "-\t\tcase IProblem.NonStaticAccessToStaticMethod :", "-\t\tcase IProblem.NonStaticAccessToStaticField :", "-\t\t\treturn CompilerOptions.NonStaticAccessToStatic;", "-", "-\t\tcase IProblem.IndirectAccessToStaticMethod :", "-\t\tcase IProblem.IndirectAccessToStaticField :", "-\t\tcase IProblem.IndirectAccessToStaticType :", "-\t\t\treturn CompilerOptions.IndirectStaticAccess;", "-", "-\t\tcase IProblem.AssignmentHasNoEffect:", "-\t\t\treturn CompilerOptions.NoEffectAssignment;", "-", "-\t\tcase IProblem.UnusedPrivateConstructor:", "-\t\tcase IProblem.UnusedPrivateMethod:", "-\t\tcase IProblem.UnusedPrivateField:", "-\t\tcase IProblem.UnusedPrivateType:", "-\t\t\treturn CompilerOptions.UnusedPrivateMember;", "-", "-\t\tcase IProblem.LocalVariableHidingLocalVariable:", "-\t\tcase IProblem.LocalVariableHidingField:", "-\t\tcase IProblem.ArgumentHidingLocalVariable:", "-\t\tcase IProblem.ArgumentHidingField:", "-\t\t\treturn CompilerOptions.LocalVariableHiding;", "-", "-\t\tcase IProblem.FieldHidingLocalVariable:", "-\t\tcase IProblem.FieldHidingField:", "-\t\t\treturn CompilerOptions.FieldHiding;", "-", "-\t\tcase IProblem.TypeParameterHidingType:", "-\t\t\treturn CompilerOptions.TypeParameterHiding;", "-\t\t\t", "-\t\tcase IProblem.PossibleAccidentalBooleanAssignment:", "-\t\t\treturn CompilerOptions.AccidentalBooleanAssign;", "-", "-\t\tcase IProblem.SuperfluousSemicolon:", "-\t\tcase IProblem.EmptyControlFlowStatement:", "-\t\t\treturn CompilerOptions.EmptyStatement;", "-", "-\t\tcase IProblem.UndocumentedEmptyBlock:", "-\t\t\treturn CompilerOptions.UndocumentedEmptyBlock;", "-\t\t\t", "-\t\tcase IProblem.UnnecessaryCast:", "-\t\tcase IProblem.UnnecessaryInstanceof:", "-\t\t\treturn CompilerOptions.UnnecessaryTypeCheck;", "-\t\t\t", "-\t\tcase IProblem.FinallyMustCompleteNormally:", "-\t\t\treturn CompilerOptions.FinallyBlockNotCompleting;", "-\t\t\t", "-\t\tcase IProblem.UnusedMethodDeclaredThrownException:", "-\t\tcase IProblem.UnusedConstructorDeclaredThrownException:", "-\t\t\treturn CompilerOptions.UnusedDeclaredThrownException;", "-", "-\t\tcase IProblem.UnqualifiedFieldAccess:", "-\t\t\treturn CompilerOptions.UnqualifiedFieldAccess;", "-\t\t", "-\t\tcase IProblem.UnnecessaryElse:", "-\t\t\treturn CompilerOptions.UnnecessaryElse;", "-", "-\t\tcase IProblem.UnsafeRawConstructorInvocation:", "-\t\tcase IProblem.UnsafeRawMethodInvocation:", "-\t\tcase IProblem.UnsafeTypeConversion:", "-\t\tcase IProblem.UnsafeRawFieldAssignment:", "-\t\tcase IProblem.UnsafeGenericCast:", "-\t\tcase IProblem.UnsafeReturnTypeOverride:", "-\t\tcase IProblem.UnsafeRawGenericMethodInvocation:", "-\t\tcase IProblem.UnsafeRawGenericConstructorInvocation:", "-\t\t\treturn CompilerOptions.UncheckedTypeOperation;", "-", "-\t\tcase IProblem.RawTypeReference:", "-\t\t\treturn CompilerOptions.RawTypeReference;", "-", "-\t\tcase IProblem.MissingOverrideAnnotation:", "-\t\t\treturn CompilerOptions.MissingOverrideAnnotation;", "-\t\t\t", "-\t\tcase IProblem.FieldMissingDeprecatedAnnotation:", "-\t\tcase IProblem.MethodMissingDeprecatedAnnotation:", "-\t\tcase IProblem.TypeMissingDeprecatedAnnotation:", "-\t\t\treturn CompilerOptions.MissingDeprecatedAnnotation;", "-\t\t\t", "-\t\tcase IProblem.FinalBoundForTypeVariable:", "-\t\t    return CompilerOptions.FinalParameterBound;", "-", "-\t\tcase IProblem.MissingSerialVersion:", "-\t\t\treturn CompilerOptions.MissingSerialVersion;", "-\t\t", "-\t\tcase IProblem.ForbiddenReference:", "-\t\t\treturn CompilerOptions.ForbiddenReference;", "-", "-\t\tcase IProblem.DiscouragedReference:", "-\t\t\treturn CompilerOptions.DiscouragedReference;", "-", "-\t\tcase IProblem.MethodVarargsArgumentNeedCast :", "-\t\tcase IProblem.ConstructorVarargsArgumentNeedCast :", "-\t\t\treturn CompilerOptions.VarargsArgumentNeedCast;", "-", "-\t\tcase IProblem.LocalVariableCannotBeNull :", "-\t\tcase IProblem.LocalVariableCanOnlyBeNull :", "-\t\tcase IProblem.LocalVariableMayBeNull :", "-\t\t\treturn CompilerOptions.NullReference;", "-\t\t\t", "-\t\tcase IProblem.BoxingConversion :", "-\t\tcase IProblem.UnboxingConversion :", "-\t\t\treturn CompilerOptions.AutoBoxing;", "-", "-\t\tcase IProblem.MissingEnumConstantCase :", "-\t\t\treturn CompilerOptions.IncompleteEnumSwitch;", "-\t\t\t", "-\t\tcase IProblem.AnnotationTypeUsedAsSuperInterface :", "-\t\t\treturn CompilerOptions.AnnotationSuperInterface;", "-\t\t\t", "-\t\tcase IProblem.UnhandledWarningToken :", "-\t\t\treturn CompilerOptions.UnhandledWarningToken;", "-\t\t\t", "-\t\tcase IProblem.UnusedLabel :", "-\t\t\treturn CompilerOptions.UnusedLabel;", "-", "-\t\tcase IProblem.JavadocUnexpectedTag:", "-\t\tcase IProblem.JavadocDuplicateReturnTag:", "-\t\tcase IProblem.JavadocInvalidThrowsClass:", "-\t\tcase IProblem.JavadocInvalidSeeReference:", "-\t\tcase IProblem.JavadocInvalidParamTagName:", "-\t\tcase IProblem.JavadocInvalidParamTagTypeParameter:", "-\t\tcase IProblem.JavadocMalformedSeeReference:", "-\t\tcase IProblem.JavadocInvalidSeeHref:", "-\t\tcase IProblem.JavadocInvalidSeeArgs:", "-\t\tcase IProblem.JavadocInvalidTag:", "-\t\tcase IProblem.JavadocUnterminatedInlineTag:", "-\t\tcase IProblem.JavadocMissingHashCharacter:", "-\t\tcase IProblem.JavadocEmptyReturnTag:", "-\t\tcase IProblem.JavadocUnexpectedText:", "-\t\tcase IProblem.JavadocInvalidParamName:", "-\t\tcase IProblem.JavadocDuplicateParamName:", "-\t\tcase IProblem.JavadocMissingParamName:", "-\t\tcase IProblem.JavadocMissingIdentifier:", "-\t\tcase IProblem.JavadocInvalidThrowsClassName:", "-\t\tcase IProblem.JavadocDuplicateThrowsClassName:", "-\t\tcase IProblem.JavadocMissingThrowsClassName:", "-\t\tcase IProblem.JavadocMissingSeeReference:", "-\t\tcase IProblem.JavadocInvalidValueReference:", "-\t\tcase IProblem.JavadocUndefinedField:", "-\t\tcase IProblem.JavadocAmbiguousField:", "-\t\tcase IProblem.JavadocUndefinedConstructor:", "-\t\tcase IProblem.JavadocAmbiguousConstructor:", "-\t\tcase IProblem.JavadocUndefinedMethod:", "-\t\tcase IProblem.JavadocAmbiguousMethod:", "-\t\tcase IProblem.JavadocAmbiguousMethodReference:", "-\t\tcase IProblem.JavadocParameterMismatch:", "-\t\tcase IProblem.JavadocUndefinedType:", "-\t\tcase IProblem.JavadocAmbiguousType:", "-\t\tcase IProblem.JavadocInternalTypeNameProvided:", "-\t\tcase IProblem.JavadocNoMessageSendOnArrayType:", "-\t\tcase IProblem.JavadocNoMessageSendOnBaseType:", "-\t\tcase IProblem.JavadocInheritedMethodHidesEnclosingName:", "-\t\tcase IProblem.JavadocInheritedFieldHidesEnclosingName:", "-\t\tcase IProblem.JavadocInheritedNameHidesEnclosingTypeName:", "-\t\tcase IProblem.JavadocNonStaticTypeFromStaticInvocation:", "-\t\tcase IProblem.JavadocGenericMethodTypeArgumentMismatch:", "-\t\tcase IProblem.JavadocNonGenericMethod:", "-\t\tcase IProblem.JavadocIncorrectArityForParameterizedMethod:", "-\t\tcase IProblem.JavadocParameterizedMethodArgumentTypeMismatch:", "-\t\tcase IProblem.JavadocTypeArgumentsForRawGenericMethod:", "-\t\tcase IProblem.JavadocGenericConstructorTypeArgumentMismatch:", "-\t\tcase IProblem.JavadocNonGenericConstructor:", "-\t\tcase IProblem.JavadocIncorrectArityForParameterizedConstructor:", "-\t\tcase IProblem.JavadocParameterizedConstructorArgumentTypeMismatch:", "-\t\tcase IProblem.JavadocTypeArgumentsForRawGenericConstructor:", "-\t\tcase IProblem.JavadocNotVisibleField:", "-\t\tcase IProblem.JavadocNotVisibleConstructor:", "-\t\tcase IProblem.JavadocNotVisibleMethod:", "-\t\tcase IProblem.JavadocNotVisibleType:", "-\t\tcase IProblem.JavadocUsingDeprecatedField:", "-\t\tcase IProblem.JavadocUsingDeprecatedConstructor:", "-\t\tcase IProblem.JavadocUsingDeprecatedMethod:", "-\t\tcase IProblem.JavadocUsingDeprecatedType:", "-\t\t\treturn CompilerOptions.InvalidJavadoc;", "-", "-\t\tcase IProblem.JavadocMissingParamTag:", "-\t\tcase IProblem.JavadocMissingReturnTag:", "-\t\tcase IProblem.JavadocMissingThrowsTag:", "-\t\t\treturn CompilerOptions.MissingJavadocTags;", "-", "-\t\tcase IProblem.JavadocMissing:", "-\t\t\treturn CompilerOptions.MissingJavadocComments;", "-", "-\t\tcase IProblem.ParameterAssignment:", "-\t\t\treturn CompilerOptions.ParameterAssignment;", "-", "-\t\tcase IProblem.FallthroughCase:", "-\t\t\treturn CompilerOptions.FallthroughCase;", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c04373bef965c7a7e9fac2f3bf2428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "08023b926208c47fd71659ad35d5f6917ae583aa", "commitAfterChange": "bfefcbabb42e4cf52bc5cadc36b5289ae66d310d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.ExceptionParameterIsNeverUsed:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d161b8219fd1d2ad391a8d9f8b5425d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c53fb291a849342748306e59b6959038f8ec1321", "commitAfterChange": "d5a32e245b27c645dcf70347396d7253765682d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.MissingEnumDefaultCase :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6444b6d957210e6d68c637f79f6bf837", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "381b0c5e3a54bec6f421d38d7ee5fd38c998afc2", "commitAfterChange": "140563af50526c3e1d6be899503d29113c538e25", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " public static long getIrritant(int problemID)", "signatureAfterChange": " public static long getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.RawTypeReference:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fcc11f4cc9cd35d68b0f88cf7c57ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "1e77e0a1cbd7ce4b41c480dd3c3db54400f03fae", "commitAfterChange": "c4e47420a63807f50b122761945df2093bf5a2b9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic void tagAsHavingIgnoredMandatoryErrors(int problemId)", "signatureAfterChange": " \t \tpublic void tagAsHavingIgnoredMandatoryErrors(int problemId)", "diff": ["+\t\t\tcase IProblem.NoGenericLambda:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80ad6e064b3f9e6384c67f0c264046cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "0364a4a83fd36a50e2f640c1ff760bbc5a6d0c8e", "commitAfterChange": "d03a3f510c4024243302c43ee912819616ee9cc6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.MissingOverrideAnnotationForInterfaceMethodImplementation:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d20b61d3615e5eaaa00885d3ac497cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public static long getIrritant(int problemID)", "signatureAfterChange": " public static long getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.UnnecessaryNONNLSTag :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "937a335c618f04efba88200bc575e9fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "7c8995aa3dda3f9f4237e90c309a798b71a9ba6f", "commitAfterChange": "425360de9982cb851072283681a98ff148472fdd", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.JavadocUnexpectedText:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9efbb1e7f128a501e57acbfb1779d640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d63e77a4f3e59d96dada738a65e836b17108f62c", "commitAfterChange": "8b3dd5b0f6f317bedbda94f1dc54e156c48d6322", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.JavadocMalformedSeeReference:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62f7f2b809467ac14ba6f670f1f2375", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "e760e456d0e96ba9bce504014e582b9dbdf7e542", "commitAfterChange": "c67d112c20f07c2dcda11714ef23687a9781a753", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.UnsafeNullnessCast:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1c5afc840af5ba1f3fdc947abfa325", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "aa89ff91f331c795e5aeda79a202d2c1e6f5bc77", "commitAfterChange": "9ecfd83150af2852591fa7ec68468d790c7eefcb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.JavadocUnterminatedInlineTag:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce891542c1c7d38b376d34e6dcb11f2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "de244ed59d5ac31bccdb26cdf94fcbe6724c20b4", "commitAfterChange": "7a3f519b00fed94107cfc009c8f906bb41441f6c", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public int computeSeverity(int problemID)", "signatureAfterChange": " public int computeSeverity(int problemID)", "diff": ["+\t\tcase IProblem.JavadocEmptyReturnTag:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d251a778fb00038d5555ea0cf5809c10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "dbf206d4e9e06fe03458856c4018b487ffcc2b68", "commitAfterChange": "640acef52e5546e028d01779949b08d883ff8475", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.IncompatibleExceptionInThrowsClauseForNonInheritedInterfaceMethod :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41878f59cf86e4f698ed9e77730aade", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1df699e669c4e4f2a900614bdd75bf90200992be", "commitAfterChange": "0171a309cfa1d187647511afec0bb25c2eadf3cf", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.UnnecessaryArgumentCast:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e747649597f0dea3c80127c8b3a4f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "bd0b42da240c9e3160dab0f23f741fededbd0813", "commitAfterChange": "abcc685ce362f3df53bbb89201f14fa3daf630fa", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.JavadocInvalidTag:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae8e8c020a8d7d930aa097ffd560ae1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "ea0c13f57ba1bc8fcf24d57a6ed1fca3a4943554", "commitAfterChange": "76fc29f1af4e9ec86970c2a456c7b7805a597ea2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.IllegalRedefinitionOfTypeVariable:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb405a9873c783172455fe6f1b83e4a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b70c37ecf76f05e7ae76a32ba47dec687904996c", "commitAfterChange": "991f76a3733441af275e22b3c172d2ee3c84bb0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static long getIrritant(int problemID)", "signatureAfterChange": " \t \tpublic static long getIrritant(int problemID)", "diff": ["+\t\t\tcase IProblem.JavadocDuplicateTag:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda0d4f8f06b3afe5e0f0b4eb92beaf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "commitAfterChange": "e62068644543b99c745f832b9263b49ff6b3d0ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.IllegalReturnNullityRedefinitionFreeTypeVariable:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edea32092d9bf60976838904a0dba5d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "c9e02661baa80cf1f75154d10de9df61ce3f636d", "commitAfterChange": "d92419d7d90bedd902391c7e83696cf6304867ae", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void computeCorrections(ICompilationUnit unit, int id, int start, int end, String[] arguments, ICorrectionRequestor requestor)", "signatureAfterChange": " \tprivate void computeCorrections(ICompilationUnit unit, int id, int start, int end, String[] arguments, ICorrectionRequestor requestor)", "diff": ["+\t\t\t\tcase IProblem.UnresolvedVariable :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef5f062c1e995f30e015e0fc2503f651", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "0ebf7eb2d8f3c62d99ed8bef750b4c618547fe08", "commitAfterChange": "4479368fdfa1c29f97c094bfbee396d5c4fd21ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.NullityMismatchTypeArgument:"]}], "num": 8427}