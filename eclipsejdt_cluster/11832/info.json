{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63198749e66326f7b9e49b7c6a38027d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fcac13663da808394b6345025fa3954", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "aa0d4cb673b9da623fa309220b7514c19ce761d9", "commitAfterChange": "657570b48a17f915b1074904b34a72cfb4a35e14", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "signatureAfterChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "diff": ["-\t\tlong targetJDK = referenceBinding.scope.environment().options.targetJDK;", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 8); // minor high", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 0); // minor low", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 24); // major high", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 16); // major low", "+\tlong targetJDK = referenceBinding.scope.environment().options.targetJDK;", "+\t// TODO[1.5]  until a 1.5 VM is released (accepting 49.0 files), will instead generate 1.4 (48.0) classfiles", "+\tif (targetJDK == ClassFileConstants.JDK1_5) targetJDK = ClassFileConstants.JDK1_4;", "+\theader[headerOffset++] = (byte) (targetJDK >> 8); // minor high", "+\theader[headerOffset++] = (byte) (targetJDK >> 0); // minor low", "+\theader[headerOffset++] = (byte) (targetJDK >> 24); // major high", "+\theader[headerOffset++] = (byte) (targetJDK >> 16); // major low"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efda8c05bcd4ba92f3098dc21737731d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "72307c3d05ef8cb972678da8dedb15b48d768f00", "commitAfterChange": "81e701cc3c5e885d4cb570396acbfc9c5a280795", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic ClassFile( \t\tSourceTypeBinding aType, \t\tClassFile enclosingClassFile, \t\tboolean creatingProblemType)", "signatureAfterChange": " \tpublic ClassFile( \t\tSourceTypeBinding aType, \t\tClassFile enclosingClassFile, \t\tboolean creatingProblemType)", "diff": ["+\t    ", "-\t\tlong targetJDK = referenceBinding.scope.environment().options.targetJDK;", "-\t\t// TODO[1.5]  until a 1.5 VM is released (accepting 49.0 files), will instead generate 1.4 (48.0) classfiles", "-\t\tif (targetJDK == ClassFileConstants.JDK1_5) targetJDK = ClassFileConstants.JDK1_4;", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 8); // minor high", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 0); // minor low", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 24); // major high", "-\t\theader[headerOffset++] = (byte) (targetJDK >> 16); // major low", "+\t\tthis.targetJDK = referenceBinding.scope.environment().options.targetJDK;", "+\t\theader[headerOffset++] = (byte) (this.targetJDK >> 8); // minor high", "+\t\theader[headerOffset++] = (byte) (this.targetJDK >> 0); // minor low", "+\t\theader[headerOffset++] = (byte) (this.targetJDK >> 24); // major high", "+\t\theader[headerOffset++] = (byte) (this.targetJDK >> 16); // major low"]}], "num": 11832}