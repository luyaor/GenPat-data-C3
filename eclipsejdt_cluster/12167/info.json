{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31b08700293a4ba2afa8e3436f4ffae3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9530d05c30a5ae9138a16d221dc883ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f39402d13165cb2a8baa9e8822f47cb5416f824f", "commitAfterChange": "c59f5d3873f087b004eace9b9fa6844d0400c666", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tIMarker createClasspathProblemMarker( \t\tString message, \t\tint severity, \t\tboolean isCycleProblem,\t\t \t\tboolean isClasspathFileFormatProblem)", "signatureAfterChange": " \tIMarker createClasspathProblemMarker(IJavaModelStatus status)", "diff": ["-\tIMarker createClasspathProblemMarker(", "-\t\tString message,", "-\t\tint severity,", "-\t\tboolean isCycleProblem,\t\t", "-\t\tboolean isClasspathFileFormatProblem) {", "+\tIMarker createClasspathProblemMarker(IJavaModelStatus status) {", "+\t\tint severity;", "+\t\tString[] arguments = new String[0];", "+\t\tboolean isCycleProblem = false, isClasspathFileFormatProblem = false;", "+\t\tswitch (status.getCode()) {", "+", "+\t\t\tcase  IJavaModelStatusConstants.CLASSPATH_CYCLE :", "+\t\t\t\tisCycleProblem = true;", "+\t\t\t\tif (JavaCore.ERROR.equals(getOption(JavaCore.CORE_CIRCULAR_CLASSPATH, true))) {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_ERROR;", "+\t\t\t\t} else {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_WARNING;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+", "+\t\t\tcase  IJavaModelStatusConstants.INVALID_CLASSPATH_FILE_FORMAT :", "+\t\t\t\tisClasspathFileFormatProblem = true;", "+\t\t\t\tseverity = IMarker.SEVERITY_ERROR;", "+\t\t\t\tbreak;", "+", "+\t\t\tdefault:", "+\t\t\t\tIPath path = status.getPath();", "+\t\t\t\tif (path != null) arguments = new String[] { path.toString() };", "+\t\t\t\tif (JavaCore.ERROR.equals(getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH, true))) {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_ERROR;", "+\t\t\t\t} else {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_WARNING;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\t", "-\t\t\t\t\tIJavaModelMarker.CLASSPATH_FILE_FORMAT },", "+\t\t\t\t\tIJavaModelMarker.CLASSPATH_FILE_FORMAT,", "+\t\t\t\t\tIJavaModelMarker.ID,", "+\t\t\t\t\tIJavaModelMarker.ARGUMENTS ,", "+\t\t\t\t},", "-\t\t\t\t\tmessage,", "+\t\t\t\t\tstatus.getMessage(),", "-\t\t\t\t\tisClasspathFileFormatProblem ? \"true\" : \"false\"});//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tisClasspathFileFormatProblem ? \"true\" : \"false\",//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tnew Integer(status.getCode()),", "+\t\t\t\t\tUtil.getProblemArgumentsForMarker(arguments) ,", "+\t\t\t\t}", "+\t\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c85f11b24355cc27fbd7ca521722d627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "53380a5830867128cd28d10f3919067730bbfb82", "commitAfterChange": "c0f393752b7d4523a5fc372912c7b4e192e52da7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void createTag()", "signatureAfterChange": " \tprotected void createTag()", "diff": ["-\t\tTagElement tag = this.ast.newTagElement();", "+\t\tTagElement tagElement = this.ast.newTagElement();", "-\t\ttag.setTagName(new String(this.source, start, this.tagSourceEnd-start+1));", "+\t\tString tagName = new String(this.source, start, this.tagSourceEnd-start+1);", "+\t\tswitch (tagName.charAt(0)) {", "+\t\t\tcase 'a':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_AUTHOR)) {", "+\t\t\t\t\ttagName = TagElement.TAG_AUTHOR;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 'd':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_DOCROOT)) {", "+\t\t\t\t\ttagName = TagElement.TAG_DOCROOT;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 'r':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_RETURN)) {", "+\t\t\t\t\ttagName = TagElement.TAG_RETURN;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 's':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_SERIAL)) {", "+\t\t\t\t\ttagName = TagElement.TAG_SERIAL;", "+\t\t\t\t} else  if (tagName.equals(TagElement.TAG_SERIALDATA)) {", "+\t\t\t\t\ttagName = TagElement.TAG_SERIALDATA;", "+\t\t\t\t} else if (tagName.equals(TagElement.TAG_SERIALFIELD)) {", "+\t\t\t\t\ttagName = TagElement.TAG_SERIALFIELD;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 'v':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_VERSION)) {", "+\t\t\t\t\ttagName = TagElement.TAG_VERSION;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\ttagElement.setTagName(tagName);", "-\t\t\tpreviousTag.fragments().add(tag);", "+\t\t\tpreviousTag.fragments().add(tagElement);", "-\t\t\tpushOnAstStack(tag, true);", "+\t\t\tpushOnAstStack(tagElement, true);", "-\t\ttag.setSourceRange(start, this.tagSourceEnd-start+1);", "+\t\ttagElement.setSourceRange(start, this.tagSourceEnd-start+1);"]}], "num": 12167}