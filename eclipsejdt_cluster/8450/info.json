{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bbe4ff94f16a999afd46f15b487ed73", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd8cf70c8eb336380c1d93eadbeb993f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "signatureAfterChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "diff": ["-\t\tIPath variablePath = JavaModelManager.variableGet(variableName);", "-\t\tif (variablePath == JavaModelManager.VariableInitializationInProgress) return null; // break cycle", "+\t\tIPath variablePath = JavaModelManager.getJavaModelManager().variableGet(variableName);", "+\t\tif (variablePath == JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS) return null; // break cycle", "-\t\t\tJavaModelManager.variablePut(variableName, JavaModelManager.VariableInitializationInProgress); // avoid initialization cycles", "+\t\t\tJavaModelManager.getJavaModelManager().variablePut(variableName, JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS); // avoid initialization cycles", "-\t\t\t\tvariablePath = JavaModelManager.variableGet(variableName); // initializer should have performed side-effect", "-\t\t\t\tif (variablePath == JavaModelManager.VariableInitializationInProgress) return null; // break cycle (initializer did not init or reentering call)", "+\t\t\t\tvariablePath = JavaModelManager.getJavaModelManager().variableGet(variableName); // initializer should have performed side-effect", "+\t\t\t\tif (variablePath == JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS) return null; // break cycle (initializer did not init or reentering call)", "-\t\t\t\tif (!ok) JavaModelManager.variablePut(variableName, null); // flush cache", "+\t\t\t\tif (!ok) JavaModelManager.getJavaModelManager().variablePut(variableName, null); // flush cache"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebbc151d9512b3e348af83c3854b53d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\t\tIClasspathContainer container = JavaModelManager.containerGet(project, containerPath);", "-\t\tif (container == JavaModelManager.ContainerInitializationInProgress) return null; // break cycle", "+\t\tIClasspathContainer container = JavaModelManager.getJavaModelManager().containerGet(project, containerPath);", "+\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) return null; // break cycle", "-\t\t\t\tJavaModelManager.containerPut(project, containerPath, JavaModelManager.ContainerInitializationInProgress); // avoid initialization cycles", "+\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(project, containerPath, JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS); // avoid initialization cycles", "-\t\t\t\t\tcontainer = JavaModelManager.containerGet(project, containerPath);", "-\t\t\t\t\tif (container == JavaModelManager.ContainerInitializationInProgress) return null; // break cycle", "+\t\t\t\t\tcontainer = JavaModelManager.getJavaModelManager().containerGet(project, containerPath);", "+\t\t\t\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) return null; // break cycle", "-\t\t\t\t\tif (!ok) JavaModelManager.containerPut(project, containerPath, null); // flush cache", "+\t\t\t\t\tif (!ok) JavaModelManager.getJavaModelManager().containerPut(project, containerPath, null); // flush cache"]}], "num": 8450}