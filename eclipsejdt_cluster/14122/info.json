{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61fbf5d34211221a811e4d3a3b979430", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603a398c136c5f868f8dd0a662231985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "57799a8beed7490f3a4382e24299a6b44ffe4faf", "commitAfterChange": "a623a62c4949e78ffb1e3db21245d05c22d9fb98", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options)", "signatureAfterChange": "  \tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options)", "diff": ["+", "+\tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options) {", "+\t\tConstructorDeclaration constructorDeclaration = parseStatements(source.toCharArray(), options);", "+\t\t", "+\t\tif (constructorDeclaration.statements == null) {", "+\t\t\t// a problem occured while parsing the source", "+\t\t\tthis.positionsMapping = positions;", "+\t\t\treturn source;", "+\t\t}", "+\t\treturn internalFormatStatements(source, indentationLevel, positions, lineSeparator, options, constructorDeclaration);", "+\t}", "-", "-\tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options) {", "-\t\tConstructorDeclaration constructorDeclaration = parseStatements(source.toCharArray(), options);", "-\t\t", "-\t\tif (constructorDeclaration.statements == null) {", "-\t\t\t// a problem occured while parsing the source", "-\t\t\treturn source;", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d457fb130576eb6738d853aa0548b99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate String formatExpression(String source, int indentationLevel, int[] positions, String lineSeparator, Map options)", "signatureAfterChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\tprivate String formatExpression(String source, int indentationLevel, int[] positions, String lineSeparator, Map options) {", "-\t\tExpression expression = parseExpression(source.toCharArray(), options);", "+\tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length) {", "+\t\tExpression expression = parseExpression(source.toCharArray(), this.options);", "-\t\t\tthis.positionsMapping = positions;", "-\t\treturn internalFormatExpression(source, indentationLevel, positions, lineSeparator, options, expression);", "+\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, offset, length);"]}], "num": 14122}