{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10989152fa78adcacb775b0c7aea10b4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b19d5fa6c94c4e3c0f9ee74f3cae2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "203e1e91ea665aa43439865980ef5bea63c7364f", "commitAfterChange": "6c37da54981cadce77fd6387ee838eeedda5a8b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public JavaModelCache()", "signatureAfterChange": "  public JavaModelCache()", "diff": ["+\t// adjust the size of the openable cache in function of the RATIO_PROPERTY property", "+\tdouble openableRatio = getOpenableRatio();", "-\t\tthis.openableCache = new VerboseElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio), \"Openable cache\"); //$NON-NLS-1$", "+\t\tthis.openableCache = new VerboseElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio * openableRatio), \"Openable cache\"); //$NON-NLS-1$", "-\t\tthis.openableCache = new ElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio));", "+\t\tthis.openableCache = new ElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio * openableRatio));", "-\tthis.childrenCache = new HashMap((int) (DEFAULT_CHILDREN_SIZE * ratio));", "+\tthis.childrenCache = new HashMap((int) (DEFAULT_CHILDREN_SIZE * ratio * openableRatio));", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec0849619a135366e13c8f37cdb1f979", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": " \tpublic FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\tcase FIELD : // reading a field", "+\t\t\t\tcase Binding.FIELD : // reading a field", "-\t\t\t\tcase LOCAL : // reading a local variable", "+\t\t\t\tcase Binding.LOCAL : // reading a local variable", "-\t\t\tcase FIELD : // assigning to a field", "+\t\t\tcase Binding.FIELD : // assigning to a field", "-\t\t\tcase LOCAL : // assigning to a local variable ", "+\t\t\tcase Binding.LOCAL : // assigning to a local variable "]}], "num": 48974}