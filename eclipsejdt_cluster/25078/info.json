{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18b246985738ba040a3635bfac5f474d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "687c7eef20e238a53b891a7b2db03696", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "a02dc2635b15c289c546ca96a49f66d7180ade17", "commitAfterChange": "efe1773a267b3bdb803164d9b413b69c3685878f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testBug401850a()", "signatureAfterChange": " public void testBug401850a()", "diff": ["-\trunConformTest(", "+\trunNegativeTest(", "-\t\t});", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tint i = m(new X<>(\\\"\\\"));\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^^\\n\" + ", "+\t\t\"The constructor X<String>(String) is ambiguous\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e86b09830e49f3138ab3b274730d24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DefaultMethodsTest.java", "commitBeforeChange": "e37ddd2cb60251da977bfe008d0c558febeb1616", "commitAfterChange": "ddff16f6a6b8fee88d497b4653d14d58ccda81b4", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testAbstract02a()", "signatureAfterChange": " \tpublic void testAbstract02a()", "diff": ["-\t\trunConformTest(", "+\t\trunNegativeTest(", "-\t\t\t});", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in C.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class C implements I2, I1 {\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"The default method test() inherited from I2 conflicts with another method inherited from I1\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t\t\t// Note: javac first complains: C is not abstract and does not override abstract method test() in I1", "+\t\t\t//       only when C is marked abstract does the conflict between abstract and default method surface"]}], "num": 25078}