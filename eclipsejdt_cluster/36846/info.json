{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "855b48bab6275bec0f799c7f126fdca0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "163f9e7694af714e851cf4e6ace48c8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "abe6a4b8c7a37b999ce782468f77dcc11e925eae", "commitAfterChange": "b3906111a4433325958de7604465d8f0e49325d2", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": " public void test400556i()", "signatureAfterChange": " public void test400556i()", "diff": ["-\t\t\t\"Lambda expression\\'s parameter p is expected to be of type List<? extends List<? super P>>[]\\n\" + ", "+\t\t\t\"Lambda expression\\'s parameter p is expected to be of type List<? extends List<P>>[]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61145d741001ed02ea106bd46c2657c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "fb0020e27808c429f3f311a11ef0ea9ea04441aa", "commitAfterChange": "29bba5ec8d05a9cd1832ad934d2530b41087b676", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic void testWildcardCapture3()", "signatureAfterChange": " \tpublic void testWildcardCapture3()", "diff": ["-\t\t\t\"Contradictory null annotations: method was inferred as \\'void getAdd(List<@NonNull @Nullable capture#>)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + ", "+\t\t\t\"Contradictory null annotations: method was inferred as \\'void getAdd(List<@NonNull @Nullable capture#of @Nullable ? extends X>)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + "]}], "num": 36846}