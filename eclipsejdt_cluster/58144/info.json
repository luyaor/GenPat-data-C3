{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19bea1519ed7fddc8318c08b7f6f664d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165a1e7bf091938d6a03a99e86613cbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic String toStringExpression()", "signatureAfterChange": "   \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+", "+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "+", "+\t\toutput.append(\"new \"); //$NON-NLS-1$", "+\t\ttype.print(0, output); ", "+\t\tfor (int i = 0; i < dimensions.length; i++) {", "+\t\t\tif (dimensions[i] == null)", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\telse {", "+\t\t\t\toutput.append('[');", "+\t\t\t\tdimensions[i].printExpression(0, output);", "+\t\t\t\toutput.append(']');", "+\t\t\t}", "+\t\t} ", "+\t\tif (initializer != null) initializer.printExpression(0, output);", "+\t\treturn output;", "+\t}", "-\tpublic String toStringExpression() {", "-", "-\t\tString s = \"new \" + type.toString(0); //$NON-NLS-1$", "-\t\tfor (int i = 0; i < dimensions.length; i++) {", "-\t\t\tif (dimensions[i] == null)", "-\t\t\t\ts = s + \"[]\"; //$NON-NLS-1$", "-\t\t\telse", "-\t\t\t\ts = s + \"[\" + dimensions[i].toStringExpression() + \"]\"; //$NON-NLS-2$ //$NON-NLS-1$", "-\t\t} ", "-\t\tif (initializer != null)", "-\t\t\ts = s + initializer.toStringExpression();", "-\t\treturn s;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d7048f6516c038e766bed85a58b7bf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnMessageSend.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic String toStringExpression()", "signatureAfterChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "+", "+\t\toutput.append(\"<SelectOnMessageSend:\"); //$NON-NLS-1$", "+\t\tif (!receiver.isImplicitThis()) receiver.printExpression(0, output).append('.');", "+\t\toutput.append(this.selector).append('(');", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "+\t\t\t}", "+\t\t}", "+\t\treturn output.append(\")>\"); //$NON-NLS-1$", "+\t}", "-\t", "-\tpublic String toStringExpression() {", "-", "-\t\tString s = \"<SelectOnMessageSend:\"; //$NON-NLS-1$", "-\t\tif (!receiver.isImplicitThis())", "-\t\t\ts = s + receiver.toStringExpression() + \".\"; //$NON-NLS-1$", "-\t\ts = s + new String(selector) + \"(\"; //$NON-NLS-1$", "-\t\tif (arguments != null) {", "-\t\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\t\ts += arguments[i].toStringExpression();", "-\t\t\t\tif (i != arguments.length - 1) {", "-\t\t\t\t\ts += \", \"; //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t};", "-\t\t}", "-\t\ts = s + \")>\"; //$NON-NLS-1$", "-\t\treturn s;"]}], "num": 58144}