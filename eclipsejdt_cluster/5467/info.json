{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4028ce478ead3db39d7c095798adbd58", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190188d8e56525352714e596e49e28ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "cce2d6d618061573d93fe3727b43bb448d464465", "commitAfterChange": "5ce69656376089b35c869f4300bbd8586809b01f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test001() throws CoreException", "signatureAfterChange": " public void test001() throws CoreException", "diff": ["-\t\t\t\"\tclass D {\\n\" +", "+\t\t\t\"\tstatic class D {\\n\" +", "-\t\tString expectedResult = \"/**\\n\" +\r\t\t\t\" *\\n\" +\r\t\t\t\" */\\n\" +\r\t\t\t\"package p;\\n\" +\r\t\t\t\"public class X {\\n\" +\r\t\t\t\"\t\\n\" +\r\t\t\t\"\tclass D {\\n\" +\r\t\t\t\"\t\tString toString() {\\n\" +\r\t\t\t\"\t\t\treturn \\\"HELLO\\\";\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\t// start of static field declaration\\n\" +\r\t\t\t\"\\n\" +\r\t\t\t\"\tstatic int i, j = 3, /*     */ k = 4;// end of static field declaration\\n\" +\r\t\t\t\"\\n\" +\r\t\t\t\"\tObject b1 = null, a1 = new Object() {\\n\" +\r\t\t\t\"\t\tvoid bar() {\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tvoid bar2() {\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tvoid bar3() {\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tvoid bar4() {\\n\" +\r\t\t\t\"\t\t\tSystem.out.println();\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t}, c1 = null; // end of multiple field declaration\\n\" +\r\t\t\t\"\tvoid bar() {\\n\" +\r\t\t\t\"\t\t\\n\" +\r\t\t\t\"\\n\" +\r\t\t\t\"\t\tclass E {\\n\" +\r\t\t\t\"\t\t\tvoid bar2() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar7() {\\n\" +\r\t\t\t\"\t\t\t\tSystem.out.println();\\n\" +\r\t\t\t\"\t\t\t}\\n\" +\r\t\t\t\"\t\t\tvoid bar9() {}\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tObject o = new E();\\n\" +\r\t\t\t\"\t\tSystem.out.println(o);\\n\" +\r\t\t\t\"\t\tclass C {\\n\" +\r\t\t\t\"\t\t\tvoid bar4() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar5() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar6() {}\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\tvoid bar(int i) {\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\t// end of class X\\n\" +\r\t\t\t\"}\\n\" +\r\t\t\t\"// end of compilation unit\\n\";", "+\t\tString expectedResult = \"/**\\n\" +\r\t\t\t\" *\\n\" +\r\t\t\t\" */\\n\" +\r\t\t\t\"package p;\\n\" +\r\t\t\t\"public class X {\\n\" +\r\t\t\t\"\t\\n\" +\r\t\t\t\"\tstatic class D {\\n\" +\r\t\t\t\"\t\tString toString() {\\n\" +\r\t\t\t\"\t\t\treturn \\\"HELLO\\\";\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\t// start of static field declaration\\n\" +\r\t\t\t\"\\n\" +\r\t\t\t\"\tstatic int i, j = 3, /*     */ k = 4;// end of static field declaration\\n\" +\r\t\t\t\"\\n\" +\r\t\t\t\"\tObject b1 = null, a1 = new Object() {\\n\" +\r\t\t\t\"\t\tvoid bar() {\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tvoid bar2() {\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tvoid bar3() {\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tvoid bar4() {\\n\" +\r\t\t\t\"\t\t\tSystem.out.println();\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t}, c1 = null; // end of multiple field declaration\\n\" +\r\t\t\t\"\tvoid bar() {\\n\" +\r\t\t\t\"\t\t\\n\" +\r\t\t\t\"\\n\" +\r\t\t\t\"\t\tclass E {\\n\" +\r\t\t\t\"\t\t\tvoid bar2() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar7() {\\n\" +\r\t\t\t\"\t\t\t\tSystem.out.println();\\n\" +\r\t\t\t\"\t\t\t}\\n\" +\r\t\t\t\"\t\t\tvoid bar9() {}\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\tObject o = new E();\\n\" +\r\t\t\t\"\t\tSystem.out.println(o);\\n\" +\r\t\t\t\"\t\tclass C {\\n\" +\r\t\t\t\"\t\t\tvoid bar4() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar5() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar6() {}\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\tvoid bar(int i) {\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\t// end of class X\\n\" +\r\t\t\t\"}\\n\" +\r\t\t\t\"// end of compilation unit\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c9617f47198b5d39cdb438a6771f73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void test028()", "signatureAfterChange": " \tpublic void test028()", "diff": ["-\t\t\t\t\"import java.io.StringReader;\\r\\n\" +", "-\t\t\t\t\"\\r\\n\" +", "-\t\t\t\t\"public class X {\\r\\n\" +", "-\t\t\t\t\"\tpublic void loadVariablesAndContainers() {\\r\\n\" +", "-\t\t\t\t\"\t\t// backward compatibility, consider persistent property\t\\r\\n\" +", "-\t\t\t\t\"\t\tString qName = \\\"1\\\";\\r\\n\" +", "-\t\t\t\t\"\t\tString xmlString = \\\"2\\\";\\r\\n\" +", "-\t\t\t\t\"\t\t\\r\\n\" +", "-\t\t\t\t\"\t\ttry {\\r\\n\" +", "-\t\t\t\t\"\t\t\tif (xmlString != null){\\r\\n\" +", "-\t\t\t\t\"\t\t\t\tStringReader reader = new StringReader(xmlString);\\r\\n\" +", "-\t\t\t\t\"\t\t\t\tObject o;\\r\\n\" +", "-\t\t\t\t\"\t\t\t\ttry {\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t\tStringBuffer buffer = null;\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t\to = new Object();\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t} catch(RuntimeException e) {\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t\treturn;\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t} catch(Exception e){\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t\treturn;\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t} finally {\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t\treader.close();\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t}\\r\\n\" +", "-\t\t\t\t\"\t\t\t\tSystem.out.println(reader);\\r\\n\" +", "-\t\t\t\t\"\t\t\t}\\r\\n\" +", "-\t\t\t\t\"\t\t} catch(Exception e){\\r\\n\" +", "-\t\t\t\t\"\t\t\t// problem loading xml file: nothing we can do\\r\\n\" +", "-\t\t\t\t\"\t\t} finally {\\r\\n\" +", "-\t\t\t\t\"\t\t\tif (xmlString != null){\\r\\n\" +", "-\t\t\t\t\"\t\t\t\tSystem.out.println(xmlString);\\r\\n\" +", "-\t\t\t\t\"\t\t\t}\\r\\n\" +", "-\t\t\t\t\"\t\t}\\r\\n\" +", "-\t\t\t\t\"\t}\\r\\n\" +", "-\t\t\t\t\"\\r\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\r\\n\" +", "+\t\t\t\t\"import java.io.StringReader;\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic void loadVariablesAndContainers() {\\n\" +", "+\t\t\t\t\"\t\t// backward compatibility, consider persistent property\t\\n\" +", "+\t\t\t\t\"\t\tString qName = \\\"1\\\";\\n\" +", "+\t\t\t\t\"\t\tString xmlString = \\\"2\\\";\\n\" +", "+\t\t\t\t\"\t\t\\n\" +", "+\t\t\t\t\"\t\ttry {\\n\" +", "+\t\t\t\t\"\t\t\tif (xmlString != null){\\n\" +", "+\t\t\t\t\"\t\t\t\tStringReader reader = new StringReader(xmlString);\\n\" +", "+\t\t\t\t\"\t\t\t\tObject o;\\n\" +", "+\t\t\t\t\"\t\t\t\ttry {\\n\" +", "+\t\t\t\t\"\t\t\t\t\tStringBuffer buffer = null;\\n\" +", "+\t\t\t\t\"\t\t\t\t\to = new Object();\\n\" +", "+\t\t\t\t\"\t\t\t\t} catch(RuntimeException e) {\\n\" +", "+\t\t\t\t\"\t\t\t\t\treturn;\\n\" +", "+\t\t\t\t\"\t\t\t\t} catch(Exception e){\\n\" +", "+\t\t\t\t\"\t\t\t\t\treturn;\\n\" +", "+\t\t\t\t\"\t\t\t\t} finally {\\n\" +", "+\t\t\t\t\"\t\t\t\t\treader.close();\\n\" +", "+\t\t\t\t\"\t\t\t\t}\\n\" +", "+\t\t\t\t\"\t\t\t\tSystem.out.println(reader);\\n\" +", "+\t\t\t\t\"\t\t\t}\\n\" +", "+\t\t\t\t\"\t\t} catch(Exception e){\\n\" +", "+\t\t\t\t\"\t\t\t// problem loading xml file: nothing we can do\\n\" +", "+\t\t\t\t\"\t\t} finally {\\n\" +", "+\t\t\t\t\"\t\t\tif (xmlString != null){\\n\" +", "+\t\t\t\t\"\t\t\t\tSystem.out.println(xmlString);\\n\" +", "+\t\t\t\t\"\t\t\t}\\n\" +", "+\t\t\t\t\"\t\t}\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\t}\\r\\n\" +", "+\t\t\t\t\"\t}\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9563803bd419950ec891a6fe2700daa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "4ce47574d95f211bec6cf02737b4ec30e386f5b1", "commitAfterChange": "6c173db4ca33e9b5b355fdac19466f82485aafe6", "methodNumberBeforeChange": 342, "methodNumberAfterChange": 342, "signatureBeforeChange": " \tpublic void test0341() throws JavaModelException", "signatureAfterChange": " \tpublic void test0341() throws JavaModelException", "diff": ["-\t\t\t\t\"if (field != null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new IOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"if (field != null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new IOException();\\n\" +", "+\t\t\t\t\"\t\t} else if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\n\" +", "+\t\t\t\t\"\t\t} else if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "+\t\t\t\t\"\t\t} else {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new IOException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new IOException();\\n\" +", "-\t\t\t\t\"if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\n\" +", "+\t\t\t\t\"\t\t} else if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "+\t\t\t\t\"\t\t} else {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\n\" +", "-\t\t\t\t\"if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "+\t\t\t\t\"\t\t} else {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +"]}], "num": 5467}