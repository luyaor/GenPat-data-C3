{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5125dec7b20c97e288ea9ed919944a07", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d3a03c57abbf1510a1bb1c9773da4df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "075c06110106be098a7d0adc45ecd4fe5beb93cb", "commitAfterChange": "79e75ea39fce1a5d2e0887c125088b93d5b710ed", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "signatureAfterChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "diff": ["-\t\t\t\t\t\t\tint lineEnd1 = Math.max(CharOperation.indexOf('\\n', contents, end), end+1);", "-\t\t\t\t\t\t\tint lineEnd2 = Math.max(CharOperation.indexOf('\\r', contents, end), end+1);", "-\t\t\t\t\t\t\tint lineEnd = Math.min(lineEnd1, lineEnd2);", "-\t\t\t\t\t\t\tif (lineEnd == end+1) lineEnd = contents.length;", "+\t\t\t\t\t\t\tint lineEnd1 = CharOperation.indexOf('\\n', contents, end);", "+\t\t\t\t\t\t\tint lineEnd2 = CharOperation.indexOf('\\r', contents, end);", "+\t\t\t\t\t\t\tint lineEnd = lineEnd1 > 0 && lineEnd2 > 0 ? Math.min(lineEnd1, lineEnd2) : Math.max(lineEnd1, lineEnd2);", "+\t\t\t\t\t\t\tif (lineEnd == -1) lineEnd = contents.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64993717f418daf600a36de0cb5d66c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "43910be7c5e7874a970515d1dbb3b63c454bc688", "commitAfterChange": "d7d4a2e6181a270380c8726d1367c8cd49a78b6b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\t\t\tthis.requestor.acceptContext(new CompletionContext());", "+\t\t\t\t\tthis.buildContext(parsedUnit.currentPackage, null, null, null);", "-\t\t\t\t\t\t\t\tthis.requestor.acceptContext(new CompletionContext());", "+\t\t\t\t\t\t\t\tthis.buildContext(importReference, null, null, null);", "-\t\t\t\t\t\t\tthis.requestor.acceptContext(new CompletionContext());", "+\t\t\t\t\t\t\tthis.buildContext(importReference, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f22cba082fe57e4bfc051b72b71033", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\tif (catchArguments == null) {", "-\t\t\t\tthis.exitAnyExceptionHandler();", "-\t\t\t} else {", "+\t\t\tif (catchArguments != null) {", "-\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\t\t\t\tcurrentScope,", "-\t\t\t\t\t\t\tpreTryInitStateIndex);", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, preTryInitStateIndex);", "-", "-\t\t\t\t\tif (i == maxCatches - 1) {", "-\t\t\t\t\t\tthis.exitAnyExceptionHandler();", "-\t\t\t\t\t}", "+\t\t\tif (finallyMode != FINALLY_SUBROUTINE || this.subRoutineStartLabel == null) {", "+\t\t\t\tthis.exitAnyExceptionHandler();", "+\t\t\t}", "-\t\t\t\tfinallyMode == FINALLY_SUBROUTINE && requiresNaturalExit ? this.enterAnyExceptionHandler(codeStream) : null;", "-\t\t\t\t\t\t", "+\t\t\t\tfinallyMode == FINALLY_SUBROUTINE && requiresNaturalExit ? new ExceptionLabel(codeStream, null) : null;", "+", "-\t\t\t\t// the additional handler is doing: jsr finallyBlock and rethrow TOS-exception", "-", "+\t\t\t\tif (naturalExitExceptionHandler != null) naturalExitExceptionHandler.place();", "+\t\t\t\t", "-\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\t\t\tcurrentScope,", "-\t\t\t\t\t\tpreTryInitStateIndex);", "+\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, preTryInitStateIndex);", "+\t\t\t\t\t\tthis.exitAnyExceptionHandler();", "-\t\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\t\t\t\t\t\tcurrentScope,", "-\t\t\t\t\t\t\t\t\tpreTryInitStateIndex);", "+\t\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, preTryInitStateIndex);", "-\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\tcurrentScope,", "-\t\t\t\tmergedInitStateIndex);", "+\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);"]}], "num": 51583}