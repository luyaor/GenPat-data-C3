{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aac412ca29d69af174f4b1bd294aa1dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa7aecf0ce01aaa45bfe0bdd7506d40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tthis.receiver.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\t\tthis.receiver.bits |= DisableUnnecessaryCastCheck; // will check later on", "-\t\tif (isFieldUseDeprecated(fieldBinding, scope, (this.bits & IsStrictlyAssignedMASK) !=0)) {", "+\t\tif (isFieldUseDeprecated(fieldBinding, scope, (this.bits & IsStrictlyAssigned) !=0)) {", "-\t\t\t(((this.bits & IsStrictlyAssignedMASK) == 0) ", "+\t\t\t(((this.bits & IsStrictlyAssigned) == 0) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e123a120170a08bd7231eb14b46df9ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "   \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tthis.receiver.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\t\tthis.receiver.bits |= DisableUnnecessaryCastCheck; // will check later on", "-\t\t\t\tthis.resolvedType = ((this.bits & IsStrictlyAssignedMASK) == 0) ? elementType.capture(scope, this.sourceEnd) : elementType;", "+\t\t\t\tthis.resolvedType = ((this.bits & IsStrictlyAssigned) == 0) ? elementType.capture(scope, this.sourceEnd) : elementType;"]}], "num": 43664}