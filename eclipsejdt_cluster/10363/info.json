{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce7c61f4f8f07d44fa67f3ebff4c8624", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d47ff17b83a6314a1d23071dd8bb50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ImportDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.importName =this.ast.newQualifiedName(", "-\t\t\t\t\tnew SimpleName(this.ast), new SimpleName(this.ast));", "-\t\t\tpostLazyInit(this.importName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.importName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.importName =this.ast.newQualifiedName(", "+\t\t\t\t\t\t\tnew SimpleName(this.ast), new SimpleName(this.ast));", "+\t\t\t\t\tpostLazyInit(this.importName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d74d894a514bbe523dd574ba50bbb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "commitAfterChange": "10cca24df480719d1a06391159cf8b7088d76566", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public static List buildTestsList(Class evaluationTestClass, int inheritedDepth)", "signatureAfterChange": "  public static List buildTestsList(Class evaluationTestClass, int inheritedDepth)", "diff": ["-\t\t\tif (ONLY_SUFFIX != null && methName.endsWith(ONLY_SUFFIX)) {", "-\t\t\t\tif (!onlyNames.contains(methName)) {", "-\t\t\t\t\tonlyNames.add(methName);", "+\t\t\tif (methName.startsWith(METHOD_PREFIX)) {", "+", "+\t\t\t\t// look if this is a run only method", "+\t\t\t\tboolean isOnly = RUN_ONLY_ID != null && methName.substring(methodPrefixLength).startsWith(RUN_ONLY_ID);", "+\t\t\t\tif (isOnly) {", "+\t\t\t\t\tif (!onlyNames.contains(methName)) {", "+\t\t\t\t\t\tonlyNames.add(methName);", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\telse if (methName.startsWith(METHOD_PREFIX)) {", "+", "+"]}], "num": 10363}