{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "369c5557bb0ad6c8401cd7001f8c4fbc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d40882db60a22e5c69272386aebf0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprotected boolean recordNullReference(Expression expression, int status)", "signatureAfterChange": "  protected void recordNullReference(LocalVariableBinding local,  \tExpression expression, int status)", "diff": ["-\tprotected boolean recordNullReference(Expression expression, int status) {", "-\t\tif (nullCount == 0) {", "-\t\t\tnullReferences = new Expression[5];", "-\t\t\tnullStatus = new int[5];", "-\t\t} else {", "-\t\t\tif (nullCount == nullReferences.length) {", "-\t\t\t\tSystem.arraycopy(nullReferences, 0, nullReferences = new Expression[nullCount * 2], 0, nullCount);", "-\t\t\t\tSystem.arraycopy(nullStatus, 0, nullStatus = new int[nullCount * 2], 0, nullCount);", "-\t\t\t}", "-\t\t}", "-\t\tnullReferences[nullCount] = expression;", "-\t\tnullStatus[nullCount++] = status;", "-\t\treturn true;", "+protected void recordNullReference(LocalVariableBinding local, ", "+\tExpression expression, int status) {", "+\tif (this.nullCount == 0) {", "+\t\tthis.nullLocals = new LocalVariableBinding[5];", "+\t\tthis.nullReferences = new Expression[5];", "+\t\tthis.nullCheckTypes = new int[5];", "+\t} ", "+\telse if (this.nullCount == this.nullLocals.length) {", "+\t\tint newLength = this.nullCount * 2;", "+\t\tSystem.arraycopy(this.nullLocals, 0, ", "+\t\t\tthis.nullLocals = new LocalVariableBinding[newLength], 0, ", "+\t\t\tthis.nullCount);", "+\t\tSystem.arraycopy(this.nullReferences, 0, ", "+\t\t\tthis.nullReferences = new Expression[newLength], 0,", "+\t\t\tthis.nullCount);", "+\t\tSystem.arraycopy(this.nullCheckTypes, 0, ", "+\t\t\tthis.nullCheckTypes = new int[newLength], 0, ", "+\t\t\tthis.nullCount);", "+\tthis.nullLocals[this.nullCount] = local;", "+\tthis.nullReferences[this.nullCount] = expression;", "+\tthis.nullCheckTypes[this.nullCount++] = status;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e7b24527d5d06cc2e230ce859a19c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(LambdaExpression expression, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["- */", "-public RecoveredElement add(LambdaExpression expression, int bracketBalanceValue) {", "-", "-\tif (this.alreadyCompletedFieldInitialization) {", "-\t\treturn super.add(expression, bracketBalanceValue);", "-\t} else {", "-\t\tif (expression.sourceEnd > 0)", "-\t\t\t\tthis.alreadyCompletedFieldInitialization = true;", "-\t\t// else we may still be inside the initialization, having parsed only a part of it yet", "-\t\tthis.fieldDeclaration.initialization = expression;", "-\t\tthis.fieldDeclaration.declarationSourceEnd = expression.sourceEnd;", "-\t\tthis.fieldDeclaration.declarationEnd = expression.sourceEnd;", "-\t\treturn this.initializerLambda = new RecoveredLambdaExpression(expression, this, bracketBalanceValue);"]}], "num": 61070}