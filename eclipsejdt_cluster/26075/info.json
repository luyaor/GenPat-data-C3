{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a14e00ca4c06d48101d6e499ef7c0c6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c774ae7b48ee384bf21fbdf6418518", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c5659478737cfb72ca02f096294cf83949ad2a06", "commitAfterChange": "01bbc4729210ae876463a8b906a3322a1aeaf6c4", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \t \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \t \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\tif (notInJavadoc && hasPotentialDefaultAbstractMethods && (currentType.isAbstract() || currentType.isTypeVariable())){", "+\t\t\tif (notInJavadoc &&", "+\t\t\t\t\thasPotentialDefaultAbstractMethods &&", "+\t\t\t\t\t(currentType.isAbstract() || currentType.isTypeVariable() || currentType.isIntersectionType())){", "+\t\t\t\t", "+\t\t\t\tReferenceBinding[] superInterfaces = currentType.superInterfaces();", "+\t\t\t\tif (superInterfaces != null && currentType.isIntersectionType()) {", "+\t\t\t\t\tfor (int i = 0; i < superInterfaces.length; i++) {", "+\t\t\t\t\t\tsuperInterfaces[i] = (ReferenceBinding)superInterfaces[i].capture(invocationScope, invocationSite.sourceEnd());", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t", "-\t\t\t\t\tcurrentType.superInterfaces(),", "+\t\t\t\t\tsuperInterfaces,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa6fb7d8d536b622208fa13412321b97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void compile(SourceFile[] units)", "signatureAfterChange": " protected void compile(SourceFile[] units)", "diff": ["-\tif (this.filesDeclaringAnnotation != null && this.filesDeclaringAnnotation.elementSize > 0)", "-\t\t// will add files that declare annotations in acceptResult() & then processAnnotations() before exitting this method", "-\t\tthis.filesDeclaringAnnotation.clear();", "+\tif (this.filesWithAnnotations != null && this.filesWithAnnotations.elementSize > 0)", "+\t\t// will add files that have annotations in acceptResult() & then processAnnotations() before exitting this method", "+\t\tthis.filesWithAnnotations.clear();", "-\t// notify CompilationParticipants (that !isAnnotationProcessor()) which source files are about to be compiled", "-\tCompilationParticipantResult[] participantResults = notifyParticipants(units);", "-\tif (participantResults != null)", "-\t\tunits = processParticipantResults(participantResults, units);", "+\t// notify CompilationParticipants which source files are about to be compiled", "+\tCompilationParticipantResult[] participantResults = this.javaBuilder.participants == null ? null : notifyParticipants(units);", "+\tif (participantResults != null && participantResults.length > units.length) {", "+\t\tunits = new SourceFile[participantResults.length];", "+\t\tfor (int i = participantResults.length; --i >= 0;)", "+\t\t\tunits[i] = participantResults[i].sourceFile;", "+\t}", "-\tif (participantResults != null)", "+\tif (participantResults != null) {", "-\tif (this.filesDeclaringAnnotation != null)", "-\t\tprocessAnnotations();", "+\t\tprocessAnnotations(participantResults);", "+\t}"]}], "num": 26075}