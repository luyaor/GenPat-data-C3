{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cce677781f73c8fb5203a41b21dae7c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11db378aef5bfb35a5e5563991e529d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "c76ca0258749c2717f441fbd5cdd6335fcc29bd3", "commitAfterChange": "00fb29417bfb5734c6eca9ef041023eab85e6eb6", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void test021()", "signatureAfterChange": " \tpublic void test021()", "diff": ["-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"src1/X.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"src2/Y.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class Y extends X {\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t},", "-\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2/Y.java\\\"\"", "-\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "-\t\t\t  + File.pathSeparator + \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2\\\"\"", "-\t        + \" -1.5 -g -preserveAllLocals\"", "-\t        + \" -verbose -proceedOnError -referenceInfo -useSingleThread\"", "-\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\" \",", "-\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/1]\\n\" +", "-\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t\t\t\"[reading    java/lang/Object.class]\\n\" +", "-\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "-\t\t\t\"[writing    Y.class - #1]\\n\" +", "-\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "-\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t\t\t\"[writing    X.class - #2]\\n\" +", "-\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t\t\t\"[2 units compiled]\\n\" +", "-\t\t\t\"[2 .class files generated]\\n\",", "-\t        \"\",", "-\t        true);", "+\t\tString setting= System.getProperty(\"jdt.compiler.useSingleThread\");", "+\t\ttry {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", \"true\");", "+\t\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\"src1/X.java\",", "+\t\t\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\t\"}\",", "+\t\t\t\t\t\t\"src2/Y.java\",", "+\t\t\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\t\t\"public class Y extends X {\\n\" +", "+\t\t\t\t\t\t\"}\",", "+\t\t\t\t},", "+\t\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2/Y.java\\\"\"", "+\t\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "+\t\t\t\t  + File.pathSeparator + \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2\\\"\"", "+\t\t        + \" -1.5 -g -preserveAllLocals\"", "+\t\t        + \" -verbose -proceedOnError -referenceInfo\"", "+\t\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\" \",", "+\t\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/1]\\n\" +", "+\t\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t\t\t\"[reading    java/lang/Object.class]\\n\" +", "+\t\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "+\t\t\t\t\"[writing    Y.class - #1]\\n\" +", "+\t\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "+\t\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t\t\t\"[writing    X.class - #2]\\n\" +", "+\t\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t\t\t\"[2 units compiled]\\n\" +", "+\t\t\t\t\"[2 .class files generated]\\n\",", "+\t\t        \"\",", "+\t\t        true);", "+\t\t} finally {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", setting == null ? \"false\" : setting);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a932d8a86cb370e2780fba4aaf2b0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "cdc11c6e72240b1766f8f5810b1fb669da307c66", "commitAfterChange": "b4bd621d9d0ae940b676be9ef06c098999d70b35", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \t\t public void _test027()", "signatureAfterChange": " \t\t public void test027()", "diff": ["-public void _test027(){", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\tOK1 ok1;\\n\" + ", "-\t\t\t\t\t\"\tOK2 ok2;\\n\" + ", "-\t\t\t\t\t\"\tWarn warn;\\n\" + ", "-\t\t\t\t\t\"\tKO ko;\\n\" + ", "-\t\t\t        \"\tZork z;\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"OK1.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class OK1 {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"OK2.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class OK2 {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"p1/Warn.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class Warn {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"KO.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class KO {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t},", "-\t\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"X.java\\\"\"", "-\t\t        + \" -1.5 -g -preserveAllLocals\"", "-\t\t        + \" -cp \\\"\" + OUTPUT_DIR + \"[+OK2\" + File.pathSeparator + \"-KO]\" + File.pathSeparator", "-\t\t        + OUTPUT_DIR + File.separator + \"p1[~Warn]\\\"\"", "-\t\t        + \" -verbose -warn:+deprecation,syntheticAccess,uselessTypeCheck,unsafe,finalBound,unusedLocal\"", "-\t\t        + \" -proceedOnError -referenceInfo -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "-\t\t        \"[5 .class files generated]\\n\", ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "-\t\t        \" (at line 5)\\n\" + ", "-\t\t        \"\tWarn warn;\\n\" + ", "-\t\t        \"\t^^^^\\n\" + ", "-\t\t        \"Discouraged access: Warn\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "-\t\t        \" (at line 6)\\n\" + ", "-\t\t        \"\tKO ko;\\n\" + ", "-\t\t        \"\t^^\\n\" + ", "-\t\t        \"Access restriction: KO\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"3. ERROR in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "-\t\t        \" (at line 7)\\n\" + ", "-\t\t        \"\tZork z;\\n\" + ", "-\t\t        \"\t^^^^\\n\" + ", "-\t\t        \"Zork cannot be resolved to a type\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"3 problems (1 error, 2 warnings)\",", "-\t\t        true);", "-\t\t}", "+public void test027(){", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tOK1 ok1;\\n\" + ", "+\t\t\t\"\tOK2 ok2;\\n\" + ", "+\t\t\t\"\tWarn warn;\\n\" + ", "+\t\t\t\"\tKO ko;\\n\" + ", "+\t        \"\tZork z;\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"OK1.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class OK1 {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"OK2.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class OK2 {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"p1/Warn.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class Warn {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"KO.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class KO {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t},", "+        \"\\\"\" + OUTPUT_DIR +  File.separator + \"X.java\\\"\"", "+        + \" -1.5 -g -preserveAllLocals\"", "+        + \" -cp \\\"\" + OUTPUT_DIR + \"[+OK2\" + File.pathSeparator + \"-KO]\" + File.pathSeparator", "+        + OUTPUT_DIR + File.separator + \"p1[~Warn]\\\"\"", "+        + \" -verbose -warn:+deprecation,syntheticAccess,uselessTypeCheck,unsafe,finalBound,unusedLocal\"", "+        + \" -proceedOnError -referenceInfo -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "+        \"[5 .class files generated]\\n\", ", "+        \"----------\\n\" + ", "+        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 5)\\n\" + ", "+        \"\tWarn warn;\\n\" + ", "+        \"\t^^^^\\n\" + ", "+        \"Discouraged access: Warn\\n\" + ", "+        \"----------\\n\" + ", "+        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 6)\\n\" + ", "+        \"\tKO ko;\\n\" + ", "+        \"\t^^\\n\" + ", "+        \"Access restriction: KO\\n\" + ", "+        \"----------\\n\" + ", "+        \"3. ERROR in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 7)\\n\" + ", "+        \"\tZork z;\\n\" + ", "+        \"\t^^^^\\n\" + ", "+        \"Zork cannot be resolved to a type\\n\" + ", "+        \"----------\\n\" + ", "+        \"3 problems (1 error, 2 warnings)\",", "+        true);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5df752ac3663b05b59fd34a0702de86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "c76ca0258749c2717f441fbd5cdd6335fcc29bd3", "commitAfterChange": "00fb29417bfb5734c6eca9ef041023eab85e6eb6", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic void test025()", "signatureAfterChange": " \tpublic void test025()", "diff": ["-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"src1/X.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"  my.pkg.Zork dummy;\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"src2/Y.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class Y extends X {\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t},", "-\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2/Y.java\\\"\"", "-\t\t\t+ \" -extdirs \\\"\" + path + File.pathSeparator + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "-\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "-\t        + \" -1.5 -g -preserveAllLocals\"", "-\t        + \" -verbose -proceedOnError -referenceInfo -useSingleThread\"", "-\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\" \",", "-\t        \"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/1]\\n\" +", "-\t        \"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t        \"[reading    java/lang/Object.class]\\n\" +", "-\t        \"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "-\t        \"[writing    Y.class - #1]\\n\" +", "-\t        \"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "-\t        \"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t        \"[reading    my/pkg/Zork.class]\\n\" +", "-\t        \"[writing    X.class - #2]\\n\" +", "-\t        \"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t        \"[2 units compiled]\\n\" +", "-\t        \"[2 .class files generated]\\n\",", "-\t        \"\",", "-\t        true);", "+\t\tString setting= System.getProperty(\"jdt.compiler.useSingleThread\");", "+\t\ttry {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", \"true\");", "+\t\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\"src1/X.java\",", "+\t\t\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\t\"  my.pkg.Zork dummy;\\n\" +", "+\t\t\t\t\t\t\"}\",", "+\t\t\t\t\t\t\"src2/Y.java\",", "+\t\t\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\t\t\"public class Y extends X {\\n\" +", "+\t\t\t\t\t\t\"}\",", "+\t\t\t\t},", "+\t\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2/Y.java\\\"\"", "+\t\t\t\t+ \" -extdirs \\\"\" + path + File.pathSeparator + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "+\t\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "+\t\t        + \" -1.5 -g -preserveAllLocals\"", "+\t\t        + \" -verbose -proceedOnError -referenceInfo\"", "+\t\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\" \",", "+\t\t        \"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/1]\\n\" +", "+\t\t        \"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t        \"[reading    java/lang/Object.class]\\n\" +", "+\t\t        \"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "+\t\t        \"[writing    Y.class - #1]\\n\" +", "+\t\t        \"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "+\t\t        \"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t        \"[reading    my/pkg/Zork.class]\\n\" +", "+\t\t        \"[writing    X.class - #2]\\n\" +", "+\t\t        \"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t        \"[2 units compiled]\\n\" +", "+\t\t        \"[2 .class files generated]\\n\",", "+\t\t        \"\",", "+\t\t        true);", "+\t\t} finally {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", setting == null ? \"false\" : setting);", "+\t\t}"]}], "num": 34664}