{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "894ee45cb90ab4e3235ca649b1f0395b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fea811e227aa66069aa89bd0bbc6977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tif (USE_NEW_FORMATTER) {", "-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "-\t\t\tparser.setSource(source.toCharArray());", "-\t\t\tparser.setKind(ASTParser.K_CLASS_BODY_DECLARATIONS);", "-\t\t\tparser.setCompilerOptions(getDefaultCompilerOptions());", "-\t\t\tparser.setResolveBindings(false);", "-\t\t\tparser.setUnitName(\"\"); //$NON-NLS-1$", "-\t\t\torg.eclipse.jdt.core.dom.ASTNode node = parser.createAST(null);", "-\t\t\tif (lineSeparator != null) {", "-\t\t\t\tthis.preferences.line_separator = lineSeparator;", "-\t\t\t} else {", "-\t\t\t\tthis.preferences.line_separator = Util.LINE_SEPARATOR;", "-\t\t\t}", "-\t\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\t\tthis.newCodeFormatter2 = new CodeFormatterVisitor2(this.preferences, this.options, offset, length, (CompilationUnit) node.getRoot());", "-\t\t\treturn this.newCodeFormatter2.format(source, (AbstractTypeDeclaration) node);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81e3b0c5e0c2e72d83c2d7f616d62a9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "5a53f18232717545da0e2d96f91b1a8304ecbb36", "commitAfterChange": "ee3261d361c535bc2efdddf17bd2004ef36dd41a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": " \t \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["+\t\tif (USE_NEW_FORMATTER) {", "+\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "+\t\t\tparser.setSource(source.toCharArray());", "+\t\t\tparser.setKind(ASTParser.K_CLASS_BODY_DECLARATIONS);", "+\t\t\tparser.setCompilerOptions(getDefaultCompilerOptions());", "+\t\t\tparser.setResolveBindings(false);", "+\t\t\tparser.setUnitName(\"\"); //$NON-NLS-1$", "+\t\t\torg.eclipse.jdt.core.dom.ASTNode node = parser.createAST(null);", "+\t\t\tif (lineSeparator != null) {", "+\t\t\t\tthis.preferences.line_separator = lineSeparator;", "+\t\t\t} else {", "+\t\t\t\tthis.preferences.line_separator = System.getProperty(\"line.separator\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tthis.preferences.initial_indentation_level = indentationLevel;", "+", "+\t\t\tthis.newCodeFormatter2 = new CodeFormatterVisitor2(this.preferences, this.options, offset, length, (CompilationUnit) node.getRoot());", "+\t\t\treturn this.newCodeFormatter2.format(source, (AbstractTypeDeclaration) node);", "+\t\t}"]}], "num": 64091}