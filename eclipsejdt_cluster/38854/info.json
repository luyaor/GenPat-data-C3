{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "102ebae9207451ec28897b9f5330efa2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b607eec68be2bb99009b2770c5da0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "d57d057b9e029964391a7d18231884c456809f0a", "commitAfterChange": "a5db2eb78d347817bbf37d865afb84de837fdf1b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "signatureAfterChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet projectsToBeAdded, IClasspathEntry referringEntry) throws JavaModelException", "diff": ["-void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException {", "+void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet projectsToBeAdded, IClasspathEntry referringEntry) throws JavaModelException {", "-\tif (!project.isAccessible() || !visitedProjects.add(project)) return;", "+\tif (!project.isAccessible() || projectsToBeAdded.contains(project)) return;", "-\t\t\t\t// Need to remove the project from visited projects list to be sure", "-\t\t\t\t// not to skip library when the project will be added as a top level.", "-\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=176831", "-\t\t\t\tvisitedProjects.remove(project);", "-\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(path.lastSegment()), null, includeMask, visitedProjects, cpEntry);", "+\t\t\t\t\t\tprojectsToBeAdded.add(project); // avoid infinite recursion", "+\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(path.lastSegment()), null, includeMask, projectsToBeAdded, cpEntry);", "+\t\t\t\t\t\tprojectsToBeAdded.remove(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d5a0df111a8b1083b32d0525b54700e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "0f2bcb9853eb25fef3d26daa6737dcdc0dcad109", "commitAfterChange": "675cddfe47d2b627c175c8cfe6727e8305420ff8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet projectsToBeAdded, IClasspathEntry referringEntry) throws JavaModelException", "signatureAfterChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet projectsToBeAdded, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "diff": ["-void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet projectsToBeAdded, IClasspathEntry referringEntry) throws JavaModelException {", "+void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet projectsToBeAdded, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException {", "-\tif (!project.isAccessible() || projectsToBeAdded.contains(project)) return;", "+\tif (!project.isAccessible() || !visitedProjects.add(project)) return;", "-\t\t\t\t\t\tprojectsToBeAdded.add(project); // avoid infinite recursion", "-\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(path.lastSegment()), null, includeMask, projectsToBeAdded, cpEntry);", "-\t\t\t\t\t\tprojectsToBeAdded.remove(project);", "+\t\t\t\t\t\tJavaProject referencedProject = (JavaProject) model.getJavaProject(path.lastSegment());", "+\t\t\t\t\t\tif (!projectsToBeAdded.contains(referencedProject)) { // do not recurse if depending project was used to create the scope", "+\t\t\t\t\t\t\tadd(referencedProject, null, includeMask, projectsToBeAdded, visitedProjects, cpEntry);", "+\t\t\t\t\t\t}"]}], "num": 38854}