{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6227cd0293c514c050a6d9431cb5bb0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60bb145d8abb5f2b6a432e853517c94a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate TextEdit internalFormatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, ASTNode[] bodyDeclarations, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit internalFormatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, ASTNode[] bodyDeclarations, int offset, int length)", "diff": ["+", "+\tprivate TextEdit internalFormatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, ASTNode[] bodyDeclarations, int offset, int length) {", "+\t\tif (lineSeparator != null) {", "+\t\t\tthis.preferences.line_separator = lineSeparator;", "+\t\t} else {", "+\t\t\tthis.preferences.line_separator = System.getProperty(\"line.separator\"); //$NON-NLS-1$", "+\t\t}", "+\t\tthis.preferences.initial_indentation_level = indentationLevel;", "+", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options, offset, length);", "+\t\t", "+\t\treturn this.newCodeFormatter.format(source, bodyDeclarations);", "+\t}", "-", "-\tprivate TextEdit internalFormatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, ASTNode[] bodyDeclarations, int offset, int length) {", "-\t\tif (lineSeparator != null) {", "-\t\t\tthis.preferences.line_delimiter = lineSeparator;", "-\t\t}", "-\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options, offset, length);", "-\t\t", "-\t\treturn this.newCodeFormatter.format(source, bodyDeclarations);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a6f312d2fec223fc03cd124b216db9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\t\tthis.preferences.line_delimiter = lineSeparator;", "+\t\t\tthis.preferences.line_separator = lineSeparator;", "+\t\t} else {", "+\t\t\tthis.preferences.line_separator = System.getProperty(\"line.separator\"); //$NON-NLS-1$"]}], "num": 18390}