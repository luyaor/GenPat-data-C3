{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a07f97eb7e68e8db859c4a629537b4c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e407accce5abca35a36a8f578825a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 232, "signatureBeforeChange": " protected void consumeOneMoreTypeAnnotation()", "signatureAfterChange": " protected void consumeOneMoreTypeAnnotation()", "diff": ["-protected void consumeOneMoreTypeAnnotation() {", "-\t// OneOrMoreAnnotations ::= OneOrMoreAnnotations Annotation", "-\tthis.expressionLengthPtr --;", "-\tAnnotation annotation = (Annotation) this.expressionStack[this.expressionPtr--];", "-\tpushOnTypeAnnotationStack(annotation);", "-\tthis.typeAnnotationLengthStack[--this.typeAnnotationLengthPtr]++;", "-\tif(!this.statementRecoveryActivated &&", "-\t\t\tthis.options.sourceLevel <= ClassFileConstants.JDK1_7 &&", "+protected void consumeOneMoreTypeAnnotation() {", "+\t// OneOrMoreAnnotations ::= OneOrMoreAnnotations Annotation", "+\tthis.typeAnnotationLengthStack[--this.typeAnnotationLengthPtr]++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba23743214c82a0ef362d112cc3b6b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "671b0d581aa5d36230a5cb8553037f000c8d5afa", "commitAfterChange": "c5e4a396e5f97d1050138e25a4f2f263849bffc7", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " protected void consumeEnhancedForStatementHeader(boolean hasModifiers)", "signatureAfterChange": " protected void consumeEnhancedForStatementHeaderInit(boolean hasModifiers)", "diff": ["-protected void consumeEnhancedForStatementHeader(boolean hasModifiers){", "-\t// EnhancedForStatementHeader ::= 'for' '(' Type PushModifiers Identifier Dimsopt ':' Expression ')'", "-\t// EnhancedForStatementHeader ::= 'for' '(' Modifiers Type PushRealModifiers Identifier Dimsopt ':' Expression ')'", "+protected void consumeEnhancedForStatementHeaderInit(boolean hasModifiers) {", "-\t//updates are on the expression stack", "-\tthis.expressionLengthPtr--;", "-\tExpression collection = this.expressionStack[this.expressionPtr--];", "-\t", "-\t\t\tcollection,", "-\t", "+}", "-\t\tthis.problemReporter().invalidUsageOfForeachStatements(localDeclaration, collection);", "-\t}"]}], "num": 58743}