{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "533d8461008a5a01b39012f39f4ad32c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e147aceb0242c8e677135be3b05e0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d5153db1b78be1240488c00ed97be6f8d4f85142", "commitAfterChange": "703ea70d31fea8142c2f0c6536ccedc3e7344670", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  \tpublic ResolvedClasspath resolveClasspath(IClasspathEntry[] rawClasspath, IClasspathEntry[] referencedEntries, boolean usePreviousSession, boolean resolveChainedLibraries) throws JavaModelException", "signatureAfterChange": "  \tpublic ResolvedClasspath resolveClasspath(IClasspathEntry[] rawClasspath, IClasspathEntry[] referencedEntries, boolean usePreviousSession, boolean resolveChainedLibraries) throws JavaModelException", "diff": ["-\t\t\t\tresult.referencedEntries = new IClasspathEntry[referencedEntriesSet.size()];", "-\t\t\t\treferencedEntriesSet.toArray(result.referencedEntries);", "+\t\t\t\tif (referencedEntriesSet.size() > 0) {", "+\t\t\t\t\tresult.referencedEntries = new IClasspathEntry[referencedEntriesSet.size()];", "+\t\t\t\t\treferencedEntriesSet.toArray(result.referencedEntries);", "+\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=305037", "+\t\t\t\t\t\t\t\t\t// referenced entries for variable entries could also be persisted with extra attributes, so addAsChainedEntry = true", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tif (resolveChainedLibraries && result.rawReverseMap.get(cEntry.getPath()) == null) {", "-\t\t\t\t\t\t\t\t// resolve Class-Path: in manifest", "-\t\t\t\t\t\t\t\tClasspathEntry[] extraEntries = cEntry.resolvedChainedLibraries();", "-\t\t\t\t\t\t\t\tfor (int k = 0, length2 = extraEntries.length; k < length2; k++) {", "-\t\t\t\t\t\t\t\t\tif (!rawLibrariesPath.contains(extraEntries[k].getPath())) {", "-\t\t\t\t\t\t\t\t\t\taddToResult(rawEntry, extraEntries[k], result, resolvedEntries, externalFoldersManager, referencedEntriesMap, true);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=305037", "+\t\t\t\t\t\t\t// responsibility of resolving chained (referenced) libraries lies with the container"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6780cb0a5fad2e399415cf8d6f7552c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b978e7a94d48cd82dbef3b42c2ac323ce05ae123", "commitAfterChange": "434c1aaf125f5f9b1333fb895bef73ae37de8528", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  \tpublic ResolvedClasspath resolveClasspath(IClasspathEntry[] rawClasspath, IClasspathEntry[] referencedEntries, boolean usePreviousSession, boolean resolveChainedLibraries) throws JavaModelException", "signatureAfterChange": "  \tpublic ResolvedClasspath resolveClasspath(IClasspathEntry[] rawClasspath, IClasspathEntry[] referencedEntries, boolean usePreviousSession, boolean resolveChainedLibraries) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=305037", "-\t\t\t\t\t\t\t// responsibility of resolving chained (referenced) libraries lies with the container", "+\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=313965", "+\t\t\t\t\t\t\t// Do not resolve if the system attribute is set to false\t", "+\t\t\t\t\t\t\tif (resolveChainedLibraries", "+\t\t\t\t\t\t\t\t\t&& JavaModelManager.getJavaModelManager().resolveReferencedLibrariesForContainers", "+\t\t\t\t\t\t\t\t\t&& result.rawReverseMap.get(cEntry.getPath()) == null) {", "+\t\t\t\t\t\t\t\t// resolve Class-Path: in manifest", "+\t\t\t\t\t\t\t\tClasspathEntry[] extraEntries = cEntry.resolvedChainedLibraries();", "+\t\t\t\t\t\t\t\tfor (int k = 0, length2 = extraEntries.length; k < length2; k++) {", "+\t\t\t\t\t\t\t\t\tif (!rawLibrariesPath.contains(extraEntries[k].getPath())) {", "+\t\t\t\t\t\t\t\t\t\taddToResult(rawEntry, extraEntries[k], result, resolvedEntries, externalFoldersManager, referencedEntriesMap, false);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}"]}], "num": 11158}