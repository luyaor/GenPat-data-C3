{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb0c340b19a273a07f3ceec35f7f8107", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f826b59649ac9094f58b5f8a2a902c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": " \tpublic void test058b()", "signatureAfterChange": " \tpublic void test058b()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tnew X<Object>().foo(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"\t                ^^^\\n\" + ", "+\t\t\t\t\"The method foo(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tnew X<Object>().foo2(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\t\"The method foo2(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(T) of type X<A> has the same erasure as foo(A) of type Y<A> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo2(T) of type X<A> has the same erasure as foo2(A) of type Y<A> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\t\"\tnew X<Object>().foo(\\\"X\\\");\\n\" + ", "+\t\t\t\t\t\"\t                ^^^\\n\" + ", "+\t\t\t\t\t\"The method foo(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\t\"\tnew X<Object>().foo2(\\\"X\\\");\\n\" + ", "+\t\t\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\t\t\"The method foo2(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method foo(T) of type X<A> has the same erasure as foo(A) of type Y<A> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method foo2(T) of type X<A> has the same erasure as foo2(A) of type Y<A> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tnew X<Object>().foo(\\\"X\\\");\\n\" + ", "-\t\t\t\"\t                ^^^\\n\" + ", "-\t\t\t\"The method foo(String) is ambiguous for the type X<Object>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tnew X<Object>().foo2(\\\"X\\\");\\n\" + ", "-\t\t\t\"\t                ^^^^\\n\" + ", "-\t\t\t\"The method foo2(String) is ambiguous for the type X<Object>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "-\t\t\t\"\t      ^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo(T) of type X<A> has the same erasure as foo(A) of type Y<A> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "-\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo2(T) of type X<A> has the same erasure as foo2(A) of type Y<A> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f64e247c8b73ebfe2e14ab4a6463de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "34b4972480c62fc99b17d4728db2648e98460b52", "commitAfterChange": "a234173ab4d645c8990c97cafa00ec82ce0a909f", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 373, "signatureBeforeChange": " public void _test315_warn_options()", "signatureAfterChange": " public void test315_warn_options()", "diff": ["-// DISABLED due to dysfunctional global default after Bug 366063 - Compiler should not add synthetic @NonNull annotations", "-public void _test315_warn_options() {", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=372012", "+public void test315_warn_options() {", "+\t\t\t\t\"p/package-info.java\",", "+\t\t\t\t\"@org.eclipse.jdt.annotation.NonNullByDefault\\n\" +", "+\t\t\t\t\"package p;\\n\",", "-\t\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "-\t\t\t\t\"@SuppressWarnings(\\\"unused\\\")\\n\" +", "-\t\t\t\t\"  Object foo(@Nullable Object o, Object o2) {\\n\" +", "-\t\t\t\t\"    if (o.toString() == \\\"\\\"){ return null;}\\n\" +", "-\t\t\t\t\"    if (o2 == null) {}\\n\" +", "-\t\t\t\t\"    goo(null).toString();\\n\" +", "-\t\t\t\t\"\t return null;\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  @Nullable Object goo(Object o2) {\\n\" +", "-\t\t\t\t\"    return new Object();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  @NonNullByDefault Object hoo(Object o2) {\\n\" + // redundant", "-\t\t\t\t\"    if (o2 == null)\\n\" +", "-\t\t\t\t\"\t    return null;\\n\" +", "-\t\t\t\t\"    return this;\\n\" +", "-\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"p1/X1.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class X1 {\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"p1/X1a.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class X1a {\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"Default1.java\",", "+\t\t\t\t\"public class Default1 {\\n\" +", "-\t\t+ \" -warn:+nullAnnot -warn:+null -nonNullByDefault -proc:none -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "+\t\t+ \" -warn:+nullAnnot -warn:+null -missingNullDefault -proc:none -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "+\t\t\"\",", "+\t\t\"\",", "+\t\ttrue);", "+}", "-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 6)\\n\" + ", "-\t\t\"\tif (o.toString() == \\\"\\\"){ return null;}\\n\" + ", "-\t\t\"\t    ^\\n\" + ", "-\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" + ", "-\t\t\"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 6)\\n\" + ", "-\t\t\"\tif (o.toString() == \\\"\\\"){ return null;}\\n\" + ", "-\t\t\"\t                                ^^^^\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"3. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 7)\\n\" + ", "-\t\t\"\tif (o2 == null) {}\\n\" + ", "-\t\t\"\t    ^^\\n\" + ", "-\t\t\"Null comparison always yields false: The variable o2 cannot be null at this location\\n\" + ", "-\t\t\"4. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 8)\\n\" + ", "-\t\t\"\tgoo(null).toString();\\n\" + ", "-\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\"Potential null pointer access: The method goo(Object) may return null\\n\" + ", "-\t\t\"5. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 8)\\n\" + ", "-\t\t\"\tgoo(null).toString();\\n\" + ", "-\t\t\"\t    ^^^^\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"6. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 9)\\n\" + ", "-\t\t\"\treturn null;\\n\" + ", "-\t\t\"\t       ^^^^\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"7. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 14)\\n\" + ", "-\t\t\"\t@NonNullByDefault Object hoo(Object o2) {\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Nullness default is redundant with the global default\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"8. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 15)\\n\" + ", "-\t\t\"\tif (o2 == null)\\n\" + ", "-\t\t\"\t    ^^\\n\" + ", "-\t\t\"Null comparison always yields false: The variable o2 cannot be null at this location\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"8 problems (8 warnings)\", "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04b9186abea6ad4929fc5ccdd117880", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": " \tpublic void test058a()", "signatureAfterChange": " \tpublic void test058a()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tnew X<Object>().foo(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"\t                ^^^\\n\" + ", "+\t\t\t\t\"The method foo(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tnew X<Object>().foo2(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\t\"The method foo2(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(T) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tvoid foo(A a) {}\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(A) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo2(T) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\t<T> void foo2(A a) {}\\n\" + ", "+\t\t\t\t\"\t         ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo2(A) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(T) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\t\"\tvoid foo(A a) {}\\n\" + ", "+\t\t\t\t\t\"\t     ^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(A) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo2(T) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\t\"\t<T> void foo2(A a) {}\\n\" + ", "+\t\t\t\t\t\"\t         ^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo2(A) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "-\t\t\t\"\t      ^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(T) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tvoid foo(A a) {}\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(A) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "-\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo2(T) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\t<T> void foo2(A a) {}\\n\" + ", "-\t\t\t\"\t         ^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo2(A) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}], "num": 51474}