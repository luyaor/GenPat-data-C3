{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf211f051bd88d9f1ea79c875d08e6e0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "166c13cddb19db0b2e635de4a48ac64c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tObjectVector typesFound)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["+\t\tboolean proposeAllMemberTypes,", "+\t\tSourceTypeBinding nextTypeToIgnore = null;", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tif(PROPOSE_MEMBER_TYPES) {", "+\t\t\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\t\t\t\t\t\tif(!localType.isClass()) continue next;", "+\t\t\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\t\t\t\t\t\tif(!localType.isInterface() && !localType.isAnnotationType()) continue next;", "+\t\t\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\t\t\t\t\t\tif(!localType.isAnnotationType()) continue next;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\tfindMemberTypes(typeName, scope.enclosingSourceType(), scope, currentType, false, typesFound);", "+\t\t\t\t\tSourceTypeBinding enclosingSourceType = scope.enclosingSourceType();", "+\t\t\t\t\tfindMemberTypes(typeName, enclosingSourceType, scope, currentType, false, false, false, proposeAllMemberTypes, nextTypeToIgnore, typesFound);", "+\t\t\t\t\tnextTypeToIgnore = enclosingSourceType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8e7611df1fdd91b0643c452da75807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "10d0299472db75b0d2601fb1ed8fd13d430fef5a", "commitAfterChange": "1d1bcfc5dd72fdf22291e7342487bb93d58df5c4", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 100, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\t\tcreateTypeProposal(localType, localType.sourceName, IAccessRule.K_ACCESSIBLE, localType.sourceName, relevance);", "+\t\t\t\t\t\t\t\t\tcreateTypeProposal(", "+\t\t\t\t\t\t\t\t\t\t\tlocalType,", "+\t\t\t\t\t\t\t\t\t\t\tlocalType.sourceName,", "+\t\t\t\t\t\t\t\t\t\t\tIAccessRule.K_ACCESSIBLE,", "+\t\t\t\t\t\t\t\t\t\t\tlocalType.sourceName,", "+\t\t\t\t\t\t\t\t\t\t\trelevance,", "+\t\t\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\t\t\tfalse);", "-\t\t\t\t\tfindMemberTypes(typeName, enclosingSourceType, scope, currentType, false, false, false, false, proposeAllMemberTypes, nextTypeToIgnore, typesFound);", "+\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\ttypeName,", "+\t\t\t\t\t\t\tenclosingSourceType,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tcurrentType,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tproposeAllMemberTypes,", "+\t\t\t\t\t\t\tnextTypeToIgnore,", "+\t\t\t\t\t\t\ttypesFound,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tfalse);"]}], "num": 58021}