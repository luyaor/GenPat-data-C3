{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc65bff62cc53bf12813b64eb5a6a5ce", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "108e328bc7e299ce41af47d9740491dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "723beba465d4cd213bbf2c94b1db0963e06a9745", "commitAfterChange": "1f1c7c285f7f6d962c03df0c90855f08aed5d7d3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void consumeCapture(final int position)", "signatureAfterChange": " \tpublic void consumeAnyCapture(final int capture18id, final int position)", "diff": ["+\t}", "+\tpublic void consumeAnyCapture(final int capture18id, final int position) {", "-\t\tfinal Binding wildcardBinding = ((BindingKeyResolver) this.types.get(0)).compilerBinding;", "+\t\tfinal Binding wildcardBinding = this.types.size() > 0  // 0 may happen for CaptureBinding18", "+\t\t\t\t? ((BindingKeyResolver) this.types.get(0)).compilerBinding : null;", "+\t\t\t\t\t\t\t\tif (captureBinding instanceof CaptureBinding18) {", "+\t\t\t\t\t\t\t\t\tif (((CaptureBinding18)captureBinding).captureID != capture18id)", "+\t\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aa45df3c19e525e0f3c9dd5990a012d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyToSignature.java", "commitBeforeChange": "c117a64cdf0af5bb1016a70197fdaaecfa29c6f9", "commitAfterChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void consumeCapture()", "signatureAfterChange": " \t \tpublic void consumeCapture(int position)", "diff": ["-\tpublic void consumeCapture() {", "-\t\tthis.signature.append('!');", "+\tpublic void consumeCapture(int position) {", "+\t\t// behave as if it was a wildcard", "+\t\tthis.signature = (StringBuffer) this.arguments.get(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d28480f4fa7999a5c6793d00b165ad9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "e3d53567a2da30642563e64ed917c4bae8913786", "commitAfterChange": "ccf24ba3615c241f4b234ee572c67902c4cad252", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic SyntheticMethodBinding(ArrayBinding arrayType, char [] lambdaName, SourceTypeBinding declaringClass)", "signatureAfterChange": "  \tpublic SyntheticMethodBinding(int purpose, ArrayBinding arrayType, char [] lambdaName, SourceTypeBinding declaringClass)", "diff": ["-\tpublic SyntheticMethodBinding(ArrayBinding arrayType, char [] lambdaName, SourceTypeBinding declaringClass) {", "+\tpublic SyntheticMethodBinding(int purpose, ArrayBinding arrayType, char [] lambdaName, SourceTypeBinding declaringClass) {", "-\t    this.parameters = new TypeBinding[] { TypeBinding.INT };", "+\t    this.parameters = new TypeBinding[] { purpose == SyntheticMethodBinding.ArrayConstructor ? TypeBinding.INT : (TypeBinding) arrayType};", "-\t    this.purpose = SyntheticMethodBinding.ArrayConstructor;", "+\t    this.purpose = purpose;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0385c1c9898ae19c1aa92d21fedb49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a8073c80a69f6c184e71b3ada3faf15faa3ff3ae", "commitAfterChange": "33e49b6e14282ee69dc2c2cf0c73bec5e674cdf2", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void duplicateAnnotation(Annotation annotation)", "signatureAfterChange": " public void duplicateAnnotation(Annotation annotation, long sourceLevel)", "diff": ["-public void duplicateAnnotation(Annotation annotation) {", "+public void duplicateAnnotation(Annotation annotation, long sourceLevel) {", "-\t\tIProblem.DuplicateAnnotation,", "+\t\tsourceLevel >= ClassFileConstants.JDK1_8 ? IProblem.DuplicateAnnotationNotMarkedRepeatable : IProblem.DuplicateAnnotation,"]}], "num": 12364}