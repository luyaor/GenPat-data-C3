{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e0d006c6de61a764de2fed75ca85f1c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1689c796b1bce0bc8451b2f734b4d42c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "56593bf638b3153ebd87da51dc4f0f1bb7066395", "commitAfterChange": "607ff419d62fc0f91055d1c2d16685459d9fa667", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private SimpleLookupTable getIndexStates()", "signatureAfterChange": " private SimpleLookupTable getIndexStates()", "diff": ["-\t\tfor (int i = 0, l = names.length; i < l; i++) {", "-\t\t\tchar[] name = names[i];", "-\t\t\tif (name.length > 0)", "-\t\t\t\tthis.indexStates.put(new String(name), SAVED_STATE);", "+\t\tif (names.length > 0) {", "+\t\t\t// check to see if workspace has moved, if so then do not trust saved indexes", "+\t\t\tFile indexesDirectory = new File(getJavaPluginWorkingLocation().toOSString());", "+\t\t\tchar[] dirName = indexesDirectory.getAbsolutePath().toCharArray();", "+\t\t\tint delimiterPos = dirName.length;", "+\t\t\tif (CharOperation.match(names[0], 0, delimiterPos, dirName, 0, delimiterPos, true)) {", "+\t\t\t\tfor (int i = 0, l = names.length; i < l; i++) {", "+\t\t\t\t\tchar[] name = names[i];", "+\t\t\t\t\tif (name.length > 0)", "+\t\t\t\t\t\tthis.indexStates.put(new String(name), SAVED_STATE);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tsavedIndexNamesFile.delete(); // forget saved indexes & delete each index file", "+\t\t\t\tFile[] files = indexesDirectory.listFiles();", "+\t\t\t\tif (files != null) {", "+\t\t\t\t\tfor (int i = 0, l = files.length; i < l; i++) {", "+\t\t\t\t\t\tString fileName = files[i].getAbsolutePath();", "+\t\t\t\t\t\tif (fileName.toLowerCase().endsWith(\".index\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tif (VERBOSE)", "+\t\t\t\t\t\t\t\tUtil.verbose(\"Deleting index file \" + files[i]); //$NON-NLS-1$", "+\t\t\t\t\t\t\tfiles[i].delete();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334cdffeb1c90c586a4428b7faab1a50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " private SimpleLookupTable getIndexStates()", "signatureAfterChange": " private SimpleLookupTable getIndexStates()", "diff": ["-\tif (indexStates != null) return indexStates;", "+\tif (this.indexStates != null) return this.indexStates;", "-\tchar[] savedIndexNames = readIndexState();", "-\tif (savedIndexNames.length > 0) {", "-\t\tchar[][] names = CharOperation.splitOn('\\n', savedIndexNames);", "-\t\tif (names.length > 0) {", "-\t\t\t// check to see if workspace has moved, if so then do not trust saved indexes", "-\t\t\tFile indexesDirectory = new File(getJavaPluginWorkingLocation().toOSString());", "-\t\t\tchar[] dirName = indexesDirectory.getAbsolutePath().toCharArray();", "-\t\t\tint delimiterPos = dirName.length;", "-\t\t\tif (CharOperation.match(names[0], 0, delimiterPos, dirName, 0, delimiterPos, true)) {", "-\t\t\t\tfor (int i = 0, l = names.length; i < l; i++) {", "-\t\t\t\t\tchar[] name = names[i];", "-\t\t\t\t\tif (name.length > 0)", "-\t\t\t\t\t\tthis.indexStates.put(new String(name), SAVED_STATE);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tsavedIndexNamesFile.delete(); // forget saved indexes & delete each index file", "-\t\t\t\tFile[] files = indexesDirectory.listFiles();", "-\t\t\t\tif (files != null) {", "-\t\t\t\t\tfor (int i = 0, l = files.length; i < l; i++) {", "-\t\t\t\t\t\tString fileName = files[i].getAbsolutePath();", "-\t\t\t\t\t\tif (fileName.toLowerCase().endsWith(\".index\")) { //$NON-NLS-1$", "-\t\t\t\t\t\t\tif (VERBOSE)", "-\t\t\t\t\t\t\t\tUtil.verbose(\"Deleting index file \" + files[i]); //$NON-NLS-1$", "-\t\t\t\t\t\t\tfiles[i].delete();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\tIPath indexesDirectoryPath = getJavaPluginWorkingLocation();", "+\tchar[][] savedNames = readIndexState(indexesDirectoryPath.toOSString());", "+\tif (savedNames != null) {", "+\t\tfor (int i = 1, l = savedNames.length; i < l; i++) { // first name is saved signature, see readIndexState()", "+\t\t\tchar[] savedName = savedNames[i];", "+\t\t\tif (savedName.length > 0) {", "+\t\t\t\tIPath indexLocation = indexesDirectoryPath.append(new String(savedName)); // shares indexesDirectoryPath's segments", "+\t\t\t\tif (VERBOSE)", "+\t\t\t\t\tUtil.verbose(\"Reading saved index file \" + indexLocation); //$NON-NLS-1$", "+\t\t\t\tthis.indexStates.put(indexLocation, SAVED_STATE);", "+\t} else {", "+\t\tthis.savedIndexNamesFile.delete(); // forget saved indexes & delete each index file", "+\t\tdeleteIndexFiles(null);"]}], "num": 37404}