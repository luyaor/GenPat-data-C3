{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90c05e15da12899a333e90081244a0d8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06a98848d05e9b1842261dfa57b960e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test0020() throws JavaModelException", "signatureAfterChange": " public void test0020() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0020\", \"Test.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString completeBehind = \".Y002\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-\t", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:Z0020<java.lang.Object>.Y0020    completion:Y0020    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tCompletionResult result = complete(", "+            \"/Completion/src3/test0020/Test.java\",", "+            \"package test0020;\\n\"+", "+            \"\\n\"+", "+            \"public class Test {\\n\"+", "+            \"\tvoid foo() {\\n\"+", "+            \"\t\tZ0020<Object>.Y002\\n\"+", "+            \"\t}\\n\"+", "+            \"}\\n\"+", "+            \"class Z0020<T0020> {\\n\"+", "+            \"\tpublic class Y0020 {\\n\"+", "+            \"\t}\\n\"+", "+            \"}\",", "+            \".Y002\");", "+    ", "+    assertResults(", "+            \"expectedTypesSignatures=null\\n\" +", "+            \"expectedTypesKeys=null\",", "+            result.context);", "+    ", "+    assertResults(", "+            \"Z0020<java.lang.Object>.Y0020[TYPE_REF]{Y0020, test0020, Ltest0020.Z0020<Ljava.lang.Object;>.Y0020;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) +\"}\",", "+            result.proposals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b47cb4fb2d8a8acc34c9b9a69cb34d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void test0029() throws JavaModelException", "signatureAfterChange": " public void test0029() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0029\", \"Test.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString completeBehind = \"Inner2\";", "-\tint cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-\t", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:Test.Inner2<T>    completion:Inner2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tCompletionResult result = complete(", "+            \"/Completion/src3/test0029/Test.java\",", "+            \"package test0029;\\n\"+", "+            \"\\n\"+", "+            \"public class Test {\\n\"+", "+            \"\tpublic class Inner {\\n\"+", "+            \"\t\t/**/Inner2<Inner2<Object>> stack= new Inner2<Inner2<Object>>();\\n\"+", "+            \"\t}\\n\"+", "+            \"\tclass Inner2<T>{\\n\"+", "+            \"\t}\\n\"+", "+            \"}\",", "+            \"/**/Inner2\");", "+    ", "+    assertResults(", "+            \"Inner2[POTENTIAL_METHOD_DECLARATION]{Inner2, Ltest0029.Test$Inner;, ()V, Inner2, null, \"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"}\\n\"+", "+            \"Test.Inner2<T>[TYPE_REF]{Inner2, test0029, Ltest0029.Test$Inner2<TT;>;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+            result.proposals);"]}], "num": 652}