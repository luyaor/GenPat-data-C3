{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4abb1c02cc69694f6052ca6ef96f22a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5dcf0b2e490f25b892ea0bf3d25ebe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "79c4ba61903262b42e2a1f500afb283891f6e429", "commitAfterChange": "0253d89f9756861ec4e5e11bc7a45879722cfeed", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tvoid printComment(int kind, int trailing)", "signatureAfterChange": " \tvoid printComment(int kind, int trailing)", "diff": ["-\t\t\tint previousFoundTaskCount = this.scanner.foundTaskCount;", "-\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > previousFoundTaskCount) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount, previousFoundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > 0) {", "+\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\t\tpreviousFoundTaskCount = foundTaskCount;", "-\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > previousFoundTaskCount) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount, previousFoundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > 0) {", "+\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > previousFoundTaskCount) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount, previousFoundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > 0) {", "+\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\t\tpreviousFoundTaskCount = foundTaskCount;", "-\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > previousFoundTaskCount) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount, previousFoundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > 0) {", "+\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > previousFoundTaskCount) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount, previousFoundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && this.editsEnabled && foundTaskCount > 0) {", "+\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\t\t\t\tpreviousFoundTaskCount = foundTaskCount;", "-\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > previousFoundTaskCount) {", "-\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount, previousFoundTaskCount);", "+\t\t\t\t\t\tif (this.useTags && !this.editsEnabled && foundTaskCount > 0) {", "+\t\t\t\t\t\t\tsetEditsEnabled(foundTaskCount);", "-\t\t\t\tpreviousFoundTaskCount = foundTaskCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95e32fe83f4c28b04aabdce7b2e487f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "393bdec9ec7581654b4aa4ee60edc770ef37cb11", "commitAfterChange": "8089727dc6e57c18954234bb8002634241161372", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (valueIfTrue instanceof CastExpression) {", "-\t\t\tvalueIfTrue.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "-\t\t}", "-\t\tif (valueIfFalse instanceof CastExpression) {", "-\t\t\tvalueIfFalse.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "-\t\t}", "+\t\tif (valueIfTrue instanceof CastExpression) valueIfTrue.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+", "+\t\tif (valueIfFalse instanceof CastExpression) valueIfFalse.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+", "-\t\t\tif (valueIfTrueType == LongBinding || valueIfTrueType == DoubleBinding) {", "-\t\t\t\treturnTypeSlotSize = 2;", "-\t\t\t}", "-", "-\t\t\t\tthis.resolvedType = ShortBinding;", "-\t\t\t\treturn ShortBinding;", "+\t\t\t\treturn this.resolvedType = ShortBinding;", "-\t\t\t\tthis.resolvedType = valueIfTrueType;", "-\t\t\t\treturn valueIfTrueType;", "+\t\t\t\treturn this.resolvedType = valueIfTrueType;", "-\t\t\t\tthis.resolvedType = valueIfFalseType;", "-\t\t\t\treturn valueIfFalseType;", "+\t\t\t\treturn this.resolvedType = valueIfFalseType;", "-\t\t\t\tthis.resolvedType = IntBinding;", "-\t\t\t\treturn IntBinding;", "+\t\t\t\treturn this.resolvedType = IntBinding;", "-\t\t\t\treturnTypeSlotSize = 2;", "-\t\t\t\tthis.resolvedType = LongBinding;", "-\t\t\t\treturn LongBinding;", "+\t\t\t\treturn this.resolvedType = LongBinding;", "-\t\t\t\tthis.resolvedType = FloatBinding;", "-\t\t\t\treturn FloatBinding;", "+\t\t\t\treturn this.resolvedType = FloatBinding;", "-\t\t\treturnTypeSlotSize = 2;", "-\t\t\tthis.resolvedType = DoubleBinding;", "-\t\t\treturn DoubleBinding;", "+\t\t\treturn this.resolvedType = DoubleBinding;", "-\t\t\tthis.resolvedType = valueIfTrueType;", "-\t\t\treturn valueIfTrueType;", "+\t\t\treturn this.resolvedType = valueIfTrueType;", "-\t\t\tthis.resolvedType = valueIfFalseType;", "-\t\t\treturn valueIfFalseType;", "+\t\t\treturn this.resolvedType = valueIfFalseType;"]}], "num": 71653}