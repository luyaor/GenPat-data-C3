{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69910377168f0f52d1e79ee4fbead751", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210e89012f16bd583d61be38fa796779", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic String createIndentationString(final int indentationLevel)", "signatureAfterChange": "  \tpublic String createIndentationString(final int indentationLevel)", "diff": ["-\t\tint tabs = 0;", "-\t\tint spaces = 0;", "-\t\tswitch(this.preferences.tab_char) {", "-\t\t\tcase DefaultCodeFormatterOptions.SPACE :", "-\t\t\t\tspaces = indentationLevel * this.preferences.tab_size;", "-\t\t\t\tbreak;", "-\t\t\tcase DefaultCodeFormatterOptions.TAB :", "-\t\t\t\ttabs = indentationLevel;", "-\t\t\t\tbreak;", "-\t\t\tcase DefaultCodeFormatterOptions.MIXED :", "-\t\t\t\tint tabSize = this.preferences.tab_size;", "-\t\t\t\tif (tabSize != 0) {", "-\t\t\t\t\tint spaceEquivalents = indentationLevel * this.preferences.indentation_size;", "-\t\t\t\t\ttabs = spaceEquivalents / tabSize;", "-\t\t\t\t\tspaces = spaceEquivalents % tabSize;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\treturn Util.EMPTY_STRING;", "-\t\t}", "-\t\tif (tabs == 0 && spaces == 0) {", "-\t\t\treturn Util.EMPTY_STRING;", "-\t\t}", "-\t\tStringBuffer buffer = new StringBuffer(tabs + spaces);", "-\t\tfor(int i = 0; i < tabs; i++) {", "-\t\t\tbuffer.append('\\t');", "-\t\t}", "-\t\tfor(int i = 0; i < spaces; i++) {", "-\t\t\tbuffer.append(' ');", "-\t\t}", "-\t\treturn buffer.toString();", "+\t\tStringBuilder sb = new StringBuilder();", "+\t\tint indent = indentationLevel * this.originalOptions.indentation_size;", "+\t\tTextEditsBuilder.appendIndentationString(sb, this.originalOptions.tab_char, this.originalOptions.tab_size,", "+\t\t\t\tindent, 0);", "+\t\treturn sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d448fa5009650ee09be8d5cdf8c95a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic String createIndentationString(final int indentationLevel)", "signatureAfterChange": "  \tpublic String createIndentationString(final int indentationLevel)", "diff": ["-\t\tint tabs = 0;", "-\t\tint spaces = 0;", "-\t\tswitch(this.preferences.tab_char) {", "-\t\t\tcase DefaultCodeFormatterOptions.SPACE :", "-\t\t\t\tspaces = indentationLevel * this.preferences.tab_size;", "-\t\t\t\tbreak;", "-\t\t\tcase DefaultCodeFormatterOptions.TAB :", "-\t\t\t\ttabs = indentationLevel;", "-\t\t\t\tbreak;", "-\t\t\tcase DefaultCodeFormatterOptions.MIXED :", "-\t\t\t\tint tabSize = this.preferences.tab_size;", "-\t\t\t\tif (tabSize != 0) {", "-\t\t\t\t\tint spaceEquivalents = indentationLevel * this.preferences.indentation_size;", "-\t\t\t\t\ttabs = spaceEquivalents / tabSize;", "-\t\t\t\t\tspaces = spaceEquivalents % tabSize;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\treturn Util.EMPTY_STRING;", "-\t\t}", "-\t\tif (tabs == 0 && spaces == 0) {", "-\t\t\treturn Util.EMPTY_STRING;", "-\t\t}", "-\t\tStringBuffer buffer = new StringBuffer(tabs + spaces);", "-\t\tfor(int i = 0; i < tabs; i++) {", "-\t\t\tbuffer.append('\\t');", "-\t\t}", "-\t\tfor(int i = 0; i < spaces; i++) {", "-\t\t\tbuffer.append(' ');", "-\t\t}", "-\t\treturn buffer.toString();", "+\t\tStringBuilder sb = new StringBuilder();", "+\t\tint indent = indentationLevel * this.originalOptions.indentation_size;", "+\t\tTextEditsBuilder.appendIndentationString(sb, this.originalOptions.tab_char, this.originalOptions.tab_size,", "+\t\t\t\tindent, 0);", "+\t\treturn sb.toString();"]}], "num": 22837}