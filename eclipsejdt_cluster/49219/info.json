{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bbd5d2e51bc811bb03681e22c791c70", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5215817fb94a178e06c22ab731485165", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1356, "methodNumberAfterChange": 1356, "signatureBeforeChange": " public void test1325()", "signatureAfterChange": " public void test1325()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 5)\\n\" +", "-\t\t\t\"\tvoid bar(X x) {\\n\" +", "-\t\t\t\"\t         ^\\n\" +", "-\t\t\t\"X is a raw type. References to generic type X<E> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tX<String> xs2 = foo(x);\\n\" +", "-\t\t\t\"\t                ^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation foo(X) of the generic method foo(X<T>) of type X<E>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in X.java (at line 6)\\n\" +", "-\t\t\t\"\tX<String> xs2 = foo(x);\\n\" +", "-\t\t\t\"\t                ^^^^^^\\n\" +", "-\t\t\t\"Type mismatch: cannot convert from Object to X<String>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tX<String> xs2 = foo(x);\\n\" +", "-\t\t\t\"\t                    ^\\n\" +", "-\t\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<T>\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tvoid bar(X x) {\\n\" + ", "+\t\t\t\"\t         ^\\n\" + ", "+\t\t\t\"X is a raw type. References to generic type X<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tX<String> xs2 = foo(x);\\n\" + ", "+\t\t\t\"\t                ^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation foo(X) of the generic method foo(X<T>) of type X<E>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tX<String> xs2 = foo(x);\\n\" + ", "+\t\t\t\"\t                ^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Object to X<String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tX<String> xs2 = foo(x);\\n\" + ", "+\t\t\t\"\t                    ^\\n\" + ", "+\t\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Object>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c5b27e5dbd3100f71f650447969cc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "32f757dfe8da946b3f43d9a2940c80a3241b7487", "commitAfterChange": "362a367dfb78f3dcbcec97d2d2301a9c64da2876", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 175, "signatureBeforeChange": " \tpublic void _test053()", "signatureAfterChange": " \tpublic void test053()", "diff": ["-\tpublic void _test053() {", "+\tpublic void test053() {", "-\t\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\r\\n\" + ", "-\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\r\\n\" + ", "-\t\t\t\"\t                       ^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The method foo() belongs to the raw type A. References to generic type A<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\tvoid test2(A<X> a) { B b = a.foo(); }\\r\\n\" + ", "-\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid test2(A<X> a) { B b = a.foo(); }\\n\" + ", "+\t\t\t\"\t                           ^^^^^^^\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 10)\\r\\n\" + ", "-\t\t\t\"\t@Override B foo() { return null; }\\r\\n\" + ", "-\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\"Type safety: The return type B for foo() from the type B needs unchecked conversion to conform to A<U> from the type A<T>\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\t@Override B foo() { return null; }\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"Type safety: The return type B for foo() from the type B needs unchecked conversion to conform to A<Object> from the type A<X>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e25c208b424fd8886f28ff5969a0cd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1032, "methodNumberAfterChange": 1032, "signatureBeforeChange": " public void test1008()", "signatureAfterChange": " public void test1008()", "diff": ["-\t\t\t\"\t\treturn null;\\n\" +", "+\t\t\t\"\t\treturn zork;\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 2)\\r\\n\" +", "-\t\t\"\tvoid foo(L l, C<? extends X> c) {\\r\\n\" +", "-\t\t\"\t         ^\\n\" +", "-\t\t\"L is a raw type. References to generic type L<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar(l, c);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(L, C) of the generic method bar(L<T>, C<? extends T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar(l, c);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Object to X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar(l, c);\\r\\n\" +", "-\t\t\"\t          ^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<T>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tvoid foo(L l, C<? extends X> c) {\\n\" + ", "+\t\t\"\t         ^\\n\" + ", "+\t\t\"L is a raw type. References to generic type L<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar(l, c);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(L, C<capture#1-of ? extends X>) of the generic method bar(L<T>, C<? extends T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar(l, c);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Object to X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar(l, c);\\n\" + ", "+\t\t\"\t          ^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\treturn zork;\\n\" + ", "+\t\t\"\t       ^^^^\\n\" + ", "+\t\t\"zork cannot be resolved\\n\" + "]}], "num": 49219}