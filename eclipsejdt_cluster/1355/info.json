{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1591b5af4339f75d8dee1f000eeacfe4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0237643ecc8780550808b9cf9c9edec5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e30351551cacd61d107b0f2c8e2d961ea6077c69", "commitAfterChange": "65c816d51274509d33505e25446def26adbebd32", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\t\tTypeBinding inheritedReturnType = originalInherited.returnType.leafComponentType();", "-\t\tTypeBinding returnType = currentMethod.returnType.leafComponentType();", "-\t\tswitch (inheritedReturnType.bindingType()) {", "-\t\t\tcase Binding.RAW_TYPE :", "-\t\t\t\tif (returnType.isParameterizedType() && hasBoundedParameters((ParameterizedTypeBinding) returnType)) {", "-\t\t\t\t\tproblemReporter(currentMethod).methodNameClash(currentMethod, originalInherited);", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\t\tswitch (originalInherited.returnType.leafComponentType().bindingType()) {", "-\t\t\t\tif (!returnType.isParameterizedType())", "+\t\t\t\tif (!currentMethod.returnType.leafComponentType().isParameterizedType())", "-\t\t\t\tif (!returnType.isTypeVariable())", "+\t\t\t\tif (!currentMethod.returnType.leafComponentType().isTypeVariable())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04c2e3777b73bf63b981d410b092da7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "875cc8d42787c90738d8dc077a25eb401e9e38f9", "commitAfterChange": "adfd584faf146517cb3e86f9f2b585f2851a3630", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " boolean checkForNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " boolean detectNameClash(MethodBinding one, MethodBinding substituteTwo, boolean checkParameters)", "diff": ["-boolean checkForNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod) {", "-\tTypeBinding[] currentVars = currentMethod.typeVariables;", "-\tTypeBinding[] inheritedVars = inheritedMethod.typeVariables;", "-\tif (currentVars.length != inheritedVars.length && currentVars.length > 0) return true; // must match unless all are replaced", "-\t// must check each parameter pair to see if parameterized types are compatible", "-\t// already know that each erasure() is equal", "-\tTypeBinding[] currentArgs = currentMethod.parameters;", "-\tTypeBinding[] inheritedArgs = inheritedMethod.parameters;", "-\tif (currentArgs != inheritedArgs) {", "-\t\tfor (int i = 0, l = currentArgs.length; i < l; i++) {", "-\t\t\tTypeBinding currentArg = currentArgs[i].leafComponentType();", "-\t\t\tTypeBinding inheritedArg = inheritedArgs[i].leafComponentType();", "-\t\t\tif (currentArg != inheritedArg && currentArg.isParameterizedType()) {", "-\t\t\t\tif (!inheritedArg.isParameterizedType()) return true;", "-\t\t\t\tTypeBinding[] args1 = ((ParameterizedTypeBinding) currentArg).arguments;", "-\t\t\t\tTypeBinding[] args2 = ((ParameterizedTypeBinding) inheritedArg).arguments;", "-\t\t\t\tfor (int j = 0, k = args1.length; j < k; j++)", "-\t\t\t\t    if (!areTypesEquivalent(args1[j], args2[j])) return true;", "+}", "+boolean detectNameClash(MethodBinding one, MethodBinding substituteTwo, boolean checkParameters) {", "+\tif (doTypeVariablesClash(one, substituteTwo) || (checkParameters && doParametersClash(one, substituteTwo))) {", "+\t\tif (this.type == one.declaringClass)", "+\t\t \tproblemReporter(one).methodNameClash(one, substituteTwo);", "+\t\telse", "+\t\t\tproblemReporter().inheritedMethodsHaveNameClash(this.type, one, substituteTwo);", "+\t\treturn true;"]}], "num": 1355}