{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28ff1dffccd17c24e7e1ffcccd1f1c29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5cc8d6c39a6f6b8dc07ac20b1b4807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tprivate int retrieveRightBraceOrSemiColonPosition(MethodDeclaration node, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \tprotected int retrieveRightBraceOrSemiColonPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveRightBraceOrSemiColonPosition(MethodDeclaration node, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration) {", "-\t\tint start = node.getStartPosition();", "-\t\tthis.scanner.resetTo(start, methodDeclaration.declarationSourceEnd);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\tint braceCounter = 0;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tif (braceCounter == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameSEMICOLON :", "-\t\t\t\t\t\tif (braceCounter == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrieveRightBraceOrSemiColonPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "+\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t\tcase TerminalTokens.TokenNameSEMICOLON :", "+\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6892965c72131374bf15f4c93d8e181", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tprivate void removeTrailingCommentFromExpressionEndingWithAParen(ASTNode node)", "signatureAfterChange": " \tprotected void removeTrailingCommentFromExpressionEndingWithAParen(ASTNode node)", "diff": ["-\t */", "-\tprivate void removeTrailingCommentFromExpressionEndingWithAParen(ASTNode node) {", "-\t\tint start = node.getStartPosition();", "-\t\tthis.scanner.resetTo(start, start + node.getLength());", "-\t\tint token;", "-\t\tint parenCounter = 0;", "-\t\ttry {", "-\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameLPAREN :", "-\t\t\t\t\t\tparenCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN :", "-\t\t\t\t\t\tparenCounter--;", "-\t\t\t\t\t\tif (parenCounter == 0) {", "-\t\t\t\t\t\t\tint end = this.scanner.currentPosition - 1;", "-\t\t\t\t\t\t\tnode.setSourceRange(start, end - start + 1);", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t}", "+\t */", "+\tprotected void removeTrailingCommentFromExpressionEndingWithAParen(ASTNode node) {", "+\t\tint start = node.getStartPosition();", "+\t\tthis.scanner.resetTo(start, start + node.getLength());", "+\t\tint token;", "+\t\tint parenCounter = 0;", "+\t\ttry {", "+\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameLPAREN :", "+\t\t\t\t\t\tparenCounter++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN :", "+\t\t\t\t\t\tparenCounter--;", "+\t\t\t\t\t\tif (parenCounter == 0) {", "+\t\t\t\t\t\t\tint end = this.scanner.currentPosition - 1;", "+\t\t\t\t\t\t\tnode.setSourceRange(start, end - start + 1);", "+\t\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore"]}], "num": 52080}