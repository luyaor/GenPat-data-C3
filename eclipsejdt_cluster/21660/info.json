{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38c2f9e4377941b195addccdb6e4c064", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f03d0a88829a4054eb515d64d7a271a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "fa5b9584504523e008d75d3102bbd9fdb41a99d1", "commitAfterChange": "be28c707007790646fb850eb239db7444413aebf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["+\t\t\tcase K_ARRAY_INITIALIZER :", "+\t\t\t\tArrayInitializer arrayInitializer = new ArrayInitializer();", "+\t\t\t\tarrayInitializer.expressions = new Expression[]{expression};", "+\t\t\t\texpressionPtr -= expressionLengthStack[expressionLengthPtr--];", "+\t\t\t\t", "+\t\t\t\tif(expressionLengthPtr > -1", "+\t\t\t\t\t&& expressionPtr > -1", "+\t\t\t\t\t&& this.expressionStack[expressionPtr] != null", "+\t\t\t\t\t&& this.expressionStack[expressionPtr].sourceStart > info) {", "+\t\t\t\t\texpressionLengthPtr--;\t", "+\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\tlastCheckPoint = scanner.currentPosition;", "+\t\t\t\t", "+\t\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER, 1) == K_ARRAY_CREATION) {", "+\t\t\t\t\tArrayAllocationExpression allocationExpression = new ArrayAllocationExpression();", "+\t\t\t\t\tallocationExpression.type = getTypeReference(0);", "+\t\t\t\t\tint length = expressionLengthStack[expressionLengthPtr];", "+\t\t\t\t\tallocationExpression.dimensions = new Expression[length];", "+", "+\t\t\t\t\tallocationExpression.initializer = arrayInitializer;", "+\t\t\t\t\tassistNodeParent = allocationExpression;", "+\t\t\t\t} else if(currentElement instanceof RecoveredField) {", "+\t\t\t\t\tRecoveredField recoveredField = (RecoveredField) currentElement;", "+\t\t\t\t\tif(recoveredField.fieldDeclaration.type.dimensions() == 0) {", "+\t\t\t\t\t\tBlock block = new Block(0);", "+\t\t\t\t\t\tblock.sourceStart = info;", "+\t\t\t\t\t\tcurrentElement = currentElement.add(block, 1);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tstatement = arrayInitializer;", "+\t\t\t\t\t}", "+\t\t\t\t} else if(currentElement instanceof RecoveredLocalVariable) {", "+\t\t\t\t\tRecoveredLocalVariable recoveredLocalVariable = (RecoveredLocalVariable) currentElement;", "+\t\t\t\t\tif(recoveredLocalVariable.localDeclaration.type.dimensions() == 0) {", "+\t\t\t\t\t\tBlock block = new Block(0);", "+\t\t\t\t\t\tblock.sourceStart = info;", "+\t\t\t\t\t\tcurrentElement = currentElement.add(block, 1);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tstatement = arrayInitializer;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tstatement = arrayInitializer;", "+\t\t\t\t}", "+\t\t\t\tbreak nextElement;", "+\t\t\tcase K_ARRAY_CREATION :", "+\t\t\t\tArrayAllocationExpression allocationExpression = new ArrayAllocationExpression();", "+\t\t\t\tallocationExpression.type = getTypeReference(0);", "+\t\t\t\tallocationExpression.dimensions = new Expression[]{expression};", "+\t\t\t\t", "+\t\t\t\tassistNodeParent = allocationExpression;", "+\t\t\t\tbreak nextElement;", "+\t\t\tcase K_ASSISGNMENT_OPERATOR :", "+\t\t\t\tif(expressionPtr > 0 && expressionStack[expressionPtr - 1] != null) {", "+\t\t\t\t\tAssignment assignment;", "+\t\t\t\t\tif(info == EQUAL) {", "+\t\t\t\t\t\tassignment = new Assignment(", "+\t\t\t\t\t\t\texpressionStack[expressionPtr - 1],", "+\t\t\t\t\t\t\texpression,", "+\t\t\t\t\t\t\texpression.sourceEnd", "+\t\t\t\t\t\t);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tassignment = new CompoundAssignment(", "+\t\t\t\t\t\t\texpressionStack[expressionPtr - 1],", "+\t\t\t\t\t\t\texpression,", "+\t\t\t\t\t\t\tinfo,", "+\t\t\t\t\t\t\texpression.sourceEnd", "+\t\t\t\t\t\t);", "+\t\t\t\t\t}", "+\t\t\t\t\tassistNodeParent = assignment;", "+\t\t\t\t}", "+\t\t\t\tbreak nextElement;", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d43686edf1c2143efe45d377231038", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "9cbfba92afe751590dd4c48d5d820a93f442558c", "commitAfterChange": "d773cdff60e5f560828640541cee7fd9cd613ea2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\tint i = 0;", "-\tint kind = -1;", "-\tnextElement : while((kind = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER, i)) != K_BLOCK_DELIMITER", "-\t\t&& kind != 0) {", "-\t\tint info = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, i);", "-\t\tswitch (kind) {", "-\t\t\tcase K_SELECTOR :", "-\t\t\t\tif(info == THIS_CONSTRUCTOR || info == SUPER_CONSTRUCTOR) {", "+\tStatement statement = expression;", "+\tint kind = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER);", "+\tif(kind != 0) {", "+\t\tint info = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER);", "+\t\tnextElement : switch (kind) {", "+\t\t\tcase K_SELECTOR_QUALIFIER :", "+\t\t\t\tint selector = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 2);", "+\t\t\t\tif(selector == THIS_CONSTRUCTOR || selector == SUPER_CONSTRUCTOR) {", "-\t\t\t\t\t\t(info == THIS_CONSTRUCTOR) ? ", "+\t\t\t\t\t\t(selector == THIS_CONSTRUCTOR) ? ", "-\t\t\t\t\tint invocationType = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, i-1);", "-\t\t\t\t\tint qualifierExprPtr = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, i-2);", "+\t\t\t\t\tint invocationType = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER,1);", "+\t\t\t\t\tint qualifierExprPtr = info;", "-\t\t\t\t\t\tint start = (int) (identifierPositionStack[info] >>> 32);", "+\t\t\t\t\t\tint start = (int) (identifierPositionStack[selector] >>> 32);", "-\t\t\t\t\t\tmessageSend.selector = identifierStack[info];", "+\t\t\t\t\t\tmessageSend.selector = identifierStack[selector];", "-\t\ti++;", "-//\t\tif(currentElement instanceof RecoveredField) {", "-//\t\t\tRecoveredField recoveredField = (RecoveredField) currentElement;", "-//\t\t\tif(!recoveredField.alreadyCompletedFieldInitialization) {", "-//\t\t\t\tassistNodeParent = recoveredField.fieldDeclaration;", "-//\t\t\t}", "-//\t\t} else if(currentElement instanceof RecoveredLocalVariable) {", "-//\t\t\tRecoveredLocalVariable recoveredLocalVariable = (RecoveredLocalVariable) currentElement;", "-//\t\t\tif(!recoveredLocalVariable.alreadyCompletedLocalInitialization) {", "-//\t\t\t\tassistNodeParent = recoveredLocalVariable.localDeclaration;", "-//\t\t\t}", "-//\t\t}", "-\t\tcurrentElement = currentElement.add(expression, 0);", "+\t\tif(currentElement instanceof RecoveredField", "+\t\t\t&& ((RecoveredField) currentElement).fieldDeclaration.initialization == null) {", "+\t\t\t\t", "+\t\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\t\tassistNodeParent = ((RecoveredField) currentElement).fieldDeclaration;", "+\t\t} else if(currentElement instanceof RecoveredLocalVariable", "+\t\t\t&& ((RecoveredLocalVariable) currentElement).localDeclaration.initialization == null) {", "+\t\t\t\t", "+\t\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\t\tassistNodeParent = ((RecoveredLocalVariable) currentElement).localDeclaration;", "+\t\t} else {", "+\t\t\tcurrentElement = currentElement.add(expression, 0);", "+\t\t}"]}], "num": 21660}