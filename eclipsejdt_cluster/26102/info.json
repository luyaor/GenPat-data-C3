{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a46f56dcb7d40d9c84e2067a1d3ea850", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53345e38fff3810bfe466f35293d844f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tprotected Openable createElement(IResource resource, int elementType, IJavaProject project)", "signatureAfterChange": "\r \tprotected Openable createElement(IResource resource, int elementType, IJavaProject project)", "diff": ["-\t\tif (this.currentElement != null) {\r", "-\t\t\tswitch (elementType) {\r", "-\t\t\t\tcase IJavaElement.JAVA_PROJECT:\r", "-\t\t\t\t\telement = project;\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT:\r", "-\t\t\t\t\telement = project.getPackageFragmentRoot(resource);\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT:\r", "-\t\t\t\t\t// find the element that encloses the resource\r", "-\t\t\t\t\tthis.popUntilPrefixOf(path);\r", "-\t\t\t\t\tif (this.currentElement == null) break;\r", "-\t\t\t\t\t\r", "+\t\tswitch (elementType) {\r", "+\t\t\tcase IJavaElement.JAVA_PROJECT:\r", "+\t\t\t\tthis.popUntilPrefixOf(path);\r", "+\t\t\t\tif (this.currentElement != null) return this.currentElement;\r", "+\t\t\t\tIProject proj = (IProject)resource;\r", "+\t\t\t\tboolean isOpened = proj.isOpen();\r", "+\t\t\t\tif (isOpened && this.hasJavaNature(proj)) {\r", "+\t\t\t\t\telement = project == null ? JavaCore.create(proj) : project;\r", "+\t\t\t\t} else if (!isOpened) {\r", "+\t\t\t\t\tif (project == null) {\r", "+\t\t\t\t\t\tproject = JavaCore.create(proj);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (project.isOpen()) {\r", "+\t\t\t\t\t\telement = project; // java project is being closed or removed\r", "+\t\t\t\t\t} \r", "+\t\t\t\t} // else not a java-project\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT:\r", "+\t\t\t\telement = project.getPackageFragmentRoot(resource);\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT:\r", "+\t\t\t\t// find the element that encloses the resource\r", "+\t\t\t\tthis.popUntilPrefixOf(path);\r", "+\t\t\t\t\r", "+\t\t\t\tif (this.currentElement == null) {\r", "+\t\t\t\t\telement = JavaModelManager.getJavaModelManager().create(resource, project);\r", "+\t\t\t\t} else {\r", "-\t\t\t\t\tif (root != null && !JavaModelManager.conflictsWithOutputLocation(path, (JavaProject)project)) {\r", "+\t\t\t\t\tif (root == null) {\r", "+\t\t\t\t\t\telement = JavaModelManager.getJavaModelManager().create(resource, project);\r", "+\t\t\t\t\t} else if (!JavaModelManager.conflictsWithOutputLocation(path, (JavaProject)project)) {\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.COMPILATION_UNIT:\r", "-\t\t\t\tcase IJavaElement.CLASS_FILE:\r", "-\t\t\t\t\t// find the element that encloses the resource\r", "-\t\t\t\t\tthis.popUntilPrefixOf(path);\r", "-\t\t\t\t\tif (this.currentElement == null) break;\r", "-\t\t\t\t\t\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase IJavaElement.COMPILATION_UNIT:\r", "+\t\t\tcase IJavaElement.CLASS_FILE:\r", "+\t\t\t\t// find the element that encloses the resource\r", "+\t\t\t\tthis.popUntilPrefixOf(path);\r", "+\t\t\t\t\r", "+\t\t\t\tif (this.currentElement == null) {\r", "+\t\t\t\t\telement = element = JavaModelManager.getJavaModelManager().create(resource, project);\r", "+\t\t\t\t} else {\r", "-\t\t\t\t\t\t\troot = (IPackageFragmentRoot)this.currentElement;\r", "+\t\t\t\t\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot)this.currentElement;\r", "-\t\t\t\t\tif (pkgFragment != null) {\r", "+\t\t\t\t\tif (pkgFragment == null) {\r", "+\t\t\t\t\t\telement = JavaModelManager.getJavaModelManager().create(resource, project);\r", "+\t\t\t\t\t} else {\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "-\t\t\telement = JavaModelManager.create(resource, project);\r", "+\t\t\treturn null;\r", "+\t\t} else {\r", "+\t\t\tthis.currentElement = (Openable)element;\r", "+\t\t\treturn this.currentElement;\r", "-\t\tthis.currentElement = (Openable)element;\r", "-\t\treturn this.currentElement;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857e0219d56aeb827007ccb2b65009c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c1c274932491e0be8f680c6ad9f4ab9bacdf19f5", "commitAfterChange": "0c46c5213b09d0da0f69c7b26f904c0f9c4b8264", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": "\r \tpublic void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["+\t\t\t\t// workaround for bug 15168 circular errors not reported \r", "+\t\t\t\tif (this.javaProjectsCache == null) {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tthis.javaProjectsCache = this.getJavaModel().getJavaProjects();\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\t\r", "-\t\t\t\t\t// in case the project was removed then added\r", "-\t\t\t\t\tthis.projectsBeingDeleted.remove(resource);\r", "-\t\t\t\t\t\r", "-\t\t\t\t\tthis.deltaProcessor.addToProjectsToUpdateWithDependents((IProject)resource);\r", "+\t\t\t\t\tIProject project = (IProject)resource;\r", "+\t\t\t\t\tthis.deltaProcessor.addToProjectsToUpdateWithDependents(project);\r", "+\t\t\t\t\t\r", "+\t\t\t\t\t// workaround for bug 15168 circular errors not reported \r", "+\t\t\t\t\tif (this.deltaProcessor.hasJavaNature(project)) {\r", "+\t\t\t\t\t\tthis.deltaProcessor.addToParentInfo((JavaProject)JavaCore.create(project));\r", "+\t\t\t\t\t}\r", "-\t\t\t\t\t// in case the project was removed then added then changed\r", "-\t\t\t\t\tthis.projectsBeingDeleted.remove(resource);\r", "-\t\t\t\t\t\r", "+\t\t\t\t\tIProject project = (IProject)resource;\r", "-\t\t\t\t\t\tthis.deltaProcessor.addToProjectsToUpdateWithDependents((IProject)resource);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.DESCRIPTION) != 0) {\r", "-\t\t\t\t\t\tIProject project = (IProject)resource;\r", "+\t\t\t\t\t\tthis.deltaProcessor.addToProjectsToUpdateWithDependents(project);\r", "+\t\t\t\t\t\t\r", "+\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported \r", "+\t\t\t\t\t\tif (project.isOpen()) {\r", "+\t\t\t\t\t\t\tif (this.deltaProcessor.hasJavaNature(project)) {\r", "+\t\t\t\t\t\t\t\tthis.deltaProcessor.addToParentInfo((JavaProject)JavaCore.create(project));\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)this.getJavaModel().findJavaProject(project);\r", "+\t\t\t\t\t\t\tif (javaProject != null) {\r", "+\t\t\t\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t\t\t\tjavaProject.close();\r", "+\t\t\t\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\tthis.deltaProcessor.removeFromParentInfo(javaProject);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else if ((delta.getFlags() & IResourceDelta.DESCRIPTION) != 0) {\r", "-\t\t\t\t\t\t\tthis.deltaProcessor.addToProjectsToUpdateWithDependents((IProject)resource);\r", "+\t\t\t\t\t\t\tthis.deltaProcessor.addToProjectsToUpdateWithDependents(project);\r", "+\r", "+\t\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported \r", "+\t\t\t\t\t\t\tif (isJavaProject) {\r", "+\t\t\t\t\t\t\t\tthis.deltaProcessor.addToParentInfo((JavaProject)JavaCore.create(project));\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);\r", "+\t\t\t\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t\t\t\tjavaProject.close();\r", "+\t\t\t\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\tthis.deltaProcessor.removeFromParentInfo(javaProject);\r", "+\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported \r", "+\t\t\t\t\t\t// in case the project was removed then added then changed\r", "+\t\t\t\t\t\tthis.deltaProcessor.addToParentInfo((JavaProject)JavaCore.create(project));\r", "+\t\t\t\t\t}\t\t\t\t\t\r"]}], "num": 26102}