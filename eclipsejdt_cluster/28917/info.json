{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b931e328eefb6a86b0e39b58703d016e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9b484084ac8c364185cd777ba40335", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyToSignature.java", "commitBeforeChange": "9f0ebc31be56acb3fbfdaeae5760bc6493eb0026", "commitAfterChange": "d5f7602600be2e39f513d08d9350d4d6dfba6305", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate void substitute(char[] parameter, char[][] typeParameterSigs, int typeParametersLength)", "signatureAfterChange": " \tprivate void substitute(char[] parameter, char[][] typeParameterSigs, int typeParametersLength)", "diff": ["-\t\t\tthis.signature.append(parameter);", "+\t\t\t// handle array, wildcard and capture", "+\t\t\tint index = 0;", "+\t\t\tint length = parameter.length;", "+\t\t\tloop: while (index < length) {", "+\t\t\t\tchar current = parameter[index];", "+\t\t\t\tswitch (current) {", "+\t\t\t\t\tcase Signature.C_CAPTURE:", "+\t\t\t\t\tcase Signature.C_EXTENDS:", "+\t\t\t\t\tcase Signature.C_SUPER:", "+\t\t\t\t\tcase Signature.C_ARRAY:", "+\t\t\t\t\t\tthis.signature.append(current);", "+\t\t\t\t\t\tindex++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tbreak loop;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (index > 0) ", "+\t\t\t\tsubstitute(CharOperation.subarray(parameter, index, length), typeParameterSigs, typeParametersLength);", "+\t\t\telse", "+\t\t\t\tthis.signature.append(parameter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8add12dd44175fa8bf03533df5b9ea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "f8c4bd6d317c7bd673dbcf053ccf33d3004de38a", "commitAfterChange": "ed90bf75b4f2c74ce911da80d30092ece86b5cdf", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected IJavaElement[] getUnqualifiedMethodHandle(IMethod method, boolean noDollar)", "signatureAfterChange": " \tprotected IJavaElement[] getUnqualifiedMethodHandle(IMethod method, boolean noDollar)", "diff": ["-\t\t\t\t\t\t\t\tif (current == Signature.C_TYPE_VARIABLE) {", "-\t\t\t\t\t\t\t\t\tunqualifiedName.append(Signature.C_UNRESOLVED);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tunqualifiedName.append(current);", "+\t\t\t\t\t\t\t\tswitch(current) {", "+\t\t\t\t\t\t\t\t\tcase Signature.C_TYPE_VARIABLE :", "+\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(Signature.C_UNRESOLVED);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase Signature.C_GENERIC_END :", "+\t\t\t\t\t\t\t\t\tcase Signature.C_STAR :", "+\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(current);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(Signature.C_UNRESOLVED);", "+\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(current);"]}], "num": 28917}