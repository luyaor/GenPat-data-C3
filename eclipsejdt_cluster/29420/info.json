{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06d7effe5e14950f9809166410444472", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a155060180cf6cac054b90941c5918", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "a4ad2d57dad8cd0a00e5934bb21519b3cade23e0", "commitAfterChange": "4026eca435898014ba04ac7657504a426815df33", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "signatureAfterChange": " public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "diff": ["+\t\t/* Leaf component type is the key in the type system. If it undergoes change, the array has to be rehashed.", "+\t\t   We achieve by creating a fresh array with the new component type and equating this array's id with that.", "+\t\t   This means this array can still be found under the old key, but that is harmless (since the component type", "+\t\t   is always consulted (see TypeSystem.getArrayType())", "+\t\t*/ ", "+\t\tif (this.leafComponentType != resolvedType) //$IDENTITY-COMPARISON$", "+\t\t\tthis.id = env.createArrayType(this.leafComponentType, this.dimensions, this.typeAnnotations).id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebf9df1d6ef015f2e0265a76fa4e7e43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "1ba6cf1a1cd58ea6964d3e53d500ba37300ad6c5", "commitAfterChange": "122386dad13a4daa4a6eb3fe318a2c079a2655ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tITypeBinding resolveType(Type type)", "signatureAfterChange": "\r \tITypeBinding resolveType(Type type)", "diff": ["+\t\t\t\t\tif (type.isArrayType()) {\r", "+\t\t\t\t\t\tArrayType array = (ArrayType) type;\r", "+\t\t\t\t\t\tif (typeBinding.getDimensions() != array.getDimensions()) {\r", "+\t\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)typeReference.binding;\r", "+\t\t\t\t\t\t\tfor (int i = 0, max = typeBinding.getDimensions() - array.getDimensions(); i < max; i++) {\r", "+\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else if (typeBinding.isArray() && type.isSimpleType()) {\r", "+\t\t\t\t\t\treturn this.getTypeBinding(((ArrayBinding)typeReference.binding).leafComponentType());\r", "+\t\t\t\t\t}\r"]}], "num": 29420}