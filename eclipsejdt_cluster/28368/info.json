{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "971c48c5741a01981bf21ad37664b81f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20a20ce293720b4caccd611baa9c8198", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "5f97e12f962e721b3d706fc12b2c5617a3adbc7d", "commitAfterChange": "f179c68e167c14230d1517ad0b6adc68e8bc0742", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " public void test_nullable_field_10c()", "signatureAfterChange": " public void test_nullable_field_10c()", "diff": ["-\t\t\t\"             System.out.println(o1.toString()); // warn here: negation is no protection\\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // warn here: negated inequality is no protection\\n\" +", "+\t\t\t\"         if (!(o1 == null || o2 == null)) \\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // don't warn here\\n\" +", "+\t\t\t\"         if (!(o1 == null && o2 == null)) \\n\" +", "+\t\t\t\"             System.out.println(o2.toString()); // warn here: negated conjunction is no protection\\n\" +", "+\t\t\t\"         if (!(!(o1 == null))) \\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // warn here: double negation is no protection\\n\" +", "+\t\t\t\"         if (!(!(o1 != null && o2 != null))) \\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // don't warn here\\n\" +", "-\t\t\"\tSystem.out.println(o1.toString()); // warn here: negation is no protection\\n\" +", "+\t\t\"\tSystem.out.println(o1.toString()); // warn here: negated inequality is no protection\\n\" +", "+\t\t\"\t                   ^^\\n\" +", "+\t\t\"Potential null pointer access: The field o1 is declared as @Nullable\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"3. ERROR in X.java (at line 14)\\n\" +", "+\t\t\"\tSystem.out.println(o2.toString()); // warn here: negated conjunction is no protection\\n\" +", "+\t\t\"\t                   ^^\\n\" +", "+\t\t\"Potential null pointer access: The field o2 is declared as @Nullable\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"4. ERROR in X.java (at line 16)\\n\" +", "+\t\t\"\tSystem.out.println(o1.toString()); // warn here: double negation is no protection\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35391c653b9771e86d69201fa04b8b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "fa66834f9f4ec8541916655f7830d28cd8630692", "commitAfterChange": "47466daad88774b9542c26be2fa2eb0f129ed0bd", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": " public void test_nullable_field_10c()", "signatureAfterChange": " public void test_nullable_field_10c()", "diff": ["-\t\t\t\"             System.out.println(o1.toString()); // warn here: negation is no protection\\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // warn here: negated inequality is no protection\\n\" +", "+\t\t\t\"         if (!(o1 == null || o2 == null)) \\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // don't warn here\\n\" +", "+\t\t\t\"         if (!(o1 == null && o2 == null)) \\n\" +", "+\t\t\t\"             System.out.println(o2.toString()); // warn here: negated conjunction is no protection\\n\" +", "+\t\t\t\"         if (!(!(o1 == null))) \\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // warn here: double negation is no protection\\n\" +", "+\t\t\t\"         if (!(!(o1 != null && o2 != null))) \\n\" +", "+\t\t\t\"             System.out.println(o1.toString()); // don't warn here\\n\" +", "-\t\t\"\tSystem.out.println(o1.toString()); // warn here: negation is no protection\\n\" +", "+\t\t\"\tSystem.out.println(o1.toString()); // warn here: negated inequality is no protection\\n\" +", "+\t\t\"\t                   ^^\\n\" +", "+\t\t\"Potential null pointer access: The field o1 is declared as @Nullable\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"3. ERROR in X.java (at line 14)\\n\" +", "+\t\t\"\tSystem.out.println(o2.toString()); // warn here: negated conjunction is no protection\\n\" +", "+\t\t\"\t                   ^^\\n\" +", "+\t\t\"Potential null pointer access: The field o2 is declared as @Nullable\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"4. ERROR in X.java (at line 16)\\n\" +", "+\t\t\"\tSystem.out.println(o1.toString()); // warn here: double negation is no protection\\n\" +"]}], "num": 28368}