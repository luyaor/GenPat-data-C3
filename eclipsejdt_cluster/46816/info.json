{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a368a505e9772cd48c3db00ecc8b0696", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17dfa2a5a546b2b35bfd1c85247d11b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate static void addFileWithMissingTypeError( \t\t\tfinal IFile file,  \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<char[]> sourceForFilesWithMissingType, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \t \tprivate static void addFileWithMissingTypeError( \t\t\tfinal IFile file,  \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType, \t\t\tfinal ProcessorEnvImpl processorEnv)", "diff": ["-\t\t\tfinal List<char[]> sourceForFilesWithMissingType,", "+\t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType,", "-\t\tfinal CompilationUnit unit = processorEnv.getAstCompilationUnit(file);", "-\t\tassert unit != null : \"cannot locate compilation unit for \" + file.getName(); //$NON-NLS-1$", "-\t\tfinal IProblem[] problems = unit.getProblems();", "+\t\tfinal CompilationUnit domUnit = processorEnv.getAstCompilationUnit(file);", "+\t\tassert domUnit != null : \"cannot locate compilation unit for \" + file.getName(); //$NON-NLS-1$", "+\t\tfinal IProblem[] problems = domUnit.getProblems();", "-\t\t\t\tfinal char[] src = processorEnv.getSourceForFile(file);", "-\t\t\t\tassert src != null : \"cannot locate source for file \" + file.getName(); //$NON-NLS-1$", "-\t\t\t\tsourceForFilesWithMissingType.add(src);", "+\t\t\t\tfinal ICompilationUnit unit = processorEnv.getICompilationUnitForFile(file);", "+\t\t\t\tassert unit != null : \"cannot locate ICompilationUnit for file \" + file.getName(); //$NON-NLS-1$", "+\t\t\t\tunitsForFilesWithMissingType.add(unit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2567f3efb470e3bda250ed5c8f562715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \t \tprivate APTResult runAPT( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "diff": ["-\t\t\tfinal List<AnnotationProcessorFactory> factories,", "+\t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories,", "-\t\tfinal List<char[]> sourceForFiles = new ArrayList<char[]>();", "-\t\tfinal APTResult result = runAPT(factories, processorEnv, filesWithMissingType, sourceForFiles);", "+\t\tfinal List<ICompilationUnit> unitsForFiles = new ArrayList<ICompilationUnit>();", "+\t\tfinal APTResult result = runAPT(factories, processorEnv, filesWithMissingType, unitsForFiles, 0);", "+\t\t\tint round = 1;", "-\t\t\t\tassert numFiles == sourceForFiles.size() :", "+\t\t\t\tassert numFiles == unitsForFiles.size() :", "-\t\t\t\tfinal char[][] sources = new char[numFiles][];", "+\t\t\t\tfinal ICompilationUnit[] units = new ICompilationUnit[numFiles];", "-\t\t\t\t\tsources[i] = sourceForFiles.get(i);", "+\t\t\t\t\tunits[i] = unitsForFiles.get(i);", "-\t\t\t\t\t\tfiles, sources, processorEnv.getJavaProject() );", "+\t\t\t\t\t\tfiles, units, processorEnv.getJavaProject() );", "-\t\t\t\tsourceForFiles.clear();", "-\t\t\t\tAPTResult newResult = runAPT(factories, newEnv, filesWithMissingType, sourceForFiles);", "+\t\t\t\tunitsForFiles.clear();", "+\t\t\t\tAPTResult newResult = runAPT(factories, newEnv, filesWithMissingType, unitsForFiles, round++);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c536f7004c9346093aaaf73b299b2714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate APTResult runAPT( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFiles, \t\t\tfinal int round)", "signatureAfterChange": " \t \tprivate APTResult runAPT( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFiles, \t\t\tfinal int internalRound)", "diff": ["-\t\t\tfinal int round) ", "+\t\t\tfinal int internalRound) ", "-\t\t\t", "-\t\t\tif( mixedModeDispatch )", "-\t\t\t\trunAPTInMixedMode(factories, processorEnv, filesWithMissingType, unitsForFiles, round);", "-\t\t\telse", "+\t\t\tfinal Set<AnnotationProcessorFactory> currentRoundDispatchedBatchFactories;", "+\t\t\tif( mixedModeDispatch ){", "+\t\t\t\tcurrentRoundDispatchedBatchFactories = new LinkedHashSet<AnnotationProcessorFactory>();", "+\t\t\t\trunAPTInMixedMode(factories, currentRoundDispatchedBatchFactories, processorEnv, filesWithMissingType, unitsForFiles, internalRound);", "+\t\t\t}", "+\t\t\telse{", "+\t\t\t\tcurrentRoundDispatchedBatchFactories = Collections.emptySet();", "+\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t  currentRoundDispatchedBatchFactories,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31499bb5a0a2d0bd2ca6fafca3b21cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<char[]> sourceForFiles)", "signatureAfterChange": " \t \tprivate APTResult runAPT( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFiles, \t\t\tfinal int round)", "diff": ["-\t\t\tfinal List<AnnotationProcessorFactory> factories,", "+\t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories,", "-\t\t\tfinal List<char[]> sourceForFiles) ", "+\t\t\tfinal List<ICompilationUnit> unitsForFiles,", "+\t\t\tfinal int round) ", "-\t\t\t\trunAPTInMixedMode(factories, processorEnv, filesWithMissingType, sourceForFiles);", "+\t\t\t\trunAPTInMixedMode(factories, processorEnv, filesWithMissingType, unitsForFiles, round);", "-\t\t\t\trunAPTInFileBasedMode(factories, processorEnv, filesWithMissingType, sourceForFiles);", "+\t\t\t\trunAPTInFileBasedMode(factories, processorEnv, filesWithMissingType, unitsForFiles);"]}], "num": 46816}