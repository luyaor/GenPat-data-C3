{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10394e564a9d7ae996fb536fe0911030", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0de38d98371f4419d43c06d362340ee5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " protected void consumeEnumHeader()", "signatureAfterChange": " protected void consumeEnumHeader()", "diff": ["-\tEnumDeclaration enumDeclaration;", "+\tTypeDeclaration enumDeclaration = new TypeDeclaration(this.compilationUnit.compilationResult);", "-\t\t\tenumDeclaration = new EnumDeclaration(this.compilationUnit.compilationResult);", "-\t\t} else {", "-\t\t\tenumDeclaration = new EnumDeclaration(this.compilationUnit.compilationResult);", "-\t\t}", "+\t\t\tenumDeclaration.bits |= ASTNode.IsMemberTypeMASK;", "+\t\t}\t\t", "-\t\tenumDeclaration = new EnumDeclaration(this.compilationUnit.compilationResult);", "-\tenumDeclaration.modifiers = this.intStack[this.intPtr--];", "+\tenumDeclaration.modifiers = this.intStack[this.intPtr--] | AccEnum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d03e923ef1efac9049959624ebc891d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "f517623c8ff717f8d173940d5d22fbb012050f04", "commitAfterChange": "b18268c0ce6fbb737cee1ca1291ee19aeeac1ba2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "diff": ["-\t\t\tTypeDeclaration typeDecl = getParserStackLastTypeDeclaration();", "-\t\t\tchar[] name = null;", "-\t\t\tif (typeDecl == null) {", "-\t\t\t\tname = this.sourceParser.compilationUnit.compilationResult.compilationUnit.getMainTypeName();", "-\t\t\t} else {", "-\t\t\t\tname = typeDecl.name;", "+\t\t\tchar[] name = this.sourceParser.compilationUnit.compilationResult.compilationUnit.getMainTypeName();", "+\t\t\tif (name == null) {", "+\t\t\t\tthrow new InvalidInputException();", "-\t\t\tif (name != null) {", "-\t\t\t\ttypeRef = new JavadocSingleTypeReference(name, 0, 0, 0);", "-\t\t\t}", "+\t\t\ttypeRef = new JavadocSingleTypeReference(name, 0, 0, 0);"]}], "num": 33896}