{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e753d7041f255186ad16dc62c512d3ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5dfc4d2c573e86cea8020e0b698569", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "2c8ceaf6e8a3f630d7195a9059936fbed892fbcb", "commitAfterChange": "f122e33d7dccba1b0b011f3c1d72bfeba2d6584a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\tif ((methodBinding.selector.length == 10) && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetMessage))) {\r", "+\t\t\tif ((methodBinding.selector.length == 10)\r", "+\t\t\t    && (methodBinding.parameters.length == 0)\r", "+\t\t\t    && (methodBinding.returnType.id == T_JavaLangString)\r", "+\t\t\t    && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetMessage))) {\r", "+\t\t\tif (methodBinding.parameters.length == 0\r", "+\t\t\t\t&& methodBinding.returnType.id == T_JavaLangClass\r", "+\t\t\t\t&& CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetClass)) {\r", "+\t\t\t\t\treturn GETCLASS_OBJECT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t}\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72db780a86c92862a9c802150642d84b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "57b394813576bd0089aca541b5b581458c1b6d75", "commitAfterChange": "99e894848fc56021931fbde74aea8ec7cd4a00da", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding)", "signatureAfterChange": " void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding)", "diff": ["-\tif (!explicitNullness && currentDefault == NONNULL_BY_DEFAULT) {", "+\tif (!explicitNullness ", "+\t\t\t&& (methodBinding.returnType != null && !methodBinding.returnType.isBaseType()) ", "+\t\t\t&& currentDefault == NONNULL_BY_DEFAULT) {", "-\t\t\t\tmethodBinding.parameterNonNullness[j] = Boolean.TRUE;", "+\t\t\t\tif (methodBinding.parameters[j]!= null && !methodBinding.parameters[j].isBaseType()) {", "+\t\t\t\t\tmethodBinding.parameterNonNullness[j] = Boolean.TRUE;", "+\t\t\t\t}"]}], "num": 40971}