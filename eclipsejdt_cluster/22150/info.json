{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb9659a308c41454053f3867ba8b2cb4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0de2e9d0c8ee4ba1d28b91c6ba98acb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "8593ccbacaea58bc31d7f71f8a393c5c276effab", "commitAfterChange": "ab233550db657855007d7fd2c56941a3b07c6fa6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public ClassFileReader(byte[] classFileBytes, char[] fileName, boolean fullyInitialize) throws ClassFormatException", "signatureAfterChange": " public ClassFileReader(byte[] classFileBytes, char[] fileName, boolean fullyInitialize) throws ClassFormatException", "diff": ["+\t\t\t\t\tbreak;", "+\t\t\t\tcase ClassFileConstants.MethodHandleTag :", "+\t\t\t\t\tthis.constantPoolOffsets[i] = readOffset;", "+\t\t\t\t\treadOffset += ClassFileConstants.ConstantMethodHandleFixedSize;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ClassFileConstants.MethodTypeTag :", "+\t\t\t\t\tthis.constantPoolOffsets[i] = readOffset;", "+\t\t\t\t\treadOffset += ClassFileConstants.ConstantMethodTypeFixedSize;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ClassFileConstants.InvokeDynamicTag :", "+\t\t\t\t\tthis.constantPoolOffsets[i] = readOffset;", "+\t\t\t\t\treadOffset += ClassFileConstants.ConstantInvokeDynamicFixedSize;", "+\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5188898478ef0ab2f77d3c9122cdda7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ClassFileReader.java", "commitBeforeChange": "8593ccbacaea58bc31d7f71f8a393c5c276effab", "commitAfterChange": "ab233550db657855007d7fd2c56941a3b07c6fa6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ClassFileReader(byte[] classFileBytes, int decodingFlags) throws ClassFormatException", "signatureAfterChange": " \tpublic ClassFileReader(byte[] classFileBytes, int decodingFlags) throws ClassFormatException", "diff": ["+\t\t\t\t\tcase IConstantPoolConstant.CONSTANT_MethodHandle :", "+\t\t\t\t\t\tconstantPoolOffsets[i] = readOffset;", "+\t\t\t\t\t\treadOffset += IConstantPoolConstant.CONSTANT_MethodHandle_SIZE;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IConstantPoolConstant.CONSTANT_MethodType :", "+\t\t\t\t\t\tconstantPoolOffsets[i] = readOffset;", "+\t\t\t\t\t\treadOffset += IConstantPoolConstant.CONSTANT_MethodType_SIZE;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IConstantPoolConstant.CONSTANT_InvokeDynamic :", "+\t\t\t\t\t\tconstantPoolOffsets[i] = readOffset;", "+\t\t\t\t\t\treadOffset += IConstantPoolConstant.CONSTANT_InvokeDynamic_SIZE;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.BOOTSTRAP_METHODS)) {", "+\t\t\t\t\t\t\tthis.attributes[attributesIndex++] = new BootstrapMethodsAttribute(classFileBytes, this.constantPool, readOffset);"]}], "num": 22150}