{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b56161dd548f557dd68bfb3d0b7da538", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c5368038023e705c4f5080e1c1dfc6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tprivate int retrieveRightBracketPosition(int start, int end)", "signatureAfterChange": " \tprotected int retrieveRightBracketPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveRightBracketPosition(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "-\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrieveRightBracketPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "+\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2c8d4149cc9116fe05fcf189a83a44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tprivate void retrieveColonPosition(ASTNode node)", "signatureAfterChange": " \tprotected void retrieveColonPosition(ASTNode node)", "diff": ["-\t */", "-\tprivate void retrieveColonPosition(ASTNode node) {", "-\t\tint start = node.getStartPosition();", "-\t\tint length = node.getLength();", "-\t\tint end = start + length;", "-\t\tthis.scanner.resetTo(end, this.compilationUnitSource.length);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameCOLON:", "-\t\t\t\t\t\tnode.setSourceRange(start, this.scanner.currentPosition - start);", "-\t\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t}", "+\t */", "+\tprotected void retrieveColonPosition(ASTNode node) {", "+\t\tint start = node.getStartPosition();", "+\t\tint length = node.getLength();", "+\t\tint end = start + length;", "+\t\tthis.scanner.resetTo(end, this.compilationUnitSource.length);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOLON:", "+\t\t\t\t\t\tnode.setSourceRange(start, this.scanner.currentPosition - start);", "+\t\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t}"]}], "num": 6680}