{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fbb750d34d2335f218001a7d6f618f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2706cab19b732b1deb1e3b22f5d583cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "64be0e1955b0627416c496a964aba7a1211321fc", "commitAfterChange": "1b6125b922b604588bed2b5782d039674eb294dc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void assertNoProblem(char[] source, ICompilationUnit unit) throws InterruptedException, JavaModelException", "signatureAfterChange": " protected void assertNoProblem(char[] source, ICompilationUnit unit) throws InterruptedException, JavaModelException", "diff": ["-\t\tunit.reconcile(AST.JLS3, true, null, null);", "+\t\tunit.getBuffer().setContents(source); // need to set contents again to be sure that following reconcile will be really done", "+\t\tunit.reconcile(AST.JLS3,", "+\t\t\ttrue, // force problem detection to see errors if any", "+\t\t\tnull,\t// do not use working copy owner to not use working copies in name lookup", "+\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb3b76c6f8551fd25671debc95e5513a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RootManipulationsTests.java", "commitBeforeChange": "0724efb948d24ce41090acaa1fbaff110ce3664b", "commitAfterChange": "db187aeed540dad99cbfde2e92a07043888d08ec", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testCopySourceFolder4() throws CoreException", "signatureAfterChange": " public void testCopySourceFolder4() throws CoreException", "diff": ["-\t\troot.copy(new Path(\"/P2/src\"), IResource.NONE, true, sibling, null);", "+\t\tthis.copy(root, new Path(\"/P2/src\"), sibling);", "-\t\troot.copy(new Path(\"/P2/src3\"), IResource.NONE, true, sibling, null);", "+\t\tthis.copy(root, new Path(\"/P2/src3\"), sibling);", "-\t\troot.copy(new Path(\"/P2/src4\"), IResource.NONE, true, null, null);", "+\t\tthis.copy(root, new Path(\"/P2/src4\"), null);"]}], "num": 37543}