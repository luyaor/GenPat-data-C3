{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eab85bb82c610fe0f2568acf10419546", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e532f135a4055baa18382054e563d49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "017f9918b88fff3a8fea9daac2df2ba8b7e560d6", "commitAfterChange": "5066a165665c172193991ef548a06f9b6acd680e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public TypeMirror asMemberOf(DeclaredType containing, Element element)", "signatureAfterChange": "     @Override     public TypeMirror asMemberOf(DeclaredType containing, Element element)", "diff": ["-    \t\t\tif (methodBinding.declaringClass != referenceBinding) {", "+    \t\t\tif (TypeBinding.notEquals(methodBinding.declaringClass, referenceBinding)) {", "-    \t\t\tif (fieldBinding.declaringClass != referenceBinding) {", "+    \t\t\tif (TypeBinding.notEquals(fieldBinding.declaringClass, referenceBinding)) {", "-    \t\t\tif (referenceBinding2.enclosingType() != referenceBinding) {", "+    \t\t\tif (TypeBinding.notEquals(referenceBinding2.enclosingType(), referenceBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9dcecac47f9963f8a570eaa539d5f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t\t\tif (this != otherParamType.genericType())", "+\t\t\tif (TypeBinding.notEquals(this, otherParamType.genericType()))", "-\t\t\t\t\t\tif (enclosing != otherEnclosing) return false;", "+\t\t\t\t\t\tif (TypeBinding.notEquals(enclosing, otherEnclosing)) return false;", "-\t        return otherType.erasure() == this;", "+\t        return TypeBinding.equalsEquals(otherType.erasure(), this);"]}], "num": 55492}