{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "181301a09bc952a53d0081c8319ad914", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4170ffaa9d68aa6db8f218b9c63adbba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingReferenceExpressionTest.java", "commitBeforeChange": "cbe22d350fa314e6e5df169cf670cab9bb8c2a20", "commitAfterChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testReferenceExpressions_test001_since_8() throws Exception", "signatureAfterChange": " \tpublic void testReferenceExpressions_test001_since_8() throws Exception", "diff": ["-\t\t\ttypeParameter= ast.newTypeParameter();", "-\t\t\ttypeParameter.setName(ast.newSimpleName(\"Integer\"));\t\t\t", "+\t\t\tSimpleType simpleType = ast.newSimpleType(ast.newSimpleName(\"Integer\"));", "-\t\t\tlistRewrite.insertLast(typeParameter, null);", "+\t\t\tlistRewrite.insertLast(simpleType, null);", "-\t\t\ttypeParameter= ast.newTypeParameter();", "-\t\t\ttypeParameter.setName(ast.newSimpleName(\"String\"));\t\t\t", "-\t\t\tlistRewrite.insertFirst(typeParameter, null);", "+\t\t\tsimpleType = ast.newSimpleType(ast.newSimpleName(\"String\"));", "+\t\t\tlistRewrite.insertFirst(simpleType, null);", "-\t\t\tSimpleType simpleType = ast.newSimpleType(ast.newQualifiedName(ast.newSimpleName(\"Y\"), ast.newSimpleName(\"Z\")));", "+\t\t\tsimpleType = ast.newSimpleType(ast.newQualifiedName(ast.newSimpleName(\"Y\"), ast.newSimpleName(\"Z\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f7fa0da3edaf08eb891180900629fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tpublic void testIfStatement2() throws Exception", "signatureAfterChange": " \t \tpublic void testIfStatement2() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "-\t\t\trewrite.markAsRemoved(ifStatement.getElseStatement(), null);", "+\t\t\trewrite.replace(body, newBody, null);", "+\t\t\trewrite.remove(ifStatement.getElseStatement(), null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "-\t\t\trewrite.markAsRemoved(ifStatement.getElseStatement(), null);", "+\t\t\trewrite.replace(body, newBody, null);", "+\t\t\trewrite.remove(ifStatement.getElseStatement(), null);"]}], "num": 58380}