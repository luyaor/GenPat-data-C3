{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c358e3590ad8d5089379d7bc3751878", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a6e307fc57454e90fd84585a31e1772", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "82bb8e030c97c8b6d4b4c5a8a55fcc04604c66cf", "commitAfterChange": "86daaec2d4ad901c52360cac0138f3cff784d3b8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \t\t\r \tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": "\r \t\t\r \tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration)", "diff": ["+\t\tExplicitConstructorCall explicitConstructorCall = null;\r", "+\t\t\tConstructorDeclaration constructorDeclaration = (ConstructorDeclaration) methodDeclaration;\r", "+\t\t\texplicitConstructorCall = constructorDeclaration.constructorCall;\r", "-\t\tif (statements != null) {\r", "+\t\t\r", "+\t\tif (statements != null || explicitConstructorCall != null) {\r", "-\t\t\tint statementsLength = statements.length;\r", "+\t\t\tif (explicitConstructorCall != null) {\r", "+\t\t\t\tblock.statements().add(convert(explicitConstructorCall));\r", "+\t\t\t}\r", "+\t\t\tint statementsLength = statements == null ? 0 : statements.length;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ae63603c3e18e396872ad71f67bedd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "74d1a69d243cab687f2593db7606ac17693de869", "commitAfterChange": "ebe85c849f76aee86c12c372b46dd07900db652c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["+\t\tMethodScope methodScope = scope.methodScope();", "-\t\t\t((MethodScope) scope).isConstructorCall = true;", "+\t\t\tAbstractMethodDeclaration methodDeclaration = methodScope.referenceMethod();", "+\t\t\tif (methodDeclaration == null ", "+\t\t\t\t\t|| !methodDeclaration.isConstructor()", "+\t\t\t\t\t|| ((ConstructorDeclaration) methodDeclaration).constructorCall != this) {", "+\t\t\t\tscope.problemReporter().invalidExplicitConstructorCall(this);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tmethodScope.isConstructorCall = true;", "-\t\t\t((MethodScope) scope).isConstructorCall = false;", "+\t\t\tmethodScope.isConstructorCall = false;"]}], "num": 35725}