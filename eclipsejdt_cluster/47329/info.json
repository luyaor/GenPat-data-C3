{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "843fdff0b46c2add7f40b3b35679497e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "401e1b47f250f7662ec80e86ad252778", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ListRewriteEvent.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate List getEntries()", "signatureAfterChange": " \t \tprivate List getEntries()", "diff": ["-\t\tif (fListEntries == null) {", "+\t\tif (this.listEntries == null) {", "-\t\t\tint nNodes= fOriginalNodes.size();", "-\t\t\tfListEntries= new ArrayList(nNodes * 2);", "+\t\t\tint nNodes= this.originalNodes.size();", "+\t\t\tthis.listEntries= new ArrayList(nNodes * 2);", "-\t\t\t\tASTNode node= (ASTNode) fOriginalNodes.get(i);", "+\t\t\t\tASTNode node= (ASTNode) this.originalNodes.get(i);", "-\t\t\t\tfListEntries.add(new NodeRewriteEvent(node, node));", "+\t\t\t\tthis.listEntries.add(new NodeRewriteEvent(node, node));", "-\t\treturn fListEntries;", "+\t\treturn this.listEntries;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa2effce93b7f1384e25e6969c41679", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ListRewriteEvent.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic ListRewriteEvent(RewriteEvent[] children)", "signatureAfterChange": " \tpublic ListRewriteEvent(RewriteEvent[] children)", "diff": ["-\t\tfListEntries= new ArrayList(children.length * 2);", "-\t\tfOriginalNodes= new ArrayList(children.length * 2);", "+\t\tthis.listEntries= new ArrayList(children.length * 2);", "+\t\tthis.originalNodes= new ArrayList(children.length * 2);", "-\t\t\tfListEntries.add(curr);", "+\t\t\tthis.listEntries.add(curr);", "-\t\t\t\tfOriginalNodes.add(curr.getOriginalValue());", "+\t\t\t\tthis.originalNodes.add(curr.getOriginalValue());"]}], "num": 47329}