{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "047dcd006cb316b14e0cdadde03b39f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d5327bb47531e908b92e26bf5379a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "562f566c1c2b8bfedaad7117a5b53ae2f781bec9", "commitAfterChange": "b11449e69404728ca4b19e3cce8d08756ffe4f52", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic final static char[][] splitTypeLevelsSignature(String uniqueKey)", "signatureAfterChange": " \tpublic final static char[][] splitTypeLevelsSignature(String typeSignature)", "diff": ["-\tpublic final static char[][] splitTypeLevelsSignature(String uniqueKey) {", "+\tpublic final static char[][] splitTypeLevelsSignature(String typeSignature) {", "-\t\tchar[] source = uniqueKey.replace('$','.').toCharArray();", "+\t\tchar[] source = typeSignature.replace('$','.').toCharArray();", "-\t\tint[] lengthes = new int [10];", "+//\t\tint[] lengthes = new int [10];", "-\t\t\t\t\t\tif (signaturesCount == lengthes.length) {", "+\t\t\t\t\t\tif (signaturesCount == signatures.length) {", "-\t\t\t\t\t\t\tSystem.arraycopy(lengthes, 0, lengthes = new int[signaturesCount+10], 0, signaturesCount);", "+//\t\t\t\t\t\t\tSystem.arraycopy(lengthes, 0, lengthes = new int[signaturesCount+10], 0, signaturesCount);", "-\t\t\t\t\t\tlengthes[signaturesCount] = typeArgsCount;", "+//\t\t\t\t\t\tlengthes[signaturesCount] = typeArgsCount;", "-\t\t\t\t\t\tif (signaturesCount == lengthes.length) {", "+\t\t\t\t\t\tif (signaturesCount == signatures.length) {", "-\t\t\t\t\t\t\tSystem.arraycopy(lengthes, 0, lengthes = new int[signaturesCount+10], 0, signaturesCount);", "+//\t\t\t\t\t\t\tSystem.arraycopy(lengthes, 0, lengthes = new int[signaturesCount+10], 0, signaturesCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec22c3bd4ac7c01a8c2e597e643e6ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static IPath[] concatPatterns(IPath[] patternList1, IPath[] patternList2)", "signatureAfterChange": "  \tprivate IAccessRule[] combine(IAccessRule[] referringRules, IAccessRule[] rules, boolean combine)", "diff": ["-\t */", "-\tpublic static IPath[] concatPatterns(IPath[] patternList1, IPath[] patternList2) {", "-\t\tint length1 = patternList1.length;", "-\t\tif (length1 == 0) return patternList2;", "-\t\tint length2 = patternList2.length;", "-\t\tif (length2 == 0) return patternList1;", "-\t\tIPath[] result = new IPath[length1+length2];", "-\t\tSystem.arraycopy(patternList1, 0, result, 0, length1);", "-\t\tSystem.arraycopy(patternList2, 0, result, length1, length2);", "+\tprivate IAccessRule[] combine(IAccessRule[] referringRules, IAccessRule[] rules, boolean combine) {", "+\t\tif (!combine) return rules;", "+\t\tif (rules == null) return referringRules;", "+\t\t", "+\t\t// concat access rules", "+\t\tint referringRulesLength = referringRules.length;", "+\t\tint accessRulesLength = rules.length;", "+\t\tint rulesLength = referringRulesLength + accessRulesLength;", "+\t\tIAccessRule[] result = new IAccessRule[rulesLength];", "+\t\tSystem.arraycopy(referringRules, 0, result, 0, referringRulesLength);", "+\t\tSystem.arraycopy(rules, 0, result, referringRulesLength, accessRulesLength);", "+\t\t"]}], "num": 45498}