{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aac95bb2346d4fe195cbe4e290daa7d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e4dde35588a3ecb8d8b230af529245f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 206, "signatureBeforeChange": "  final public void invokespecial(MethodBinding methodBinding)", "signatureAfterChange": " public void invokespecial(MethodBinding methodBinding)", "diff": ["-", "-final public void invokespecial(MethodBinding methodBinding) {", "+public void invokespecial(MethodBinding methodBinding) {", "-\tbCodeStream[classFileOffset++] = OPC_invokespecial;", "+\tbCodeStream[classFileOffset++] = Opcodes.OPC_invokespecial;", "-\t\t\t\tif (((id = syntheticArgumentTypes[i].id) == T_double) || (id == T_long)) {", "+\t\t\t\tif (((id = syntheticArgumentTypes[i].id) == TypeIds.T_double) || (id == TypeIds.T_long)) {", "-\t\t\t\tif (((id = syntheticArguments[i].type.id) == T_double) || (id == T_long)) {", "+\t\t\t\tif (((id = syntheticArguments[i].type.id) == TypeIds.T_double) || (id == TypeIds.T_long)) {", "-\t\tif (((id = methodBinding.parameters[i].id) == T_double) || (id == T_long))", "+\t\tif (((id = methodBinding.parameters[i].id) == TypeIds.T_double) || (id == TypeIds.T_long))", "-\tif (((id = methodBinding.returnType.id) == T_double) || (id == T_long))", "+\tif (((id = methodBinding.returnType.id) == TypeIds.T_double) || (id == TypeIds.T_long))", "-\t\tif (id == T_void)", "+\t\tif (id == TypeIds.T_void)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e161e571685853f44951759bd77807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "f34d0660fc08a428cce0fefe472952c23bd16c8b", "commitAfterChange": "26280894123d7ef2ecad980903e2002f03a13de2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t\tthis.implicitConversion = UNBOXING;", "+\t\t\t\tthis.implicitConversion = TypeIds.UNBOXING;", "-\t\t\tthis.implicitConversion = BOXING | (boxedType.id << 4) + compileTimeType.id;", "+\t\t\tthis.implicitConversion = TypeIds.BOXING | (boxedType.id << 4) + compileTimeType.id;", "-\t\t} else if (this.constant != Constant.NotAConstant && this.constant.typeID() != T_JavaLangString) {", "-\t\t\tthis.implicitConversion = BOXING;", "+\t\t} else if (this.constant != Constant.NotAConstant && this.constant.typeID() != TypeIds.T_JavaLangString) {", "+\t\t\tthis.implicitConversion = TypeIds.BOXING;", "-\t\tif ((compileTimeTypeID = compileTimeType.id) == NoId) { // e.g. ? extends String  ==> String (103227)", "-\t\t\tcompileTimeTypeID = compileTimeType.erasure().id == T_JavaLangString ? T_JavaLangString : T_JavaLangObject;", "+\t\tif ((compileTimeTypeID = compileTimeType.id) == TypeIds.NoId) { // e.g. ? extends String  ==> String (103227)", "+\t\t\tcompileTimeTypeID = compileTimeType.erasure().id == TypeIds.T_JavaLangString ? TypeIds.T_JavaLangString : TypeIds.T_JavaLangObject;", "-\t\t\t\tthis.implicitConversion |= (T_int << 4) + compileTimeTypeID;", "+\t\t\t\tthis.implicitConversion |= (TypeIds.T_int << 4) + compileTimeTypeID;"]}], "num": 65578}