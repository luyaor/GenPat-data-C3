{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84cc7702e887fcaf51d35cbcca6a5964", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7e0c9e7c69a60160cef1a477741bb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "915adeadf0a77f488d15bb1d0bf2559201b1f96d", "commitAfterChange": "e8c4bcb175c9fa83d7e57124058ee64597b70965", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t  \t \tprivate void initializeRoots(IJavaModel model)", "signatureAfterChange": "  \tpublic void initializeRoots()", "diff": ["-\t", "-\tprivate void initializeRoots(IJavaModel model) {", "+\tpublic void initializeRoots() {", "+\t\t// remember roots infos as old roots infos", "+\t\tthis.oldRoots = this.roots;", "+\t\tthis.oldOtherRoots = this.otherRoots;", "+\t\t", "+\t\t// recompute root infos only if necessary", "+\t\tif (!rootsAreStale) return;", "+", "+\t\t", "+\t\tIJavaModel model = this.manager.getJavaModel();", "-\t\t\tprojects = ((JavaModel)model).getOldJavaProjectsList();", "+\t\t\tprojects = model.getJavaProjects();", "+\t\tthis.rootsAreStale = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e03a5edb5835e902a8c15fe02fe33148", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method, int checkKind) \t\t\tthrows InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "diff": ["-\tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method, int checkKind)", "+\tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method)", "-\t\tBoundSet previous = this.currentBounds;", "-\t\t\t\tswitch (checkKind) {", "+\t\t\t\tif (k < (method.isVarargs() ? p-1 : p))", "+\t\t\t\t\treturn null; // insufficient arguments for parameters!", "+\t\t\t\tswitch (this.inferenceKind) {", "-\t\t\t\t\t\tthrow new IllegalStateException(\"Unexpected checkKind \"+checkKind); //$NON-NLS-1$", "+\t\t\t\t\t\tthrow new IllegalStateException(\"Unexpected checkKind \"+this.inferenceKind); //$NON-NLS-1$", "-\t\t\treturn solution;", "+\t\t\treturn this.currentBounds = solution; // this is final, keep the result:", "-\t\t\tthis.currentBounds = previous;", "+\t\t\tthis.hasFinished = true;"]}], "num": 62808}