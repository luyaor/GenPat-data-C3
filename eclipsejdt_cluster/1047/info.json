{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8de0cf3f0a37d7971dd4ff61e5dc6cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43210ca86c9fdc2a785fc68671efbef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "signatureAfterChange": " \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "diff": ["-\t\tif(uninterestingBindings != null) {", "-\t\t\tfor (int i = 0; i <= uninterestingBindingsPtr; i++) {", "-\t\t\t\tif(uninterestingBindings[i] == binding) {", "+\t\tif(this.uninterestingBindings != null) {", "+\t\t\tfor (int i = 0; i <= this.uninterestingBindingsPtr; i++) {", "+\t\t\t\tif(this.uninterestingBindings[i] == binding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58530cefce7966bbcfca65d0c63ef647", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  public void resolve(ClassScope upperScope)", "diff": ["+", "+public void resolve(ClassScope upperScope) {", "+\t// member scopes are already created", "+\t// request the construction of a binding if local member type", "+", "+\tif (this.binding != null && this.binding instanceof LocalTypeBinding) {", "+\t\t// remember local types binding for innerclass emulation propagation", "+\t\tupperScope.referenceCompilationUnit().record((LocalTypeBinding)this.binding);", "+\t}", "+\tresolve();", "+\tupdateMaxFieldCount();", "+}", "-\t", "-\tpublic void resolve(ClassScope upperScope) {", "-\t\t// member scopes are already created", "-\t\t// request the construction of a binding if local member type", "-", "-\t\tif (binding != null && binding instanceof LocalTypeBinding) {", "-\t\t\t// remember local types binding for innerclass emulation propagation", "-\t\t\tupperScope.referenceCompilationUnit().record((LocalTypeBinding)binding);", "-\t\t}", "-\t\tresolve();", "-\t\tupdateMaxFieldCount();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd2e7a96cb0f9d96e43edcc2345efb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void manageSyntheticReadAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticReadAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif (constant != NotAConstant)", "+\tif (this.constant != NotAConstant)", "-\tif ((bits & FIELD) != 0) {", "-\t\tFieldBinding fieldBinding = (FieldBinding) binding;", "-//\t\t\tif (((bits & DepthMASK) != 0)", "+\tif ((this.bits & FIELD) != 0) {", "+\t\tFieldBinding fieldBinding = (FieldBinding) this.binding;", "+//\t\t\tif (((this.bits & DepthMASK) != 0)", "-//\t\t\t\tif (syntheticAccessors == null)", "-//\t\t\t\t\tsyntheticAccessors = new MethodBinding[2];", "-//\t\t\t\tsyntheticAccessors[READ] = ", "+//\t\t\t\tif (this.syntheticAccessors == null)", "+//\t\t\t\t\tthis.syntheticAccessors = new MethodBinding[2];", "+//\t\t\t\tthis.syntheticAccessors[READ] = ", "-//\t\t\t\t\t\tenclosingTypeAt((bits & DepthMASK) >> DepthSHIFT)).", "+//\t\t\t\t\t\tenclosingTypeAt((this.bits & DepthMASK) >> DepthSHIFT))."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c3974a4b98a603b056f8d7d28ed8985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (body == null ? 0 : getBody().treeSize())", "-\t\t\t+ catchClauses.listSize()", "-\t\t\t+ (optionalFinallyBody == null ? 0 : getFinally().treeSize());", "+\t\t\t+ (this.body == null ? 0 : getBody().treeSize())", "+\t\t\t+ this.catchClauses.listSize()", "+\t\t\t+ (this.optionalFinallyBody == null ? 0 : getFinally().treeSize());"]}], "num": 1047}