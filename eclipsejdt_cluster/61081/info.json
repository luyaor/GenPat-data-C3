{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "edf4567baec41a483f4a9a4562f972d5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33620c39a827cab65da1682150403aca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "f0ba284185943d1b8df039a8beb736a55eeed994", "commitAfterChange": "e51594c408ebb686b1be624626fdc1156c116aa5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient)", "signatureAfterChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient)", "diff": ["-\t\t\tannotation.recipient = recipient;", "-\t\t\tannotationTypes[i] = annotation.resolveType(scope);", "-", "-\t\t\t// null if receiver is a package binding", "-\t\t\tif (instances != null)", "-\t\t\t\tinstances[i] = annotation.getCompilerAnnotation();", "+\t\t\tfinal Binding annotationRecipient = annotation.recipient;", "+\t\t\tif (annotationRecipient != null && recipient != null) {", "+\t\t\t\t// only local and field can share annnotations", "+\t\t\t\tswitch (recipient.kind()) {", "+\t\t\t\t\tcase Binding.FIELD :", "+\t\t\t\t\t\tFieldBinding field = (FieldBinding) recipient;", "+\t\t\t\t\t\tfield.tagBits = ((FieldBinding) annotationRecipient).tagBits;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase Binding.LOCAL :", "+\t\t\t\t\t\tLocalVariableBinding local = (LocalVariableBinding) recipient;", "+\t\t\t\t\t\tlocal.tagBits = ((LocalVariableBinding) annotationRecipient).tagBits;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tif (instances != null) {", "+\t\t\t\t\t// need to fill the instances array", "+\t\t\t\t\tinstances[0] = annotation.getCompilerAnnotation();", "+\t\t\t\t\tfor (int j = 1; j < length; j++) {", "+\t\t\t\t\t\tAnnotation annot = annotations[j];", "+\t\t\t\t\t\tinstances[j] = annot.getCompilerAnnotation();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tannotation.recipient = recipient;", "+\t\t\t\tannotationTypes[i] = annotation.resolveType(scope);", "+\t\t\t\t// null if receiver is a package binding", "+\t\t\t\tif (instances != null) {", "+\t\t\t\t\tinstances[i] = annotation.getCompilerAnnotation();", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffc4de21f6fce5453f82d572393c60a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public ArrayBinding(TypeBinding type, int dimensions, LookupEnvironment environment)", "signatureAfterChange": "  public void setTypeAnnotations(AnnotationBinding[] annotations, boolean evalNullAnnotations)", "diff": ["-\tthis(type, dimensions, environment, null);", "-}", "+", "+public void setTypeAnnotations(AnnotationBinding[] annotations, boolean evalNullAnnotations) {", "+\t", "+\tthis.typeAnnotations = annotations;", "+\tthis.tagBits |= TagBits.HasTypeAnnotations | TagBits.HasTypeAnnotations;", "+\t", "+\tif (evalNullAnnotations) {", "+\t\tlong nullTagBits = 0;", "+\t\tif (this.nullTagBitsPerDimension == null)", "+\t\t\tthis.nullTagBitsPerDimension = new long[this.dimensions + 1];", "+\t\t", "+\t\tint dimension = 0;", "+\t\tfor (int i = 0, length = annotations.length; i < length; i++) {", "+\t\t\tAnnotationBinding annotation = annotations[i];", "+\t\t\tif (annotation != null) {", "+\t\t\t\tswitch (annotation.type.id) {", "+\t\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNullable :", "+\t\t\t\t\t\tnullTagBits  |= TagBits.AnnotationNullable;", "+\t\t\t\t\t\tthis.tagBits |= TagBits.HasNullTypeAnnotation;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNonNull :", "+\t\t\t\t\t\tnullTagBits  |= TagBits.AnnotationNonNull;", "+\t\t\t\t\t\tthis.tagBits |= TagBits.HasNullTypeAnnotation;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\t// null signals end of annotations for the current dimension in the serialized form.", "+\t\t\t\tif (nullTagBits != 0) {", "+\t\t\t\t\tthis.nullTagBitsPerDimension[dimension] = nullTagBits;", "+\t\t\t\t\tnullTagBits = 0;", "+\t\t\t\t}", "+\t\t\t\tdimension++;", "+\t\t\t}", "+\t\t}", "+\t\tthis.tagBits |= this.nullTagBitsPerDimension[0]; // outer-most dimension", "+\t}", "+}"]}], "num": 61081}