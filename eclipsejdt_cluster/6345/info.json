{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "437447ba3159f3468c07890d72e78fca", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015c2a0764a615f317fe1aa767094eb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " public void test101()", "signatureAfterChange": " public void test101()", "diff": ["-\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 11)\\n\" +", "-\t\t\"\tInteger getX(List<Integer> l) {\\n\" +", "-\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Duplicate method getX(List<Integer>) in type Y\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 14)\\n\" +", "-\t\t\"\tString getX(List<Integer> l) {\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Duplicate method getX(List<Integer>) in type Y\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tInteger getX(List<Integer> l) {\\n\" + ", "+\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method getX(List<Integer>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tString getX(List<String> l) {\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method getX(List<String>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tInteger getX(List<Integer> l) {\\n\" + ", "+\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Duplicate method getX(List<Integer>) in type Y\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\tString getX(List<Integer> l) {\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Duplicate method getX(List<Integer>) in type Y\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e914cc572d8683fbc4fccbff04b92e39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 904, "methodNumberAfterChange": 904, "signatureBeforeChange": " public void test0884()", "signatureAfterChange": " public void test0884()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tString s = getClass();\\n\" +", "-\t\t\"\t           ^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends X> to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\treturn (String) getDefault(getClass());\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Cannot cast from capture#2-of ? extends X to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 8)\\n\" +", "-\t\t\"\treturn (String) getDefault(getClass());\\n\" +", "-\t\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation getDefault(Class<capture#2-of ? extends X>) of the generic method getDefault(Class<T>) of type X<C>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tString s = getClass();\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends X> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\treturn (String) getDefault(getClass());\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from X to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\"\treturn (String) getDefault(getClass());\\n\" + ", "+\t\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation getDefault(Class<capture#2-of ? extends X>) of the generic method getDefault(Class<T>) of type X<C>\\n\" + "]}], "num": 6345}