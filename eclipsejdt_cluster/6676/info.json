{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dbeb13421e6d22ebdfe091e05249f15", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "617f45c778b7df4d014e29e037c726e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "fbf84f866e42eb770ccc18208173c5927f854235", "commitAfterChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tvoid recordModifications(CompilationUnit root) throws RewriteException", "signatureAfterChange": " \tvoid recordModifications(CompilationUnit root)", "diff": ["-\tvoid recordModifications(CompilationUnit root) throws RewriteException {", "+\tvoid recordModifications(CompilationUnit root) {", "-\t\t\tthrow new RewriteException(\"AST is already modified\"); //$NON-NLS-1$", "+\t\t\tthrow new IllegalArgumentException(\"AST is already modified\"); //$NON-NLS-1$", "-\t\t\tthrow new RewriteException(\"AST modifications are already recorded\"); //$NON-NLS-1$", "+\t\t\tthrow new IllegalArgumentException(\"AST modifications are already recorded\"); //$NON-NLS-1$", "-\t\t\tthrow new RewriteException(\"Root node is unmodifiable\"); //$NON-NLS-1$", "+\t\t\tthrow new IllegalArgumentException(\"Root node is unmodifiable\"); //$NON-NLS-1$", "-\t\t\tthrow new RewriteException(\"Root node is not owned by this ast\"); //$NON-NLS-1$", "+\t\t\tthrow new IllegalArgumentException(\"Root node is not owned by this ast\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6623284c5fa69abb13400aff2ef599d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "5ae0f68de39ccf7971db3eb1a4e8517f51056d99", "commitAfterChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic ASTNode createInstance(Class nodeClass)", "signatureAfterChange": " \tpublic ASTNode createInstance(Class nodeClass)", "diff": ["-\t\t\tthrow new RuntimeException(\"Unable to create instance\", e); //$NON-NLS-1$", "+\t\t\t// all AST node classes have a Foo(AST) constructor", "+\t\t\t// therefore nodeClass is not legit", "+\t\t\tthrow new IllegalArgumentException();", "-\t\t\tthrow new RuntimeException(\"Unable to create instance\", e); //$NON-NLS-1$", "+\t\t\t// all concrete AST node classes can be instantiated", "+\t\t\t// therefore nodeClass is not legit", "+\t\t\tthrow new IllegalArgumentException();", "-\t\t\tthrow new RuntimeException(\"Unable to create instance\", e); //$NON-NLS-1$", "+\t\t\t// all AST node classes have an accessible Foo(AST) constructor", "+\t\t\t// therefore nodeClass is not legit", "+\t\t\tthrow new IllegalArgumentException();", "-\t\t\tthrow new RuntimeException(\"Unable to create instance\", e); //$NON-NLS-1$", "+\t\t\t// concrete AST node classes do not die in the constructor", "+\t\t\t// therefore nodeClass is not legit", "+\t\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d49b6fc0b5bdb70834ccb748ec852a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic DeclaredType newDeclaredType(ReferenceBinding binding)", "signatureAfterChange": " \t \tpublic DeclaredType newDeclaredType(ReferenceBinding binding)", "diff": ["-\t\tif (binding.kind() == Binding.WILDCARD_TYPE) {", "-\t\t\t// JDT wildcard binding is a subclass of reference binding, but in JSR269 they're siblings", "-\t\t\tthrow new IllegalArgumentException(\"A wildcard binding can't be turned into a DeclaredType\"); //$NON-NLS-1$", "+\t\tswitch (binding.kind()) {", "+\t\t\tcase Binding.WILDCARD_TYPE :", "+\t\t\t\t// JDT wildcard binding is a subclass of reference binding, but in JSR269 they're siblings", "+\t\t\t\tthrow new IllegalArgumentException(\"A wildcard binding can't be turned into a DeclaredType\"); //$NON-NLS-1$", "+\t\t\tcase Binding.INTERSECTION_TYPE :", "+\t\t\t\t// JDT intersection binding is a subclass of reference binding, but in JSR269 they're siblings", "+\t\t\t\tthrow new IllegalArgumentException(\"An intersection binding can't be turned into a DeclaredType\"); //$NON-NLS-1$"]}], "num": 6676}