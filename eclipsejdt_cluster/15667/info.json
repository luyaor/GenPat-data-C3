{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cf00b21f6e256d5ad1268c60e345349", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062b3cb38de6dda5cfa76d4fb21a4e6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "7e8c39a9e3d7dea3d8b022efbc3b049165785892", "commitAfterChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test012()", "signatureAfterChange": "  \tpublic void test012()", "diff": ["+", "+\tpublic void test012() { // varargs and autoboxing", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\t\"\t\tInteger x = new Integer(15); \\n\" +", "+\t\t\t\t\"\t\tint y = 32;\\n\" +", "+\t\t\t\t\"\t\tSystem.out.printf(\\\"%x + %x\\\", x, y);\\n\" +", "-\t// varargs and autoboxing", "-\tpublic void test012() {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\tdouble x = 0XaP1; \\n\" +", "-\t\t\t\t\"\tdouble y = 0XFFP2D;\\n\" +", "-\t\t\t\t\"\tfloat z  = 0Xf.FP2F;\\n\" +", "-\t\t\t\t\"\tSystem.out.printf(\\\"%f %f %f%n\\\", x, y, z);\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\"20,000000 1020,000000 63,750000\"", "-\t\t);", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\tDouble x = new Double(0XaP1); \\n\" +", "-\t\t\t\t\"\tdouble y = 0XFFP2D;\\n\" +", "-\t\t\t\t\"\tfloat z  = 0Xf.FP2F;\\n\" +", "-\t\t\t\t\"\tSystem.out.printf(\\\"%f %f %f%n\\\", x, y, z);\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"}\",", "-\t\t\t},", "-\t\t\t\"20,000000 1020,000000 63,750000\"", "+\t\t\t\"f + 20\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf4233d38c6e176514cdeb7135a1389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "fe412add93d4cfbb83d610f46ca1de0e6d064ca7", "commitAfterChange": "297840d814bc6fb8f78f68a36eb74676aea7b3b0", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r public void testBug460186() throws JavaModelException", "signatureAfterChange": "\r public void testBug460186() throws JavaModelException", "diff": ["-\t\t\t\"package test460186;\\n\" +\r", "-\t\t\t\"public class NPE {\\n\" + \r", "-\t\t\t\"\tvoid foo(String[] args) throws Exception {\\n\" + \r", "-\t\t\t\"\t\tif (args == null) error(); \\n\" + \r", "-\t\t\t\"\t\terror();[]\\n\" + \r", "-\t\t\t\"\t}\\n\" + \r", "-\t\t\t\"\tvoid error() throws Exception {\\n\" + \r", "-\t\t\t\"\t\tthrow new Exception();\\n\" + \r", "+\t\t\t\"class Foo {\\n\" + \r", "+\t\t\t\"\tvoid foo()\\n {\" + \r", "+\t\t\t\"\t\tfoo();[]\\n\" + \r", "-\ttry {\r", "-\t\tparser.createASTs(new ICompilationUnit[] {this.workingCopy}, new String[0], requestor, null);\r", "-\t} catch (IllegalArgumentException e) {\r", "-\t\tassertTrue(\"Test Failed\", false);\r", "-\t}\r", "+\tparser.createASTs(new ICompilationUnit[] {this.workingCopy}, new String[0], requestor, null);\r", "+\t// Implicitly check that no exception is thrown by createASTs.\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ed7d5dc3fe548f41bf24836c744bab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "3713e09eba9f685830154e0115a35b3f423e4800", "commitAfterChange": "b643998b38b3ce66cb5be62319a6d11497b1841e", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic void testBug153399d()", "signatureAfterChange": " \tpublic void testBug153399d()", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\t* {@value}\\n\" + ", "-\t\t\t\t\"\t    ^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Unexpected duplicated tag @value\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\"\t* {@value Invalid}\\n\" + ", "-\t\t\t\t\"\t    ^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Unexpected duplicated tag @value\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd395be2849190967776a8a6d0a7074", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "c31c921d319cbf1346e5bfb26cf42ff15297484d", "commitAfterChange": "2becf6dcab514ae8708935b2b42eed94f2bad821", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test010a()", "signatureAfterChange": " public void test010a()", "diff": ["-\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tstatic <L1 extends Listener & ErrorListener> Object createParser(L1 l) { return null; }\\r\\n\" +", "-\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Method createParser(L1) has the same erasure createParser(X.Listener) as another method in type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 5)\\r\\n\" +", "+\t\t\"1. ERROR in X.java (at line 5)\\r\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 8)\\r\\n\" +", "-\t\t\"\tcreateParser(new A());\\r\\n\" +", "-\t\t\"\t^^^^^^^^^^^^\\n\" +", "-\t\t\"The method createParser(A) is undefined for the type X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f77d4894220cae4d9df85053d870d53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "commitAfterChange": "50d1489a949b2e888c9f126b8f39d1c4ff67eaa2", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic void _test0154_try_finally()", "signatureAfterChange": " \tpublic void _test0155_try_finally()", "diff": ["-\tpublic void _test0154_try_finally() {", "+\t// TODO (maxime) fix", "+\tpublic void _test0155_try_finally() {", "-\t\t\t\t\"\t\t\tif (x == null) {\\n\" + ", "-\t\t\t\t\"\t\t\t\tx.foo(null);\\n\" + ", "-\t\t\t\t\"\t\t\t}\\n\" + ", "+\t\t\t\t\"\t\t\tif (x == null) {/* */}\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tif (x == null) {\\n\" + ", "-\t\t\"\t    ^\\n\" + ", "-\t\t\"The variable x can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\"\tx.foo(null);\\n\" + ", "-\t\t\"\t^\\n\" + ", "-\t\t\"The variable x can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\"\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629dc7f39f3f8cd06d0459964968e35d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "4b71ef3be11b1e52d22d795d03898285bb112516", "commitAfterChange": "9966baba46edc3df548fabd09b133cadc0093ca6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void test047()", "signatureAfterChange": " public void test047()", "diff": ["-\t\t\t\t\t\"    I x2 = () -> {\\n\" + ", "-\t\t\t\t\t\"      System.out.println(args); // OK: args is not re-assignment since declaration/first assignment\\n\" + ", "-\t\t\t\t\t\"      System.out.println(var); // Error: var is not effectively final\\n\" + ", "-\t\t\t\t\t\"    };\\n\" + ", "-\t\t\t\t\"The variable var must be must be final or effectively final if used in a lambda expression\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(var); // Error: var is not effectively final\\n\" + ", "-\t\t\t\t\"\t                   ^^^\\n\" + ", "-\t\t\t\t\"The variable var must be must be final or effectively final if used in an inner class\\n\" + ", "+\t\t\t\t\"Variable var is required to be final or effectively final\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b249f32b4419d28198d0349d98e7d58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "eee151556fa5628da58c297d3e841df408f33c62", "commitAfterChange": "6c856a22e62c9ef98dcc7d4e8f62170ac88f630e", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void test077()", "signatureAfterChange": " public void test077()", "diff": ["-\t\t\"1. ERROR in p1\\\\Test.java (at line 10)\\n\" + ", "-\t\t\"\t/** @see #bar() */\\n\" + ", "-\t\t\"\t          ^^^\\n\" + ", "-\t\t\"Javadoc: The method bar is defined in an inherited type and an enclosing scope\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in p1\\\\Test.java (at line 12)\\n\" + ", "-\t\t\"\t/** @see #bar() */\\n\" + ", "-\t\t\"\t          ^^^\\n\" + ", "-\t\t\"Javadoc: The method bar is defined in an inherited type and an enclosing scope\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in p1\\\\Test.java (at line 13)\\n\" + ", "+\t\t\"1. ERROR in p1\\\\Test.java (at line 13)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71b7535d62c0f2ff3c4e74ee0142c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "commitAfterChange": "50d1489a949b2e888c9f126b8f39d1c4ff67eaa2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test0013_attribute_synchronized()", "signatureAfterChange": " \tpublic void test0013_field_synchronized()", "diff": ["-\tpublic void test0013_attribute_synchronized() {", "+\t// TODO (maxime) reset diagnostic once supported", "+\tpublic void test0013_field_synchronized() {", "-\t\t\t\t\"\t\t // bar();\\n\" + ", "-\t\t\t\t\"\t\t if (false) {\\n\" + ", "-\t\t\t\t\"\t\t\t o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t if (true) {\\n\" + ", "-\t\t\t\t\"\t\t\t //\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t else {\\n\" + ", "-\t\t\t\t\"\t\t\t o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t System.out.println(o.toString());\\n\" + ", "+\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\t\"\tSystem.out.println(o.toString());\\n\" + ", "-\t\t\t\"\t                   ^\\n\" + ", "-\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\" ", "+\t\t\t\"\"", "+//\t\t\t\"----------\\n\" + ", "+//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+//\t\t\t\" o.toString();\\n\" + ", "+//\t\t\t\"\t^\\n\" + ", "+//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//\t\t\t\"----------\\n\" "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd7ff9f794146ca59969fc676570df68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "ebfabad4a1917d75b16b05ab15520fe9fae0850b", "commitAfterChange": "93d86f0655c98ed807648682de6277090af4d041", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 242, "signatureBeforeChange": " public void testBug211054a()", "signatureAfterChange": " public void testBug281609a()", "diff": ["- */", "-public void testBug211054a() {", "-\trunNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"pkg/X.java\",", "-\t\t\t\"package pkg;\\n\" +", "-\t\t\t\"\\n\" +", "-\t\t\t\"public class X {\\n\" +", "-\t\t\t\"\t/**\\n\" +", "-\t\t\t\"\t * @see java\\n\" +", "-\t\t\t\"\t * @see java.lang\\n\" +", "-\t\t\t\"\t * @see PKG\\n\" +", "-\t\t\t\"\t * @see pkg\\n\" +", "-\t\t\t\"\t */\\n\" +", "-\t\t\t\"\tpublic void foo() { \\n\" +", "-\t\t\t\"\t \\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"}\\n\"", "-\t\t},", "-\t\t// warning - Tag @see: reference not found: java", "-\t\t// warning - Tag @see: reference not found: java.lang", "-\t\t// warning - Tag @see: reference not found: PKG", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in pkg\\\\X.java (at line 5)\\n\" + ", "-\t\t\"\t* @see java\\n\" + ", "-\t\t\"\t       ^^^^\\n\" + ", "-\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in pkg\\\\X.java (at line 6)\\n\" + ", "-\t\t\"\t* @see java.lang\\n\" + ", "-\t\t\"\t       ^^^^^^^^^\\n\" + ", "-\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in pkg\\\\X.java (at line 7)\\n\" + ", "-\t\t\"\t* @see PKG\\n\" + ", "-\t\t\"\t       ^^^\\n\" + ", "-\t\t\"Javadoc: PKG cannot be resolved to a type\\n\" + ", "-\t\t\"----------\\n\"", "-\t);", "-}", "+ */", "+public void testBug281609a() {", "+\trunNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"pkg/X.java\",", "+\t\t\t\"package pkg;\\n\" +", "+\t\t\t\"\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\t/**\\n\" +", "+\t\t\t\"\t * @see java\\n\" +", "+\t\t\t\"\t * @see java.lang\\n\" +", "+\t\t\t\"\t * @see PKG\\n\" +", "+\t\t\t\"\t * @see pkg\\n\" +", "+\t\t\t\"\t */\\n\" +", "+\t\t\t\"\tpublic void foo() { \\n\" +", "+\t\t\t\"\t \\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\t// warning - Tag @see: reference not found: PKG", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in pkg\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\t* @see PKG\\n\" + ", "+\t\t\"\t       ^^^\\n\" + ", "+\t\t\"Javadoc: PKG cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\"", "+\t);", "+}"]}], "num": 15667}