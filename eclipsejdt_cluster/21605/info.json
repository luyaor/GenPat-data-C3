{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abba1833834f0fefbdf3fc127734a66b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33a440c4060abcfa09a4c384e96a0bab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "e0c7ca1486f055788a44dc24293c246757983c36", "commitAfterChange": "fffe8da84c964b60e288768d8e57c80a69c56c45", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  public void testCompletionFindImport2() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFindImport2() throws JavaModelException", "diff": ["-\t\t\t\"PX[TYPE_REF]{pack1.PX;, pack1, Lpack1.PX;, null, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\"PX[TYPE_REF]{PX;, pack1, Lpack1.PX;, null, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57ea4a032d55b5bef3c571b7b36cc52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "66a271485e53960fadcfb4122ab242646dfbc65c", "commitAfterChange": "b9cade79e7bd9be5791a332a60b747e1e3ce5346", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void test0086_shortcut_boolean_expression()", "signatureAfterChange": " public void test0086_shortcut_boolean_expression()", "diff": ["-\t\t\t\"      return 1; // throw new NullPointerException();\\n\" + ", "+\t\t\t\"      return 1;\\n\" + ", "-\t\t\t\"      return j.intValue();\\n\" + // protected by returning if both i and j are null above", "+\t\t\t\"      return j.intValue();\\n\" +", "-\t\t\t\"      return i.intValue();\\n\" + // protected by returning if i == null above", "+\t\t\t\"      return i.intValue();\\n\" +"]}], "num": 21605}