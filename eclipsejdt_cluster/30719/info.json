{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29c4bef2100cee837a2a6825b8ad539a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f9c9a1a3019d729d878967dd94a1431", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectBinaryOutput.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprivate void deleteAllInContainer(IContainer container)", "signatureAfterChange": "\r private void deleteAllInContainer(IContainer container)", "diff": ["+ */\r", "+private void deleteAllInContainer(IContainer container) {\r", "+\ttry {\r", "+\t\tif (!container.exists())\r", "+\t\t\treturn;\r", "+\t\tIResource[] members = container.members(); \r", "+\t\tfor (int i = 0, max = members.length; i < max;i++) {\r", "+\t\t\tIResource resource = (IResource) members[i];\r", "+\t\t\tresource.delete(true, null);\r", "+\t} catch (CoreException e) {\r", "+}\r", "-\t */\r", "-\tprivate void deleteAllInContainer(IContainer container) {\r", "-\t\ttry {\r", "-\t\t\tif (!container.exists())\r", "-\t\t\t\treturn;\r", "-\t\t\tIResource[] members = container.members();\r", "-\t\t\tfor (int i = 0, max = members.length; i < max; i++) {\r", "-\t\t\t\tIResource resource = (IResource) members[i];\r", "-\t\t\t\tresource.delete(true, null);\r", "-\t\t\t}\r", "-\t\t} catch (CoreException e) {\r", "-\t\t\tthrow this.dc.internalException(e);\r", "-\t\t}\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c8e5b3bd6767bed29f289e905aa2e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private void injectAllTypesForTypeContainers(ICompilationUnit[] containers, Vector types)", "signatureAfterChange": "\r \tprivate void injectAllTypesForTypeContainers(\r \t\tICompilationUnit[] containers,\r \t\tArrayList types)", "diff": ["- */\r", "-private void injectAllTypesForTypeContainers(ICompilationUnit[] containers, Vector types) {\r", "-\ttry {\r", "-\t\tfor (int i = 0; i < containers.length; i++) {\r", "-\t\t\tICompilationUnit cu = containers[i];\r", "-\t\t\tIType[] cuTypes = cu.getAllTypes();\r", "-\t\t\tfor (int j = 0; j < cuTypes.length; j++) {\r", "-\t\t\t\ttypes.addElement(cuTypes[j]);\r", "+\t */\r", "+\tprivate void injectAllTypesForTypeContainers(\r", "+\t\tICompilationUnit[] containers,\r", "+\t\tArrayList types) {\r", "+\t\t\t\r", "+\t\ttry {\r", "+\t\t\tfor (int i = 0; i < containers.length; i++) {\r", "+\t\t\t\tICompilationUnit cu = containers[i];\r", "+\t\t\t\tIType[] cuTypes = cu.getAllTypes();\r", "+\t\t\t\tfor (int j = 0; j < cuTypes.length; j++) {\r", "+\t\t\t\t\ttypes.add(cuTypes[j]);\r", "+\t\t\t\t}\r", "+\t\t\t\tthis.worked(1);\r", "-\t\t\tthis.worked(1);\r", "+\t\t} catch (JavaModelException e) {\r", "-\t} catch (JavaModelException npe) {\r", "-}\r"]}], "num": 30719}