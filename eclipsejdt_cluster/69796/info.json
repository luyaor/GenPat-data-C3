{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f5bbfcbd71454ccf68b927109d7de8b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d14263b889ec83f0ed7a69fa0dfa67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r private void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["-\t}\r", "-\tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope) {\r", "-\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd);\r", "-\t\t// defaults... some nodes will change these\r", "-\t\tif (astNode instanceof CompletionOnFieldType) {\r", "-\t\t\tCompletionOnSingleTypeReference type =\r", "-\t\t\t\t(CompletionOnSingleTypeReference) ((CompletionOnFieldType) astNode).type;\r", "-\t\t\tchar[] token = type.token;\r", "-\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);\r", "-\t\t\t//\t\tfindKeywords(token, modifiers, scope); // could be the start of a field, method or member type\r", "-\t\t\tfindTypesAndPackages(token, scope);\r", "-\t\t} else\r", "-\t\t\tif (astNode instanceof CompletionOnSingleNameReference) {\r", "-\t\t\t\tchar[] token = ((CompletionOnSingleNameReference) astNode).token;\r", "-\t\t\t\tfindVariablesAndMethods(\r", "-\t\t\t\t\ttoken,\r", "-\t\t\t\t\tscope,\r", "-\t\t\t\t\t(CompletionOnSingleNameReference) astNode,\r", "-\t\t\t\t\tscope);\r", "-\t\t\t\tfindTypesAndPackages(token, scope);\r", "-\t\t\t\t// can be the start of a qualified type name\r", "-\t\t\t} else\r", "-\t\t\t\tif (astNode instanceof CompletionOnSingleTypeReference) {\r", "-\t\t\t\t\tchar[] token = ((CompletionOnSingleTypeReference) astNode).token;\r", "-\t\t\t\t\tif (qualifiedBinding == null)\r", "-\t\t\t\t\t\tfindTypesAndPackages(token, scope);\r", "-\t\t\t\t\t// can be the start of a qualified type name\r", "-\t\t\t\t\telse\r", "-\t\t\t\t\t\tfindMemberTypes(\r", "-\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\tscope.enclosingSourceType());\r", "-\t\t\t\t} else\r", "-\t\t\t\t\tif (astNode instanceof CompletionOnQualifiedNameReference) {\r", "-\t\t\t\t\t\tinsideQualifiedReference = true;\r", "-\t\t\t\t\t\tCompletionOnQualifiedNameReference ref =\r", "-\t\t\t\t\t\t\t(CompletionOnQualifiedNameReference) astNode;\r", "-\t\t\t\t\t\tchar[] token = ref.completionIdentifier;\r", "-\t\t\t\t\t\tlong completionPosition = ref.sourcePositions[ref.sourcePositions.length - 1];\r", "-\t\t\t\t\t\tif (qualifiedBinding instanceof VariableBinding) {\r", "-\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\tTypeBinding receiverType = ((VariableBinding) qualifiedBinding).type;\r", "-\t\t\t\t\t\t\tif (receiverType != null)\r", "-\t\t\t\t\t\t\t\tfindFieldsAndMethods(token, receiverType, scope, ref,scope);\r", "-\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding) {\r", "-\t\t\t\t\t\t\t\tReferenceBinding receiverType = (ReferenceBinding) qualifiedBinding;\r", "-\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\t\tfindMemberTypes(token, receiverType, scope, scope.enclosingSourceType());\r", "-\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\tfindFields(\r", "-\t\t\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t\t\treceiverType,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\t\t\t\tref,\r", "-\t\t\t\t\t\t\t\t\tscope);\r", "-\t\t\t\t\t\t\t\tfindMethods(\r", "-\t\t\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t\t\tnull,\r", "-\t\t\t\t\t\t\t\t\treceiverType,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\t\t\t\tfalse,\r", "-\t\t\t\t\t\t\t\t\tref);\r", "-\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof PackageBinding) {\r", "-\t\t\t\t\t\t\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition);\r", "-\t\t\t\t\t\t\t\t\t// replace to the end of the completion identifier\r", "-\t\t\t\t\t\t\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t} else\r", "-\t\t\t\t\t\tif (astNode instanceof CompletionOnQualifiedTypeReference) {\r", "-\t\t\t\t\t\t\tinsideQualifiedReference = true;\r", "-\t\t\t\t\t\t\tCompletionOnQualifiedTypeReference ref =\r", "-\t\t\t\t\t\t\t\t(CompletionOnQualifiedTypeReference) astNode;\r", "-\t\t\t\t\t\t\tchar[] token = ref.completionIdentifier;\r", "-\t\t\t\t\t\t\tlong completionPosition = ref.sourcePositions[ref.tokens.length];\r", "-\t\t\t\t\t\t\t// get the source positions of the completion identifier\r", "-\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding) {\r", "-\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\t\tfindMemberTypes(\r", "-\t\t\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\tscope.enclosingSourceType());\r", "-\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof PackageBinding) {\r", "-\t\t\t\t\t\t\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition);\r", "-\t\t\t\t\t\t\t\t\t// replace to the end of the completion identifier\r", "-\t\t\t\t\t\t\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\tif (astNode instanceof CompletionOnMemberAccess) {\r", "-\t\t\t\t\t\t\t\tCompletionOnMemberAccess access = (CompletionOnMemberAccess) astNode;\r", "-\t\t\t\t\t\t\t\tlong completionPosition = access.nameSourcePosition;\r", "-\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\t\tfindFieldsAndMethods(\r", "-\t\t\t\t\t\t\t\t\taccess.token,\r", "-\t\t\t\t\t\t\t\t\t(TypeBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\taccess,\r", "-\t\t\t\t\t\t\t\t\tscope);\r", "-\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnMessageSend) {\r", "-\t\t\t\t\t\t\t\t\tCompletionOnMessageSend messageSend = (CompletionOnMessageSend) astNode;\r", "-\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =\r", "-\t\t\t\t\t\t\t\t\t\tcomputeTypes(messageSend.arguments, (BlockScope) scope);\r", "-\t\t\t\t\t\t\t\t\tif (qualifiedBinding == null)\r", "-\t\t\t\t\t\t\t\t\t\tfindMessageSends(messageSend.selector, argTypes, scope, messageSend);\r", "-\t\t\t\t\t\t\t\t\telse\r", "-\t\t\t\t\t\t\t\t\t\tfindMethods(\r", "-\t\t\t\t\t\t\t\t\t\t\tmessageSend.selector,\r", "-\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\t\t\tfalse,\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\t\t\t\t\t\tmessageSend);\r", "-\t\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnExplicitConstructorCall) {\r", "-\t\t\t\t\t\t\t\t\t\tCompletionOnExplicitConstructorCall constructorCall =\r", "-\t\t\t\t\t\t\t\t\t\t\t(CompletionOnExplicitConstructorCall) astNode;\r", "-\t\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =\r", "-\t\t\t\t\t\t\t\t\t\t\tcomputeTypes(constructorCall.arguments, (BlockScope) scope);\r", "-\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "-\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\tconstructorCall);\r", "-\t\t\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnQualifiedAllocationExpression) {\r", "-\t\t\t\t\t\t\t\t\t\t\tCompletionOnQualifiedAllocationExpression allocExpression =\r", "-\t\t\t\t\t\t\t\t\t\t\t\t(CompletionOnQualifiedAllocationExpression) astNode;\r", "-\t\t\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =\r", "-\t\t\t\t\t\t\t\t\t\t\t\tcomputeTypes(allocExpression.arguments, (BlockScope) scope);\r", "-\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "-\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "-\t\t\t\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnClassLiteralAccess) {\r", "-\t\t\t\t\t\t\t\t\t\t\t\tchar[] token = ((CompletionOnClassLiteralAccess) astNode).completionIdentifier;\r", "-\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\t\t\t\t}\r", "-\t}\r", "+}\r", "+private void complete(AstNode astNode, Binding qualifiedBinding, Scope scope) {\r", "+\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd); // defaults... some nodes will change these\r", "+\r", "+\tif (astNode instanceof CompletionOnFieldType) {\r", "+\t\tCompletionOnSingleTypeReference type =\r", "+\t\t\t(CompletionOnSingleTypeReference) ((CompletionOnFieldType) astNode).type;\r", "+\t\tchar[] token = type.token;\r", "+\t\tsetSourceRange(type.sourceStart, type.sourceEnd);\r", "+//\t\tfindKeywords(token, modifiers, scope); // could be the start of a field, method or member type\r", "+\t\tfindTypesAndPackages(token, scope);\r", "+\t} else if (astNode instanceof CompletionOnSingleNameReference) {\r", "+\t\tchar[] token = ((CompletionOnSingleNameReference) astNode).token;\r", "+\t\tfindVariablesAndMethods(token, scope);\r", "+\t\tfindTypesAndPackages(token, scope); // can be the start of a qualified type name\r", "+\t} else if (astNode instanceof CompletionOnSingleTypeReference) {\r", "+\t\tchar[] token = ((CompletionOnSingleTypeReference) astNode).token;\r", "+\t\tif (qualifiedBinding == null)\r", "+\t\t\tfindTypesAndPackages(token, scope); // can be the start of a qualified type name\r", "+\t\telse\r", "+\t\t\tfindMemberTypes(token, (ReferenceBinding) qualifiedBinding, scope);\r", "+\t} else if (astNode instanceof CompletionOnQualifiedNameReference) {\r", "+\t\tinsideQualifiedReference = true;\r", "+\t\tCompletionOnQualifiedNameReference ref = (CompletionOnQualifiedNameReference) astNode;\r", "+\t\tchar[] token = ref.completionIdentifier;\r", "+\t\tlong completionPosition = ref.sourcePositions[ref.sourcePositions.length - 1];\r", "+\t\tif (qualifiedBinding instanceof VariableBinding) {\r", "+\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\t\tTypeBinding receiverType = ((VariableBinding) qualifiedBinding).type;\r", "+\t\t\tif (receiverType != null)\r", "+\t\t\t\tfindFieldsAndMethods(token, receiverType, scope);\r", "+\t\t} else if (qualifiedBinding instanceof ReferenceBinding) {\r", "+\t\t\tReferenceBinding receiverType = (ReferenceBinding) qualifiedBinding;\r", "+\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\t\tfindMemberTypes(token, receiverType, scope);\r", "+\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "+\t\t\tfindFields(token, receiverType, scope, new ObjectVector(), true);\r", "+\t\t\tfindMethods(token, null, receiverType, scope, new ObjectVector(), true, false);\r", "+\t\t} else if (qualifiedBinding instanceof PackageBinding) {\r", "+\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition); // replace to the end of the completion identifier\r", "+\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "+\t\t}\r", "+\t} else if (astNode instanceof CompletionOnQualifiedTypeReference) {\r", "+\t\tinsideQualifiedReference = true;\r", "+\t\tCompletionOnQualifiedTypeReference ref = (CompletionOnQualifiedTypeReference) astNode;\r", "+\t\tchar[] token = ref.completionIdentifier;\r", "+\t\tlong completionPosition = ref.sourcePositions[ref.tokens.length]; // get the source positions of the completion identifier\r", "+\t\tif (qualifiedBinding instanceof ReferenceBinding) {\r", "+\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\t\tfindMemberTypes(token, (ReferenceBinding) qualifiedBinding, scope);\r", "+\t\t} else if (qualifiedBinding instanceof PackageBinding) {\r", "+\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition); // replace to the end of the completion identifier\r", "+\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "+\t\t}\r", "+\t} else if (astNode instanceof CompletionOnMemberAccess) {\r", "+\t\tCompletionOnMemberAccess access = (CompletionOnMemberAccess) astNode;\r", "+\t\tlong completionPosition = access.nameSourcePosition;\r", "+\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\tfindFieldsAndMethods(access.token, (TypeBinding) qualifiedBinding, scope);\r", "+\t} else if (astNode instanceof CompletionOnMessageSend) {\r", "+\t\tCompletionOnMessageSend messageSend = (CompletionOnMessageSend) astNode;\r", "+\t\tTypeBinding[] argTypes = computeTypes(messageSend.arguments, (BlockScope) scope);\r", "+\t\tif (qualifiedBinding == null)\r", "+\t\t\tfindMessageSends(messageSend.selector, argTypes, scope);\r", "+\t\telse\r", "+\t\t\tfindMethods(messageSend.selector, argTypes, (ReferenceBinding) qualifiedBinding, scope, new ObjectVector(), false, true);\r", "+\t} else if (astNode instanceof CompletionOnExplicitConstructorCall) {\r", "+\t\tCompletionOnExplicitConstructorCall constructorCall = (CompletionOnExplicitConstructorCall) astNode;\r", "+\t\tTypeBinding[] argTypes = computeTypes(constructorCall.arguments, (BlockScope) scope);\r", "+\t\tfindConstructors((ReferenceBinding) qualifiedBinding, argTypes, scope);\r", "+\t} else if (astNode instanceof CompletionOnQualifiedAllocationExpression) {\r", "+\t\tCompletionOnQualifiedAllocationExpression allocExpression = (CompletionOnQualifiedAllocationExpression) astNode;\r", "+\t\tTypeBinding[] argTypes = computeTypes(allocExpression.arguments, (BlockScope) scope);\r", "+\t\tfindConstructors((ReferenceBinding) qualifiedBinding, argTypes, scope);\r", "+\t} else if (astNode instanceof CompletionOnClassLiteralAccess) {\r", "+\t\tchar[] token = ((CompletionOnClassLiteralAccess) astNode).completionIdentifier;\r", "+\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c41c9a662bc4af3c4aab57048c930c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r private void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["-\t}\r", "-\tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope) {\r", "-\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd);\r", "-\t\t// defaults... some nodes will change these\r", "-\t\tif (astNode instanceof CompletionOnFieldType) {\r", "-\t\t\tCompletionOnSingleTypeReference type =\r", "-\t\t\t\t(CompletionOnSingleTypeReference) ((CompletionOnFieldType) astNode).type;\r", "-\t\t\tchar[] token = type.token;\r", "-\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);\r", "-\t\t\t//\t\tfindKeywords(token, modifiers, scope); // could be the start of a field, method or member type\r", "-\t\t\tfindTypesAndPackages(token, scope);\r", "-\t\t} else\r", "-\t\t\tif (astNode instanceof CompletionOnSingleNameReference) {\r", "-\t\t\t\tchar[] token = ((CompletionOnSingleNameReference) astNode).token;\r", "-\t\t\t\tfindVariablesAndMethods(\r", "-\t\t\t\t\ttoken,\r", "-\t\t\t\t\tscope,\r", "-\t\t\t\t\t(CompletionOnSingleNameReference) astNode,\r", "-\t\t\t\t\tscope);\r", "-\t\t\t\tfindTypesAndPackages(token, scope);\r", "-\t\t\t\t// can be the start of a qualified type name\r", "-\t\t\t} else\r", "-\t\t\t\tif (astNode instanceof CompletionOnSingleTypeReference) {\r", "-\t\t\t\t\tchar[] token = ((CompletionOnSingleTypeReference) astNode).token;\r", "-\t\t\t\t\tif (qualifiedBinding == null)\r", "-\t\t\t\t\t\tfindTypesAndPackages(token, scope);\r", "-\t\t\t\t\t// can be the start of a qualified type name\r", "-\t\t\t\t\telse\r", "-\t\t\t\t\t\tfindMemberTypes(\r", "-\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\tscope.enclosingSourceType());\r", "-\t\t\t\t} else\r", "-\t\t\t\t\tif (astNode instanceof CompletionOnQualifiedNameReference) {\r", "-\t\t\t\t\t\tinsideQualifiedReference = true;\r", "-\t\t\t\t\t\tCompletionOnQualifiedNameReference ref =\r", "-\t\t\t\t\t\t\t(CompletionOnQualifiedNameReference) astNode;\r", "-\t\t\t\t\t\tchar[] token = ref.completionIdentifier;\r", "-\t\t\t\t\t\tlong completionPosition = ref.sourcePositions[ref.sourcePositions.length - 1];\r", "-\t\t\t\t\t\tif (qualifiedBinding instanceof VariableBinding) {\r", "-\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\tTypeBinding receiverType = ((VariableBinding) qualifiedBinding).type;\r", "-\t\t\t\t\t\t\tif (receiverType != null)\r", "-\t\t\t\t\t\t\t\tfindFieldsAndMethods(token, receiverType, scope, ref,scope);\r", "-\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding) {\r", "-\t\t\t\t\t\t\t\tReferenceBinding receiverType = (ReferenceBinding) qualifiedBinding;\r", "-\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\t\tfindMemberTypes(token, receiverType, scope, scope.enclosingSourceType());\r", "-\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\tfindFields(\r", "-\t\t\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t\t\treceiverType,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\t\t\t\tref,\r", "-\t\t\t\t\t\t\t\t\tscope);\r", "-\t\t\t\t\t\t\t\tfindMethods(\r", "-\t\t\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t\t\tnull,\r", "-\t\t\t\t\t\t\t\t\treceiverType,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\t\t\t\tfalse,\r", "-\t\t\t\t\t\t\t\t\tref);\r", "-\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof PackageBinding) {\r", "-\t\t\t\t\t\t\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition);\r", "-\t\t\t\t\t\t\t\t\t// replace to the end of the completion identifier\r", "-\t\t\t\t\t\t\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t} else\r", "-\t\t\t\t\t\tif (astNode instanceof CompletionOnQualifiedTypeReference) {\r", "-\t\t\t\t\t\t\tinsideQualifiedReference = true;\r", "-\t\t\t\t\t\t\tCompletionOnQualifiedTypeReference ref =\r", "-\t\t\t\t\t\t\t\t(CompletionOnQualifiedTypeReference) astNode;\r", "-\t\t\t\t\t\t\tchar[] token = ref.completionIdentifier;\r", "-\t\t\t\t\t\t\tlong completionPosition = ref.sourcePositions[ref.tokens.length];\r", "-\t\t\t\t\t\t\t// get the source positions of the completion identifier\r", "-\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding) {\r", "-\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\t\tfindMemberTypes(\r", "-\t\t\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\tscope.enclosingSourceType());\r", "-\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof PackageBinding) {\r", "-\t\t\t\t\t\t\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition);\r", "-\t\t\t\t\t\t\t\t\t// replace to the end of the completion identifier\r", "-\t\t\t\t\t\t\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\tif (astNode instanceof CompletionOnMemberAccess) {\r", "-\t\t\t\t\t\t\t\tCompletionOnMemberAccess access = (CompletionOnMemberAccess) astNode;\r", "-\t\t\t\t\t\t\t\tlong completionPosition = access.nameSourcePosition;\r", "-\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "-\t\t\t\t\t\t\t\tfindFieldsAndMethods(\r", "-\t\t\t\t\t\t\t\t\taccess.token,\r", "-\t\t\t\t\t\t\t\t\t(TypeBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\taccess,\r", "-\t\t\t\t\t\t\t\t\tscope);\r", "-\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnMessageSend) {\r", "-\t\t\t\t\t\t\t\t\tCompletionOnMessageSend messageSend = (CompletionOnMessageSend) astNode;\r", "-\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =\r", "-\t\t\t\t\t\t\t\t\t\tcomputeTypes(messageSend.arguments, (BlockScope) scope);\r", "-\t\t\t\t\t\t\t\t\tif (qualifiedBinding == null)\r", "-\t\t\t\t\t\t\t\t\t\tfindMessageSends(messageSend.selector, argTypes, scope, messageSend);\r", "-\t\t\t\t\t\t\t\t\telse\r", "-\t\t\t\t\t\t\t\t\t\tfindMethods(\r", "-\t\t\t\t\t\t\t\t\t\t\tmessageSend.selector,\r", "-\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),\r", "-\t\t\t\t\t\t\t\t\t\t\tfalse,\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\t\t\t\t\t\tmessageSend);\r", "-\t\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnExplicitConstructorCall) {\r", "-\t\t\t\t\t\t\t\t\t\tCompletionOnExplicitConstructorCall constructorCall =\r", "-\t\t\t\t\t\t\t\t\t\t\t(CompletionOnExplicitConstructorCall) astNode;\r", "-\t\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =\r", "-\t\t\t\t\t\t\t\t\t\t\tcomputeTypes(constructorCall.arguments, (BlockScope) scope);\r", "-\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "-\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\tconstructorCall);\r", "-\t\t\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnQualifiedAllocationExpression) {\r", "-\t\t\t\t\t\t\t\t\t\t\tCompletionOnQualifiedAllocationExpression allocExpression =\r", "-\t\t\t\t\t\t\t\t\t\t\t\t(CompletionOnQualifiedAllocationExpression) astNode;\r", "-\t\t\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =\r", "-\t\t\t\t\t\t\t\t\t\t\t\tcomputeTypes(allocExpression.arguments, (BlockScope) scope);\r", "-\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "-\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "-\t\t\t\t\t\t\t\t\t\t} else\r", "-\t\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnClassLiteralAccess) {\r", "-\t\t\t\t\t\t\t\t\t\t\t\tchar[] token = ((CompletionOnClassLiteralAccess) astNode).completionIdentifier;\r", "-\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\t\t\t\t}\r", "-\t}\r", "+}\r", "+private void complete(AstNode astNode, Binding qualifiedBinding, Scope scope) {\r", "+\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd); // defaults... some nodes will change these\r", "+\r", "+\tif (astNode instanceof CompletionOnFieldType) {\r", "+\t\tCompletionOnSingleTypeReference type =\r", "+\t\t\t(CompletionOnSingleTypeReference) ((CompletionOnFieldType) astNode).type;\r", "+\t\tchar[] token = type.token;\r", "+\t\tsetSourceRange(type.sourceStart, type.sourceEnd);\r", "+//\t\tfindKeywords(token, modifiers, scope); // could be the start of a field, method or member type\r", "+\t\tfindTypesAndPackages(token, scope);\r", "+\t} else if (astNode instanceof CompletionOnSingleNameReference) {\r", "+\t\tchar[] token = ((CompletionOnSingleNameReference) astNode).token;\r", "+\t\tfindVariablesAndMethods(token, scope);\r", "+\t\tfindTypesAndPackages(token, scope); // can be the start of a qualified type name\r", "+\t} else if (astNode instanceof CompletionOnSingleTypeReference) {\r", "+\t\tchar[] token = ((CompletionOnSingleTypeReference) astNode).token;\r", "+\t\tif (qualifiedBinding == null)\r", "+\t\t\tfindTypesAndPackages(token, scope); // can be the start of a qualified type name\r", "+\t\telse\r", "+\t\t\tfindMemberTypes(token, (ReferenceBinding) qualifiedBinding, scope);\r", "+\t} else if (astNode instanceof CompletionOnQualifiedNameReference) {\r", "+\t\tinsideQualifiedReference = true;\r", "+\t\tCompletionOnQualifiedNameReference ref = (CompletionOnQualifiedNameReference) astNode;\r", "+\t\tchar[] token = ref.completionIdentifier;\r", "+\t\tlong completionPosition = ref.sourcePositions[ref.sourcePositions.length - 1];\r", "+\t\tif (qualifiedBinding instanceof VariableBinding) {\r", "+\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\t\tTypeBinding receiverType = ((VariableBinding) qualifiedBinding).type;\r", "+\t\t\tif (receiverType != null)\r", "+\t\t\t\tfindFieldsAndMethods(token, receiverType, scope);\r", "+\t\t} else if (qualifiedBinding instanceof ReferenceBinding) {\r", "+\t\t\tReferenceBinding receiverType = (ReferenceBinding) qualifiedBinding;\r", "+\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\t\tfindMemberTypes(token, receiverType, scope);\r", "+\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "+\t\t\tfindFields(token, receiverType, scope, new ObjectVector(), true);\r", "+\t\t\tfindMethods(token, null, receiverType, scope, new ObjectVector(), true, false);\r", "+\t\t} else if (qualifiedBinding instanceof PackageBinding) {\r", "+\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition); // replace to the end of the completion identifier\r", "+\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "+\t\t}\r", "+\t} else if (astNode instanceof CompletionOnQualifiedTypeReference) {\r", "+\t\tinsideQualifiedReference = true;\r", "+\t\tCompletionOnQualifiedTypeReference ref = (CompletionOnQualifiedTypeReference) astNode;\r", "+\t\tchar[] token = ref.completionIdentifier;\r", "+\t\tlong completionPosition = ref.sourcePositions[ref.tokens.length]; // get the source positions of the completion identifier\r", "+\t\tif (qualifiedBinding instanceof ReferenceBinding) {\r", "+\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\t\tfindMemberTypes(token, (ReferenceBinding) qualifiedBinding, scope);\r", "+\t\t} else if (qualifiedBinding instanceof PackageBinding) {\r", "+\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition); // replace to the end of the completion identifier\r", "+\t\t\tfindTypesAndSubpackages(token, (PackageBinding) qualifiedBinding);\r", "+\t\t}\r", "+\t} else if (astNode instanceof CompletionOnMemberAccess) {\r", "+\t\tCompletionOnMemberAccess access = (CompletionOnMemberAccess) astNode;\r", "+\t\tlong completionPosition = access.nameSourcePosition;\r", "+\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);\r", "+\t\tfindFieldsAndMethods(access.token, (TypeBinding) qualifiedBinding, scope);\r", "+\t} else if (astNode instanceof CompletionOnMessageSend) {\r", "+\t\tCompletionOnMessageSend messageSend = (CompletionOnMessageSend) astNode;\r", "+\t\tTypeBinding[] argTypes = computeTypes(messageSend.arguments, (BlockScope) scope);\r", "+\t\tif (qualifiedBinding == null)\r", "+\t\t\tfindMessageSends(messageSend.selector, argTypes, scope);\r", "+\t\telse\r", "+\t\t\tfindMethods(messageSend.selector, argTypes, (ReferenceBinding) qualifiedBinding, scope, new ObjectVector(), false, true);\r", "+\t} else if (astNode instanceof CompletionOnExplicitConstructorCall) {\r", "+\t\tCompletionOnExplicitConstructorCall constructorCall = (CompletionOnExplicitConstructorCall) astNode;\r", "+\t\tTypeBinding[] argTypes = computeTypes(constructorCall.arguments, (BlockScope) scope);\r", "+\t\tfindConstructors((ReferenceBinding) qualifiedBinding, argTypes, scope);\r", "+\t} else if (astNode instanceof CompletionOnQualifiedAllocationExpression) {\r", "+\t\tCompletionOnQualifiedAllocationExpression allocExpression = (CompletionOnQualifiedAllocationExpression) astNode;\r", "+\t\tTypeBinding[] argTypes = computeTypes(allocExpression.arguments, (BlockScope) scope);\r", "+\t\tfindConstructors((ReferenceBinding) qualifiedBinding, argTypes, scope);\r", "+\t} else if (astNode instanceof CompletionOnClassLiteralAccess) {\r", "+\t\tchar[] token = ((CompletionOnClassLiteralAccess) astNode).completionIdentifier;\r", "+\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "+\t}\r", "+}\r"]}], "num": 69796}