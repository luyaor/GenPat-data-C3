{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f29dbc0e5bd31c71f4f5b4336fde6f13", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd7b538a6c8770e65716fc622a258de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "db2c76d90d6b163f0fa3558913a11bde2fa51924", "commitAfterChange": "b0fd51e068e805a576f7259ee31415e98af7549d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void recordInitializationStartPC(int pc)", "signatureAfterChange": "  \tpublic void recordInitializationStartPC(int pc)", "diff": ["-\t\tif (this.initializationPCs == null) \treturn;", "+\t\tif (this.initializationPCs == null) {", "+\t\t\treturn;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "303960a07ed9ed0f2d365449cdf79433", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "3713e09eba9f685830154e0115a35b3f423e4800", "commitAfterChange": "b643998b38b3ce66cb5be62319a6d11497b1841e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (this.validValuePositions == -1) {", "-\t\t\t\t\t\t\t\tif (this.invalidValuePositions != -1) {", "-\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, (int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (valid) {", "-\t\t\t\t\t\t\t\t\tthis.validValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "-\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = -1;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\t\tif (this.validValuePositions == -1) {", "+\t\t\t\t\t\t\t\t\tif (this.invalidValuePositions != -1) {", "+\t\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, (int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tif (valid) {", "+\t\t\t\t\t\t\t\t\t\tthis.validValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = -1;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3693411e971754825cbeeecc2cd394", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "0926f8224af442af001e56062ed4e4b1654d4df9", "commitAfterChange": "9896f986021f515bc2f4e05fcf4279f0a51fdae6", "methodNumberBeforeChange": 334, "methodNumberAfterChange": 334, "signatureBeforeChange": " \tpublic void test0687() throws JavaModelException", "signatureAfterChange": " \tpublic void test0687() throws JavaModelException", "diff": ["-\t\t\tif (workingCopy != null)", "+\t\t\tif (workingCopy != null) {", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428714c346dae908e5a355dbba958186", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \r public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+ */ \r", "+public void generateCode(BlockScope currentScope, CodeStream codeStream) {\r", "+\r", "+\tif ((bits & IsReachableMASK) == 0) {\r", "+\t\treturn;\r", "+\tint pc = codeStream.position;\r", "+\texception.generateCode(currentScope, codeStream, true);\r", "+\tcodeStream.athrow();\r", "+\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\r", "+}\r", "-\t */\r", "-\tpublic void generateCode(BlockScope currentScope, CodeStream codeStream) {\r", "-\r", "-\t\tif ((bits & IsReachableMASK) == 0)\r", "-\t\t\treturn;\r", "-\t\tint pc = codeStream.position;\r", "-\t\texception.generateCode(currentScope, codeStream, true);\r", "-\t\tcodeStream.athrow();\r", "-\t\tcodeStream.recordPositionsFrom(pc, this);\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7369cb4055863e6488bb3f717de46628", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "160d21b2b94d157fab5dde01db5f3d2d3d807918", "commitAfterChange": "0d8ca64730552aee65d20ec58c4bd840971b7de0", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tprotected void setRawClasspath0(IClasspathEntry[] rawEntries) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected void setRawClasspath0(IClasspathEntry[] rawEntries) \t\tthrows JavaModelException", "diff": ["+\t\t\t} else {", "+\t\t\t\tinfo.classpath = rawEntries;", "+\t\t\t", "-\t\t\tinfo.classpath = rawEntries;", "-\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2510690527808a1c684c166200445dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic boolean match(ExtraDimension node, Object other)", "signatureAfterChange": " \tpublic boolean match(ExtraDimension node, Object other)", "diff": ["-\t */", "-\tpublic boolean match(ExtraDimension node, Object other) {", "-\t\tif (!(other instanceof ExtraDimension))", "-\t\t\treturn false;", "-\t\tExtraDimension o = (ExtraDimension) other;", "-\t\treturn safeSubtreeListMatch(node.annotations(), o.annotations());", "+\t */", "+\tpublic boolean match(ExtraDimension node, Object other) {", "+\t\tif (!(other instanceof ExtraDimension)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tExtraDimension o = (ExtraDimension) other;", "+\t\treturn safeSubtreeListMatch(node.annotations(), o.annotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ee064a62b21144e29a297c7c02c0f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "39787fb323b3f06bf37a085118b28347f6a17b39", "commitAfterChange": "0cc61e9905c3f603dab789f6a44abfa63094212c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void generateStoreSaveValueIfNecessary(CodeStream codeStream)", "signatureAfterChange": "  public void generateStoreSaveValueIfNecessary(CodeStream codeStream)", "diff": ["-\tif (this.saveValueVariable != null) codeStream.store(this.saveValueVariable, false);", "+\tif (this.saveValueVariable != null) {", "+\t\tcodeStream.store(this.saveValueVariable, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5846fe211707f18024d8fbe4973878b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6d2d6e9bfd1e325674faee63a94dea6dbcdc53df", "commitAfterChange": "11485ee06e6b525970c47a5d04dca44f93a50e26", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\t\tif (!javaElement.exists()) System.out.println(\"\\t\\tWARNING: this element does NOT exist!\"); //$NON-NLS-1$", "+\t\t\tif (!javaElement.exists()) {", "+\t\t\t\tSystem.out.println(\"\\t\\tWARNING: this element does NOT exist!\"); //$NON-NLS-1$", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7bbd3a7bfe57e535a585f421a0c1941", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\tif (type.isArrayType())", "+\t\tif (type.isArrayType()) {", "+\t\t}", "-\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 &&"]}], "num": 36983}