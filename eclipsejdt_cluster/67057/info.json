{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac3b8551c5abd75cca02d08c5579eec6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9274ba5ffdb3c521036e02ee2a086578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "ff1eb602a8aea39b1e15b206441aadf76bfaa984", "commitAfterChange": "dc5ee42cb3e5694c60c3a1f62c20766cb3cb2274", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void test0049()", "signatureAfterChange": " public void test0049()", "diff": ["+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "+\t\t\"\t              ^^\\n\" + ", "+\t\t\"The attribute value is undefined for the annotation type MyAnn\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "+\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\"The public type Test must be defined in its own file\\n\" + ", "+\t\t\"\t              ^^\\n\" + ", "+\t\t\"The attribute value is undefined for the annotation type MyAnn\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "-\t\t\"Syntax error on token \\\",\\\", / expected\\n\" + ", "+\t\t\"Syntax error on token \\\",\\\", < expected\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "+\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\"The public type Test must be defined in its own file\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c3527648e45b4bb2896a542d429823", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 299, "signatureBeforeChange": " \tpublic void test295()", "signatureAfterChange": " \tpublic void test295()", "diff": ["-\t\t\t\"2. ERROR in C.java (at line 4)\\n\" + ", "+\t\t\t\"2. WARNING in C.java (at line 4)\\n\" + ", "+\t\t\t\"\tnew B().start().get(new B().start()).get(new B().start());\\n\" + ", "+\t\t\t\"\t    ^\\n\" + ", "+\t\t\t\"Type safety: B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in C.java (at line 4)\\n\" + ", "+\t\t\t\"\tnew B().start().get(new B().start()).get(new B().start());\\n\" + ", "+\t\t\t\"\t                        ^\\n\" + ", "+\t\t\t\"Type safety: B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in C.java (at line 4)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in C.java (at line 4)\\n\" + ", "+\t\t\t\"\tnew B().start().get(new B().start()).get(new B().start());\\n\" + ", "+\t\t\t\"\t                                             ^\\n\" + ", "+\t\t\t\"Type safety: B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in B.java (at line 3)\\n\" + ", "+\t\t\t\"\tB<B<D>> start() { return null; }\\n\" + ", "+\t\t\t\"\t    ^\\n\" + ", "+\t\t\t\"Type safety: D is a raw type. References to generic type D<Y> should be parameterized\\n\" + "]}], "num": 67057}