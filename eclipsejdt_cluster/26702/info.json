{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2734afda3935db980b3502c04865b2b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0145ec04624837c39c491d9bdb1b2659", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "3973964fa15a8c49d459282ce0d949753f7e2224", "commitAfterChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public static synchronized String getString(IJavaProject jproject, String optionName)", "signatureAfterChange": "     public static String getString(IJavaProject jproject, String optionName)", "diff": ["-    public static synchronized String getString(IJavaProject jproject, String optionName) {", "-\t\treturn getOptions(jproject).get(optionName);", "+    public static String getString(IJavaProject jproject, String optionName) {", "+\t\tIPreferencesService service = Platform.getPreferencesService();", "+\t\t// Don't need to do this, because it's the default-default already:", "+\t\t//service.setDefaultLookupOrder(AptPlugin.PLUGIN_ID, null, lookupOrder);", "+\t\tProjectScope projScope = new ProjectScope(jproject.getProject());", "+\t\tIScopeContext[] contexts = new IScopeContext[] { projScope };", "+\t\treturn service.getString(", "+\t\t\t\tAptPlugin.PLUGIN_ID, ", "+\t\t\t\toptionName, ", "+\t\t\t\tAptPreferenceConstants.DEFAULT_OPTIONS_MAP.get(optionName), ", "+\t\t\t\tcontexts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe5ec5e27474bfca75aef4feef8e06f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "3973964fa15a8c49d459282ce0d949753f7e2224", "commitAfterChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate static synchronized boolean getBoolean(IJavaProject jproject, String optionName)", "signatureAfterChange": " \t \tprivate static boolean getBoolean(IJavaProject jproject, String optionName)", "diff": ["-\tprivate static synchronized boolean getBoolean(IJavaProject jproject, String optionName) {", "-\t\treturn \"true\".equals(getOptions(jproject).get(optionName)); //$NON-NLS-1$", "-\t}", "+\tprivate static boolean getBoolean(IJavaProject jproject, String optionName) {", "+", "+\t\tProjectScope projScope = new ProjectScope(jproject.getProject());", "+\t\treturn service.getBoolean(", "+\t\t\t\tAptPlugin.PLUGIN_ID, ", "+\t\t\t\toptionName, ", "+\t\t\t\tBoolean.parseBoolean(AptPreferenceConstants.DEFAULT_OPTIONS_MAP.get(optionName)),  ", "+\t\t\t\tcontexts);"]}], "num": 26702}