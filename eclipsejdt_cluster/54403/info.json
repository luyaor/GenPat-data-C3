{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfc781756c4283e9b961748e5a7d07ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8103c0858a7f6fd67572fbbe275c82a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic Type getElementType()", "signatureAfterChange": " \tpublic Type getElementType()", "diff": ["-\t\tType t = getComponentType();", "-\t\twhile (t.isArrayType()) {", "-\t\t\tt = ((ArrayType) t).getComponentType();", "+\t\tif (this.ast.apiLevel() < AST.JLS8) {", "+\t\t\tType t = getComponentType();", "+\t\t\twhile (t.isArrayType()) {", "+\t\t\t\tt = ((ArrayType) t).getComponentType();", "+\t\t\t}", "+\t\t\treturn t;", "-\t\treturn t;", "+\t\treturn internalGetComponentType(ELEMENT_TYPE_PROPERTY);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a3df20e5d0d1aefe84557bd896d69c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "8f40b18693d984d1b3346925dd24dfb773855585", "commitAfterChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected IType getHandle(IGenericType genericType)", "signatureAfterChange": " \tprotected IType getHandle(IGenericType genericType)", "diff": ["-\t\tif (genericType.isBinaryType()) {", "+\t\tif (genericType instanceof HierarchyType) {", "+\t\t\tIType handle = (IType)this.infoToHandle.get(genericType);", "+\t\t\tif (handle == null) {", "+\t\t\t\thandle = ((HierarchyType)genericType).typeHandle;", "+\t\t\t\tthis.infoToHandle.put(genericType, handle);", "+\t\t\t}", "+\t\t\treturn handle;", "+\t\t} else if (genericType.isBinaryType()) {"]}], "num": 54403}