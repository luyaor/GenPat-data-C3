{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7423d69de8afb859eb403c551a1a09f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e64efef6c32a08a7ee63fdf2707534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "5c2dc76a8d3cf16dded8b483e956ad365692fb92", "commitAfterChange": "80b471fd651d608d69202a61f08b90dcc23280d3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic TypeBinding bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\t\tif (localExists && (this.bits & ASTNode.ShadowsOuterLocal) != 0 && scope.isLambdaSubscope()) {", "-\t\t\t\tscope.problemReporter().lambdaRedeclaresArgument(this);", "-\t\t\t} else if (localExists && this.hiddenVariableDepth == 0) {", "-\t\t\t\tscope.problemReporter().redefineArgument(this);", "+\t\t\tif (localExists && this.hiddenVariableDepth == 0) {", "+\t\t\t\tif ((this.bits & ASTNode.ShadowsOuterLocal) != 0 && scope.isLambdaSubscope()) {", "+\t\t\t\t\tscope.problemReporter().lambdaRedeclaresArgument(this);", "+\t\t\t\t} else {", "+\t\t\t\t\tscope.problemReporter().redefineArgument(this);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a83857f356926acb5bb9abf299724fb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "d32dbe370312bc68ef5b59c6268bfdfcda839b17", "commitAfterChange": "4b84620f8d71e6de7e42a2050aa5360e2143f846", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\t\tif (existingVariable instanceof LocalVariableBinding && this.hiddenVariableDepth == 0) {", "+\t\t\tfinal boolean localExists = existingVariable instanceof LocalVariableBinding;", "+\t\t\tif (localExists && (this.bits & ASTNode.ShadowsOuterLocal) != 0 && scope.isLambdaSubscope()) {", "+\t\t\t\tscope.problemReporter().lambdaRedeclaresArgument(this);", "+\t\t\t} else if (localExists && this.hiddenVariableDepth == 0) {"]}], "num": 63452}