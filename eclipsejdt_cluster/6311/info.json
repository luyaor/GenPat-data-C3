{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13017d9bf5e488138cea44a9ea2dc734", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1e7a2c203617225c2e852d6952f4c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "ccdb04bf59b9b690898966f6b949adbc1350afcb", "commitAfterChange": "bd3a3cad1ce734989fe638578b24f55571172fd2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic Hashtable getExternalLibTimeStamps()", "signatureAfterChange": " \t \tpublic Hashtable getExternalLibTimeStamps()", "diff": ["-\t\t\tthis.externalTimeStamps = new Hashtable();", "-\t\t\tFile timestamps = getTimeStampsFile();", "+\t\t\tHashtable timeStamps = new Hashtable();", "+\t\t\tFile timestampsFile = getTimeStampsFile();", "-\t\t\t\tin = new DataInputStream(new BufferedInputStream(new FileInputStream(timestamps)));", "+\t\t\t\tin = new DataInputStream(new BufferedInputStream(new FileInputStream(timestampsFile)));", "-\t\t\t\t\tthis.externalTimeStamps.put(Path.fromPortableString(key), new Long(timestamp));", "+\t\t\t\t\ttimeStamps.put(Path.fromPortableString(key), new Long(timestamp));", "-\t\t\t\tif (timestamps.exists())", "+\t\t\t\tif (timestampsFile.exists())", "+\t\t\tthis.externalTimeStamps = timeStamps;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a985422be0b500768b70f633e7b57e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2193765f6a14f1428523dab68858768ca623c9d3", "commitAfterChange": "5450463d69e66bedc3d0797b782f5dab3b9072d6", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 154, "signatureBeforeChange": " \t \tprivate Set loadNonChainingJarsCache()", "signatureAfterChange": " \t \tprivate Set loadClasspathListCache(String cacheName)", "diff": ["-\tprivate Set loadNonChainingJarsCache() {", "-\t\tSet nonChainingJarsCache = new HashSet();", "-\t\tFile nonChainingJarsFile = getNonChainingJarsFile();", "+\tprivate Set loadClasspathListCache(String cacheName) {", "+\t\tSet pathCache = new HashSet();", "+\t\tFile cacheFile = getClasspathListFile(cacheName);", "-\t\t\tin = new DataInputStream(new BufferedInputStream(new FileInputStream(nonChainingJarsFile)));", "+\t\t\tin = new DataInputStream(new BufferedInputStream(new FileInputStream(cacheFile)));", "-\t\t\t\tnonChainingJarsCache.add(Path.fromPortableString(path));", "+\t\t\t\tpathCache.add(Path.fromPortableString(path));", "-\t\t\tif (nonChainingJarsFile.exists())", "+\t\t\tif (cacheFile.exists())", "-\t\treturn Collections.synchronizedSet(nonChainingJarsCache);", "+\t\treturn Collections.synchronizedSet(pathCache);"]}], "num": 6311}