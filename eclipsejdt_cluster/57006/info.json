{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "328d952a14d05452a4ef28ba0f39a2dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "588ac2a84ee27ea3945fe9e3848c90a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleNameReference.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tLocalVariableBinding variableBinding = scope.findVariable(token);", "+\t\tLocalVariableBinding variableBinding = scope.findVariable(this.token);", "-\t\tscope.problemReporter().javadocInvalidParamName(this, false);", "+\t\ttry {", "+\t\t\tMethodScope methScope = (MethodScope) scope;", "+\t\t\tscope.problemReporter().javadocInvalidParamName(this, methScope.referenceMethod().modifiers);", "+\t\t}", "+\t\tcatch (Exception e) {", "+\t\t\tscope.problemReporter().javadocInvalidParamName(this, -1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea82f94ae3575bf7270aa3eb12a3d075", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b23efdb186bab86ee31b58ab278fa9a0bc22ac6e", "commitAfterChange": "d1672c4973b4d066327f254ca8486bc25c95661d", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " \tpublic boolean visit(ThrowStatement node)", "signatureAfterChange": " \tpublic boolean visit(ThrowStatement node)", "diff": ["-\t\trewriteRequiredNode(node, ThrowStatement.EXPRESSION_PROPERTY);\t\t", "+\t\ttry {", "+\t\t\tint offset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNamethrow, node.getStartPosition());", "+\t\t\tensureSpaceBeforeReplace(node, ThrowStatement.EXPRESSION_PROPERTY, offset, 0);", "+\t\t\t", "+\t\t\trewriteRequiredNode(node, ThrowStatement.EXPRESSION_PROPERTY);", "+\t\t} catch (CoreException e) {", "+\t\t\thandleException(e);", "+\t\t}"]}], "num": 57006}