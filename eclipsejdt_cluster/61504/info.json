{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "575d08b75a4d8abe5ae697f9f86ed3d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ab03cca2da07ab470c6aacc46e1813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "78c62e3a4157070f714848f4de312a55f14f5144", "commitAfterChange": "fb48e11da0ebe84c63fab7b3cb5afd39c0ba6101", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, int kind)", "signatureAfterChange": "  public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int kind)", "diff": ["-public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, int kind) {", "+public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int kind) {", "+\tif (genericType == null) // pseudo wildcard denoting composite bounds for lub computation", "+\t\tgenericType = ReferenceBinding.LUB_GENERIC;", "+\t\t\t    if (cachedType.otherBounds != otherBounds) {", "+\t\t\t    \tint cachedLength = cachedType.otherBounds == null ? 0 : cachedType.otherBounds.length;", "+\t\t\t    \tint length = otherBounds == null ? 0 : otherBounds.length;", "+\t\t\t    \tif (cachedLength != length) continue nextCachedType;", "+\t\t\t    \tfor (int j = 0; j < length; j++) {", "+\t\t\t    \t\tif (cachedType.otherBounds[j] != otherBounds[j]) continue nextCachedType;", "+\t\t\t    \t}", "+\t\t\t    }", "-\tWildcardBinding wildcard = new WildcardBinding(genericType, rank, bound, kind, this);", "+\tWildcardBinding wildcard = new WildcardBinding(genericType, rank, bound, otherBounds, kind, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bd4be5cd33943e4a878ad1686dd87e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePairBinding.java", "commitBeforeChange": "f16dd04d587b8e1f3024d7d526e9df3f56508d6d", "commitAfterChange": "200a72c26c52eaf559c601781ddfbb997711dd26", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic boolean isEqualTo(IBinding binding)", "signatureAfterChange": "  \tpublic boolean isEqualTo(IBinding binding)", "diff": ["-\t\tIMemberValuePairBinding other = (IMemberValuePairBinding) binding;", "-\t\tif (!getMethodBinding().isEqualTo(other.getMethodBinding())) {", "+\t\tIMemberValuePairBinding otherMemberValuePairBinding = (IMemberValuePairBinding) binding;", "+\t\tif (!getMethodBinding().isEqualTo(otherMemberValuePairBinding.getMethodBinding())) {", "-\t\tObject otherValue = other.getValue();", "+\t\tObject otherValue = otherMemberValuePairBinding.getValue();", "-\t\treturn currentValue.equals(otherValue);", "+\t\tif (currentValue.getClass().isArray()) {", "+\t\t\tif (!otherValue.getClass().isArray()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tObject[] currentValues = (Object[]) currentValue;", "+\t\t\tObject[] otherValues = (Object[]) otherValue;", "+\t\t\tfinal int length = currentValues.length;", "+\t\t\tif (length != otherValues.length) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tObject current = currentValues[i];", "+\t\t\t\tObject other = otherValues[i];", "+\t\t\t\tif (current instanceof IBinding) {", "+\t\t\t\t\tif (!(other instanceof IBinding)) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (!((IBinding) current).isEqualTo((IBinding) other)) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (!current.equals(other)) {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn true;", "+\t\t} else {", "+\t\t\treturn currentValue.equals(otherValue);", "+\t\t}"]}], "num": 61504}