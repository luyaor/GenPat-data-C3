{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72301c36ddc1f11c42a45d63428356c2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0de6574c9cab68ce466c6474a92095", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 208, "signatureBeforeChange": " \tpublic void test0240_for_continue_break()", "signatureAfterChange": " public void test0720_for_continue_break()", "diff": ["-\t// null analysis -- for", "-\tpublic void test0240_for_continue_break() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t   Object o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t for (int i = 0; i < 10; i++) {\\n\" + ", "-\t\t\t\t\"\t\t   if (o == null) {\\n\" + // complain: o cannot be null", "-\t\t\t\t\"\t\t     continue;\\n\" + ", "-\t\t\t\t\"\t\t   }\\n\" + ", "-\t\t\t\t\"\t\t   o = null;\\n\" + ", "-\t\t\t\t\"\t\t   break;\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-\t}", "+// null analysis -- for", "+public void test0720_for_continue_break() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t  \"public class X {\\n\" + ", "+\t\t\t  \"  void foo() {\\n\" + ", "+\t\t\t  \"    Object o = new Object();\\n\" + ", "+\t\t\t  \"    for (int i = 0; i < 10; i++) {\\n\" + ", "+\t\t\t  \"      if (o == null) {\\n\" + // complain: o cannot be null", "+\t\t\t  \"        continue;\\n\" + ", "+\t\t\t  \"      }\\n\" + ", "+\t\t\t  \"      o = null;\\n\" + ", "+\t\t\t  \"      break;\\n\" + ", "+\t\t\t  \"    }\\n\" + ", "+\t\t\t  \"  }\\n\" + ", "+\t\t\t  \"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tif (o == null) {\\n\" + ", "+\t\t\"\t    ^\\n\" + ", "+\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd6e92e2b4921773f795f56e418ef3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "3553ae2fde22d1bf8f8672de0126ed2f663e6d31", "commitAfterChange": "e1eb8e1d389bae20dbcfd06de5467dbcee16666b", "methodNumberBeforeChange": 303, "methodNumberAfterChange": 304, "signatureBeforeChange": " public void _test0745_for()", "signatureAfterChange": " public void test0747_for_try_catch()", "diff": ["-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=190737", "-public void _test0745_for() {", "-\tthis.runNegativeTest(", "-\t\t\t\"  void foo(Object o) {\\n\" + ", "-\t\t\t\"    if (o != null) {\\n\" + ", "-\t\t\t\"      for (int i = 0; i < Integer.MAX_VALUE; i++) {\\n\" + ", "-\t\t\t\"        if (o == null) {\\n\" +  // should complain here", "-\t\t\t\"        }\\n\" + ", "-\t\t\t\"}\\n\"},", "-\t\t\"ERR\");", "+// variant: do not reset to null", "+public void test0747_for_try_catch() {", "+\trunTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    String str = null;\\n\" + ", "+\t\t\t\"    for (int i = 0; i < 2; i++) {\\n\" + ", "+\t\t\t\"      try {\\n\" + ", "+\t\t\t\"        str = new String(\\\"Test\\\");\\n\" + ", "+\t\t\t\"      } catch (Exception ex) {\\n\" + ", "+\t\t\t\"        ex.printStackTrace();\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"      str.charAt(i);\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\ttrue /* expectingCompilerErrors */,", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"\tstr.charAt(i);\\n\" + ", "+\t\t\"\t^^^\\n\" + ", "+\t\t\"Potential null pointer access: The variable str may be null at this location\\n\" + ", "+\t\t\"----------\\n\" /* expectedCompilerLog */,", "+\t\t\"\" /* expectedOutputString */,", "+\t\tfalse /* forceExecution */,", "+\t\tnull /* classLib */,", "+\t\ttrue /* shouldFlushOutputDirectory */, ", "+\t\tnull /* vmArguments */, ", "+\t\tnull /* customOptions */,", "+\t\tnull /* clientRequestor */,", "+\t\tfalse /* skipJavac */);"]}], "num": 71049}