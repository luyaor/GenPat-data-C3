{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08c811af6374688a683c2c0686a8a8ee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d04c67bb1d5f3b8a0434fb0cacd09dba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-// KJ : Release next week", "-//\t\t\t\t\t\t\tsourceFolder.accept(new IResourceProxyVisitor() {", "-//\t\t\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "-//\t\t\t\t\t\t\t\t\tif (isCancelled) return false;", "-//\t\t\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "-//\t\t\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-//\t\t\t\t\t\t\t\t\t\t\tif (resource.getLocation() != null && (patterns == null || !Util.isExcluded(resource, patterns))) {", "-\t\t\t\t\t\t\tsourceFolder.accept(new IResourceVisitor() {", "-\t\t\t\t\t\t\t\tpublic boolean visit(IResource resource) {", "-\t\t\t\t\t\t\t\t\tif (isCancelled) return false;", "-\t\t\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName()) && resource.getLocation() != null) {", "-\t\t\t\t\t\t\t\t\t\t\tif (patterns == null || !Util.isExcluded(resource, patterns)) {", "-\t\t\t\t\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "-\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.put(name, resource);", "+\t\t\t\t\t\t\tsourceFolder.accept(", "+\t\t\t\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "+\t\t\t\t\t\t\t\t\t\tif (isCancelled) return false;", "+\t\t\t\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\t\t\t\t\tif (resource.getLocation() != null && (patterns == null || !Util.isExcluded(resource, patterns))) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "+\t\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.put(name, resource);", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t});", "+\t\t\t\t\t\t\t\t},", "+\t\t\t\t\t\t\t\tIResource.NONE", "+\t\t\t\t\t\t\t);", "-//\t\t\t\t\t\t\tsourceFolder.accept(new IResourceProxyVisitor() {", "-//\t\t\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "-//\t\t\t\t\t\t\t\t\tif (isCancelled) return false;", "-//\t\t\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "-//\t\t\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-\t\t\t\t\t\t\tsourceFolder.accept(new IResourceVisitor() {", "-\t\t\t\t\t\t\t\tpublic boolean visit(IResource resource) {", "-\t\t\t\t\t\t\t\t\tif (isCancelled) return false;", "-\t\t\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName())) {", "-\t\t\t\t\t\t\t\t\t\t\tIPath path = resource.getLocation();", "-\t\t\t\t\t\t\t\t\t\t\tif (path != null && (patterns == null || !Util.isExcluded(resource, patterns))) {", "-\t\t\t\t\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "-\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.put(name,", "-\t\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.get(name) == null || indexLastModified < path.toFile().lastModified()", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t? (Object) resource", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t: (Object) OK);", "+\t\t\t\t\t\t\tsourceFolder.accept(", "+\t\t\t\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "+\t\t\t\t\t\t\t\t\t\tif (isCancelled) return false;", "+\t\t\t\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\t\t\t\t\tIPath path = resource.getLocation();", "+\t\t\t\t\t\t\t\t\t\t\t\tif (path != null && (patterns == null || !Util.isExcluded(resource, patterns))) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "+\t\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.put(name,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.get(name) == null || indexLastModified < path.toFile().lastModified()", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? (Object) resource", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: (Object) OK);", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t});", "+\t\t\t\t\t\t\t\t},", "+\t\t\t\t\t\t\t\tIResource.NONE", "+\t\t\t\t\t\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf2aa057679a66f9ac4262c0a364b4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-// KJ : Release next week", "-//\t\t\t\tthis.folder.accept(new IResourceProxyVisitor() {", "-//\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "-//\t\t\t\t\t\tif (isCancelled) return false;", "-//\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\t\tif (Util.isClassFileName(proxy.getName())) {", "-//\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-//\t\t\t\t\t\t\t\tif (resource.getLocation() != null) {", "-\t\t\t\tthis.folder.accept(new IResourceVisitor() {", "-\t\t\t\t\tpublic boolean visit(IResource resource) {", "+\t\t\t\tthis.folder.accept(new IResourceProxyVisitor() {", "+\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "-\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\tif (Util.isClassFileName(resource.getName()) && resource.getLocation() != null) {", "-\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "-\t\t\t\t\t\t\t\tindexedFileNames.put(name, resource);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t}", "-\t\t\t\t});", "-\t\t\t} else {", "-\t\t\t\tfor (int i = 0; i < max; i++)", "-\t\t\t\t\tindexedFileNames.put(results[i].getPath(), DELETED);", "-", "-\t\t\t\tfinal long indexLastModified = index.getIndexFile().lastModified();", "-//\t\t\t\tthis.folder.accept(new IResourceProxyVisitor() {", "-//\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "-//\t\t\t\t\t\tif (isCancelled) return false;", "-//\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\t\tif (Util.isClassFileName(proxy.getName())) {", "-//\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-\t\t\t\tthis.folder.accept(new IResourceVisitor() {", "-\t\t\t\t\tpublic boolean visit(IResource resource) {", "-\t\t\t\t\t\tif (isCancelled) return false;", "-\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\tif (Util.isClassFileName(resource.getName())) {", "-\t\t\t\t\t\t\t\tIPath path = resource.getLocation();", "-\t\t\t\t\t\t\t\tif (path != null) {", "+\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\tif (Util.isClassFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\tif (resource.getLocation() != null) {", "-\t\t\t\t\t\t\t\t\tindexedFileNames.put(name,", "-\t\t\t\t\t\t\t\t\t\tindexedFileNames.get(name) == null || indexLastModified < path.toFile().lastModified()", "-\t\t\t\t\t\t\t\t\t\t\t? (Object) resource", "-\t\t\t\t\t\t\t\t\t\t\t: (Object) OK);", "+\t\t\t\t\t\t\t\t\tindexedFileNames.put(name, resource);", "-\t\t\t\t});", "+\t\t\t\t}, IResource.NONE);", "+\t\t\t} else {", "+\t\t\t\tfor (int i = 0; i < max; i++)", "+\t\t\t\t\tindexedFileNames.put(results[i].getPath(), DELETED);", "+", "+\t\t\t\tfinal long indexLastModified = index.getIndexFile().lastModified();", "+\t\t\t\tthis.folder.accept(", "+\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) {", "+\t\t\t\t\t\t\tif (isCancelled) return false;", "+\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\tif (Util.isClassFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\t\tIPath path = resource.getLocation();", "+\t\t\t\t\t\t\t\t\tif (path != null) {", "+\t\t\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "+\t\t\t\t\t\t\t\t\t\tindexedFileNames.put(name,", "+\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.get(name) == null || indexLastModified < path.toFile().lastModified()", "+\t\t\t\t\t\t\t\t\t\t\t\t? (Object) resource", "+\t\t\t\t\t\t\t\t\t\t\t\t: (Object) OK);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t},", "+\t\t\t\t\tIResource.NONE", "+\t\t\t\t);"]}], "num": 67233}