{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "352e6fa368462fe8aaf5be891c1db6ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b77bdc69d9b4579ca21ef218982fd20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "995fcf13bc3ad1e9b32a28fa575739b0c1b6aa41", "commitAfterChange": "125f2e11905eb2190c50776a296c49a5b3f7e6c1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r void recordTypeReference(TypeBinding type)", "signatureAfterChange": "\r void recordTypeReference(TypeBinding type)", "diff": ["-\tif (qualifiedReferences == null) return; // not recording dependencies\r", "+\tif (referencedTypes == null) return; // not recording dependencies\r", "-\tif (!type.isBaseType() && !typeReferences.containsIdentical(type)) {\r", "-\t\ttypeReferences.add(type);\r", "-\t\tReferenceBinding actualType = (ReferenceBinding) type;\r", "-\t\tif (!actualType.isLocalType()) {\r", "-\t\t\trecordQualifiedReference(actualType.isMemberType()\r", "-\t\t\t\t? CharOperation.splitOn('.', actualType.readableName())\r", "-\t\t\t\t: actualType.compoundName);\r", "-\t\t\tif (actualType.enclosingType() != null)\r", "-\t\t\t\trecordTypeReference(actualType.enclosingType()); // to record its supertypes\r", "-\t\t}\r", "-\t\tif (actualType.superclass() != null)\r", "-\t\t\trecordTypeReference(actualType.superclass());\r", "-\t\tReferenceBinding[] interfaces = actualType.superInterfaces();\r", "-\t\tif (interfaces != null && interfaces.length > 0)\r", "-\t\t\tfor (int j = 0, length = interfaces.length; j < length; j++)\r", "-\t\t\t\trecordTypeReference(interfaces[j]);\r", "-\t}\r", "+\tif (!type.isBaseType() && !referencedTypes.containsIdentical(type))\r", "+\t\treferencedTypes.add(type);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5be84a3abef8149c14eea97fed04eac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "995fcf13bc3ad1e9b32a28fa575739b0c1b6aa41", "commitAfterChange": "125f2e11905eb2190c50776a296c49a5b3f7e6c1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r public void storeDependencyInfo()", "signatureAfterChange": "\r public void storeDependencyInfo()", "diff": ["+\t// add the type hierarchy of each referenced type\r", "+\t// cannot do early since the hierarchy may not be fully resolved\r", "+\tfor (int i = 0; i < referencedTypes.size; i++) { // grows as more types are added\r", "+\t\tReferenceBinding type = (ReferenceBinding) referencedTypes.elementAt(i);\r", "+\t\tif (!type.isLocalType()) {\r", "+\t\t\trecordQualifiedReference(type.isMemberType()\r", "+\t\t\t\t? CharOperation.splitOn('.', type.readableName())\r", "+\t\t\t\t: type.compoundName);\r", "+\t\t\tReferenceBinding enclosing = type.enclosingType();\r", "+\t\t\tif (enclosing != null && !referencedTypes.containsIdentical(enclosing))\r", "+\t\t\t\treferencedTypes.add(enclosing); // to record its supertypes\r", "+\t\t}\r", "+\t\tReferenceBinding superclass = type.superclass();\r", "+\t\tif (superclass != null && !referencedTypes.containsIdentical(superclass))\r", "+\t\t\t\treferencedTypes.add(superclass); // to record its supertypes\r", "+\t\tReferenceBinding[] interfaces = type.superInterfaces();\r", "+\t\tif (interfaces != null && interfaces.length > 0)\r", "+\t\t\tfor (int j = 0, length = interfaces.length; j < length; j++)\r", "+\t\t\t\tif (!referencedTypes.containsIdentical(interfaces[j]))\r", "+\t\t\t\t\treferencedTypes.add(interfaces[j]); // to record its supertypes\r", "+\t}\r", "+\r", "+// Old code to be removed\r"]}], "num": 26895}