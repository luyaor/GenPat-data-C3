{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2faff9b93574e6c25311d236098040f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c861b60990fc81eb2127c1dc30f7d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "55fc1d09be22c3edd63ee3458e199979c3f77613", "commitAfterChange": "84e7ccc666453bf6300ee2ec41ee2751e7c7737b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public MatchLocator( \tSearchPattern pattern, \tSearchRequestor requestor, \tIJavaSearchScope scope, \tIProgressMonitor progressMonitor)", "signatureAfterChange": "  public MatchLocator( \tSearchPattern pattern, \tSearchRequestor requestor, \tIJavaSearchScope scope, \tIProgressMonitor progressMonitor)", "diff": ["+\tif (pattern instanceof PackageDeclarationPattern) {", "+\t\tthis.searchPackageDeclaration = true;", "+\t} else if (pattern instanceof OrPattern) {", "+\t\tthis.searchPackageDeclaration = ((OrPattern)pattern).hasPackageDeclaration();", "+\t} else {", "+\t\tthis.searchPackageDeclaration = false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21eb381148f14cbffb4a9a55b1041b4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "e861098708ab502aa7a325cac54fde44f06a113c", "commitAfterChange": "ad86ba75dc0a6a16a291878d079765b4fc060ad5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic void acceptSearchMatch(SearchMatch match) throws CoreException", "signatureAfterChange": " \t\tpublic void acceptSearchMatch(SearchMatch match) throws CoreException", "diff": ["+\t\t\t\t} else if (element instanceof IPackageDeclaration) {", "+\t\t\t\t\tIPackageDeclaration packageDeclaration = (IPackageDeclaration)element;", "+\t\t\t\t\tunit = (ICompilationUnit)packageDeclaration.getAncestor(IJavaElement.COMPILATION_UNIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "220d23871bdccd4a3ea0d9e9690be6af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "dc897dd3e4818ca2b15bd3d143de606b0ce0335f", "commitAfterChange": "8536e94c328f058d5f377b8328af7061c65f8af1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic CompilationUnit convert(CompilationUnitDeclaration unit, char[] source)", "signatureAfterChange": " \t \tpublic CompilationUnit convert(CompilationUnitDeclaration unit, char[] source)", "diff": ["-\t\t\tcompilationUnit.setPackage(convertPackage(unit.currentPackage));", "+\t\t\tPackageDeclaration packageDeclaration = convertPackage(unit);", "+\t\t\tcompilationUnit.setPackage(packageDeclaration);", "+\t\tif (resolveBindings) {", "+\t\t\tlookupForScopes();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "587d72d42b741b64a23a1f5b05c44208", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "dc8046a1f26c48f37690a73dc98185cd18d7251b", "commitAfterChange": "9919a97962e85d4a4559a7d46dd083c16b4eba9e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "signatureAfterChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "diff": ["-\t\t\t\t\tif (!resource.equals(element.getUnderlyingResource())) {", "+\t\t\t\t\tICompilationUnit cu = (ICompilationUnit)element.getAncestor(IJavaElement.COMPILATION_UNIT);", "+\t\t\t\t\tif (cu != null && cu.isWorkingCopy()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6eb9073d04340889b5ae79ac0a84e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AbstractTypeDeclaration.java", "commitBeforeChange": "c7c4402b38de85d198edc4f226b1b024155c44ea", "commitAfterChange": "15f2698caa98f798def2dddbc3f3562ac734fc03", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic boolean isMemberTypeDeclaration()", "signatureAfterChange": " \tpublic boolean isMemberTypeDeclaration()", "diff": ["-\t\t// TODO (jeem) - after 3.1 M4 remove mention of EnumConstantDeclaration", "-\t\t\t|| (parent instanceof AnonymousClassDeclaration)", "-\t\t\t|| (parent instanceof EnumConstantDeclaration);", "+\t\t\t|| (parent instanceof AnonymousClassDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d84a4e3cf41f6cfde078bae695b198c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.BinaryExpression expression)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.BinaryExpression expression)", "diff": ["-\t\t} else if (expression.left instanceof StringLiteralConcetanation", "+\t\t} else if (expression.left instanceof StringLiteralConcatenation", "-\t\t\tStringLiteralConcetanation literal = (StringLiteralConcetanation) expression.left;", "+\t\t\tStringLiteralConcatenation literal = (StringLiteralConcatenation) expression.left;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6cbfbb580971183232425ff4802a675", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\tprotected void writeLine() throws CoreException", "signatureAfterChange": " \t\tprotected void writeLine() throws CoreException", "diff": ["+\t\t\t\t} else if (element instanceof IAnnotation) {", "+\t\t\t\t\tline.append(\" \");", "+\t\t\t\t\tappend((IAnnotation)element);", "+\t\t\t\t\tunit = (ICompilationUnit) element.getAncestor(IJavaElement.COMPILATION_UNIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61976dc36d825501b75bdeceae0e9f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/StringLiteral.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic StringLiteralConcetanation extendsWith(StringLiteral lit)", "signatureAfterChange": " \tpublic StringLiteralConcatenation extendsWith(StringLiteral lit)", "diff": ["-\tpublic StringLiteralConcetanation extendsWith(StringLiteral lit) {", "-\t\treturn new StringLiteralConcetanation(this, lit);", "+\tpublic StringLiteralConcatenation extendsWith(StringLiteral lit) {", "+\t\treturn new StringLiteralConcatenation(this, lit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8b05cb8090dd51eeed705f812334945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static String convertTypeSignature(char[] sig)", "signatureAfterChange": " \tpublic static String convertTypeSignature(char[] sig, int start, int length)", "diff": ["-\tpublic static String convertTypeSignature(char[] sig) {", "-\t\treturn new String(sig).replace('/', '.');", "+\tpublic static String convertTypeSignature(char[] sig, int start, int length) {", "+\t\treturn new String(sig, start, length).replace('/', '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0ec45f3e086fc8e298167476d0c852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "5d5551ec2f3d482c3329accb7b283797956514be", "commitAfterChange": "dd3fd2545bf6e1ef8b167aefc85ac247cd0a3802", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": " public int matchLevel(AstNode node, boolean resolve)", "diff": ["+\t} else if (node instanceof ConstructorDeclaration) {", "+\t\treturn this.matchLevel((ConstructorDeclaration)node, resolve);", "+\t} else if (node instanceof TypeDeclaration) {", "+\t\treturn this.matchLevel((TypeDeclaration)node, resolve);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c55993c314753147a61bbe935ae2ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\t  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": "\t  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\t\tif (expression instanceof StringLiteralConcetanation) {", "-\t\t\treturn convert((StringLiteralConcetanation) expression);", "+\t\tif (expression instanceof StringLiteralConcatenation) {", "+\t\t\treturn convert((StringLiteralConcatenation) expression);"]}], "num": 20405}