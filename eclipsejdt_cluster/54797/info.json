{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e152af84844c16efc7729bd0d913d79", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd7026f7420a04938873df1920ff024", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 195, "signatureBeforeChange": " \t \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "signatureAfterChange": " \t \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\t\t\tif(this.assistNodeIsClass || this.assistNodeIsException) {", "-\t\t\t\t\t\t\trelevance += computeRelevanceForInterestingProposal();", "+\t\t\t\t\t\t\trelevance += computeRelevanceForInterestingProposal(typeBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e43defcae6df9db42c269fcd7569d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 177, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\tif(this.assistNodeIsClass || this.assistNodeIsException) {", "-\t\t\trelevance += computeRelevanceForInterestingProposal();", "+\t\t\trelevance += computeRelevanceForInterestingProposal(memberType);"]}], "num": 54797}