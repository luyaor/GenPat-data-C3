{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "179d96178514364620c9e8dd1a5ac2e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da0d8f82e1fa97f12514c2102ac9728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "246ca33259b64e75a96042ce92db878077ac86aa", "commitAfterChange": "784f86ce6732cf119976248cf85d648b31a1b3eb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  protected boolean triggerRecoveryUponLambdaClosure(Statement statement, boolean shouldCommit)", "signatureAfterChange": "  protected boolean triggerRecoveryUponLambdaClosure(Statement statement, boolean shouldCommit)", "diff": ["-\t\tthis.restartRecovery = true;", "+\t\t\tthis.restartRecovery = true;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t(this.currentElement.parent instanceof RecoveredBlock) ? this.currentElement.parent : null);", "+\t\t\t\t\t(this.currentElement.parent instanceof RecoveredBlock) ? this.currentElement.parent : null);", "-\t\t\t\t\tif (parseTree != null && (parseTree == assistNodeParent || parseTree == enclosingNode)) {", "-\t\t\t\t\t\trecoveredBlock.statements[--recoveredBlock.statementCount] = null;", "-\t\t\t\t\t\tthis.currentElement = recoveredBlock;", "+\t\t\t\t\tif (parseTree != null) {", "+\t\t\t\t\t\tif (parseTree == assistNodeParent || parseTree == enclosingNode) {", "+\t\t\t\t\t\t\trecoveredBlock.statements[--recoveredBlock.statementCount] = null;", "+\t\t\t\t\t\t\tthis.currentElement = recoveredBlock;", "+\t\t\t\t\t\t} else if (recoveredStatement instanceof RecoveredLocalVariable && statement instanceof Expression) {", "+\t\t\t\t\t\t\tRecoveredLocalVariable local = (RecoveredLocalVariable) recoveredStatement;", "+\t\t\t\t\t\t\tif (local.localDeclaration.initialization == assistNodeParent || local.localDeclaration.initialization == enclosingNode) {", "+\t\t\t\t\t\t\t\tlocal.localDeclaration.initialization = (Expression) statement;", "+\t\t\t\t\t\t\t\tlocal.localDeclaration.declarationSourceEnd = statement.sourceEnd;", "+\t\t\t\t\t\t\t\tlocal.localDeclaration.declarationEnd = statement.sourceEnd;", "+\t\t\t\t\t\t\t\tstatement = null;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\twhile (this.currentElement != null) {", "-\t\t\t\tASTNode tree = this.currentElement.parseTree();", "-\t\t\t\tif (tree.sourceStart < statement.sourceStart) {", "-\t\t\t\t\tthis.currentElement.add(statement, 0);", "-\t\t\t\t\tbreak;", "+\t\t\tif (statement != null) {", "+\t\t\t\twhile (this.currentElement != null) {", "+\t\t\t\t\tASTNode tree = this.currentElement.parseTree();", "+\t\t\t\t\tif (tree.sourceStart < statement.sourceStart) {", "+\t\t\t\t\t\tthis.currentElement.add(statement, 0);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.currentElement = this.currentElement.parent;", "-\t\t\t\tthis.currentElement = this.currentElement.parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73bd66e40c37a02361db8264aa18911f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void buildMoreGenericsCompletionContext(ASTNode node, boolean consumeTypeArguments)", "signatureAfterChange": " private void buildMoreGenericsCompletionContext(ASTNode node, boolean consumeTypeArguments)", "diff": ["-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.currentElement = this.currentElement.add(ref, 0);", "+\t\t\t\t\t\t} else {\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tif (prevKind == K_BETWEEN_NEW_AND_LEFT_BRACKET) {", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tAllocationExpression exp;", "+\t\t\t\t\t\t\t\tif (this.expressionPtr > -1 && this.expressionStack[this.expressionPtr] instanceof AllocationExpression) {", "+\t\t\t\t\t\t\t\t\texp = new QualifiedAllocationExpression();", "+\t\t\t\t\t\t\t\t\texp.type = ref;", "+\t\t\t\t\t\t\t\t\t((QualifiedAllocationExpression)exp).enclosingInstance = this.expressionStack[this.expressionPtr];", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\texp = new AllocationExpression();", "+\t\t\t\t\t\t\t\t\texp.type = ref;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (isInsideReturn()) {", "+\t\t\t\t\t\t\t\t\tReturnStatement returnStatement = new ReturnStatement(exp, exp.sourceStart, exp.sourceEnd);", "+\t\t\t\t\t\t\t\t\tthis.enclosingNode = returnStatement;", "+\t\t\t\t\t\t\t\t\tthis.currentElement  = this.currentElement.add(returnStatement,0);", "+\t\t\t\t\t\t\t\t} else if (this.currentElement instanceof RecoveredLocalVariable) {", "+\t\t\t\t\t\t\t\t\tif (((RecoveredLocalVariable)this.currentElement).localDeclaration.initialization == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.enclosingNode = ((RecoveredLocalVariable) this.currentElement).localDeclaration;", "+\t\t\t\t\t\t\t\t\t\tthis.currentElement = this.currentElement.add(exp, 0);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else if (this.currentElement instanceof RecoveredField) {", "+\t\t\t\t\t\t\t\t\tif (((RecoveredField) this.currentElement).fieldDeclaration.initialization == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.enclosingNode = ((RecoveredField) this.currentElement).fieldDeclaration;", "+\t\t\t\t\t\t\t\t\t\tthis.currentElement = this.currentElement.add(exp, 0);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthis.currentElement = this.currentElement.add(ref, 0);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthis.currentElement = this.currentElement.add(ref, 0);", "+\t\t\t\t\t\t\t}"]}], "num": 37943}