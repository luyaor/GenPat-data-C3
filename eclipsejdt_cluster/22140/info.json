{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be87ee10924e57845f300f477cb23df7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e4d99e6747e483a6cbdb4481ad50aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "3d74fc46f613564dbe52550c081fa58f357d0bc5", "commitAfterChange": "b02180d5cfd484077c935b61cfda329a4e9a0c9e", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["-\t\t\t\tif (level != null)", "-\t\t\t\t\tthis.patternLocator.matchReportImportRef(importRef, null/*no binding*/, createImportHandle(importRef), level.intValue(), this);", "+\t\t\t\tif (level != null) {", "+\t\t\t\t\tBinding binding = (importRef.bits & ASTNode.OnDemand) != 0", "+\t\t\t\t\t\t? unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "+\t\t\t\t\t\t: unitScope.getImport(importRef.tokens, false, importRef.isStatic());", "+\t\t\t\t\tthis.patternLocator.matchReportImportRef(importRef, binding, createImportHandle(importRef), level.intValue(), this);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0680468564af71226679173e4fcaf25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a2e726822a302fb831672b3e360423f88e9f5a4d", "commitAfterChange": "9217377dd950bb41269565e1e7c851d4d0d370b5", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["-\t\t\t\t// import ref cannot be in the hirarchy of a type", "+\t\t\t\t// import ref cannot be in the hierarchy of a type", "-\t\t\t\t\t? unit.scope.getTypeOrPackage(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length))", "-\t\t\t\t\t: unit.scope.getTypeOrPackage(importRef.tokens);", "+\t\t\t\t\t? unit.scope.compilationUnitScope().getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true)", "+\t\t\t\t\t: unit.scope.compilationUnitScope().getImport(importRef.tokens, false);"]}], "num": 22140}