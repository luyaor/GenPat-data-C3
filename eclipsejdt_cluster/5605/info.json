{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d96707ca903047baac8918c7a703928", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3128c465279aa04206b1e3eba0e2692b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["-\t\t\t\t\t\tif (!(org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(path.lastSegment())))", "-\t\t\t\t\t\t\tcontinue nextEntry;", "-\t\t\t\t\tif (!(org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(path.lastSegment())))", "-\t\t\t\t\t\tcontinue nextEntry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b8698fb3e05f1aafc3a571f619d78f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "02c514d098240b39ca407d5ca150d19b287af839", "commitAfterChange": "b38d183fc4bc8cb58dd4d9581cd22ea40ec0dfb9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void assertProblems(String message, String expected)", "signatureAfterChange": " protected void assertProblems(String message, String expected)", "diff": ["-\tString actual = Util.convertToIndependantLineDelimiter(this.problemRequestor.problems.toString());", "-\tString independantExpectedString = Util.convertToIndependantLineDelimiter(expected);", "-\tif (!independantExpectedString.equals(actual)){", "-\t \tSystem.out.println(Util.displayString(actual, 2));", "-\t}", "-\tassertEquals(", "-\t\tmessage,", "-\t\tindependantExpectedString,", "-\t\tactual);", "+\tassertProblems(message, expected, this.problemRequestor);"]}], "num": 5605}