{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fea9931df43a0a3c73b0136bddc2940", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0574e4f6173e29f964c0f41b953981fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "38c895fd64a92567249832dd2a8d427fc1bcacc2", "commitAfterChange": "47b4b871bf6d388352229c39f2d0357c2b36e470", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object insertSpaceAfterOpenParenInParenthesizedExpressionOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPEN_PAREN_IN_PARENTHESIZED_EXPRESSION);", "-\t\tif (insertSpaceAfterOpenParenInParenthesizedExpressionOption != null) {", "-\t\t\tthis.insert_space_after_open_paren_in_parenthesized_expression = JavaCore.INSERT.equals(insertSpaceAfterOpenParenInParenthesizedExpressionOption);", "+\t\tfinal Object insertSpaceAfterOpeningParenInMessageSendOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_MESSAGE_SEND);", "+\t\tif (insertSpaceAfterOpeningParenInMessageSendOption != null) {", "+\t\t\tthis.insert_space_after_opening_paren_in_message_send = JavaCore.INSERT.equals(insertSpaceAfterOpeningParenInMessageSendOption);", "+\t\t}", "+\t\tfinal Object insertSpaceAfterOpeningParenInParenthesizedExpressionOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_PARENTHESIZED_EXPRESSION);", "+\t\tif (insertSpaceAfterOpeningParenInParenthesizedExpressionOption != null) {", "+\t\t\tthis.insert_space_after_opening_paren_in_parenthesized_expression = JavaCore.INSERT.equals(insertSpaceAfterOpeningParenInParenthesizedExpressionOption);", "+\t\t}", "+\t\tfinal Object insertSpaceBeforeClosingParenInMessageSendOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_MESSAGE_SEND);", "+\t\tif (insertSpaceBeforeClosingParenInMessageSendOption != null) {", "+\t\t\tthis.insert_space_before_closing_paren_in_message_send = JavaCore.INSERT.equals(insertSpaceBeforeClosingParenInMessageSendOption);", "-\t\tfinal Object insertSpaceWithinMessageSendOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_WITHIN_MESSAGE_SEND);", "-\t\tif (insertSpaceWithinMessageSendOption != null) {", "-\t\t\tthis.insert_space_within_message_send = JavaCore.INSERT.equals(insertSpaceWithinMessageSendOption);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1388c3f3d62011f46778bc75494f2f25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e050ce187db6229b89aa41b0ef3c79b8a57e6df7", "commitAfterChange": "91b85d56bd85dc135ae6e51c56ff47dcb64753ef", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void setDeprecatedOptions(Map settings)", "signatureAfterChange": " \tprivate void setDeprecatedOptions(Map settings)", "diff": ["+\t\t\t}", "+\t\t}", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=122247", "+\t\tfinal Object insertNewLineAfterAnnotationOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION);", "+\t\tif (insertNewLineAfterAnnotationOption != null) { // check if deprecated option was used", "+\t\t\tthis.insert_new_line_after_annotation_on_member = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\t\tthis.insert_new_line_after_annotation_on_parameter = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\t\tthis.insert_new_line_after_annotation_on_local_variable = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\t} else {", "+\t\t\tfinal Object insertNewLineAfterAnnotationOnMemberOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_MEMBER);", "+\t\t\tif (insertNewLineAfterAnnotationOnMemberOption != null) { // otherwhise, use the new options", "+\t\t\t\tthis.insert_new_line_after_annotation_on_member = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnMemberOption);", "+\t\t\t}", "+\t\t\tfinal Object insertNewLineAfterAnnotationOnParameterOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PARAMETER);", "+\t\t\tif (insertNewLineAfterAnnotationOnParameterOption != null) {", "+\t\t\t\tthis.insert_new_line_after_annotation_on_parameter = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnParameterOption);", "+\t\t\t}", "+\t\t\tfinal Object insertNewLineAfterAnnotationOnLocalVariableOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_LOCAL_VARIABLE);", "+\t\t\tif (insertNewLineAfterAnnotationOnLocalVariableOption != null) {", "+\t\t\t\tthis.insert_new_line_after_annotation_on_local_variable = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnLocalVariableOption);"]}], "num": 47878}