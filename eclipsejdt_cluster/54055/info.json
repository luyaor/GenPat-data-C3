{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ac8a757d23cfeb2a292d6121285da97", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75262419f52f16a86a2d5e5917b35596", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "58a9cdb775828812909aee547fd1ca9469a5050e", "commitAfterChange": "98c487057a8d2de923f33c88de2fc136cc388566", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "diff": ["+\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, null, null, compliance);", "+\t}", "-\t\taddLibraryEntry(javaProject, projectPath + jarName,  projectPath + sourceZipName, null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da2d1f06deacc069ff1386059a8dede0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException", "diff": ["-\tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException {", "-\t\tIProject project = javaProject.getProject();", "-\t\tString projectLocation = project.getLocation().toOSString();", "-\t\tString jarPath = projectLocation + File.separator + jarName;", "-\t\tString sourceZipPath = projectLocation + File.separator + sourceZipName;", "-\t\torg.eclipse.jdt.core.tests.util.Util.createJar(pathAndContents, jarPath, compliance);", "-\t\torg.eclipse.jdt.core.tests.util.Util.createSourceZip(pathAndContents, sourceZipPath);", "-\t\tproject.refreshLocal(IResource.DEPTH_INFINITE, null);", "+\t}", "+\tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException {", "+\t\tIProject project = createLibrary(javaProject, jarName, sourceZipName, pathAndContents, nonJavaResources, compliance);", "-\t\t\tnew Path(projectPath + sourceZipName),", "+\t\t\tsourceZipName == null ? null : new Path(projectPath + sourceZipName),", "+\t}"]}], "num": 54055}