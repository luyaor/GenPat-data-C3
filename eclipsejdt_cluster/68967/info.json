{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01254a4a9b2b46561f2f808d24e87e0a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c93fb3f088d97a9269c7e3269b519a56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "7aacb15554a9c6406d505856924e9f9ea2758365", "commitAfterChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate static char[][] computeBaseTypeNames(char[] typeName, boolean isConstantField, char[][] excludedNames)", "signatureAfterChange": "  \tprivate static char[][] computeBaseTypeNames(char[] typeName, boolean isConstantField, char[][] excludedNames)", "diff": ["-\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField);", "+\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField, false);", "-\t\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField);", "+\t\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdc39b40933ef55e9c6911f6f1e0e775", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "3c07df5b27f3cc9bb0f32fc7f0a08746454bdc9d", "commitAfterChange": "6de7ced9858f2246a9379efd0dd8834bcae6044c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static final Constant computeConstantOperation(Constant cst, int id, int operator)", "signatureAfterChange": " \t \tpublic static final Constant computeConstantOperation(Constant cst, int id, int operator)", "diff": ["-\t\t\tcase PLUS\t:\treturn cst; ", "+\t\t\tcase PLUS\t:", "+\t\t\t\t\t\t\treturn computeConstantOperationPLUS(Zero,T_int,cst,id);", "-\t\t\t\t\t\t\treturn computeConstantOperationMINUS(Zero,T_int,operator,cst,id);", "+\t\t\t\t\t\t\treturn computeConstantOperationMINUS(Zero,T_int,cst,id);"]}], "num": 68967}