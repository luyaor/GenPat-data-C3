{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd04cadad9f712c2207228376a34d32a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "606d914d680351bc0b515ee29cd62990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "8ee2ac7660ae66b462bce9e2aa37e3d88411c42d", "commitAfterChange": "56ce2602231bb9198b41629265c6b22188fa800c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void resolve(BlockScope upperScope)", "signatureAfterChange": "\r public void resolve(BlockScope upperScope)", "diff": ["-\t\tthis.secretReturnValue = new LocalVariableBinding(\r", "-\t\t\tSecretLocalDeclarationName, \r", "-\t\t\t((AbstractMethodDeclaration)methodScope.referenceContext).binding.returnType, \r", "-\t\t\tAccDefault);\r", "-\t\tfinallyScope.addLocalVariable(this.secretReturnValue);\r", "-\t\tthis.secretReturnValue.constant = NotAConstant; // not inlinable\r", "-\r", "+\t\tTypeBinding methodReturnType = ((AbstractMethodDeclaration)methodScope.referenceContext).binding.returnType;\r", "+\t\tif (methodReturnType.id != T_void){\r", "+\t\t\tthis.secretReturnValue = new LocalVariableBinding(SecretLocalDeclarationName, methodReturnType, AccDefault);\r", "+\t\t\tfinallyScope.addLocalVariable(this.secretReturnValue);\r", "+\t\t\tthis.secretReturnValue.constant = NotAConstant; // not inlinable\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "890781d617289c5d4a475038f32b8cc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "96e946e432239988b54746ee7b5f10cbfedc599c", "commitAfterChange": "aff5c12cbb27baf6a5a4fcffc519f600863197f9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tname = ((TypeDeclaration)node).name;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tTypeDeclaration typeDecl = (TypeDeclaration) node;", "+\t\t\t\t\t\tif (typeDecl.bodyEnd == 0) { // type declaration currenly parsed", "+\t\t\t\t\t\t\tname = typeDecl.name;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}"]}], "num": 54955}