{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f6482b4d954626ba67d3c74e36dbcda", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f1f94c94f090ab01a99f9166a37dd30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d57293f4f12e1bef48b48f8eb4effbb7e4554bd3", "commitAfterChange": "80133b35a6b0bcde494737060ceebe86e07b8204", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 257, "signatureBeforeChange": " private void rejectIllegalTypeAnnotations(TypeReference typeReference)", "signatureAfterChange": " private void rejectIllegalTypeAnnotations(TypeReference typeReference, boolean tolerateAnnotationsOnDimensions)", "diff": ["+}", "+private void rejectIllegalTypeAnnotations(TypeReference typeReference, boolean tolerateAnnotationsOnDimensions) {", "+\tboolean tolerated = false;", "-\t\t\tproblemReporter().misplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "+\t\t\tif (tolerateAnnotationsOnDimensions) {", "+\t\t\t\tproblemReporter().toleratedMisplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "+\t\t\t\ttolerated = true;", "+\t\t\t}", "+\t\t\telse ", "+\t\t\t\tproblemReporter().misplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "-\ttypeReference.annotations = null;", "-\ttypeReference.setAnnotationsOnDimensions(null);", "-\ttypeReference.bits &= ~ASTNode.HasTypeAnnotations;", "+\tif (!tolerated) {", "+\t\ttypeReference.annotations = null;", "+\t\ttypeReference.setAnnotationsOnDimensions(null);", "+\t\ttypeReference.bits &= ~ASTNode.HasTypeAnnotations;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebfd6fe1522eedcf683972bfcbb77bbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0fdabed7d03d0f0d08fda0e7f845381fd7c643ef", "commitAfterChange": "b31cd8ccd51413655d3e805905e8dd7d1404f391", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 254, "signatureBeforeChange": " private void rejectIllegalTypeAnnotations(TypeReference typeReference, boolean tolerateAnnotationsOnDimensions)", "signatureAfterChange": " private void rejectIllegalTypeAnnotations(TypeReference typeReference, boolean tolerateAnnotationsOnDimensions)", "diff": ["-\tannotations = tolerateAnnotationsOnDimensions ? null : typeReference.getAnnotationsOnDimensions(true);", "+\tannotations = typeReference.getAnnotationsOnDimensions(true);", "-\t\t\tproblemReporter().misplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "+\t\t\tif (tolerateAnnotationsOnDimensions)", "+\t\t\t\tproblemReporter().toleratedMisplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "+\t\t\telse ", "+\t\t\t\tproblemReporter().misplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);"]}], "num": 21644}