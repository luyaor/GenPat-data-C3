{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "342fe0c59260cc8051378fd6bf2600b5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1464f2fb7d663c13edb6201dc4b29f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "54632eb8b3fc718083fd85b7fed41bcce1a85dc7", "commitAfterChange": "bfb03069bc857fa6dbdefe509f7d5cec8610c33c", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 232, "signatureBeforeChange": "  \tpublic void setOptions(Hashtable newOptions)", "signatureAfterChange": "  \tpublic void setOptions(Hashtable newOptions)", "diff": ["-", "-\t\t\t\t\tint optionLevel = getOptionLevel(key);", "-\t\t\t\t\tif (optionLevel == UNKNOWN_OPTION) continue; // unrecognized option", "+\t\t\t\t\tif (!this.optionNames.contains(key)) continue; // unrecognized option", "-\t\t\t\t\tString value = (String) newOptions.get(key);", "+\t\t\t\t\tString value = (String)newOptions.get(key);", "-\t\t\t\t\t// Store value in preferences", "-\t\t\t\t\t\tvalue = null;", "+\t\t\t\t\t\tinstancePreferences.remove(key);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tinstancePreferences.put(key, value);", "-\t\t\t\t\tstorePreference(key, value, instancePreferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f655f9143040d38de721f9eb579c47e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "fd230c4ee1ceefd6a4812ebc7de0e734ce8df73c", "commitAfterChange": "e752367433ca417806253a6753c55772428a8bf6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void updateSourceEndIfNecessary(int bodyStart, int bodyEnd)", "signatureAfterChange": " public void updateSourceEndIfNecessary(int braceStart, int braceEnd)", "diff": ["-public void updateSourceEndIfNecessary(int bodyStart, int bodyEnd){", "+public void updateSourceEndIfNecessary(int braceStart, int braceEnd){", "-\t\tint end, declarationSourceEnd;", "-\t\tif(parser().rBraceSuccessorStart >= bodyEnd) {", "-\t\t\tdeclarationSourceEnd = parser().rBraceEnd;", "-\t\t\tend = parser().rBraceStart;", "+\t\tif(parser().rBraceSuccessorStart >= braceEnd) {", "+\t\t\tthis.methodDeclaration.declarationSourceEnd = parser().rBraceEnd;", "+\t\t\tthis.methodDeclaration.bodyEnd = parser().rBraceStart;", "-\t\t\tdeclarationSourceEnd = bodyEnd;", "-\t\t\tend = bodyStart - 1;", "+\t\t\tthis.methodDeclaration.declarationSourceEnd = braceEnd;", "+\t\t\tthis.methodDeclaration.bodyEnd  = braceStart - 1;", "-\t\tthis.methodDeclaration.declarationSourceEnd = declarationSourceEnd;", "-\t\tthis.methodDeclaration.bodyEnd = end;"]}], "num": 3146}