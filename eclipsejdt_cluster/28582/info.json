{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "607bfeca1667eb06735a2abdc35fe5e5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b3fd3dd37f4a6f525389def6462ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "51ebb1f7cfea7403ec34dc6efe4fba1d95b8c175", "commitAfterChange": "d5da0f5c898d789c8accf5bac0fea57834f37324", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\t\tif (info.inheritedNonNullness == Boolean.TRUE) {", "-\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNonNull;", "-\t\t\t\t} else if (info.inheritedNonNullness == Boolean.FALSE) {", "-\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNullable;", "+\t\t\t\tif (!info.complained) {", "+\t\t\t\t\tif (info.inheritedNonNullness == Boolean.TRUE) {", "+\t\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNonNull;", "+\t\t\t\t\t} else if (info.inheritedNonNullness == Boolean.FALSE) {", "+\t\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNullable;", "+\t\t\t\t\t}", "-\t\t\t\t\tif (info.inheritedNonNullness != null) {", "+\t\t\t\t\tif (!info.complained && info.inheritedNonNullness != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b2638ca9d955eec7b88bb2ffa9d6fba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "897917a9c4d05a0c86bc6c8df155949d1c5640c7", "commitAfterChange": "d4f12f601c5afe98df359183a7ee00c6279cb43c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\t\tif (info.inheritedNonNullness == Boolean.TRUE) {", "-\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNonNull;", "-\t\t\t\t} else if (info.inheritedNonNullness == Boolean.FALSE) {", "-\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNullable;", "+\t\t\t\tif (!info.complained) {", "+\t\t\t\t\tif (info.inheritedNonNullness == Boolean.TRUE) {", "+\t\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNonNull;", "+\t\t\t\t\t} else if (info.inheritedNonNullness == Boolean.FALSE) {", "+\t\t\t\t\t\tcurrentMethod.tagBits |= TagBits.AnnotationNullable;", "+\t\t\t\t\t}", "-\t\t\t\t\tif (info.inheritedNonNullness != null) {", "+\t\t\t\t\tif (!info.complained && info.inheritedNonNullness != null) {"]}], "num": 28582}