{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27571d700516dcf19a8c5ab30a6576c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "193172d2b3247c0c85144847553ff1d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 102, "signatureBeforeChange": " \t \tpublic void testSimpleName()", "signatureAfterChange": " \t \tpublic void testSimpleName()", "diff": ["+\t\t// \"assert\" only became a keyword in J2SE 1.4 and we do *not* want to", "+\t\t// preclude the AST API from being used to analyze pre-1.4 code", "+\t\t", "+\t\t// check that \"enum\" is not considered a keyword", "+\t\t// \"enum\" only became a keyword in J2SE 1.5 and we do *not* want to", "+\t\t// preclude the AST API from being used to analyze pre-1.5 code", "+\t\tx.setIdentifier(\"enum\"); //$NON-NLS-1$", "+\t\t", "+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tAnnotationTypeDeclaration atd = ast.newAnnotationTypeDeclaration();", "+\t\t\tatd.setName(x);", "+\t\t\tassertTrue(x.isDeclaration() == true);", "+\t\t\tatd.setName(ast.newSimpleName(\"b\")); //$NON-NLS-1$", "+\t\t\tassertTrue(x.isDeclaration() == false);", "+\t\t}", "+\t\t", "+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tAnnotationTypeMemberDeclaration atmd = ast.newAnnotationTypeMemberDeclaration();", "+\t\t\tatmd.setName(x);", "+\t\t\tassertTrue(x.isDeclaration() == true);", "+\t\t\tatmd.setName(ast.newSimpleName(\"b\")); //$NON-NLS-1$", "+\t\t\tassertTrue(x.isDeclaration() == false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c01e8c23f32cbb7f277487f72c21478", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "2193765f6a14f1428523dab68858768ca623c9d3", "commitAfterChange": "5450463d69e66bedc3d0797b782f5dab3b9072d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void testClosedProject() throws JavaModelException", "signatureAfterChange": "  public void testClosedProject() throws JavaModelException, IOException", "diff": ["-public void testClosedProject() throws JavaModelException {", "+public void testClosedProject() throws JavaModelException, IOException {", "+\tIProject project1 = ResourcesPlugin.getWorkspace().getRoot().getProject(\"CP1\");", "-\tIPath jarPath = env.addInternalJar(project1Path, \"temp.jar\", new byte[] {0}); //$NON-NLS-1$", "+\t", "+\tString jarFile = project1.getLocation().toOSString() + File.separator + \"temp.jar\";", "+\t", "+\torg.eclipse.jdt.core.tests.util.Util.createEmptyJar(", "+\t\t\tjarFile,", "+\t\t\tJavaCore.VERSION_1_4);", "+", "+\tIPath jarPath = null;", "+\tFileInputStream fis = null;", "+\ttry {", "+\t\tfis = new FileInputStream(jarFile);", "+\t\tint length = fis.available();", "+\t\tbyte[] jarContent = new byte[length];", "+\t\tfis.read(jarContent); ", "+\t\tjarPath = env.addInternalJar(project1Path, \"temp.jar\", jarContent); //$NON-NLS-1$", "+\t}", "+\tfinally {", "+\t\tif (fis != null) fis.close();", "+\t}"]}], "num": 37304}