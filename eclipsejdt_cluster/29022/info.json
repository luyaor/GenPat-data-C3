{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff9265a7bdd346e56e2651a6fd44ccd9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afacce5fd44fc81848a9079baaac5b5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/AnnotationInfo.java", "commitBeforeChange": "ec0896f6be6c41a0353321bffc1f242fe4e5e1b4", "commitAfterChange": "b0bd844e638d627fddf9ed3dbc5637db4513a8de", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private int scanAnnotation(int offset, boolean expectRuntimeVisibleAnno, boolean toplevel)", "signatureAfterChange": " private int scanAnnotation(int offset, boolean expectRuntimeVisibleAnno, boolean toplevel)", "diff": ["-\t\t\t\tif (CharOperation.equals(typeName, ConstantPool.JAVAX_ANNOTATION_PREDESTROY)) {", "-\t\t\t\t\tthis.standardAnnotationTagBits |= TagBits.AnnotationPreDestroy;", "-\t\t\t\t\treturn currentOffset;", "-\t\t\t\t}", "-\t\t\t\t\treturn currentOffset;", "-\t\t\t\t}", "-\t\t\t\tif (CharOperation.equals(typeName, ConstantPool.JAVAX_ANNOTATION_POSTCONSTRUCT)) {", "-\t\t\t\t\tthis.standardAnnotationTagBits |= TagBits.AnnotationPostConstruct;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d414c32a623ef13103a7a26e505e6ef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "cb764d0f635c3538feb2f431a07bf4883bc5e3de", "commitAfterChange": "2fc42eeb502a121cefe1f87a9fd2e92cf7c57bec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "diff": ["-\t\t// set the optimize constant to optimize code gen", "-\t\tif ((initsWhenTrue.tagBits & FlowInfo.UNREACHABLE) != 0) {", "-\t\t\tthis.optimizedBooleanConstant = BooleanConstant.fromValue(false);", "-\t\t} else if ((initsWhenFalse.tagBits & FlowInfo.UNREACHABLE) != 0) {", "-\t\t\tthis.optimizedBooleanConstant = BooleanConstant.fromValue(true);", "-\t\t}"]}], "num": 29022}