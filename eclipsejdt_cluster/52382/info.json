{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a5496817aa747e1514c707042148498", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54215d8cf560982854774bcf5840e599", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "a3f5a258168b2737715ba1b0eb047a73835a7a52", "commitAfterChange": "7b5011661f834d7b694ec46b2df63f185f1639df", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic int getExtendedStartPosition(ASTNode node)", "signatureAfterChange": " \tpublic int getExtendedStartPosition(ASTNode node)", "diff": ["-\t\tif (this.commentMapper == null) {", "-\t\t\treturn -1;", "+\t\tif (node == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tif (this.commentMapper == null || node.getAST() != getAST()) {", "+\t\t\t// fall back: use best info available", "+\t\t\treturn node.getStartPosition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76572a483a558e2097ad9caf2fce18ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "a3f5a258168b2737715ba1b0eb047a73835a7a52", "commitAfterChange": "7b5011661f834d7b694ec46b2df63f185f1639df", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic int getExtendedLength(ASTNode node)", "signatureAfterChange": " \tpublic int getExtendedLength(ASTNode node)", "diff": ["-\t\tif (this.commentMapper == null) {", "-\t\t\treturn 0;", "+\t\tif (node == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tif (this.commentMapper == null || node.getAST() != getAST()) {", "+\t\t\t// fall back: use best info available", "+\t\t\treturn node.getLength();"]}], "num": 52382}