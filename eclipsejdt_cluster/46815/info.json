{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00017c61665c46f433a51da1516e8b84", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68828525332c00cd2fd3301b0a596597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public synchronized void removeIndexFamily(IPath path)", "signatureAfterChange": " public synchronized void removeIndexFamily(IPath path)", "diff": ["-\tIterator iterator = this.indexes.keySet().iterator();", "-\twhile (iterator.hasNext()) {", "-\t\tIPath indexPath = (IPath) iterator.next();", "-\t\tif (path.isPrefixOf(indexPath)) {", "+\tObject[] containerPaths = this.indexLocations.keyTable;", "+\tfor (int i = 0, length = containerPaths.length; i < length; i++) {", "+\t\tIPath containerPath = (IPath) containerPaths[i];", "+\t\tif (containerPath == null) continue;", "+\t\tif (path.isPrefixOf(containerPath)) {", "-\t\t\ttoRemove.add(indexPath);", "+\t\t\ttoRemove.add(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4c8df95be48d2f412a3c445688bacb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate void locatePackageDeclarations( \t\tSearchPattern searchPattern, \t\tIWorkspace workspace) \t\tthrows JavaModelException", "signatureAfterChange": " \tprivate void locatePackageDeclarations( \t\tSearchPattern searchPattern, \t\tIWorkspace workspace) \t\tthrows JavaModelException", "diff": ["-\t\t\tOrPattern orPattern = (OrPattern) searchPattern;", "-\t\t\tthis.locatePackageDeclarations(orPattern.leftPattern, workspace);", "-\t\t\tthis.locatePackageDeclarations(orPattern.rightPattern, workspace);", "+\t\t\tSearchPattern[] patterns = ((OrPattern) searchPattern).patterns;", "+\t\t\tfor (int i = 0, length = patterns.length; i < length; i++)", "+\t\t\t\tthis.locatePackageDeclarations(patterns[i], workspace);"]}], "num": 46815}