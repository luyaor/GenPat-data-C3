{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a5a967e73a0631604375d718f1c89bf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d1a6fd77839487d288a794d65122f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "0233b0a3d5d502ed0630a3da620010b258692d93", "commitAfterChange": "72a2a8bd6aba4ed5b8105709cfbdeb4e7360d6b9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void computeAllRootPaths(IPackageFragmentRoot root)", "signatureAfterChange": " \t \tprivate void computeAllRootPaths(IPackageFragmentRoot root)", "diff": ["-\t\t\tSystem.out.println(\"Found \" + this.rootPaths.size() + \" root paths\");\t//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tfinal int size = this.rootPaths.size();", "+\t\t\tSystem.out.println(\"Found \" + size + \" root paths\");\t//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tint i = 0;", "+\t\t\tfor (Iterator iterator = this.rootPaths.iterator(); iterator.hasNext();) {", "+\t\t\t\tString rootpath = (String) iterator.next();", "+\t\t\t\tSystem.out.println(\"root[\" + i + \"]=\" + rootpath);//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\ti++;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddafb996d6d422a5dc28017c9b52b711", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "fe32c2fb1206f9aa293286057591b6614ed5e3a2", "commitAfterChange": "b1ae52eecd1e69d1eb9cab85ebb23c3c5e6c407d", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tprotected String getURLContents(String docUrlValue, String defaultEncoding) throws JavaModelException", "signatureAfterChange": " \tprotected String getURLContents(String docUrlValue, String defaultEncoding) throws JavaModelException", "diff": ["-\t\t\tconnection.setUseCaches(false);", "-\t\t\tstream = connection.getInputStream();", "+\t\t\tif (SuffixConstants.EXTENSION_jar.equals(docUrl.getProtocol())) {", "+\t\t\t\t// if jar protocol is using a cache, some file descriptors are left behind and the resource cannot be deleted", "+\t\t\t\tconnection.setUseCaches(false);", "+\t\t\t}", "+\t\t\tstream = new BufferedInputStream(connection.getInputStream());", "+\t\t\t\t// System.out.println(\"Size = \" + (contents.length / 1024) + \"kb\");//$NON-NLS-1$//$NON-NLS-2$"]}], "num": 50516}