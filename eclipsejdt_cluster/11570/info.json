{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c12ee59b852a08ecced2a48e680adb56", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44800a59aef21396c7b71ed7fd472cf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build()", "signatureAfterChange": "  public void build()", "diff": ["-\t\tcleanOutputFolder();", "+\t\tcleanOutputFolders();", "-\t\tArrayList locations = new ArrayList(33);", "-\t\tArrayList typeNames = new ArrayList(33);", "-\t\taddAllSourceFiles(locations, typeNames);", "+\t\tArrayList sourceFiles = new ArrayList(33);", "+\t\taddAllSourceFiles(sourceFiles);", "-\t\tif (locations.size() > 0) {", "-\t\t\tString[] allSourceFiles = new String[locations.size()];", "-\t\t\tlocations.toArray(allSourceFiles);", "-\t\t\tString[] initialTypeNames = new String[typeNames.size()];", "-\t\t\ttypeNames.toArray(initialTypeNames);", "+\t\tif (sourceFiles.size() > 0) {", "+\t\t\tSourceFile[] allSourceFiles = new SourceFile[sourceFiles.size()];", "+\t\t\tsourceFiles.toArray(allSourceFiles);", "-\t\t\tcompile(allSourceFiles, initialTypeNames);", "+\t\t\tcompile(allSourceFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc8521187a7534d31d5712dc699458aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public boolean build(SimpleLookupTable deltas)", "signatureAfterChange": "  public boolean build(SimpleLookupTable deltas)", "diff": ["-\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {", "+\t\tfor (int i = 0, l = valueTable.length; i < l; i++) {", "-\t\t\t\tIResource[] binaryResources = (IResource[]) javaBuilder.binaryResources.get(keyTable[i]);", "-\t\t\t\tif (binaryResources != null)", "-\t\t\t\t\tif (!findAffectedSourceFiles(delta, binaryResources)) return false;", "+\t\t\t\tClasspathLocation[] classFoldersAndJars = (ClasspathLocation[]) javaBuilder.binaryLocationsPerProject.get(keyTable[i]);", "+\t\t\t\tif (classFoldersAndJars != null)", "+\t\t\t\t\tif (!findAffectedSourceFiles(delta, classFoldersAndJars)) return false;", "-\t\twhile (locations.size() > 0) { // added to in acceptResult", "+\t\twhile (sourceFiles.size() > 0) { // added to in acceptResult", "-\t\t\tString[] allSourceFiles = new String[locations.size()];", "-\t\t\tlocations.toArray(allSourceFiles);", "-\t\t\tString[] initialTypeStrings = new String[typeNames.size()];", "-\t\t\ttypeNames.toArray(initialTypeStrings);", "+\t\t\tSourceFile[] allSourceFiles = new SourceFile[sourceFiles.size()];", "+\t\t\tsourceFiles.toArray(allSourceFiles);", "-\t\t\tcompile(allSourceFiles, initialTypeStrings);", "+\t\t\tcompile(allSourceFiles);"]}], "num": 11570}