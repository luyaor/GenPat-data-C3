{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d43e29a9d1a7e17ab18d1aaef9042cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e83036ce1ef327917304b64c5939d67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "43a229f8875bdbbd2ef36ab2eab7bb78009757b0", "commitAfterChange": "aed8ca051e93307e5096d0b341a609525b181cbd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t        this.genericCast = originalBinding.type.genericCast(scope.boxing(runtimeTimeType)); // runtimeType could be base type in boxing case", "+\t\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "+\t\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "+\t\t\t    \t\t: runtimeTimeType;", "+\t\t\t        this.genericCast = originalBinding.type.genericCast(scope.boxing(targetType));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eed69db8d53d8770b6d86612ca889476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "43a229f8875bdbbd2ef36ab2eab7bb78009757b0", "commitAfterChange": "aed8ca051e93307e5096d0b341a609525b181cbd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t    \tsetGenericCast(length,originalBinding.type.genericCast(scope.boxing(runtimeTimeType))); // runtimeType could be base type in boxing case", "+\t\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "+\t\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "+\t\t\t    \t\t: runtimeTimeType;", "+\t\t\t    \tsetGenericCast(length,originalBinding.type.genericCast(targetType));"]}], "num": 57513}