{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b7d1f8e28e8ffd573b6d1bcbc62980e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ca070d6f3d5b353ccef3b44606503c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public int getFlags() throws JavaModelException", "signatureAfterChange": " public int getFlags() throws JavaModelException", "diff": ["-\tif (this.parent instanceof LambdaExpression)", "-\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c85a93ceb1b247965f2071d68031cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "7691e377e6a3f67a1337716bc77c2ad7f6446dc7", "commitAfterChange": "ba9391e4c434f83f729da7aa6be3c7a6812bfd1a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "signatureAfterChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "diff": ["-\t\t// only collect for method type parameters", "-\t\tif (!(this.declaringElement instanceof MethodBinding)) return;", "+            // recurse in variable bounds (82187)", "+            if (this.superclass != null && this.firstBound == this.superclass) {", "+                this.superclass.collectSubstitutes(otherType, substitutes);", "+            }", "+            for (int i = 0, length = this.superInterfaces.length; i < length; i++) {", "+                this.superInterfaces[i].collectSubstitutes(otherType, substitutes);", "+            }", "-\t    // recurse in variable bounds (82187)", "-\t    if (this.superclass != null && this.firstBound == this.superclass) {", "-\t    \tthis.superclass.collectSubstitutes(otherType, substitutes);", "-\t    }", "-\t   \tfor (int i = 0, length = this.superInterfaces.length; i < length; i++) {", "-\t   \t\tthis.superInterfaces[i].collectSubstitutes(otherType, substitutes);", "-\t   \t}"]}], "num": 32430}