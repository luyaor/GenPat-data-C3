{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5870cc59d6d061c8ef116da93e218cb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bad5396807e2f764ebb859423f9b47c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void test099()", "signatureAfterChange": " \tpublic void test099() throws Exception", "diff": ["-\tpublic void test099() {", "+\tpublic void test099() throws Exception {", "-\t\tString actualOutput = null;", "-\t\ttry {", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\tactualOutput =", "-\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\"\\n\",", "-\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\tString actualOutput =", "+\t\t\tdisassembler.disassemble(", "+\t\t\t\tclassFileBytes,", "+\t\t\t\t\"\\n\",", "+\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbecc83c598334b9d34c4ac98a2fdbc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void test059()", "signatureAfterChange": " \t \tpublic void test059() throws Exception", "diff": ["-\tpublic void test059() {", "+\t", "+\tpublic void test059() throws Exception {", "-\t\tString actualOutput = null;", "-\t\ttry {", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\tactualOutput =", "-\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\"\\n\",", "-\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\tString actualOutput =", "+\t\t\tdisassembler.disassemble(", "+\t\t\t\tclassFileBytes,", "+\t\t\t\t\"\\n\",", "+\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}], "num": 3839}