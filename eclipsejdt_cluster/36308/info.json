{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f50410c5a5ed0729a8a3418db0fc2c31", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b93c26f7c3cdc3ef9ae51cd9d7e00a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "signatureAfterChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "diff": ["-\tuseAssertAsAnIndentifier = false;\r", "+\r", "-\t\tcase 'a' : \r", "-\t\t\tswitch(length) {\r", "-\t\t\t\tcase 8: //abstract\r", "-\t\t\t\t\tif ((data[++index] == 'b')\r", "-\t\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t\t&& (data[++index] == 't')\r", "-\t\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t\t&& (data[++index] == 'a')\r", "-\t\t\t\t\t\t&& (data[++index] == 'c')\r", "-\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\t\t\treturn TokenNameabstract;\r", "-\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\tcase 6: // assert\r", "-\t\t\t\t\tif ((data[++index] == 's')\r", "-\t\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t\t&& (data[++index] == 'e')\r", "-\t\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\t\t\tif (assertMode) {\r", "-\t\t\t\t\t\t\t\tcontainsAssertKeyword = true;\r", "-\t\t\t\t\t\t\t\treturn TokenNameassert;\r", "-\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\tuseAssertAsAnIndentifier = true;\r", "-\t\t\t\t\t\t\t\treturn TokenNameIdentifier;\t\t\t\t\t\t\t\t\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\tdefault: \r", "-\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\tcase 'a' : //abstract\r", "+\t\t\tif (length == 8) {\r", "+\t\t\t\tif ((data[++index] == 'b')\r", "+\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t&& (data[++index] == 't')\r", "+\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t&& (data[++index] == 'a')\r", "+\t\t\t\t\t&& (data[++index] == 'c')\r", "+\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\treturn TokenNameabstract;\r", "+\t\t\t\t}\r", "+\t\t\treturn TokenNameIdentifier;\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5ce1999d3531c6d12222a7d252f5a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "signatureAfterChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "diff": ["-\tuseAssertAsAnIndentifier = false;\r", "+\r", "-\t\tcase 'a' : \r", "-\t\t\tswitch(length) {\r", "-\t\t\t\tcase 8: //abstract\r", "-\t\t\t\t\tif ((data[++index] == 'b')\r", "-\t\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t\t&& (data[++index] == 't')\r", "-\t\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t\t&& (data[++index] == 'a')\r", "-\t\t\t\t\t\t&& (data[++index] == 'c')\r", "-\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\t\t\treturn TokenNameabstract;\r", "-\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\tcase 6: // assert\r", "-\t\t\t\t\tif ((data[++index] == 's')\r", "-\t\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t\t&& (data[++index] == 'e')\r", "-\t\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\t\t\tif (assertMode) {\r", "-\t\t\t\t\t\t\t\tcontainsAssertKeyword = true;\r", "-\t\t\t\t\t\t\t\treturn TokenNameassert;\r", "-\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\tuseAssertAsAnIndentifier = true;\r", "-\t\t\t\t\t\t\t\treturn TokenNameIdentifier;\t\t\t\t\t\t\t\t\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\tdefault: \r", "-\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\tcase 'a' : //abstract\r", "+\t\t\tif (length == 8) {\r", "+\t\t\t\tif ((data[++index] == 'b')\r", "+\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t&& (data[++index] == 't')\r", "+\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t&& (data[++index] == 'a')\r", "+\t\t\t\t\t&& (data[++index] == 'c')\r", "+\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\treturn TokenNameabstract;\r", "+\t\t\t\t}\r", "+\t\t\treturn TokenNameIdentifier;\r", "+\r"]}], "num": 36308}