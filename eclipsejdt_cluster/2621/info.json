{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41e5d1ff83de4013809445d33df042e3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20cb461fd7fac8d381c6c811c001269c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+", "+\t\tprintIndent(indent, output).append(\"do\"); //$NON-NLS-1$", "+\t\tif (action == null)", "+\t\t\toutput.append(\" ;\\n\"); //$NON-NLS-1$", "+\t\telse {", "+\t\t\toutput.append('\\n');", "+\t\t\taction.printStatement(indent + 1, output).append('\\n');", "+\t\t}", "+\t\toutput.append(\"while (\"); //$NON-NLS-1$", "+\t\treturn condition.printExpression(0, output).append(\");\"); //$NON-NLS-1$", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tString inFront, s = tabString(tab);", "-\t\tinFront = s;", "-\t\ts = s + \"do\"; //$NON-NLS-1$", "-\t\tif (action == null)", "-\t\t\ts = s + \" {}\\n\"; //$NON-NLS-1$", "-\t\telse if (action instanceof Block)", "-\t\t\ts = s + \"\\n\" + action.toString(tab + 1) + \"\\n\"; //$NON-NLS-2$ //$NON-NLS-1$", "-\t\telse", "-\t\t\ts = s + \" {\\n\" + action.toString(tab + 1) + \";}\\n\"; //$NON-NLS-1$ //$NON-NLS-2$", "-\t\ts = s + inFront + \"while (\" + condition.toStringExpression() + \")\"; //$NON-NLS-1$ //$NON-NLS-2$", "-\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b58f27b2d2eb477472168d29d89909e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+", "+\t\tprintIndent(indent, output).append(\"if (\"); //$NON-NLS-1$", "+\t\tcondition.printExpression(0, output).append(\")\\n\");\t//$NON-NLS-1$ ", "+\t\tthenStatement.printStatement(indent + 2, output);", "+\t\tif (elseStatement != null) {", "+\t\t\toutput.append('\\n');", "+\t\t\tprintIndent(indent, output);", "+\t\t\toutput.append(\"else\\n\"); //$NON-NLS-1$", "+\t\t\telseStatement.printStatement(indent + 2, output);", "+\t\t}", "+\t\treturn output;", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tString inFront, s = tabString(tab);", "-\t\tinFront = s;", "-\t\ts = s + \"if (\" + condition.toStringExpression() + \") \\n\";\t//$NON-NLS-1$ //$NON-NLS-2$", "-\t\ts = s + thenStatement.toString(tab + 2) + \";\"; //$NON-NLS-1$", "-\t\tif (elseStatement != null)", "-\t\t\ts = s + \"\\n\" + inFront + \"else\\n\" + elseStatement.toString(tab + 2) + \";\"; //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-3$", "-\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18ee20f37eaf4ce083760b0c4476511", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+\t\tprintIndent(indent, output).append(\"try \\n\"); //$NON-NLS-1$", "+\t\ttryBlock.printStatement(indent + 1, output); //$NON-NLS-1$", "+", "+\t\t//catches", "+\t\tif (catchBlocks != null)", "+\t\t\tfor (int i = 0; i < catchBlocks.length; i++) {", "+\t\t\t\t\toutput.append('\\n');", "+\t\t\t\t\tprintIndent(indent, output).append(\"catch (\"); //$NON-NLS-1$", "+\t\t\t\t\tcatchArguments[i].print(0, output).append(\") \"); //$NON-NLS-1$", "+\t\t\t\t\tcatchBlocks[i].printStatement(indent + 1, output);", "+\t\t\t}", "+\t\t//finally", "+\t\tif (finallyBlock != null) {", "+\t\t\toutput.append('\\n');", "+\t\t\tprintIndent(indent, output).append(\"finally\\n\"); //$NON-NLS-1$", "+\t\t\tfinallyBlock.printStatement(indent + 1, output);", "+\t\t}", "+", "+\t\treturn output;", "+\t}", "-", "-\tpublic String toString(int tab) {", "-\t\tString s = tabString(tab);", "-\t\t//try", "-\t\ts = s + \"try \"; //$NON-NLS-1$", "-\t\ts = s + \"\\n\" + tryBlock.toString(tab + 1); //$NON-NLS-1$", "-", "-\t\t//catches", "-\t\tif (catchBlocks != null)", "-\t\t\tfor (int i = 0; i < catchBlocks.length; i++)", "-\t\t\t\t\ts = s + \"\\n\" + tabString(tab) + \"catch (\" //$NON-NLS-2$ //$NON-NLS-1$", "-\t\t\t\t\t\t+catchArguments[i].toString(0) + \") \" //$NON-NLS-1$", "-\t\t\t\t\t\t+catchBlocks[i].toString(tab + 1);", "-\t\t//finally", "-\t\tif (finallyBlock != null) {", "-\t\t\ts = s + \"\\n\" + tabString(tab) + \"finally\\n\" + //$NON-NLS-2$ //$NON-NLS-1$", "-\t\t\tfinallyBlock.toString(tab + 1);", "-\t\t}", "-", "-\t\treturn s;"]}], "num": 2621}