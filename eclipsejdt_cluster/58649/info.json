{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "674cc531af04b114e5eb1cb48cdd3a50", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d102e38d2efb3b5e28e5e86637c8fe1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ade133e0ba99ce8f261b5dbbb001561f152f4db8", "commitAfterChange": "a6c0426e8a97e5c69fdac3bea072af18fea82d0e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic static IPath resolveDotDot(IPath path)", "signatureAfterChange": " \tpublic static IPath resolveDotDot(IPath reference, IPath path)", "diff": ["-\tpublic static IPath resolveDotDot(IPath path) {", "+\tpublic static IPath resolveDotDot(IPath reference, IPath path) {", "-\t\tIPath workspaceLocation = null;", "-\t\tfor (int i = 0, length = path.segmentCount(); i < length; i++) {", "-\t\t\tString segment = path.segment(i);", "-\t\t\tif (DOT_DOT.equals(segment)) {", "-\t\t\t\tif (newPath == null) {", "-\t\t\t\t\tif (i == 0) {", "-\t\t\t\t\t\tworkspaceLocation = workspaceRoot.getLocation();", "-\t\t\t\t\t\tnewPath = workspaceLocation;", "+\t\tIPath workspaceLocation = workspaceRoot.getLocation();", "+\t\tif (reference == null || workspaceLocation.isPrefixOf(reference)) {", "+\t\t\tfor (int i = 0, length = path.segmentCount(); i < length; i++) {", "+\t\t\t\tString segment = path.segment(i);", "+\t\t\t\tif (DOT_DOT.equals(segment)) {", "+\t\t\t\t\tif (newPath == null) {", "+\t\t\t\t\t\tif (i == 0) {", "+\t\t\t\t\t\t\tnewPath = workspaceLocation;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tnewPath = path.removeFirstSegments(i);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tnewPath = path.removeFirstSegments(i);", "+\t\t\t\t\t\tif (newPath.segmentCount() > 0) {", "+\t\t\t\t\t\t\tnewPath = newPath.removeLastSegments(1);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tnewPath = workspaceLocation;", "+\t\t\t\t\t\t}", "-\t\t\t\t} else {", "+\t\t\t\t} else if (newPath != null) {", "+\t\t\t\t\tif (newPath.equals(workspaceLocation) && workspaceRoot.getProject(segment).isAccessible()) {", "+\t\t\t\t\t\tnewPath = new Path(segment).makeAbsolute();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tnewPath = newPath.append(segment);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\telse {", "+\t\t\tfor (int i = 0, length = path.segmentCount(); i < length; i++) {", "+\t\t\t\tString segment = path.segment(i);", "+\t\t\t\tif (DOT_DOT.equals(segment)) {", "+\t\t\t\t\tif (newPath == null){", "+\t\t\t\t\t\tnewPath = reference;", "+\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tworkspaceLocation = workspaceRoot.getLocation();", "-\t\t\t\t\t\tnewPath = workspaceLocation;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else if (newPath != null) {", "-\t\t\t\tif (newPath.equals(workspaceLocation) && workspaceRoot.getProject(segment).isAccessible()) {", "-\t\t\t\t\tnewPath = new Path(segment).makeAbsolute();", "-\t\t\t\t} else {", "+\t \t\t\t\t}", "+\t\t\t\t} else if (newPath != null) {", "-\t\t\t\t}", "+\t \t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe0fbfff739816fb8c9519518145824e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate Openable createElement(IResource resource, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tprivate Openable createElement(IResource resource, int elementType, RootInfo rootInfo)", "diff": ["-\t\t\t\t\t\telement = (Openable)rootInfo.project;", "+\t\t\t\t\t\telement = rootInfo.project;", "-\t\t\t\telement = rootInfo == null ? JavaCore.create(resource) : rootInfo.project.getPackageFragmentRoot(resource);", "+\t\t\t\telement = rootInfo == null ? JavaCore.create(resource) : rootInfo.getPackageFragmentRoot(resource);", "-\t\t\t\t// find the element that encloses the resource", "-\t\t\t\tthis.popUntilPrefixOf(path);", "-\t\t\t\t", "-\t\t\t\tif (this.currentElement == null) {", "-\t\t\t\t\telement = rootInfo == null ? JavaCore.create(resource) : JavaModelManager.create(resource, rootInfo.project);", "-\t\t\t\t} else {", "-\t\t\t\t\t// find the root", "-\t\t\t\t\tIPackageFragmentRoot root = this.currentElement.getPackageFragmentRoot();", "-\t\t\t\t\tif (root == null) {", "-\t\t\t\t\t\telement =  rootInfo == null ? JavaCore.create(resource) : JavaModelManager.create(resource, rootInfo.project);", "-\t\t\t\t\t} else if (((JavaProject)root.getJavaProject()).contains(resource)) {", "+\t\t\t\tif (rootInfo != null) {", "+\t\t\t\t\tif (rootInfo.project.contains(resource)) {", "+\t\t\t\t\t\tIPackageFragmentRoot root = rootInfo.getPackageFragmentRoot(null);", "-\t\t\t\t\t\tIPath pkgPath = path.removeFirstSegments(root.getPath().segmentCount());", "+\t\t\t\t\t\tIPath pkgPath = path.removeFirstSegments(rootInfo.rootPath.segmentCount());", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// find the element that encloses the resource", "+\t\t\t\t\tthis.popUntilPrefixOf(path);", "+\t\t\t\t", "+\t\t\t\t\tif (this.currentElement == null) {", "+\t\t\t\t\t\telement = JavaCore.create(resource);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// find the root", "+\t\t\t\t\t\tIPackageFragmentRoot root = this.currentElement.getPackageFragmentRoot();", "+\t\t\t\t\t\tif (root == null) {", "+\t\t\t\t\t\t\telement =  JavaCore.create(resource);", "+\t\t\t\t\t\t} else if (((JavaProject)root.getJavaProject()).contains(resource)) {", "+\t\t\t\t\t\t\t// create package handle", "+\t\t\t\t\t\t\tIPath pkgPath = path.removeFirstSegments(root.getPath().segmentCount());", "+\t\t\t\t\t\t\tString pkg = Util.packageName(pkgPath);", "+\t\t\t\t\t\t\tif (pkg == null) return null;", "+\t\t\t\t\t\t\telement = root.getPackageFragment(pkg);", "+\t\t\t\t\t\t}"]}], "num": 58649}