{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c1a397bc8a2c1465e4f631b9857f4a2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b16a4f252c96735559a4168c98a7c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tprivate void extractContext(CategorizedProblem problem, char[] unitSource)", "signatureAfterChange": " \t\tprivate void extractContext(CategorizedProblem problem, char[] unitSource)", "diff": ["-\t\t\t\tthis.parameters.put(VALUE, Messages.problem_noSourceInformation); ", "-\t\t\t\tthis.parameters.put(SOURCE_START, \"-1\"); //$NON-NLS-1$", "-\t\t\t\tthis.parameters.put(SOURCE_END, \"-1\"); //$NON-NLS-1$", "+\t\t\t\tthis.parameters.put(Logger.VALUE, Messages.problem_noSourceInformation); ", "+\t\t\t\tthis.parameters.put(Logger.SOURCE_START, \"-1\"); //$NON-NLS-1$", "+\t\t\t\tthis.parameters.put(Logger.SOURCE_END, \"-1\"); //$NON-NLS-1$", "-\t\t\tthis.parameters.put(VALUE, String.valueOf(buffer));", "-\t\t\tthis.parameters.put(SOURCE_START, Integer.toString(startPosition - begin));", "-\t\t\tthis.parameters.put(SOURCE_END, Integer.toString(endPosition - begin));", "+\t\t\tthis.parameters.put(Logger.VALUE, String.valueOf(buffer));", "+\t\t\tthis.parameters.put(Logger.SOURCE_START, Integer.toString(startPosition - begin));", "+\t\t\tthis.parameters.put(Logger.SOURCE_END, Integer.toString(endPosition - begin));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac12697e82d0413f6d888ef89cdb0248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "826c1497ef50e42a080ff7fc6fbbf447e4fe5c5c", "commitAfterChange": "26bd1fe56056b720ce5a64b81a3abfa348d52071", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\tif (imports != null){", "+\t\t\tif (imports != null) {", "-\t\t\t\t\tif (!typeImport.onDemand)", "-\t\t\t\t\t\tif (CharOperation.equals(typeImport.compoundName[typeImport.compoundName.length - 1], name))", "+\t\t\t\t\tif (!typeImport.onDemand) {", "+\t\t\t\t\t\tif (CharOperation.equals(typeImport.compoundName[typeImport.compoundName.length - 1], name)) {", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\tunitScope.recordReference(unitScope.fPackage.compoundName, name);", "-\t\t\tif (binding instanceof ReferenceBinding) return binding;", "+\t\t\tif (binding instanceof ReferenceBinding) return binding; // type is always visible to its own package", "-\t\t\tif (imports != null){", "+\t\t\tif (imports != null) {", "-\t\t\tif (type != null)", "-\t\t\t\treturn type;", "-\t\t}", "-\t\t// see if the name is a package", "-\t\tif ((mask & PACKAGE) != 0) {", "-\t\t\tcompilationUnitScope().recordSimpleReference(name);", "-\t\t\tPackageBinding packageBinding = unitScope.environment.getTopLevelPackage(name);", "-\t\t\tif (packageBinding != null)", "-\t\t\t\treturn packageBinding;", "+\t\t\tif (type != null) return type;", "-\t\tcompilationUnitScope().recordSimpleReference(name);", "-\t\t// Answer error binding -- could not find name", "-\t\tif (foundType != null){", "-\t\t\treturn foundType;", "+\t\tunitScope.recordSimpleReference(name);", "+\t\tif ((mask & PACKAGE) != 0) {", "+\t\t\tPackageBinding packageBinding = unitScope.environment.getTopLevelPackage(name);", "+\t\t\tif (packageBinding != null) return packageBinding;", "+", "+\t\t// Answer error binding -- could not find name", "+\t\tif (foundType != null) return foundType; // problem type from above"]}], "num": 53511}