{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1be30399977725dfef487adcdd6619e4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e78e90ba4220fb81f083e8ea96ba1e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "cafb00c9a05a5f3d6c3b24a32fe9b4ce9e8ba449", "commitAfterChange": "055cf2299e246e07310e3c00069174f749475bd4", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic void testParameterAnnotations_since_3() throws Exception", "signatureAfterChange": "  \tpublic void testParameterAnnotations_since_3() throws Exception", "diff": ["+\t\t{", "+\t\t\tSingleVariableDeclaration decl= ast.newSingleVariableDeclaration();", "+\t\t\t", "+\t\t\tMarkerAnnotation markerAnnotation= ast.newMarkerAnnotation();", "+\t\t\tmarkerAnnotation.setTypeName(ast.newSimpleName(\"X\"));", "+\t\t\tdecl.modifiers().add(markerAnnotation);", "+\t\t\t", "+\t\t\tType type= ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\tdecl.setType(type);", "+\t\t\t", "+\t\t\tdecl.setName(ast.newSimpleName(\"e\"));", "+\t\t\t", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "+\t\t\tlistRewrite.insertLast(decl, null);", "+\t\t}", "+\t\t", "-\t\tbuf.append(\"    public void foo(@X @A int a, @B2 int b, @X int c, @X int d) {\\n\");", "+\t\tbuf.append(\"    public void foo(@X @A int a, @B2 int b, @X int c, @X int d, @X int e) {\\n\");", "-\t\tbuf.append(\"    public void foo(@X\\n    @A int a, @B2 int b, @X\\n    int c, @X int d) {\\n\");", "+\t\tbuf.append(\"    public void foo(@X\\n    @A int a, @B2 int b, @X\\n    int c, @X int d, @X\\n    int e) {\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecdf39b5c251c6ef2bf8f77a8bf17884", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingExpressionsTest.java", "commitBeforeChange": "ac894da9b0ea3c039ce6982330527517abe54897", "commitAfterChange": "e3d1a6cf758d351b80734729b068cc97373e684d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void testArrayCreation() throws Exception", "signatureAfterChange": "   \tpublic void testArrayCreation() throws Exception", "diff": ["-\t/** @deprecated using deprecated code */", "+\t\t{\t// add a new ArrayCreation", "+\t\t\tArrayCreation arrayCreation= ast.newArrayCreation();", "+\t\t\tarrayCreation.setType(ast.newArrayType(ast.newSimpleType(ast.newSimpleName(\"Object\")), 3));", "+\t\t\tarrayCreation.dimensions().add(ast.newNumberLiteral(\"1\"));", "+\t\t\tarrayCreation.dimensions().add(ast.newNumberLiteral(\"2\"));", "+\t\t\t", "+\t\t\trewrite.getListRewrite(invocation, MethodInvocation.ARGUMENTS_PROPERTY).insertLast(arrayCreation, null);", "+\t\t}", "-\t\tbuf.append(\"        new int[10][11][]);\\n\");", "+\t\tbuf.append(\"        new int[10][11][], new Object[1][2][]);\\n\");"]}], "num": 27294}