{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2a7b307f22c4a7959ec55211693207d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18969ea57e5528b352b45bc58725ba5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/SpacePreparator.java", "commitBeforeChange": "177bca2477eed7a981cb9ea493990d89700e7c50", "commitAfterChange": "9005c9ffea5dbe589da9a701dec94633587d8b3b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \r \tprivate void handleAnnotation(Annotation node, boolean handleParenthesis)", "signatureAfterChange": "\r \r \tprivate void handleAnnotation(Annotation node, boolean handleParenthesis)", "diff": ["-\t\tif (!(parent instanceof Annotation) && !(parent instanceof ArrayInitializer))\r", "+\t\tboolean skipSpaceAfter = parent instanceof Annotation || parent instanceof MemberValuePair\r", "+\t\t\t\t|| (parent instanceof AnnotationTypeMemberDeclaration\r", "+\t\t\t\t\t\t&& ((AnnotationTypeMemberDeclaration) parent).getDefault() == node)\r", "+\t\t\t\t|| parent instanceof ArrayInitializer;\r", "+\t\tif (!skipSpaceAfter)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af459facb345014509ddd41732cf5b81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "2f81606b204235a7fea213d9e3c8df9d3bed65b9", "commitAfterChange": "af85a4064bb6dcfadda2603d722c6067b5a89418", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \r \tprivate BlockScope retrieveEnclosingScope(ASTNode node)", "signatureAfterChange": "\r \r \tprivate BlockScope retrieveEnclosingScope(ASTNode node)", "diff": ["-\t\twhile(!(currentNode instanceof MethodDeclaration) && !(currentNode instanceof Initializer) && !(currentNode instanceof FieldDeclaration)) {\r", "+\t\twhile(currentNode != null\r", "+\t\t\t&&!(currentNode instanceof MethodDeclaration)\r", "+\t\t\t&& !(currentNode instanceof Initializer)\r", "+\t\t\t&& !(currentNode instanceof FieldDeclaration)) {\r", "+\t\t}\r", "+\t\tif (currentNode == null) {\r", "+\t\t\treturn null;\r", "-\t\t// this is a MethodDeclaration\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b55dcd31201d7ed433c6f3bb59c0f987", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "177bca2477eed7a981cb9ea493990d89700e7c50", "commitAfterChange": "9005c9ffea5dbe589da9a701dec94633587d8b3b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tprivate void handleAnnotation(Annotation node)", "signatureAfterChange": "  \tprivate void handleAnnotation(Annotation node)", "diff": ["-\t\t} else if (parentNode instanceof MethodDeclaration", "-\t\t\t\t|| parentNode instanceof AnnotationTypeMemberDeclaration) {", "+\t\t} else if (parentNode instanceof MethodDeclaration) {", "+\t\t} else if (parentNode instanceof AnnotationTypeMemberDeclaration) {", "+\t\t\tbreakAfter = this.options.insert_new_line_after_annotation_on_method", "+\t\t\t\t\t&& ((AnnotationTypeMemberDeclaration) parentNode).getDefault() != node;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9b8c528b24c5b02e86e5d9f32127048", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "4a2995e55bb490ddda70decb3fa4c48aaec59c94", "commitAfterChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate void handleBodyDeclarations(List<BodyDeclaration> bodyDeclarations)", "signatureAfterChange": "  \tprivate void handleBodyDeclarations(List<BodyDeclaration> bodyDeclarations)", "diff": ["-\t\t\t\tint blankLines;", "-\t\t\t\tif (bodyDeclaration instanceof FieldDeclaration)", "+\t\t\t\tint blankLines = 0;", "+\t\t\t\tif (bodyDeclaration instanceof FieldDeclaration) {", "-\t\t\t\telse if (bodyDeclaration instanceof AbstractTypeDeclaration)", "+\t\t\t\t} else if (bodyDeclaration instanceof AbstractTypeDeclaration) {", "-\t\t\t\telse", "+\t\t\t\t} else if (bodyDeclaration instanceof MethodDeclaration", "+\t\t\t\t\t\t|| bodyDeclaration instanceof AnnotationTypeMemberDeclaration) {", "+\t\t\t\t}"]}], "num": 5492}