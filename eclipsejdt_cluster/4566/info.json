{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16effc48cb385cb8d3eb1cf352c18a73", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23fbcbd71458a78a82b29b6c87b40c99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "bbb21a5affc4d3b9808e8ab897f64d3b1e68b6b2", "commitAfterChange": "e57c1379bf2ab200d310135306edb2776411f753", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static synchronized char[] scannedIdentifier(String id, String sourceLevel, String complianceLevel)", "signatureAfterChange": " \tprivate static synchronized char[] scannedIdentifier(String id, String sourceLevel, String complianceLevel)", "diff": ["-\t\tString trimmed = id.trim();", "-\t\tif (!trimmed.equals(id)) {", "-\t\t\treturn null;", "-\t\t}", "-", "-\t\t// Read identifier", "-\t\t\tint token = SCANNER.getNextToken();", "-\t\t\tchar[] currentIdentifier;", "-\t\t\ttry {", "-\t\t\t\tcurrentIdentifier = SCANNER.getCurrentIdentifierSource();", "-\t\t\t} catch (ArrayIndexOutOfBoundsException e) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t\tint nextToken= SCANNER.getNextToken();", "-\t\t\tif (token == TerminalTokens.TokenNameIdentifier ", "-\t\t\t\t&& nextToken == TerminalTokens.TokenNameEOF", "-\t\t\t\t&& SCANNER.startPosition == SCANNER.source.length) { // to handle case where we had an ArrayIndexOutOfBoundsException ", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     // while reading the last token", "-\t\t\t\treturn currentIdentifier;", "+\t\t\tint token = SCANNER.scanIdentifier();", "+\t\t\tif (token != TerminalTokens.TokenNameIdentifier) return null; ", "+\t\t\tif (SCANNER.currentPosition == SCANNER.eofPosition) { // to handle case where we had an ArrayIndexOutOfBoundsException ", "+\t\t\t\ttry {", "+\t\t\t\t\treturn SCANNER.getCurrentIdentifierSource();", "+\t\t\t\t} catch (ArrayIndexOutOfBoundsException e) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6caa1350f367387b8a5cbfad32cc39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 125, "signatureBeforeChange": "  \tprivate void retrieveIdentifierAndSetPositions(int start, int end, Name name)", "signatureAfterChange": "  \tprotected void retrieveIdentifierAndSetPositions(int start, int end, Name name)", "diff": ["-", "-\tprivate void retrieveIdentifierAndSetPositions(int start, int end, Name name) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\tint token;", "-\t\ttry {", "-\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "-\t\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "-\t\t\t\t\tint startName = this.scanner.startPosition;", "-\t\t\t\t\tint endName = this.scanner.currentPosition - 1;", "-\t\t\t\t\tname.setSourceRange(startName, endName - startName + 1);", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t}", "+", "+\tprotected void retrieveIdentifierAndSetPositions(int start, int end, Name name) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\tint token;", "+\t\ttry {", "+\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "+\t\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "+\t\t\t\t\tint startName = this.scanner.startPosition;", "+\t\t\t\t\tint endName = this.scanner.currentPosition - 1;", "+\t\t\t\t\tname.setSourceRange(startName, endName - startName + 1);", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc86be3367626e2163b9ee32e6628cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 128, "signatureBeforeChange": "  \tprivate int retrieveProperRightBracketPosition(int bracketNumber, int start, int end)", "signatureAfterChange": "  \tprotected int retrieveProperRightBracketPosition(int bracketNumber, int start, int end)", "diff": ["-", "-\tprivate int retrieveProperRightBracketPosition(int bracketNumber, int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\ttry {", "-\t\t\tint token, count = 0;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "-\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\tif (count == bracketNumber) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+", "+\tprotected int retrieveProperRightBracketPosition(int bracketNumber, int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token, count = 0;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "+\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\tif (count == bracketNumber) {", "+\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}], "num": 4566}