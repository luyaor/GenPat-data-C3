{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c6a6752116248d0c9733151c9e3100a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b963ca484d78621390ec6a904d44b1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test020() throws JavaModelException", "signatureAfterChange": " public void test020() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns}, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNRIT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns}, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DRICENUNRIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d202bea4d346ccba9e9f19f7ae45439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "ecada4c83134a67c5ff4de277c18f30bcd5fe5c7", "commitAfterChange": "b64375957346f60b0f9d5970f210b34962a1292a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tpreferences.setDefault(COMPILER_PB_LOCAL_VARIABLE_HIDING, WARNING);", "+\t\tpreferences.setDefault(COMPILER_PB_LOCAL_VARIABLE_HIDING, IGNORE);", "-\t\tpreferences.setDefault(COMPILER_PB_FIELD_HIDING, WARNING);", "+\t\tpreferences.setDefault(COMPILER_PB_FIELD_HIDING, IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15966f584f9cd0e3fd7dac549bd3b114", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "1b7318e8b4bff96e8318070fbe6e3d3cd574e2b0", "commitAfterChange": "13d04cce0ea1e365f1d568669e2b131c84e2d694", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic void printTrailingCommentForEmptyStatement()", "signatureAfterChange": "  \tpublic void printTrailingCommentForEmptyStatement()", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getCurrentTokenSource());", "+\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "-\t\t\t\t\t\tthis.printBlockComment(this.scanner.getCurrentTokenSource());", "+\t\t\t\t\t\tthis.printBlockComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "168b9413477fbb4980861c00044daae9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "bd6483f3cabfe3766f6db22ff5aa830fa8dfa3a6", "commitAfterChange": "7fab23d98d7da007d4ab0962fe5ae1e3b7c7bbea", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["-\t\t\tILocalVariable localVar = (ILocalVariable) element;", "+\t\t\tLocalVariable localVar = (LocalVariable) element;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16ccb845fe96824fc08a31fc0c87e812", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": "\t  \tpublic void test159()", "signatureAfterChange": "\t  \tpublic void test159()", "diff": ["-\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(JavaCore.getOptions());", "+\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getEclipse21Settings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aa22281e10c4a906b570c3ea6c63c89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "605463bb98397b59c78b7fc56ee33e7e22fd8367", "commitAfterChange": "7428bd3b18a16b1860e6a1a28fbc6cd63967fdc6", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tprivate void printJavadocNewLine(StringBuffer buffer)", "signatureAfterChange": "  \tprivate void printJavadocNewLine(StringBuffer buffer)", "diff": ["-\t    buffer.append(JAVADOC_LINE_PREFIX);", "-\t    this.column += JAVADOC_LINE_PREFIX_LENGTH;", "+\t    buffer.append(BLOCK_LINE_PREFIX);", "+\t    this.column += BLOCK_LINE_PREFIX_LENGTH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eefcb4e92ffe9c0eb830473df9efb7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private boolean checkKeyword()", "signatureAfterChange": " private boolean checkKeyword()", "diff": ["-\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.ABSTARCT)) {", "-\t\t\t\tkeywords[count++] = Keywords.ABSTARCT;", "+\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.ABSTRACT)) {", "+\t\t\t\tkeywords[count++] = Keywords.ABSTRACT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233a0beb5f37163ab4a5c151f387fcbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "6d7da1254151724e22f25d1be0ba01cba8049f5e", "commitAfterChange": "31f5d8c3352dfd40743cbafcdc19d9f5e7640d54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration(int depth, Set knownTypes)", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration(int depth, Set knownTypes)", "diff": ["-\tif (this.initializer != null)", "-\t\tthis.initializer.updateParseTree();", "+\tif (this.initializerLambda != null)", "+\t\tthis.initializerLambda.updateParseTree();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28686e918017eb1414ffc38590515dec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic CompilationUnit getAstCompilationUnit(final IFile file)", "signatureAfterChange": " \tpublic CompilationUnit getAstCompilationUnit(final IFile file)", "diff": ["-    \t\tfor( int i=0, len=_files.length; i<len; i++ ){", "-        \t\tif( file.equals(_files[i]) )", "+    \t\tfor( int i=0, len=_filesWithAnnotation.length; i<len; i++ ){", "+        \t\tif( file.equals(_filesWithAnnotation[i]) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6c8c8d4d3bb4581e8206247fa4f19a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 428, "methodNumberAfterChange": 428, "signatureBeforeChange": " \tpublic void test409()", "signatureAfterChange": " \tpublic void test409()", "diff": ["-\t\tpreferences.block_brace_position = DefaultCodeFormatterConstants.NEXT_LINE;", "-\t\tpreferences.switch_brace_position = DefaultCodeFormatterConstants.NEXT_LINE;", "+\t\tpreferences.brace_position_for_block = DefaultCodeFormatterConstants.NEXT_LINE;", "+\t\tpreferences.brace_position_for_switch = DefaultCodeFormatterConstants.NEXT_LINE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34a44de0c267de4aef92b0881657cdba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "faa2b6a635bef51dfcc1d4b570360b79e4799b52", "commitAfterChange": "a64e2bfe34ce5cd9321a9c519897f6c11db5eddd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic int compare(Object o1, Object o2)", "signatureAfterChange": " \t\tpublic int compare(Object o1, Object o2)", "diff": ["-\t\t\tint sourceStart1 = ((Integer) node1.getProperty(CompilationUnitSorter.SOURCE_START)).intValue();", "-\t\t\tint sourceStart2 = ((Integer) node2.getProperty(CompilationUnitSorter.SOURCE_START)).intValue();", "+\t\t\tint sourceStart1 = ((Integer) node1.getProperty(CompilationUnitSorter.RELATIVE_ORDER)).intValue();", "+\t\t\tint sourceStart2 = ((Integer) node2.getProperty(CompilationUnitSorter.RELATIVE_ORDER)).intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36af4e6181bbc6b25961c9f318be21ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "4796bbb8c785b0ec942a27f27b0f0f69122383e2", "commitAfterChange": "f9a0e8b1ad597138851f9750d5ab8a4d19320d69", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprotected static ArrayList getCurrentOperationStack()", "signatureAfterChange": " \tprotected static ArrayList getCurrentOperationStack()", "diff": ["-\t\tArrayList stack = (ArrayList)operationStacks.get();", "+\t\tArrayList stack = (ArrayList)OPERATION_STACKS.get();", "-\t\t\toperationStacks.set(stack);", "+\t\t\tOPERATION_STACKS.set(stack);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36e64f215c7170b5bcbdd39111e5a9e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void test025() throws JavaModelException", "signatureAfterChange": "  public void test025() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns}, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNRIT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns}, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DRICENUNRIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b9068af381aaded70d743b8940b0799", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "cc1b983a8e90a6eb8909a42b004cd126e56bf76f", "commitAfterChange": "400176b3d00d9671a0c4aab9bab4779b3ff7bf8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);", "+\t\tif (this.valueCast != null) ", "+\t\t\tcodeStream.checkcast(this.valueCast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5040a7c01582ae0b3bf87d3ec807e5cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 57, "signatureBeforeChange": " \t \tpublic IFile[] getFiles()", "signatureAfterChange": " \t \tpublic IFile[] getFiles()", "diff": ["-\t\tif(_files != null)", "-\t\t\treturn _files;", "+\t\tif(_filesWithAnnotation != null)", "+\t\t\treturn _filesWithAnnotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ddb397c5e014271ccdbfa3697613c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " protected void consumeAnnotationTypeDeclaration()", "signatureAfterChange": " protected void consumeAnnotationTypeDeclaration()", "diff": ["-\t\ttypeDecl.bits |= ASTNode.AddAssertionMASK;", "+\t\ttypeDecl.bits |= ASTNode.ContainsAssertion;", "-\t\ttypeDecl.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\ttypeDecl.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af8a44ad6a6e519e1f080c60e44d0f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ErrorsTests.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void test0100() throws JavaModelException", "signatureAfterChange": " public void test0100() throws JavaModelException", "diff": ["-\tassertEquals(JavaBuilder.GENERATED_BY, prob1[0].getGeneratedBy());", "+\tassertEquals(JavaBuilder.SOURCE_ID, prob1[0].getSourceId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7c5a3ff6f34791bf046c5a1025b464", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean visit(Block block, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Block block, BlockScope scope)", "diff": ["-\t\tString block_brace_position = this.preferences.block_brace_position;", "-\t\tformatOpeningBrace(block_brace_position, this.preferences.insert_space_before_block_open_brace);", "+\t\tString block_brace_position = this.preferences.brace_position_for_block;", "+\t\tformatOpeningBrace(block_brace_position, this.preferences.insert_space_before_opening_brace_in_block);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6201000daa74d4e9679e9829cbff9e99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  ReferenceBinding getType(char[] name)", "signatureAfterChange": "  ReferenceBinding getType(char[] name)", "diff": ["-\tif (binding == environment.theNotFoundType)", "+\tif (binding == LookupEnvironment.TheNotFoundType)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62aa5ec014c979cfd9516483c44be5c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "signatureAfterChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "diff": ["-\t\t\truleSet.messageTemplate = getMessageTemplate();", "+\t\t\truleSet.messageTemplates = getMessageTemplates();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64cda55ab977df69d9929b88b7144580", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5c7f45483ff98aea12080f74206c0fab992839fd", "commitAfterChange": "02ef51d23875b3324a5f0bd2ebcca5e0abc33d8e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\t\tthis.manager.javaProjectsCache = null;", "+\t\t\t\t\t\t\tthis.state.modelProjectsCache = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6d502d5de4eb2cd98b35708568deac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7c5e971605e3df9f80c39caf6a5dabceeb49148b", "commitAfterChange": "ffe39da04df0f3a3dcc2e15c0353857438ce8e35", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tprotected int retrievePositionBeforeNextCommaOrSemiColon(int start, int end)", "signatureAfterChange": " \tprotected int retrievePositionBeforeNextCommaOrSemiColon(int start, int end)", "diff": ["-\t\t\t\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isFakeTokenInserted()) {", "+\t\t\t\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isInsertedToken()) {", "-\t\t\t\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isFakeTokenInserted()) {", "+\t\t\t\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isInsertedToken()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d9b6a9c6737280c0c65f0f3ba3d1a91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ffa2b974bb9a001ab4f6065307624a4c089955ed", "commitAfterChange": "360ada2e6eb7e38d438bfa1da0bda2a11cc1935c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic void containerBeingInitializedPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "signatureAfterChange": " \t \tpublic void containerBeingInitializedPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "diff": ["-\t\tMap perProjectContainers = (Map)this.containersBeingInitiliazed.get();", "+\t\tMap perProjectContainers = (Map)this.containersBeingInitialized.get();", "-\t\t\tthis.containersBeingInitiliazed.set(perProjectContainers = new HashMap());", "+\t\t\tthis.containersBeingInitialized.set(perProjectContainers = new HashMap());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd8e9afd255a98e2ffa361b02393959", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "d2c58590f2033c1b5667f4a1933a33c844cb51b2", "commitAfterChange": "36ed82abbe7e502a978d9c0accfce6a012b19459", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tpreferences.setDefault(COMPILER_PB_UNUSED_IMPORT, IGNORE); ", "+\t\tpreferences.setDefault(COMPILER_PB_UNUSED_IMPORT, WARNING); ", "-\t\tpreferences.setDefault(COMPILER_PB_STATIC_ACCESS_RECEIVER, IGNORE); ", "+\t\tpreferences.setDefault(COMPILER_PB_STATIC_ACCESS_RECEIVER, WARNING); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f20149d07bd3c5c90d985e44474e9d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ErrorsTests.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test0103() throws JavaModelException", "signatureAfterChange": " public void test0103() throws JavaModelException", "diff": ["-\tassertEquals(JavaBuilder.GENERATED_BY, prob1[0].getGeneratedBy());", "+\tassertEquals(JavaBuilder.SOURCE_ID, prob1[0].getSourceId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71bf83b90978316ef1293d14fd729177", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ErrorsTests.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void test0104() throws JavaModelException", "signatureAfterChange": " public void test0104() throws JavaModelException", "diff": ["-\tassertEquals(JavaBuilder.GENERATED_BY, prob1[0].getGeneratedBy());", "+\tassertEquals(JavaBuilder.SOURCE_ID, prob1[0].getSourceId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7459b1264d5334cc2876e47c6d3ea60a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " protected void consumeClassDeclaration()", "signatureAfterChange": " protected void consumeClassDeclaration()", "diff": ["-\t\ttypeDecl.bits |= ASTNode.AddAssertionMASK;", "+\t\ttypeDecl.bits |= ASTNode.ContainsAssertion;", "-\t\ttypeDecl.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\ttypeDecl.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "748516e687b5b9b4676d0a184499e87a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test024() throws JavaModelException", "signatureAfterChange": "  public void test024() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns}, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNRIT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns}, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DRICENUNRIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74919cc091c695558ecc1406c329db69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": "  \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["-\t\tthis.tabWidth= Indents.getTabWidth(options);", "-\t\tthis.indentWidth= Indents.getIndentWidth(options);", "+\t\tthis.tabWidth= IndentManipulation.getTabWidth(options);", "+\t\tthis.indentWidth= IndentManipulation.getIndentWidth(options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77236b6b166ab8b4ec1275d6f58bef53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ErrorsTests.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test0102() throws JavaModelException", "signatureAfterChange": " public void test0102() throws JavaModelException", "diff": ["-\tassertEquals(JavaBuilder.GENERATED_BY, prob1[0].getGeneratedBy());", "+\tassertEquals(JavaBuilder.SOURCE_ID, prob1[0].getSourceId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d72ddb81ad5d6f1e85001610b59acd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getDeclarationModifiers());", "-\t\t\tscope.problemReporter().javadocDeprecatedField(this.binding, this, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocDeprecatedField(this.binding, this, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ccc0ba032a0cc0352bf93f0ded14745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": " protected void consumeInterfaceDeclaration()", "signatureAfterChange": " protected void consumeInterfaceDeclaration()", "diff": ["-\t\ttypeDecl.bits |= ASTNode.AddAssertionMASK;", "+\t\ttypeDecl.bits |= ASTNode.ContainsAssertion;", "-\t\ttypeDecl.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\ttypeDecl.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fdf3652544c40e2c8231deb67deb643", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void test1002() throws JavaModelException", "signatureAfterChange": " public void test1002() throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\t\treturn new String[] {IMarker.GENERATED_BY};", "+\t\t\t\t\t\t\t\t\treturn new String[] {IMarker.SOURCE_ID};", "-\tassertEquals(\"unexpected generated by attribute\", specificGeneratedBy, problems[0].getGeneratedBy());", "+\tassertEquals(\"unexpected generated by attribute\", specificGeneratedBy, problems[0].getSourceId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931f382d470cd967a12721c67ce1abb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getModifiers());", "+\t\t\t\t\t\tscope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getDeclarationModifiers());", "-\t\t\t\t\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getModifiers());", "+\t\t\t\t\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959d0c73e49f7c3b0ef9a0aafcf11024", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "dfed7f1b9ca73af170ad52dc060f4fca93f91582", "commitAfterChange": "24d2b526806e9f4be8e8354c9cfa88d403c9a6eb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void set(Map optionsMap)", "signatureAfterChange": " \t \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_ReportSuperfluousSemicolon)) != null) updateSeverity(SuperfluousSemicolon, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportEmptyStatement)) != null) updateSeverity(EmptyStatement, optionValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8e3a2bc2d4aa1d18d572c5e7aeae09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "dfed7f1b9ca73af170ad52dc060f4fca93f91582", "commitAfterChange": "24d2b526806e9f4be8e8354c9cfa88d403c9a6eb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["-\t\toptionsMap.put(OPTION_ReportSuperfluousSemicolon, getSeverityString(SuperfluousSemicolon)); ", "+\t\toptionsMap.put(OPTION_ReportEmptyStatement, getSeverityString(EmptyStatement)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a018783348da993223ef8a6f582f1995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "ecada4c83134a67c5ff4de277c18f30bcd5fe5c7", "commitAfterChange": "b64375957346f60b0f9d5970f210b34962a1292a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic static Map getDefaultOptions()", "signatureAfterChange": " \t \tpublic static Map getDefaultOptions()", "diff": ["-\t\t\tCompilerOptions.WARNING);", "+\t\t\tCompilerOptions.IGNORE);", "-\t\t\tCompilerOptions.WARNING);", "+\t\t\tCompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b00f8b15956fe89ed2807dfada48d1bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "0009387e0c4015a92288cf132098520c33029af3", "commitAfterChange": "926ee40c2f43466f4324f706aec73206e0a3c703", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInsideDeprecatedCode, ", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, ", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInsideDeprecatedCode, ", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b310015256b3b352881119746f0590ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "d80e82259a802550e3b9506059366003b42c8c51", "commitAfterChange": "d20e95b4de5c2193dbc890abafba5632c086cd82", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void consumeLocalVariableDeclarationStatement()", "signatureAfterChange": " protected void consumeLocalVariableDeclarationStatement()", "diff": ["-\t\tif ((this.selectionStart >= localDeclaration.declarationSourceStart) ", "-\t\t\t\t&&  (this.selectionEnd <= localDeclaration.declarationSourceEnd)) {", "+\t\tif ((this.selectionStart >= localDeclaration.sourceStart) ", "+\t\t\t\t&&  (this.selectionEnd <= localDeclaration.sourceEnd)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfe6960e7c54e3970145561bdf43d565", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractComparableTest.java", "commitBeforeChange": "c79bfbeb67e4687c48de7885eb121ce1ea14c01f", "commitAfterChange": "ff61aa704b87289ea0c126beac8453107bd32bdf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected void runJavac(String[] testFiles, final String expectedProblemLog, final String expectedSuccessOutputString, boolean shouldFlushOutputDirectory)", "signatureAfterChange": " \tprotected void runJavac(String[] testFiles, final String expectedProblemLog, final String expectedSuccessOutputString, boolean shouldFlushOutputDirectory)", "diff": ["-\t\t\tString testName = shortTestName();", "+\t\t\tString testName = testName();", "-\t\t\tIPath testDir =  new Path(Util.getOutputDirectory()).append(shortTestName());", "+\t\t\tIPath testDir =  new Path(Util.getOutputDirectory()).append(testName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3c1ea0dee024ac55b3e5838e109ed08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void addNotFoundType(char[] simpleName)", "signatureAfterChange": " private void addNotFoundType(char[] simpleName)", "diff": ["-\tknownTypes.put(simpleName, environment.theNotFoundType);", "+\tknownTypes.put(simpleName, LookupEnvironment.TheNotFoundType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7b88511152bed8c558bb279791d8414", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": " \tpublic void test191()", "signatureAfterChange": " \tpublic void test191()", "diff": ["-\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(JavaCore.getOptions());", "+\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getEclipse21Settings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2f21786e9c21c8db655251cf304528", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void testBug22043c() throws JavaModelException", "signatureAfterChange": "  public void testBug22043c() throws JavaModelException", "diff": ["-\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(Object), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.Object;)V, thisIsAMethod, (str), \"+this.positions+R_DICENUNR+\"}\\n\" + ", "-\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(Object), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.Object;)V, thisIsAMethod, (str), \"+this.positions+R_DRICENUNR+\"}\\n\" + ", "+\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7dd17a932cc744b134cd4330b195e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void saveIndex(Index index) throws IOException", "signatureAfterChange": " public void saveIndex(Index index) throws IOException", "diff": ["-\t\t\tUtil.verbose(\"-> saving index \" + index.getIndexFile()); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"-> saving index \" + index.getIndexLocation()); //$NON-NLS-1$", "-\t\tIPath indexLocation = computeIndexLocation(containerPath);", "+\t\tIndexLocation indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d3b2aabeafb3fc0a863590af18104b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ErrorsTests.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0101() throws JavaModelException", "signatureAfterChange": " public void test0101() throws JavaModelException", "diff": ["-\tassertEquals(JavaBuilder.GENERATED_BY, prob1[0].getGeneratedBy());", "+\tassertEquals(JavaBuilder.SOURCE_ID, prob1[0].getSourceId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7f76de00ee69c9294cb364459ceebb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "af4e6d900d5d8e7a9bf4d8017d7710df7047045e", "commitAfterChange": "f7f0c26c94c2835a4e4e5f46a3cd63b53d559a6d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected void addAction(IPostAction action)", "signatureAfterChange": " \tprotected void addAction(IPostAction action)", "diff": ["-\t\tif (length == ++this.actionsPtr) {", "+\t\tif (length == ++this.actionsEnd) {", "-\t\tthis.actions[this.actionsPtr] = action;", "+\t\tthis.actions[this.actionsEnd] = action;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d89404e9919d3e3c342efe0d1193d790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " protected void consumeAnnotationTypeDeclarationHeaderName()", "signatureAfterChange": " protected void consumeAnnotationTypeDeclarationHeaderName()", "diff": ["-\t\t\tannotationTypeDeclaration.bits |= ASTNode.IsMemberTypeMASK;", "+\t\t\tannotationTypeDeclaration.bits |= ASTNode.IsMemberType;", "-\t\tannotationTypeDeclaration.bits |= ASTNode.IsLocalTypeMASK;", "+\t\tannotationTypeDeclaration.bits |= ASTNode.IsLocalType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db41ceb1e09add9ca01c275a42dd284a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": " \t \tpublic ICompilationUnit getICompilationUnitForFile(final IFile file)", "signatureAfterChange": " \t \tpublic ICompilationUnit getICompilationUnitForFile(final IFile file)", "diff": ["-    \t\tfor( int i=0, len=_files.length; i<len; i++ ){", "-        \t\tif( file.equals(_files[i]) )", "+    \t\tfor( int i=0, len=_filesWithAnnotation.length; i<len; i++ ){", "+        \t\tif( file.equals(_filesWithAnnotation[i]) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1ea7d8abfdf96f3a7ee0f01c817e204", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ffa2b974bb9a001ab4f6065307624a4c089955ed", "commitAfterChange": "360ada2e6eb7e38d438bfa1da0bda2a11cc1935c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic IClasspathContainer containerBeingInitializedRemove(IJavaProject project, IPath containerPath)", "signatureAfterChange": "  \tpublic IClasspathContainer containerBeingInitializedRemove(IJavaProject project, IPath containerPath)", "diff": ["-\t\tMap perProjectContainers = (Map)this.containersBeingInitiliazed.get();", "+\t\tMap perProjectContainers = (Map)this.containersBeingInitialized.get();", "-\t\t\tthis.containersBeingInitiliazed.set(null);", "+\t\t\tthis.containersBeingInitialized.set(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e396db01179679db6b3706700418bcee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "1c367f9da4b67ddc705e012aa9c952ee4bdfc663", "commitAfterChange": "7974f4a5911052c39ead36f51d3952ab684e5130", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": " \tpublic boolean visit(TypeParameter node)", "signatureAfterChange": " \tpublic boolean visit(TypeParameter node)", "diff": ["-\t\t\tpos = rewriteTypeAnnotations(node, TypeParameter.ANNOTATIONS_PROPERTY, node.getStartPosition());", "+\t\t\tpos = rewriteModifiers2(node, TypeParameter.MODIFIERS_PROPERTY, node.getStartPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b65017f632a4d798a445d8cfb28449", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/SourceModifier.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic ReplaceEdit[] getModifications(String source)", "signatureAfterChange": " \t \tpublic ReplaceEdit[] getModifications(String source)", "diff": ["-\t\tint destIndentLevel= Indents.measureIndentUnits(this.destinationIndent, this.tabWidth, this.indentWidth);", "+\t\tint destIndentLevel= IndentManipulation.measureIndentUnits(this.destinationIndent, this.tabWidth, this.indentWidth);", "-\t\treturn Indents.getChangeIndentEdits(source, this.sourceIndentLevel, this.tabWidth, this.indentWidth, this.destinationIndent);", "+\t\treturn IndentManipulation.getChangeIndentEdits(source, this.sourceIndentLevel, this.tabWidth, this.indentWidth, this.destinationIndent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e528f8f23199464988ae594c3e57c2e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "1b7318e8b4bff96e8318070fbe6e3d3cd574e2b0", "commitAfterChange": "13d04cce0ea1e365f1d568669e2b131c84e2d694", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void printComment(boolean insertNewLineAfterComment)", "signatureAfterChange": "  \tpublic void printComment(boolean insertNewLineAfterComment)", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getCurrentTokenSource());", "+\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "-\t\t\t\t\t\tthis.printBlockComment(this.scanner.getCurrentTokenSource());", "+\t\t\t\t\t\tthis.printBlockComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f204c5bd8a7577b83b825c2c78b37450", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " protected void consumeEnumDeclaration()", "signatureAfterChange": " protected void consumeEnumDeclaration()", "diff": ["-\t\tenumDeclaration.bits |= ASTNode.AddAssertionMASK;", "+\t\tenumDeclaration.bits |= ASTNode.ContainsAssertion;", "-\t\tenumDeclaration.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\tenumDeclaration.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff5b507dc0133a0c9257bd1cac3d9d2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\tscope.problemReporter().javadocInvalidConstructor(this, this.binding, scope.getModifiers());", "+\t\t\t\tscope.problemReporter().javadocInvalidConstructor(this, this.binding, scope.getDeclarationModifiers());", "-\t\t\tscope.problemReporter().javadocDeprecatedMethod(this.binding, this, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocDeprecatedMethod(this.binding, this, scope.getDeclarationModifiers());"]}], "num": 6840}