{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cc5e05529587d93fe3818d20c3824aa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c28f3a398ecaa00f8df89af53dfd9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAddNewType() throws CoreException", "signatureAfterChange": " public void testAddNewType() throws CoreException", "diff": ["-\tnew SearchEngine(new ICompilationUnit[] {this.workingCopy}).search(", "-\t\tgetWorkspace(), ", "+\tSearchPattern pattern = SearchPattern.createPattern(", "+\t\tSearchPattern.R_EXACT_MATCH,", "+\t\ttrue", "+\t);", "+\tnew SearchEngine(new ICompilationUnit[] {this.workingCopy}).search(", "+\t\tpattern, ", "+\t\tnew SearchParticipant[] {SearchEngine.getDefaultSearchParticipant()},", "-\t\tresultCollector);", "+\t\tresultCollector,", "+\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4826253ce021f9d69e932f08d32372d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void testSearch4() throws CoreException", "signatureAfterChange": " \tpublic void testSearch4() throws CoreException", "diff": ["-\t\t\tnew SearchEngine(new ICompilationUnit[] {workingCopy}).search(", "-\t\t\t\tgetWorkspace(), ", "+\t\t\tSearchPattern pattern = SearchPattern.createPattern(", "+\t\t\t\tSearchPattern.R_PATTERN_MATCH,", "+\t\t\t\ttrue);", "+\t\t\tnew SearchEngine(new ICompilationUnit[] {workingCopy}).search(", "+\t\t\t\tpattern, ", "+\t\t\t\tnew SearchParticipant[] {SearchEngine.getDefaultSearchParticipant()},", "-\t\t\t\tresultCollector);", "+\t\t\t\tresultCollector,", "+\t\t\t\tnull);"]}], "num": 12267}