{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b69bf29023998e3458f150107f6d7354", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "050f5c5b79eb5bb657720a53da81bf17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "9a828b6f308f1048d5448d6c6f9c881639322d34", "commitAfterChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testGetReturnType()", "signatureAfterChange": " public void testGetReturnType()", "diff": ["+\t\tassertTrue(\"Signature#getReturnType is not correct: exception\", false);", "-\t\treturn;", "+\t\t// do nothing", "-\tassertTrue(\"Signature#getReturnType is not correct: exception\", false);", "+\t", "+\t// tests with 1.5-specific elements", "+\tmethodSig = \"<X:Qlist<Qstring;>;>(Qstring;Qobject;I)I^Qexception;^Qerror;\";", "+\tassertTrue(\"Signature#getReturnType is not correct2\", Signature.getReturnType(methodSig).equals(\"I\"));", "+\tmethodSig = \"<X:Qlist<Qstring;>;>(Qlist<Qstring;>;)Qlist<Qxxx;>;^Qexception;^Qerror;\";", "+\tassertTrue(\"Signature#getReturnType is not correct3\", Signature.getReturnType(methodSig).equals(\"Qlist<Qxxx;>;\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a22015e74347dee6e658640fc0a43cdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "79850b9241ef6ac63f9341f1e04e68f2cb70e4c3", "commitAfterChange": "ed03b97e41cec71a1f276a24a6c89d537dde57f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testValidPackageName()", "signatureAfterChange": " public void testValidPackageName()", "diff": ["+\tassertTrue(\"package name not recognized as invalid5\", JavaConventions.validatePackageName(\"Test.sample&plugin\").getSeverity() == IStatus.ERROR);", "+\tassertTrue(\"package name not recognized as unconventional2\", JavaConventions.validatePackageName(\"Test.sample\").getSeverity() == IStatus.WARNING);"]}], "num": 54039}