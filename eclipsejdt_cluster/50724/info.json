{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b9322788f134f3f99a5412c353b5c07", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d084fe0289c4257cda160076121e28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic IJavaModelStatus verify()", "signatureAfterChange": "\r public IJavaModelStatus verify()", "diff": ["+ */\r", "+public IJavaModelStatus verify() {\r", "+\tIJavaModelStatus status = super.verify();\r", "+\tif (!status.isOK()) {\r", "+\t\treturn status;\r", "+\t}\r", "+\tIJavaProject javaProject = (IJavaProject)getElementToProcess();\r", "-\t */\r", "-\tpublic IJavaModelStatus verify() {\r", "-\t\tIJavaModelStatus status = super.verify();\r", "-\t\tif (!status.isOK()) {\r", "-\t\t\treturn status;\r", "-\t\t}\r", "-\t\tIClasspathEntry[] cp = this.newRawPath;\r", "-\t\tIJavaProject javaProject = (IJavaProject) getElementToProcess();\r", "-\t\tIPath projectPath = javaProject.getProject().getFullPath();\r", "-\r", "-\t\tIPath outputLocation;\r", "-\t\ttry {\r", "-\t\t\toutputLocation = javaProject.getOutputLocation();\r", "-\t\t} catch (JavaModelException e) {\r", "-\t\t\treturn e.getJavaModelStatus();\r", "-\t\t}\r", "-\t\tfor (int i = 0; i < cp.length; i++) {\r", "-\t\t\tif (cp[i].getEntryKind() == IClasspathEntry.CPE_SOURCE) {\r", "-\t\t\t\tIPath entry = cp[i].getPath();\r", "-\t\t\t\tif (!entry.equals(projectPath)\r", "-\t\t\t\t\t&& !entry.equals(outputLocation)\r", "-\t\t\t\t\t&& (outputLocation.isPrefixOf(entry) || entry.isPrefixOf(outputLocation))) {\r", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, entry);\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn JavaModelStatus.VERIFIED_OK;\r", "+\t// retrieve output location\r", "+\tIPath outputLocation;\r", "+\ttry {\r", "+\t\toutputLocation = javaProject.getOutputLocation();\r", "+\t} catch(JavaModelException e){\r", "+\t\treturn e.getJavaModelStatus();\r", "+\treturn JavaConventions.validateClasspath(javaProject, this.newRawPath, outputLocation);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c8e7f024e3a76aa08b5cbbf01b39d92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "0aee0da8dedb4337034c2218c8361a59d0d8fa97", "commitAfterChange": "9687350fee055f775aa6db78ace631e357b68877", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r \tpublic IJavaModelStatus verify()", "signatureAfterChange": "\r \r \tpublic IJavaModelStatus verify()", "diff": ["-\t\tIJavaProject project = (IJavaProject) getElementToProcess();\r", "-\t\t// retrieve classpath \r", "-\t\tIClasspathEntry[] entries = this.newRawPath;\r", "-\t\tif (entries == ReuseClasspath){\r", "-\t\t\ttry {\r", "-\t\t\t\tentries = project.getRawClasspath();\t\t\t\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\treturn e.getJavaModelStatus();\r", "+\t\tif (needValidation) {\r", "+\t\t\tIJavaProject project = (IJavaProject) getElementToProcess();\r", "+\t\t\t// retrieve classpath \r", "+\t\t\tIClasspathEntry[] entries = this.newRawPath;\r", "+\t\t\tif (entries == ReuseClasspath){\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tentries = project.getRawClasspath();\t\t\t\r", "+\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\treturn e.getJavaModelStatus();\r", "+\t\t\t\t}\r", "+\t\t\t}\t\t\r", "+\t\t\t// retrieve output location\r", "+\t\t\tIPath outputLocation = this.newOutputLocation;\r", "+\t\t\tif (outputLocation == ReuseOutputLocation){\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\toutputLocation = project.getOutputLocation();\r", "+\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\treturn e.getJavaModelStatus();\r", "+\t\t\t\t}\r", "-\t\t}\t\t\r", "-\t\t// retrieve output location\r", "-\t\tIPath outputLocation = this.newOutputLocation;\r", "-\t\tif (outputLocation == ReuseOutputLocation){\r", "-\t\t\ttry {\r", "-\t\t\t\toutputLocation = project.getOutputLocation();\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\treturn e.getJavaModelStatus();\r", "-\t\t\t}\r", "+\t\t\t\t\t\r", "+\t\t\t// perform validation\r", "+\t\t\treturn JavaConventions.validateClasspath(\r", "+\t\t\t\tproject,\r", "+\t\t\t\tentries,\r", "+\t\t\t\toutputLocation);\r", "-\t\t// perform validation\r", "-\t\treturn JavaConventions.validateClasspath(\r", "-\t\t\tproject,\r", "-\t\t\tentries,\r", "-\t\t\toutputLocation);\r", "+\t\treturn JavaModelStatus.VERIFIED_OK;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f81c17ad00e3f4aad9677fda8cc8b49f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 126, "signatureBeforeChange": "  \tpublic void setRawClasspath( \t\tIClasspathEntry[] newEntries, \t\tIPath newOutputLocation, \t\tIProgressMonitor monitor, \t\tboolean canChangeResource, \t\tIClasspathEntry[] oldResolvedPath, \t\tboolean needValidation, \t\tboolean needSave) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setRawClasspath( \t\t\tIClasspathEntry[] newRawClasspath, \t\t\tIPath newOutputLocation, \t\t\tboolean canModifyResources, \t\t\tIProgressMonitor monitor) \t\t\tthrows JavaModelException", "diff": ["+\t\t\tIClasspathEntry[] newRawClasspath,", "+\t\t\tIPath newOutputLocation,", "+\t\t\tboolean canModifyResources,", "+\t\t\tIProgressMonitor monitor)", "+\t\t\tthrows JavaModelException {", "+\t\t", "+\t\ttry {", "+\t\t\tif (newRawClasspath == null) //are we already with the default classpath", "+\t\t\t\tnewRawClasspath = defaultClasspath();", "+\t\t\tSetClasspathOperation op =", "+\t\t\t\tnew SetClasspathOperation(", "+\t\t\t\t\tthis, ", "+\t\t\t\t\tnewRawClasspath, ", "+\t\t\t\t\tnewOutputLocation, ", "+\t\t\t\t\tcanModifyResources);", "+\t\t\top.runOperation(monitor);", "+\t\t} catch (JavaModelException e) {", "+\t\t\tJavaModelManager.getJavaModelManager().getDeltaProcessor().flush();", "+\t\t\tthrow e;", "+\t\t}", "-", "-\tpublic void setRawClasspath(", "-\t\tIClasspathEntry[] newEntries,", "-\t\tIPath newOutputLocation,", "-\t\tIProgressMonitor monitor,", "-\t\tboolean canChangeResource,", "-\t\tIClasspathEntry[] oldResolvedPath,", "-\t\tboolean needValidation,", "-\t\tboolean needSave)", "-\t\tthrows JavaModelException {", "-", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\ttry {", "-\t\t\tIClasspathEntry[] newRawPath = newEntries;", "-\t\t\tif (newRawPath == null) { //are we already with the default classpath", "-\t\t\t\tnewRawPath = defaultClasspath();", "-\t\t\t}", "-\t\t\tSetClasspathOperation op =", "-\t\t\t\tnew SetClasspathOperation(", "-\t\t\t\t\tthis, ", "-\t\t\t\t\toldResolvedPath, ", "-\t\t\t\t\tnewRawPath, ", "-\t\t\t\t\tnewOutputLocation,", "-\t\t\t\t\tcanChangeResource, ", "-\t\t\t\t\tneedValidation,", "-\t\t\t\t\tneedSave);", "-\t\t\top.runOperation(monitor);", "-\t\t\t", "-\t\t} catch (JavaModelException e) {", "-\t\t\tmanager.getDeltaProcessor().flush();", "-\t\t\tthrow e;", "-\t\t}", "-\t}"]}], "num": 50724}