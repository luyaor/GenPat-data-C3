{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da99af2601efd8caa4a17085bad73e4f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c1bfff74389505ba1ccc0953578589", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "6024db2244852bf1a14f4a11a2132399927fa015", "commitAfterChange": "8238d4886dd5cc2d15b3226c07195562e9c81134", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate boolean checkExpression(Expression expri, TypeBinding[] u, TypeBinding r1, TypeBinding[] v, TypeBinding r2)  \t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tprivate boolean checkExpression(Expression expri, TypeBinding[] u, TypeBinding r1, TypeBinding[] v, TypeBinding r2)  \t\t\tthrows InferenceFailureException", "diff": ["-\t\t\tcheckPrimitive1: if (r1.isBaseType() && !r2.isBaseType()) {", "+\t\t\tcheckPrimitive1: if (r1.isNormalBaseType() && !r2.isNormalBaseType()) {", "-\t\t\t\t\tif (results[i].isPolyExpression() || (results[i].resolvedType != null && !results[i].resolvedType.isBaseType()))", "+\t\t\t\t\tif (results[i].isPolyExpression() || (results[i].resolvedType != null && !results[i].resolvedType.isNormalBaseType()))", "-\t\t\tcheckPrimitive2: if (r2.isBaseType() && !r1.isBaseType()) {", "+\t\t\tcheckPrimitive2: if (r2.isNormalBaseType() && !r1.isNormalBaseType()) {", "-\t\t\t\t\t\t\t(!results[i].isPolyExpression() && (results[i].resolvedType != null && !results[i].resolvedType.isBaseType())) // standalone of a referencetype", "+\t\t\t\t\t\t\t(!results[i].isPolyExpression() && (results[i].resolvedType != null && !results[i].resolvedType.isNormalBaseType())) // standalone of a referencetype", "-\t\t\t\tif (r1.isBaseType() && !r2.isBaseType() && returnType.isBaseType()) ", "+\t\t\t\tif (r1.isNormalBaseType() && !r2.isNormalBaseType() && returnType.isNormalBaseType()) ", "-\t\t\t\tif (r2.isBaseType() && !r1.isBaseType() && !returnType.isBaseType())", "+\t\t\t\tif (r2.isNormalBaseType() && !r1.isNormalBaseType() && !returnType.isNormalBaseType())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21bbda1d9d87b33e3ccb6b911dddd0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "d1facd69b9dc2127e7162415007081afa0f4348b", "commitAfterChange": "a31fc41a761266e1336ef1dbd295debe293f4d81", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate boolean checkExpression(Expression expri, TypeBinding[] u, TypeBinding r1, TypeBinding[] v, TypeBinding r2)  \t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tprivate boolean checkExpression(Expression expri, TypeBinding[] u, TypeBinding r1, TypeBinding[] v, TypeBinding r2)  \t\t\tthrows InferenceFailureException", "diff": ["-\t\t\tcheckPrimitive1: if (r1.isNormalBaseType() && !r2.isNormalBaseType()) {", "+\t\t\tcheckPrimitive1: if (r1.isPrimitiveType() && !r2.isPrimitiveType()) {", "-\t\t\t\t\tif (results[i].isPolyExpression() || (results[i].resolvedType != null && !results[i].resolvedType.isNormalBaseType()))", "+\t\t\t\t\tif (results[i].isPolyExpression() || (results[i].resolvedType != null && !results[i].resolvedType.isPrimitiveType()))", "-\t\t\tcheckPrimitive2: if (r2.isNormalBaseType() && !r1.isNormalBaseType()) {", "+\t\t\tcheckPrimitive2: if (r2.isPrimitiveType() && !r1.isPrimitiveType()) {", "-\t\t\t\t\t\t\t(!results[i].isPolyExpression() && (results[i].resolvedType != null && !results[i].resolvedType.isNormalBaseType())) // standalone of a referencetype", "+\t\t\t\t\t\t\t(!results[i].isPolyExpression() && (results[i].resolvedType != null && !results[i].resolvedType.isPrimitiveType())) // standalone of a referencetype", "-\t\t\t\tif (r1.isNormalBaseType() && !r2.isNormalBaseType() && returnType.isNormalBaseType()) ", "+\t\t\t\tif (r1.isPrimitiveType() && !r2.isPrimitiveType() && returnType.isPrimitiveType()) ", "-\t\t\t\tif (r2.isNormalBaseType() && !r1.isNormalBaseType() && !returnType.isNormalBaseType())", "+\t\t\t\tif (r2.isPrimitiveType() && !r1.isPrimitiveType() && !returnType.isPrimitiveType())"]}], "num": 23152}