{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0890f2af70d82fe90e33f4c499791fce", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58bdbe31c6e7cd2c026f098298b6bf00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "d5cfbf43310ee4287ca95e41bcf01793920b4037", "commitAfterChange": "19036ed763985597632dc62fba09c6522d0864ac", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, IPath sourceAttachment, String entryPathMsg)", "signatureAfterChange": " \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg)", "diff": ["-\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, IPath sourceAttachment, String entryPathMsg) {", "+\t// more fully.", "+\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg) {", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL, project, path, CompilerOptions.versionFromJdkLevel(libraryJDK));", "+\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL,", "+\t\t\t\t\t\t\t\tproject, path,", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.classpath_incompatibleLibraryJDKLevelInContainer,", "+\t\t\t\t\t\t\t\t\t\tnew String [] {", "+\t\t\t\t\t\t\t\t\t\t\tproject.getElementName(),", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(projectTargetJDK),", "+\t\t\t\t\t\t\t\t\t\t\tpath.makeRelative().toString(),", "+\t\t\t\t\t\t\t\t\t\t\tcontainer,", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(libraryJDK)}));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL,", "+\t\t\t\t\t\t\t\tproject, path, ", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.classpath_incompatibleLibraryJDKLevel,", "+\t\t\t\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\t\t\t\tproject.getElementName(),", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(projectTargetJDK), ", "+\t\t\t\t\t\t\t\t\t\t\tpath.makeRelative().toString(),", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(libraryJDK)}));", "+\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachmentInContainedLibrary, new String [] {sourceAttachment.toString(), path.toString(), container}));", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachmentInContainedLibrary, new String [] {sourceAttachment.toString(), path.toString(), container}));", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolder, new String[] {path.toOSString(), project.getElementName()}));", "+\t\t\t    \tif (container != null) {", "+\t\t\t    \t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolderInContainer, new String[] {path.toOSString(), container}));", "+\t\t\t    \t} else {", "+\t\t\t    \t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolder, new String[] {path.toOSString(), project.getElementName()}));", "+\t\t\t    \t}", "-\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toOSString(), project.getElementName()}));", "-\t\t\t    }", "+\t\t\t    \t\tif (container != null) {", "+\t\t\t    \t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachmentInContainedLibrary, new String [] {sourceAttachment.toString(), path.toOSString(), container}));", "+\t\t\t    \t\t} else {", "+\t\t\t    \t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toOSString(), project.getElementName()}));", "+\t\t\t    \t\t}", "+\t\t\t    \t}", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {path.toOSString(), project.getElementName()}));", "+\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibraryInContainer, new String[] {path.toOSString(), container}));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {path.toOSString(), project.getElementName()}));\t", "+\t\t\t\t\t}", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\t\tif (container!= null) {\t", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibraryInContainer, new String[] {entryPathMsg, container}));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\t\t}", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPath, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\tif (container != null) {", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPathInContainer, new String[] {entryPathMsg, container}));", "+\t\t\t\t} else {", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPath, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780492e05a1eabcb34951d282e3b3730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalContainerPath\", entryPathMsg, projectName));\t\t\t\t\t //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalContainerPath, new String[] {entryPathMsg, projectName}));\t\t\t\t\t ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalVariablePath\", entryPathMsg, projectName));\t\t\t\t\t //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalVariablePath, new String[] {entryPathMsg, projectName}));\t\t\t\t\t ", "-\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.toString(), projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), projectName})); ", "-\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryArchive\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryArchive, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.toString(), projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), projectName})); ", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalExternalFolder\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolder, new String[] {path.toOSString(), projectName})); ", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryArchive\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryArchive, (new String[] {path.toOSString(), projectName}))); ", "-\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.toOSString(), projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toOSString(), projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundLibrary\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {path.toOSString(), projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundLibrary\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryPath\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPath, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundProject\", path.segment(0), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundProject, new String[] {path.segment(0), projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.closedProject\", path.segment(0))); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_closedProject, new String[] {path.segment(0)})); ", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundProject\", path.segment(0), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundProject, new String[] {path.segment(0), projectName})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalProjectPath\", path.segment(0), projectName)); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalProjectPath, new String[] {path.segment(0), projectName})); ", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceFolder\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceFolder, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalSourceFolderPath\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalSourceFolderPath, new String[] {entryPathMsg, projectName})); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c4dbe62860b56f4fee3cd3a6cc97c4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\t\t\t\treturn Util.bind(\"status.coreException\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_coreException; ", "-\t\t\t\t\treturn Util.bind(\"build.initializationError\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.build_initializationError; ", "-\t\t\t\t\treturn Util.bind(\"build.serializationError\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.build_serializationError; ", "-\t\t\t\t\treturn Util.bind(\"status.cannotUseDeviceOnPath\", getPath().toString()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_cannotUseDeviceOnPath, getPath().toString()); ", "-\t\t\t\t\treturn Util.bind(\"status.JDOMError\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_JDOMError; ", "-\t\t\t\t\treturn Util.bind(\"element.doesNotExist\",((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.element_doesNotExist, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\treturn Util.bind(\"element.notOnClasspath\",((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.element_notOnClasspath, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\treturn Util.bind(\"status.evaluationError\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_evaluationError, string); ", "-\t\t\t\t\treturn Util.bind(\"status.indexOutOfBounds\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_indexOutOfBounds; ", "-\t\t\t\t\treturn Util.bind(\"status.invalidContents\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_invalidContents; ", "-\t\t\t\t\treturn Util.bind(\"status.invalidDestination\", ((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidDestination, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\tStringBuffer buff= new StringBuffer(Util.bind(\"operation.notSupported\")); //$NON-NLS-1$", "+\t\t\t\t\tStringBuffer buff= new StringBuffer(Messages.operation_notSupported); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidName\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidName, string); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidPackage\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidPackage, string); ", "-\t\t\t\t\t\treturn Util.bind(\"status.invalidPath\", getPath() == null ? \"null\" : getPath().toString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\treturn Messages.bind(", "+\t\t\t\t\t\t\tMessages.status_invalidPath,", "+\t\t\t\t\t\t\tnew String[] {getPath() == null ? \"null\" : getPath().toString()} //$NON-NLS-1$", "+\t\t\t\t\t\t); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidProject\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidProject, string); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidResource\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidResource, string); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidResourceType\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidResourceType, string); ", "-\t\t\t\t\t\treturn Util.bind(\"status.invalidSibling\", string); //$NON-NLS-1$", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_invalidSibling, string); ", "-\t\t\t\t\t\treturn Util.bind(\"status.invalidSibling\", ((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_invalidSibling, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\treturn Util.bind(\"status.IOException\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_IOException; ", "-\t\t\t\t\t\t\treturn Util.bind(\"operation.cannotRenameDefaultPackage\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn Messages.operation_cannotRenameDefaultPackage; ", "-\t\t\t\t\t\treturn Util.bind(\"status.nameCollision\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_nameCollision, \"\");  //$NON-NLS-1$", "-\t\t\t\t\treturn Util.bind(\"operation.needElements\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needElements; ", "-\t\t\t\t\treturn Util.bind(\"operation.needName\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needName; ", "-\t\t\t\t\treturn Util.bind(\"operation.needPath\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needPath; ", "-\t\t\t\t\treturn Util.bind(\"operation.needString\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needString; ", "-\t\t\t\t\treturn Util.bind(\"operation.pathOutsideProject\", string, ((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.operation_pathOutsideProject, new String[] {string, ((JavaElement)elements[0]).toStringWithAncestors()}); ", "-\t\t\t\t\t\treturn Util.bind(\"status.defaultPackageReadOnly\"); //$NON-NLS-1$", "+\t\t\t\t\t\treturn Messages.status_defaultPackageReadOnly; ", "-\t\t\t\t\treturn  Util.bind(\"status.readOnly\", name); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_readOnly, name); ", "-\t\t\t\t\treturn Util.bind(\"operation.needAbsolutePath\", getPath().toString()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.operation_needAbsolutePath, getPath().toString()); ", "-\t\t\t\t\treturn Util.bind(\"status.targetException\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_targetException; ", "-\t\t\t\t\treturn Util.bind(\"status.updateConflict\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_updateConflict; ", "-\t\t\t\t\treturn Util.bind(\"status.noLocalContents\", getPath().toString()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_noLocalContents, getPath().toString()); ", "-\t\t\t\t\treturn Util.bind(\"classpath.unboundContainerPath\", description, javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_unboundContainerPath, new String[] {description, javaProject.getElementName()}); ", "-\t\t\t\t\treturn Util.bind(\"classpath.invalidContainer\", description, javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_invalidContainer, new String[] {description, javaProject.getElementName()}); ", "-\t\t\t\treturn Util.bind(\"classpath.unboundVariablePath\", path.makeRelative().toString(), javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_unboundVariablePath, new String[] {path.makeRelative().toString(), javaProject.getElementName()}); ", "-\t\t\t\treturn Util.bind(\"classpath.cycle\", javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_cycle, javaProject.getElementName()); ", "-\t\t\t\treturn Util.bind(\"classpath.disabledInclusionExclusionPatterns\", newPath.makeRelative().toString(), projectName); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_disabledInclusionExclusionPatterns, new String[] {newPath.makeRelative().toString(), projectName}); ", "-\t\t\t\treturn Util.bind(\"classpath.disabledMultipleOutputLocations\", newPath.makeRelative().toString(), projectName); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_disabledMultipleOutputLocations, new String[] {newPath.makeRelative().toString(), projectName}); ", "-\t\t\t\t\treturn Util.bind(\"classpath.incompatibleLibraryJDKLevel\", new String[]{\t//$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_incompatibleLibraryJDKLevel, new String[]{\t"]}], "num": 72640}