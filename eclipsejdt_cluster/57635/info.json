{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "990c2a4e1baa8d8131c222606a82d909", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4315f50f440cdeac27496526593fa3c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "92f042fa40e42063d16c97bd03b03013bccafbbf", "commitAfterChange": "564f0099078b50659e30ddb5a5157ad26528c30f", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \tpublic String getSharedProperty(QualifiedName key) throws CoreException", "signatureAfterChange": "\r \tpublic String getSharedProperty(QualifiedName key) throws CoreException", "diff": ["-\t\ttry {\r", "-\t\t\tString propertyFileName= computeSharedPropertyFileName(key);\t\t\t\t\t\r", "-\t\t\tIFile rscFile = getProject().getFile(propertyFileName);\r", "-\t\t\tif (rscFile.exists()){\r", "-\t\t\t\tInputStream input = rscFile.getContents(true);\r", "-\t\t\t\tproperty = new String(Util.readContentsAsBytes(input));\r", "-\t\t\t}\r", "-\t\t} catch (IOException e) {\r", "+\t\tString propertyFileName= computeSharedPropertyFileName(key);\t\t\t\t\t\r", "+\t\tIFile rscFile = getProject().getFile(propertyFileName);\r", "+\t\tif (rscFile.exists()){\r", "+\t\t\tproperty = new String(Util.getResourceContentsAsByteArray(rscFile));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74dbb55cd5ad04ce43c2d5e15eb08e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectBinaryOutput.java", "commitBeforeChange": "92f042fa40e42063d16c97bd03b03013bccafbbf", "commitAfterChange": "564f0099078b50659e30ddb5a5157ad26528c30f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public byte[] getBinary(TypeStructureEntry tsEntry, IType type)", "signatureAfterChange": "\r public byte[] getBinary(TypeStructureEntry tsEntry, IType type)", "diff": ["-\t\tInputStream input = file.getContents(true);\r", "-\t\treturn Util.readContentsAsBytes(input);\r", "-\t} catch (IOException e) {\r", "-\t\treturn new byte[0];\r", "+\t\treturn Util.getResourceContentsAsByteArray(file);\r", "-\t\treturn new byte[0];\t}\r", "+\t\treturn new byte[0];\r", "+\t}\r"]}], "num": 57635}