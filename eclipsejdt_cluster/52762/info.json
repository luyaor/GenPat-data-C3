{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "533f72ab6fa932d1796eda478b1d1c2e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b14374f981bbdb1be3c1efa67ab4a23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t\tprivate void append(IType type) throws JavaModelException", "signatureAfterChange": " \t\tprivate void append(IType type) throws JavaModelException", "diff": ["-\t\t\tif (isLocal) {", "+\t\t\tif (isLocal && !(type instanceof LambdaExpression)) { // don't want occurrence counts for lambdas. it can be confusing at best, as not all are built.", "-\t\t\t}", "+\t\t\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f05d0760d1f134327b7d66b6ccb725b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "1171585a084ebb62e1b791718212673d5816ba3c", "commitAfterChange": "9589acae56c1fe8c50a34d61b4f957d5887f62fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r \tpublic FlowInfo analyseAssignment(\r \t\tBlockScope currentScope,\r \t\tFlowContext flowContext,\r \t\tFlowInfo flowInfo,\r \t\tAssignment assignment,\r \t\tboolean isCompound)", "signatureAfterChange": "\r \r \tpublic FlowInfo analyseAssignment(\r \t\tBlockScope currentScope,\r \t\tFlowContext flowContext,\r \t\tFlowInfo flowInfo,\r \t\tAssignment assignment,\r \t\tboolean isCompound)", "diff": ["+\t\t\t\t&& !(receiver instanceof QualifiedThisReference)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73d90003ca226329c32c9af3caca94a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "1f1858bebdeb28222cb5b028b95ff6ddb45bc4d4", "commitAfterChange": "b5af0f2525426a9f1308e711fb8e4f1a0989a71e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(IfStatement node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(IfStatement node)", "diff": ["-\t\tif (elseStatement != null && !(elseStatement instanceof Block)) {", "+\t\tif (elseStatement != null && !(elseStatement instanceof Block) && !(elseStatement instanceof IfStatement)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ff86c8848d25dca51db1d346718fd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "51a4920b87bcafb7fd9775573ee6626558991e47", "commitAfterChange": "cacbd7d9edc7e71649beb6acc6f822d5f25ebd5c", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["-\t\tif(parent instanceof AbstractVariableDeclaration) {", "+\t\tif(parent instanceof AbstractVariableDeclaration && !(parent instanceof TypeParameter)) {"]}], "num": 52762}