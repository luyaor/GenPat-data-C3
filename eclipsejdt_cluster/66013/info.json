{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c20553de95534ce587dfd8d997d531c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2562113970d256ad31b45b2c7228311d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "afcefcc52a6e235f9ed640317727929d84135cf0", "commitAfterChange": "5ce294a787e58643d5e8115fe2ddfea119e53aa2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\tstaticFieldInfo.unconditionalInits().discardNonFieldInitializations().addInitializationsFrom(outerInfo).setReachMode(flowInfo.reachMode()));  // reset reach mode in case initializers did abrupt completely", "+\t\t\t\t\t\tstaticFieldInfo.unconditionalInits().discardNonFieldInitializations().addInitializationsFrom(outerInfo));", "-\t\t\t\t\tmethod.analyseCode(this.scope, initializerContext, constructorInfo.copy().setReachMode(flowInfo.reachMode())); // reset reach mode in case initializers did abrupt completely", "-\t\t\t\t\tif (method.needFreeReturn) {", "-\t\t\t\t\t\tmethod.needFreeReturn = (constructorInfo.tagBits & FlowInfo.UNREACHABLE) == 0;", "-\t\t\t\t\t}", "+\t\t\t\t\t((ConstructorDeclaration)method).analyseCode(this.scope, initializerContext, constructorInfo.copy(), flowInfo.reachMode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29c4af1e92af6cee2a65d5b953aa4a24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void complainIfUnusedExceptionHandlers(BlockScope scope,TryStatement tryStatement)", "signatureAfterChange": "  public void complainIfUnusedExceptionHandlers(BlockScope scope,TryStatement tryStatement)", "diff": ["-\tfor (int i = 0, count = this.handledExceptions.length; i < count; i++) {", "-\t\tint index = this.indexes.get(this.handledExceptions[i]);", "+\tfor (int index = 0, count = this.handledExceptions.length; index < count; index++) {", "-\t\t\t\ttryStatement.catchArguments[index].type);", "+\t\t\t\tgetExceptionType(index));", "-\t\t\t\t\ttryStatement.catchArguments[index].type);", "+\t\t\t\t\tgetExceptionType(index));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab703a52fb7b38c33dfa0bac7748dd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "1cb4702a587b6ba044cf9cf0c7f733e4ce72e71e", "commitAfterChange": "c90a98d33ba23a57c068812bad61252868e2af0c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "diff": ["-\t\t\t\t\t\tresource.copy(outputFile.getFullPath(), IResource.FORCE | IResource.DERIVED, null);", "-\t\t\t\t\t\tUtil.setReadOnly(outputFile, false); // just in case the original was read only", "+\t\t\t\t\t\tcopyResource(resource, outputFile);", "-\t\t\t\t\t\tresource.copy(outputFile.getFullPath(), IResource.FORCE | IResource.DERIVED, null);", "-\t\t\t\t\t\tUtil.setReadOnly(outputFile, false); // just in case the original was read only", "+\t\t\t\t\t\tcopyResource(resource, outputFile);"]}], "num": 66013}