{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c64a8a7d34a07e242dd70f1849db4b96", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31b0d198328f30b40676f25c739d0fb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "44d113e61136bfc7498b9dbe4e372737870ec16c", "commitAfterChange": "d26bd96cc9e1c9e59f2c9d083b9a2725de90852a", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void testOverwriteClasspath() throws CoreException", "signatureAfterChange": " public void testOverwriteClasspath() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"\"}, \"\");", "-\t\tthis.createFolder(\"P/src\");", "-\t\tthis.createFolder(\"P/bin\");", "-\t\tfinal IFile newCP = this.createFile(", "+\t\tcreateJavaProject(\"P\", new String[] {\"\"}, \"\");", "+\t\tcreateFolder(\"P/src\");", "+\t\tcreateFolder(\"P/bin\");", "+\t\tfinal IFile newCP = createFile(", "-\t\tthis.startDeltas();", "+\t\tstartDeltas();", "-\t\tthis.getWorkspace().run(run, null);", "+\t\tgetWorkspace().run(run, null);", "-\t\tthis.stopDeltas();", "-\t\tthis.deleteProject(\"P\");", "+\t\tstopDeltas();", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf23400a499ac7ad4d727eaf27186644", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["-\t\t// put default options on project", "-\t\tif (this.currentProject != null) this.currentProject.setOptions(JavaCore.getOptions());", "+\t\t", "+\t\t// Working copies mgt", "+\t\tif (!keepWorkingCopies && workingCopies != null) {", "+\t\t\tdiscardWorkingCopies(workingCopies);", "+\t\t}", "+\t\t", "+\t\t// Restore saved ast level", "+\t\tastLevel = savedLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8801e616a05bcee9775fefc2868f3b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "0774ccc9fbfb251d06c1b6758403976034210f78", "commitAfterChange": "2c05ea4676dfc26a576c4e213abe1328f88694aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "signatureAfterChange": "  public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "diff": ["-\tthis.selector = this.isCaseSensitive ? selector : CharOperation.toLowerCase(selector);", "-\tthis.declaringQualification = this.isCaseSensitive ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "-\tthis.declaringSimpleName = this.isCaseSensitive ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "-\tthis.returnQualification = this.isCaseSensitive ? returnQualification : CharOperation.toLowerCase(returnQualification);", "-\tthis.returnSimpleName = this.isCaseSensitive ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "+\tthis.selector = isCaseSensitive() ? selector : CharOperation.toLowerCase(selector);", "+\tthis.declaringQualification = isCaseSensitive() ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "+\tthis.declaringSimpleName = isCaseSensitive() ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "+\tthis.returnQualification = isCaseSensitive() ? returnQualification : CharOperation.toLowerCase(returnQualification);", "+\tthis.returnSimpleName = isCaseSensitive() ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "-\t\t\tthis.parameterQualifications[i] = this.isCaseSensitive ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "-\t\t\tthis.parameterSimpleNames[i] = this.isCaseSensitive ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);", "+\t\t\tthis.parameterQualifications[i] = isCaseSensitive() ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "+\t\t\tthis.parameterSimpleNames[i] = isCaseSensitive() ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);"]}], "num": 2539}