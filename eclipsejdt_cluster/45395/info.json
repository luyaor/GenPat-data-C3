{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c516901e53aae32f5918e50554bd85dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb068d06f8c4323662e08aa5944be0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 275, "signatureBeforeChange": "  public void localVariableRedundantCheckOnNonNull(LocalVariableBinding local, ASTNode location)", "signatureAfterChange": "  public void localVariableRedundantCheckOnNonNull(LocalVariableBinding local, ASTNode location)", "diff": ["-\tString[] arguments = new String[] {new String(local.name)  };", "+\tString[] arguments;", "+\tint problemId;", "+\tif (local.isNonNull()) {", "+\t\tchar[][] annotationName = this.options.nonNullAnnotationName; // cannot be null if local is declared @NonNull", "+\t\targuments = new String[] {new String(local.name), new String(annotationName[annotationName.length-1])  };", "+\t\tproblemId = IProblem.RedundantNullCheckOnSpecdNonNullLocalVariable;", "+\t} else {", "+\t\targuments = new String[] {new String(local.name)  };", "+\t\tproblemId = IProblem.RedundantNullCheckOnNonNullLocalVariable; ", "+\t}", "-\t\tIProblem.RedundantNullCheckOnNonNullLocalVariable,", "+\t\tproblemId, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a85d1e8ad6c0707184c64b688b891e5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 270, "signatureBeforeChange": "  public void localVariableNonNullComparedToNull(LocalVariableBinding local, ASTNode location)", "signatureAfterChange": "  public void localVariableNonNullComparedToNull(LocalVariableBinding local, ASTNode location)", "diff": ["-\tString[] arguments = new String[] {new String(local.name)  };", "+\tString[] arguments;", "+\tint problemId;", "+\tif (local.isNonNull()) {", "+\t\tchar[][] annotationName = this.options.nonNullAnnotationName; // cannot be null if local is declared @NonNull", "+\t\targuments = new String[] {new String(local.name), new String(annotationName[annotationName.length-1])  };", "+\t\tproblemId = IProblem.SpecdNonNullLocalVariableComparisonYieldsFalse;", "+\t} else {", "+\t\targuments = new String[] {new String(local.name)  };", "+\t\tproblemId = IProblem.NonNullLocalVariableComparisonYieldsFalse; ", "+\t}", "-\t\tIProblem.NonNullLocalVariableComparisonYieldsFalse,", "+\t\tproblemId,"]}], "num": 45395}