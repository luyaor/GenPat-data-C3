{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9af721793059b97735f31b0ead5483b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b15dc3c6f39efa56305d3989929be2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "06cb2fb2cd016c5bb9806c77f9b924461e74f729", "commitAfterChange": "f722c144cbd3d9ea00d9fcbd08f20190051637e3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t\tpublic void logIncorrectExtDirsEntry(String wrongPath)", "signatureAfterChange": " private void addPendingErrors(String message)", "diff": ["-\t\t */", "-\t\tpublic void logIncorrectExtDirsEntry(String wrongPath) {", "-\t\t\tif ((this.tagBits & Logger.XML) != 0) {", "-\t\t\t\tthis.parameters.put(Logger.MESSAGE, this.main.bind(\"configure.incorrectExtDirsEntry\", wrongPath)); //$NON-NLS-1$", "-\t\t\t\tthis.printTag(Logger.ERROR_TAG, this.parameters, true, true);", "-\t\t\t}", "-\t\t\tthis.printlnErr(this.main.bind(", "-\t\t\t\t\"configure.incorrectExtDirsEntry\", wrongPath)); //$NON-NLS-1$", "-\t\t}", "+}", "+private void addPendingErrors(String message) {", "+\tif (this.pendingErrors == null) {", "+\t\tthis.pendingErrors = new ArrayList();", "+\t}", "+\tthis.pendingErrors.add(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd9a984a4d82fa61acabd5d2ee0c77c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Problem.java", "commitBeforeChange": "bbf4c65896774d7094a1b0af184fa5e65fff430e", "commitAfterChange": "88a272a79e1a01de59a7879ee7d861a289fe8315", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic int compareTo(Object o)", "signatureAfterChange": " \t \tpublic int compareTo(Object o)", "diff": ["-\t\tProblem problem = (Problem) o;", "-\t\tif (!(this.getLocation().equals(problem.getLocation()))) {", "-\t\t\treturn this.getLocation().compareTo(problem.getLocation());", "+\t\tif(o instanceof Problem){", "+\t\t\tProblem problem = (Problem) o;", "+\t\t\t/* Replace initial implementation with toString() comparison otherwise the problems order may change", "+\t\t\t * when different VM are used (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=213570)...", "+\t\t\tif (!(this.getLocation().equals(problem.getLocation()))) {", "+\t\t\t\treturn this.getLocation().compareTo(problem.getLocation());", "+\t\t\t}", "+\t\t\tif (this.getStart() < problem.getStart()) {", "+\t\t\t\treturn -1;", "+\t\t\t}", "+\t\t\tif (this.getEnd() < problem.getEnd()) {", "+\t\t\t\treturn -1;", "+\t\t\t}", "+\t\t\treturn this.getMessage().compareTo(problem.getMessage());", "+\t\t\t*/", "+\t\t\treturn this.toString().compareTo(problem.toString());", "-\t\tif (this.getStart() < problem.getStart()) {", "-\t\t\treturn -1;", "-\t\t}", "-\t\tif (this.getEnd() < problem.getEnd()) {", "-\t\t\treturn -1;", "-\t\t}", "-\t\treturn this.getMessage().compareTo(problem.getMessage());", "+\t\treturn -1;"]}], "num": 35556}