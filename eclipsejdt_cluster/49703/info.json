{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43e5b265cfb922e06c7c634d3d7dcaad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa543793e7bb6f4804436563c89645f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "130a55997b08af356a22f13721ef702eb35b7557", "commitAfterChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "signatureAfterChange": "\r public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "diff": ["+\t\t} else {\r", "+\t\t\tif (typeDeclaration instanceof AnonymousLocalTypeDeclaration) {\r", "+\t\t\t\tsuperInterfaces = new TypeReference[] { ((AnonymousLocalTypeDeclaration)typeDeclaration).allocation.type};\r", "+\t\t\t\tsuperInterfacesLength = 1;\r", "+\t\t\t\tinterfaceNames = new char[1][];\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82e02c62547a823b4d3bb773c2708c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "5e5523e13b821734aff66b4f4011996446b2a5b6", "commitAfterChange": "28c8bae609bb10493a48207665f7915360974709", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tprivate void initializeScanner(long sourceLevel, DefaultCodeFormatterOptions preferences)", "signatureAfterChange": "  \tprivate void initializeScanner(long sourceLevel, DefaultCodeFormatterOptions preferences)", "diff": ["-\t\tif (this.disablingTag == null && this.enablingTag == null) {", "-\t\t\ttaskTags = null;", "+\t\tif (this.disablingTag == null) {", "+\t\t\tif (this.enablingTag == null) {", "+\t\t\t\ttaskTags = null;", "+\t\t\t} else {", "+\t\t\t\ttaskTags = new char[][] { this.enablingTag };", "+\t\t\t}", "+\t\t} else if (this.enablingTag == null) {", "+\t\t\ttaskTags = new char[][] { this.disablingTag };"]}], "num": 49703}