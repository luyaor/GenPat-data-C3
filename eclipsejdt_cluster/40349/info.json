{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53a3dbb519a3c36c4a14098e4a84c722", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f7e42731900efea583603e39982b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java", "commitBeforeChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "commitAfterChange": "790443c8ea7a17aa25cb0c35c01196da99d52e04", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "signatureAfterChange": " \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "diff": ["-\t\t\t\t\t\tgfm.generatedSourceFolderDeleted(_removedProjects.contains(project));", "-\t\t\t\t\t\t_addGenFolderTo.add(project);", "+\t\t\t\t\t\tif( !_removedProjects.contains(project) ){\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tgfm.generatedSourceFolderDeleted();", "+\t\t\t\t\t\t\t_addGenFolderTo.add(project);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t// if the project is already closed or in the process of being", "+\t\t\t\t\t\t// deleted, will ignore this deletion since we cannot correct ", "+\t\t\t\t\t\t// the classpath anyways.", "-\t\t\t\tif( proj.isOpen() && proj.exists() && proj.hasNature(JavaCore.NATURE_ID) ){", "+\t\t\t\tif( canUpdate(proj) ){", "-\t\t\t\t}", "+\t\t\t\t}\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d90f9bd9bc174067d8dbfed80b417f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "899768f2df905f3ba878d5719c34fb81d4ef08b5", "commitAfterChange": "7bf89e29c34a348a2ed388f7cdb6c1016941cf61", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void resolveAnnotations(Annotation[] annotations, Scope scope)", "signatureAfterChange": " \tpublic void resolveAnnotations(Annotation[] annotations, BlockScope scope)", "diff": ["-\tpublic void resolveAnnotations(Annotation[] annotations, Scope scope) {", "+\tpublic void resolveAnnotations(Annotation[] annotations, BlockScope scope) {", "-\t\t\tannotationTypes[i] = scope instanceof ClassScope", "-\t\t\t\t? annotations[i].resolveType((ClassScope)scope)", "-\t\t\t\t: annotations[i].resolveType((BlockScope)scope);", "+\t\t\tannotationTypes[i] = annotations[i].resolveType(scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42cf2e165887ae83d3df2c35fd874b80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "fe6848300377e2f320c70d2b17e483820c74fa24", "commitAfterChange": "309be04a155363e9f398875d6734d13ff5334b6c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type)", "diff": ["-\tchar[] qualifiedSourceName = type instanceof LocalTypeBinding", "-\t\t\t? CharOperation.concat(\"1\".toCharArray(), type.qualifiedSourceName(), '.') //$NON-NLS-1$", "-\t\t\t: type.qualifiedSourceName();", "+\tchar[] qualifiedSourceName = qualifiedSourceName(type);", "-}"]}], "num": 40349}