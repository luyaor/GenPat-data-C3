{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57bfc5a672857ac1e122ecac20f0dc45", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6331781ce0086cb72dc55b0b4bea4433", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "commitAfterChange": "29d4a1149e392c0b5c052a9202992e800f5506a5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, boolean checkString)", "signatureAfterChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, boolean checkString) {", "-\t// cannot override localVariableBinding because this would project o.m onto o when", "-\t// analyzing assignments", "+", "+public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "+\tif (super.checkNPE(scope, flowContext, flowInfo)) {", "+\t\treturn true;", "+\t}", "+\tFieldBinding fieldBinding = null;", "+\tlong position = 0L;", "+\tif (this.otherBindings == null) {", "+\t\tif ((this.bits & RestrictiveFlagMASK) == Binding.FIELD) {", "+\t\t\tfieldBinding = (FieldBinding) this.binding;", "+\t\t\tposition = this.sourcePositions[0];", "+\t\t}", "+\t} else {", "+\t\tfieldBinding = this.otherBindings[this.otherBindings.length - 1];", "+\t\tposition = this.sourcePositions[this.sourcePositions.length - 1];", "+\t}", "+\tif (fieldBinding != null) {", "+\t\treturn checkNullableFieldDereference(scope, fieldBinding, position);", "+\t}", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "671af1fca029dd265cc60c495fef0654", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "b14a6c4d09a9bece1bab75937908ff44df19fa09", "commitAfterChange": "a846071c58f9098177eef02be0134294158f9c4f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, boolean checkString)", "signatureAfterChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, boolean checkString) {", "-\t// cannot override localVariableBinding because this would project o.m onto o when", "-\t// analyzing assignments", "+", "+public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "+\tif (super.checkNPE(scope, flowContext, flowInfo)) {", "+\t\treturn true;", "+\t}", "+\tFieldBinding fieldBinding = null;", "+\tlong position = 0L;", "+\tif (this.otherBindings == null) {", "+\t\tif ((this.bits & RestrictiveFlagMASK) == Binding.FIELD) {", "+\t\t\tfieldBinding = (FieldBinding) this.binding;", "+\t\t\tposition = this.sourcePositions[0];", "+\t\t}", "+\t} else {", "+\t\tfieldBinding = this.otherBindings[this.otherBindings.length - 1];", "+\t\tposition = this.sourcePositions[this.sourcePositions.length - 1];", "+\t}", "+\tif (fieldBinding != null) {", "+\t\treturn checkNullableFieldDereference(scope, fieldBinding, position);", "+\t}", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9982f26cd274814f1eff1196b3efe85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, boolean checkString)", "signatureAfterChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, boolean checkString) {", "-\t// cannot override localVariableBinding because this would project o.m onto o when", "-\t// analyzing assignments", "+", "+public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "+\tif (super.checkNPE(scope, flowContext, flowInfo)) {", "+\t\treturn true;", "+\t}", "+\tFieldBinding fieldBinding = null;", "+\tlong position = 0L;", "+\tif (this.otherBindings == null) {", "+\t\tif ((this.bits & RestrictiveFlagMASK) == Binding.FIELD) {", "+\t\t\tfieldBinding = (FieldBinding) this.binding;", "+\t\t\tposition = this.sourcePositions[0];", "+\t\t}", "+\t} else {", "+\t\tfieldBinding = this.otherBindings[this.otherBindings.length - 1];", "+\t\tposition = this.sourcePositions[this.sourcePositions.length - 1];", "+\t}", "+\tif (fieldBinding != null) {", "+\t\treturn checkNullableDereference(scope, fieldBinding, position);", "+\t}", "+\treturn false;"]}], "num": 56522}