{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a2eebceb3d08f6803eda5f0095501c6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6352cc193adc77d2a956da224a007af3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavadocCompletionModelTest.java", "commitBeforeChange": "1d3824feb74dac2cd72f42f67996821e25271c63", "commitAfterChange": "9f02272e8245618968be36ae4ecb54a3d73ce22b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void completeInJavadoc(String[] sources, boolean showPositions, String completeBehind) throws JavaModelException", "signatureAfterChange": "  \tprotected void completeInJavadoc(String path, String source, boolean showPositions, String completeBehind, int occurencePosition, int[] ignoreList) throws JavaModelException", "diff": ["+\tprotected void completeInJavadoc(String path, String source, boolean showPositions, String completeBehind, int occurencePosition, int[] ignoreList) throws JavaModelException {", "+\t\tcompleteInJavadoc(new String[] { path, source }, showPositions, completeBehind, occurencePosition, ignoreList);", "+\t}", "-\t\tcompleteInJavadoc(sources, showPositions, completeBehind, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796afa79a7e7c96fc40de31378de7784", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "599b7f9320007b85e54693f7e40a4ec49fdde55f", "commitAfterChange": "ffe187ffaf97e93da8eeb74a73165230892e2f7a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  protected void runNegativeTest(String[] testFiles, ExpectedProblem[] expectedProblems)", "signatureAfterChange": " protected void runNegativeTest(String[] testFiles, String expectedProblemLog, String[] classLib, boolean shouldFlushOutputDirectory, Map customOptions)", "diff": ["-", "-protected void runNegativeTest(String[] testFiles, ExpectedProblem[] expectedProblems) {", "-\tthis.runNegativeTest(testFiles, expectedProblems, null, true);", "-}", "+protected void runNegativeTest(String[] testFiles, String expectedProblemLog, String[] classLib, boolean shouldFlushOutputDirectory, Map customOptions){", "+\tthis.runNegativeTest(testFiles, expectedProblemLog, classLib, shouldFlushOutputDirectory, customOptions, false);", "+}"]}], "num": 45846}