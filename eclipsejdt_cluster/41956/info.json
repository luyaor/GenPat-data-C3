{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c8b994eae7526a5e5a6a487872e7287", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ea2243d6eaff7a2591f7078db2571a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\tSystem.out.println(\"BasicSearchEngine.searchAllTypeNames(char[], char[], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- package name: \"+(packageName==null?\"null\":new String(packageName))); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tSystem.out.println(\"\t- type name: \"+(typeName==null?\"null\":new String(typeName))); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tSystem.out.println(\"\t- match rule: \"+getMatchRuleString(matchRule)); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- search for: \"+searchFor); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- scope: \"+scope); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"BasicSearchEngine.searchAllTypeNames(char[], char[], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- package name: \"+(packageName==null?\"null\":new String(packageName))); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"\t- type name: \"+(typeName==null?\"null\":new String(typeName))); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"\t- match rule: \"+getMatchRuleString(matchRule)); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- search for: \"+searchFor); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- scope: \"+scope); //$NON-NLS-1$", "+\t\t}", "+", "+\t\t// Return on invalid combination of package and type names", "+\t\tif (packageName == null || packageName.length == 0) {", "+\t\t\tif (typeName != null && typeName.length == 0) {", "+\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\tUtil.verbose(\"\t=> return no result due to invalid empty values for package and type names!\"); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}", "-\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1506f7a909cca53010f3f0179fa626f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications,  \t\tfinal char[][] typeNames, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications,  \t\tfinal char[][] typeNames, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\tSystem.out.println(\"BasicSearchEngine.searchAllTypeNames(char[][], char[][], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- package name: \"+(qualifications==null?\"null\":new String(CharOperation.concatWith(qualifications, ',')))); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tSystem.out.println(\"\t- type name: \"+(typeNames==null?\"null\":new String(CharOperation.concatWith(typeNames, ',')))); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tSystem.out.println(\"\t- match rule: \"+matchRule); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- search for: \"+searchFor); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- scope: \"+scope); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"BasicSearchEngine.searchAllTypeNames(char[][], char[][], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- package name: \"+(qualifications==null?\"null\":new String(CharOperation.concatWith(qualifications, ',')))); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"\t- type name: \"+(typeNames==null?\"null\":new String(CharOperation.concatWith(typeNames, ',')))); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"\t- match rule: \"+matchRule); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- search for: \"+searchFor); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- scope: \"+scope); //$NON-NLS-1$"]}], "num": 41956}