{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cd060c69699a38c514207c26ae37b78", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "069286c6ed781267ebfeb032e9b4a352", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "56deec95b605b537ffff269849519a3683e4c597", "commitAfterChange": "6322417321b9f92594d494c76f96624badb58aae", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic Compiler(\r \t\tINameEnvironment environment,\r \t\tIErrorHandlingPolicy policy,\r \t\tMap settings,\r \t\tICompilerRequestor requestor,\r \t\tIProblemFactory problemFactory)", "signatureAfterChange": "\r \tpublic Compiler(\r \t\tINameEnvironment environment,\r \t\tIErrorHandlingPolicy policy,\r \t\tMap settings,\r \t\tfinal ICompilerRequestor requestor,\r \t\tIProblemFactory problemFactory)", "diff": ["-\t\tICompilerRequestor requestor,\r", "+\t\tfinal ICompilerRequestor requestor,\r", "-\t\tthis.requestor = requestor;\r", "+\t\t\r", "+\t\t// wrap requestor in DebugRequestor if one is specified\r", "+\t\tif(DebugRequestor == null) {\r", "+\t\t\tthis.requestor = requestor;\r", "+\t\t} else {\r", "+\t\t\tthis.requestor = new ICompilerRequestor(){\r", "+\t\t\t\tpublic void acceptResult(CompilationResult result){\r", "+\t\t\t\t\tif (DebugRequestor.isActive()){\r", "+\t\t\t\t\t\tDebugRequestor.acceptDebugResult(result);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\trequestor.acceptResult(result);\r", "+\t\t\t\t}\r", "+\t\t\t};\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5415094ce8036f55a0c64fa93fda52fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a5afd2507bd69ba3b522e38d3b9c62acfc31d170", "commitAfterChange": "bae98ccb647b46a2d5cfccf36593de0c5db401c9", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " \tpublic ICompilationUnit getWorkingCopy(String path, String source, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic ICompilationUnit getWorkingCopy(String path, String source, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tIProblemRequestor problemRequestor = owner.getProblemRequestor(workingCopy);", "-\t\tif (problemRequestor instanceof ProblemRequestor) {", "-\t\t\t((ProblemRequestor) problemRequestor).initialize(source.toCharArray());", "+\t\tif (owner != null) {", "+\t\t\tIProblemRequestor problemRequestor = owner.getProblemRequestor(workingCopy);", "+\t\t\tif (problemRequestor instanceof ProblemRequestor) {", "+\t\t\t\t((ProblemRequestor) problemRequestor).initialize(source.toCharArray());", "+\t\t\t}"]}], "num": 28229}