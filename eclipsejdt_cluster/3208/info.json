{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e876340c48d9265d971f88c054ae4e0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f7dc8fd3e383b06a97e0f1d1be22b80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "92d34a08c5b7cee27a23496b725828e445b4ac02", "commitAfterChange": "8fbbf9aa76d3a9fa45835c898076a78909f57f56", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void resetDeclaringClassMethodStaticFlag(TypeBinding declaringClass)", "signatureAfterChange": " public void resetDeclaringClassMethodStaticFlag(TypeBinding enclosingInstanceType)", "diff": ["-public void resetDeclaringClassMethodStaticFlag(TypeBinding declaringClass) {", "+public void resetDeclaringClassMethodStaticFlag(TypeBinding enclosingInstanceType) {", "-\t\t// anonymous type, find enclosing method", "-\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t\tif (!methodScope.enclosingReceiverType().isCompatibleWith(enclosingInstanceType)) { // unless invoking a method of the local type ...", "+\t\t\t// anonymous type, find enclosing method", "+\t\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t\t}", "-\t\t\tif (type != null && type.binding != null && declaringClass != null && type.binding != declaringClass.original()) {", "+\t\t\tif (type != null && type.binding != null && enclosingInstanceType != null", "+\t\t\t\t\t&& !type.binding.isCompatibleWith(enclosingInstanceType.original()))", "+\t\t\t{", "-\t\t\t} else {", "-\t\t\t\tbreak;", "+\t\t\t\tcontinue;", "-\t\t} else {", "-\t\t\tbreak;", "+\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b865031f9bbc96fd2affc88714797a7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "0579ec46f093e76ebfb96f54aeedde906bdc6daa", "commitAfterChange": "a5b7766b7751acbd9316d0da24707b07ce3a52af", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void resetDeclaringClassMethodStaticFlag(TypeBinding declaringClass)", "signatureAfterChange": " public void resetDeclaringClassMethodStaticFlag(TypeBinding enclosingInstanceType)", "diff": ["-public void resetDeclaringClassMethodStaticFlag(TypeBinding declaringClass) {", "+public void resetDeclaringClassMethodStaticFlag(TypeBinding enclosingInstanceType) {", "-\t\t// anonymous type, find enclosing method", "-\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t\tif (!methodScope.enclosingReceiverType().isCompatibleWith(enclosingInstanceType)) { // unless invoking a method of the local type ...", "+\t\t\t// anonymous type, find enclosing method", "+\t\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t\t}", "-\t\t\tif (type != null && type.binding != null && declaringClass != null && type.binding != declaringClass.original()) {", "+\t\t\tif (type != null && type.binding != null && enclosingInstanceType != null", "+\t\t\t\t\t&& !type.binding.isCompatibleWith(enclosingInstanceType.original()))", "+\t\t\t{", "-\t\t\t} else {", "-\t\t\t\tbreak;", "+\t\t\t\tcontinue;", "-\t\t} else {", "-\t\t\tbreak;", "+\t\tbreak;"]}], "num": 3208}