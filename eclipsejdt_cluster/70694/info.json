{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "917ad4c7b362c4889f1b11fd761b604f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4283eb4f0decc05b53496e1a7c9ba3df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelCompletionTests.java", "commitBeforeChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "commitAfterChange": "f21888ae6d4ceca17a4c2f2fe7153b358e68695f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected CompletionResult contextComplete(ICompilationUnit cu, int cursorLocation) throws JavaModelException", "signatureAfterChange": " protected CompletionResult contextComplete0( \t\tICompilationUnit cu, \t\tint cursorLocation, \t\tboolean useExtendedContext, \t\tboolean computeEnclosingElement, \t\tboolean computeVisibleElements, \t\tString typeSignature) throws JavaModelException", "diff": ["+}", "+protected CompletionResult contextComplete0(", "+\t\tICompilationUnit cu,", "+\t\tint cursorLocation,", "+\t\tboolean useExtendedContext,", "+\t\tboolean computeEnclosingElement,", "+\t\tboolean computeVisibleElements,", "+\t\tString typeSignature) throws JavaModelException {", "+\trequestor.setRequireExtendedContext(useExtendedContext);", "+\trequestor.setComputeEnclosingElement(computeEnclosingElement);", "+\trequestor.setComputeVisibleElements(computeVisibleElements);", "+\trequestor.setAssignableType(typeSignature);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcde334bac98da2756ef8515d2734f89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected String getKey(IMethod method)", "signatureAfterChange": " \t \tprotected String getKey(IMethod method, boolean withAccessFlags, boolean forceOpen) throws JavaModelException", "diff": ["-\tprotected String getKey(IMethod method) {", "+\tprotected String getKey(IMethod method, boolean withAccessFlags, boolean forceOpen) throws JavaModelException {", "-\t\tString declaringKey = ((IType) method.getParent()).getKey();", "+\t\tString declaringKey = getKey((IType) method.getParent(), false/*without access flags*/, forceOpen);", "-\t\ttry {", "+\t\tif (forceOpen)", "-\t\t} catch (JavaModelException e) {", "-\t\t\t// method doesn't exist", "+\t\telse", "+\t\t", "+\t\t// flags", "+\t\tif (withAccessFlags) {", "+\t\t\tkey.append('^');", "+\t\t\tif (forceOpen)", "+\t\t\t\tkey.append(method.getFlags());", "+\t\t\telse", "+\t\t\t\tkey.append(Flags.AccDefault); // cannot get the flags without opening the element\t\t"]}], "num": 70694}