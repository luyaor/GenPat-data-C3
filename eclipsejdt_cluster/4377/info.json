{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5900293b6bbaacec3fc857e6a29ba3a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "454f713a4ac3e16102a58d4c5ba62cf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic boolean match(ReturnStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(NormalAnnotation node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(NormalAnnotation node, Object other) {", "+\t\tif (!(other instanceof NormalAnnotation)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tNormalAnnotation o = (NormalAnnotation) other;", "+\t\treturn (safeSubtreeMatch(node.getTypeName(), o.getTypeName())", "+\t\t\t\t\t&& safeSubtreeListMatch(node.values(), o.values()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bebcfbfb185729f17d589aae0a96754c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic boolean match(ThrowStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(SingleMemberAnnotation node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(SingleMemberAnnotation node, Object other) {", "+\t\tif (!(other instanceof SingleMemberAnnotation)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tSingleMemberAnnotation o = (SingleMemberAnnotation) other;", "+\t\treturn (safeSubtreeMatch(node.getTypeName(), o.getTypeName())", "+\t\t\t\t&& safeSubtreeMatch(node.getValue(), o.getValue()));", "+\t}"]}], "num": 4377}