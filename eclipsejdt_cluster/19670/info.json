{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7e80d7d358a2ff86c77d238fd15ce91", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e90c29abf7442d67aea581a84d39d29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "64616a6f18519098ffdabd24c6b6c1160055f504", "commitAfterChange": "f48daaa14cf07a3667867a949eef9fc4b96daafa", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static final boolean equals( \t\tchar[] first, \t\tchar[] second, \t\tboolean isCaseSensitive)", "signatureAfterChange": " \tpublic static final boolean equals(char[] first, char[] second, int secondStart, int secondEnd)", "diff": ["+\t */", "+\tpublic static final boolean equals(char[] first, char[] second, int secondStart, int secondEnd) {", "+\t\tif (first == second)", "+\t\t\treturn true;", "+\t\tif (first == null || second == null)", "+\t\t\treturn false;", "+\t\tif (first.length != secondEnd - secondStart)", "+\t\t\treturn false;", "+", "+\t\tfor (int i = first.length; --i >= 0;)", "+\t\t\tif (first[i] != second[i+secondStart])", "+\t\t\t\treturn false;", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b29347f05e4e905fa86de0fd8052d0f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "92e10099182b1f553916fa888e20d1bb06a3f6c4", "commitAfterChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public static final boolean equals( \tchar[] first, \tchar[] second, \tboolean isCaseSensitive)", "signatureAfterChange": " public static final boolean equals(char[] first, char[] second, int secondStart, int secondEnd, boolean isCaseSensitive)", "diff": ["+ */", "+public static final boolean equals(char[] first, char[] second, int secondStart, int secondEnd, boolean isCaseSensitive) {", "+\tif (isCaseSensitive) {", "+\t\tfor (int i = first.length; --i >= 0;)", "+\t\t\tif (first[i] != second[i+secondStart])", "+\t\t\t\treturn false;", "+\t} else {", "+\t\tfor (int i = first.length; --i >= 0;)", "+\t\t\tif (Character.toLowerCase(first[i]) != Character.toLowerCase(second[i+secondStart]))", "+\t\t\t\treturn false;", "+\t}"]}], "num": 19670}