{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "241e30260315f8637ed56311f666c440", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63464a012e74b993aacc783f616d1025", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "ff17444fcc31fe021d6a45c4b051acce1b3894e3", "commitAfterChange": "eb15457015da4dfaee5df4c21a851b245805072a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void enterMethod(MethodInfo methodInfo)", "signatureAfterChange": " public void enterMethod(MethodInfo methodInfo)", "diff": ["-\tinfo.setArgumentNames(methodInfo.parameterNames);", "-\tinfo.setReturnType(methodInfo.returnType == null ? new char[]{'v', 'o','i', 'd'} : methodInfo.returnType);", "-\tinfo.setExceptionTypeNames(methodInfo.exceptionTypes);", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\tchar[][] parameterNames = methodInfo.parameterNames;", "+\tfor (int i = 0, length = parameterNames.length; i < length; i++)", "+\t\tparameterNames[i] = manager.intern(parameterNames[i]);", "+\tinfo.setArgumentNames(parameterNames);", "+\tchar[] returnType = methodInfo.returnType == null ? new char[]{'v', 'o','i', 'd'} : methodInfo.returnType;", "+\tinfo.setReturnType(manager.intern(returnType));", "+\tchar[][] exceptionTypes = methodInfo.exceptionTypes;", "+\tinfo.setExceptionTypeNames(exceptionTypes);", "+\tfor (int i = 0, length = exceptionTypes.length; i < length; i++)", "+\t\texceptionTypes[i] = manager.intern(exceptionTypes[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949db550818f015cbfe1f1569d5fa8de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "commitAfterChange": "240e0c6a2e7086d1fe50f8b36056d83e0056d1f3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final char[] signature()", "signatureAfterChange": " public final char[] signature()", "diff": ["+\t", "+\tTypeBinding[] targetParameters = this.parameters;", "+\t\t", "-\t\tfor (int i = 0; i < count; i++)", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t}", "+\t\t", "+\t\tif (this instanceof SyntheticAccessMethodBinding) {", "+\t\t\ttargetParameters = ((SyntheticAccessMethodBinding)this).targetMethod.parameters;", "+\t\t}", "-\tif (parameters != NoParameters)", "-\t\tfor (int i = 0, length = parameters.length; i < length; i++)", "-\t\t\tbuffer.append(parameters[i].signature());", "+", "+\tif (targetParameters != NoParameters) {", "+\t\tfor (int i = 0; i < targetParameters.length; i++) {", "+\t\t\tbuffer.append(targetParameters[i].signature());", "+\t\t}", "+\t}", "-\t\tfor (int i = 0; i < count; i++)", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t}", "+\t\t// move the extra padding arguments of the synthetic constructor invocation to the end\t\t", "+\t\tfor (int i = targetParameters.length, extraLength = parameters.length; i < extraLength; i++) {", "+\t\t\tbuffer.append(parameters[i].signature());", "+\t\t}"]}], "num": 34998}