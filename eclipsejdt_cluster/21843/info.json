{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "619f61982ac8aeaec2dd56f0e071f2d5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bd66fb6224e31ae1bfb0e124a3728e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "cc8a107a5198e70183302629cda10fc958070914", "commitAfterChange": "f3976bead49aa4fe35942cb0c47266733b624403", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tif (valueRequired || (!isThisReceiver && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)) {", "+\tif (valueRequired || (!isThisReceiver && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "+\t\t\t|| ((implicitConversion & TypeIds.UNBOXING) != 0)) {", "-\t\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);\t\t\t", "+\t\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);", "+\t\t\t\tif ((implicitConversion & TypeIds.UNBOXING) != 0) {", "+\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4bbfd16dae21d01c01751c0e598ed33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "cc8a107a5198e70183302629cda10fc958070914", "commitAfterChange": "f3976bead49aa4fe35942cb0c47266733b624403", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\tif (valueRequired  || (!isFirst && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)) {", "+\t\t\t\t\tif (valueRequired  || (!isFirst && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "+\t\t\t\t\t\t\t|| ((implicitConversion & TypeIds.UNBOXING) != 0)) {", "+\t\t\t\t\t\t\t\tif ((implicitConversion & TypeIds.UNBOXING) != 0) {", "+\t\t\t\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t\t\t\t\t\t}"]}], "num": 21843}