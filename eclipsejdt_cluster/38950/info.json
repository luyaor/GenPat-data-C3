{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17ee856245ac967c4e6d8434cb8664f3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44bef7365e887c56212888f03ebfed25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "1f874aab25a1e21bfc1a29ee829879f30b3a1fd9", "commitAfterChange": "1897b57abd9c55b801709ab52b14a19d8676374f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "signatureAfterChange": "\r \tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "diff": ["+\t\tif (subPackageName == null || CharOperation.contains('.', subPackageName))\r", "+\t\t\treturn false;\r", "-\t\tif (subPackageName == null)\r", "-\t\t\treturn false;\r", "-\t\tint length = parentPackageName.length;\r", "-\t\tStringBuffer buffer = new StringBuffer((length + 1) * 6);\r", "-\t\tfor (int i = 0; i < length; i++) {\r", "-\t\t\tif (parentPackageName[i] == null || isQualified(parentPackageName[i]))\r", "+\t\tfor (int i = 0, length = parentPackageName.length; i < length; i++)\r", "+\t\t\tif (parentPackageName[i] == null || CharOperation.contains('.', parentPackageName[i]))\r", "-\t\t\tbuffer.append(parentPackageName[i]);\r", "-\t\t\tbuffer.append('.');\r", "-\t\t}\r", "-\t\tif (isQualified(subPackageName)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tbuffer.append(subPackageName);\r", "-\t\tboolean result =\r", "-\t\t\tthis.nameLookup.findPackageFragments(buffer.toString(), false) != null;\r", "-\t\treturn result;\r", "-\t}\r", "+\t\tString packageName = new String(CharOperation.concatWith(parentPackageName, subPackageName, '.'));\r", "+\t\treturn this.nameLookup.findPackageFragments(packageName, false) != null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f2970464988522c01a039d6c0a5e92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "0ee55cb7b425ca172c29c8787fd167e56fe35621", "commitAfterChange": "faae0b7874a9fb0272afb48b6b96fc0b72a16025", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\tif (buffer.getCharacters() == null){", "-\t\tICompilationUnit original= (ICompilationUnit)this.getOriginalElement();", "-\t\tIBuffer originalBuffer = null;", "-\t\ttry {", "-\t\t\toriginalBuffer = original.getBuffer();", "-\t\t} catch (JavaModelException e) {", "-\t\t\t// original element does not exist: create an empty working copy", "-\t\t\tif (!e.getJavaModelStatus().isDoesNotExist()) {", "-\t\t\t\tthrow e;", "-\t\t\t}", "-\t\t}", "-\t\tif (originalBuffer != null) {", "-\t\t\tchar[] originalContents = originalBuffer.getCharacters();", "-\t\t\tif (originalContents != null) {", "-\t\t\t\tbuffer.setContents((char[])originalContents.clone());", "-\t\t\t}", "+\tif (buffer.getCharacters() == null) {", "+\t\tICompilationUnit original = (ICompilationUnit)this.getOriginalElement();", "+\t\tif (original.isOpen()) {", "+\t\t\tbuffer.setContents(original.getSource());", "-\t\t\t// initialize buffer", "-\t\t\tbuffer.setContents(CharOperation.NO_CHAR);", "+\t\t\tIFile file = (IFile)original.getResource();", "+\t\t\tif (file == null || !file.exists()) {", "+\t\t\t\t// initialize buffer with empty contents", "+\t\t\t\tbuffer.setContents(CharOperation.NO_CHAR);", "+\t\t\t} else {", "+\t\t\t\tbuffer.setContents(Util.getResourceContentsAsCharArray(file));", "+\t\t\t}"]}], "num": 38950}