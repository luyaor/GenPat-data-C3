{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5367c297e2b01e3c1640c3c433aa149", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5258b12623d7429ad454a9cbf7e4dfa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "dc9db9c22a51b01cfbe75b8acac7c7a000432f1b", "commitAfterChange": "d0c43348882f3d54a8f979ccfa7fbd36fd3e1b36", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\t\t\t\tboolean accept = pathname.isDirectory() || path.endsWith(\".java\");", "-\t\t\t\tif (accept) {", "-\t\t\t\t\tswitch (FILES_FILTER_KIND) {", "-\t\t\t\t\t\tcase 1: // Equals", "-\t\t\t\t\t\t\taccept = path.equals(FILES_FILTER);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase 2: // Starts with", "-\t\t\t\t\t\t\taccept = path.startsWith(FILES_FILTER);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase 3: // Starts with + same length", "-\t\t\t\t\t\t\taccept = path.startsWith(FILES_FILTER) && path.length() == FILES_FILTER.length();", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase 4: // Pattern", "-\t\t\t\t\t\t\taccept = path.matches(FILES_FILTER);", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\tif (pathname.isDirectory()) {", "+\t\t\t\t\tString dirName = path.substring(path.lastIndexOf(File.separatorChar)+1);", "+\t\t\t\t\treturn !dirName.equals(\"bin\");", "+\t\t\t\t}", "+\t\t\t\tif (path.endsWith(\".java\")) {", "+\t\t\t\t\tif (FILES_FILTER_KIND > 0) {", "+\t\t\t\t\t\tString fileName = path.substring(path.lastIndexOf(File.separatorChar)+1);", "+\t\t\t\t\t\tswitch (FILES_FILTER_KIND) {", "+\t\t\t\t\t\t\tcase 1: // Equals", "+\t\t\t\t\t\t\t\treturn fileName.equals(FILES_FILTER);", "+\t\t\t\t\t\t\tcase 2: // Starts with", "+\t\t\t\t\t\t\t\treturn fileName.startsWith(FILES_FILTER);", "+\t\t\t\t\t\t\tcase 3: // Starts with + same length", "+\t\t\t\t\t\t\t\treturn fileName.startsWith(FILES_FILTER) && fileName.length() == FILES_FILTER.length();", "+\t\t\t\t\t\t\tcase 4: // Pattern", "+\t\t\t\t\t\t\t\treturn fileName.matches(FILES_FILTER);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn true;", "-\t\t\t\treturn accept;", "+\t\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64348938c793e59da77ee2d6d9c630ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t\tpublic int compare(Object o1, Object o2)", "signatureAfterChange": " \t\t \t\tpublic int compareTo(Object o2)", "diff": ["+\t\t", "+\t\tpublic int compareTo(Object o2) {", "+\t\t\tCopySourceInfo r2= (CopySourceInfo) o2;", "+\t\t", "+\t\t\tint startDiff= this.getNode().getStartPosition() - r2.getNode().getStartPosition();", "+\t\t\tif (startDiff != 0) {", "+\t\t\t\treturn startDiff; // insert before if start node is first", "+\t\t\t}", "+", "+\t\t\tif (r2.isMove != this.isMove) {", "+\t\t\t\treturn this.isMove ? -1 : 1; // first move then copy", "+\t\t\t}", "+\t\t\treturn 0;", "+\t\t}", "-\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\tCopySourceInfo e1= (CopySourceInfo) o1;", "-\t\t\tCopySourceInfo e2= (CopySourceInfo) o2;", "-\t\t\tif (e1.isMove) {", "-\t\t\t\treturn -1;", "-\t\t\t} else if (e2.isMove) {", "-\t\t\t\treturn 1;", "-\t\t\t}", "-\t\t\treturn e2.getEndNode().getStartPosition() - e1.getEndNode().getStartPosition();", "-\t\t}"]}], "num": 27606}