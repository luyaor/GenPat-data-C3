{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2d0639dd238c01e01b3834e7e2201e8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06fa7ce0a2dd63eca4d85ab3055e60fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "b8d589b72f11298620e188a74f142f9887cfc702", "commitAfterChange": "92a5335907fd0cb9878a81d6d82d370dc8deacce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  private void addAffectedSourceFiles(StringSet qualifiedSet, StringSet simpleSet)", "signatureAfterChange": "  protected void addAffectedSourceFiles(StringSet qualifiedSet, StringSet simpleSet, StringSet affectedTypes)", "diff": ["-", "-private void addAffectedSourceFiles(StringSet qualifiedSet, StringSet simpleSet) {", "+protected void addAffectedSourceFiles(StringSet qualifiedSet, StringSet simpleSet, StringSet affectedTypes) {", "-\t\tReferenceCollection refs = (ReferenceCollection) valueTable[i];", "-\t\tif (refs != null && refs.includes(internedQualifiedNames, internedSimpleNames)) {", "-\t\t\tString typeLocator = (String) keyTable[i];", "-\t\t\tIFile file = javaBuilder.currentProject.getFile(typeLocator);", "-\t\t\tSourceFile sourceFile = findSourceFile(file);", "-\t\t\tif (sourceFile == null) continue next;", "-\t\t\tif (sourceFiles.contains(sourceFile)) continue next;", "-\t\t\tif (compiledAllAtOnce && previousSourceFiles != null && previousSourceFiles.contains(sourceFile))", "-\t\t\t\tcontinue next; // can skip previously compiled files since already saw hierarchy related problems", "-", "-\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\tSystem.out.println(\"  adding affected source file \" + typeLocator); //$NON-NLS-1$", "-\t\t\tsourceFiles.add(sourceFile);", "+\t\tString typeLocator = (String) keyTable[i];", "+\t\tif (typeLocator != null) {", "+\t\t\tif (affectedTypes != null && !affectedTypes.includes(typeLocator)) continue next;", "+\t\t\tReferenceCollection refs = (ReferenceCollection) valueTable[i];", "+\t\t\tif (refs.includes(internedQualifiedNames, internedSimpleNames)) {", "+\t\t\t\tIFile file = javaBuilder.currentProject.getFile(typeLocator);", "+\t\t\t\tSourceFile sourceFile = findSourceFile(file);", "+\t\t\t\tif (sourceFile == null) continue next;", "+\t\t\t\tif (sourceFiles.contains(sourceFile)) continue next;", "+\t\t\t\tif (compiledAllAtOnce && previousSourceFiles != null && previousSourceFiles.contains(sourceFile))", "+\t\t\t\t\tcontinue next; // can skip previously compiled files since already saw hierarchy related problems", "+\t", "+\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\tSystem.out.println(\"  adding affected source file \" + typeLocator); //$NON-NLS-1$", "+\t\t\t\tsourceFiles.add(sourceFile);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0170c5aff6323e9a8a257a0fdd831b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected void addAffectedSourceFiles()", "signatureAfterChange": "  protected void addAffectedSourceFiles()", "diff": ["-\tnext : for (int i = 0, l = keyTable.length; i < l; i++) {", "-\t\tString sourceLocation = (String) keyTable[i];", "-\t\tif (sourceLocation != null && !locations.contains(sourceLocation)) {", "-\t\t\tif (compiledAllAtOnce && previousLocations != null && previousLocations.contains(sourceLocation))", "-\t\t\t\tcontinue next; // can skip previously compiled locations since already saw hierarchy related problems", "-", "-\t\t\tReferenceCollection refs = (ReferenceCollection) valueTable[i];", "-\t\t\tif (refs.includes(qualifiedNames, simpleNames)) {", "-\t\t\t\t// check that the file still exists... the file or its package may have been deleted", "-\t\t\t\tIResource affectedFile = resourceForLocation(sourceLocation);", "-\t\t\t\tif (affectedFile != null && affectedFile.exists()) {", "-\t\t\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\t\t\tSystem.out.println(\"  adding affected source file \" + sourceLocation); //$NON-NLS-1$", "-\t\t\t\t\tlocations.add(sourceLocation);", "-\t\t\t\t\ttypeNames.add(extractTypeNameFrom(sourceLocation));", "+\tnext : for (int i = 0, l = valueTable.length; i < l; i++) {", "+\t\tReferenceCollection refs = (ReferenceCollection) valueTable[i];", "+\t\tif (refs != null && refs.includes(qualifiedNames, simpleNames)) {", "+\t\t\tString typeLocator = (String) keyTable[i];", "+\t\t\tIFile file = javaBuilder.currentProject.getFile(typeLocator);", "+\t\t\tif (file.exists()) {", "+\t\t\t\tClasspathMultiDirectory md = sourceLocations[0];", "+\t\t\t\tif (sourceLocations.length > 1) {", "+\t\t\t\t\tIPath sourceFileFullPath = file.getFullPath();", "+\t\t\t\t\tfor (int j = 0, m = sourceLocations.length; j < m; j++) {", "+\t\t\t\t\t\tif (sourceLocations[j].sourceFolder.getFullPath().isPrefixOf(sourceFileFullPath)) {", "+\t\t\t\t\t\t\tmd = sourceLocations[j];", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\tSourceFile sourceFile = new SourceFile(file, md, encoding);", "+\t\t\t\tif (sourceFiles.contains(sourceFile)) continue next;", "+\t\t\t\tif (compiledAllAtOnce && previousSourceFiles != null && previousSourceFiles.contains(sourceFile))", "+\t\t\t\t\tcontinue next; // can skip previously compiled files since already saw hierarchy related problems", "+", "+\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\tSystem.out.println(\"  adding affected source file \" + typeLocator); //$NON-NLS-1$", "+\t\t\t\tsourceFiles.add(sourceFile);"]}], "num": 38019}