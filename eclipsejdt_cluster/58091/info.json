{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "707d55000b76fe8e1fa4075a0c555d64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c8331126c056e7807b1c9b3b8bb263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["+\t\t\t// remember type bindings", "+\t\t\tfor (int i = 0; i < unitsIndex; i++) {", "+\t\t\t\tCompilationUnitDeclaration parsedUnit = parsedUnits[i];", "+\t\t\t\tif (parsedUnit != null && !parsedUnit.hasErrors()) {", "+\t\t\t\t\tboolean containsLocalType = hasLocalType[i];", "+\t\t\t\t\tif (containsLocalType) {", "+\t\t\t\t\t\tif (monitor != null && monitor.isCanceled())", "+\t\t\t\t\t\t\tthrow new OperationCanceledException();", "+\t\t\t\t\t\tparsedUnit.scope.faultInTypes();", "+\t\t\t\t\t\tparsedUnit.resolve();", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\trememberAllTypes(parsedUnit, cus[i], containsLocalType);", "+\t\t\t\t}", "+\t\t\t}", "-\t\t// remember type bindings", "-\t\tfor (int i = 0; i < unitsIndex; i++) {", "-\t\t\tCompilationUnitDeclaration parsedUnit = parsedUnits[i];", "-\t\t\tif (parsedUnit != null) {", "-\t\t\t\tboolean containsLocalType = hasLocalType[i];", "-\t\t\t\tif (containsLocalType) {", "-\t\t\t\t\tif (monitor != null && monitor.isCanceled())", "-\t\t\t\t\t\tthrow new OperationCanceledException();", "-\t\t\t\t\tparsedUnit.scope.faultInTypes();", "-\t\t\t\t\tparsedUnit.resolve();", "-\t\t\t\t}", "-", "-\t\t\t\trememberAllTypes(parsedUnit, cus[i], containsLocalType);", "-\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac8d3d0b4e2aad3bfed1b895fc73393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "55fc1d09be22c3edd63ee3458e199979c3f77613", "commitAfterChange": "84e7ccc666453bf6300ee2ec41ee2751e7c7737b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " protected void locatePackageDeclarations(SearchPattern searchPattern, SearchParticipant participant) throws CoreException", "signatureAfterChange": " protected void locatePackageDeclarations(SearchPattern searchPattern, SearchParticipant participant, IJavaProject[] projects) throws CoreException", "diff": ["-protected void locatePackageDeclarations(SearchPattern searchPattern, SearchParticipant participant) throws CoreException {", "+protected void locatePackageDeclarations(SearchPattern searchPattern, SearchParticipant participant, IJavaProject[] projects) throws CoreException {", "+\tif (this.progressMonitor != null && this.progressMonitor.isCanceled()) {", "+\t\tthrow new OperationCanceledException();", "+\t}", "-\t\tfor (int i = 0, length = patterns.length; i < length; i++)", "-\t\t\tlocatePackageDeclarations(patterns[i], participant);", "+\t\tfor (int i = 0, length = patterns.length; i < length; i++) {", "+\t\t\tlocatePackageDeclarations(patterns[i], participant, projects);", "+\t\t}", "-\t\tIJavaProject[] projects = JavaModelManager.getJavaModelManager().getJavaModel().getJavaProjects();", "+\t\t\tif (this.progressMonitor != null) {", "+\t\t\t\tif (this.progressMonitor.isCanceled()) throw new OperationCanceledException();", "+\t\t\t\tthis.progressWorked++;", "+\t\t\t\tif ((this.progressWorked%this.progressStep)==0) this.progressMonitor.worked(this.progressStep);", "+\t\t\t}"]}], "num": 58091}