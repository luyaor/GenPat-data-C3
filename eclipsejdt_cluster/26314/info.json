{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38c55aee0514b751d82eb7b8c9c941ba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0193ba3ae4ac3b95ed8878bc290fc30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "3ddb2a51bb7ecb990a4cb3c8c58e694fcc8fcead", "commitAfterChange": "92881376ff1daa90c2bf34dd0a9f8d08e62b099c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t\t \t\tprotected IStatus run(IProgressMonitor pm)", "signatureAfterChange": " \t\t \t\tprotected IStatus run(IProgressMonitor pm)", "diff": ["+\t\t", "-\t\t\t\twhile (this.externalFolders.hasNext()) {", "-\t\t\t\t\tIPath externalPath = (IPath) this.externalFolders.next();", "-\t\t\t\t\tIFolder folder = getFolder(externalPath);", "-\t\t\t\t\tif (folder != null) {", "+\t\t\t\tif (this.externalFolders == null) ", "+\t\t\t\t\treturn Status.OK_STATUS;", "+\t\t\t\tIPath externalPath = null;", "+\t\t\t\tfor (int index = 0; index < this.externalFolders.size(); index++ ) {", "+\t\t\t\t\tif ((externalPath = (IPath)this.externalFolders.get(index)) != null) {", "+\t\t\t\t\t\tIFolder folder = getFolder(externalPath);", "+\t\t\t\t\t// Set the processed ones to null instead of removing the element altogether,", "+\t\t\t\t\t// so that they will not be considered as duplicates.", "+\t\t\t\t\t// This will also avoid elements being shifted to the left every time an element", "+\t\t\t\t\t// is removed. However, there is a risk of Collection size to be increased more often.", "+\t\t\t\t\tthis.externalFolders.setElementAt(null, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4e1b8f99a401f8b635e81a66c3114b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "69c59f0267102692d57da5d57d379c16633b234c", "commitAfterChange": "a7da40a1a62439fc4b1ece4f5221022e1778c205", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t\t\tprotected IStatus run(IProgressMonitor pm)", "signatureAfterChange": " \t\t \t\tprotected IStatus run(IProgressMonitor pm)", "diff": ["-\t\t\t\t}", "-\t\t\t\tprotected IStatus run(IProgressMonitor pm) {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\t\t\tIPath externalPath = (IPath) iterator.next();", "-\t\t\t\t\t\t\tIFolder folder = getFolder(externalPath);", "-\t\t\t\t\t\t\tif (folder != null)", "-\t\t\t\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, pm);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\treturn e.getStatus();", "-\t\t\t\t\t}", "-\t\t\t\t\treturn Status.OK_STATUS;", "-\t\t\t\t}", "+\t\t", "+\t\tprotected IStatus run(IProgressMonitor pm) {", "+\t\t\ttry {", "+\t\t\t\twhile (this.externalFolders.hasNext()) {", "+\t\t\t\t\tIPath externalPath = (IPath) this.externalFolders.next();", "+\t\t\t\t\tIFolder folder = getFolder(externalPath);", "+\t\t\t\t\tif (folder != null) {", "+\t\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, pm);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\treturn e.getStatus();", "+\t\t\t}", "+\t\t\treturn Status.OK_STATUS;", "+\t\t}"]}], "num": 26314}