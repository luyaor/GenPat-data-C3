{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70a850fad27a99e7439065a94ec43686", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81e8d00475e7a3979d2d00a20203c111", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "1621c26161ec3c3c873e4f7bb53cba6eb9386f82", "commitAfterChange": "bd694647e8272783b0f72f57db94ca8452555ef0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tif (isConsistent()) return;", "-\t", "-\t// create a new info and make it the current info", "-\t// (this will remove the info and its children just before storing the new infos)", "-\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\tboolean hadTemporaryCache = manager.hasTemporaryCache();", "-\ttry {", "-\t\tHashMap newElements = manager.getTemporaryCache();", "-\t\topenWhenClosed(newElements, monitor);", "-\t\tif (newElements.get(this) == null) {", "-\t\t\t// close any buffer that was opened for the new elements", "-\t\t\tIterator iterator = newElements.keySet().iterator();", "-\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\tIJavaElement element = (IJavaElement)iterator.next();", "-\t\t\t\tif (element instanceof Openable) {", "-\t\t\t\t\t((Openable)element).closeBuffer();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tthrow newNotPresentException();", "-\t\t}", "-\t\tif (!hadTemporaryCache) {", "-\t\t\tmanager.putInfos(this, newElements);", "-\t\t}", "-\t} finally {", "-\t\tif (!hadTemporaryCache) {", "-\t\t\tmanager.resetTemporaryCache();", "-\t\t}", "-\t}", "+\t// only compilation units can be inconsistent", "+\t// other openables cannot be inconsistent so default is to do nothing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c592839c729306bbcbf901b1f463e8c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t", "-\t\tboolean hadTemporaryCache = manager.hasTemporaryCache();", "-\t\ttry {", "-\t\t\tHashMap newElements = manager.getTemporaryCache();", "-\t\t\tinfo = openWhenClosed(newElements, monitor);", "-\t\t\tif (info == null) {", "-\t\t\t\t// close any buffer that was opened for the new elements", "-\t\t\t\tIterator iterator = newElements.keySet().iterator();", "-\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\tIJavaElement element = (IJavaElement)iterator.next();", "-\t\t\t\t\tif (element instanceof Openable) {", "-\t\t\t\t\t\t((Openable)element).closeBuffer();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tthrow newNotPresentException();", "-\t\t\t}", "-\t\t\tif (!hadTemporaryCache) {", "-\t\t\t\tmanager.putInfos(this, newElements);", "-\t\t\t}", "-\t\t} finally {", "-\t\t\tif (!hadTemporaryCache) {", "-\t\t\t\tmanager.resetTemporaryCache();", "-\t\t\t}", "-\t\t}", "-", "-\t\treturn info;", "+\t\treturn openWhenClosed(createElementInfo(), monitor);"]}], "num": 54322}