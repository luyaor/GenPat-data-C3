{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4f676cc2cca6f8d4e1329840a4e0d74", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0080afba8f8ccced4c1a8225de109030", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 541, "methodNumberAfterChange": 541, "signatureBeforeChange": " \tpublic void test537()", "signatureAfterChange": " \tpublic void test537()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tClass c = Foo.class;\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<?> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: EnumSet is a raw type. References to generic type EnumSet<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 12)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccedc197a428ba6f63fb478a18dd470f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 764, "methodNumberAfterChange": 764, "signatureBeforeChange": " public void test758()", "signatureAfterChange": " public void test758()", "diff": ["-\t\t\"1. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\"\tEntryMap<K,V>.Entry entry = (EntryMap.Entry) internalGet(key);\\n\" + ", "-\t\t\"\t                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Unnecessary cast from X.EntryMap.Entry to X.EntryMap.Entry\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tEntryMap.Entry internalGet(Object key) {\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: X.EntryMap.Entry is a raw type. References to generic type X<K,V>.EntryMap<K,V>.Entry should be parameterized\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"\tEntryMap<K,V>.Entry entry = (EntryMap.Entry) internalGet(key);\\n\" + ", "+\t\t\"\t                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Unnecessary cast from X.EntryMap.Entry to X.EntryMap.Entry\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"\tEntryMap<K,V>.Entry entry = (EntryMap.Entry) internalGet(key);\\n\" + ", "+\t\t\"\t                             ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: X.EntryMap.Entry is a raw type. References to generic type X<K,V>.EntryMap<K,V>.Entry should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 14)\\n\" + "]}], "num": 902}