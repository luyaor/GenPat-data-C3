{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "531c123299d31d48fc726a30ece514bb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab910d35570af47c65a379cfd408f31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "diff": ["-", "-\t", "-\tint oldSlash = TYPE_DECL_LENGTH+1;", "-\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash+1);", "-\tchar[] pkgName;", "-\tif (slash == oldSlash+1){ ", "-\t\tpkgName = CharOperation.NO_CHAR;", "-\t} else {", "-\t\tpkgName = CharOperation.subarray(word, oldSlash+1, slash);", "-\t}", "-\tthis.decodedSimpleName = CharOperation.subarray(word, slash+1, slash = CharOperation.indexOf(SEPARATOR, word, slash+1));", "+\tint oldSlash = TYPE_DECL_LENGTH + 1;", "+\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash + 1);", "+\tchar[] pkgName = slash == oldSlash + 1", "+\t\t? CharOperation.NO_CHAR", "+\t\t: CharOperation.subarray(word, oldSlash+1, slash);", "+\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "-\tif (slash+1 < size){", "-\t\tif (slash+3 == size && word[slash+1] == ONE_ZERO[0]) {", "-\t\t\tenclosingTypeNames = ONE_ZERO_CHAR;", "-\t\t} else {", "-\t\t\tenclosingTypeNames = CharOperation.splitOn('/', CharOperation.subarray(word, slash+1, size-1));", "-\t\t}", "+\tif (slash + 1 < size) {", "+\t\tenclosingTypeNames = (slash + 3 == size && word[slash + 1] == ONE_ZERO[0])", "+\t\t\t? ONE_ZERO_CHAR", "+\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(word, slash + 1, size - 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b879ba0b8a99e5494ab5eae596719d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "diff": ["-protected void decodeIndexEntry(IEntryResult entryResult){", "-", "+protected void decodeIndexEntry(IEntryResult entryResult) {", "-\tint oldSlash = TYPE_DECL_LENGTH+1;", "-\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash+1);", "-\tif (slash == oldSlash+1){ ", "-\t\tthis.decodedPackage = CharOperation.NO_CHAR;", "-\t} else {", "-\t\tthis.decodedPackage = CharOperation.subarray(word, oldSlash+1, slash);", "-\t}", "-\tthis.decodedSimpleName = CharOperation.subarray(word, slash+1, slash = CharOperation.indexOf(SEPARATOR, word, slash+1));", "+\tint oldSlash = TYPE_DECL_LENGTH + 1;", "+\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash + 1);", "+\tthis.decodedPackage = (slash == oldSlash + 1)", "+\t\t? CharOperation.NO_CHAR", "+\t\t: CharOperation.subarray(word, oldSlash + 1, slash);", "+\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "-\tif (slash+1 < size){", "-\t\tif (slash+3 == size && word[slash+1] == ONE_ZERO[0]) {", "-\t\t\tthis.decodedEnclosingTypeNames = ONE_ZERO_CHAR;", "-\t\t} else {", "-\t\t\tthis.decodedEnclosingTypeNames = CharOperation.splitOn('/', CharOperation.subarray(word, slash+1, size-1));", "-\t\t}", "+\tif (slash+1 < size) {", "+\t\tthis.decodedEnclosingTypeNames = (slash + 3 == size && word[slash + 1] == ONE_ZERO[0])", "+\t\t\t? ONE_ZERO_CHAR", "+\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(word, slash+1, size-1));"]}], "num": 3824}