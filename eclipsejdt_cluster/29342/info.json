{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "390b634073f49f17903b7579cf9beadb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "927c746d6752c21e919e5b1097f2f2ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "266ddb07da0dd2618bcfbec3256d70ddf353d13c", "commitAfterChange": "0f0f6cf807937b95cd594ad18f819e710f9be563", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["+ */", "+public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException {", "-\t", "+", "-\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true); ", "-\t\t", "-\t\tchar[] prefix = CharOperation.concat(source.substring(0, insertion).toCharArray(), new char[]{'{'});", "-\t\tchar[] suffix =  CharOperation.concat(new char[]{'}'}, source.substring(insertion).toCharArray());", "-\t\tchar[] fakeSource = CharOperation.concat(prefix, snippet, suffix);", "-\t\t", "-\t\tBasicCompilationUnit cu = ", "-\t\t\tnew BasicCompilationUnit(", "-\t\t\t\tfakeSource, ", "-\t\t\t\tnull,", "-\t\t\t\tgetElementName(),", "-\t\t\t\tencoding); ", "-", "-\t\tengine.complete(cu, prefix.length + position, prefix.length);", "+\t\ttry {", "+\t\t\t// set the units to look inside", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "+\t\t\tnameLookup.setUnitsToLookInside(workingCopies);", "+\t", "+\t\t\t// code complete", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true); ", "+\t\t\t", "+\t\t\tchar[] prefix = CharOperation.concat(source.substring(0, insertion).toCharArray(), new char[]{'{'});", "+\t\t\tchar[] suffix =  CharOperation.concat(new char[]{'}'}, source.substring(insertion).toCharArray());", "+\t\t\tchar[] fakeSource = CharOperation.concat(prefix, snippet, suffix);", "+\t\t\t", "+\t\t\tBasicCompilationUnit cu = ", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tfakeSource, ", "+\t\t\t\t\tnull,", "+\t\t\t\t\tgetElementName(),", "+\t\t\t\t\tencoding); ", "+\t", "+\t\t\tengine.complete(cu, prefix.length + position, prefix.length);", "+\t\t} finally {", "+\t\t\tif (nameLookup != null) {", "+\t\t\t\tnameLookup.setUnitsToLookInside(null);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbfba55ca237975e36a9c5ce9cbe2159", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "266ddb07da0dd2618bcfbec3256d70ddf353d13c", "commitAfterChange": "0f0f6cf807937b95cd594ad18f819e710f9be563", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["+ */", "+public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException {", "-\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);", "-\t\t", "-\t\tchar[] prefix = CharOperation.concat(source.substring(0, insertion).toCharArray(), new char[]{'{'});", "-\t\tchar[] suffix = CharOperation.concat(new char[]{'}'}, source.substring(insertion).toCharArray());", "-\t\tchar[] fakeSource = CharOperation.concat(prefix, snippet, suffix);", "-\t\t", "-\t\tBasicCompilationUnit cu = ", "-\t\t\tnew BasicCompilationUnit(", "-\t\t\t\tfakeSource, ", "-\t\t\t\tnull,", "-\t\t\t\tgetElementName(),", "-\t\t\t\tencoding); ", "-", "-\t\tengine.complete(cu, prefix.length + position, prefix.length);", "+\t\ttry {", "+\t\t\t// set the units to look inside", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "+\t\t\tnameLookup.setUnitsToLookInside(workingCopies);", "+\t", "+\t\t\t// code complete", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);", "+\t\t\t", "+\t\t\tchar[] prefix = CharOperation.concat(source.substring(0, insertion).toCharArray(), new char[]{'{'});", "+\t\t\tchar[] suffix = CharOperation.concat(new char[]{'}'}, source.substring(insertion).toCharArray());", "+\t\t\tchar[] fakeSource = CharOperation.concat(prefix, snippet, suffix);", "+\t\t\t", "+\t\t\tBasicCompilationUnit cu = ", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tfakeSource, ", "+\t\t\t\t\tnull,", "+\t\t\t\t\tgetElementName(),", "+\t\t\t\t\tencoding); ", "+\t", "+\t\t\tengine.complete(cu, prefix.length + position, prefix.length);", "+\t\t} finally {", "+\t\t\tif (nameLookup != null) {", "+\t\t\t\tnameLookup.setUnitsToLookInside(null);", "+\t\t\t}", "+\t\t}"]}], "num": 29342}