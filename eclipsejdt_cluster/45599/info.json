{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00fdb9cf599f5489601f915a545604bf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f442ad3ddc6236e30d621a35c7ea24b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static long getIrritant(int problemID)", "signatureAfterChange": " \t public static long getIrritant(int problemID)", "diff": ["-\tpublic static long getIrritant(int problemID) {", "-\t\tswitch(problemID){", "-\t\t\tcase IProblem.MaskedCatch : ", "-\t\t\t\treturn CompilerOptions.MaskedCatchBlock;", "-\t", "-\t\t\tcase IProblem.UnusedImport :", "-\t\t\t\treturn CompilerOptions.UnusedImport;", "-\t\t\t\t", "-\t\t\tcase IProblem.MethodButWithConstructorName :", "-\t\t\t\treturn CompilerOptions.MethodWithConstructorName;", "+public static long getIrritant(int problemID) {", "+\tswitch(problemID){", "+", "+\t\tcase IProblem.MaskedCatch : ", "+\t\t\treturn CompilerOptions.MaskedCatchBlock;", "+", "+\t\tcase IProblem.UnusedImport :", "+\t\t\treturn CompilerOptions.UnusedImport;", "-\t\t\tcase IProblem.OverridingNonVisibleMethod :", "-\t\t\t\treturn CompilerOptions.OverriddenPackageDefaultMethod;", "-\t", "-\t\t\tcase IProblem.IncompatibleReturnTypeForNonInheritedInterfaceMethod :", "-\t\t\tcase IProblem.IncompatibleExceptionInThrowsClauseForNonInheritedInterfaceMethod :", "-\t\t\t\treturn CompilerOptions.IncompatibleNonInheritedInterfaceMethod;", "-\t", "-\t\t\tcase IProblem.OverridingDeprecatedMethod :\t\t\t\t", "-\t\t\tcase IProblem.UsingDeprecatedType :\t\t\t\t", "-\t\t\tcase IProblem.UsingDeprecatedMethod :", "-\t\t\tcase IProblem.UsingDeprecatedConstructor :", "-\t\t\tcase IProblem.UsingDeprecatedField :", "-\t\t\t\treturn CompilerOptions.UsingDeprecatedAPI;", "+\t\tcase IProblem.MethodButWithConstructorName :", "+\t\t\treturn CompilerOptions.MethodWithConstructorName;", "+\t\t", "+\t\tcase IProblem.OverridingNonVisibleMethod :", "+\t\t\treturn CompilerOptions.OverriddenPackageDefaultMethod;", "+", "+\t\tcase IProblem.IncompatibleReturnTypeForNonInheritedInterfaceMethod :", "+\t\tcase IProblem.IncompatibleExceptionInThrowsClauseForNonInheritedInterfaceMethod :", "+\t\t\treturn CompilerOptions.IncompatibleNonInheritedInterfaceMethod;", "+", "+\t\tcase IProblem.OverridingDeprecatedMethod :\t\t\t\t", "+\t\tcase IProblem.UsingDeprecatedType :\t\t\t\t", "+\t\tcase IProblem.UsingDeprecatedMethod :", "+\t\tcase IProblem.UsingDeprecatedConstructor :", "+\t\tcase IProblem.UsingDeprecatedField :", "+\t\t\treturn CompilerOptions.UsingDeprecatedAPI;", "+\t\t", "+\t\tcase IProblem.LocalVariableIsNeverUsed :", "+\t\t\treturn CompilerOptions.UnusedLocalVariable;", "+\t\t", "+\t\tcase IProblem.ArgumentIsNeverUsed :", "+\t\t\treturn CompilerOptions.UnusedArgument;", "+", "+\t\tcase IProblem.NoImplicitStringConversionForCharArrayExpression :", "+\t\t\treturn CompilerOptions.NoImplicitStringConversion;", "+", "+\t\tcase IProblem.NeedToEmulateFieldReadAccess :", "+\t\tcase IProblem.NeedToEmulateFieldWriteAccess :", "+\t\tcase IProblem.NeedToEmulateMethodAccess :", "+\t\tcase IProblem.NeedToEmulateConstructorAccess :\t\t\t", "+\t\t\treturn CompilerOptions.AccessEmulation;", "+", "+\t\tcase IProblem.NonExternalizedStringLiteral :", "+\t\tcase IProblem.UnnecessaryNLSTag :", "+\t\t\treturn CompilerOptions.NonExternalizedString;", "+", "+\t\tcase IProblem.UseAssertAsAnIdentifier :", "+\t\t\treturn CompilerOptions.AssertUsedAsAnIdentifier;", "-\t\t\tcase IProblem.LocalVariableIsNeverUsed :", "-\t\t\t\treturn CompilerOptions.UnusedLocalVariable;", "+\t\tcase IProblem.UseEnumAsAnIdentifier :", "+\t\t\treturn CompilerOptions.EnumUsedAsAnIdentifier;", "+", "+\t\tcase IProblem.NonStaticAccessToStaticMethod :", "+\t\tcase IProblem.NonStaticAccessToStaticField :", "+\t\t\treturn CompilerOptions.NonStaticAccessToStatic;", "+", "+\t\tcase IProblem.IndirectAccessToStaticMethod :", "+\t\tcase IProblem.IndirectAccessToStaticField :", "+\t\tcase IProblem.IndirectAccessToStaticType :", "+\t\t\treturn CompilerOptions.IndirectStaticAccess;", "+", "+\t\tcase IProblem.AssignmentHasNoEffect:", "+\t\t\treturn CompilerOptions.NoEffectAssignment;", "+", "+\t\tcase IProblem.UnusedPrivateConstructor:", "+\t\tcase IProblem.UnusedPrivateMethod:", "+\t\tcase IProblem.UnusedPrivateField:", "+\t\tcase IProblem.UnusedPrivateType:", "+\t\t\treturn CompilerOptions.UnusedPrivateMember;", "+", "+\t\tcase IProblem.LocalVariableHidingLocalVariable:", "+\t\tcase IProblem.LocalVariableHidingField:", "+\t\tcase IProblem.ArgumentHidingLocalVariable:", "+\t\tcase IProblem.ArgumentHidingField:", "+\t\t\treturn CompilerOptions.LocalVariableHiding;", "+", "+\t\tcase IProblem.FieldHidingLocalVariable:", "+\t\tcase IProblem.FieldHidingField:", "+\t\t\treturn CompilerOptions.FieldHiding;", "+", "+\t\tcase IProblem.TypeParameterHidingType:", "+\t\tcase IProblem.TypeHidingTypeParameterFromType:", "+\t\tcase IProblem.TypeHidingTypeParameterFromMethod:", "+\t\tcase IProblem.TypeHidingType:", "+\t\t\treturn CompilerOptions.TypeHiding;", "-\t\t\tcase IProblem.ArgumentIsNeverUsed :", "-\t\t\t\treturn CompilerOptions.UnusedArgument;", "-\t", "-\t\t\tcase IProblem.NoImplicitStringConversionForCharArrayExpression :", "-\t\t\t\treturn CompilerOptions.NoImplicitStringConversion;", "-\t", "-\t\t\tcase IProblem.NeedToEmulateFieldReadAccess :", "-\t\t\tcase IProblem.NeedToEmulateFieldWriteAccess :", "-\t\t\tcase IProblem.NeedToEmulateMethodAccess :", "-\t\t\tcase IProblem.NeedToEmulateConstructorAccess :\t\t\t", "-\t\t\t\treturn CompilerOptions.AccessEmulation;", "-\t", "-\t\t\tcase IProblem.NonExternalizedStringLiteral :", "-\t\t\tcase IProblem.UnnecessaryNLSTag :", "-\t\t\t\treturn CompilerOptions.NonExternalizedString;", "-\t", "-\t\t\tcase IProblem.UseAssertAsAnIdentifier :", "-\t\t\t\treturn CompilerOptions.AssertUsedAsAnIdentifier;", "-\t\t\t\t", "-\t\t\tcase IProblem.UseEnumAsAnIdentifier :", "-\t\t\t\treturn CompilerOptions.EnumUsedAsAnIdentifier;", "-\t", "-\t\t\tcase IProblem.NonStaticAccessToStaticMethod :", "-\t\t\tcase IProblem.NonStaticAccessToStaticField :", "-\t\t\t\treturn CompilerOptions.NonStaticAccessToStatic;", "-\t", "-\t\t\tcase IProblem.IndirectAccessToStaticMethod :", "-\t\t\tcase IProblem.IndirectAccessToStaticField :", "-\t\t\tcase IProblem.IndirectAccessToStaticType :", "-\t\t\t\treturn CompilerOptions.IndirectStaticAccess;", "-\t", "-\t\t\tcase IProblem.AssignmentHasNoEffect:", "-\t\t\t\treturn CompilerOptions.NoEffectAssignment;", "-\t", "-\t\t\tcase IProblem.UnusedPrivateConstructor:", "-\t\t\tcase IProblem.UnusedPrivateMethod:", "-\t\t\tcase IProblem.UnusedPrivateField:", "-\t\t\tcase IProblem.UnusedPrivateType:", "-\t\t\t\treturn CompilerOptions.UnusedPrivateMember;", "-\t", "-\t\t\tcase IProblem.LocalVariableHidingLocalVariable:", "-\t\t\tcase IProblem.LocalVariableHidingField:", "-\t\t\tcase IProblem.ArgumentHidingLocalVariable:", "-\t\t\tcase IProblem.ArgumentHidingField:", "-\t\t\t\treturn CompilerOptions.LocalVariableHiding;", "-\t", "-\t\t\tcase IProblem.FieldHidingLocalVariable:", "-\t\t\tcase IProblem.FieldHidingField:", "-\t\t\t\treturn CompilerOptions.FieldHiding;", "-\t", "-\t\t\tcase IProblem.TypeParameterHidingType:", "-\t\t\t\treturn CompilerOptions.TypeParameterHiding;", "-\t\t\t\t", "-\t\t\tcase IProblem.PossibleAccidentalBooleanAssignment:", "-\t\t\t\treturn CompilerOptions.AccidentalBooleanAssign;", "-\t", "-\t\t\tcase IProblem.SuperfluousSemicolon:", "-\t\t\tcase IProblem.EmptyControlFlowStatement:", "-\t\t\t\treturn CompilerOptions.EmptyStatement;", "-\t", "-\t\t\tcase IProblem.UndocumentedEmptyBlock:", "-\t\t\t\treturn CompilerOptions.UndocumentedEmptyBlock;", "-\t\t\t\t", "-\t\t\tcase IProblem.UnnecessaryCast:", "-\t\t\tcase IProblem.UnnecessaryInstanceof:", "-\t\t\t\treturn CompilerOptions.UnnecessaryTypeCheck;", "-\t\t\t\t", "-\t\t\tcase IProblem.FinallyMustCompleteNormally:", "-\t\t\t\treturn CompilerOptions.FinallyBlockNotCompleting;", "-\t\t\t\t", "-\t\t\tcase IProblem.UnusedMethodDeclaredThrownException:", "-\t\t\tcase IProblem.UnusedConstructorDeclaredThrownException:", "-\t\t\t\treturn CompilerOptions.UnusedDeclaredThrownException;", "-\t", "-\t\t\tcase IProblem.UnqualifiedFieldAccess:", "-\t\t\t\treturn CompilerOptions.UnqualifiedFieldAccess;", "+\t\tcase IProblem.PossibleAccidentalBooleanAssignment:", "+\t\t\treturn CompilerOptions.AccidentalBooleanAssign;", "+", "+\t\tcase IProblem.SuperfluousSemicolon:", "+\t\tcase IProblem.EmptyControlFlowStatement:", "+\t\t\treturn CompilerOptions.EmptyStatement;", "+", "+\t\tcase IProblem.UndocumentedEmptyBlock:", "+\t\t\treturn CompilerOptions.UndocumentedEmptyBlock;", "-\t\t\tcase IProblem.UnnecessaryElse:", "-\t\t\t\treturn CompilerOptions.UnnecessaryElse;", "-\t", "-\t\t\tcase IProblem.UnsafeRawConstructorInvocation:", "-\t\t\tcase IProblem.UnsafeRawMethodInvocation:", "-\t\t\tcase IProblem.UnsafeTypeConversion:", "-\t\t\tcase IProblem.UnsafeRawFieldAssignment:", "-\t\t\tcase IProblem.UnsafeGenericCast:", "-\t\t\tcase IProblem.UnsafeReturnTypeOverride:", "-\t\t\tcase IProblem.UnsafeRawGenericMethodInvocation:", "-\t\t\tcase IProblem.UnsafeRawGenericConstructorInvocation:", "-\t\t\tcase IProblem.UnsafeGenericArrayForVarargs:", "-\t\t\t\treturn CompilerOptions.UncheckedTypeOperation;", "-\t", "-\t\t\tcase IProblem.RawTypeReference:", "-\t\t\t\treturn CompilerOptions.RawTypeReference;", "-\t", "-\t\t\tcase IProblem.MissingOverrideAnnotation:", "-\t\t\t\treturn CompilerOptions.MissingOverrideAnnotation;", "-\t\t\t\t", "-\t\t\tcase IProblem.FieldMissingDeprecatedAnnotation:", "-\t\t\tcase IProblem.MethodMissingDeprecatedAnnotation:", "-\t\t\tcase IProblem.TypeMissingDeprecatedAnnotation:", "-\t\t\t\treturn CompilerOptions.MissingDeprecatedAnnotation;", "-\t\t\t\t", "-\t\t\tcase IProblem.FinalBoundForTypeVariable:", "-\t\t\t    return CompilerOptions.FinalParameterBound;", "-\t", "-\t\t\tcase IProblem.MissingSerialVersion:", "-\t\t\t\treturn CompilerOptions.MissingSerialVersion;", "+\t\tcase IProblem.UnnecessaryCast:", "+\t\tcase IProblem.UnnecessaryInstanceof:", "+\t\t\treturn CompilerOptions.UnnecessaryTypeCheck;", "-\t\t\tcase IProblem.ForbiddenReference:", "-\t\t\t\treturn CompilerOptions.ForbiddenReference;", "-\t", "-\t\t\tcase IProblem.DiscouragedReference:", "-\t\t\t\treturn CompilerOptions.DiscouragedReference;", "-\t", "-\t\t\tcase IProblem.MethodVarargsArgumentNeedCast :", "-\t\t\tcase IProblem.ConstructorVarargsArgumentNeedCast :", "-\t\t\t\treturn CompilerOptions.VarargsArgumentNeedCast;", "-\t", "-\t\t\tcase IProblem.LocalVariableCannotBeNull :", "-\t\t\tcase IProblem.LocalVariableCanOnlyBeNull :", "-\t\t\tcase IProblem.LocalVariableMayBeNull :", "-\t\t\t\treturn CompilerOptions.NullReference;", "-\t\t\t\t", "-\t\t\tcase IProblem.BoxingConversion :", "-\t\t\tcase IProblem.UnboxingConversion :", "-\t\t\t\treturn CompilerOptions.AutoBoxing;", "-\t", "-\t\t\tcase IProblem.MissingEnumConstantCase :", "-\t\t\t\treturn CompilerOptions.IncompleteEnumSwitch;", "-\t\t\t\t", "-\t\t\tcase IProblem.AnnotationTypeUsedAsSuperInterface :", "-\t\t\t\treturn CompilerOptions.AnnotationSuperInterface;", "-\t\t\t\t", "-\t\t\tcase IProblem.UnhandledWarningToken :", "-\t\t\t\treturn CompilerOptions.UnhandledWarningToken;", "-\t\t\t\t", "-\t\t\tcase IProblem.UnusedLabel :", "-\t\t\t\treturn CompilerOptions.UnusedLabel;", "-\t", "-\t\t\tcase IProblem.JavadocUnexpectedTag:", "-\t\t\tcase IProblem.JavadocDuplicateTag:", "-\t\t\tcase IProblem.JavadocDuplicateReturnTag:", "-\t\t\tcase IProblem.JavadocInvalidThrowsClass:", "-\t\t\tcase IProblem.JavadocInvalidSeeReference:", "-\t\t\tcase IProblem.JavadocInvalidParamTagName:", "-\t\t\tcase IProblem.JavadocInvalidParamTagTypeParameter:", "-\t\t\tcase IProblem.JavadocMalformedSeeReference:", "-\t\t\tcase IProblem.JavadocInvalidSeeHref:", "-\t\t\tcase IProblem.JavadocInvalidSeeArgs:", "-\t\t\tcase IProblem.JavadocInvalidTag:", "-\t\t\tcase IProblem.JavadocUnterminatedInlineTag:", "-\t\t\tcase IProblem.JavadocMissingHashCharacter:", "-\t\t\tcase IProblem.JavadocEmptyReturnTag:", "-\t\t\tcase IProblem.JavadocUnexpectedText:", "-\t\t\tcase IProblem.JavadocInvalidParamName:", "-\t\t\tcase IProblem.JavadocDuplicateParamName:", "-\t\t\tcase IProblem.JavadocMissingParamName:", "-\t\t\tcase IProblem.JavadocMissingIdentifier:", "-\t\t\tcase IProblem.JavadocInvalidMemberTypeQualification:", "-\t\t\tcase IProblem.JavadocInvalidThrowsClassName:", "-\t\t\tcase IProblem.JavadocDuplicateThrowsClassName:", "-\t\t\tcase IProblem.JavadocMissingThrowsClassName:", "-\t\t\tcase IProblem.JavadocMissingSeeReference:", "-\t\t\tcase IProblem.JavadocInvalidValueReference:", "-\t\t\tcase IProblem.JavadocUndefinedField:", "-\t\t\tcase IProblem.JavadocAmbiguousField:", "-\t\t\tcase IProblem.JavadocUndefinedConstructor:", "-\t\t\tcase IProblem.JavadocAmbiguousConstructor:", "-\t\t\tcase IProblem.JavadocUndefinedMethod:", "-\t\t\tcase IProblem.JavadocAmbiguousMethod:", "-\t\t\tcase IProblem.JavadocAmbiguousMethodReference:", "-\t\t\tcase IProblem.JavadocParameterMismatch:", "-\t\t\tcase IProblem.JavadocUndefinedType:", "-\t\t\tcase IProblem.JavadocAmbiguousType:", "-\t\t\tcase IProblem.JavadocInternalTypeNameProvided:", "-\t\t\tcase IProblem.JavadocNoMessageSendOnArrayType:", "-\t\t\tcase IProblem.JavadocNoMessageSendOnBaseType:", "-\t\t\tcase IProblem.JavadocInheritedMethodHidesEnclosingName:", "-\t\t\tcase IProblem.JavadocInheritedFieldHidesEnclosingName:", "-\t\t\tcase IProblem.JavadocInheritedNameHidesEnclosingTypeName:", "-\t\t\tcase IProblem.JavadocNonStaticTypeFromStaticInvocation:", "-\t\t\tcase IProblem.JavadocGenericMethodTypeArgumentMismatch:", "-\t\t\tcase IProblem.JavadocNonGenericMethod:", "-\t\t\tcase IProblem.JavadocIncorrectArityForParameterizedMethod:", "-\t\t\tcase IProblem.JavadocParameterizedMethodArgumentTypeMismatch:", "-\t\t\tcase IProblem.JavadocTypeArgumentsForRawGenericMethod:", "-\t\t\tcase IProblem.JavadocGenericConstructorTypeArgumentMismatch:", "-\t\t\tcase IProblem.JavadocNonGenericConstructor:", "-\t\t\tcase IProblem.JavadocIncorrectArityForParameterizedConstructor:", "-\t\t\tcase IProblem.JavadocParameterizedConstructorArgumentTypeMismatch:", "-\t\t\tcase IProblem.JavadocTypeArgumentsForRawGenericConstructor:", "-\t\t\tcase IProblem.JavadocNotVisibleField:", "-\t\t\tcase IProblem.JavadocNotVisibleConstructor:", "-\t\t\tcase IProblem.JavadocNotVisibleMethod:", "-\t\t\tcase IProblem.JavadocNotVisibleType:", "-\t\t\tcase IProblem.JavadocUsingDeprecatedField:", "-\t\t\tcase IProblem.JavadocUsingDeprecatedConstructor:", "-\t\t\tcase IProblem.JavadocUsingDeprecatedMethod:", "-\t\t\tcase IProblem.JavadocUsingDeprecatedType:", "-\t\t\tcase IProblem.JavadocHiddenReference:", "-\t\t\t\treturn CompilerOptions.InvalidJavadoc;", "-\t", "-\t\t\tcase IProblem.JavadocMissingParamTag:", "-\t\t\tcase IProblem.JavadocMissingReturnTag:", "-\t\t\tcase IProblem.JavadocMissingThrowsTag:", "-\t\t\t\treturn CompilerOptions.MissingJavadocTags;", "-\t", "-\t\t\tcase IProblem.JavadocMissing:", "-\t\t\t\treturn CompilerOptions.MissingJavadocComments;", "-\t", "-\t\t\tcase IProblem.ParameterAssignment:", "-\t\t\t\treturn CompilerOptions.ParameterAssignment;", "-\t", "-\t\t\tcase IProblem.FallthroughCase:", "-\t\t\t\treturn CompilerOptions.FallthroughCase;", "-\t\t\t\t", "-\t\t\tcase IProblem.OverridingMethodWithoutSuperInvocation:", "-\t\t\t\treturn CompilerOptions.OverridingMethodWithoutSuperInvocation;", "-\t\t}", "-\t\treturn 0;", "+\t\tcase IProblem.FinallyMustCompleteNormally:", "+\t\t\treturn CompilerOptions.FinallyBlockNotCompleting;", "+\t\t\t", "+\t\tcase IProblem.UnusedMethodDeclaredThrownException:", "+\t\tcase IProblem.UnusedConstructorDeclaredThrownException:", "+\t\t\treturn CompilerOptions.UnusedDeclaredThrownException;", "+", "+\t\tcase IProblem.UnqualifiedFieldAccess:", "+\t\t\treturn CompilerOptions.UnqualifiedFieldAccess;", "+\t\t", "+\t\tcase IProblem.UnnecessaryElse:", "+\t\t\treturn CompilerOptions.UnnecessaryElse;", "+", "+\t\tcase IProblem.UnsafeRawConstructorInvocation:", "+\t\tcase IProblem.UnsafeRawMethodInvocation:", "+\t\tcase IProblem.UnsafeTypeConversion:", "+\t\tcase IProblem.UnsafeRawFieldAssignment:", "+\t\tcase IProblem.UnsafeGenericCast:", "+\t\tcase IProblem.UnsafeReturnTypeOverride:", "+\t\tcase IProblem.UnsafeRawGenericMethodInvocation:", "+\t\tcase IProblem.UnsafeRawGenericConstructorInvocation:", "+\t\tcase IProblem.UnsafeGenericArrayForVarargs:", "+\t\t\treturn CompilerOptions.UncheckedTypeOperation;", "+", "+\t\tcase IProblem.RawTypeReference:", "+\t\t\treturn CompilerOptions.RawTypeReference;", "+", "+\t\tcase IProblem.MissingOverrideAnnotation:", "+\t\t\treturn CompilerOptions.MissingOverrideAnnotation;", "+\t\t\t", "+\t\tcase IProblem.FieldMissingDeprecatedAnnotation:", "+\t\tcase IProblem.MethodMissingDeprecatedAnnotation:", "+\t\tcase IProblem.TypeMissingDeprecatedAnnotation:", "+\t\t\treturn CompilerOptions.MissingDeprecatedAnnotation;", "+\t\t\t", "+\t\tcase IProblem.FinalBoundForTypeVariable:", "+\t\t    return CompilerOptions.FinalParameterBound;", "+", "+\t\tcase IProblem.MissingSerialVersion:", "+\t\t\treturn CompilerOptions.MissingSerialVersion;", "+\t\t", "+\t\tcase IProblem.ForbiddenReference:", "+\t\t\treturn CompilerOptions.ForbiddenReference;", "+", "+\t\tcase IProblem.DiscouragedReference:", "+\t\t\treturn CompilerOptions.DiscouragedReference;", "+", "+\t\tcase IProblem.MethodVarargsArgumentNeedCast :", "+\t\tcase IProblem.ConstructorVarargsArgumentNeedCast :", "+\t\t\treturn CompilerOptions.VarargsArgumentNeedCast;", "+", "+\t\tcase IProblem.LocalVariableCannotBeNull :", "+\t\tcase IProblem.LocalVariableCanOnlyBeNull :", "+\t\tcase IProblem.LocalVariableMayBeNull :", "+\t\t\treturn CompilerOptions.NullReference;", "+\t\t\t", "+\t\tcase IProblem.BoxingConversion :", "+\t\tcase IProblem.UnboxingConversion :", "+\t\t\treturn CompilerOptions.AutoBoxing;", "+", "+\t\tcase IProblem.MissingEnumConstantCase :", "+\t\t\treturn CompilerOptions.IncompleteEnumSwitch;", "+\t\t\t", "+\t\tcase IProblem.AnnotationTypeUsedAsSuperInterface :", "+\t\t\treturn CompilerOptions.AnnotationSuperInterface;", "+\t\t\t", "+\t\tcase IProblem.UnhandledWarningToken :", "+\t\t\treturn CompilerOptions.UnhandledWarningToken;", "+\t\t\t", "+\t\tcase IProblem.UnusedLabel :", "+\t\t\treturn CompilerOptions.UnusedLabel;", "+", "+\t\tcase IProblem.JavadocUnexpectedTag:", "+\t\tcase IProblem.JavadocDuplicateTag:", "+\t\tcase IProblem.JavadocDuplicateReturnTag:", "+\t\tcase IProblem.JavadocInvalidThrowsClass:", "+\t\tcase IProblem.JavadocInvalidSeeReference:", "+\t\tcase IProblem.JavadocInvalidParamTagName:", "+\t\tcase IProblem.JavadocInvalidParamTagTypeParameter:", "+\t\tcase IProblem.JavadocMalformedSeeReference:", "+\t\tcase IProblem.JavadocInvalidSeeHref:", "+\t\tcase IProblem.JavadocInvalidSeeArgs:", "+\t\tcase IProblem.JavadocInvalidTag:", "+\t\tcase IProblem.JavadocUnterminatedInlineTag:", "+\t\tcase IProblem.JavadocMissingHashCharacter:", "+\t\tcase IProblem.JavadocEmptyReturnTag:", "+\t\tcase IProblem.JavadocUnexpectedText:", "+\t\tcase IProblem.JavadocInvalidParamName:", "+\t\tcase IProblem.JavadocDuplicateParamName:", "+\t\tcase IProblem.JavadocMissingParamName:", "+\t\tcase IProblem.JavadocMissingIdentifier:", "+\t\tcase IProblem.JavadocInvalidMemberTypeQualification:", "+\t\tcase IProblem.JavadocInvalidThrowsClassName:", "+\t\tcase IProblem.JavadocDuplicateThrowsClassName:", "+\t\tcase IProblem.JavadocMissingThrowsClassName:", "+\t\tcase IProblem.JavadocMissingSeeReference:", "+\t\tcase IProblem.JavadocInvalidValueReference:", "+\t\tcase IProblem.JavadocUndefinedField:", "+\t\tcase IProblem.JavadocAmbiguousField:", "+\t\tcase IProblem.JavadocUndefinedConstructor:", "+\t\tcase IProblem.JavadocAmbiguousConstructor:", "+\t\tcase IProblem.JavadocUndefinedMethod:", "+\t\tcase IProblem.JavadocAmbiguousMethod:", "+\t\tcase IProblem.JavadocAmbiguousMethodReference:", "+\t\tcase IProblem.JavadocParameterMismatch:", "+\t\tcase IProblem.JavadocUndefinedType:", "+\t\tcase IProblem.JavadocAmbiguousType:", "+\t\tcase IProblem.JavadocInternalTypeNameProvided:", "+\t\tcase IProblem.JavadocNoMessageSendOnArrayType:", "+\t\tcase IProblem.JavadocNoMessageSendOnBaseType:", "+\t\tcase IProblem.JavadocInheritedMethodHidesEnclosingName:", "+\t\tcase IProblem.JavadocInheritedFieldHidesEnclosingName:", "+\t\tcase IProblem.JavadocInheritedNameHidesEnclosingTypeName:", "+\t\tcase IProblem.JavadocNonStaticTypeFromStaticInvocation:", "+\t\tcase IProblem.JavadocGenericMethodTypeArgumentMismatch:", "+\t\tcase IProblem.JavadocNonGenericMethod:", "+\t\tcase IProblem.JavadocIncorrectArityForParameterizedMethod:", "+\t\tcase IProblem.JavadocParameterizedMethodArgumentTypeMismatch:", "+\t\tcase IProblem.JavadocTypeArgumentsForRawGenericMethod:", "+\t\tcase IProblem.JavadocGenericConstructorTypeArgumentMismatch:", "+\t\tcase IProblem.JavadocNonGenericConstructor:", "+\t\tcase IProblem.JavadocIncorrectArityForParameterizedConstructor:", "+\t\tcase IProblem.JavadocParameterizedConstructorArgumentTypeMismatch:", "+\t\tcase IProblem.JavadocTypeArgumentsForRawGenericConstructor:", "+\t\tcase IProblem.JavadocNotVisibleField:", "+\t\tcase IProblem.JavadocNotVisibleConstructor:", "+\t\tcase IProblem.JavadocNotVisibleMethod:", "+\t\tcase IProblem.JavadocNotVisibleType:", "+\t\tcase IProblem.JavadocUsingDeprecatedField:", "+\t\tcase IProblem.JavadocUsingDeprecatedConstructor:", "+\t\tcase IProblem.JavadocUsingDeprecatedMethod:", "+\t\tcase IProblem.JavadocUsingDeprecatedType:", "+\t\tcase IProblem.JavadocHiddenReference:", "+\t\t\treturn CompilerOptions.InvalidJavadoc;", "+", "+\t\tcase IProblem.JavadocMissingParamTag:", "+\t\tcase IProblem.JavadocMissingReturnTag:", "+\t\tcase IProblem.JavadocMissingThrowsTag:", "+\t\t\treturn CompilerOptions.MissingJavadocTags;", "+", "+\t\tcase IProblem.JavadocMissing:", "+\t\t\treturn CompilerOptions.MissingJavadocComments;", "+", "+\t\tcase IProblem.ParameterAssignment:", "+\t\t\treturn CompilerOptions.ParameterAssignment;", "+", "+\t\tcase IProblem.FallthroughCase:", "+\t\t\treturn CompilerOptions.FallthroughCase;", "+\t\t\t", "+\t\tcase IProblem.OverridingMethodWithoutSuperInvocation:", "+\t\t\treturn CompilerOptions.OverridingMethodWithoutSuperInvocation;", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b72058b1b935da524b022f45713bbcc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.RedundantNullCheckAgainstNonNullType:", "+\t\tcase IProblem.RedundantNullCheckOnField:", "+\t\tcase IProblem.FieldComparisonYieldsFalse:", "-\t\tcase IProblem.NullityMismatchingTypeAnnotationUnchecked:", "+\t\tcase IProblem.NullityUncheckedTypeAnnotationDetail:"]}], "num": 45599}