{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7df044653f25c28d641e083b20e05a5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f710d883d2b9d094d007a7b113eac4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  \tpublic void test061()", "signatureAfterChange": "  \tpublic void test061()", "diff": ["-\t\t\t\"    1  istore_0\\n\" + ", "+\t\t\t\"    1  istore_0 [i]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d6e0eac7f86cdc26622647052ae216f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test006()", "signatureAfterChange": " \tpublic void test006()", "diff": ["-\t\t\t\"    2  istore_1\\n\" + ", "+\t\t\t\"    2  istore_1 [i]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e59f6f334cf32b66f8b0a3001d08ea2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void test044()", "signatureAfterChange": " public void test044()", "diff": ["-\t\t\"     1  invokevirtual #21 <Method [Ljava/lang/String;.clone()Ljava/lang/Object;>\\n\";", "+\t\t\"     1  invokevirtual [Ljava/lang/String;.clone()Ljava/lang/Object; [21]\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7426d6de9f5916eb8d6206378dfc760a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "\t\t \tpublic void test168()", "signatureAfterChange": "\t\t \tpublic void test168()", "diff": ["-\t\t\t\"Type safety: The expression of type AX is converted to AX<AX<T,T>,U> using a raw conversion. References to generic type AX<E,F> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type AX needs unchecked conversion to conform to AX<AX<T,T>,U>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7582172ab962d713556d729dde0b663e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tpublic void test059()", "signatureAfterChange": "  \tpublic void test059()", "diff": ["-\t\t\t\"    2  istore_0\\n\" + ", "+\t\t\t\"    2  istore_0 [i]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ac3fffa8429ea62c78c96190b5a0f74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void test044()", "signatureAfterChange": " public void test044()", "diff": ["-\t\t\"     1  invokevirtual #21 <Method [Ljava/lang/String;.clone()Ljava/lang/Object;>\\n\";", "+\t\t\"     1  invokevirtual [Ljava/lang/String;.clone()Ljava/lang/Object; [21]\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f559a17d901ccea1d77dec881a6af0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "9bf79c7ef87f9bb276696a699c24ee7886d82109", "commitAfterChange": "de2cee4ff7b76fb31a04f1c1b724977d8ef8d10e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testMethod1() throws JavaModelException", "signatureAfterChange": " \tpublic void testMethod1() throws JavaModelException", "diff": ["-\t */", "-\tpublic void testMethod1() throws JavaModelException {", "-\t\tASTNode node = buildAST(", "-\t\t\t\"public class X<K, V> {\\n\" +", "-\t\t\t\"  /*start*/void foo(int i, Object o, java.lang.String s, Class[] c, X<K, V> x) {\\n\" +", "-\t\t\t\"  }/*end*/\\n\" +", "-\t\t\t\"}\"", "-\t\t);", "-\t\tIBinding binding = ((MethodDeclaration) node).resolveBinding();", "-\t\tassertNotNull(\"No binding\", binding);", "-\t\tIJavaElement element = binding.getJavaElement();", "-\t\tassertElementEquals(", "-\t\t\t\"Unexpected Java element\",", "-\t\t\t\"foo(int, Object, java.lang.String, Class[], X<K,V>) [in X [in [Working copy] X.java [in <default> [in <project root> [in P]]]]]\",", "-\t\t\telement", "-\t\t);", "-\t\tassertTrue(\"Element should exist\", element.exists());", "-\t}", "+\tpublic void testMethod1() throws JavaModelException {", "+\t\tASTNode node = buildAST(", "+\t\t\t\"public class X<K, V> {\\n\" +", "+\t\t\t\"  /*start*/void foo(int i, Object o, java.lang.String s, Class[] c, X<K, V> x) {\\n\" +", "+\t\t\t\"  }/*end*/\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tIBinding binding = ((MethodDeclaration) node).resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tIJavaElement element = binding.getJavaElement();", "+\t\tassertElementEquals(", "+\t\t\t\"Unexpected Java element\",", "+\t\t\t\"foo(int, Object, java.lang.String, Class[], X<K,V>) [in X [in [Working copy] X.java [in <default> [in src [in P]]]]]\",", "+\t\t\telement", "+\t\t);", "+\t\tassertTrue(\"Element should exist\", element.exists());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d1d4b1438957adf9274b706c8ad27e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "9bf79c7ef87f9bb276696a699c24ee7886d82109", "commitAfterChange": "de2cee4ff7b76fb31a04f1c1b724977d8ef8d10e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testMethod2() throws JavaModelException", "signatureAfterChange": " \tpublic void testMethod2() throws JavaModelException", "diff": ["-\t */", "-\tpublic void testMethod2() throws JavaModelException {", "-\t\tASTNode node = buildAST(", "-\t\t\t\"public class X<K, V> {\\n\" +", "-\t\t\t\"  /*start*/void foo() {\\n\" +", "-\t\t\t\"  }/*end*/\\n\" +", "-\t\t\t\"}\"", "-\t\t);", "-\t\tIBinding binding = ((MethodDeclaration) node).resolveBinding();", "-\t\tassertNotNull(\"No binding\", binding);", "-\t\tIJavaElement element = binding.getJavaElement();", "-\t\tassertElementEquals(", "-\t\t\t\"Unexpected Java element\",", "-\t\t\t\"foo() [in X [in [Working copy] X.java [in <default> [in <project root> [in P]]]]]\",", "-\t\t\telement", "-\t\t);", "-\t\tassertTrue(\"Element should exist\", element.exists());", "-\t}", "+\t */", "+\tpublic void testMethod2() throws JavaModelException {", "+\t\tASTNode node = buildAST(", "+\t\t\t\"public class X<K, V> {\\n\" +", "+\t\t\t\"  /*start*/void foo() {\\n\" +", "+\t\t\t\"  }/*end*/\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tIBinding binding = ((MethodDeclaration) node).resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tIJavaElement element = binding.getJavaElement();", "+\t\tassertElementEquals(", "+\t\t\t\"Unexpected Java element\",", "+\t\t\t\"foo() [in X [in [Working copy] X.java [in <default> [in src [in P]]]]]\",", "+\t\t\telement", "+\t\t);", "+\t\tassertTrue(\"Element should exist\", element.exists());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b294ce003045ee5d7980e59fdfbab92b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \t \tpublic void test049()", "signatureAfterChange": " \t \tpublic void test049()", "diff": ["-\t\t\t\"    1  istore_0\\n\" + ", "+\t\t\t\"    1  istore_0 [i]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d10c54521ff9773f8ba586804ea2f938", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test008()", "signatureAfterChange": " \tpublic void test008()", "diff": ["-\t\t\t\"    1  istore_1\\n\" + ", "+\t\t\t\"    1  istore_1 [b]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bb7413cc6c4bd0d9f14db91f3e29e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "9bf79c7ef87f9bb276696a699c24ee7886d82109", "commitAfterChange": "de2cee4ff7b76fb31a04f1c1b724977d8ef8d10e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testMemberType() throws JavaModelException", "signatureAfterChange": " \tpublic void testMemberType() throws JavaModelException", "diff": ["-\t\t\t\"Y [in X [in [Working copy] X.java [in <default> [in <project root> [in P]]]]]\",", "-\t\t\telement", "-\t\t);", "-\t\tassertTrue(\"Element should exist\", element.exists());", "-\t}", "+\t\t\t\"Y [in X [in [Working copy] X.java [in <default> [in src [in P]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8dcdd2e452ffe5c31998011a910a936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "9bf79c7ef87f9bb276696a699c24ee7886d82109", "commitAfterChange": "de2cee4ff7b76fb31a04f1c1b724977d8ef8d10e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void testLocalType() throws JavaModelException", "signatureAfterChange": " \tpublic void testLocalType() throws JavaModelException", "diff": ["-\t\t\t\"Y [in foo() [in X [in [Working copy] X.java [in <default> [in <project root> [in P]]]]]]\",", "+\t\t\t\"Y [in foo() [in X [in [Working copy] X.java [in <default> [in src [in P]]]]]]\","]}], "num": 10495}