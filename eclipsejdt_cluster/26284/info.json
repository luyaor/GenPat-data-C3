{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1a152776307617f86e8ea587fa9330c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f0ed15c37116b849c6bb544594ac63c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTStructuralPropertyTest.java", "commitBeforeChange": "6a514a348b687707873fde0f6184e6b09d1607ee", "commitAfterChange": "15cb47257592351618c0f415edc117a6b315a803", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testCreateInstance()", "signatureAfterChange": " \tpublic void testCreateInstance()", "diff": ["+\t\tint maxNodeType;", "+\t\tswitch (this.ast.apiLevel()) {", "+\t\t\tcase AST.JLS2:", "+\t\t\t\tmaxNodeType = 69;", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS3:", "+\t\t\t\tmaxNodeType = 83;", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS4:", "+\t\t\t\tmaxNodeType = 84;", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS8:", "+\t\t\t\tmaxNodeType = 87;", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tfail();", "+\t\t\t\treturn;", "+\t\t}", "-\t\t\t\t\tif (this.ast.apiLevel() == AST.JLS2) {", "-\t\t\t\t\t\tassertTrue((nodeType >= 1) && (nodeType <= 69));", "-\t\t\t\t\t} else if (this.ast.apiLevel() == AST.JLS3) {", "-\t\t\t\t\t\tassertTrue((nodeType >= 1) && (nodeType <= 83));", "-\t\t\t\t\t} else if (this.ast.apiLevel() == AST.JLS4) {", "-\t\t\t\t\t\tassertTrue((nodeType >= 1) && (nodeType <= 84));", "-\t\t\t\t\t}", "+\t\t\t\t\tassertTrue(nodeType <= maxNodeType);", "-\t\t\t\t\tif (this.ast.apiLevel() == AST.JLS2) {", "-\t\t\t\t\t\tassertTrue((nodeType < 1) || (nodeType > 69));", "-\t\t\t\t\t} else if (this.ast.apiLevel() == AST.JLS3) {", "-\t\t\t\t\t\tassertTrue((nodeType < 1) || (nodeType > 83));", "-\t\t\t\t\t} else if (this.ast.apiLevel() == AST.JLS4) {", "-\t\t\t\t\t\tassertTrue((nodeType < 1) || (nodeType > 84));", "-\t\t\t\t\t}", "+\t\t\t\t\tassertTrue((nodeType < 1) || (nodeType > maxNodeType));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1d581c4389604c837ffdbd0ddd7085", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "7511ce8ac2a616c416b32731f4d10587027e3f25", "commitAfterChange": "71d14c28198258a4d6a7c5df6309a1aa1f387bf3", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "\t\t  \tpublic void testStringLiteralUnicode()", "signatureAfterChange": "\t\t  \tpublic void testStringLiteralUnicode()", "diff": ["-\t\tAST localAst;", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tAST localAst = AST.newAST(ast.apiLevel());", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tlocalAst = AST.newAST(ast.apiLevel());", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tlocalAst = AST.newAST(ast.apiLevel());", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tlocalAst = AST.newAST(ast.apiLevel());", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tlocalAst = AST.newAST(ast.apiLevel());", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tlocalAst = AST.newAST(ast.apiLevel());", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tlocalAst = AST.newAST(ast.apiLevel());", "-\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "-\t\t\tlocalAst = AST.newAST2();", "-\t\t} else {", "-\t\t\tlocalAst = AST.newAST3();", "-\t\t}", "+\t\tlocalAst = AST.newAST(ast.apiLevel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e14c81803cca115b2ed611b11462dfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 115, "signatureBeforeChange": "\t\t  \tpublic void testStringLiteralUnicode()", "signatureAfterChange": "\t\t  \tpublic void testStringLiteralUnicode()", "diff": ["-\t\tAST localAst = new AST();", "+\t\tAST localAst;", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}", "-\t\tlocalAst = new AST();", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}", "-\t\tlocalAst = new AST();", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}", "-\t\tlocalAst = new AST();", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}", "-\t\tlocalAst = new AST();", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}", "-\t\tlocalAst = new AST();", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}", "-\t\tlocalAst = new AST();", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}", "-\t\tlocalAst = new AST();", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tlocalAst = AST.newAST2();", "+\t\t} else {", "+\t\t\tlocalAst = AST.newAST3();", "+\t\t}"]}], "num": 26284}