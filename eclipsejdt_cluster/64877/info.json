{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1ecded46bb2c54279bc9232cb2be8fe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2868858319b5d6da5f3addf923f74c72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "6bb2fb68f843d2f213112ae456fa0a32c38636c9", "commitAfterChange": "166f11d853629cb3c4eb3b0e30b0fc7c18124b91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "signatureAfterChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "diff": ["+\r", "+\tboolean classPathIsIncorrect = false;\r", "+\t\t\tcase ProblemIrritants.IsClassPathCorrect :\r", "+\t\t\t\tremoveProblemsFor(javaBuilder.currentProject); // make this the only problem for this project\r", "+\t\t\t\tclassPathIsIncorrect = true;\r", "+\t\t\t\tbreak;\r", "+\tif (classPathIsIncorrect)\r", "+\t\tthrow new IncompleteClassPathException();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a7ef6e472cf59b5fc0e948d0af5d06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "de65be5a1abe4097e389297efccea4b0ab9d85ba", "commitAfterChange": "b75c4b6d1f5233838746ca348c927bfe9d79a31e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["+\t\t\tboolean hasConstants = false;", "+\t\t\t\t\t\thasConstants = true;", "+\t\t\t\t\t\tif (fieldDeclaration.initialization instanceof QualifiedAllocationExpression) {", "+\t\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tthis.scribe.printNewLine();\t\t\t\t", "+\t\t\t\t}\t\t\t", "+\t\t\tif (hasConstants) {", "+\t\t\t\tthis.scribe.printNewLine();\t", "+\t\t\t}"]}], "num": 64877}