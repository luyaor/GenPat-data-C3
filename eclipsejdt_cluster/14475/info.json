{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5657fbfab4acbef9e81a32e0541e5f5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3990eef2605b29fbe66394e75ab571d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "db260d93667acab111e64138469df12a566a7b90", "commitAfterChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " protected void consumeOpenBlock()", "signatureAfterChange": " protected void consumeOpenBlock()", "diff": ["-\ttry {", "-\t\tthis.realBlockStack[++this.realBlockPtr] = 0;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\t//this.realBlockPtr is correct ", "-\t\tint oldStackLength = this.realBlockStack.length;", "-\t\tint oldStack[] = this.realBlockStack;", "-\t\tthis.realBlockStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, this.realBlockStack, 0, oldStackLength);", "-\t\tthis.realBlockStack[this.realBlockPtr] = 0;", "+\tint stackLength = this.realBlockStack.length;", "+\tif (++this.realBlockPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.realBlockStack, 0,", "+\t\t\tthis.realBlockStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.realBlockStack[this.realBlockPtr] = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94492d4ad881905e0f04bf05e9afd11d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "db260d93667acab111e64138469df12a566a7b90", "commitAfterChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " protected void pushOnRealBlockStack(int i)", "signatureAfterChange": " protected void pushOnRealBlockStack(int i)", "diff": ["-\ttry {", "-\t\tthis.realBlockStack[++this.realBlockPtr] = i;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\t//this.realBlockPtr is correct ", "-\t\tint oldStackLength = this.realBlockStack.length;", "-\t\tint oldStack[] = this.realBlockStack;", "-\t\tthis.realBlockStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, this.realBlockStack, 0, oldStackLength);", "-\t\tthis.realBlockStack[this.realBlockPtr] = i;", "+\tint stackLength = this.realBlockStack.length;", "+\tif (++this.realBlockPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.realBlockStack, 0,", "+\t\t\tthis.realBlockStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.realBlockStack[this.realBlockPtr] = i;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db44eb24ca5df661674ca2b2ff0ce47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "commitAfterChange": "285e33b7c5da84e3ca1755cdb83ba66c19c28c11", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void consumeOpenBlock()", "signatureAfterChange": " protected void consumeOpenBlock()", "diff": ["-\ttry {", "-\t\tblockStarts[realBlockPtr] = scanner.startPosition;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\t//realBlockPtr is correct ", "-\t\tint oldStackLength = blockStarts.length;", "-\t\tint oldStack[] = blockStarts;", "-\t\tblockStarts = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, blockStarts, 0, oldStackLength);", "-\t\tblockStarts[realBlockPtr] = scanner.startPosition;", "+\tint stackLength = this.blockStarts.length;", "+\tif (this.realBlockPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.blockStarts, 0,", "+\t\t\tthis.blockStarts = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.blockStarts[this.realBlockPtr] = scanner.startPosition;"]}], "num": 14475}