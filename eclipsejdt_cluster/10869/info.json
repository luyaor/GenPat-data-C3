{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9430d8de8dbd3dd3b6816d986f090c42", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2296da74dfc3c5984d0027c46c78b2c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "fe46c42d584fc9df798276778c11a2ce2f79d8c4", "commitAfterChange": "8904ea4393baa4ec97ffdacde82d6f35bb8add7c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic DefaultContainerInitializer(String[] values)", "signatureAfterChange": " \tpublic DefaultContainerInitializer(String[] values)", "diff": ["-\t\t\t\tnew IClasspathContainer() {", "-\t\t\t\t\tpublic IClasspathEntry[] getClasspathEntries() {", "-\t\t\t\t\t\tint length = libPaths.length;", "-\t\t\t\t\t\tIClasspathEntry[] entries = new IClasspathEntry[length];", "-\t\t\t\t\t\tfor (int j = 0; j < length; j++) {", "-\t\t\t\t\t\t    IPath path = new Path(new String(libPaths[j]));", "-\t\t\t\t\t\t    if (path.segmentCount() == 1) {", "-\t\t\t\t\t\t        entries[j] = JavaCore.newProjectEntry(path);", "-\t\t\t\t\t\t    } else {", "-\t\t\t\t\t\t\t\tentries[j] = JavaCore.newLibraryEntry(path, null, null);", "-\t\t\t\t\t\t    }", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn entries;", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic String getDescription() {", "-\t\t\t\t\t\treturn \"Test container\";", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic int getKind() {", "-\t\t\t\t\t\treturn IClasspathContainer.K_APPLICATION;", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic IPath getPath() {", "-\t\t\t\t\t\treturn new Path(\"org.eclipse.jdt.core.tests.model.TEST_CONTAINER\");", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\tnewContainer(libPaths)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baedc3f742f41baf708e7b06327e6075", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "fe46c42d584fc9df798276778c11a2ce2f79d8c4", "commitAfterChange": "8904ea4393baa4ec97ffdacde82d6f35bb8add7c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t\t\t\tpublic IClasspathEntry[] getClasspathEntries()", "signatureAfterChange": " \t\tpublic IClasspathEntry[] getClasspathEntries()", "diff": ["+\t\t}", "+\t\tpublic IClasspathEntry[] getClasspathEntries() {", "+\t\t\tint length = this.libPaths.length;", "+\t\t\tIClasspathEntry[] entries = new IClasspathEntry[length];", "+\t\t\tfor (int j = 0; j < length; j++) {", "+\t\t\t    IPath path = new Path(new String(this.libPaths[j]));", "+\t\t\t    if (path.segmentCount() == 1) {", "+\t\t\t        entries[j] = JavaCore.newProjectEntry(path);", "+\t\t\t    } else {", "+\t\t\t\t\tentries[j] = JavaCore.newLibraryEntry(path, null, null);", "+\t\t\t    }", "+\t\t\t}", "+\t\t\treturn entries;", "+\t\t}", "-\t\t\t\tnew IClasspathContainer() {", "-\t\t\t\t\tpublic IClasspathEntry[] getClasspathEntries() {", "-\t\t\t\t\t\tint length = libPaths.length;", "-\t\t\t\t\t\tIClasspathEntry[] entries = new IClasspathEntry[length];", "-\t\t\t\t\t\tfor (int j = 0; j < length; j++) {", "-\t\t\t\t\t\t    IPath path = new Path(new String(libPaths[j]));", "-\t\t\t\t\t\t    if (path.segmentCount() == 1) {", "-\t\t\t\t\t\t        entries[j] = JavaCore.newProjectEntry(path);", "-\t\t\t\t\t\t    } else {", "-\t\t\t\t\t\t\t\tentries[j] = JavaCore.newLibraryEntry(path, null, null);", "-\t\t\t\t\t\t    }", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn entries;", "-\t\t\t\t\t}"]}], "num": 10869}