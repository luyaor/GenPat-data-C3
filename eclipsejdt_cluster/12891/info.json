{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a25c58a3e71ecf86745d8c0f8536d240", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd9e99138bf28e8c4a8b2ce03fdf8ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "75fd26922e4c1a3951587500ef0d4c4aec9b93ba", "commitAfterChange": "ec933200149b0beb2aa7f1482e62f6a573c5bd61", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void recordSuppressWarnings(Scope scope, int startSuppresss, int endSuppress, boolean isSuppressingWarnings)", "signatureAfterChange": " \t \tpublic void recordSuppressWarnings(Scope scope, int startSuppresss, int endSuppress, boolean isSuppressingWarnings)", "diff": ["-\t\t\t\t\t\t\t\t\tsuppressWarningIrritants |= irritant;", "-\t\t\t\t\t\t\t\t\tif (~suppressWarningIrritants == 0) break pairLoop;", "+\t\t\t\t\t\t\t\t\tif ((suppressWarningIrritants & irritant) == irritant) {", "+\t\t\t\t\t\t\t\t\t\tscope.problemReporter().unusedWarningToken(inits[j]);", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tsuppressWarningIrritants |= irritant;", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (~suppressWarningIrritants == 0) break pairLoop;", "-\t\t\tscope.referenceCompilationUnit().compilationResult.recordSuppressWarnings(suppressWarningIrritants, startSuppresss, endSuppress);", "+\t\t\tscope.referenceCompilationUnit().recordSuppressWarnings(suppressWarningIrritants, this, startSuppresss, endSuppress);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a36920cb0bbc1e2c2346ca2bf4550ed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "dfcfcaedc8372b070ca684decc611420969812d4", "commitAfterChange": "9bef32a39642c351ad08557498e432fc6a29aeb4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void recordSuppressWarnings(Scope scope, int startSuppresss, int endSuppress, boolean isSuppressingWarnings)", "signatureAfterChange": " \t \tpublic void recordSuppressWarnings(Scope scope, int startSuppresss, int endSuppress, boolean isSuppressingWarnings)", "diff": ["-\t\t\t\t\t\t\t\tlong irritant = CompilerOptions.warningTokenToIrritant(cst.stringValue());", "-\t\t\t\t\t\t\t\tif (irritant != 0) {", "-\t\t\t\t\t\t\t\t\tif ((suppressWarningIrritants & irritant) == irritant) {", "+\t\t\t\t\t\t\t\tlong irritants = CompilerOptions.warningTokenToIrritants(cst.stringValue());", "+\t\t\t\t\t\t\t\tif (irritants != 0) {", "+\t\t\t\t\t\t\t\t\tif ((suppressWarningIrritants & irritants) == irritants) {", "-\t\t\t\t\t\t\t\t\t\tsuppressWarningIrritants |= irritant;", "+\t\t\t\t\t\t\t\t\t\tsuppressWarningIrritants |= irritants;", "-\t\t\t\t\t\tlong irritant = CompilerOptions.warningTokenToIrritant(cst.stringValue());", "-\t\t\t\t\t\tif (irritant != 0) {", "-\t\t\t\t\t\t\tsuppressWarningIrritants |= irritant;", "+\t\t\t\t\t\tlong irritants = CompilerOptions.warningTokenToIrritants(cst.stringValue());", "+\t\t\t\t\t\tif (irritants != 0) {", "+\t\t\t\t\t\t\tsuppressWarningIrritants |= irritants;"]}], "num": 12891}