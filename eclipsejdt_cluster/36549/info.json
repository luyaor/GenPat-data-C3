{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99bb53e11b316fbad2391981cfafc19e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0bef7da13efc798974f8ea220e0446", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "d3120b46bb4300cffeb8a57774ffc0473ab3baac", "commitAfterChange": "f255b33684824171cf2bcf3894d3b5e52fa919b0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate ICompilationUnit[] getWorkingCopies(IJavaElement element)", "signatureAfterChange": " \tprivate ICompilationUnit[] getWorkingCopies(IJavaElement element)", "diff": ["-\t\t\t\tICompilationUnit[] copies = getWorkingCopies();", "-\t\t\t\tint length = copies == null ? 0 : copies.length;", "-\t\t\t\tif (length > 0) {", "-\t\t\t\t\tICompilationUnit[] newWorkingCopies = new ICompilationUnit[length+1];", "-\t\t\t\t\tSystem.arraycopy(copies, 0, newWorkingCopies, 0, length);", "-\t\t\t\t\tnewWorkingCopies[length] = cu;", "-\t\t\t\t\treturn newWorkingCopies;", "-\t\t\t\t} ", "-\t\t\t\treturn new ICompilationUnit[] {cu};", "+\t\t\t\treturn new ICompilationUnit[] { cu };", "+\t\t} else if (element instanceof ICompilationUnit) {", "+\t\t\treturn new ICompilationUnit[] { (ICompilationUnit) element };", "-\t\treturn getWorkingCopies();", "+\t\t", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b437823a397b35e302f21a4dcb4993ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "b1f709bd1fd47a690112f71bf976691c90f21c2e", "commitAfterChange": "f6e3c703c3b20345b17d160d2135ad84d2da0437", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprotected void seekTypesInSourcePackage( \t\t\tString name,  \t\t\tIPackageFragment pkg,  \t\t\tint firstDot,  \t\t\tboolean partialMatch,  \t\t\tString topLevelTypeName,  \t\t\tint acceptFlags, \t\t\tIJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInSourcePackage( \t\t\tString name,  \t\t\tIPackageFragment pkg,  \t\t\tint firstDot,  \t\t\tboolean partialMatch,  \t\t\tString topLevelTypeName,  \t\t\tint acceptFlags, \t\t\tIJavaElementRequestor requestor)", "diff": ["-\t\t\t\t\tICompilationUnit[] compilationUnits = pkg.getCompilationUnits();", "+\t\t\t\t\tIJavaElement[] compilationUnits = pkg.getChildren();", "-\t\t\t\t\t\tICompilationUnit cu = compilationUnits[i];", "+\t\t\t\t\t\tIJavaElement cu = compilationUnits[i];", "-\t\t\t\t\t\tIType type = cu.getType(topLevelTypeName);", "+\t\t\t\t\t\tIType type = ((ICompilationUnit) cu).getType(topLevelTypeName);", "-\t\t\t\t\tICompilationUnit[] compilationUnits = pkg.getCompilationUnits();", "+\t\t\t\t\tIJavaElement[] compilationUnits = pkg.getChildren();", "-\t\t\t\t\t\tICompilationUnit cu = compilationUnits[i];", "+\t\t\t\t\t\tIJavaElement cu = compilationUnits[i];", "-\t\t\t\t\t\t\tIType[] types = cu.getTypes();", "+\t\t\t\t\t\t\tIType[] types = ((ICompilationUnit) cu).getTypes();"]}], "num": 36549}