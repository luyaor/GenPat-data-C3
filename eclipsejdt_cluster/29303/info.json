{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "277a5c9b3e2a00d9f44eb2f85aaf5ef8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334e49acbfc2f48daffe41668e6a1bf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0751ac39c00c09c85644cc895a72b784f1c58a10", "commitAfterChange": "9b2482af5a0c03be9db45cc864fbf9313fd6c832", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "signatureAfterChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "diff": ["-\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\tSystem.out.println(\"JAVA MODEL - Canonicalizing \" + externalPath.toString()); //$NON-NLS-1$\r", "-\t\t}\r", "+//\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\tSystem.out.println(\"JAVA MODEL - Canonicalizing \" + externalPath.toString()); //$NON-NLS-1$\r", "+//\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (file system is case sensitive)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (file system is case sensitive)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (member of workspace)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (member of workspace)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (IOException)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (IOException)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is empty)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is empty)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is \" + canonicalPath.toString() + \")\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\t\t}\r", "+//\t\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is \" + canonicalPath.toString() + \")\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+//\t\t\t\t}\r", "-\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is \" + result.toString()); //$NON-NLS-1$\r", "-\t\t}\r", "+//\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is \" + result.toString()); //$NON-NLS-1$\r", "+//\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfbce253a3ba7e80071547ebba05d36b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate int parseCheck(int stck[], int stack_top, int first_token, int buffer_position)", "signatureAfterChange": " \tprivate int parseCheck(int stck[], int stack_top, int first_token, int buffer_position)", "diff": ["+\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\tSystem.out.println(tempStackTop);", "+\t\t\t}", "+\t\t\t\t// same loop as 'process_non_terminal'", "+\t\t\t\t\t", "+\t\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\t\tSystem.out.print(\" (\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(-(Parser.rhs[act]-1));", "+\t\t\t\t\t\tSystem.out.print(\") [max:\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\t\t\tSystem.out.print(\"]\\tprocess_non_terminal\\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(act);", "+\t\t\t\t\t\tSystem.out.print(\"\\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(Parser.name[Parser.non_terminal_index[Parser.lhs[act]]]);", "+\t\t\t\t\t\tSystem.out.println();", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\tif(Parser.rules_compliance[act] > this.options.sourceLevel) {", "+\t\t\t\t\t \treturn 0;", "+\t\t\t\t\t}", "+\t\t\t", "+\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\tSystem.out.println(tempStackTop);", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\tSystem.out.print(tempStackTop + 1);", "+\t\t\t\tSystem.out.print(\" (+1) [max:\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\tSystem.out.print(\"]\\tprocess_terminal    \\t\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(ct);", "+\t\t\t\tSystem.out.print(\"\\t\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(Parser.name[Parser.terminal_index[ct]]);", "+\t\t\t\tSystem.out.println();", "+\t\t\t}", "+\t\t\t", "+\t\t\t\t", "+\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\tSystem.out.print(\" (-1) [max:\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\t\tSystem.out.print(\"]\\treduce\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.println();", "+\t\t\t\t}", "-\t\t\t\t\t act -= ERROR_ACTION;", "+\t\t\t\t\tact -= ERROR_ACTION;", "+\t\t\t\t\t", "+\t\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\t\tSystem.out.print(\"\\tshift reduce\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.println();", "+\t\t\t\t\t}", "+\t\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\t\tSystem.out.println(\"\\tshift\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t// same loop as first token initialization", "+\t\t\t\t", "+\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\tSystem.out.print(\" (\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(-(Parser.rhs[act]-1));", "+\t\t\t\t\tSystem.out.print(\") [max:\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\t\tSystem.out.print(\"]\\tprocess_non_terminal\\t\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(act);", "+\t\t\t\t\tSystem.out.print(\"\\t\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(Parser.name[Parser.non_terminal_index[Parser.lhs[act]]]);", "+\t\t\t\t\tSystem.out.println();", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tif(act <= NUM_RULES) {", "+\t\t\t\t\tif(Parser.rules_compliance[act] > this.options.sourceLevel) {", "+\t\t\t\t\t \treturn 0;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 29303}