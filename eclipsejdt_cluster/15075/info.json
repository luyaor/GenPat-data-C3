{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dce9cc1f35457ac5db5250f84551b8a7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d70f91d2d15e7817ba6e94885918cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \t \tboolean hasBeenReached(int act, int token)", "signatureAfterChange": " \t \tboolean hasBeenReached(int act, int token)", "diff": ["-\t\t\t\tParser.name[Parser.terminal_index[token]]);", "+\t\t\t\t\tParser.name[Parser.terminal_index[token]]);", "-\t\t\tfor (int i = 0, length = this.follow.length; i < length; i++)", "+\t\t\tfinal int length = this.follow.length;", "+\t\t\tif (length == 0)", "+\t\t\t\treturn true;", "+\t\t\tfor (int i = 0; i < length; i++)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4fe84a2b98ebfaa659db3ee21e9890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "56830c17e66457aea8be20b8f54387cc72e1cce5", "commitAfterChange": "eb1ad230c9c491b2e0477a9cf9abc1e6e195f535", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void traverse( \t\tIAbstractSyntaxTreeVisitor visitor, \t\tCompilationUnitScope scope)", "signatureAfterChange": "  \tpublic void traverse( \t\tIAbstractSyntaxTreeVisitor visitor, \t\tCompilationUnitScope scope)", "diff": ["+\t\t\t\tif (currentPackage != null) {", "+\t\t\t\t\tcurrentPackage.traverse(visitor, scope);", "+\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < importLength; i++)", "+\t\t\t\t\tfor (int i = 0; i < importLength; i++) {", "+\t\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < typesLength; i++)", "+\t\t\t\t\tfor (int i = 0; i < typesLength; i++) {", "+\t\t\t\t\t}"]}], "num": 15075}