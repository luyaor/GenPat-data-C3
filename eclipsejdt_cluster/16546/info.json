{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b17f525c89e1d5fd2cfaacd865bb081f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a7e7222fadc1e47d6b940575a118504", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t \t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(lastFieldBinding)) {", "+\t \t\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(lastFieldBinding)) {", "-\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(lastFieldBinding)", "+\t\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(lastFieldBinding)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ae32d2276967919687274674c3eccf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tbits |= OnlyValueRequiredMASK;", "+\t\tbits |= OnlyValueRequired;", "-\t\t\t\tif ((bits & ValueForReturnMASK) != 0){", "+\t\t\t\tif ((bits & IsReturnedValue) != 0){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aa81290695b88c93b24fdb338f4be8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "c0e1e1c2d0d55cd15c5294fbd89785d2ab8aa5fc", "commitAfterChange": "985d711c4d0025a5a5339070a94d4c12c56e272f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["-\t\t    \t\tthis.typeArguments[i] = originalVariables[i].erasure();", "+\t\t    \t\tthis.typeArguments[i] = originalVariables[i].upperBound();", "-\t\t    \t\tthis.typeArguments[i] = originalVariables[i].erasure();", "+\t\t    \t\tthis.typeArguments[i] = originalVariables[i].upperBound();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4edbc64f8202179c182da668a001e3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Util.java", "commitBeforeChange": "4a181894176f3a1eccc3e35147ddca845e353389", "commitAfterChange": "546372dd9318b0aed3b01864163b2d25dd30110a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic static final boolean isExcluded(IJavaElement element)", "signatureAfterChange": " \tpublic static final boolean isExcluded(IJavaElement element)", "diff": ["-\t\t\t\treturn resource != null && Util.isExcluded(resource, root.getExclusionPatterns());", "+\t\t\t\treturn resource != null && Util.isExcluded(resource, root.fullExclusionPatternChars());", "-\t\t\t\tif (resource != null && Util.isExcluded(resource, root.getExclusionPatterns()))", "+\t\t\t\tif (resource != null && Util.isExcluded(resource, root.fullExclusionPatternChars()))"]}], "num": 16546}