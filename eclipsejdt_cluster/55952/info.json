{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3244424f1339488f7c0f7b3e06bc627", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec0c1092e5909e2cad695b7a1358c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\t\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, elementType, expression);", "+\t\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, elementType, expression, null);", "-\t\t\t\tscope.problemReporter().typeMismatchError(this.resolvedType, expectedType, this);", "+\t\t\t\tscope.problemReporter().typeMismatchError(this.resolvedType, expectedType, this, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d55639c104458f9b10b74174484fdad4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\tpublic TypeBinding resolveTypeExpecting(", "-\t\tBlockScope scope,", "-\t\tTypeBinding expectedType) {", "+\tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType) {", "-\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this);", "+\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this, null);"]}], "num": 55952}