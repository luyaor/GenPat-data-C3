{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cd60277c7d9eaa359bb473b4973509b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "637607cff983de2f57fb2714a53dc33b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "279ae109d40885f5a16be9af1d602322e1395a9b", "commitAfterChange": "db786a60645f0738c3e4c93c03142c921978dbe9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException", "signatureAfterChange": "  \tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException", "diff": ["+\t\t\t// assemble full annotatedSignature:", "+\t\t\tswitch (updatePosition) {", "+\t\t\t\tcase POSITION_FULL_SIGNATURE:", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase POSITION_RETURN_TYPE:", "+\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, originalSignature, mergeStrategy);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\t// parameter at updatePosition", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8635952478029e76155b39d002cc78aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "4b71ef3be11b1e52d22d795d03898285bb112516", "commitAfterChange": "9966baba46edc3df548fabd09b133cadc0093ca6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void tagAsHavingErrors()", "signatureAfterChange": "  \tpublic void tagAsHavingErrors()", "diff": ["+\t\tScope parent = this.scope.parent;", "+\t\twhile (parent != null) {", "+\t\t\tswitch(parent.kind) {", "+\t\t\t\tcase Scope.CLASS_SCOPE:", "+\t\t\t\tcase Scope.METHOD_SCOPE:", "+\t\t\t\t\tparent.referenceContext().tagAsHavingErrors();", "+\t\t\t\t\treturn;", "+\t\t\t\tdefault:", "+\t\t\t\t\tparent = parent.parent;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}"]}], "num": 13721}