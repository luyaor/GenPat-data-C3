{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e54d91daec20e96d336d9e879cf9ea7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df18fce37e8972b0c0f76ff3a9ea0a46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "8a3b59860042c242d4e16ee3f50746d591d948f0", "commitAfterChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "diff": ["+\tif (isInterface() && (methodModifiers & ClassFileConstants.AccAbstract) == 0) {", "+\t\t// see https://bugs.eclipse.org/388954", "+\t\tif (sourceLevel >= ClassFileConstants.JDK1_8)", "+\t\t\tmethodModifiers |= ExtraCompilerModifiers.AccDefaultMethod;", "+\t\telse", "+\t\t\tmethodModifiers |= ClassFileConstants.AccAbstract;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f31bc5fe62b7194e7bb837bd972279d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompilerOptions(Map settings)", "signatureAfterChange": " \tpublic CompilerOptions(Map settings)", "diff": ["-//\t\t\t\t\t\t// ignore unsupported encoding", "+\t\t\t\t\t\t// ignore unsupported encoding", "+\t\t\t\tcontinue;", "+\t\t\t} ", "+\t\t\t// Report finally block not completing normally", "+\t\t\tif(optionID.equals(OPTION_ReportFinallyBlockNotCompletingNormally)){", "+\t\t\t\tupdateSeverity(FinallyBlockNotCompleting, optionValue);", "+\t\t\t\tcontinue;", "+\t\t\t} ", "+\t\t\t// Report unused declared thrown exception", "+\t\t\tif(optionID.equals(OPTION_ReportUnusedDeclaredThrownException)){", "+\t\t\t\tupdateSeverity(UnusedDeclaredThrownException, optionValue);", "+\t\t\t\tcontinue;", "+\t\t\t} ", "+\t\t\t// Report unqualified field access", "+\t\t\tif(optionID.equals(OPTION_ReportUnqualifiedFieldAccess)){", "+\t\t\t\tupdateSeverity(UnqualifiedFieldAccess, optionValue);"]}], "num": 71011}