{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d846be8505a0ecbb09caa08e3106e902", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55e2ba583dbd46d566ccc97d2016c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "commitAfterChange": "c3fe3a5d67fbf0c540d6fc63f233f6806516af9c", "methodNumberBeforeChange": 386, "methodNumberAfterChange": 386, "signatureBeforeChange": " \tpublic void test384()", "signatureAfterChange": " \tpublic void test384()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "-\t\t\t\"\tClass<? extends String> foo() { return null; }\\n\" + ", "-\t\t\t\"\t                        ^^^^^\\n\" + ", "-\t\t\t\"The method foo() of type X should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tClass<? extends String>[] foo2() { return null; }\\n\" + ", "-\t\t\t\"\t                          ^^^^^^\\n\" + ", "-\t\t\t\"The method foo2() of type X should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1c384e044ce44993984029f3be101c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void test0129()", "signatureAfterChange": " \tpublic void test0129()", "diff": ["-\t\t\t\"3. WARNING in X.java (at line 14)\\n\" + ", "-\t\t\t\"\tpublic Class <? extends Object> getClass() {\\n\" + ", "-\t\t\t\"\t                                ^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method getClass() of type XY should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic Class <? extends Object> getClass() {\\n\" + ", "+\t\t\t\"\t                                ^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method getClass() of type XY should be tagged with @Override since it actually overrides a superclass method\\n\" + "]}], "num": 26550}