{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16e36adf011d3a22734c467e7f79a6c1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa0321a7868c105688fee9e86c40690c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "424b9c711eb8f066b325841662effb171f3ae4ef", "commitAfterChange": "4d19416746402b8fbbfd02c13772658da70a345a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tIClasspathEntry entry,\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean computeBuilderRoots)", "signatureAfterChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tIClasspathEntry entry,\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean retrieveExportedRoots)", "diff": ["-\t\tboolean computeBuilderRoots) {\r", "+\t\tboolean retrieveExportedRoots) {\r", "-\t\t\t\tif (computeBuilderRoots) return;\r", "+\t\t\t\tif (!retrieveExportedRoots) return;\r", "-\t\t\t\t\tif (computeBuilderRoots){\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tIResource output = workspaceRoot.findMember(requiredProject.getOutputLocation());\r", "-\t\t\t\t\t\t\tif (output != null && output.exists()){\r", "-\t\t\t\t\t\t\t\tPackageFragmentRoot binaryOutputRoot =\r", "-\t\t\t\t\t\t\t\t\t(PackageFragmentRoot) requiredProject.getPackageFragmentRoot(output);\r", "-\t\t\t\t\t\t\t\tbinaryOutputRoot.setOccurrenceCount(binaryOutputRoot.getOccurrenceCount() + 1);\r", "-\t\t\t\t\t\t\t\t((PackageFragmentRootInfo) binaryOutputRoot.getElementInfo()).setRootKind(\r", "-\t\t\t\t\t\t\t\t\tIPackageFragmentRoot.K_BINARY);\r", "-\t\t\t\t\t\t\t\tbinaryOutputRoot.refreshChildren();\r", "-\t\t\t\t\t\t\t\taccumulatedRoots.add(binaryOutputRoot);\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t} catch (JavaModelException e){\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\trequiredProject.computePackageFragmentRoots(accumulatedRoots, rootIDs, false, checkExistency, computeBuilderRoots);\r", "+\t\t\t\t\trequiredProject.computePackageFragmentRoots(accumulatedRoots, rootIDs, false, checkExistency, retrieveExportedRoots);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02a8643ddbbe83bf54106a43a5a45c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "9951b7a54ba18cc36a88513505c20a6b6559265f", "commitAfterChange": "37e893fac6e74361f92234e78fe4ff338a9de8c2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tIClasspathEntry entry,\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet visitedProjects, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean computeBuilderRoots)", "signatureAfterChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tIClasspathEntry entry,\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean computeBuilderRoots)", "diff": ["-\t\tObjectSet visitedProjects, \r", "+\t\tObjectSet rootIDs, \r", "-\t\tIWorkspaceRoot workspaceRoot = getWorkspace().getRoot();\r", "+\t\tString rootID = ((ClasspathEntry)entry).rootID();\r", "+\t\tif (rootIDs.contains(rootID)) return;\r", "+\r", "-\r", "-\t\t// existency check\r", "-\t\tObject target = JavaModel.getTarget(workspaceRoot, entryPath, checkExistency);\r", "-\t\tif (target == null) return;\r", "+\t\tIWorkspaceRoot workspaceRoot = getWorkspace().getRoot();\r", "-\t\t\t\t\r", "+\t\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, entryPath, checkExistency);\r", "+\t\t\t\t\tif (target == null) return;\r", "+\r", "+\t\t\t\t\t\trootIDs.add(rootID);\r", "+\r", "+\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, entryPath, checkExistency);\r", "+\t\t\t\tif (target == null) return;\r", "+\r", "+\t\t\t\t\t\t\trootIDs.add(rootID);\r", "-\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t\t\trootIDs.add(rootID);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\trootIDs.add(rootID);\r", "-\r", "-\t\t\t\tif (requiredProject.getProject().isOpen()){ // special builder binary output\r", "+\t\t\t\tIProject requiredProjectRsc = requiredProject.getProject();\r", "+\t\t\t\tif (requiredProjectRsc.exists() && requiredProjectRsc.isOpen()){ // special builder binary output\r", "-\t\t\t\t\trequiredProject.computePackageFragmentRoots(accumulatedRoots, visitedProjects, false, checkExistency, computeBuilderRoots);\r", "+\t\t\t\t\trootIDs.add(rootID);\r", "+\t\t\t\t\trequiredProject.computePackageFragmentRoots(accumulatedRoots, rootIDs, false, checkExistency, computeBuilderRoots);\r"]}], "num": 37522}