{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6555aae7ad77ac5a07dfa5cc65e8de70", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea751d40640cfdf33881ea067d356c9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "514d738c0bffc825612691df73674de74739817d", "commitAfterChange": "16bf517eac7b1a25f758fac5c593b2cb070073af", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " boolean areTypesEqual(TypeBinding one, TypeBinding two)", "signatureAfterChange": " boolean areTypesEqual(TypeBinding one, TypeBinding two)", "diff": ["+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=329584", "+\tswitch(one.kind()) {", "+\t\tcase Binding.TYPE:", "+\t\t\tswitch (two.kind()) {", "+\t\t\t\tcase Binding.PARAMETERIZED_TYPE:", "+\t\t\t\tcase Binding.RAW_TYPE:", "+\t\t\t\t\tif (one == two.erasure())", "+\t\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase Binding.RAW_TYPE:", "+\t\tcase Binding.PARAMETERIZED_TYPE:", "+\t\t\tswitch(two.kind()) {", "+\t\t\t\tcase Binding.TYPE:", "+\t\t\t\t\tif (one.erasure() == two)", "+\t\t\t\t\t\treturn true;", "+\t\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdfcc603027299637dfc9fa377c0437e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "ba623d582045575b43eee2b86be165ff58225746", "commitAfterChange": "5f25db2c9c02bf799108bff292447ab679c3c3b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " boolean areTypesEqual(TypeBinding one, TypeBinding two)", "signatureAfterChange": " boolean areTypesEqual(TypeBinding one, TypeBinding two)", "diff": ["-\tswitch (one.kind()) {", "-\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\tcase Binding.RAW_TYPE :", "-\t\t\treturn one.isEquivalentTo(two);", "-//\t\tcase Binding.TYPE_PARAMETER : // won't work for variables from different classes - need substitution", "-\t}", "+\t// need to consider X<?> and X<? extends Object> as the same 'type'", "+\tif (one.isParameterizedType() && two.isParameterizedType())", "+\t\treturn one.isEquivalentTo(two) && two.isEquivalentTo(one);"]}], "num": 1455}