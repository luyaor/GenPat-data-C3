{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f30a7aacc297c38ccc4183c921116d35", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421d02fad5b80d98c734acb6ac1bc8f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test0046()", "signatureAfterChange": " \tpublic void test0046()", "diff": ["+\t\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\t\"The type Object is not generic; it cannot be parameterized with arguments <T>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic Object<T> var;\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce64904d6cc2f4c259dd9d8be5a2eba6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1035, "methodNumberAfterChange": 1035, "signatureBeforeChange": " public void test1011()", "signatureAfterChange": " public void test1011()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tvoid foo(HashMap map, String s, Map<String,String> map2) {\\n\" +", "-\t\t\"\t         ^^^^^^^\\n\" +", "-\t\t\"HashMap is a raw type. References to generic type HashMap<K,V> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tbar(map, s, map2); //1\\n\" +", "-\t\t\"\t^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(Map, Object, Map) of the generic method bar(Map<U,U>, U, Map<U,U>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tbar(map, s, map2); //1\\n\" +", "-\t\t\"\t    ^^^\\n\" +", "-\t\t\"Type safety: The expression of type HashMap needs unchecked conversion to conform to Map<U,U>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tbar2(map, s, map2); //3\\n\" +", "-\t\t\"\t     ^^^\\n\" +", "-\t\t\"Type safety: The expression of type HashMap needs unchecked conversion to conform to Map<String,String>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 7)\\n\" +", "-\t\t\"\tbar3(map, s, map2); //4\\n\" +", "-\t\t\"\t     ^^^\\n\" +", "-\t\t\"Type safety: The expression of type HashMap needs unchecked conversion to conform to Map<String,String>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tvoid foo(HashMap map, String s, Map<String,String> map2) {\\n\" + ", "+\t\t\"\t         ^^^^^^^\\n\" + ", "+\t\t\"HashMap is a raw type. References to generic type HashMap<K,V> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tbar(map, s, map2); //1\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(HashMap, String, Map<String,String>) of the generic method bar(Map<U,U>, U, Map<U,U>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tbar(map, s, map2); //1\\n\" + ", "+\t\t\"\t    ^^^\\n\" + ", "+\t\t\"Type safety: The expression of type HashMap needs unchecked conversion to conform to Map<String,String>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tbar2(map, s, map2); //3\\n\" + ", "+\t\t\"\t     ^^^\\n\" + ", "+\t\t\"Type safety: The expression of type HashMap needs unchecked conversion to conform to Map<String,String>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tbar3(map, s, map2); //4\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar3(HashMap, String, Map<String,String>) of the generic method bar3(Map<String,String>, U, Map<U,U>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tbar3(map, s, map2); //4\\n\" + ", "+\t\t\"\t     ^^^\\n\" + ", "+\t\t\"Type safety: The expression of type HashMap needs unchecked conversion to conform to Map<String,String>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e42e144ed03436da8b6db10a18687a6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DeprecatedTest.java", "commitBeforeChange": "1b58032df56d9cb355fbe3e4f4bdf1875eace04b", "commitAfterChange": "9d4c8c879ad1f81b2f637753a47608ca38997797", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void test1()", "signatureAfterChange": " public void test1()", "diff": ["+\t\t\"\t      ^\\n\" + ", "+\t\t\"The field B.x is hiding a field from type A\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in p\\\\B.java (at line 3)\\n\" + ", "+\t\t\"\tfloat x = super.x;\\n\" + "]}], "num": 36825}