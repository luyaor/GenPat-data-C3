{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e16cb292f756cacbc9aaf57254b5df5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c381eb3371eaf79a3972750824a56b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "commitAfterChange": "f0ad677ecfc3fb2aae0264f20715771e958071e0", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": "  public void invalidMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": "  public void invalidMethod(MessageSend messageSend, MethodBinding method, Scope scope)", "diff": ["-public void invalidMethod(MessageSend messageSend, MethodBinding method) {", "+public void invalidMethod(MessageSend messageSend, MethodBinding method, Scope scope) {", "+\t\t\tTypeBinding shownMethodReturnType = shownMethod.returnType.capture(scope, messageSend.sourceStart, messageSend.sourceEnd);", "-\t\t\t\t        String.valueOf(shownMethod.returnType.readableName()),", "+\t\t\t\t        String.valueOf(shownMethodReturnType.readableName()),", "-\t\t\t\t        String.valueOf(shownMethod.returnType.shortReadableName()),", "+\t\t\t\t        String.valueOf(shownMethodReturnType.shortReadableName()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31970702e26b9118939f5b72f0d552e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c223ae053787e6c843ac82068147df20215c916b", "commitAfterChange": "0211ebf94321d48ca7e59da13d2b4b3ea6399b61", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void annotationValueMustBeArrayInitializer(Expression value)", "signatureAfterChange": " public void annotationValueMustBeArrayInitializer(TypeBinding annotationType, char[] name, Expression value)", "diff": ["-public void annotationValueMustBeArrayInitializer(Expression value) {", "+public void annotationValueMustBeArrayInitializer(TypeBinding annotationType, char[] name, Expression value) {", "+\tString str = new String(name);", "-\t\t\tIProblem.AnnotationValueMustBeArrayInitializer,", "-\t\t\tNoArgument,", "-\t\t\tNoArgument,", "-\t\t\tvalue.sourceStart,", "-\t\t\tvalue.sourceEnd);", "+    \tIProblem.AnnotationValueMustBeArrayInitializer,", "+\t\tnew String[] { new String(annotationType.readableName()), str },", "+\t\tnew String[] { new String(annotationType.shortReadableName()), str},", "+    \tvalue.sourceStart,", "+    \tvalue.sourceEnd);"]}], "num": 68439}