{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2bceabc9e93420665463a9b9146946c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fee50e9aa17862176b18698cc2a7d6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatJavadocText.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\tbuffer.append(\"\t\").append(\"[FJText] - at offset: \" + this.sourceStart).append(\" end position: \" + this.sourceEnd).append(\"\\n\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "-\tif (this.separatorsPtr > -1) {", "-\t\tbuffer.append(\"\t\").append(\"Number of text sections: \" + (this.separatorsPtr + 1) + \"\\n\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t} else {", "-\t\tbuffer.append(\"\t\").append(\"NO TEXT SEPARATOR\" + \"\\n\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t}", "+\tbuffer.append(\"\t\").append(\"[FJText] - at offset: \" + this.sourceStart).append(\" end position: \" + this.sourceEnd).append('\\n'); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\tbuffer.append(\"\t\").append(this.separatorsPtr+1).append(\" text sections, \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\tbuffer.append(\"\t\").append(this.htmlNodesPtr+1).append(\" html tags.\\n\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\tbuffer.append(\"\t\").append(\"depth=\").append(this.depth) //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t.append(\", lines before=\").append(this.linesBefore) //$NON-NLS-1$", "+\t\t.append(\", htmlTagIndex=\").append(this.htmlTagIndex) //$NON-NLS-1$", "+\t\t.append('\\n');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "611fcdbf8649fb28dfdec3db4adde2bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tIClassFile classFile, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["+\t\tIClassFile classFile,", "+\t\tNodeSearcher nodeSearcher,", "+\t\tboolean cleanUp,", "+\t\tchar[] source,", "+\t\tWorkingCopyOwner owner,", "+\t\tIProgressMonitor monitor)", "+\t\tthrows JavaModelException {", "+", "+\t\tCompilationUnitDeclaration unit = null;", "+\t\ttry {", "+\t\t\t", "+\t\t\tStringBuffer buffer = new StringBuffer(SuffixConstants.SUFFIX_STRING_java);", "+\t\t\t", "+\t\t\tString classFileName = classFile.getElementName(); // this includes the trailing .class", "+\t\t\tbuffer.insert(0, classFileName.toCharArray(), 0, classFileName.indexOf('.'));", "+\t\t\tchar[] fileName = String.valueOf(buffer).toCharArray();", "+\t\t\tJavaProject project = (JavaProject) classFile.getJavaProject();", "+\t\t\tCompilationUnitResolver compilationUnitVisitor =", "+\t\t\t\tnew CompilationUnitResolver(", "+\t\t\t\t\tgetNameEnvironment(project, owner, monitor),", "+\t\t\t\t\tgetHandlingPolicy(),", "+\t\t\t\t\tproject.getOptions(true),", "+\t\t\t\t\tgetRequestor(),", "+\t\t\t\t\tgetProblemFactory(monitor));", "+\t", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);", "+\t", "+\t\t\tchar[][] expectedPackageName = CharOperation.splitOn('.', classFile.getType().getPackageFragment().getElementName().toCharArray());", "+\t\t", "+\t\t\tunit = compilationUnitVisitor.resolve(", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tsource,", "+\t\t\t\t\texpectedPackageName,", "+\t\t\t\t\tnew String(fileName),", "+\t\t\t\t\tencoding),", "+\t\t\t\tnodeSearcher,", "+\t\t\t\ttrue, // method verification", "+\t\t\t\ttrue, // analyze code", "+\t\t\t\ttrue); // generate code", "+\t\t\treturn unit;", "+\t\t} finally {", "+\t\t\tif (cleanUp && unit != null) {", "+\t\t\t\tunit.cleanUp();", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 50139}