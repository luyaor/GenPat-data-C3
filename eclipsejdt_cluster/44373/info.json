{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0b391df4d4933fba91bda510bfd9123", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6ccb27d2f5a08399790cca0430ffe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "6e3484e93dc48a09ac8c425df0144a313c14ab99", "commitAfterChange": "4258235f7bd226d0dfb8701ffe19643b12592deb", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "  \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "diff": ["+\t}", "+\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\ttrue);", "+\t\t", "+\t\tImportBinding[] importBindings = scope.compilationUnitScope().imports;", "+\t\tfor (int i = 0; i < importBindings.length; i++) {", "+\t\t\tImportBinding importBinding = importBindings[i];", "+\t\t\tif(importBinding.isValidBinding() && importBinding.isStatic()) {", "+\t\t\t\tBinding binding = importBinding.resolvedImport;", "+\t\t\t\tif(binding != null && binding.isValidBinding()) {", "+\t\t\t\t\tif(importBinding.onDemand) {", "+\t\t\t\t\t\tif(binding.bindingType() == BindingIds.TYPE) {", "+\t\t\t\t\t\t\tfindFields(", "+\t\t\t\t\t\t\t\ttoken,", "+\t\t\t\t\t\t\t\t(ReferenceBinding)binding,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\t\tlocalsFound,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tinvocationSite,", "+\t\t\t\t\t\t\t\tinvocationScope,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\ttoken,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t(ReferenceBinding)binding,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tinvocationSite,", "+\t\t\t\t\t\t\t\tinvocationScope,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (binding.bindingType() == BindingIds.FIELD) {", "+\t\t\t\t\t\t\t\tfindFields(", "+\t\t\t\t\t\t\t\t\t\ttoken,", "+\t\t\t\t\t\t\t\t\t\tnew FieldBinding[]{(FieldBinding)binding},", "+\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\t\t\t\tlocalsFound,", "+\t\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\t\t((FieldBinding)binding).declaringClass,", "+\t\t\t\t\t\t\t\t\t\tinvocationSite,", "+\t\t\t\t\t\t\t\t\t\tinvocationScope,", "+\t\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480fda7e3063056c59d2e8646e42c455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1b98b39107e931dc0893df1da7a410cad5cc4745", "commitAfterChange": "9635fd418f2d5b55fe3d3dc4ccb7797a5daf3a53", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "diff": ["-\t\tScope invocationScope) {", "+\t\tScope invocationScope,", "+\t\tboolean insideTypeAnnotation,", "+\t\tboolean insideAnnotationAttribute) {", "-\t\t\t\t\t\tif(proposeField) {", "-\t\t\t\t\t\t\tfindFields(", "-\t\t\t\t\t\t\t\ttoken,", "-\t\t\t\t\t\t\t\tenclosingType,", "-\t\t\t\t\t\t\t\tclassScope,", "-\t\t\t\t\t\t\t\tfieldsFound,", "-\t\t\t\t\t\t\t\tlocalsFound,", "-\t\t\t\t\t\t\t\tstaticsOnly,", "-\t\t\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\ttrue);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif(proposeMethod) {", "-\t\t\t\t\t\t\tfindMethods(", "-\t\t\t\t\t\t\t\ttoken,", "-\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\tenclosingType,", "-\t\t\t\t\t\t\t\tclassScope,", "-\t\t\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\t\t\tstaticsOnly,", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\tif(!insideTypeAnnotation) {", "+\t\t\t\t\t\t\tif(proposeField) {", "+\t\t\t\t\t\t\t\tfindFields(", "+\t\t\t\t\t\t\t\t\ttoken,", "+\t\t\t\t\t\t\t\t\tenclosingType,", "+\t\t\t\t\t\t\t\t\tclassScope,", "+\t\t\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\t\t\tlocalsFound,", "+\t\t\t\t\t\t\t\t\tstaticsOnly,", "+\t\t\t\t\t\t\t\t\tinvocationSite,", "+\t\t\t\t\t\t\t\t\tinvocationScope,", "+\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif(proposeMethod && !insideAnnotationAttribute) {", "+\t\t\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\t\ttoken,", "+\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\tenclosingType,", "+\t\t\t\t\t\t\t\t\tclassScope,", "+\t\t\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\t\t\tstaticsOnly,", "+\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\tinvocationSite,", "+\t\t\t\t\t\t\t\t\tinvocationScope,", "+\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tinsideTypeAnnotation = false;", "-\t\t\t\t\t\t\t\tif(proposeMethod) {", "+\t\t\t\t\t\t\t\tif(proposeMethod && !insideAnnotationAttribute) {", "-\t\t\t\t\t\t\t\tif(proposeMethod) {", "+\t\t\t\t\t\t\t\tif(proposeMethod && !insideAnnotationAttribute) {"]}], "num": 44373}