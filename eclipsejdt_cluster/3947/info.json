{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0e70cb4d2d29b13bdeb65c2d1967ecf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aba11addc1573a1b06d59eb201ebd62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "06b4da04864008da88066d5a5e945f628c432313", "commitAfterChange": "6cb1a46319677820636b0fbe76d096b92fe1835a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   \tpublic void testVarArgs_since_3() throws Exception", "signatureAfterChange": "   \tpublic void testVarArgs_since_3() throws Exception", "diff": ["+\t\t", "+\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ELLIPSIS, JavaCore.INSERT);", "+\t\t", "+\t\tpreview= evaluateRewrite(cu, rewrite);", "+", "+\t\tbuf= new StringBuffer();", "+\t\tbuf.append(\"package test1;\\n\");", "+\t\tbuf.append(\"public class DD {\\n\");", "+\t\tbuf.append(\"    private void foo1(String format, Object args){\\n\");", "+\t\tbuf.append(\"    }\\n\");", "+\t\tbuf.append(\"    private void foo2(String format, int ... args) {\\n\");", "+\t\tbuf.append(\"    }\\n\");", "+\t\tbuf.append(\"}\\n\");", "+\t\tassertEqualString(preview, buf.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e009c0d48bbb8fb59f990a95ef5751b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "a1761e4448ca9b0394806aae37f349b5bdd250df", "commitAfterChange": "146009e38675deb85b2aa23f66e92f2f13172cf7", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tpublic void testParameterAnnotations() throws Exception", "signatureAfterChange": "  \tpublic void testParameterAnnotations() throws Exception", "diff": ["+\t\t", "+\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PARAMETER, JavaCore.INSERT);", "+\t\t", "+\t\tpreview= evaluateRewrite(cu, rewrite);", "+\t\t", "+\t\tbuf= new StringBuffer();", "+\t\tbuf.append(\"package test1;\\n\");", "+\t\tbuf.append(\"class E {\\n\");", "+\t\tbuf.append(\"    public void foo(@X\\n    @A int a, @B2 int b, @X\\n    int c, @X int d) {\\n\");", "+\t\tbuf.append(\"    }\\n\");", "+\t\tbuf.append(\"}\\n\");", "+\t\tassertEqualString(preview, buf.toString());"]}], "num": 3947}