{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "749563cf9b818e3d8b6aede9c2448901", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74240a464b83b55b21ee6bc845ba951b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "bb4e6bac07124b460a049d2b185093478c4f0c72", "commitAfterChange": "9cf59650b85352257b29d89bc6a53254086661f7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "signatureAfterChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "diff": ["-\t\t\tArrayList participants = new ArrayList();", "+\t\t\tfinal ArrayList participants = new ArrayList();", "-\t\t\t\t\tfor(int k = 0; k < configElements.length; k++){", "-\t\t\t\t\t\tString elementName = configElements[k].getName();", "+\t\t\t\t\tfor(int k = 0; k < configElements.length; k++) {", "+\t\t\t\t\t\tfinal IConfigurationElement configElement = configElements[k];", "+\t\t\t\t\t\tString elementName =configElement.getName();", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tObject execExt = configElements[j].createExecutableExtension(\"class\"); //$NON-NLS-1$ ", "-\t\t\t\t\t\t\tif (execExt instanceof CompilationParticipant){", "-\t\t\t\t\t\t\t\tparticipants.add(execExt);", "+\t\t\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while creating compilation participant\"); //$NON-NLS-1$", "-\t\t\t\t\t\t} catch(CoreException e) {", "-\t\t\t\t\t\t\t// executable extension could not be created: ignore this participant", "-\t\t\t\t\t\t\tUtil.log(e, \"Unexpected exception trying to instanciate compilation participant\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\t\t\tObject execExt = configElement.createExecutableExtension(\"class\"); //$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tif (execExt instanceof CompilationParticipant) {", "+\t\t\t\t\t\t\t\t\tparticipants.add(execExt);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t});", "-\t\t\tthis.registeredParticipants = new CompilationParticipant[size];", "-\t\t\tparticipants.toArray(this.registeredParticipants);", "-\t\t\treturn this.registeredParticipants;", "+\t\t\tCompilationParticipant[] result = new CompilationParticipant[size];", "+\t\t\tparticipants.toArray(result);", "+\t\t\tfor (int i = 0; i < size; i++) {", "+\t\t\t\tfinal CompilationParticipant participant = result[i];", "+\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while configuring compilation participant\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\tparticipant.configure(participants);", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t}", "+\t\t\tsize = participants.size();", "+\t\t\tif (size != result.length)", "+\t\t\t\tresult = new CompilationParticipant[size];", "+\t\t\tparticipants.toArray(result);", "+\t\t\treturn this.registeredParticipants = result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e38e4a55186ab87907dc4e62e51bf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9b8497af1cbd77526a4fa45b99ed631f29570c0f", "commitAfterChange": "e2827e126b55e7ef1923fa3efec0a2ea0aba2477", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "signatureAfterChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "diff": ["-\t\t\tCompilationParticipant[] participants = getRegisteredParticipants();", "-\t\t\tif (participants == NO_PARTICIPANTS)", "+\t\t\tfinal Object[][] participantsPerSource = getRegisteredParticipants();", "+\t\t\tif (participantsPerSource == NO_PARTICIPANTS)", "+\t\t\tString sourceLevel = project.getOption(JavaCore.COMPILER_SOURCE, true/*inherit options*/);", "+\t\t\tfinal int sourceLevelIndex = indexForSourceLevel(sourceLevel);", "+\t\t\tfinal Object[] participants = participantsPerSource[sourceLevelIndex];", "-\t\t\t\tCompilationParticipant participant = participants[i];", "-\t\t\t\tif (participant.isActive(project))", "+\t\t\t\tif (participants[i] instanceof IConfigurationElement) {", "+\t\t\t\t\tfinal IConfigurationElement configElement = (IConfigurationElement) participants[i];", "+\t\t\t\t\tfinal int participantIndex = i;", "+\t\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while creating compilation participant\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\t\tObject executableExtension = configElement.createExecutableExtension(\"class\"); //$NON-NLS-1$ ", "+\t\t\t\t\t\t\tfor (int j = sourceLevelIndex; j < MAX_SOURCE_LEVEL; j++)", "+\t\t\t\t\t\t\t\tparticipantsPerSource[j][participantIndex] = executableExtension;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t});", "+\t\t\t\t} ", "+\t\t\t\tCompilationParticipant participant = (CompilationParticipant) participants[i];", "+\t\t\t\tif (participant != null && participant.isActive(project))"]}], "num": 2780}