{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8fa429dbc62c922dcde50343e67be46a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4818f8d0ade832ac5b7f30b2a9ad46d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic static Hashtable getOptions()", "signatureAfterChange": " \tpublic static Hashtable getOptions()", "diff": ["-\t\t", "-\t\tHashtable options = new Hashtable(10);", "-\t\t// see #initializeDefaultPluginPreferences() for changing default settings", "-\t\tPlugin plugin = getPlugin();", "-\t\tif (plugin != null) {", "-\t\t\tPreferences preferences = getPlugin().getPluginPreferences();", "-\t\t\tHashSet optionNames = JavaModelManager.getJavaModelManager().optionNames;", "-\t\t\t", "-\t\t\t// initialize preferences to their default", "-\t\t\tIterator iterator = optionNames.iterator();", "-\t\t\twhile (iterator.hasNext()) {", "-\t\t\t    String propertyName = (String) iterator.next();", "-\t\t\t    options.put(propertyName, preferences.getDefaultString(propertyName));", "-\t\t\t}", "-\t\t\t// get preferences not set to their default", "-\t\t\tString[] propertyNames = preferences.propertyNames();", "-\t\t\tfor (int i = 0; i < propertyNames.length; i++){", "-\t\t\t\tString propertyName = propertyNames[i];", "-\t\t\t\tString value = preferences.getString(propertyName).trim();", "-\t\t\t\tif (optionNames.contains(propertyName)){", "-\t\t\t\t\toptions.put(propertyName, value);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t// get encoding through resource plugin", "-\t\t\toptions.put(CORE_ENCODING, getEncoding()); ", "-\t\t\t// backward compatibility", "-\t\t\toptions.put(COMPILER_PB_INVALID_IMPORT, ERROR);", "-\t\t\toptions.put(COMPILER_PB_UNREACHABLE_CODE, ERROR);", "+\t\t// init", "+\t\tHashtable options = new Hashtable(10);", "+\t\tHashSet optionNames = JavaModelManager.getJavaModelManager().optionNames;", "+\t\tIPreferencesService service = Platform.getPreferencesService();", "+", "+\t\t// set options using preferences service lookup", "+\t\tIterator iterator = optionNames.iterator();", "+\t\twhile (iterator.hasNext()) {", "+\t\t    String propertyName = (String) iterator.next();", "+\t\t    String propertyValue = service.get(propertyName, null, preferencesLookup);", "+\t\t    if (propertyValue != null) {", "+\t\t\t    options.put(propertyName, propertyValue);", "+\t\t    }", "+", "+\t\t// get encoding through resource plugin", "+\t\toptions.put(CORE_ENCODING, getEncoding()); ", "+", "+\t\t// backward compatibility", "+\t\toptions.put(COMPILER_PB_INVALID_IMPORT, ERROR);", "+\t\toptions.put(COMPILER_PB_UNREACHABLE_CODE, ERROR);", "+", "+\t\t// return built map"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de10fde2c5a66778de025ffeb243b2fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f08c46fb1026d88b9a2aa81335fad4d5823323f2", "commitAfterChange": "b080f0d7bae3add3e26aca56768f25b351884bac", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic static Hashtable getOptions()", "signatureAfterChange": " \tpublic static Hashtable getOptions()", "diff": ["-\t\tPreferences preferences = getPlugin().getPluginPreferences();", "-\t\tHashSet optionNames = JavaModelManager.OptionNames;", "-\t\t", "-\t\t// get preferences set to their default", "-\t\tString[] defaultPropertyNames = preferences.defaultPropertyNames();", "-\t\tfor (int i = 0; i < defaultPropertyNames.length; i++){", "-\t\t\tString propertyName = defaultPropertyNames[i];", "-\t\t\tif (optionNames.contains(propertyName)){", "-\t\t\t\toptions.put(propertyName, preferences.getDefaultString(propertyName));", "-\t\t\t}", "-\t\t}\t\t", "-\t\t// get preferences not set to their default", "-\t\tString[] propertyNames = preferences.propertyNames();", "-\t\tfor (int i = 0; i < propertyNames.length; i++){", "-\t\t\tString propertyName = propertyNames[i];", "-\t\t\tif (optionNames.contains(propertyName)){", "-\t\t\t\toptions.put(propertyName, preferences.getString(propertyName).trim());", "-\t\t\t}", "-\t\t}\t\t", "-\t\t// get encoding through resource plugin", "-\t\toptions.put(CORE_ENCODING, ResourcesPlugin.getEncoding());", "-", "+\t\tPlugin plugin = getPlugin();", "+\t\tif (plugin != null) {", "+\t\t\tPreferences preferences = getPlugin().getPluginPreferences();", "+\t\t\tHashSet optionNames = JavaModelManager.OptionNames;", "+\t\t\t", "+\t\t\t// get preferences set to their default", "+\t\t\tString[] defaultPropertyNames = preferences.defaultPropertyNames();", "+\t\t\tfor (int i = 0; i < defaultPropertyNames.length; i++){", "+\t\t\t\tString propertyName = defaultPropertyNames[i];", "+\t\t\t\tif (optionNames.contains(propertyName)){", "+\t\t\t\t\toptions.put(propertyName, preferences.getDefaultString(propertyName));", "+\t\t\t\t}", "+\t\t\t}\t\t", "+\t\t\t// get preferences not set to their default", "+\t\t\tString[] propertyNames = preferences.propertyNames();", "+\t\t\tfor (int i = 0; i < propertyNames.length; i++){", "+\t\t\t\tString propertyName = propertyNames[i];", "+\t\t\t\tif (optionNames.contains(propertyName)){", "+\t\t\t\t\toptions.put(propertyName, preferences.getString(propertyName).trim());", "+\t\t\t\t}", "+\t\t\t}\t\t", "+\t\t\t// get encoding through resource plugin", "+\t\t\toptions.put(CORE_ENCODING, ResourcesPlugin.getEncoding());", "+\t\t}"]}], "num": 9035}