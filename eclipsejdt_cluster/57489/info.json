{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "911ca14f87c53eaa3b94af9e86228def", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49abf213c46e2e22b3738bf5bf1cd28f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "27ae7cc0d5a75c1449565f71fee06411744b67e7", "commitAfterChange": "8b72c02b9d94ae454655938a968c4cbea2e7dc9d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding expressionType = expression.resolveType(scope);", "-\t\tif (originalLhsType == null || expressionType == null)", "+\t\tTypeBinding originalExpressionType = expression.resolveType(scope);", "+\t\tif (originalLhsType == null || originalExpressionType == null)", "-\t\tTypeBinding lhsType = originalLhsType;", "+\t\tTypeBinding lhsType = originalLhsType, expressionType = originalExpressionType;", "-\t\tboolean unboxedLhs = false, unboxedExpression = false;", "+\t\tboolean unboxedLhs = false;", "-\t\t\t\tTypeBinding unboxedType = env.computeBoxingType(expressionType);", "-\t\t\t\tif (unboxedType != expressionType) {", "-\t\t\t\t\texpressionType = unboxedType;", "-\t\t\t\t\tunboxedExpression = true;", "-\t\t\t\t}", "+\t\t\t\texpressionType = env.computeBoxingType(expressionType);", "-\t\tthis.expression.implicitConversion = (unboxedExpression ? UNBOXING : 0) | ((result >>> 4) & 0x000FF);", "+\t\tthis.expression.computeConversion(scope, TypeBinding.wellKnownType(scope, (result >>> 8) & 0x0000F), originalExpressionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e770a056ec81e0eb82deadec7e10f632", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "193b41508b7c1d081db1d1f5e0c1e17fb71515dc", "commitAfterChange": "81bd65be2690f877ab2c6dd5bd39bb74fa51fadd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean unboxedExpression = false;", "-\t\t\t\tint unboxedID = env.computeBoxingType(expressionType).id;", "-\t\t\t\tif (unboxedID != expressionTypeID) {", "-\t\t\t\t\texpressionTypeID = unboxedID;", "-\t\t\t\t\tunboxedExpression = true;", "-\t\t\t\t}", "+\t\t\t\texpressionTypeID = env.computeBoxingType(expressionType).id;", "-\t\tthis.expression.implicitConversion = (unboxedExpression ? UNBOXING : 0) | (operatorSignature >>> 12);", "+\t\tthis.expression.computeConversion(scope, TypeBinding.wellKnownType(scope, (operatorSignature >>> 16) & 0x0000F), expressionType);"]}], "num": 57489}