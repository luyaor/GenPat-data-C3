{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7504720e63eaa6a46a02b4f21907d066", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025e605d595a17a45931d4770b5ffbc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "signatureAfterChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "diff": ["-\t\t\tboolean isCamelCase = (matchRule & SearchPattern.R_CAMEL_CASE_MATCH) != 0;", "+\t\t\tboolean isCamelCase = (matchRule & (SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH)) != 0;", "-\t\t\tif (isCamelCase) {", "-\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName, (matchRule & SearchPattern.R_PREFIX_MATCH) != 0)) {", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "-\t\t\t\tif (isCaseSensitive) return false;", "-\t\t\t}", "+\t\t\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName, false)) {", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn !isCaseSensitive && matchFirstChar && CharOperation.prefixEquals(patternTypeName, typeName, false);", "+\t\t\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\t\t\treturn matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4124b40c5a3127ee32c6c394ff0141a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static boolean isMatch(char[] pattern, char[] word, int matchRule)", "signatureAfterChange": "  public static boolean isMatch(char[] pattern, char[] word, int matchRule)", "diff": ["-\t// First test camel case if necessary", "-\tboolean isCamelCase = (matchRule & SearchPattern.R_CAMEL_CASE_MATCH) != 0;", "-\tif (isCamelCase) {", "-\t\t// prefix is always needed as index key got characters after type simple name", "-\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=201064", "-\t\tif (pattern[0] == word[0] && CharOperation.camelCaseMatch(pattern, word, true/*prefix match*/)) {", "-\t\t\treturn true;", "-\t\t}", "-\t\tif ((matchRule & SearchPattern.R_CASE_SENSITIVE) != 0) return false;", "-\t}", "-", "-\tmatchRule &= ~SearchPattern.R_CAMEL_CASE_MATCH;", "+\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t// same part count is not activated because index key may have uppercase letters after the type name", "+\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\tif (CharOperation.camelCaseMatch(pattern, word, false)) {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\treturn patternLength <= wordLength && CharOperation.prefixEquals(pattern, word, false);", "+\t\tcase SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CASE_SENSITIVE :", "+\t\t// same part count is not activated because index key may have uppercase letters after the type name", "+\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH | SearchPattern.R_CASE_SENSITIVE :", "+\t\t\treturn (pattern[0] == word[0] && CharOperation.camelCaseMatch(pattern, word, false));"]}], "num": 65819}