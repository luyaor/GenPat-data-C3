{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2397fd57bc95aa48e8c758addbe75a89", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "832e6537bb5163c59caa2fd8132534f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tif (!(sourceType.isInterface()", "-\t\t\t// no field generated in interface case (would'nt verify) see 1FHHEZL", "-\t\t\t|| sourceType.isBaseType())) {", "+\t\tif ((!(sourceType.isInterface()", "+\t\t\t\t// no field generated in interface case (would'nt verify) see 1FHHEZL", "+\t\t\t\t|| sourceType.isBaseType()))", "+\t\t\t\t&& currentScope.environment().options.sourceLevel <= ClassFileConstants.JDK1_5) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9731a283aeadc4ef7965a532728997fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding)", "signatureAfterChange": " \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "diff": ["-\tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding) {", "+\tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField) {", "-\t\tthis.classLiteralSyntheticField =", "-\t\t\tsourceType.addSyntheticField(sourceType, scope);", "+\t\tif (needClassLiteralField) {", "+\t\t\tthis.classLiteralSyntheticField =", "+\t\t\t\tsourceType.addSyntheticField(sourceType, scope);", "+\t\t}"]}], "num": 62774}