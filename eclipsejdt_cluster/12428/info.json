{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9e97a252dce56b5e3e96b6e73e3cb9a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "828645b176af1ccd8cc3e0770eb32c5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 29, "signatureBeforeChange": " void updateArrayCache(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "signatureAfterChange": " void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "diff": ["-void updateArrayCache(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType) {", "-\tnextDimension : for (int i = 0, length = uniqueArrayBindings.length; i < length; i++) {", "-\t\tArrayBinding[] arrayBindings = uniqueArrayBindings[i];", "-\t\tif (arrayBindings != null) {", "-\t\t\tfor (int j = 0, max = arrayBindings.length; j < max; j++) {", "-\t\t\t\tArrayBinding currentBinding = arrayBindings[j];", "-\t\t\t\tif (currentBinding == null)", "-\t\t\t\t\tcontinue nextDimension;", "-\t\t\t\tif (currentBinding.leafComponentType == unresolvedType) {", "-\t\t\t\t\tcurrentBinding.leafComponentType = resolvedType;", "-\t\t\t\t\tcontinue nextDimension;", "-\t\t\t\t}", "+void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType) {", "+\t// walk all the unique collections & replace the unresolvedType with the resolvedType", "+\t// must prevent 2 entries so == still works (1 containing the unresolvedType and the other containing the resolvedType)", "+\tif (uniqueParameterizedTypeBindings.get(unresolvedType) != null) { // update the key", "+\t\tObject[] keys = uniqueParameterizedTypeBindings.keyTable;", "+\t\tfor (int i = 0, l = keys.length; i < l; i++) {", "+\t\t\tif (keys[i] == unresolvedType) {", "+\t\t\t\tkeys[i] = resolvedType; // hashCode is based on compoundName so this works - cannot be raw since type of parameterized type", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t}", "+", "+\tif (uniqueWildcardBindings.get(unresolvedType) != null) { // update the key", "+\t\tObject[] keys = uniqueWildcardBindings.keyTable;", "+\t\tfor (int i = 0, l = keys.length; i < l; i++) {", "+\t\t\tif (keys[i] == unresolvedType) {", "+\t\t\t\tkeys[i] = resolvedType.isGenericType() ? createRawType(resolvedType, null) : resolvedType; // hashCode is based on compoundName so this works", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b312e4e9c8a426d9511dcc44d0ee2239", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 61, "signatureBeforeChange": "  void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "signatureAfterChange": "  void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "diff": ["-\t// walk all the unique collections & replace the unresolvedType with the resolvedType", "-\t// must prevent 2 entries so == still works (1 containing the unresolvedType and the other containing the resolvedType)", "-\tif (this.uniqueParameterizedTypeBindings.get(unresolvedType) != null) { // update the key", "-\t\tObject[] keys = this.uniqueParameterizedTypeBindings.keyTable;", "-\t\tfor (int i = 0, l = keys.length; i < l; i++) {", "-\t\t\tif (keys[i] == unresolvedType) {", "-\t\t\t\tkeys[i] = resolvedType; // hashCode is based on compoundName so this works - cannot be raw since type of parameterized type", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (this.uniqueRawTypeBindings.get(unresolvedType) != null) { // update the key", "-\t\tObject[] keys = this.uniqueRawTypeBindings.keyTable;", "-\t\tfor (int i = 0, l = keys.length; i < l; i++) {", "-\t\t\tif (keys[i] == unresolvedType) {", "-\t\t\t\tkeys[i] = resolvedType; // hashCode is based on compoundName so this works", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (this.uniqueWildcardBindings.get(unresolvedType) != null) { // update the key", "-\t\tObject[] keys = this.uniqueWildcardBindings.keyTable;", "-\t\tfor (int i = 0, l = keys.length; i < l; i++) {", "-\t\t\tif (keys[i] == unresolvedType) {", "-\t\t\t\tkeys[i] = resolvedType; // hashCode is based on compoundName so this works", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "+\tthis.typeSystem.updateCaches(unresolvedType, resolvedType);"]}], "num": 12428}