{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9294a3f98cc6f1f4be8a8470eca650dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661a2a6529dde5758b1146905bb8d8e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "2caa59d033a9b6c8ec71aab586472ad7fe749893", "commitAfterChange": "a8944173670c6319cce2438add6b3e87f478a46c", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "\r \tpublic void test0390882()", "signatureAfterChange": "\r \tpublic void test0390882()", "diff": ["-\t\t\t\t\t\"\tObject o3 = (java.lang. @Marker Integer) null;  // 3. Wrong.\\n\" +\r", "+\t\t\t\t\t\"\tObject o3 = (java.lang. @Marker Integer) null;  // 3. Legal.\\n\" +\r", "-\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + \r", "-\t\t\t\t\"\tObject o2 = (java. @Marker lang.Integer) null;  // 2. Wrong.\\n\" + \r", "-\t\t\t\t\"\t                   ^^^^^^^\\n\" + \r", "+\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\t\t\"\tObject o1 = (@Marker java.lang.Integer) null;   // 1. Right.\\n\" + \r", "+\t\t\t\t\"\t             ^^^^^^^\\n\" + \r", "-\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + \r", "-\t\t\t\t\"\tObject o3 = (java.lang. @Marker Integer) null;  // 3. Wrong.\\n\" + \r", "-\t\t\t\t\"\t                        ^^^^^^^\\n\" + \r", "+\t\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + \r", "+\t\t\t\t\"\tObject o2 = (java. @Marker lang.Integer) null;  // 2. Wrong.\\n\" + \r", "+\t\t\t\t\"\t                   ^^^^^^^\\n\" + \r", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\t\t\"----------\\n\" + \r", "-\t\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + \r", "-\t\t\t\t\"\tpublic void bar(java.lang. @Marker Integer arg) {}\\n\" + \r", "-\t\t\t\t\"\t                           ^^^^^^^\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca860db374ed294e434a0eda631471b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test020() throws Exception", "signatureAfterChange": " \t \tpublic void test030_methodTypeParameterBound() throws Exception", "diff": ["-\t// method type parameter bound", "-\tpublic void test020() throws Exception {", "+\t", "+\tpublic void test030_methodTypeParameterBound() throws Exception {", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.CLASS)\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface C {\\n\" + ", "+\t\t\t\t\"\tchar value() default '-';\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"Z.java\",", "+\t\t\t\t\"public class Z {}\",", "+\t\t\t\t\"Y.java\",", "+\t\t\t\t\"public class Y<T> {}\",", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\t<T extends Y<Z [][]@B[]> & Cloneable> void foo(T t) {}\\n\" +", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" +  ", "+\t\t\t\"      #23 @B(\\n\" + ", "+\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "+\t\t\t\"        type parameter index = 0 type parameter bound index = 0\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0), ARRAY, ARRAY]\\n\" + ", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}"]}], "num": 41618}