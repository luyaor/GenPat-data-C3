{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a60ad479dbdb11e7600802f511ff9841", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c33c8371c4f9abc38492f57549567eef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "757f19ed428d31dbfa31c00cff42cd33fb3902ce", "commitAfterChange": "a3e5b898cb4a20a395dd36117ef5b31b39ed2b46", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void formatDimensions(TypeReference typeReference, int anchor, int count, boolean spaceBeforeAnnotation)", "signatureAfterChange": "  \tprivate void formatDimensions(TypeReference typeReference, int anchor, int count)", "diff": ["-\tprivate void formatDimensions(TypeReference typeReference, int anchor, int count, boolean spaceBeforeAnnotation) {", "+\tprivate void formatDimensions(TypeReference typeReference, int anchor, int count) {", "-\t\t\t\t\tboolean hadAnnotations = formatInlineAnnotations(annotationsOnDimensions[dimensionIndex], spaceBeforeAnnotation && i == 0);", "+\t\t\t\t\tboolean hadAnnotations = formatInlineAnnotations(annotationsOnDimensions[dimensionIndex], true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3d9c65b76ee492a737cf3761245955", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "ff8e5fb940914306233fc50d1fbabd478d3fc2dd", "commitAfterChange": "e97b2b1cf2848f1c6b15e36fe8db0ccf734dca6f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": "\r \r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r", "-\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements, problemRequestor);\r", "+\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements);\r", "-\t\tparser.parseCompilationUnit(this, problemRequestor != null);\r", "+\t\tparser.parseCompilationUnit(this, false);\r"]}], "num": 20753}