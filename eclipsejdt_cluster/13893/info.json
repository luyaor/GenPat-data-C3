{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54dc9665c2d0f70d81a3f64a798b16ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f3e0e94d88f73e699f0cb46819df39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 130, "signatureBeforeChange": " public void testTypeReferenceAsSingleNameReference() throws CoreException", "signatureAfterChange": " public void testTypeReferenceAsSingleNameReference() throws CoreException", "diff": ["-\t\t\"src/TypeReferenceAsSingleNameReference.java TypeReferenceAsSingleNameReference.hasReference() -> void [TypeReferenceAsSingleNameReference]\\n\" +", "-\t\t\"src/TypeReferenceAsSingleNameReference.java TypeReferenceAsSingleNameReference.hasReference() -> void [TypeReferenceAsSingleNameReference]\",", "+\t\t\"src/TypeReferenceAsSingleNameReference.java void TypeReferenceAsSingleNameReference.hasReference() [TypeReferenceAsSingleNameReference]\\n\" + ", "+\t\t\"src/TypeReferenceAsSingleNameReference.java void TypeReferenceAsSingleNameReference.hasReference() [TypeReferenceAsSingleNameReference]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a6171cc5444915d7f3d0242ac6d7679", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Receiver.java", "commitBeforeChange": "e0956e75ff6cb3066016adc9dae90f9c1534dda4", "commitAfterChange": "4c2bd5433955f4a987d71f9fd88510a6a9140d4f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Receiver(char[] name, long posNom, TypeReference typeReference, TypeReference qualifyingTypeReference, int modifiers)", "signatureAfterChange": " \tpublic Receiver(char[] name, long posNom, TypeReference typeReference, NameReference qualifyingName, int modifiers)", "diff": ["-\tTypeReference qualifyingTypeReference;", "-\tpublic Receiver(char[] name, long posNom, TypeReference typeReference, TypeReference qualifyingTypeReference, int modifiers) {", "-\t\tsuper(qualifyingTypeReference == null ? name : CharOperation.concatWith(qualifyingTypeReference.getTypeName(), name, '.'), posNom, typeReference, modifiers);", "-\t\tthis.qualifyingTypeReference = qualifyingTypeReference;", "+\tNameReference qualifyingName;", "+\tpublic Receiver(char[] name, long posNom, TypeReference typeReference, NameReference qualifyingName, int modifiers) {", "+\t\tsuper(name, posNom, typeReference, modifiers);", "+\t\tthis.qualifyingName = qualifyingName;"]}], "num": 13893}