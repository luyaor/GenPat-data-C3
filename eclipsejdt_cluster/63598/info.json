{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "277c70af72ca7bf248a1f344be0f29dc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec0d47b0edcae8c541984ce21552206", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "a9418855905ec3893c6b4d120dab4313f397185e", "commitAfterChange": "57b4d27e30475beb9493c429d9900b65333bbe6c", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "signatureAfterChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "diff": ["-\t\t// get preferences set to their default", "-\t\tif (inheritJavaCoreOptions){", "-\t\t\tString[] defaultPropertyNames = preferences.defaultPropertyNames();", "-\t\t\tfor (int i = 0; i < defaultPropertyNames.length; i++){", "-\t\t\t\tString propertyName = defaultPropertyNames[i];", "-\t\t\t\tif (optionNames.contains(propertyName)){", "-\t\t\t\t\toptions.put(propertyName, preferences.getDefaultString(propertyName).trim());", "-\t\t\t\t}", "-\t\t\t}\t\t", "-\t\t}", "+\t\t// project cannot hold custom preferences set to their default, as it uses CUSTOM_DEFAULT_OPTION_VALUE", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "449bf7a44b22fdd6a32b7d0848d8a24a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void setProperty(String propertyName, Object data)", "signatureAfterChange": " \tpublic void setProperty(String propertyName, Object data)", "diff": ["-\t\tif (property1 == null) {", "+\t\tif (this.property1 == null) {", "-\t\t\tproperty1 = propertyName;", "-\t\t\tproperty2 = data;", "+\t\t\tthis.property1 = propertyName;", "+\t\t\tthis.property2 = data;", "-\t\tif (property1 instanceof String) {", "+\t\tif (this.property1 instanceof String) {", "-\t\t\tif (propertyName.equals(property1)) {", "+\t\t\tif (propertyName.equals(this.property1)) {", "-\t\t\t\tproperty2 = data;", "+\t\t\t\tthis.property2 = data;", "-\t\t\t\t\tproperty1 = null;", "-\t\t\t\t\tproperty2 = null;", "+\t\t\t\t\tthis.property1 = null;", "+\t\t\t\t\tthis.property2 = null;", "-\t\t\tm.put(property1, property2);", "+\t\t\tm.put(this.property1, this.property2);", "-\t\t\tproperty1 = m;", "-\t\t\tproperty2 = null;", "+\t\t\tthis.property1 = m;", "+\t\t\tthis.property2 = null;", "-\t\tHashMap m = (HashMap) property1;", "+\t\tHashMap m = (HashMap) this.property1;", "-\t\t\t\tproperty1 = entries[0].getKey();", "-\t\t\t\tproperty2 = entries[0].getValue();", "+\t\t\t\tthis.property1 = entries[0].getKey();", "+\t\t\t\tthis.property2 = entries[0].getValue();"]}], "num": 63598}