{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5963e3e8d3e0a3a454c739d7a4a7185", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a41b3cac52f214648d7ef317cc5a9da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected boolean mustResolve()", "signatureAfterChange": " protected boolean mustResolve()", "diff": ["-}", "-\tif (declaringQualification != null) return true;", "+\tif (this.declaringQualification != null) return true;", "-\tif (parameterSimpleNames != null)", "-\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++)", "-\t\t\tif (parameterQualifications[i] != null) return true;", "+\tif (this.parameterSimpleNames != null)", "+\t\tfor (int i = 0, max = this.parameterSimpleNames.length; i < max; i++)", "+\t\t\tif (this.parameterQualifications[i] != null) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb715d49cef1f550a625da52668bd353", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/LongCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private void rehash()", "signatureAfterChange": " private void rehash()", "diff": ["-\tLongCache newHashtable = new LongCache(keyTable.length * 2);", "-\tfor (int i = keyTable.length; --i >= 0;) {", "-\t\tlong key = keyTable[i];", "-\t\tint value = valueTable[i];", "+\tLongCache newHashtable = new LongCache(this.keyTable.length * 2);", "+\tfor (int i = this.keyTable.length; --i >= 0;) {", "+\t\tlong key = this.keyTable[i];", "+\t\tint value = this.valueTable[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfd32e0b87bb15c5ba6a304ef82cbe23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void buildTypeVariables()", "signatureAfterChange": " \t \tprivate void buildTypeVariables()", "diff": ["-\t    SourceTypeBinding sourceType = referenceContext.binding;", "-\t\tTypeParameter[] typeParameters = referenceContext.typeParameters;", "+\t    SourceTypeBinding sourceType = this.referenceContext.binding;", "+\t\tTypeParameter[] typeParameters = this.referenceContext.typeParameters;", "-\t\tif (sourceType.id == T_JavaLangObject) { // handle the case of redefining java.lang.Object up front", "-\t\t\tproblemReporter().objectCannotBeGeneric(referenceContext);", "+\t\tif (sourceType.id == TypeIds.T_JavaLangObject) { // handle the case of redefining java.lang.Object up front", "+\t\t\tproblemReporter().objectCannotBeGeneric(this.referenceContext);"]}], "num": 54973}