{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9defe61e2031ebd1e8fb48b45f4cefce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "020763a0acb5bdd3cdea1138584256d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "719b4eadabe80b88c9e14994643f794ae2bf28c2", "commitAfterChange": "1946967a9e32c7d85b297d2bebdf975f6bbc96fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "signatureAfterChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "diff": ["-\t\t\t\t\t\t\t\tif (expressions[i].constant == Constant.NotAConstant) {", "+\t\t\t\t\t\t\t\tExpression expression = expressions[i];", "+\t\t\t\t\t\t\t\tif (expression.resolvedType == null) continue; // fault-tolerance", "+\t\t\t\t\t\t\t\tif (expression.constant == Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10504da8bb453940dc84a6561853e89b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "043e609336cbc27212f5810aa261a7993358f6d7", "commitAfterChange": "f1006ce96fe3697bd4f5a0329b1ba603b3249cb5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "signatureAfterChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "diff": ["-\t\t\t\t\t\t\t\tif (expressions[i].constant == Constant.NotAConstant) {", "+\t\t\t\t\t\t\t\tExpression expression = expressions[i];", "+\t\t\t\t\t\t\t\tif (expression.resolvedType == null) continue; // fault-tolerance", "+\t\t\t\t\t\t\t\tif (expression.constant == Constant.NotAConstant) {"]}], "num": 1517}