{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "285aa246267f61aed39c1be890a382fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f90f8b99953b0e68641fabf71d2a114", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "e5e6f9097f2c3bf7294bd658643d6be9f7aaa5ef", "commitAfterChange": "d00bc48524f3df289951f11fca95cb39820be47f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": "\r public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\tint pc = codeStream.position;\r", "-\t\tif (constant.booleanValue() == true) {\r", "-\t\t\t// constant == true\r", "-\t\t\tif (valueRequired) {\r", "-\t\t\t\tif (falseLabel == null) {\r", "-\t\t\t\t\t// implicit falling through the FALSE case\r", "-\t\t\t\t\tif (trueLabel != null) {\r", "-\t\t\t\t\t\tcodeStream.goto_(trueLabel);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\t// constant == false\r", "-\t\t\tif (valueRequired) {\r", "-\t\t\t\tif (falseLabel != null) {\r", "-\t\t\t\t\t// implicit falling through the TRUE case\r", "-\t\t\t\t\tif (trueLabel == null) {\r", "-\t\t\t\t\t\tcodeStream.goto_(falseLabel);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\tsuper.generateOptimizedBoolean(currentScope, codeStream, trueLabel, falseLabel, valueRequired);\r", "+\tint pc = codeStream.position;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155d916f7f02db9f446b2075d3542388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "e5e6f9097f2c3bf7294bd658643d6be9f7aaa5ef", "commitAfterChange": "d00bc48524f3df289951f11fca95cb39820be47f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": "\r public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\tint pc = codeStream.position;\r", "-\t\tif (constant.booleanValue() == true) {\r", "-\t\t\t// constant == true\r", "-\t\t\tif (valueRequired) {\r", "-\t\t\t\tif (falseLabel == null) {\r", "-\t\t\t\t\t// implicit falling through the FALSE case\r", "-\t\t\t\t\tif (trueLabel != null) {\r", "-\t\t\t\t\t\tcodeStream.goto_(trueLabel);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\tif (valueRequired) {\r", "-\t\t\t\tif (falseLabel != null) {\r", "-\t\t\t\t\t// implicit falling through the TRUE case\r", "-\t\t\t\t\tif (trueLabel == null) {\r", "-\t\t\t\t\t\tcodeStream.goto_(falseLabel);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\tsuper.generateOptimizedBoolean(currentScope, codeStream, trueLabel, falseLabel, valueRequired);\r"]}], "num": 28378}