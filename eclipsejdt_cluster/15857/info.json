{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbf449dcc7031f31b1cb6481ca0cd58b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45dd2cc862e74691926d8fd7a3746790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void test_nonnull_return_011()", "signatureAfterChange": " public void test_nonnull_return_011()", "diff": ["-\t\t\"Null comparison always yields false: The variable dubious is specified as @NonNull\\n\" +", "+\t\t((this.complianceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t? \"Null comparison always yields false: The variable dubious is specified as @NonNull\\n\"", "+\t\t\t: \"Redundant null check: comparing '@NonNull Object' against null\\n\" ) +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb1839f3c0caf1580f7f0b2a79c2a50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7ceb7b86e5d2c6d0639c543a0b8998dc4ed1502e", "commitAfterChange": "9a7973aead32a6f88b27fa3f47ab00d5a6b3a410", "methodNumberBeforeChange": 986, "methodNumberAfterChange": 986, "signatureBeforeChange": " public void test0961()", "signatureAfterChange": " public void test0961()", "diff": ["-\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable>\\n\" +", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "+\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable>\\n\"", "+\t\t:", "+\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable<Comparable<B>>>\\n\"", "+\t\t)+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ac7c714b9ccec16659b6f40242b589", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1666c32b249d36aa9547f4f66f511c5bb00d3d63", "commitAfterChange": "4e6bb96b0e120539a45cc4860f508bf12e097d37", "methodNumberBeforeChange": 986, "methodNumberAfterChange": 986, "signatureBeforeChange": " public void test0961()", "signatureAfterChange": " public void test0961()", "diff": ["-\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable>\\n\" +", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8", "+\t\t? \"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable>\\n\"", "+\t\t: \"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable<Comparable<B>>>\\n\") +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a732f33476685d4189b22fef62e4ed1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test001h()", "signatureAfterChange": " public void test001h()", "diff": ["-\t\t\"Type mismatch: cannot convert from X<Object>.X2<String> to X<String>.X2<String>\\n\" + ", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "+\t\t\"Type mismatch: cannot convert from X<Object>.X2<String> to X<String>.X2<String>\\n\"", "+\t\t:", "+\t\t\"Cannot infer type arguments for X2<>\\n\"", "+\t\t) +"]}], "num": 15857}