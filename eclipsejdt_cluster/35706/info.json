{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f39a4b5889a087a29e45b7306a92b4b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ad4892ea4002a106252985b7df1afc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "a53da0027d2af09b928dca6fa330419b46afa0ca", "commitAfterChange": "792caf681810140ce615d98d3abfdde62639719c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testBinary08()", "signatureAfterChange": " \tpublic void testBinary08()", "diff": ["-\t\t\t\t\t\"    public void nesting(@NonNull Inner i1, @NonNull X1.@Nullable Inner i2) { }\\n\" +", "+\t\t\t\t\t\"    public void nesting(@NonNull Inner i1, X1.@Nullable Inner i2) { }\\n\" +", "-// TODO(stephan): not reported due to Bug 414384 - [1.8] type annotation on abbreviated inner class is not marked as inner type", "-//\t\t\t\t\"----------\\n\" + ", "-//\t\t\t\t\"3. ERROR in Y1.java (at line 8)\\n\" + ", "-//\t\t\t\t\"\tx.nesting(null, null);\\n\" + ", "-//\t\t\t\t\"\t          ^^^^\\n\" + ", "-//\t\t\t\t\"Null type mismatch: required \\'@NonNull X1.Inner\\' but the provided value is null\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in Y1.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tx.nesting(null, null);\\n\" + ", "+\t\t\t\t\"\t          ^^^^\\n\" + ", "+\t\t\t\t\"Null type mismatch: required \\'X1.@NonNull Inner\\' but the provided value is null\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96ddf39963fdea5b3dd216c2a3efec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testBinary05()", "signatureAfterChange": " \tpublic void testBinary05()", "diff": ["+\t// TODO(Stephan) : 3rd error message looks weird. We need to clone and set the bits for allocation expression or otherwise handle.", "-\t\t\t\t\"Null constraint mismatch: The type '@NonNull Object' is not a valid substitute for the type parameter 'S' which is constrained as '@Nullable'\\n\" + ", "+\t\t\t\t\"Null constraint mismatch: The type \\'@NonNull Object\\' is not a valid substitute for the type parameter \\'S\\' which is constrained as \\'@Nullable\\'\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in Y1.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tx.<@NonNull Object>foo(new Object());\\n\" + ", "+\t\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Null type safety (type annotations): The expression of type \\'Object\\' needs unchecked conversion to conform to \\'@NonNull Object\\'\\n\" + "]}], "num": 35706}