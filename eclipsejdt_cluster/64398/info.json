{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e47571279789f1d689629800e425799", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cba9f8480c7e0de727029bdcdf5807b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "2fdd800912ee4f65c51a2ec384533d1146c71af7", "commitAfterChange": "844f82aaef831e55c4827a65ccd98caed0cd08f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tMethodScope initializationScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tMethodScope initializationScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tif (this.binding != null && this.binding.isPrivate() && !this.binding.isPrivateUsed()) {", "-\t\t\tif (!initializationScope.referenceCompilationUnit().compilationResult.hasSyntaxError()) {", "-\t\t\t\tinitializationScope.problemReporter().unusedPrivateField(this);", "+\t\tif (this.binding != null && !this.binding.isUsed()) {", "+\t\t\tif (this.binding.isPrivate() || (this.binding.declaringClass != null && this.binding.declaringClass.isLocalType())) {", "+\t\t\t\tif (!initializationScope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\t\t\t\tinitializationScope.problemReporter().unusedPrivateField(this);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df5d1cfda88787eae83d6acac976629", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "2fdd800912ee4f65c51a2ec384533d1146c71af7", "commitAfterChange": "844f82aaef831e55c4827a65ccd98caed0cd08f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializationContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializationContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tif (this.binding.isPrivate() && !this.binding.isPrivateUsed()) {", "-\t\t\t\tif (!classScope.referenceCompilationUnit().compilationResult.hasSyntaxError()) {", "+\t\t\tif (!this.binding.isUsed() && ", "+\t\t\t\t\t(this.binding.isPrivate() ", "+\t\t\t\t\t\t|| (((this.binding.modifiers & (AccOverriding|AccImplementing)) == 0) && this.binding.declaringClass.isLocalType()))) {", "+\t\t\t\tif (!classScope.referenceCompilationUnit().compilationResult.hasSyntaxError) {"]}], "num": 64398}