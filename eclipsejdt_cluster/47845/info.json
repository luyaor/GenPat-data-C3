{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "685977800b6d11ee95e7c9f28b24b8a1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce8bb0eb23c2c2f871d15f2d3c5f413", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "14842eb62da3e660c575d5193079230a000aa781", "commitAfterChange": "0874cfb2ef67a79a49d909a248c81f1f23dd713a", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "\r \t\r \tpublic Expression convertToExpression(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "signatureAfterChange": "\r \t\r \tpublic Expression convertToExpression(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "diff": ["-\t\t\tvariableDeclarationExpression.setModifiers(localDeclaration.modifiers);\r", "+\t\t\t/**\r", "+\t\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=13233\r", "+\t\t\t * This handles cases where the parser built variables with invalid modifiers.\r", "+\t\t\t * The compilation unit is tagged as having wrong modifiers for the local.\r", "+\t\t\t * Only final is allowed in this case.\r", "+\t\t\t */\r", "+\t\t\ttry {\r", "+\t\t\t\tvariableDeclarationExpression.setModifiers(localDeclaration.modifiers);\r", "+\t\t\t} catch(IllegalArgumentException e) {\r", "+\t\t\t\tvariableDeclarationExpression.setModifiers(localDeclaration.modifiers & Modifier.FINAL);\r", "+\t\t\t\tvariableDeclarationExpression.setFlags(ASTNode.MALFORMED);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "772d8108adb468e8f324472a1940b473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "14842eb62da3e660c575d5193079230a000aa781", "commitAfterChange": "0874cfb2ef67a79a49d909a248c81f1f23dd713a", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r \r \tprivate VariableDeclarationStatement convertToVariableDeclarationStatement(LocalDeclaration localDeclaration)", "signatureAfterChange": "\r \r \tprivate VariableDeclarationStatement convertToVariableDeclarationStatement(LocalDeclaration localDeclaration)", "diff": ["-\t\tvariableDeclarationStatement.setModifiers(localDeclaration.modifiers);\r", "+\t\t/**\r", "+\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=13233\r", "+\t\t * This handles cases where the parser built variables with invalid modifiers.\r", "+\t\t * The compilation unit is tagged as having wrong modifiers for the local.\r", "+\t\t * Only final is allowed in this case.\r", "+\t\t */\r", "+\t\ttry {\r", "+\t\t\tvariableDeclarationStatement.setModifiers(localDeclaration.modifiers);\r", "+\t\t} catch(IllegalArgumentException e) {\r", "+\t\t\tvariableDeclarationStatement.setModifiers(localDeclaration.modifiers & Modifier.FINAL);\r", "+\t\t\tvariableDeclarationStatement.setFlags(ASTNode.MALFORMED);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea2980a912c1b7c5db71b007af4bbc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \t \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\tpublic TypeBinding getTypeBinding(Scope scope) {", "+\tprotected TypeBinding getTypeBinding(Scope scope) {", "-\t\treturn scope.getType(tokens);", "+\t\ttry {", "+\t\t\treturn scope.getType(this.tokens, this.tokens.length);", "+\t\t} catch (AbortCompilation e) {", "+\t\t\te.updateContext(this, scope.referenceCompilationUnit().compilationResult);", "+\t\t\tthrow e;", "+\t\t}"]}], "num": 47845}