{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e87999df09b736c34cfbc7bd0d722b8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1682d34a4d3c10292566e496ed0be715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testBug71279() throws CoreException", "signatureAfterChange": " \tpublic void testBug71279() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b71279/AA.java\",", "-\t\t\t\t\"package b71279;\\n\" + ", "-\t\t\t\t\"public class AA {\\n\" + ", "-\t\t\t\t\"\tUnknown ref;\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t\t);", "-\t\t\tnew SearchEngine().searchDeclarationsOfReferencedTypes(workingCopy, result, null);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"Starting search...\\n\" + ", "-\t\t\t\t\"Done searching.\",", "-\t\t\t\tresult);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b71279/AA.java\",", "+\t\t\t\"package b71279;\\n\" + ", "+\t\t\t\"public class AA {\\n\" + ", "+\t\t\t\"\tUnknown ref;\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t);", "+\t\tnew SearchEngine(workingCopies).searchDeclarationsOfReferencedTypes(workingCopies[0], result, null);", "+\t\tassertSearchResults(", "+\t\t\t\"Starting search...\\n\" + ", "+\t\t\t\"Done searching.\",", "+\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c8e5693daf87411024bcdb0b0f6691", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "commitAfterChange": "882f4a412452cbe6d8e04ad004cc47e303c5c4e3", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic void test0062() throws JavaModelException", "signatureAfterChange": " \tpublic void test0062() throws JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "-\t\t\tASTNode node = buildAST(", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class X<T> {\\n\" +", "-\t\t\t\t\"  /*start*/X<Class>/*end*/ f;\\n\" +", "-\t\t\t\t\"}\",", "-\t\t\t\tworkingCopy);", "-\t\t\tIBinding binding = ((Type) node).resolveBinding();", "-\t\t\tassertBindingKeyEquals(", "-\t\t\t\t\"Lp/X<Ljava/lang/Class;>;\",", "-\t\t\t\tbinding.getKey());", "-\t\t} finally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tthis.workingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "+\t\tASTNode node = buildAST(", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"public class X<T> {\\n\" +", "+\t\t\t\"  /*start*/X<Class>/*end*/ f;\\n\" +", "+\t\t\t\"}\",", "+\t\t\tthis.workingCopy);", "+\t\tIBinding binding = ((Type) node).resolveBinding();", "+\t\tassertBindingKeyEquals(", "+\t\t\t\"Lp/X<Ljava/lang/Class;>;\",", "+\t\t\tbinding.getKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6887dc5fbb42e2359578b321a638200", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "commitAfterChange": "882f4a412452cbe6d8e04ad004cc47e303c5c4e3", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void test0075() throws JavaModelException", "signatureAfterChange": " \tpublic void test0075() throws JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "-\t\t\tASTNode node = buildAST(", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"import java.util.ArrayList;\\n\" +", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"  /*start*/ArrayList<Integer>/*end*/ field;\" +", "-\t\t\t\t\"}\",", "-\t\t\t\tworkingCopy);", "-\t\t\tITypeBinding binding = ((Type) node).resolveBinding();", "-\t\t\tITypeBinding genericType = binding.getGenericType();", "-\t\t\tassertFalse(\"Equals\", binding.isEqualTo(genericType));", "-\t\t} finally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tthis.workingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "+\t\tASTNode node = buildAST(", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"  /*start*/ArrayList<Integer>/*end*/ field;\" +", "+\t\t\t\"}\",", "+\t\t\tthis.workingCopy);", "+\t\tITypeBinding binding = ((Type) node).resolveBinding();", "+\t\tITypeBinding genericType = binding.getTypeDeclaration();", "+\t\tassertFalse(\"Equals\", binding.isEqualTo(genericType));"]}], "num": 21906}