{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dfe5cfd60debe0fda8f08ff126418e3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b1abf66dd655608acfbbd6c3e20d7fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean encloses(IJavaElement element)", "signatureAfterChange": " \tpublic boolean encloses(IJavaElement element)", "diff": ["-\t\t\t\ttry {", "-\t\t\t\t\tthis.initialize();", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "+\t\t\t\tif (this.needsRefresh) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.initialize();", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// the scope is used only to find enclosing projects and jars", "+\t\t\t\t\t// clients is responsible for filtering out elements not in the hierarchy (see SearchEngine)", "+\t\t\t\t\treturn true;", "+\t\t\t\t}\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "529e0db34f981d20d5b79abf64c7c7de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "3cd7725ae10f43738c5f0638f918d9e23da18aa4", "commitAfterChange": "eebfb231fd7e6ee98747d5335cf2b140503ced34", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "signatureAfterChange": " \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "diff": ["-\t\t\t\t} catch (JavaModelException npe) {", "-\t\t\t\t\t// fall back to using owner", "+\t\t\t\t} catch (JavaModelException jme) {", "+\t\t\t\t\tif (jme.isDoesNotExist() && String.valueOf(TypeConstants.PACKAGE_INFO_NAME).equals(typeName)) {", "+\t\t\t\t\t\t// in case of package-info.java the type doesn't exist in the model,", "+\t\t\t\t\t\t// but the CU may still help in order to fetch package level annotations.", "+\t\t\t\t\t\treturn new NameEnvironmentAnswer((ICompilationUnit)answer.type.getParent(), answer.restriction);", "+\t\t\t\t\t}", "+\t\t\t\t\t// no usable answer"]}], "num": 55918}