{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd8382484d0b10f7e6e444f468cd3491", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "150d7df85de71801c8cdcf4b872d2bd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "6665973e9a36116a8cb24b7143317e47a83a98f0", "commitAfterChange": "305123b230bcfd1f733969b7cd2c687b75857ff0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["+\t\tscope.validateNullAnnotation(this.binding.tagBits, this.type, this.annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b77842d819abace3248812be50abf8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "commitAfterChange": "dd10489904dda11a1b9c522a71a4705b9646605e", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate void acceptPendingPolyArguments(BoundSet acceptedResult, TypeBinding[] parameterTypes, boolean isVarArgs)", "signatureAfterChange": "  \tprivate void acceptPendingPolyArguments(BoundSet acceptedResult, TypeBinding[] parameterTypes, boolean isVarArgs)", "diff": ["-\t\t\t\t\tMethodBinding method = invocation.binding(targetType);", "+\t\t\t\t\tMethodBinding method = invocation.binding(targetType, true, this.scope);", "-\t\t\t\t\t\t\t\tASTNode.resolvePolyExpressionArguments(invocation, innerBinding);", "+\t\t\t\t\t\t\t\tASTNode.resolvePolyExpressionArguments(invocation, innerBinding, this.scope);", "+\t\t\t\t} else {", "+\t\t\t\t\texpression.setExpectedType(targetType);", "-\t\t\t\texpression.checkAgainstFinalTargetType(targetType);", "+\t\t\t\texpression.checkAgainstFinalTargetType(targetType, this.scope);"]}], "num": 60638}