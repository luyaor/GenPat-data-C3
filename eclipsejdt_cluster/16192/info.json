{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a751e99a63badab538ed823c4ef10330", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4467e76bb64048bd9e8c9dfade66c79a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 230, "methodNumberAfterChange": 230, "signatureBeforeChange": " \tpublic void test0216() throws JavaModelException", "signatureAfterChange": " \tpublic void test0216() throws JavaModelException", "diff": ["-\t\tString expectedOutput = \"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\\n\" + ", "-\t\t\"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\";", "-\t\tassertProblemsSize(unit, 2, expectedOutput);", "+\t\tString expectedOutput =", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\";", "+\t\tassertProblemsSize(unit, 7, expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46017bde6e9a872b8071f3f3b1a30fee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "3cbc5a17035fd93e630a5ce3a447371924b2eaec", "commitAfterChange": "2fbac062d3f933d7974166e3d20ea9843fdd9750", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testBug199265b() throws JavaModelException", "signatureAfterChange": " public void testBug199265b() throws JavaModelException", "diff": ["-\tformatSource(source);", "+\tformatSource(source,", "+\t\t\"import java.util.List;\\n\" + ", "+\t\t\"import java.util.Set;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"//import java.util.HashMap;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"public class X02 {\\n\" + ", "+\t\t\"}\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c52a17768b7bc2dc0a9644d386d8420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "e370ba439679a26bb04e9b77917c8e22a1b8aa06", "commitAfterChange": "90d481edc9060cc498a8f085b08186108312e37b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments06() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments06() throws CoreException", "diff": ["+\t\t\t/* Results while resolving string pattern with no qualification (currently disabled as it is not comaptible with previous results):", "+\t\t\t*/", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testSingle() [complete(new Exception(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testObject() [complete(new Object(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [complete(new Exception(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testRuntimeException() [complete(new RuntimeException(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testUnbound() [complete(new String(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testExtends() [complete(new Throwable(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testSuper() [complete(new RuntimeException(), gs)] EXACT_MATCH\""]}], "num": 16192}