{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8443c320fc1e5660c43e2cad9a58eb9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8918716bf8da3e49217427cdabd8af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "bc001047b4a82ed71734208a2fa6b751eb7774fc", "commitAfterChange": "2500b3904e1334267970c0209e30fc4f2378bf72", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath)", "signatureAfterChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath)", "diff": ["-\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(path);", "-\t\twhile (rootInfo == null && path.segmentCount() > 0) {", "-\t\t\tpath = path.removeLastSegments(1);", "+\t\tif (ExternalFoldersManager.isInternalPathForExternalFolder(path)) {", "+\t\t\tIResource resource = JavaModel.getWorkspaceTarget(path.uptoSegment(2/*linked folders for external folders are always of size 2*/));", "+\t\t\tif (resource != null)", "+\t\t\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(resource.getLocation());", "+\t\t} else {", "+\t\t\twhile (rootInfo == null && path.segmentCount() > 0) {", "+\t\t\t\tpath = path.removeLastSegments(1);", "+\t\t\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(path);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee32a5737b3c1740f31694e93ebec55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "8e7aabaf6ac0bde89de3fb25bc27d9c9863efed3", "commitAfterChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic void testProcessAnnotationReferences2() throws JavaModelException", "signatureAfterChange": "  \tpublic void testProcessAnnotationReferences2() throws JavaModelException", "diff": ["-\t\t\t\"public class Test extends GeneratedType {}\\n\" //$NON-NLS-1$", "+\t\t\t\"public class Test extends p.GeneratedType {}\\n\" //$NON-NLS-1$", "-\t\t\t\tIFile genedType = result.getFile().getParent().getFile(new Path(\"GeneratedType.java\")); //$NON-NLS-1$", "-\t\t\t\tif (genedType.exists()) return;", "+\t\t\t\tif (!\"Test.java\".equals(result.getFile().getName())) return; //$NON-NLS-1$", "+\t\t\t\tIFile genedType = null;", "-\t\t\t\t\tgenedType.create(new ByteArrayInputStream(\"class GeneratedType {}\".getBytes()), true, null); //$NON-NLS-1$", "+\t\t\t\t\tIFolder genedFolder = result.getFile().getParent().getFolder(new Path(\"p\"));", "+\t\t\t\t\tif (!genedFolder.exists())", "+\t\t\t\t\t\tgenedFolder.create(true, false, null);", "+\t\t\t\t\tgenedType = genedFolder.getFile(new Path(\"GeneratedType.java\")); //$NON-NLS-1$", "+\t\t\t\t\tif (genedType.exists()) return;", "+\t\t\t\t\tgenedType.create(new ByteArrayInputStream(\"package p; public class GeneratedType {}\".getBytes()), true, null); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc7b63c4f0495772805e492979d78eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "94a425e221148886c840b4d545bf87183980be4b", "commitAfterChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  public String toString()", "diff": ["-\t\t\t\tresult.append(this.containerPaths[i]);", "+\t\t\t\tif (ExternalFoldersManager.isInternalPathForExternalFolder(new Path(this.containerPaths[i]))) {", "+\t\t\t\t\tObject target = JavaModel.getWorkspaceTarget(new Path(this.containerPaths[i]));", "+\t\t\t\t\tresult.append(((IFolder) target).getLocation().toOSString());", "+\t\t\t\t} else {", "+\t\t\t\t\tresult.append(this.containerPaths[i]);", "+\t\t\t\t}"]}], "num": 47791}