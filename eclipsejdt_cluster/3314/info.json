{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a3b1d2ca3e520234aab3fc32709bdb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88290923499071a2031e0e7707843c4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "74870b7c7a86b83146785c7015f2ad1d9795c4b8", "commitAfterChange": "1730ac6965de24cdc9f4b897c4a9e1cee30b618d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tvoid buildMethods()", "signatureAfterChange": "  \tvoid buildMethods()", "diff": ["+\t\tboolean hasNativeMethods = false;", "-\t\t\t\t\tif (methodBinding != null) // is null if binding could not be created", "+\t\t\t\t\tif (methodBinding != null) { // is null if binding could not be created", "+\t\t\t\t\t\thasNativeMethods = hasNativeMethods || methodBinding.isNative();", "+\t\t\t\t\t}", "+\t\t\t\t\t\thasNativeMethods = hasNativeMethods || methodBinding.isNative();", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=243917, conservatively tag all methods and fields as", "+\t\t// being in use if there is a native method in the class.", "+\t\tif (hasNativeMethods) {", "+\t\t\tfor (int i = 0; i < methodBindings.length; i++) {", "+\t\t\t\tmethodBindings[i].modifiers |= ExtraCompilerModifiers.AccLocallyUsed;", "+\t\t\t}", "+\t\t\tFieldBinding[] fields = sourceType.fields();", "+\t\t\tfor (int i = 0; i < fields.length; i++) {", "+\t\t\t\tfields[i].modifiers |= ExtraCompilerModifiers.AccLocallyUsed;\t", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984f9d132bde383bf3b1934b131c11af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "bce0dbd9dd489d3038652b337b4b76bb1f2246a4", "commitAfterChange": "f04ae71cc7d18b0e34f184a3124e4f7f58dafcf3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "signatureAfterChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, int filteredBits)", "diff": ["-\tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned) {", "-\t\t// ignore references insing Javadoc comments", "-\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 && !isStrictlyAssigned && field.isOrEnclosedByPrivateType() && !scope.isDefinedInField(field)) {", "-\t\t\t// ignore cases where field is used from inside itself", "-\t\t\tfield.original().modifiers |= ExtraCompilerModifiers.AccLocallyUsed;", "+\tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, int filteredBits) {", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0\t\t\t// ignore references inside Javadoc comments ", "+\t\t\t\t&& (filteredBits & IsStrictlyAssigned) == 0 \t// ignore write access", "+\t\t\t\t&& field.isOrEnclosedByPrivateType() ", "+\t\t\t\t&& !scope.isDefinedInField(field)) \t\t\t\t// ignore cases where field is used from inside itself ", "+\t\t{\t\t", "+\t\t\tif (((filteredBits & IsCompoundAssigned) != 0))", "+\t\t\t\t// used, but usage may not be relevant", "+\t\t\t\tfield.original().compoundUseFlag++;", "+\t\t\telse", "+\t\t\t\tfield.original().modifiers |= ExtraCompilerModifiers.AccLocallyUsed;"]}], "num": 3314}