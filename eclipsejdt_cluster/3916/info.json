{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc83c246fd98636f72f497636b9ee487", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bed8fd6bdcc01c870da2be5b2c4f422", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath)", "signatureAfterChange": " public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath)", "diff": ["-\t\t\t\tIJavaProject otherProject = allProjects[i];", "-\t\t\t\tIClasspathEntry[] entries = otherProject.getResolvedClasspath(true);", "+\t\t\t\tJavaProject otherProject = (JavaProject) allProjects[i];", "+\t\t\t\tIClasspathEntry[] entries = otherProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ddf8b25fb6dfb6852631e889e27810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "signatureAfterChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "diff": ["-\t\t\t\tIJavaProject project = projects[i];", "-\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);", "+\t\t\t\tJavaProject project = (JavaProject) projects[i];", "+\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc56051fcdf0f5ba685ded9c83e25d70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "daafb287dc48fb6dcee0d71671e3685e81e9b8c7", "commitAfterChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tIJavaProject affectedProject = affectedProjects[i];", "+\t\t\tJavaProject affectedProject = (JavaProject) affectedProjects[i];", "-\t\t\toldResolvedPaths[i] = affectedProject.getResolvedClasspath(true);", "+\t\t\toldResolvedPaths[i] = affectedProject.getResolvedClasspath(true/*ignore ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);"]}], "num": 3916}