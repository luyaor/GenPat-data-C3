{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecb0ebb5cce28e30f9daca8dee93b7ba", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3574b393ab89ada0c70db75f48b8c60e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void testTypeReferenceInQualifiedNameReference() throws CoreException", "signatureAfterChange": " public void testTypeReference13() throws CoreException", "diff": ["- */", "-public void testTypeReferenceInQualifiedNameReference() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"A.java\").getType(\"A\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/Test.java void Test.main(String[]) [p.A]\\n\" + ", "-\t\t\"src/Test.java void Test.main(String[]) [p.A]\\n\" + ", "-\t\t\"src/p/A.java void p.A.foo() [A]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference13() throws CoreException { // was testTypeReferenceInQualifiedNameReference", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"A.java\").getType(\"A\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/Test.java void Test.main(String[]) [p.A]\\n\" + ", "+\t\t\"src/Test.java void Test.main(String[]) [p.A]\\n\" + ", "+\t\t\"src/p/A.java void p.A.foo() [A]\",", "+\t\tresultCollector);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7f476597279bc9fa06102cf77af272", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 165, "signatureBeforeChange": " public void testTypeReferenceInArray() throws CoreException", "signatureAfterChange": " public void testTypeReference21() throws CoreException", "diff": ["-public void testTypeReferenceInArray() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"TypeReferenceInArray\", \"A.java\").getType(\"A\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.a [A]\\n\" +", "-\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.b [TypeReferenceInArray.A]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference21() throws CoreException { // was testTypeReferenceInArray", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"TypeReferenceInArray\", \"A.java\").getType(\"A\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.a [A]\\n\" +", "+\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.b [TypeReferenceInArray.A]\",", "+\t\tresultCollector);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fec9c1ee346c4e367f21e780a423585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void testSimpleDeclarationsOfSentMessages() throws CoreException", "signatureAfterChange": " public void testDeclarationsOfSentMessages01() throws CoreException", "diff": ["+ */", "+public void testDeclarationsOfSentMessages01() throws CoreException { // was testSimpleDeclarationsOfSentMessages", "+\tICompilationUnit cu = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"Test.java\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearchDeclarationsOfSentMessages(", "+\t\tcu, ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/p/X.java void p.X.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "+\t\t\"src/p/Y.java void p.Y.bar() [bar()]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "+\t\t\"src/p/A.java void p.A.foo(int, String, X) [foo()]\",", "+\t\tresultCollector);", "+}", "- */", "-public void testSimpleDeclarationsOfSentMessages() throws CoreException {", "-\tICompilationUnit cu = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"Test.java\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearchDeclarationsOfSentMessages(", "-\t\tcu, ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/p/X.java void p.X.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "-\t\t\"src/p/Y.java void p.Y.bar() [bar()]\\n\" + ", "-\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "-\t\t\"src/p/A.java void p.A.foo(int, String, X) [foo()]\",", "-\t\tresultCollector);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1ee9a49ee5c6a00ce7ee3c2575255f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 161, "signatureBeforeChange": " public void testSimpleTypeReference() throws CoreException", "signatureAfterChange": " public void testTypeReference17() throws CoreException", "diff": ["- */", "-public void testSimpleTypeReference() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/p/A.java p.A.x [X]\\n\" + ", "-\t\t\"src/p/A.java p.A(X) [X]\\n\" + ", "-\t\t\"src/p/A.java void p.A.foo(int, String, X) [X]\\n\" + ", "-\t\t\"src/p/X.java p.X() [X]\\n\" + ", "-\t\t\"src/p/X.java void p.X.foo(int, String, X) [X]\\n\" + ", "-\t\t\"src/p/Y.java p.Y [X]\\n\" + ", "-\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [X]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference17() throws CoreException { // was testTypeReferenceNotInClasspath", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/p/A.java p.A.x [X]\\n\" + ", "+\t\t\"src/p/A.java p.A(X) [X]\\n\" + ", "+\t\t\"src/p/A.java void p.A.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/X.java p.X() [X]\\n\" + ", "+\t\t\"src/p/X.java void p.X.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/Y.java p.Y [X]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [X]\",", "+\t\tresultCollector);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "addfee11fbf944e898a82a58c08081b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 164, "signatureBeforeChange": " public void testTypeReferenceInImport2() throws CoreException", "signatureAfterChange": " public void testTypeReference20() throws CoreException", "diff": ["- */", "-public void testTypeReferenceInImport2() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"r6\", \"A.java\").getType(\"A\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/r6/B.java [r6.A]\\n\" +", "-\t\t\"src/r6/B.java [r6.A]\\n\" +", "-\t\t\"src/r6/B.java [r6.A]\\n\" +", "-\t\t\"src/r6/B.java [r6.A]\\n\" +", "-\t\t\"src/r6/B.java [r6.A]\\n\" +", "-\t\t\"src/r6/B.java [r6.A]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference20() throws CoreException { // was testTypeReferenceInImport2", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"r6\", \"A.java\").getType(\"A\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/r6/B.java [r6.A]\\n\" +", "+\t\t\"src/r6/B.java [r6.A]\\n\" +", "+\t\t\"src/r6/B.java [r6.A]\\n\" +", "+\t\t\"src/r6/B.java [r6.A]\\n\" +", "+\t\t\"src/r6/B.java [r6.A]\\n\" +", "+\t\t\"src/r6/B.java [r6.A]\",", "+\t\tresultCollector);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8193c7717ef1786a77fb0c9cf9758dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 152, "signatureBeforeChange": " public void testTypeReferenceInInitializer() throws CoreException", "signatureAfterChange": " public void testTypeReference08() throws CoreException", "diff": ["- */", "-public void testTypeReferenceInInitializer() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"Test.java\").getType(\"Test\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/Test.java Test.static {} [Test]\\n\" +", "-\t\t\"src/Test.java Test.static {} [Test]\\n\" +", "-\t\t\"src/Test.java Test.{} [Test]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference08() throws CoreException { // was testTypeReferenceInInitializer", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"Test.java\").getType(\"Test\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/Test.java Test.static {} [Test]\\n\" +", "+\t\t\"src/Test.java Test.static {} [Test]\\n\" +", "+\t\t\"src/Test.java Test.{} [Test]\",", "+\t\tresultCollector);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59cb0acbd09a2e35442fcd6918d7b8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void testMultipleFieldReference() throws CoreException", "signatureAfterChange": " public void testFieldReference11() throws CoreException", "diff": ["- */", "-public void testMultipleFieldReference() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p5\", \"A.java\").getType(\"A\");", "-\tIField field = type.getField(\"x\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\tfield, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/p5/A.java void p5.A.k() [x]\\n\" + ", "-\t\t\"src/p5/A.java void p5.A.k() [x]\\n\" + ", "-\t\t\"src/p5/A.java void p5.A.k() [x]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testFieldReference11() throws CoreException { // was testMultipleFieldReference", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p5\", \"A.java\").getType(\"A\");", "+\tIField field = type.getField(\"x\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\tfield, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/p5/A.java void p5.A.k() [x]\\n\" + ", "+\t\t\"src/p5/A.java void p5.A.k() [x]\\n\" + ", "+\t\t\"src/p5/A.java void p5.A.k() [x]\",", "+\t\tresultCollector);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fed2f70e53f5c17f76e666e800180e59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 158, "signatureBeforeChange": " public void testTypeReferenceInQualifiedNameReference2() throws CoreException", "signatureAfterChange": " public void testTypeReference14() throws CoreException", "diff": ["- */", "-public void testTypeReferenceInQualifiedNameReference2() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p4\", \"A.java\").getType(\"A\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/p4/A.java p4.A.A [A]\\n\" + ", "-\t\t\"src/p4/A.java p4.X [p4.A]\\n\" + ", "-\t\t\"src/p4/A.java void p4.X.x() [p4.A]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference14() throws CoreException { // was testTypeReferenceInQualifiedNameReference2", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p4\", \"A.java\").getType(\"A\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/p4/A.java p4.A.A [A]\\n\" + ", "+\t\t\"src/p4/A.java p4.X [p4.A]\\n\" + ", "+\t\t\"src/p4/A.java void p4.X.x() [p4.A]\",", "+\t\tresultCollector);", "+}"]}], "num": 70550}