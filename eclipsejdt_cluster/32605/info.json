{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "380bb99736f8c73a0d24be248f11a91e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78549818ab66c10474ba2b1d48b63697", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void acceptType(char[] packageName, char[] typeName, char[] completionName, int completionStart, int completionEnd, int relevance)", "signatureAfterChange": " \tpublic void accept(CompletionProposal proposal)", "diff": ["- */", "-public void acceptType(char[] packageName, char[] typeName, char[] completionName, int completionStart, int completionEnd, int relevance) {", "-\tfElements.addElement(new String(typeName));", "-\tfCompletions.addElement(new String(completionName));", "-\tfRelevances.addElement(String.valueOf(relevance));", "-\tfCompletionStart.addElement(String.valueOf(completionStart));", "-\tfCompletionEnd.addElement(String.valueOf(completionEnd));", "-\tif (fDebug)", "-\t\tSystem.out.println(\"type \" + new String(typeName));", "-}", "+\t}", "+\tpublic void accept(CompletionProposal proposal) {", "+\t\tchar[] typeName = null;", "+\t\tswitch(proposal.getKind()) {", "+\t\t\tcase CompletionProposal.ANONYMOUS_CLASS_DECLARATION :", "+\t\t\t\ttypeName = Signature.getSignatureSimpleName(proposal.getDeclarationSignature());", "+\t\t\t\tfElements.addElement(new String(typeName));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"anonymous type \" + new String(typeName));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.TYPE_REF :", "+\t\t\t\tif((proposal.getFlags() & Flags.AccEnum) != 0) {", "+\t\t\t\t\t", "+\t\t\t\t} else if((proposal.getFlags() & Flags.AccInterface) != 0) {", "+\t\t\t\t\ttypeName = Signature.getSignatureSimpleName(proposal.getSignature());", "+\t\t\t\t\tfElements.addElement(new String(typeName));", "+\t\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\t\tif (fDebug)", "+\t\t\t\t\t\tSystem.out.println(\"Interface \" + new String(typeName));", "+\t\t\t\t} else {", "+\t\t\t\t\ttypeName = Signature.getSignatureSimpleName(proposal.getSignature());", "+\t\t\t\t\tfElements.addElement(new String(typeName));", "+\t\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\t\tif (fDebug) {", "+\t\t\t\t\t\tif(Signature.getTypeSignatureKind(proposal.getSignature()) == Signature.TYPE_VARIABLE_SIGNATURE) {", "+\t\t\t\t\t\t\tSystem.out.println(\"type parameter \" + new String(typeName));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tSystem.out.println(\"Class \" + new String(typeName));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.FIELD_REF :", "+\t\t\t\tfElements.addElement(new String(proposal.getName()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"Field \" + new String(proposal.getName()));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.KEYWORD:", "+\t\t\t\tfElements.addElement(new String(proposal.getName()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"Keyword \" + new String(proposal.getName()));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.LABEL_REF:", "+\t\t\t\tfElements.addElement(new String(proposal.getName()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"Label \" + new String(proposal.getName()));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.LOCAL_VARIABLE_REF:", "+\t\t\t\tfElements.addElement(new String(proposal.getName()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"Local variable \" + new String(proposal.getName()));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.METHOD_REF:", "+\t\t\t\tfElements.addElement(new String(proposal.getName()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"method \" + new String(proposal.getName()));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.METHOD_DECLARATION:", "+\t\t\t\tfElements.addElement(new String(proposal.getName()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"method declaration \" + new String(proposal.getName()));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.PACKAGE_REF:", "+\t\t\t\tfElements.addElement(new String(proposal.getDeclarationSignature()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"package \" + new String(proposal.getDeclarationSignature()));", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase CompletionProposal.VARIABLE_DECLARATION:", "+\t\t\t\tfElements.addElement(new String(proposal.getName()));", "+\t\t\t\tthis.acceptCommon(proposal);", "+\t\t\t\tif (fDebug)", "+\t\t\t\t\tSystem.out.println(\"variable name \" + new String(proposal.getName()));", "+\t\t\t\tbreak;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d959d829e0a62ec5dac3b55f2898e242", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\tsourceType.qualifiedPackageName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.modifiers,", "-\t\t\t\t\t\tthis.startPosition - this.offset, ", "-\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\trelevance);", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\tproposal.setDeclarationSignature(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setSignature(getSignature(sourceType));", "+\t\t\t\t\t\tproposal.setPackageName(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setTypeName(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setCompletion(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setFlags(sourceType.modifiers);", "+\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\tsourceType.qualifiedPackageName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.modifiers,", "-\t\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\trelevance);", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\tproposal.setDeclarationSignature(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setSignature(getSignature(sourceType));", "+\t\t\t\t\t\tproposal.setPackageName(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setTypeName(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setCompletion(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setFlags(sourceType.modifiers | Flags.AccInterface);", "+\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\t\t\t\tpackageName,", "-\t\t\t\t\t\t\t\t\ttypeName,", "-\t\t\t\t\t\t\t\t\tcompletionName,", "-\t\t\t\t\t\t\t\t\trefBinding.modifiers,", "-\t\t\t\t\t\t\t\t\tthis.startPosition - this.offset, ", "-\t\t\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(refBinding));", "+\t\t\t\t\t\t\t\t\tproposal.setPackageName(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeName);", "+\t\t\t\t\t\t\t\t\tproposal.setCompletion(completionName);", "+\t\t\t\t\t\t\t\t\tproposal.setFlags(refBinding.modifiers);", "+\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\t\t\t\tpackageName,", "-\t\t\t\t\t\t\t\t\ttypeName,", "-\t\t\t\t\t\t\t\t\tcompletionName,", "-\t\t\t\t\t\t\t\t\trefBinding.modifiers,", "-\t\t\t\t\t\t\t\t\tthis.startPosition - this.offset, ", "-\t\t\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(refBinding));", "+\t\t\t\t\t\t\t\t\tproposal.setPackageName(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeName);", "+\t\t\t\t\t\t\t\t\tproposal.setCompletion(completionName);", "+\t\t\t\t\t\t\t\t\tproposal.setFlags(refBinding.modifiers | Flags.AccInterface);", "+\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}"]}], "num": 32605}