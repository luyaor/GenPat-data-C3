{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3c78d1d0d61b6832a7346262569fd57", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a77bb6504285206f1062802b79c535d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DOMFinder.java", "commitBeforeChange": "542bc03686c1982d51c01449da7cc4df74fbe14e", "commitAfterChange": "488811f5b30befaaae3f5995fcfa0b0505629e6e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ASTNode search() throws JavaModelException", "signatureAfterChange": "  \tpublic ASTNode search() throws JavaModelException", "diff": ["-\t\tif (this.element instanceof IMember && !(this.element instanceof IInitializer))", "+\t\tif (this.element instanceof IMember && !(this.element instanceof IInitializer)", "+\t\t\t\t&& !(this.element instanceof LambdaMethod) && !(this.element instanceof org.eclipse.jdt.internal.core.LambdaExpression))", "-\t\telse if (this.element instanceof ITypeParameter)", "-\t\t\trange = ((ITypeParameter) this.element).getNameRange();", "+\t\telse if (this.element instanceof ITypeParameter || this.element instanceof ILocalVariable)", "+\t\t\trange = this.element.getNameRange();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334d9bbf29b81cbf0746d45b45c2b3b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "e92ab0eafbe7472576da485243db5aa49da5df74", "commitAfterChange": "a4e58088a1010e10b50ef0d8683567f65215eac1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tint flags, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tint flags, \t\tIProgressMonitor monitor)", "diff": ["-\t\t\t\t// binary member", "+\t\t\t\t// binary member or method argument", "-\t\t\t\t\tString key = ((BinaryMember) element).getKey(true/*open to get resolved info*/);", "+\t\t\t\t\tString key;", "+\t\t\t\t\tif (element instanceof BinaryMember)", "+\t\t\t\t\t\tkey = ((BinaryMember) element).getKey(true/*open to get resolved info*/);", "+\t\t\t\t\telse if (element instanceof LocalVariable)", "+\t\t\t\t\t\tkey = ((LocalVariable) element).getKey(true/*open to get resolved info*/);", "+\t\t\t\t\telse", "+\t\t\t\t\t\tthrow new IllegalArgumentException(element + \" has an unexpected type\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2c9e74e7533ae3a65ecfac794fc04a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateInitializerOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected IJavaElement generateResultHandle()", "signatureAfterChange": " protected IJavaElement generateResultHandle()", "diff": ["-\t\tif (fAnchorElement == null) {", "-\t\t\treturn getType().getInitializer(fNumberOfInitializers);", "+\t\tif (this.anchorElement == null) {", "+\t\t\treturn getType().getInitializer(this.numberOfInitializers);", "-\t\t\t\tif (child.equals(fAnchorElement)) {", "-\t\t\t\t\tif (child .getElementType() == IJavaElement.INITIALIZER && fInsertionPolicy == CreateElementInCUOperation.INSERT_AFTER) {", "+\t\t\t\tif (child.equals(this.anchorElement)) {", "+\t\t\t\t\tif (child .getElementType() == IJavaElement.INITIALIZER && this.insertionPolicy == CreateElementInCUOperation.INSERT_AFTER) {"]}], "num": 16290}