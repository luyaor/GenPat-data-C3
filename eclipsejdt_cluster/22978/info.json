{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2aeea4fd3a6ea341af59b212e68f358", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c01493b6a54f7e26410bdcf609db4686", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "26ecbd70f644b3e526f4a51dee0b94e84d57cade", "commitAfterChange": "63af609b0c4ca15a76568f63423f1cb23d7be92e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ParameterizedMethodBinding(final ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod)", "signatureAfterChange": " \tpublic ParameterizedMethodBinding(final ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod)", "diff": ["+", "+\t\t\t// after substitution transfer nullness information from type annotations:", "+\t\t\tif (parameterizedDeclaringClass.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\t\tlong returnNullBits = this.returnType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\tif (returnNullBits != 0L) {", "+\t\t\t\t\tthis.tagBits &= ~TagBits.AnnotationNullMASK;", "+\t\t\t\t\tthis.tagBits |= returnNullBits;", "+\t\t\t\t}", "+\t\t\t\tint parametersLen = this.parameters.length;", "+\t\t\t\tfor (int i=0; i<parametersLen; i++) {", "+\t\t\t\t\tlong paramTagBits = this.parameters[i].tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\t\tif (paramTagBits != 0) {", "+\t\t\t\t\t\tif (this.parameterNonNullness == null)", "+\t\t\t\t\t\t\tthis.parameterNonNullness = new Boolean[parametersLen];", "+\t\t\t\t\t\tthis.parameterNonNullness[i] = Boolean.valueOf(paramTagBits == TagBits.AnnotationNonNull);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3e257fc3df4de9622780d0a1f1d3b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tReferenceBinding resolve()", "signatureAfterChange": " \tReferenceBinding resolve()", "diff": ["+\t\tlong nullTagBits = this.tagBits & TagBits.AnnotationNullMASK;", "+\t\t", "+\t\t\tlong superNullTagBits = resolveType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\tif (superNullTagBits != 0L) {", "+\t\t\t\tif (nullTagBits == 0L) {", "+\t\t\t\t\tthis.tagBits |= superNullTagBits;", "+\t\t\t\t} else {", "+//\t\t\t\t\tSystem.err.println(\"TODO(stephan): report proper error: conflict binary TypeVariable vs. first bound\");", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t\tlong superNullTagBits = resolveType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\tif (superNullTagBits != 0L) {", "+\t\t\t\t\tif (nullTagBits == 0L) {", "+\t\t\t\t\t\tthis.tagBits |= superNullTagBits;", "+\t\t\t\t\t} else {", "+//\t\t\t\t\t\tSystem.err.println(\"TODO(stephan): report proper error: conflict binary TypeVariable vs. bound \"+i);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 22978}