{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7e33a87fb54f4a665d6937c05abc224", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1d4ddad9360aabbadea1ade8bbb19a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemHandler.java", "commitBeforeChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "commitAfterChange": "829046a361301380cac04e3af6844e4acd156d61", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void handle( \tint problemId, \tString[] problemArguments, \tint elaborationId, \tString[] messageArguments, \tint severity, \tint problemStartPosition, \tint problemEndPosition, \tReferenceContext referenceContext, \tCompilationResult unitResult)", "signatureAfterChange": " public void handle( \tint problemId, \tString[] problemArguments, \tint elaborationId, \tString[] messageArguments, \tint severity, \tint problemStartPosition, \tint problemEndPosition, \tReferenceContext referenceContext, \tCompilationResult unitResult)", "diff": ["-\t\t\trecord(problem, unitResult, referenceContext);", "+\t\t\tboolean mandatory = ((severity & ProblemSeverities.Optional) == 0);", "+\t\t\trecord(problem, unitResult, referenceContext, mandatory);", "-\t\t\t\tif (!referenceContext.hasErrors() && (severity & ProblemSeverities.Optional) != 0 && this.options.suppressOptionalErrors) {", "+\t\t\t\tif (!referenceContext.hasErrors() && !mandatory && this.options.suppressOptionalErrors) {", "-\t\t\trecord(problem, unitResult, referenceContext);", "+\t\t\trecord(problem, unitResult, referenceContext, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6beced1cafca77258430fbdad095fd9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemHandler.java", "commitBeforeChange": "b308074bc5b31f3a5857e47f87565296fbba4a15", "commitAfterChange": "d36a5b020e7b8fc57d912810db0ffb9dd045eb9a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void handle( \tint problemId, \tString[] problemArguments, \tint elaborationId, \tString[] messageArguments, \tint severity, \tint problemStartPosition, \tint problemEndPosition, \tReferenceContext referenceContext, \tCompilationResult unitResult)", "signatureAfterChange": " public void handle( \tint problemId, \tString[] problemArguments, \tint elaborationId, \tString[] messageArguments, \tint severity, \tint problemStartPosition, \tint problemEndPosition, \tReferenceContext referenceContext, \tCompilationResult unitResult)", "diff": ["-\t\t\trecord(problem, unitResult, referenceContext);", "+\t\t\tboolean mandatory = ((severity & ProblemSeverities.Optional) == 0);", "+\t\t\trecord(problem, unitResult, referenceContext, mandatory);", "-\t\t\t\tif (!referenceContext.hasErrors() && (severity & ProblemSeverities.Optional) != 0 && this.options.suppressOptionalErrors) {", "+\t\t\t\tif (!referenceContext.hasErrors() && !mandatory && this.options.suppressOptionalErrors) {", "-\t\t\trecord(problem, unitResult, referenceContext);", "+\t\t\trecord(problem, unitResult, referenceContext, false);"]}], "num": 26302}