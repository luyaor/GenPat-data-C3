{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f6a05069d1c403b84a5b9ace88db2d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bf218eb5f259e2f0e0e3c3a98ecae51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedAnnotationBinding.java", "commitBeforeChange": "5a4b4a5bb82958c7c1b641811ee8d4c999d39c4e", "commitAfterChange": "01507ee98d5beecae71082dd137e782bb5a3bef0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public ReferenceBinding getAnnotationType()", "signatureAfterChange": "  public ReferenceBinding getAnnotationType()", "diff": ["-\t\tthis.type = (ReferenceBinding) BinaryTypeBinding.resolveType(this.type, this.env, false /* no raw conversion for now */);", "-\t\t\t// annotation type are never parameterized", "+\t\tboolean wasToleratingMissingTypeProcessingAnnotations = this.env.mayTolerateMissingType;", "+\t\tthis.env.mayTolerateMissingType = true; // https://bugs.eclipse.org/bugs/show_bug.cgi?id=388042", "+\t\ttry {", "+\t\t\tthis.type = (ReferenceBinding) BinaryTypeBinding.resolveType(this.type, this.env, false /* no raw conversion for now */);", "+\t\t\t\t// annotation types are never parameterized", "+\t\t} finally {", "+\t\t\tthis.env.mayTolerateMissingType = wasToleratingMissingTypeProcessingAnnotations;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef781405f1763d25d900216501577aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedAnnotationBinding.java", "commitBeforeChange": "cd66a204ff48b4f4147347a4e7d0f4b3d5df7f87", "commitAfterChange": "2c31016dddf9aa4fc99eb36c535dd6602745e4be", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public ReferenceBinding getAnnotationType()", "signatureAfterChange": "  public ReferenceBinding getAnnotationType()", "diff": ["-\t\tthis.type = (ReferenceBinding) BinaryTypeBinding.resolveType(this.type, this.env, false /* no raw conversion for now */);", "-\t\t\t// annotation type are never parameterized", "+\t\tboolean wasToleratingMissingTypeProcessingAnnotations = this.env.mayTolerateMissingType;", "+\t\tthis.env.mayTolerateMissingType = true; // https://bugs.eclipse.org/bugs/show_bug.cgi?id=388042", "+\t\ttry {", "+\t\t\tthis.type = (ReferenceBinding) BinaryTypeBinding.resolveType(this.type, this.env, false /* no raw conversion for now */);", "+\t\t\t\t// annotation types are never parameterized", "+\t\t} finally {", "+\t\t\tthis.env.mayTolerateMissingType = wasToleratingMissingTypeProcessingAnnotations;", "+\t\t}"]}], "num": 20777}