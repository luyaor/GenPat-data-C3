{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af635ae97682f9a8ffe409141536525c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e3e6084b5868109a6268f1e164ffea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "signatureAfterChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "diff": ["+\tboolean searchInsideTypes = (this.matchContainer & PatternLocator.CLASS_CONTAINER) != 0;", "-\t\t\tif (level != null && (this.matchContainer & SearchPattern.CLASS) != 0)", "+\t\t\tif (level != null && searchInsideTypes)", "-\t\t\tif (level != null && (this.matchContainer & SearchPattern.CLASS) != 0)", "+\t\t\tif (level != null && searchInsideTypes)", "-\t\t\t\tif (level != null && (this.matchContainer & SearchPattern.CLASS) != 0)", "+\t\t\t\tif (level != null && searchInsideTypes)", "-\t\t\tif (level != null && typeInHierarchy && (this.matchContainer & SearchPattern.CLASS) != 0)", "+\t\t\tif (level != null && typeInHierarchy && searchInsideTypes)", "-\t\t\tif (level != null && typeInHierarchy && (this.matchContainer & SearchPattern.CLASS) != 0)", "+\t\t\tif (level != null && typeInHierarchy && searchInsideTypes)", "-\t\t\tif (level != null && typeInHierarchy && (this.matchContainer & SearchPattern.CLASS) != 0)", "+\t\t\tif (level != null && typeInHierarchy && searchInsideTypes)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5583eeab1110e22dd4c622c8188ff0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\tlong sourceLevel = scope.compilerOptions().sourceLevel;", "+\t\t\tboolean usesTypeAnnotations = scope.environment().usesNullTypeAnnotations();", "-\t\t\t\t\tcurrentMethod.hasNonNullDefaultFor(Binding.DefaultLocationReturnType, sourceLevel >= ClassFileConstants.JDK1_8);", "+\t\t\t\t\tcurrentMethod.hasNonNullDefaultFor(Binding.DefaultLocationReturnType, usesTypeAnnotations);", "-\t\t\t\t\tcurrentMethod.hasNonNullDefaultFor(Binding.DefaultLocationParameter, sourceLevel >= ClassFileConstants.JDK1_8);", "+\t\t\t\t\tcurrentMethod.hasNonNullDefaultFor(Binding.DefaultLocationParameter, usesTypeAnnotations);", "-\t\t\t\t\t\tif (sourceLevel < ClassFileConstants.JDK1_8) {", "+\t\t\t\t\t\tif (!usesTypeAnnotations) {", "-\t\t\t\t\t\tif (sourceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t\t\t\tif (!usesTypeAnnotations)", "-\t\t\t\tif (scope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t\tif (!usesTypeAnnotations)"]}], "num": 36346}