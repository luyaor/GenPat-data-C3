{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74aba41a5c0ac70498c63f4ed727bb4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "697a750fcf1a326c90de4532e6a5a620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tAssignment assignment, \t\tboolean valueRequired)", "signatureAfterChange": "  public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\tpublic void generateAssignment(", "-\t\tBlockScope currentScope,", "-\t\tCodeStream codeStream,", "-\t\tAssignment assignment,", "-\t\tboolean valueRequired) {", "-", "-\t\tint pc = codeStream.position;", "-\t\treceiver.generateCode(currentScope, codeStream, true);", "-\t\tif (receiver instanceof CastExpression\t// ((type[])null)[0]", "-\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){", "-\t\t\tcodeStream.checkcast(receiver.resolvedType); ", "-\t\t}\t", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "-\t\tposition.generateCode(currentScope, codeStream, true);", "-\t\tassignment.expression.generateCode(currentScope, codeStream, true);", "-\t\tcodeStream.arrayAtPut(this.resolvedType.id, valueRequired);", "-\t\tif (valueRequired) {", "-\t\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "-\t\t}", "+public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired) {", "+\tint pc = codeStream.position;", "+\tthis.receiver.generateCode(currentScope, codeStream, true);", "+\tif (this.receiver instanceof CastExpression\t// ((type[])null)[0]", "+\t\t\t&& ((CastExpression)this.receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){", "+\t\tcodeStream.checkcast(this.receiver.resolvedType); ", "+\t}\t", "+\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\tthis.position.generateCode(currentScope, codeStream, true);", "+\tassignment.expression.generateCode(currentScope, codeStream, true);", "+\tcodeStream.arrayAtPut(this.resolvedType.id, valueRequired);", "+\tif (valueRequired) {", "+\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b016ce2a25f3050c4cca1c11e28ffb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "commitAfterChange": "00cae100ff4808e2019f6a4d94df4143c8fabbd0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprivate void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "signatureAfterChange": " \tprivate void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "diff": ["-\t\t\t\t\t\t} else if (JavaModelManager.getJavaModelManager().getJavaModel().findJavaProject(project) != null) {", "+\t\t\t\t\t\t} else if (this.manager.getJavaModel().findJavaProject(project) != null) {", "-\t\t\t\t\t\t\tthis.rootsAreStale = true;", "+\t\t\t\t\t\t\tthis.state.rootsAreStale = true;", "-\t\t\t\t\t\tthis.rootsAreStale = true;", "+\t\t\t\t\t\tthis.state.rootsAreStale = true;", "-\t\t\t\t\t\tthis.rootsAreStale = true;", "+\t\t\t\t\t\tthis.state.rootsAreStale = true;", "-\t\t\t\t\t\tthis.rootsAreStale = true;", "+\t\t\t\t\t\tthis.state.rootsAreStale = true;"]}], "num": 15664}