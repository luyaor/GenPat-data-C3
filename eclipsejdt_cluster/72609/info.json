{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34618282dd3afbca3721e8cfd3ab5071", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "464ed6cb4fd3d6f5b216d584ca12a359", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "71abd877ad821a18101d4f0c04cd015f0a15dbfe", "commitAfterChange": "8245bd73c0aef7bf5f6de5def8941104b56db6f7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public String[] getExceptionTypes() throws JavaModelException", "signatureAfterChange": " public String[] getExceptionTypes() throws JavaModelException", "diff": ["-\tif (fExceptionTypes == null) {", "+\tif (this.exceptionTypes == null) {", "-\t\t\tfExceptionTypes = fgEmptyList;", "+\t\t\tthis.exceptionTypes = NO_TYPES;", "-\t\t\tfExceptionTypes = new String[eTypeNames.length];", "+\t\t\tthis.exceptionTypes = new String[eTypeNames.length];", "-\t\t\t\tfExceptionTypes[j] = new String(convertedName);", "+\t\t\t\tthis.exceptionTypes[j] = new String(convertedName);", "-\treturn fExceptionTypes;", "+\treturn this.exceptionTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75035f2a9f30a46675b86e4dce5bc004", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "71abd877ad821a18101d4f0c04cd015f0a15dbfe", "commitAfterChange": "8245bd73c0aef7bf5f6de5def8941104b56db6f7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public String getReturnType() throws JavaModelException", "signatureAfterChange": " public String getReturnType() throws JavaModelException", "diff": ["-\tif (fReturnType == null) {", "-\t\tString returnType= Signature.getReturnType(new String(info.getMethodDescriptor()));", "-\t\tfReturnType= new String(ClassFile.translatedName(returnType.toCharArray()));", "+\tif (this.returnType == null) {", "+\t\tString returnTypeName= Signature.getReturnType(new String(info.getMethodDescriptor()));", "+\t\tthis.returnType= new String(ClassFile.translatedName(returnTypeName.toCharArray()));", "-\treturn fReturnType;", "+\treturn this.returnType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cccd91d31109e2ba60343abd2f8ff997", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodDeclarationPattern.java", "commitBeforeChange": "8d3a80d6ae4963f77008a085d8594027df9d6302", "commitAfterChange": "b736ca9b5c529e8455312865c769b9a1151265f5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "signatureAfterChange": "\r public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "diff": ["-\t// return type\r", "-\tString returnTypeSignature = Signature.toString(Signature.getReturnType(methodDescriptor));\r", "-\tif (!this.matchesType(this.returnSimpleName, this.returnQualification, returnTypeSignature.toCharArray())) {\r", "-\t\treturn false;\r", "+\r", "+\t// look at return type only if declaring type is not specified\r", "+\tif (this.declaringSimpleName == null) {\r", "+\t\tString returnTypeSignature = Signature.toString(Signature.getReturnType(methodDescriptor));\r", "+\t\tif (!this.matchesType(this.returnSimpleName, this.returnQualification, returnTypeSignature.toCharArray())) {\r", "+\t\t\treturn false;\r", "+\t\t}\r"]}], "num": 72609}