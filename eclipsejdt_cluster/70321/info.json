{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7ab28455c1305ef1a0c7a0bcd1e1722", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5b78c08344d91a6f83a09abb8a8139", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e6ab5b55bdba4e82e64522d7c082b57d2f629183", "commitAfterChange": "a4c0487ebd48cbb834d37062cff552b3c0da52bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\r", "+\tboolean didSpecifySourceLevel = false;\r", "+\t\t\t\r", "+\t\t\tdidSpecifySourceLevel = true;\r", "+\t\t\tif (!didSpecifySourceLevel){\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);\r", "+\t\t\t}\r", "+\t\t\tif (!didSpecifySourceLevel){\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aef02049693f7d340d93bd3493e492f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "44d8236dd4abb494fc297db79d6ea2ed8f0d620e", "commitAfterChange": "da2dbc8ee1c4e3f2d651fde4a074689a00f209fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " boolean areReturnTypesEqual(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean areReturnTypesEqual(MethodBinding one, MethodBinding substituteTwo)", "diff": ["-\t// check for methods from Object", "-\tif (one.declaringClass.id == TypeIds.T_JavaLangObject)", "-\t\treturn substituteTwo.returnType.isCompatibleWith(one.returnType);", "+\tif (one.declaringClass.isClass()) {", "+\t\tif (one.declaringClass.id == TypeIds.T_JavaLangObject)", "+\t\t\treturn substituteTwo.returnType.isCompatibleWith(one.returnType); // interface methods inherit from Object", "+\t\treturn one.returnType.isCompatibleWith(substituteTwo.returnType);", "+\t}", "-\t// methods from classes are always before methods from interfaces", "-\tif (one.declaringClass.isClass() || one.declaringClass.implementsInterface(substituteTwo.declaringClass, true))", "+\t// check for methods from Object, every interface inherits from Object", "+\tif (substituteTwo.declaringClass.id == TypeIds.T_JavaLangObject)", "+\t// both are interfaces, see if they're related", "+\tif (one.declaringClass.implementsInterface(substituteTwo.declaringClass, true))", "+\t\treturn one.returnType.isCompatibleWith(substituteTwo.returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "635e1a59785bf64a43bfd585f56c8b3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "ad94e7c70968c32bc14232e983e71554b9e4e876", "commitAfterChange": "2a5005d0f0faf2e32a9545440516f869ce34bcdd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["+", "+\t\tif (false) { // check that all tests are 1.3 & 1.4 compatible by default (compliance tests must specify which version to use)", "+\t\t\tdefaultOptions.put(", "+\t\t\t\tCompilerOptions.OPTION_Compliance, ", "+\t\t\t\tCompilerOptions.VERSION_1_3);", "+\t\t\tdefaultOptions.put(", "+\t\t\t\tCompilerOptions.OPTION_Source, ", "+\t\t\t\tCompilerOptions.VERSION_1_3);", "+\t\t\tdefaultOptions.put(", "+\t\t\t\tCompilerOptions.OPTION_TargetPlatform, ", "+\t\t\t\tCompilerOptions.VERSION_1_1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6599e5b1d0346f41d4ed6a554a80c49d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/UnresolvedReferenceNameFinder.java", "commitBeforeChange": "1fe69d52230e67687b32b072c6843ac0b930c0b8", "commitAfterChange": "6b2eaccbd1d9579997548e9877abcafa55f36650", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope classScope)", "signatureAfterChange": " \t \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope classScope)", "diff": ["+\t\tif (!constructorDeclaration.isDefaultConstructor && !constructorDeclaration.isClinit()) {", "+\t\t\tremoveLocals(", "+\t\t\t\t\tconstructorDeclaration.arguments,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceStart,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceEnd);", "+\t\t\tremoveLocals(", "+\t\t\t\t\tconstructorDeclaration.statements,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceStart,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceEnd);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f347ff393e63cb0ed2b759cd7893dcdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2023e53bbac2c330e32a3d9731b6b6b7eac687fd", "commitAfterChange": "31634350462d61974f08f918d94943937dad97ef", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": " \t \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\t", "+\t\tboolean contextAccepted = false;", "+\t\t\t\t\t\t\tcontextAccepted = true;", "+\t\t\t\t\tif(!contextAccepted) {", "+\t\t\t\t\t\tcontextAccepted = true;", "+\t\t\t\t\t\tthis.requestor.acceptContext(new CompletionContext());", "+\t\t\t\t\t}", "-\t\t", "+\t\tif(!contextAccepted) {", "+\t\t\tcontextAccepted = true;", "+\t\t\tthis.requestor.acceptContext(new CompletionContext());", "+\t\t}"]}], "num": 70321}