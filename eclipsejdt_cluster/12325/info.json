{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5479f452e61f843058515e22130058a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1499dc9306ca210232307c1da6b5be7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "20c9553c55b67a9c07624bd0b5b35f188a7f1769", "commitAfterChange": "14fb89a0281d6b0089ef94e47420da3d5f85923f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["-\tif (isVirtualInvoke(method, messageSend) && !(messageSend.actualReceiverType instanceof ArrayBinding)) {", "-\t\tdeclaringLevel = resolveLevelAsSubtype(qualifiedPattern, method.declaringClass);", "+\tif (isVirtualInvoke(method, messageSend) && (messageSend.actualReceiverType instanceof ReferenceBinding)) {", "+\t\tReferenceBinding methodReceiverType = (ReferenceBinding) messageSend.actualReceiverType;", "+\t\tdeclaringLevel = resolveLevelAsSubtype(qualifiedPattern, methodReceiverType);", "-\t\t\t\tchar[][] compoundName = method.declaringClass.compoundName;", "-\t\t\t\tfor (int i = 0, max = this.allSuperDeclaringTypeNames.length; i < max; i++)", "-\t\t\t\t\tif (CharOperation.equals(this.allSuperDeclaringTypeNames[i], compoundName))", "-\t\t\t\t\t\treturn methodLevel; // since this is an ACCURATE_MATCH so return the possibly weaker match", "+\t\t\t\tchar[][] compoundName = methodReceiverType.compoundName;", "+\t\t\t\tfor (int i = 0, max = this.allSuperDeclaringTypeNames.length; i < max; i++) {", "+\t\t\t\t\tif (CharOperation.equals(this.allSuperDeclaringTypeNames[i], compoundName)) {", "+\t\t\t\t\t\treturn methodLevel // since this is an ACCURATE_MATCH so return the possibly weaker match", "+\t\t\t\t\t\t\t| POLYMORPHIC_FLAVOR; // this is a polymorphic method => add flavor to returned level", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (methodReceiverType.isInterface()) {", "+\t\t\t\t\t// all methods interface with same name and parameters are potential matches", "+\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=156491", "+\t\t\t\t\treturn INACCURATE_MATCH | POLYMORPHIC_FLAVOR;", "+\t\t\t\t}", "+\t\t}", "+\t\tif ((declaringLevel & FLAVORS_MASK) != 0) {", "+\t\t\t// level got some flavors => return it", "+\t\t\treturn declaringLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84b29288da364aba95d6fc5e619df35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "715524ca244384ae2f7955efd3a5c7d3b2d34d4d", "commitAfterChange": "e5a1dfaef4d73951c29733064699d4bce0d0e9be", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["-\t\t\t\tchar[][] compoundName = methodReceiverType.compoundName;", "-\t\t\t\tfor (int i = 0, max = this.allSuperDeclaringTypeNames.length; i < max; i++) {", "-\t\t\t\t\tif (CharOperation.equals(this.allSuperDeclaringTypeNames[i], compoundName)) {", "-\t\t\t\t\t\treturn methodLevel // since this is an ACCURATE_MATCH so return the possibly weaker match", "-\t\t\t\t\t\t\t| SUPER_INVOCATION_FLAVOR; // this is an overridden method => add flavor to returned level", "-\t\t\t\t\t}", "+\t\t\t\tif (resolveLevelAsSuperInvocation(methodReceiverType)) {", "+\t\t\t\t\tdeclaringLevel = methodLevel // since this is an ACCURATE_MATCH so return the possibly weaker match", "+\t\t\t\t\t\t| SUPER_INVOCATION_FLAVOR; // this is an overridden method => add flavor to returned level", "-\t\t\t\t/* Do not return interfaces potential matches", "-\t\t\t\t * @see \"https://bugs.eclipse.org/bugs/show_bug.cgi?id=157814#c8\"", "-\t\t\t\tif (methodReceiverType.isInterface()) {", "-\t\t\t\t\t// all methods interface with same name and parameters are potential matches", "-\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=156491", "-\t\t\t\t\treturn INACCURATE_MATCH | POLYMORPHIC_FLAVOR;", "-\t\t\t\t}", "-\t\t\t\t*/"]}], "num": 12325}