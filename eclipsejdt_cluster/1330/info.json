{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca213777d3fbcf9f61cf2e1e9fb49eb7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45ebd31782e19472cb19338a1c2c17fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "fd5fe0838929e5227d1524384a37e09b34bfb15e", "commitAfterChange": "35293aa2c53e258bd9815d912253aad7aabdda8f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void checkMethods()", "signatureAfterChange": "  void checkMethods()", "diff": ["+\t\tboolean[] isInherited = new boolean[inheritedLength];", "+\t\tArrays.fill(isInherited, true);", "-\t\t\t\t\tif (isSkippableOrOverridden(inheritedMethod, otherInheritedMethod, skip, isOverridden, j))", "+\t\t\t\t\tif (isSkippableOrOverridden(inheritedMethod, otherInheritedMethod, skip, isOverridden, isInherited, j))", "-\t\t\t\t\tif (isSkippableOrOverridden(otherInheritedMethod, inheritedMethod, skip, isOverridden, i))", "+\t\t\t\t\tif (isSkippableOrOverridden(otherInheritedMethod, inheritedMethod, skip, isOverridden, isInherited, i))", "-\t\t\t\tcheckInheritedMethods(matchingInherited, index + 1, isOverridden); // pass in the length of matching", "+\t\t\t\tcheckInheritedMethods(matchingInherited, index + 1, isOverridden, isInherited); // pass in the length of matching"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9eb82de735cf965d5a8a549149dc88cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "fd5fe0838929e5227d1524384a37e09b34bfb15e", "commitAfterChange": "35293aa2c53e258bd9815d912253aad7aabdda8f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, int idx)", "signatureAfterChange": " boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, boolean[] isInherited, int idx)", "diff": ["-boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, int idx) {", "+boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, boolean[] isInherited, int idx) {", "-\t\tif (isInterfaceMethodImplemented(general, specific, general.declaringClass)) {", "+\t\tif (!specific.isAbstract() && isParameterSubsignature(specific, general)) {", "+\t\t\t// 8.4.8: abstract and default methods are not inherited if a concrete method with a subsignature is defined or inherited in C", "+\t\t\tisInherited[idx] = false;", "+\t\t\treturn true;", "+\t\t} else if (isInterfaceMethodImplemented(general, specific, general.declaringClass)) {"]}], "num": 1330}