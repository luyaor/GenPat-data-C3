{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c87ebc64f098d0760a9575c7d39b2004", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0267468e032651dfb11017b2d50e1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tpublic void test117()", "signatureAfterChange": " \tpublic void test117()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class X <T extends X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>{\\r\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X <T extends X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>{\\n\" + ", "+\t\t\t\"\t                            ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.MX.MMX is a raw type. References to generic type X<T>.MX<MT>.MMX<MMT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X <T extends X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>{\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\r\\n\" + ", "-\t\t\t\"\tnew X<X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>().new MX<Exception>();\\r\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tnew X<X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>().new MX<Exception>();\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 7)\\r\\n\" + ", "-\t\t\t\"\tvoid foo(X<X.MX.MMX>.MX<X>.MMX<X> mx) {\\r\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tnew X<X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>().new MX<Exception>();\\n\" + ", "+\t\t\t\"\t        ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.MX.MMX is a raw type. References to generic type X<T>.MX<MT>.MMX<MMT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tvoid foo(X<X.MX.MMX>.MX<X>.MMX<X> mx) {\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.MX.MMX is a raw type. References to generic type X<T>.MX<MT>.MMX<MMT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tvoid foo(X<X.MX.MMX>.MX<X>.MMX<X> mx) {\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tvoid foo(X<X.MX.MMX>.MX<X>.MMX<X> mx) {\\n\" + ", "+\t\t\t\"\t                        ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tvoid foo(X<X.MX.MMX>.MX<X>.MMX<X> mx) {\\n\" + ", "+\t\t\t\"\t                               ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6bf120ba0a4b9fc9c9d4b424586bf69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 658, "methodNumberAfterChange": 658, "signatureBeforeChange": "\t\t \tpublic void test654()", "signatureAfterChange": "\t\t \tpublic void test654()", "diff": ["+\t        \"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tMap myMap = new HashMap();\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"Type safety: Map is a raw type. References to generic type Map<K,V> should be parameterized\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tMap myMap = new HashMap();\\n\" + ", "+\t\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: HashMap is a raw type. References to generic type HashMap<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tfor (Map.Entry e : myMap.entrySet())\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<K,V>.Entry<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tSet<Map.Entry> set = myMap.entrySet();\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<K,V>.Entry<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tfor (Map.Entry e : set)\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<K,V>.Entry<K,V> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edda0b69c690bfe7af590f6b5b19fd62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "d57293f4f12e1bef48b48f8eb4effbb7e4554bd3", "commitAfterChange": "80133b35a6b0bcde494737060ceebe86e07b8204", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic void test036() throws Exception", "signatureAfterChange": "\r \tpublic void test036() throws Exception", "diff": ["-\t\t\"1. ERROR in X.java (at line 3)\\n\" + \r", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" + \r", "+\t\t\"\t                       ^^^^^^^^^\\n\" + \r", "+\t\t\"Annotation types that do not specify explicit target element types cannot be applied here\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"3. WARNING in X.java (at line 3)\\n\" + \r", "+\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"3. ERROR in X.java (at line 3)\\n\" + \r", "+\t\t\"4. ERROR in X.java (at line 3)\\n\" + \r", "+\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "+\t\t\"\t                                       ^^^^^^^^^\\n\" + \r", "+\t\t\"Annotation types that do not specify explicit target element types cannot be applied here\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"5. ERROR in X.java (at line 3)\\n\" + \r", "+\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "+\t\t\"\t                                                 ^^^^^^\\n\" + \r", "+\t\t\"Annotation types that do not specify explicit target element types cannot be applied here\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"6. WARNING in X.java (at line 3)\\n\" + \r", "-\t\t\"4. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"7. ERROR in X.java (at line 3)\\n\" + \r", "+\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "+\t\t\"\t                                                              ^^^^^^^^^\\n\" + \r", "+\t\t\"Annotation types that do not specify explicit target element types cannot be applied here\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"8. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"5. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"9. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"6. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"10. ERROR in X.java (at line 4)\\n\" + \r"]}], "num": 47052}