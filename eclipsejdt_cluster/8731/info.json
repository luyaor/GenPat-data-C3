{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3489e3f4d8155cf60afdd6e2cd3acbd3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de91965fc094ff51f15a19cbb43e6c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "001f75f4d8692ca1d05f0c725e4b022afb3b95dd", "commitAfterChange": "ef7e20bb1acbd4fc7c64e61a571eb77e57d9f7cf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void printModifiers()", "signatureAfterChange": "  \tpublic void printModifiers()", "diff": ["-\t\t\t\t\t\tthis.print(this.scanner.getRawTokenSource(), this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition(), !isFirstModifier);", "+\t\t\t\t\t\tthis.print(this.scanner.getRawTokenSource(), this.scanner.getCurrentTokenStartPosition(), !isFirstModifier);", "-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource(), this.scanner.getCurrentTokenStartPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4728a8854d8d8d251f0f338e817ac6b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void testBug80257() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug80257() throws JavaModelException", "diff": ["-\t\t\tassertTrue(seeRef.toString()+\" should have a generic type binding\", typeBinding.isGenericType());", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=209936", "+\t\t\t// only have RawTypeBinding in Javadocs", "+\t\t\tassertFalse(seeRef.toString()+\" should NOT have a generic type binding\", typeBinding.isGenericType());", "-\t\t\tassertFalse(seeRef.toString()+\" should NOT have a raw type binding\", typeBinding.isRawType());", "+\t\t\tassertTrue(seeRef.toString()+\" should have a raw type binding\", typeBinding.isRawType());", "-\t\t\tassertTrue(linkRef.toString()+\" should have a generic type binding\", typeBinding.isGenericType());", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=209936", "+\t\t\t// only have RawTypeBinding in Javadocs", "+\t\t\tassertFalse(linkRef.toString()+\" should NOT have a generic type binding\", typeBinding.isGenericType());", "-\t\t\tassertFalse(linkRef.toString()+\" should NOT have a raw type binding\", typeBinding.isRawType());", "+\t\t\tassertTrue(linkRef.toString()+\" should have a raw type binding\", typeBinding.isRawType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ad9d04fcc67880e6f04cec21a2136f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "89ecdabb7bbf2a96d3a2c49d89d84298781fb994", "commitAfterChange": "6ec2bf68626c3baaf2de76ad471eae21612974d2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public boolean checkAndReportBracketAnomalies(ProblemReporter problemReporter)", "signatureAfterChange": " public boolean checkAndReportBracketAnomalies(ProblemReporter problemReporter)", "diff": ["-\t\t\t\t\t\tisWhiteSpace = Scanner.isWhitespace(scanner.currentCharacter);", "+\t\t\t\t\t\tisWhiteSpace = CharOperation.isWhitespace(scanner.currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1d13fc49bb65f0280ab214a698a0216", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "ed946ccd4c40fd03fb87770eaaaa24036f629ae3", "commitAfterChange": "425b0c5314087893896fa849d0ee8761b973ef60", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-\t\t\tif (!memento.hasMoreTokens() || (token = memento.nextToken()) != MementoTokenizer.LAMBDA_METHOD) ", "-\t\t\t\treturn this;", "+\t\t\tif (!memento.hasMoreTokens() || (token = memento.nextToken()) != MementoTokenizer.LAMBDA_METHOD) ", "+\t\t\t\treturn expression;"]}], "num": 8731}