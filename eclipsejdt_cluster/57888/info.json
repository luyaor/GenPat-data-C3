{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db75e821c694c669c06e0326d4901205", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f8dfa3ca90017b3a356ec8042bdfc38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "dee658b9081a58fda5dde28cf93d4ce67448b764", "commitAfterChange": "f041a95e804fa0b26cd4f55b03c8572e9e742dad", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic boolean visit(LambdaExpression node)", "signatureAfterChange": " \tpublic boolean visit(LambdaExpression node)", "diff": ["-\t */", "-\tpublic boolean visit(LambdaExpression node) {", "-\t\tboolean hasParentheses = node.hasParentheses();", "-\t\tif (hasParentheses)", "-\t\t\tthis.buffer.append('(');", "-\t\tIterator it = node.parameters().iterator();", "-\t\tboolean hasNext = it.hasNext();", "-\t\twhile (hasNext) {", "-\t\t\tVariableDeclaration  variableDeclaration = (VariableDeclaration) it.next();", "-\t\t\tvariableDeclaration.accept(this);", "-\t\t\tif ((hasNext = it.hasNext()) == true)", "-\t\t\t\tthis.buffer.append(',');", "-\t\t}", "-\t\tif (hasParentheses) ", "-\t\t\tthis.buffer.append(')');\t", "-\t\tthis.buffer.append(\" -> \"); //$NON-NLS-1$", "-\t\tnode.getBody().accept(this);", "-\t\treturn false;", "-\t}", "+\t */", "+\tpublic boolean visit(LambdaExpression node) {", "+\t\tboolean hasParentheses = node.hasParentheses();", "+\t\tif (hasParentheses)", "+\t\t\tthis.buffer.append('(');", "+\t\tfor (Iterator it = node.parameters().iterator(); it.hasNext(); ) {", "+\t\t\tVariableDeclaration v = (VariableDeclaration) it.next();", "+\t\t\tv.accept(this);", "+\t\t\tif (it.hasNext()) {", "+\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tif (hasParentheses)", "+\t\t\tthis.buffer.append(')');", "+\t\tthis.buffer.append(\" -> \"); //$NON-NLS-1$", "+\t\tnode.getBody().accept(this);", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b480c768def6b2fd37711eb507e8ff77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\tprintModifiers(node.getModifiers());", "+\t\tif (node.getAST().API_LEVEL == AST.LEVEL_2_0) {", "+\t\t\tprintModifiers(node.getModifiers());", "+\t\t}", "+\t\tif (node.getAST().API_LEVEL >= AST.LEVEL_3_0) {", "+\t\t\tprintModifiers(node.modifiers());", "+\t\t\tif (!node.typeParameters().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeParameters().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tTypeParameter t = (TypeParameter) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "-\t\t\tnode.getReturnType().accept(this);", "+\t\t\tif (node.getAST().API_LEVEL == AST.LEVEL_2_0) {", "+\t\t\t\tnode.getReturnType().accept(this);", "+\t\t\t} else {", "+\t\t\t\tif (node.getReturnType2() != null) {", "+\t\t\t\t\tnode.getReturnType2().accept(this);", "+\t\t\t\t} else {", "+\t\t\t\t\t// methods really ought to have a return type", "+\t\t\t\t\tthis.buffer.append(\"void\");//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 57888}