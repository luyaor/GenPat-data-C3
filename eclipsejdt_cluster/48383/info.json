{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a934df88516b918127db4ad6190a06f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c25894fcee047f0ba02fa81a1ebd07af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "01c0777b298a5c62a2819ec93e382b1ab9650906", "commitAfterChange": "f58d2dbeb8fe5ca58dc0a3fee57b3d7a41711711", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public Index[] getIndexes(IProgressMonitor progressMonitor)", "signatureAfterChange": " public Index[] getIndexes(IProgressMonitor progressMonitor)", "diff": ["-\t\tIndex index = indexManager.getIndex(containerPath, indexLocations[i].toOSString(), true /*reuse index file*/, false /*do not create if none*/);", "-\t\tif (index != null)", "-\t\t\tindexes[count++] = index; // only consider indexes which are ready", "+\t\tif (containerPath != null) { // sanity check", "+\t\t\tIndex index = indexManager.getIndex(containerPath, indexLocation, true /*reuse index file*/, false /*do not create if none*/);", "+\t\t\tif (index != null)", "+\t\t\t\tindexes[count++] = index; // only consider indexes which are ready", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0a9c191620f47dab6b199f99abd609e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "4af63c78a97854459ffdb3bdd8ea245bbfdb48a7", "commitAfterChange": "65ffd6af475a5dd1d05513e0b2c31d691bc9f971", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public Index[] getIndexes(IProgressMonitor progressMonitor)", "signatureAfterChange": " public Index[] getIndexes(IProgressMonitor progressMonitor)", "diff": ["-\t\tIndex index = indexManager.getIndex(null/*ignored since do not create*/, indexLocations[i].toOSString(), true /*reuse index file*/, false /*do not create if none*/);", "+\t\tString indexLocation = indexLocations[i].toOSString();", "+\t\tIPath containerPath = (IPath) indexManager.indexLocations.keyForValue(indexLocation);", "+\t\tIndex index = indexManager.getIndex(containerPath, indexLocations[i].toOSString(), true /*reuse index file*/, false /*do not create if none*/);"]}], "num": 48383}