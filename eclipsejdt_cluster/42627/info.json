{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a93c806b43e2f6f2f1cfed9b4f18649b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26bd84b07efbb97801abc15e37d54a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "122aaead4e358f6ebb2c21aa961cc53294d2209d", "commitAfterChange": "dad14e26b600f99744a420507cc556dc0f0ff73b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected IType lookupBinaryHandle(IBinaryType typeInfo)", "signatureAfterChange": " \tprotected IType lookupBinaryHandle(IBinaryType typeInfo)", "diff": ["-\t\treturn this.nameLookup.findType(qualifiedName, false, flag);", "+\t\treturn this.nameLookup.findType(qualifiedName,", "+\t\t\tfalse,", "+\t\t\tflag,", "+\t\t\ttrue/* consider secondary types */,", "+\t\t\tfalse/* do NOT wait for indexes */,", "+\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a60d4fe49700fc554d5913510a8b53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tIType findType(String packageName, String typeQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tIType findType(String packageName, String typeQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\t\treturn lookup.findType(", "+\t\tNameLookup.Answer answer = lookup.findType(", "+\t\t\tfalse/*don't check restrictions*/,", "+\t\treturn answer == null ? null : answer.type;"]}], "num": 42627}