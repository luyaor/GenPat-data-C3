{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "519bf70571da0da484c8fe8eac8e249d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e98c799575c5afbdfc16a242d44c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "f963317eb29ffe4dba07b023619d08ff06cca487", "commitAfterChange": "ebb9d095edde50982cd92db1efc7e45919716d7a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\tMethodBinding binding = ((AbstractMethodDeclaration) scope.referenceContext()).binding;", "-\t\tif (binding != null) {", "-\t\t\tTypeDeclaration typeDeclaration = scope.referenceType();", "-\t\t\ttypeDeclaration.binding.resolveTypesFor(binding);", "-\t\t\tif (argument.binding != null) {", "-\t\t\t\targument.binding = new AptSourceLocalVariableBinding(argument.binding, binding);", "+\t\tReferenceContext referenceContext = scope.referenceContext();", "+\t\tif (referenceContext instanceof AbstractMethodDeclaration) {", "+\t\t\tMethodBinding binding = ((AbstractMethodDeclaration) referenceContext).binding;", "+\t\t\tif (binding != null) {", "+\t\t\t\tTypeDeclaration typeDeclaration = scope.referenceType();", "+\t\t\t\ttypeDeclaration.binding.resolveTypesFor(binding);", "+\t\t\t\tif (argument.binding != null) {", "+\t\t\t\t\targument.binding = new AptSourceLocalVariableBinding(argument.binding, binding);", "+\t\t\t\t}", "-\t\t}", "-\t\tif (annotations != null) {", "-\t\t\tthis.resolveAnnotations(", "-\t\t\t\t\tscope,", "-\t\t\t\t\tannotations,", "-\t\t\t\t\targument.binding);", "+\t\t\tif (annotations != null) {", "+\t\t\t\tthis.resolveAnnotations(", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tannotations,", "+\t\t\t\t\t\targument.binding);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826b0cfb63ef1253718c33c6a2d77176", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "355cf1c77842b6ad5bc5c80fd104a83d9e181efd", "commitAfterChange": "2940f32de111b657352473b607697edfccd19c02", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void removeFromSecondaryTypesCache(IFile file)", "signatureAfterChange": " \tpublic void removeFromSecondaryTypesCache(IFile file)", "diff": ["-\t\t\t\t\tHashMap types = (HashMap) projectInfo.secondaryTypes.get(packName);", "-\t\t\t\t\tIterator names = types.keySet().iterator();", "-\t\t\t\t\twhile (names.hasNext()) {", "-\t\t\t\t\t\tString typeName = (String) names.next();", "-\t\t\t\t\t\tIType type = (IType) types.get(typeName);", "-\t\t\t\t\t\tif (file.equals(type.getResource())) {", "-\t\t\t\t\t\t\ttypes.remove(typeName);", "-\t\t\t\t\t\t\tif (types.size() == 0) {", "-\t\t\t\t\t\t\t\tprojectInfo.secondaryTypes.remove(packName);", "+\t\t\t\t\tObject object = projectInfo.secondaryTypes.get(packName);", "+\t\t\t\t\tif (object instanceof HashMap) {", "+\t\t\t\t\t\tHashMap types = (HashMap) object;", "+\t\t\t\t\t\tIterator names = types.keySet().iterator();", "+\t\t\t\t\t\twhile (names.hasNext()) {", "+\t\t\t\t\t\t\tString typeName = (String) names.next();", "+\t\t\t\t\t\t\tIType type = (IType) types.get(typeName);", "+\t\t\t\t\t\t\tif (file.equals(type.getResource())) {", "+\t\t\t\t\t\t\t\ttypes.remove(typeName);", "+\t\t\t\t\t\t\t\tif (types.size() == 0) {", "+\t\t\t\t\t\t\t\t\tprojectInfo.secondaryTypes.remove(packName);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t\treturn;"]}], "num": 16605}