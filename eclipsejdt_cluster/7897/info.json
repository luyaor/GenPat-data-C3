{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5eebce3efe521b172fec4eab198473f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8e2d01a8aa055f7d9fd79ef875b84d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest.java", "commitBeforeChange": "63dd1e4003395d388ef82cdd13a585b9acf5cf2a", "commitAfterChange": "d5ac975c618d30089a560c18456e768954cd9860", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void test426542()", "signatureAfterChange": " public void test427728b()", "diff": ["-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=426542,  [1.8] Most specific method not picked when one method has intersection type as type parameter", "-public void test426542() {", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=427728, [1.8] Type Inference rejects calls requiring boxing/unboxing  ", "+public void test427728b() {", "+\tif (this.complianceLevel == ClassFileConstants.JDK1_8)", "+\t\treturn;", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_7) // uses diamond", "+\t\treturn;", "+\trunConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"import java.util.Collections;\\n\" +", "+\t\t\t\"import java.util.LinkedHashMap;\\n\" +", "+\t\t\t\"import java.util.Map;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\t   Map<X, Integer> map = new LinkedHashMap<>();\\n\" +", "+\t\t\t\"\t\t   map.put(null, X.getInt());\\n\" +", "+\t\t\t\"\t\t   map.put(null, X.getint());\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t\tprivate static <T> int getInt() {\\n\" +", "+\t\t\t\"\t\t   return 0;\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t\tprivate static int getint() {\\n\" +", "+\t\t\t\"\t\t\t   return 0;\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\t\"\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f347697d1593dbcc171b9bcaf913f26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LambdaExpressionsTest.java", "commitBeforeChange": "fd4885a8e3e73ea3cccc8e028b8c128b958bea94", "commitAfterChange": "30b1616d05268db216baae30701adfe909a87912", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 138, "signatureBeforeChange": " public void _test429763()", "signatureAfterChange": " public void test429763a()", "diff": ["-public void _test429763() {", "-\t\t\t\t\"\t\tfinal int i = new Test<Integer>().test((Byte b) -> (int) b);\\n\" +", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=429763,  [1.8][compiler] Incompatible type specified for lambda expression's parameter ", "+public void test429763a() {", "+\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import java.util.function.Function;\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\t\"\t\t// does not compile\\n\" +", "+\t\t\t\t\"\t\tnew Test<Integer>().test((Byte b) -> (int) b);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tstatic class Test<R> {\\n\" +", "+\t\t\t\t\"\t\t<T> void test(Function<T,R> f) {\\n\" +", "+\t\t\t\t\"\t\t}\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\"", "+\t\t\t},"]}], "num": 7897}