{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c61702ebc345f1cc07d8207d1917f90", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b28ccd231497998d3550fc24a5c150", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic IFile getDeclaringFileForBinding(final IBinding binding)", "signatureAfterChange": " \tpublic IFile getDeclaringFileForBinding(final IBinding binding)", "diff": ["-\t\tASTNode node = getAstCompilationUnit().findDeclaringNode(binding);", "-\t\tif( node != null ) return _file;", "+\t\tIFile file = searchLocallyForIFile(binding);", "+\t\tif( file != null ) ", "+\t\t\treturn file;", "+\t", "+\t\tfinal IMember member = (IMember)binding.getJavaElement();", "+\t\tif( member != null ){", "+\t\t\tfinal ICompilationUnit unit = member.getCompilationUnit();", "+\t\t\treturn (IFile)unit.getResource();", "+\t\t}", "-\t\t\tfinal IMember member = (IMember)binding.getJavaElement();", "-\t\t\tif( member != null ){", "-\t\t\t\tfinal ICompilationUnit unit = member.getCompilationUnit();", "-\t\t\t\treturn (IFile)unit.getResource();", "+\t\t\tfinal ITypeBinding type = getDeclaringClass(binding);", "+\t\t\tassert type.isTopLevel() : \"type must be top-level type\"; //$NON-NLS-1$", "+\t\t\tfinal String qname = type.getQualifiedName();", "+\t\t\tfinal String pathname = qname.replace('.', File.separatorChar);", "+\t\t\tfinal IPath path = Path.fromOSString(pathname);", "+\t\t\ttry{", "+\t\t\t\t// the element would be a compilation unit.", "+\t\t\t\tfinal IJavaElement element = _javaProject.findElement(path);", "+\t\t\t\tif( element == null ) return null;", "+\t\t\t\treturn (IFile)element.getResource();", "-\t\t\telse{", "-\t\t\t\tfinal ITypeBinding type = getDeclaringClass(binding);", "-\t\t\t\tassert type.isTopLevel() : \"type must be top-level type\"; //$NON-NLS-1$", "-\t\t\t\tfinal String qname = type.getQualifiedName();", "-\t\t\t\tfinal String pathname = qname.replace('.', File.separatorChar);", "-\t\t\t\tfinal IPath path = Path.fromOSString(pathname);", "-\t\t\t\ttry{", "-\t\t\t\t\t// the element would be a compilation unit.", "-\t\t\t\t\tfinal IJavaElement element = _javaProject.findElement(path);", "-\t\t\t\t\tif( element == null ) return null;", "-\t\t\t\t\treturn (IFile)element.getResource();", "-\t\t\t\t}", "-\t\t\t\tcatch(JavaModelException e){", "-\t\t\t\t\tthrow new IllegalStateException(e);", "-\t\t\t\t}", "+\t\t\tcatch(JavaModelException e){", "+\t\t\t\tthrow new IllegalStateException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e4582336d39ee3e20842a7f938ed6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "0451f7d8d4c6c8405b9315cd6272871fc556bba4", "commitAfterChange": "99792a3ac5be202887d314558a46b5851f3a5997", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "diff": ["-\t\tSet<Element> elements = new HashSet<Element>(_units.length);", "-\t\tfor (CompilationUnitDeclaration unit : _units) {", "-\t\t\tif (null == unit.scope || null == unit.scope.topLevelTypes)", "-\t\t\t\tcontinue;", "-\t\t\tfor (SourceTypeBinding binding : unit.scope.topLevelTypes) {", "-\t\t\t\tElement element = _factory.newElement(binding);", "-\t\t\t\tif (null == element) {", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + binding); //$NON-NLS-1$", "+\t\tif (_rootElements == null) {", "+\t\t\tSet<Element> elements = new HashSet<Element>(_units.length);", "+\t\t\tfor (CompilationUnitDeclaration unit : _units) {", "+\t\t\t\tif (null == unit.scope || null == unit.scope.topLevelTypes)", "+\t\t\t\t\tcontinue;", "+\t\t\t\tfor (SourceTypeBinding binding : unit.scope.topLevelTypes) {", "+\t\t\t\t\tElement element = _factory.newElement(binding);", "+\t\t\t\t\tif (null == element) {", "+\t\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + binding); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\telements.add(element);", "-\t\t\t\telements.add(element);", "-\t\t}", "-\t\tif (this._binaryTypes != null) {", "-\t\t\tfor (BinaryTypeBinding typeBinding : _binaryTypes) {", "-\t\t\t\tTypeElement element = (TypeElement)_factory.newElement(typeBinding);", "-\t\t\t\tif (null == element) {", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + typeBinding); //$NON-NLS-1$", "+\t\t\tif (this._binaryTypes != null) {", "+\t\t\t\tfor (BinaryTypeBinding typeBinding : _binaryTypes) {", "+\t\t\t\t\tTypeElement element = (TypeElement)_factory.newElement(typeBinding);", "+\t\t\t\t\tif (null == element) {", "+\t\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + typeBinding); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\telements.add(element);", "-\t\t\t\telements.add(element);", "+\t\t\t_rootElements = elements;", "-\t\treturn elements;", "+\t\treturn _rootElements;"]}], "num": 65134}