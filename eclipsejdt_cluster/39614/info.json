{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "634890fda78eed53b5dfdad28e13211c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f44b9ab7568b6514852813814e1139", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceSubstitution.java", "commitBeforeChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "commitAfterChange": "83445beb69e15e5eb2488d8746136cbbd8c4461a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\tif (TypeBinding.equalsEquals(variable.typeParameter, originalType)) {", "+\t\t\tif (TypeBinding.equalsEquals(getP(i), originalType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8c7f0f4ced0a140fcd08edf7c88418", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/LambdaExpressionSyntaxTest.java", "commitBeforeChange": "ded6df093dcb91c3c8323eba13d60dc2eccf8d25", "commitAfterChange": "834bb3df875d46fb3a9058f7e3e103441d8b1dab", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void test0001() throws IOException", "signatureAfterChange": " \tpublic void test0001() throws IOException", "diff": ["-", "+\t// type elided, unparenthesized parameter + expression body lambda in casting context.", "-\t\t\t\t\"    System.out.println((I) (<no type> x) -> (x * x).square(10));\\n\" + ", "+\t\t\t\t\"    System.out.println(((I) (<no type> x) -> (x * x)).square(10));\\n\" + ", "-\t\tcheckParse(CHECK_ALL & ~CHECK_JAVAC_PARSER , source.toCharArray(), null, \"test0001\", expectedUnitToString);", "+\t\tcheckParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, \"test0001\", expectedUnitToString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94672b34943aa68c495371b4b5dbb790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate static IPath[] decodePatterns(Element element, String tag)", "signatureAfterChange": " \tprivate static IPath[] decodePatterns(NamedNodeMap nodeMap, String tag)", "diff": ["-\tprivate static IPath[] decodePatterns(Element element, String tag) {", "-\t\tString sequence = element.getAttribute(tag);", "+\tprivate static IPath[] decodePatterns(NamedNodeMap nodeMap, String tag) {", "+\t\tString sequence = removeAttribute(tag, nodeMap);"]}], "num": 39614}