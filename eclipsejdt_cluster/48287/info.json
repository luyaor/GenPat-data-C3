{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7e6eb8103ba05e07fae33073997cd55", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3df2cd4418041d6fd3952a6f815245bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tprotected void assertSourceEquals(String message, String expected, String actual)", "signatureAfterChange": " \tprotected void assertSourceEquals(String message, String expected, String actual)", "diff": ["+\t\tassertSourceEquals(message, expected, actual, true/*convert line delimiter*/);", "+\t}", "-\t\tactual = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa6dd165f9a5283531f9130bec1f657d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(resolvedResource.getName())) {", "-\t\t\t\t\t\t\t\t\tif (checkSourceAttachment", "-\t\t\t\t\t\t\t\t\t\t&& sourceAttachment != null", "-\t\t\t\t\t\t\t\t\t\t&& !sourceAttachment.isEmpty()", "-\t\t\t\t\t\t\t\t\t\t&& JavaModel.getTarget(sourceAttachment, true) == null){", "-\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), projectName}));", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryArchive, new String[] {entryPathMsg, projectName}));", "+\t\t\t\t\t\t\t\tif (checkSourceAttachment", "+\t\t\t\t\t\t\t\t\t&& sourceAttachment != null", "+\t\t\t\t\t\t\t\t\t&& !sourceAttachment.isEmpty()", "+\t\t\t\t\t\t\t\t\t&& JavaModel.getTarget(sourceAttachment, true) == null){", "+\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), projectName}));", "-\t\t\t\t\t    } else if (!org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())) {", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryArchive, (new String[] {path.toOSString(), projectName})));"]}], "num": 48287}