{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbdaa47103072d91b77b1cb24b514a1e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a5d76ca467a425068e4abf9a36caa9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " void recordTypeReferences(TypeBinding[] types)", "signatureAfterChange": " void recordTypeReferences(TypeBinding[] types)", "diff": ["-\t\tTypeBinding type = types[i];", "-\t\tif (type.isArrayType())", "-\t\t\ttype = ((ArrayBinding) type).leafComponentType;", "-\t\tif (!type.isBaseType()) {", "-\t\t\tReferenceBinding actualType = (ReferenceBinding) type;", "-\t\t\tif (!actualType.isLocalType())", "-\t\t\t\trecordQualifiedReference(actualType.isMemberType()", "-\t\t\t\t\t? CharOperation.splitOn('.', actualType.readableName())", "-\t\t\t\t\t: actualType.compoundName);", "-\t\t}", "+\t\tReferenceBinding actualType = typeToRecord(types[i]);", "+\t\tif (actualType != null)", "+\t\t\trecordQualifiedReference(actualType.isMemberType()", "+\t\t\t\t? CharOperation.splitOn('.', actualType.readableName())", "+\t\t\t\t: actualType.compoundName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc8179fa56d529251c57f48967be5296", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "4615f36007e76e02bb3b421bd8f019d1c72e5291", "commitAfterChange": "56f02b653e0dc58dc37c3d15b2e6a78c25c99600", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException {\r", "-\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements);\r", "+\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements, problemRequestor);\r", "-\t\tparser.parseCompilationUnit(this, false);\r", "+\t\tparser.parseCompilationUnit(this, this.diagnoseProblemInsideMethodBodies());\r", "-\t\t\t// remember problems\r", "-\t\t\tArrayList problems = requestor.fProblems;\r", "-\t\t\tif (problems != null) {\r", "-\t\t\t\tproblems.toArray(((WorkingCopyElementInfo)unitInfo).problems = new IProblem[problems.size()]);\r", "-\t\t\t}\r", "-\t\t\t\r"]}], "num": 3307}