{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5904e8b544347d3448a4208cf1d753f2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7086ba0127a51d6be5f658dab9ae7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "b62a0575eabeb814900afcc3426a14b0da5fd6ad", "commitAfterChange": "fa4debd5be46821e4afe7fa2082f7a976e89007c", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void testBug416176a()", "signatureAfterChange": " \tpublic void testBug416176a()", "diff": ["-\t\t\t\t\"\t@NonNull T bar2(@Nullable T t) { // argument: contradiction (1)\\n\" +", "-\t\t\t\t\"\t\treturn t;\\n\" +", "+\t\t\t\t\"\t@NonNull T bar2(@Nullable T t) { // argument: no contradiction (1)\\n\" +", "+\t\t\t\t\"\t\treturn t; // mismatch (1)\\n\" +", "-\t\t\t\t\"\t@Nullable T bar3(T t) { // return type: contradiction (2)\\n\" +", "-\t\t\t\t\"\t\t@Nullable T l = t; // local: contradiction (3)\\n\" +", "+\t\t\t\t\"\t@Nullable T bar3(T t) { // return type: no contradiction (2)\\n\" +", "+\t\t\t\t\"\t\t@Nullable T l = t; // local: no contradiction (3)\\n\" +", "-\t\t\t\t\"\t\t@Nullable T f; // field: contradiction (4)\\n\" +", "+\t\t\t\t\"\t\t@Nullable T f; // field: no contradiction (4)\\n\" +", "-\t\t\t\t\"\t\treturn null;\\n\" +", "+\t\t\t\t\"\t\treturn null; // mismatch (2)\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\t@NonNull T bar2(@Nullable T t) { // argument: contradiction (1)\\n\" + ", "-\t\t\t\"\t                ^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\treturn t; // mismatch (1)\\n\" + ", "+\t\t\t\"\t       ^\\n\" + ", "+\t\t\t\"Null type mismatch (type annotations): required \\'@NonNull T\\' but this expression has type \\'@Nullable T\\'\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"\t@Nullable T bar3(T t) { // return type: contradiction (2)\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\t\"\t@Nullable T l = t; // local: contradiction (3)\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\t\"\t@Nullable T f; // field: contradiction (4)\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\"\treturn null;\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\"\treturn null; // mismatch (2)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ccc6a696dd2a84ef5bfc7face9df33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void test025() throws JavaModelException", "signatureAfterChange": "  public void test025() throws JavaModelException", "diff": ["-\t\t\"\\n\" + ", "+\t\t\"\t/**\\n\" + ", "+\t\t\"\t * Completion after: @see BasicTestTextIns\\n\" + ", "+\t\t\"\t */\\n\" + ", "+\t\t\"\tpublic void foo() {}\\n\" + ", "+\t\t\"}\\n\";", "+\tcompleteInJavadoc(\"/Completion/src/javadoc/text/BasicTestTextIns.java\", source, true, \"BasicTestTextIns\", 2); // 2nd occurrence", "+\tassertSortedResults(", "+\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns }, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNRIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNR+\"}\"", "+\t);", "+}", "-\t\t\"InterruptedException[JAVADOC_TYPE_REF]{{@link InterruptedException }, java.lang, Ljava.lang.InterruptedException;, null, null, \"+this.positions+(48+R_INLINE_TAG)+\"}\\n\" + ", "-\t\t\"IllegalMonitorStateException[JAVADOC_TYPE_REF]{{@link IllegalMonitorStateException }, java.lang, Ljava.lang.IllegalMonitorStateException;, null, null, \"+this.positions+(18+R_INLINE_TAG)+\"}\\n\" + ", "-\t\t\"InterruptedException[TYPE_REF]{InterruptedException, java.lang, Ljava.lang.InterruptedException;, null, null, \"+this.positions+\"48}\\n\" + ", "-\t\t\"IllegalMonitorStateException[TYPE_REF]{IllegalMonitorStateException, java.lang, Ljava.lang.IllegalMonitorStateException;, null, null, \"+this.positions+\"18}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d640204189fb4c5adaadd77e2cd7af83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 833, "methodNumberAfterChange": 833, "signatureBeforeChange": " public void test0812()", "signatureAfterChange": " public void test0812()", "diff": ["-\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "-\t\t\"\tprivate T t;\\n\" +", "-\t\t\"\t          ^\\n\" +", "-\t\t\"The field X<T>.t is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tprivate X<?>.Inner inner;\\n\" +", "-\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\"The field X<T>.inner is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tprivate X<?>.Inner[] inners;\\n\" +", "-\t\t\"\t                     ^^^^^^\\n\" +", "-\t\t\"The field X<T>.inners is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 7)\\n\" +", "+\t\t\"1. WARNING in X.java (at line 7)\\n\" +", "-\t\t\"5. ERROR in X.java (at line 9)\\n\" +", "+\t\t\"2. ERROR in X.java (at line 9)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc11cf139f3dcf37259707bd98e0667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "13badd688be686ebb5ba17a06b5117d9f7db22e6", "commitAfterChange": "678bd63c535ed58308236db21b34dad57015766d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic void test036() throws Exception", "signatureAfterChange": "\r \tpublic void test036() throws Exception", "diff": ["-\t\t\"1. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                       ^^^^^^^^^\\n\" + \r", "-\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"2. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                       ^^^^^^^^^^^^^^^^\\n\" + \r", "-\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"3. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                                              ^^^^^^^^^\\n\" + \r", "-\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"4. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"5. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"2. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"6. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"3. ERROR in X.java (at line 4)\\n\" + \r"]}], "num": 26685}