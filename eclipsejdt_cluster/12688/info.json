{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06d75e98a5c82e8d1bbb44db4c1e057a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1977ecdf2e57df308e9d7ae6ac8f049a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "ed4fc3d0002a41cf93574657cb31d162833b10ed", "commitAfterChange": "c9e02661baa80cf1f75154d10de9df61ce3f636d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public MethodBinding[] getMethods(char[] selector, int suggestedParameterLength)", "signatureAfterChange": " public MethodBinding[] getMethods(char[] selector, int suggestedParameterLength)", "diff": ["-\t\tfor (int i = start; i <= end; i++)", "-\t\t\tif (this.methods[i].parameters.length <= suggestedParameterLength)", "+\t\tfor (int i = start; i <= end; i++) {", "+\t\t\tint len = this.methods[i].parameters.length;", "+\t\t\tif (len <= suggestedParameterLength || (this.methods[i].isVarargs() && len == suggestedParameterLength + 1))", "+\t\t}", "-\t\t\tfor (int i = start, index = 0; i <= end; i++)", "-\t\t\t\tif (this.methods[i].parameters.length <= suggestedParameterLength)", "+\t\t\tfor (int i = start, index = 0; i <= end; i++) {", "+\t\t\t\tint len = this.methods[i].parameters.length;", "+\t\t\t\tif (len <= suggestedParameterLength || (this.methods[i].isVarargs() && len == suggestedParameterLength + 1))", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7039d29ea5ba4fda8337589c4e20d561", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "a446855af1d75ce4a9db853f60a76eb10d11782d", "commitAfterChange": "b39119968c7f32d55ae4a97790cb0a2d7d32153a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected int matchLevel(ConstructorDeclaration constructor, boolean resolve)", "signatureAfterChange": " protected int matchLevel(ConstructorDeclaration constructor, boolean resolve)", "diff": ["-\t\t\t// parameter types", "-\t\t\tif (this.parameterSimpleNames != null && constructor.arguments != null)", "-\t\t\t\tif (this.parameterSimpleNames.length != constructor.arguments.length)", "+\t\t\tif (this.parameterSimpleNames != null) {", "+\t\t\t\tint length = this.parameterSimpleNames.length;", "+\t\t\t\tArgument[] args = constructor.arguments;", "+\t\t\t\tint argsLength = args == null ? 0 : args.length;", "+\t\t\t\tif (length != argsLength)", "+", "+\t\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\t\t\tif (!matchesTypeReference(this.parameterSimpleNames[i], args[i].type))", "+\t\t\t\t\t\treturn referencesLevel; // answer referencesLevel since this is an IMPOSSIBLE_MATCH", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa68e1ae15306b75dfdc678a96eff65f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "68f9f04b07b27dd702def07fa767acc75fd22c99", "commitAfterChange": "bf894682701834dc09d19bcf9d552503f3fc366c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": " public int matchLevel(AstNode node, boolean resolve)", "diff": ["-\tif (this.parameterSimpleNames != null && args != null)", "-\t\tif (this.parameterSimpleNames.length != args.length)", "+\tif (this.parameterSimpleNames != null) {", "+\t\tint length = this.parameterSimpleNames.length;", "+\t\tint argsLength = args == null ? 0 : args.length;", "+\t\tif (length != argsLength) {", "+\t\t} else {", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tAstNode arg = args[i];", "+\t\t\t\tif (arg instanceof Argument) {", "+\t\t\t\t\tTypeReference argType = ((Argument)arg).type;", "+\t\t\t\t\tchar[][] argTypeName = argType.getTypeName();", "+\t\t\t\t\tchar[] sourceName = toArrayName(", "+\t\t\t\t\t\targTypeName[argTypeName.length-1], ", "+\t\t\t\t\t\targType.dimensions());", "+\t\t\t\t\tif (!matchesName(this.parameterSimpleNames[i], sourceName))", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 12688}