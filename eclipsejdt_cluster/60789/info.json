{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "faf7b9097ae2979a2690cbc209b245f2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8285866594e26073a10032d29c0006d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": "  \tpublic byte[] read(java.io.File file) throws java.io.IOException", "signatureAfterChange": "  \tpublic byte[] read(java.io.File file) throws java.io.IOException", "diff": ["-\t\twhile ((lastReadSize != -1) && (bytesRead != fileLength)) {", "-\t\t\tlastReadSize = stream.read(fileBytes, bytesRead, fileLength - bytesRead);", "-\t\t\tbytesRead += lastReadSize;", "+\t\ttry {", "+\t\t\twhile ((lastReadSize != -1) && (bytesRead != fileLength)) {", "+\t\t\t\tlastReadSize = stream.read(fileBytes, bytesRead, fileLength - bytesRead);", "+\t\t\t\tbytesRead += lastReadSize;", "+\t\t\t}", "+\t\t\treturn fileBytes;", "+\t\t} finally {", "+\t\t\tstream.close();", "-\t\tstream.close();", "-\t\treturn fileBytes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f0360cc94fe1d1c17974c033ad72f2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "4ce83257bb1b778dfa58775e5fe4dc9d499340f4", "commitAfterChange": "bd297a6cb55c56ac121bf45ea00a0a13e2fd1cf7", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "\r \tpublic static void writeToDisk(\r \t\tString outputPath,\r \t\tString relativeFileName,\r \t\tbyte[] contents)\r \t\tthrows IOException", "signatureAfterChange": "\r \tpublic static void writeToDisk(\r \t\tString outputPath,\r \t\tString relativeFileName,\r \t\tbyte[] contents)\r \t\tthrows IOException", "diff": ["+\t\t\t\r", "+\t\t\r", "-\t\toutput.write(contents);\r", "-\t\toutput.flush();\r", "-\t\toutput.close();\r", "+\t\ttry {\r", "+\t\t\toutput.write(contents);\r", "+\t\t} finally {\r", "+\t\t\toutput.flush();\r", "+\t\t\toutput.close();\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c51771659f29204f01f089e3e253803d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModelTestsUtil.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  static public byte[] read(java.io.File file) throws java.io.IOException", "signatureAfterChange": "  static public byte[] read(java.io.File file) throws java.io.IOException", "diff": ["-\twhile ((lastReadSize != -1) && (bytesRead != fileLength)) {", "-\t\tlastReadSize = stream.read(fileBytes, bytesRead, fileLength - bytesRead);", "-\t\tbytesRead += lastReadSize;", "+\ttry {", "+\t\twhile ((lastReadSize != -1) && (bytesRead != fileLength)) {", "+\t\t\tlastReadSize = stream.read(fileBytes, bytesRead, fileLength - bytesRead);", "+\t\t\tbytesRead += lastReadSize;", "+\t\t}", "+\t\treturn fileBytes;", "+\t} finally {", "+\t\tstream.close();\t\t", "-\tstream.close();", "-\treturn fileBytes;"]}], "num": 60789}