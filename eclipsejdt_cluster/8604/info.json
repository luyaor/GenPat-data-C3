{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f49d6eea22711844088f45e63af576e9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73244da514e7f19702da4eccb0990599", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\tpublic TypeBinding findSingleWrapperType()", "signatureAfterChange": " \t\tpublic TypeBinding findSingleWrapperType()", "diff": ["-\t\t\t\tIterator it = this.subBounds.iterator();", "+\t\t\t\tIterator<TypeBound> it = this.subBounds.iterator();", "-\t\t\t\t\tTypeBinding boundType = ((TypeBound)it.next()).right;", "+\t\t\t\t\tTypeBinding boundType = it.next().right;", "-\t\t\t\tIterator it = this.superBounds.iterator();", "+\t\t\t\tIterator<TypeBound> it = this.superBounds.iterator();", "-\t\t\t\t\tTypeBinding boundType = ((TypeBound)it.next()).right;", "+\t\t\t\t\tTypeBinding boundType = it.next().right;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b3438ba7ff075056c901dbc9127f5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\tprivate boolean hasDependency(Set someBounds, InferenceVariable var)", "signatureAfterChange": " \t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var)", "diff": ["-\t\tprivate boolean hasDependency(Set someBounds, InferenceVariable var) {", "-\t\t\tIterator bIt = someBounds.iterator();", "+\t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var) {", "+\t\t\tIterator<TypeBound> bIt = someBounds.iterator();", "-\t\t\t\tTypeBound bound = (TypeBound) bIt.next();", "+\t\t\t\tTypeBound bound = bIt.next();"]}], "num": 8604}