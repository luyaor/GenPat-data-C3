{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "827fb68b4dd65432efd700d652c8ad31", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3483e4cef2fff7ca81e3110a2b67013d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " public void test139()", "signatureAfterChange": " public void test139()", "diff": ["-\t\t\"2. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tMINUS {\\n\" +", "-\t\t\"\t^^^^^\\n\" +", "-\t\t\"The enum constant MINUS must define the abstract method eval(double, double)\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tabstract double eval2(double x, double y);\\n\" +", "-\t\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"The abstract method eval2 in type new X(){} can only be defined by an abstract class\\n\" +", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tMINUS {\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"The enum constant MINUS cannot define abstract methods\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tMINUS {\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"The enum constant MINUS must implement the abstract method eval(double, double)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f810b94423fd0caad946f47a383d7269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "c31c921d319cbf1346e5bfb26cf42ff15297484d", "commitAfterChange": "2becf6dcab514ae8708935b2b42eed94f2bad821", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void test067()", "signatureAfterChange": " public void test067()", "diff": ["-\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-\t\t\"\tabstract int getSquare();\\n\" +", "-\t\t\"\t             ^^^^^^^^^^^\\n\" +", "-\t\t\"Duplicate method getSquare() in type X\\n\" +", "+\t\t\"1. ERROR in X.java (at line 2)\\n\" +", "+\t\t\"\tONE, TWO, THREE;\\n\" +", "+\t\t\"\t^^^\\n\" +", "+\t\t\"The enum constant ONE must define the abstract method getSquare()\\n\" +", "-\t\t\"2. ERROR in X.java (at line 4)\\n\" +", "+\t\t\"2. ERROR in X.java (at line 2)\\n\" +", "+\t\t\"\tONE, TWO, THREE;\\n\" +", "+\t\t\"\t     ^^^\\n\" +", "+\t\t\"The enum constant TWO must define the abstract method getSquare()\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"3. ERROR in X.java (at line 2)\\n\" +", "+\t\t\"\tONE, TWO, THREE;\\n\" +", "+\t\t\"\t          ^^^^^\\n\" +", "+\t\t\"The enum constant THREE must define the abstract method getSquare()\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"4. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\"", "+\t);"]}], "num": 41035}