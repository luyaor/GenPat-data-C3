{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f981f9c495d329e98f9202064964817", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03357c5b7c7f00b8bbc5a8ed41c6e4e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tlong[] positions = importRef.sourcePositions;", "-\t\tint last = positions.length - 1;", "-\t\tif (binding instanceof ProblemReferenceBinding)", "-\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "-\t\tif (binding instanceof ReferenceBinding) {", "-\t\t\tPackageBinding pkgBinding = ((ReferenceBinding) binding).fPackage;", "-\t\t\tif (pkgBinding != null)", "-\t\t\t\tlast = pkgBinding.compoundName.length;", "+\t\tif (locator.encloses(element)) {", "+\t\t\tlong[] positions = importRef.sourcePositions;", "+\t\t\tint last = positions.length - 1;", "+\t\t\tif (binding instanceof ProblemReferenceBinding)", "+\t\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "+\t\t\tif (binding instanceof ReferenceBinding) {", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding) binding).fPackage;", "+\t\t\t\tif (pkgBinding != null)", "+\t\t\t\t\tlast = pkgBinding.compoundName.length;", "+\t\t\t}", "+\t\t\tSearchMatch match = JavaSearchMatch.newReferenceMatch(IJavaElement.PACKAGE_FRAGMENT, element, accuracy, ((int) (positions[0] >>> 32)), ((int) positions[last - 1])+1, locator);", "+\t\t\tlocator.report(match);", "-\t\tlocator.report(positions[0], positions[last - 1], element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b2d06b58c12f8113dfe9394fa407052", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportReference(ArrayTypeReference arrayRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ArrayTypeReference arrayRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tif (this.pattern.simpleName == null)", "-\t\tlocator.report(arrayRef.sourceStart, arrayRef.sourceEnd, element, accuracy);", "-\telse", "-\t\tlocator.reportAccurateReference(arrayRef.sourceStart, arrayRef.sourceEnd, this.pattern.simpleName, element, accuracy);", "+\tif (this.pattern.simpleName == null) {", "+\t\tif (locator.encloses(element)) {", "+\t\t\tSearchMatch match = JavaSearchMatch.newReferenceMatch(IJavaElement.TYPE, element, accuracy, arrayRef.sourceStart, arrayRef.sourceEnd+1, locator);", "+\t\t\tlocator.report(match);", "+\t\t}", "+\t} else", "+\t\tlocator.reportAccurateReference(IJavaElement.TYPE, arrayRef.sourceStart, arrayRef.sourceEnd, this.pattern.simpleName, element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae6e089f5844c9cc92324388b0726eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\tlong[] positions = importRef.sourcePositions;", "-\t\t\t\tlocator.report(positions[this.pattern.qualification == null ? lastIndex : 0], positions[lastIndex], element, accuracy);", "+\t\t\t\tif (locator.encloses(element)) {", "+\t\t\t\t\tlong[] positions = importRef.sourcePositions;", "+\t\t\t\t\tSearchMatch match = JavaSearchMatch.newReferenceMatch(IJavaElement.TYPE, element, accuracy, ((int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32)), ((int) positions[lastIndex])+1, locator);", "+\t\t\t\t\tlocator.report(match);", "+\t\t\t\t}", "-\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, this.pattern.simpleName, element, accuracy);", "+\tlocator.reportAccurateReference(IJavaElement.TYPE, importRef.sourceStart, importRef.sourceEnd, this.pattern.simpleName, element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd22d731ced93d8c0c41df92731fcfb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\tlong[] positions = qTypeRef.sourcePositions;", "-\t\t\t\tlocator.report(positions[this.pattern.qualification == null ? lastIndex : 0], positions[lastIndex], element, accuracy);", "+\t\t\t\tif (locator.encloses(element)) {", "+\t\t\t\t\tlong[] positions = qTypeRef.sourcePositions;", "+\t\t\t\t\tSearchMatch match = JavaSearchMatch.newReferenceMatch(IJavaElement.TYPE, element, accuracy, ((int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32)), ((int) positions[lastIndex])+1, locator);", "+\t\t\t\t\tlocator.report(match);", "+\t\t\t\t}", "-\tlocator.reportAccurateReference(qTypeRef.sourceStart, qTypeRef.sourceEnd, this.pattern.simpleName, element, accuracy);", "+\tlocator.reportAccurateReference(IJavaElement.TYPE, qTypeRef.sourceStart, qTypeRef.sourceEnd, this.pattern.simpleName, element, accuracy);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c4d9dfbc8457519d5517184fb61536", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\tlong[] positions = qNameRef.sourcePositions;", "-\t\t\t\tlocator.report(positions[this.pattern.qualification == null ? lastIndex : 0], positions[lastIndex], element, accuracy);", "+\t\t\t\tif (locator.encloses(element)) {", "+\t\t\t\t\tlong[] positions = qNameRef.sourcePositions;", "+\t\t\t\t\tSearchMatch match = JavaSearchMatch.newReferenceMatch(IJavaElement.TYPE, element, accuracy, ((int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32)), ((int) positions[lastIndex])+1, locator);", "+\t\t\t\t\tlocator.report(match);", "+\t\t\t\t}", "-\tlocator.reportAccurateReference(qNameRef.sourceStart, qNameRef.sourceEnd, this.pattern.simpleName, element, accuracy);", "+\tlocator.reportAccurateReference(IJavaElement.TYPE, qNameRef.sourceStart, qNameRef.sourceEnd, this.pattern.simpleName, element, accuracy);"]}], "num": 30748}