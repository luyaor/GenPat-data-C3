{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b7d082016f48cd3d793671c30aab16f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0665bc002cc9cb5ed83d6109c5be2319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": "\t\t  \tpublic void testWildcardType()", "signatureAfterChange": "\t\t  \tpublic void testWildcardType()", "diff": ["+\t\tx.setBound(b);", "+\t\tx.setUpperBound(false);", "+\t\tassertTrue(x.isUpperBound() == false);", "+\t\tx.setUpperBound(true);", "+\t\tassertTrue(x.isUpperBound() == true);", "+\t\tx.setBound(null);", "+\t\tx.setUpperBound(false);", "+\t\tassertTrue(x.isUpperBound() == false);", "+\t\tx.setUpperBound(true);", "+\t\tassertTrue(x.isUpperBound() == true);", "+\t\t", "+\t\t// make sure that setBound(Type,boolean) works", "+\t\tassertTrue(x.getBound() == b);", "+\t\tassertTrue(x.getBound() == null);", "+\t\tassertTrue(x.getBound() == b);", "-\t\tx.setBound(null, false);  // isUpper ignored when bound is null", "-\t\tassertTrue(x.isUpperBound() == true);", "+\t\tx.setBound(null, false);", "+\t\tassertTrue(x.getBound() == null);", "+\t\tassertTrue(x.isUpperBound() == false);", "-\t\t\t\ts1.setBound(x, true);", "+\t\t\t\ts1.setBound(x);", "-\t\t\t\ts1.setBound(null, true);", "+\t\t\t\ts1.setBound(null);", "-\t\t\t\tx.setBound((Type) value, true);", "+\t\t\t\tx.setBound((Type) value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37fe2136d1feeef27906cfb77422896", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic boolean condition18_5_2_bullet_3_3_1(InferenceVariable alpha, TypeBinding targetType)", "signatureAfterChange": " \tpublic boolean condition18_5_2_bullet_3_3_1(InferenceVariable alpha, TypeBinding targetType)", "diff": ["-\t\tThreeSets ts = (ThreeSets) this.boundsPerVariable.get(alpha);", "+\t\tThreeSets ts = this.boundsPerVariable.get(alpha);", "-\t\t\tIterator bounds = ts.sameBounds.iterator();", "+\t\t\tIterator<TypeBound> bounds = ts.sameBounds.iterator();", "-\t\t\t\tTypeBound bound = (TypeBound) bounds.next();", "+\t\t\t\tTypeBound bound = bounds.next();", "-\t\t\tIterator bounds = ts.superBounds.iterator();", "+\t\t\tIterator<TypeBound> bounds = ts.superBounds.iterator();", "-\t\t\t\tTypeBound bound = (TypeBound) bounds.next();", "+\t\t\t\tTypeBound bound = bounds.next();", "-\t\t\tList superBounds = new ArrayList(ts.superBounds);", "+\t\t\tArrayList<TypeBound> superBounds = new ArrayList<TypeBound>(ts.superBounds);", "-\t\t\t\tTypeBinding s1 = ((TypeBound)superBounds.get(i)).right;", "+\t\t\t\tTypeBinding s1 = superBounds.get(i).right;", "-\t\t\t\t\tTypeBinding s2 = ((TypeBound)superBounds.get(j)).right;", "+\t\t\t\t\tTypeBinding s2 = superBounds.get(j).right;"]}], "num": 58546}