{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78b6c19fd136e3e5ce4bf8c12a51c1d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b59252c671b1a4bc66a5639c498dd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\t} else if (currentNode instanceof EnumDeclaration) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.EnumDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "-\t\t\t\tif ((initializer.getModifiers() & Modifier.STATIC) != 0) {", "-\t\t\t\t\treturn enumDecl.staticInitializerScope;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn enumDecl.initializerScope;", "-\t\t\t\t}", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.EnumDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8343660f1495f3676827647744fdc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "964d2b4d225adb16891c1f3f43547e1047f89000", "commitAfterChange": "22fa73dc034dca717547a9f3bcacb57ec44d92ea", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": "  \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\tif (currentNode instanceof AbstractTypeDeclaration) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "-\t\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "-\t\t\t\t\treturn typeDecl.staticInitializerScope;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn typeDecl.initializerScope;", "-\t\t\t\t}", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "+\t\t\t\treturn typeDecl.staticInitializerScope;", "+\t\t\t} else {", "+\t\t\t\treturn typeDecl.initializerScope;"]}], "num": 27779}