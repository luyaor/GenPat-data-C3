{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c9a1d5d5982963e5771f4df02691d0c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb44ce1321791ced95883e76f64f68cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public static String createArraySignature(String typeSignature, int arrayCount)", "signatureAfterChange": "\r public static char[] createArraySignature(char[] typeSignature, int arrayCount)", "diff": ["+ */\r", "+public static char[] createArraySignature(char[] typeSignature, int arrayCount) {\r", "+\tif (arrayCount == 0) return typeSignature;\r", "+\tint sigLength = typeSignature.length;\r", "+\tchar[] result = new char[arrayCount + sigLength];\r", "+\tfor (int i = 0; i < arrayCount; i++) {\r", "+\t\tresult[i] = C_ARRAY;\r", "+\t}\r", "+\tSystem.arraycopy(typeSignature, 0, result, arrayCount, sigLength);\r", "+\treturn result;\r", "+}\r", "-\tif (arrayCount == 0) return typeSignature;\r", "-\tStringBuffer sb = new StringBuffer(typeSignature.length() + arrayCount);\r", "-\tfor (int i = 0; i < arrayCount; ++i) {\r", "-\t\tsb.append(C_ARRAY);\r", "-\tsb.append(typeSignature);\r", "-\treturn sb.toString();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c892be504352127039b0143e4dd8f406", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void addConstructorDeclaration(char[] typeName, char[][] parameterTypes, char[][] exceptionTypes)", "signatureAfterChange": " \tpublic void addConstructorDeclaration( \t\t\tchar[] typeName, \t\t\tint argCount, \t\t\tchar[] signature, \t\t\tchar[][] parameterTypes, \t\t\tchar[][] parameterNames, \t\t\tint modifiers, \t\t\tchar[] packageName, \t\t\tint typeModifiers, \t\t\tchar[][] exceptionTypes, \t\t\tint extraFlags)", "diff": ["-\tpublic void addConstructorDeclaration(char[] typeName, char[][] parameterTypes, char[][] exceptionTypes) {", "-\t\tint argCount = parameterTypes == null ? 0 : parameterTypes.length;", "-\t\taddIndexEntry(CONSTRUCTOR_DECL, ConstructorPattern.createIndexKey(CharOperation.lastSegment(typeName,'.'), argCount));", "-", "+\tpublic void addConstructorDeclaration(", "+\t\t\tchar[] typeName,", "+\t\t\tint argCount,", "+\t\t\tchar[] signature,", "+\t\t\tchar[][] parameterTypes,", "+\t\t\tchar[][] parameterNames,", "+\t\t\tint modifiers,", "+\t\t\tchar[] packageName,", "+\t\t\tint typeModifiers,", "+\t\t\tchar[][] exceptionTypes,", "+\t\t\tint extraFlags) {", "+\t\taddIndexEntry(", "+\t\t\t\tCONSTRUCTOR_DECL,", "+\t\t\t\tConstructorPattern.createDeclarationIndexKey(", "+\t\t\t\t\t\ttypeName,", "+\t\t\t\t\t\targCount,", "+\t\t\t\t\t\tsignature,", "+\t\t\t\t\t\tparameterTypes,", "+\t\t\t\t\t\tparameterNames,", "+\t\t\t\t\t\tmodifiers,", "+\t\t\t\t\t\tpackageName,", "+\t\t\t\t\t\ttypeModifiers,", "+\t\t\t\t\t\textraFlags));", "+\t\t"]}], "num": 61734}