{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "462e7e23d1b13e5a3b30e4e746c03c91", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c02b942e25a9c193b81599c7509004ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "35e70cc8286d226408a60255fde5d4f8a4a2587e", "commitAfterChange": "16dc279389affb939d2e82688b164459d3ba1ba5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "signatureAfterChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "diff": ["-\t\t\tif (isWildcard()) {", "-\t\t\t\tWildcardBinding wildcard = (WildcardBinding) this;", "-\t\t\t\tswitch(wildcard.boundKind) {", "-\t\t\t\t\tcase Wildcard.EXTENDS :", "-\t\t\t\t\t\tupperBound = wildcard.bound;", "-\t\t\t\t\t\tlowerBound = null;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Wildcard. SUPER :", "-\t\t\t\t\t\tupperBound = wildcard;", "-\t\t\t\t\t\tlowerBound = wildcard.bound;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Wildcard.UNBOUND :", "-\t\t\t\t\t\tupperBound = wildcard;", "-\t\t\t\t\t\tlowerBound = null;", "-\t\t\t\t}", "+\t\t\tswitch (this.kind()) {", "+\t\t\t\tcase Binding.WILDCARD_TYPE :", "+\t\t\t\t\tWildcardBinding wildcard = (WildcardBinding) this;", "+\t\t\t\t\tswitch(wildcard.boundKind) {", "+\t\t\t\t\t\tcase Wildcard.EXTENDS :", "+\t\t\t\t\t\t\tupperBound = wildcard.bound;", "+\t\t\t\t\t\t\tlowerBound = null;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase Wildcard. SUPER :", "+\t\t\t\t\t\t\tupperBound = wildcard;", "+\t\t\t\t\t\t\tlowerBound = wildcard.bound;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase Wildcard.UNBOUND :", "+\t\t\t\t\t\t\tupperBound = wildcard;", "+\t\t\t\t\t\t\tlowerBound = null;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Binding.TYPE_PARAMETER :", "+\t\t\t\t\tif (this.isCapture()) {", "+\t\t\t\t\t\tCaptureBinding capture = (CaptureBinding) this;", "+\t\t\t\t\t\tif (capture.lowerBound != null) lowerBound = capture.lowerBound;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd26ac5ce0da001fe6011967976e26e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "0f615671129895691d95f4bc3be292ee347de06e", "commitAfterChange": "cf5a3482900813b28764efd17a11c98c49b36dd5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " private boolean isProvablyDistinctTypeArgument(TypeBinding otherArgument, final ParameterizedTypeBinding paramType, final int rank)", "signatureAfterChange": " private boolean isProvablyDistinctTypeArgument(TypeBinding otherArgument, final ParameterizedTypeBinding paramType, final int rank)", "diff": ["-\t\t\t\tlowerBound1 = capture.lowerBound;", "-\t\t\t\tif (lowerBound1 == null) {", "-\t\t\t\t\tif (capture.firstBound == null)", "+\t\t\t\tswitch (capture.wildcard.boundKind) {", "+\t\t\t\t\tcase Wildcard.EXTENDS:", "+\t\t\t\t\t\tupperBound1 = capture.wildcard.bound;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase Wildcard.SUPER:", "+\t\t\t\t\t\tlowerBound1 = capture.wildcard.bound;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase Wildcard.UNBOUND:", "-\t\t\t\t\tupperBound1 = capture.firstBound;", "-\t\t\t\tlowerBound2 = otherCapture.lowerBound;", "-\t\t\t\tif (lowerBound2 == null) {", "-\t\t\t\t\tif (otherCapture.firstBound == null)", "+\t\t\t\tswitch (otherCapture.wildcard.boundKind) {", "+\t\t\t\t\tcase Wildcard.EXTENDS:", "+\t\t\t\t\t\tupperBound2 = otherCapture.wildcard.bound;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase Wildcard.SUPER:", "+\t\t\t\t\t\tlowerBound2 = otherCapture.wildcard.bound;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase Wildcard.UNBOUND:", "-\t\t\t\t\tupperBound2 = otherCapture.firstBound;", "+\t\t\tif (lowerBound1.isTypeVariable() || upperBound2.isTypeVariable()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (lowerBound1.isTypeVariable() || otherArgument.isTypeVariable()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (lowerBound2.isTypeVariable() || this.isTypeVariable()) {", "+\t\t\t\treturn false;", "+\t\t\t}"]}], "num": 1746}