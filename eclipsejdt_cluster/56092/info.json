{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e414b6e2f4db74b37640e1b2cbfb48a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d1c2d3d17346e6ac70d0b8da4ee7624", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "signatureAfterChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "diff": ["-        throw new UnsupportedOperationException( \"Not Yet Implemented\");", "+\t\t// TODO: figure out what to do with the loc ", "+\t\t// Filer.Location.CLASS_TREE vs Filer.Location.SOURCE_TREE       ", "+\t\tFile f = new File(\".\");", "+", "+        if( pkg != null )", "+            f = new File( f, pkg.replace('.', File.separatorChar) );", "+", "+        f = new File( f, relPath.getPath() );", "+", "+        // REVIEW: for no apparent reason it is sometimes necessary to create the", "+        // parent dir, else an IOException occurs creating f..", "+        File p = f.getParentFile();", "+        FileSystemUtil.mkdirs( p );", "+        return charsetName == null ? new PrintWriter( f ) : new PrintWriter( f, charsetName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87cae2c6ea4676b9df82f3c8092fb28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "64db8d36b73417ee83ea1a6d91baaefe7d3848b0", "commitAfterChange": "706bf7889f5a9b55b080bd919d03ab5ee97600fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public OutputStream createClassFile(String name) throws IOException", "signatureAfterChange": "     public OutputStream createClassFile(String name) throws IOException", "diff": ["-        throw new UnsupportedOperationException( \"Not Yet Implemented\" ); //$NON-NLS-1$", "+    \tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( _env.getProject() );", "+    \tFile f = null;", "+    \t", "+    \ttry ", "+    \t{", "+    \t\tf = gfm.getGeneratedSourceFolderOutputLocation();", "+    \t}", "+    \tcatch ( Exception e )", "+    \t{", "+    \t\t// TODO - stop throwing this exception", "+    \t\tAptPlugin.log(e, \"Failure getting the output file\"); //$NON-NLS-1$", "+    \t\tthrow new IOException();", "+    \t}", "+    \t", "+    \tf = new File( f, name.replace( '.', File.separatorChar ) + \".class\" ); //$NON-NLS-1$", "+  ", "+        // REVIEW: for no apparent reason it is sometimes necessary to create the", "+        // parent dir, else an IOException occurs creating f..", "+        File p = f.getParentFile();", "+        FileSystemUtil.mkdirs( p );", "+    \t", "+        return new FileOutputStream( f );"]}], "num": 56092}