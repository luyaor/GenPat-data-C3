{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d8e845bfd766a0d8ebb67df535c0e4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "441709deaf68cec9fa3bf66687bb4cbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "204dbb0f962baec45cc155adc0f25897806fc936", "commitAfterChange": "8d7962f9f430b3236797be4f077716228c08370e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\tif ((currentScope.enclosingSourceType() != binding.declaringClass)", "-\t\t\t\t&& (binding.constant == NotAConstant)) {", "+\t\t\tif ((currentScope.enclosingSourceType() != binding.declaringClass) && !binding.isConstantValue()) {", "-\t\t\t&& this.binding.constant == NotAConstant", "+\t\t\t&& !this.binding.isConstantValue()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e836dc3dff4db9dd1055612b42b1ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "16a26bc49f78acb9a7d0c10a9d6bedce29952111", "commitAfterChange": "e70f557904c0f4a9dab2a8974c294cadedac3b10", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["-\t\t\r", "-\t\tif (((bits & DepthMASK) != 0) \r", "-\t\t\t|| currentScope.enclosingSourceType() != binding.declaringClass){\r", "+\r", "+\t\t// depth is set for both implicit and explicit access (see MethodBinding#canBeSeenBy)\t\t\r", "+\t\tif (currentScope.enclosingSourceType() != binding.declaringClass){\r", "-\t\t// need emulation always\r", "+\t\t// qualified super need emulation always\r"]}], "num": 40759}