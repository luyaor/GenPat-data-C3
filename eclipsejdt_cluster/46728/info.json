{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ec1e8142903829834ad1b418225a4ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "098c9e43a8c91aaea8dfda2f43f830f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "bbb21a5affc4d3b9808e8ab897f64d3b1e68b6b2", "commitAfterChange": "e57c1379bf2ab200d310135306edb2776411f753", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void getNextUnicodeChar() \tthrows InvalidInputException", "signatureAfterChange": " public void getNextUnicodeChar() \tthrows InvalidInputException", "diff": ["-", "-\ttry {", "-\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "-\t\tthis.currentPosition++;", "+\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "+\tthis.currentPosition++;", "+\tif (this.currentPosition < this.eofPosition) {", "+\t\t\tif (this.currentPosition >= this.eofPosition) {", "+\t\t\t\tthis.currentPosition--;", "+\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t\t\t}", "-", "-\t\tif ((c1 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c1 < 0", "-\t\t\t|| (c2 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c2 < 0", "-\t\t\t|| (c3 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c3 < 0", "-\t\t\t|| (c4 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c4 < 0){", "-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t}", "-\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t//need the unicode buffer", "-\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t//buffer all the entries that have been left aside....", "-\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t}", "-\t\t//fill the buffer with the char", "-\t\tunicodeStore();", "-\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';", "-\t} catch (ArrayIndexOutOfBoundsException e) {", "+\t} else {", "+", "+\tif ((this.currentPosition + 4) > this.eofPosition) {", "+\t\tthis.currentPosition += (this.eofPosition - this.currentPosition);", "+\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t}", "+\tif ((c1 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c1 < 0", "+    \t\t|| (c2 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c2 < 0", "+    \t\t|| (c3 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c3 < 0", "+    \t\t|| (c4 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c4 < 0){", "+\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t}", "+\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t//need the unicode buffer", "+\tif (this.withoutUnicodePtr == 0) {", "+\t\t//buffer all the entries that have been left aside....", "+\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "+\t}", "+\t//fill the buffer with the char", "+\tunicodeStore();", "+\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c082ec54afaec420ef491d1f577bd28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "bbb21a5affc4d3b9808e8ab897f64d3b1e68b6b2", "commitAfterChange": "e57c1379bf2ab200d310135306edb2776411f753", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void getNextUnicodeChar() \tthrows InvalidInputException", "signatureAfterChange": " public void getNextUnicodeChar() \tthrows InvalidInputException", "diff": ["-", "-\ttry {", "-\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "-\t\tthis.currentPosition++;", "+\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "+\tthis.currentPosition++;", "+\tif (this.currentPosition < this.eofPosition) {", "+\t\t\tif (this.currentPosition >= this.eofPosition) {", "+\t\t\t\tthis.currentPosition--;", "+\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t\t\t}", "-", "-\t\tif ((c1 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c1 < 0", "-\t\t\t|| (c2 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c2 < 0", "-\t\t\t|| (c3 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c3 < 0", "-\t\t\t|| (c4 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t|| c4 < 0){", "-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t}", "-\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t//need the unicode buffer", "-\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t//buffer all the entries that have been left aside....", "-\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t}", "-\t\t//fill the buffer with the char", "-\t\tunicodeStore();", "-\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';", "-\t} catch (ArrayIndexOutOfBoundsException e) {", "+\t} else {", "+", "+\tif ((this.currentPosition + 4) > this.eofPosition) {", "+\t\tthis.currentPosition += (this.eofPosition - this.currentPosition);", "+\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t}", "+\tif ((c1 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c1 < 0", "+    \t\t|| (c2 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c2 < 0", "+    \t\t|| (c3 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c3 < 0", "+    \t\t|| (c4 = ScannerHelper.getNumericValue(this.source[this.currentPosition++])) > 15", "+    \t\t|| c4 < 0){", "+\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t}", "+\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t//need the unicode buffer", "+\tif (this.withoutUnicodePtr == 0) {", "+\t\t//buffer all the entries that have been left aside....", "+\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "+\t}", "+\t//fill the buffer with the char", "+\tunicodeStore();", "+\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';"]}], "num": 46728}