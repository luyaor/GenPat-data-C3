{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b123220a3f0bbd023e7f0be4dbdfe023", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1781900d00c2223da5392f26a205d0d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "c65657c3db5994a0f7c7d598e6c69a8e236f8125", "commitAfterChange": "4d22b6cee44bdb8aa24a4ca5266770881b141e50", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject javaProject, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject javaProject, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "diff": ["-\t\t\tchar[][] expectedPackageName = null;", "-\t", "+", "-\t\t\t\t\tnew BasicCompilationUnit(source, expectedPackageName, unitName, encoding),", "+\t\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\t\tsource,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tunitName,", "+\t\t\t\t\t\tencoding),", "+\t\t\t\t\ttrue, // method verification", "+\t\t\t\t\ttrue, // analyze code", "+\t\t\t\t\ttrue); // generate code", "+\t\t\treturn unit;", "+\t\t} finally {", "+\t\t\tif (unit != null) {", "+\t\t\t\tunit.cleanUp();", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edfd517b4cb79ac2170b8ed7634e6e64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "105a4ca655d44213ffe23400e85e9364ac7516e4", "commitAfterChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tchar[][] packageName, \t\tString unitName, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tboolean cleanUp, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["+\t}", "-\t\tchar[] source,", "-\t\tchar[][] packageName,", "-\t\tString unitName,", "+\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,", "-\t\tboolean cleanUp,", "-\t\t\t\t\tnew BasicCompilationUnit(", "-\t\t\t\t\t\tsource,", "-\t\t\t\t\t\tpackageName,", "-\t\t\t\t\t\tunitName,", "-\t\t\t\t\t\tjavaProject),", "+\t\t\t\t\tsourceUnit,", "-\t\t\tif (cleanUp && unit != null) {", "-\t\t\t\tunit.cleanUp();", "-\t\t\t}", "+\t\t\t// unit cleanup is done by caller"]}], "num": 63234}