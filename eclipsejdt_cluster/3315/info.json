{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c5b6967180f08fb93b9cf3cbb9d472a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f6da80daa8afa501e7f7101fe1c833", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\t\t\t\t\t\t\tReferenceBinding match = ((ReferenceBinding)wildcardBound).findSuperTypeWithSameErasure(superclassBound);", "+\t\t\t\t\t\t\t\tTypeBinding match = ((ReferenceBinding)wildcardBound).findSuperTypeWithSameErasure(superclassBound);", "-\t\t\t\t\t\t\tReferenceBinding match = ((ReferenceBinding)wildcardBound).findSuperTypeWithSameErasure(superInterfaceBound);", "+\t\t\t\t\t\t\tTypeBinding match = wildcardBound.findSuperTypeWithSameErasure(superInterfaceBound);", "-\t\t\t\tif (argumentType instanceof ReferenceBinding) {", "-\t\t\t\t\tReferenceBinding referenceArgument = (ReferenceBinding) argumentType;", "-\t\t\t\t\tTypeBinding match = referenceArgument.findSuperTypeWithSameErasure(substitutedSuperType);", "-\t\t\t\t\tif (match != null){", "-\t\t\t\t\t\t// Enum#RAW is not a substitute for <E extends Enum<E>> (86838)", "-\t\t\t\t\t\tif (match.isRawType() && substitutedSuperType.isBoundParameterizedType())", "-\t\t\t\t\t\t\tunchecked = true;", "-\t\t\t\t\t}", "-\t\t\t\t} ", "+\t\t\t\tTypeBinding match = argumentType.findSuperTypeWithSameErasure(substitutedSuperType);", "+\t\t\t\tif (match != null){", "+\t\t\t\t\t// Enum#RAW is not a substitute for <E extends Enum<E>> (86838)", "+\t\t\t\t\tif (match.isRawType() && substitutedSuperType.isBoundParameterizedType())", "+\t\t\t\t\t\tunchecked = true;", "+\t\t\t\t}", "-\t\t\t\tif (argumentType instanceof ReferenceBinding) {", "-\t\t\t\t\tReferenceBinding referenceArgument = (ReferenceBinding) argumentType;", "-\t\t\t\t\tTypeBinding match = referenceArgument.findSuperTypeWithSameErasure(substitutedSuperType);", "-\t\t\t\t\tif (match != null){", "-\t\t\t\t\t\t// Enum#RAW is not a substitute for <E extends Enum<E>> (86838)", "-\t\t\t\t\t\tif (match.isRawType() && substitutedSuperType.isBoundParameterizedType())", "-\t\t\t\t\t\t\tunchecked = true;", "-\t\t\t\t\t}", "+\t\t\t\tTypeBinding match = argumentType.findSuperTypeWithSameErasure(substitutedSuperType);", "+\t\t\t\tif (match != null){", "+\t\t\t\t\t// Enum#RAW is not a substitute for <E extends Enum<E>> (86838)", "+\t\t\t\t\tif (match.isRawType() && substitutedSuperType.isBoundParameterizedType())", "+\t\t\t\t\t\tunchecked = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d419185f3b29d11df36171320cefa29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "8f43eabe1403ef4601307ecfeddf822a49b29c34", "commitAfterChange": "3091564ff71d95ca83672941f8a4ec3464344683", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\tif (this.superclass.id != T_JavaLangObject && !argumentType.isCompatibleWith(hasSubstitution ? Scope.substitute(substitution, this.superclass) : this.superclass)) {", "-\t\t    return false;", "+\t\tif (this.superclass.id != T_JavaLangObject) {", "+\t\t\tTypeBinding substitutedSuperType = hasSubstitution ? Scope.substitute(substitution, this.superclass) : this.superclass;", "+\t\t\tif (argumentType instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding referenceArgument = (ReferenceBinding) argumentType;", "+\t\t\t\tTypeBinding match = referenceArgument.findSuperTypeErasingTo((ReferenceBinding)substitutedSuperType.erasure());", "+\t\t\t\tif (match != null){", "+\t\t\t\t\t// Enum#RAW is not a substitute for <E extends Enum<E>> (86838)", "+\t\t\t\t\tif (match.isRawType() && !substitutedSuperType.isRawType())", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (!argumentType.isCompatibleWith(substitutedSuperType)) {", "+\t\t\t    return false;", "+\t\t\t}", "-\t        if (!argumentType.isCompatibleWith(hasSubstitution ? Scope.substitute(substitution, this.superInterfaces[i]) : this.superInterfaces[i])) {", "-\t\t\t\treturn false;", "-\t        }", "+\t\t\tTypeBinding substitutedSuperType = hasSubstitution ? Scope.substitute(substitution, this.superInterfaces[i]) : this.superInterfaces[i];", "+\t\t\tif (argumentType instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding referenceArgument = (ReferenceBinding) argumentType;", "+\t\t\t\tTypeBinding match = referenceArgument.findSuperTypeErasingTo((ReferenceBinding)substitutedSuperType.erasure());", "+\t\t\t\tif (match != null){", "+\t\t\t\t\t// Enum#RAW is not a substitute for <E extends Enum<E>> (86838)", "+\t\t\t\t\tif (match.isRawType() && !substitutedSuperType.isRawType())", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (!argumentType.isCompatibleWith(substitutedSuperType)) {", "+\t\t\t    return false;", "+\t\t\t}"]}], "num": 3315}