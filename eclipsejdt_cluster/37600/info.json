{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "242d15c84cb8094a44ac172ed7584482", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10cccbe4a4a37fd955e3ce380b05b8f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "ee7a8340e3a250b29afacc2b0f2a8f1d78fdc6a8", "commitAfterChange": "1e986f6e04576ef708d8b80e355be08c2ab3a68a", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void test076()", "signatureAfterChange": " public void test076()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t* @throws Problem \\n\" + ", "-\t\t\t\"\t          ^^^^^^^\\n\" + ", "-\t\t\t\"Javadoc: Exception Problem is not declared\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t);", "+\t\t\"1. WARNING in IX.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static class Problem extends Exception {}\\n\" + ", "+\t\t\"\t                    ^^^^^^^\\n\" + ", "+\t\t\"The serializable class Problem does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static class Problem extends Exception {}\\n\" + ", "+\t\t\"\t                    ^^^^^^^\\n\" + ", "+\t\t\"The serializable class Problem does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\t* @throws Problem \\n\" + ", "+\t\t\"\t          ^^^^^^^\\n\" + ", "+\t\t\"Javadoc: Exception Problem is not declared\\n\" + ", "+\t\t\"----------\\n\"\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5b6806f03ee3b46499865118d949de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "ee7a8340e3a250b29afacc2b0f2a8f1d78fdc6a8", "commitAfterChange": "1e986f6e04576ef708d8b80e355be08c2ab3a68a", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void test076()", "signatureAfterChange": " public void test076()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t* @throws Problem \\n\" + ", "-\t\t\t\"\t          ^^^^^^^\\n\" + ", "-\t\t\t\"Javadoc: The type Problem is defined in an inherited type and an enclosing scope\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\"1. WARNING in IX.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static class Problem extends Exception {}\\n\" + ", "+\t\t\"\t                    ^^^^^^^\\n\" + ", "+\t\t\"The serializable class Problem does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static class Problem extends Exception {}\\n\" + ", "+\t\t\"\t                    ^^^^^^^\\n\" + ", "+\t\t\"The serializable class Problem does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\t* @throws Problem \\n\" + ", "+\t\t\"\t          ^^^^^^^\\n\" + ", "+\t\t\"Javadoc: The type Problem is defined in an inherited type and an enclosing scope\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "813c2a8575a755f0e45caa338acde4a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "ee7a8340e3a250b29afacc2b0f2a8f1d78fdc6a8", "commitAfterChange": "1e986f6e04576ef708d8b80e355be08c2ab3a68a", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void test076()", "signatureAfterChange": " public void test076()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t* @throws Problem \\n\" + ", "-\t\t\t\"\t          ^^^^^^^\\n\" + ", "-\t\t\t\"Javadoc: Exception Problem is not declared\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t);", "+\t\t\"1. WARNING in IX.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static class Problem extends Exception {}\\n\" + ", "+\t\t\"\t                    ^^^^^^^\\n\" + ", "+\t\t\"The serializable class Problem does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static class Problem extends Exception {}\\n\" + ", "+\t\t\"\t                    ^^^^^^^\\n\" + ", "+\t\t\"The serializable class Problem does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\t* @throws Problem \\n\" + ", "+\t\t\"\t          ^^^^^^^\\n\" + ", "+\t\t\"Javadoc: Exception Problem is not declared\\n\" + ", "+\t\t\"----------\\n\"\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e11465bcb8be3f8d0d88404250c7851d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void testBug427626()", "signatureAfterChange": " public void testBug427626()", "diff": ["+\t\t// 8u20 emits just one message inferred type not conforming to upper bound. ECJ's message is actually better.", "+\t\t// We used to emit only 1 error here. Here the lambda is broken, so inference fails leading to two messages.\t\t\t", "-\t\t\"1. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tss.stream().map(s -> {\\n\" + ", "+\t\t\"          class L1 {};\\n\" + ", "+\t\t\"          class L2 {\\n\" + ", "+\t\t\"            void mm(L1 l) {}\\n\" + ", "+\t\t\"          }\\n\" + ", "+\t\t\"          return new L2().mm(new L1());\\n\" + ", "+\t\t\"        }).forEach(e -> System.out.println(e));\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Stream<Object> to <unknown>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 13)\\n\" + "]}], "num": 37600}