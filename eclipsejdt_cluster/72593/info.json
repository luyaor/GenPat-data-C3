{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "baa26aba66a43a7655ebf2aca6a7452b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "192d5e7caf9d9ccb05ad75068a7f0772", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tboolean parseLiteralExpressionsAsConstants, \t\t\tboolean storeAnnotations, \t\t\tboolean statementsRecovery)", "signatureAfterChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tboolean parseLiteralExpressionsAsConstants, \t\t\tboolean storeAnnotations, \t\t\tboolean statementsRecovery)", "diff": ["-\t\t\t\tparseLiteralExpressionsAsConstants, storeAnnotations, statementsRecovery, true);", "+\t\t\t\tparseLiteralExpressionsAsConstants, storeAnnotations, true, statementsRecovery);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67941cece9fe159b33b5cc315a1f5e3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "97aa1dc82c96c4ef3bebbae850e5af4a78f8dcd4", "commitAfterChange": "92a7b5c8a7f265fdf9af699a7f44797a77112099", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants, \t\tboolean storeAnnotations)", "diff": ["-\t\tboolean parseLiteralExpressionsAsConstants) {", "+\t\tboolean parseLiteralExpressionsAsConstants,", "+\t\tboolean storeAnnotations) {", "+\t\tthis.options.storeAnnotations = storeAnnotations;"]}], "num": 72593}