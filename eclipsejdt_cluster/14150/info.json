{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ce99f1846e29d18cee52bb691b3c162", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb7e5443e8bd69ac80b6d89600280384", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t */", "+\tpublic static CompilationUnit parseCompilationUnit(", "+\t\tICompilationUnit unit,", "+\t\tboolean resolveBindings,", "+\t\tWorkingCopyOwner owner,", "+\t\tIProgressMonitor monitor) {", "+\t\t", "-\t\t\t\tcompilationUnitDeclaration = CompilationUnitResolver.resolve(unit, false/*don't cleanup*/, source, owner);", "-\t\t\t\tASTConverter converter = new ASTConverter(unit.getJavaProject().getOptions(true), true);", "+\t\t\t\tcompilationUnitDeclaration = CompilationUnitResolver.resolve(unit, false/*don't cleanup*/, source, owner, monitor);", "+\t\t\t\tASTConverter converter = new ASTConverter(unit.getJavaProject().getOptions(true), true, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8664a6ae3a652e00235b286a2571ad7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static CompilationUnit parsePartialCompilationUnit( \t\tICompilationUnit unit, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner)", "signatureAfterChange": " \tpublic static CompilationUnit parsePartialCompilationUnit( \t\tICompilationUnit unit, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t */", "+\tpublic static CompilationUnit parsePartialCompilationUnit(", "+\t\tICompilationUnit unit,", "+\t\tint position,", "+\t\tboolean resolveBindings,", "+\t\tWorkingCopyOwner owner,", "+\t\tIProgressMonitor monitor) {", "-\t\t\t\t\towner);", "+\t\t\t\t\towner,", "+\t\t\t\t\tmonitor);", "-\t\t\t\tASTConverter converter = new ASTConverter(options, true);", "+\t\t\t\tASTConverter converter = new ASTConverter(options, true, monitor);", "-\t\t\t\tASTConverter converter = new ASTConverter(options, false);", "+\t\t\t\tASTConverter converter = new ASTConverter(options, false, monitor);", "-\t\t\tASTConverter converter = new ASTConverter(options, false);", "+\t\t\tASTConverter converter = new ASTConverter(options, false, monitor);"]}], "num": 14150}