{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b155501e1508642d4e6a5d992b1929e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06888e130544d72b89ee54f5692964be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 260, "signatureBeforeChange": "  public void testBug110060_TypePattern06() throws CoreException", "signatureAfterChange": " public void testBug110060_TypePattern06() throws CoreException", "diff": ["-", "+/** @deprecated As using a depreciated constant */", "-\tsearch(\"A*A*\", TYPE, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tsearch(\"A*A*\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "-\t\t\"src/b110060/AA.java b110060.AA [AA] EXACT_MATCH\\n\" +", "-\t\t\"src/b110060/AAxx.java b110060.AAxx [AAxx] EXACT_MATCH\\n\" +", "-\t\t\"src/b110060/AxA.java b110060.AxA [AxA] EXACT_MATCH\\n\" +", "-\t\t\"src/b110060/AxxAyy.java b110060.AxxAyy [AxxAyy] EXACT_MATCH\\n\" +", "-\t\t\"src/b110060/Test.java b110060.Test.aa [AA] EXACT_MATCH\\n\" +", "-\t\t\"src/b110060/Test.java b110060.Test.aaxx [AAxx] EXACT_MATCH\\n\" +", "-\t\t\"src/b110060/Test.java b110060.Test.axa [AxA] EXACT_MATCH\\n\" +", "-\t\t\"src/b110060/Test.java b110060.Test.axxayy [AxxAyy] EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.annotation.Annotation EXACT_MATCH\"", "+\t\t\"src/b110060/Test.java b110060.Test.a1 [Aaa] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java b110060.Test.a2 [AAa] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java b110060.Test.a3 [AaAaAa] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java b110060.Test.a4 [AAxx] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java b110060.Test.a5 [AxA] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java b110060.Test.a6 [AxxAyy] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366f543b543872743155767e8de8fbc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "c61a3471dc232eb282f499e766b6240869dfcc94", "commitAfterChange": "99886b8fe1bbade8b0a4bfabc2bc140889fa0f95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void _test011()", "signatureAfterChange": " \tpublic void test011()", "diff": ["-\t// TODO (kent) must warn when overridiing varargs method with non varargs one", "-\tpublic void _test011() {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=83379", "+\tpublic void test011() {", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic void count(int ... values) {}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y extends X {\\n\" +", "-\t\t\t\t\"\tpublic void count(int[] values) {}\\n\" +", "-\t\t\t\t\"}\\n\",", "+\t\t\t\t\"public class X { void count(int ... values) {} }\\n\" +", "+\t\t\t\t\"class Y extends X { void count(int[] values) {} }\\n\" +", "+\t\t\t\t\"class Z extends Y { void count(int... values) {} }\\n\"", "-\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"\tpublic void count(int[] values) {}\\n\" + ", "-\t\t\t\"\t  ^^^^^\\n\" + ", "-\t\t\t\"The method count(int[]) is overriding a varargs method from X\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass Y extends X { void count(int[] values) {} }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Varargs methods should only override other varargs methods unlike count(int[]) and count(int...) from type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass Z extends Y { void count(int... values) {} }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Varargs methods should only override other varargs methods unlike count(int...) and count(int[]) from type Y\\n\" + "]}], "num": 58076}