{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f7805738d62a8943734ddc5ac196d15", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8073225a35def4f8094759a532470848", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "signatureAfterChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "diff": ["-\t\t\t\tthis.parameters[i] = env.createAnnotatedType(parameter, TagBits.AnnotationNonNull);", "+\t\t\t\t// TODO(Stephan): Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "+\t\t\t\t// this.parameters[i] = env.createAnnotatedType(parameter, TagBits.AnnotationNonNull);", "-\t\tthis.returnType = env.createAnnotatedType(this.returnType, TagBits.AnnotationNonNull);", "+\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "+\t\t// this.returnType = env.createAnnotatedType(this.returnType, TagBits.AnnotationNonNull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdb23e2c5e0edf7c48cebce1d9eed0ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "25c55f5a3b95044fb71ce56ee0bb0a797b58daa1", "commitAfterChange": "aa6078ae8b56e2dd94bf0e99bd049422ccaa24f4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "signatureAfterChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "diff": ["-\t\t\t\t// TODO(Stephan): Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "-\t\t\t\t// this.parameters[i] = env.createAnnotatedType(parameter, TagBits.AnnotationNonNull);", "+\t\t\t\tthis.parameters[i] = env.createAnnotatedType(parameter, new AnnotationBinding[]{env.getNonNullAnnotation()});", "-\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "-\t\t// this.returnType = env.createAnnotatedType(this.returnType, TagBits.AnnotationNonNull);", "+\t\tthis.returnType = env.createAnnotatedType(this.returnType, new AnnotationBinding[]{env.getNonNullAnnotation()});"]}], "num": 72788}