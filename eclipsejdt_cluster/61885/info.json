{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1acc24d7bc336583312f03ed387131e6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824b759da79eba3db31eb64c8655f30f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "88e5aa006a98c27f378a9ba9656ac196342e257f", "commitAfterChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r private NameEnvironmentAnswer findClass(char[] name, char[][] packageName)", "signatureAfterChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-private NameEnvironmentAnswer findClass(char[] name, char[][] packageName) {\r", "+private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName) {\r", "-\t\tString fullName = assembleName(name, packageName, '/');\r", "-\t\t\tif (fullName.equals(initialTypeNames[i]))\r", "+\t\t\tif (qualifiedTypeName.equals(initialTypeNames[i]))\r", "+\r", "+\tString qualifiedBinaryFileName = qualifiedTypeName + \".class\"; //$NON-NLS-1$\r", "+\tString binaryFileName = qualifiedBinaryFileName;\r", "+\tString qualifiedPackageName =  \"\"; //$NON-NLS-1$\r", "+\tif (qualifiedTypeName.length() > typeName.length) {\r", "+\t\tint typeNameStart = qualifiedBinaryFileName.length() - typeName.length - 6; // size of \".class\"\r", "+\t\tqualifiedPackageName =  qualifiedBinaryFileName.substring(0, typeNameStart - 1);\r", "+\t\tbinaryFileName = qualifiedBinaryFileName.substring(typeNameStart);\r", "+\t}\r", "-\t\tNameEnvironmentAnswer answer = classpathLocations[i].findClass(name, packageName);\r", "+\t\tNameEnvironmentAnswer answer = classpathLocations[i].findClass(binaryFileName, qualifiedPackageName, qualifiedBinaryFileName);\r", "-\treturn null; \r", "+\treturn null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86d63a895a12c294a94be06c688865e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "06f23e3e171e1532838272ad3cfed1dbf476c295", "commitAfterChange": "fd83708e4f6c48e5f68b55d90ce222d8723ca6ce", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": "\r private NameEnvironmentAnswer findClass(char[] name, char[][] packageName)", "diff": ["-private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName){\r", "+private NameEnvironmentAnswer findClass(char[] name, char[][] packageName) {\r", "+\tString fullName = assembleName(name, packageName, File.separatorChar);\r", "-\t\tif (qualifiedTypeName.equals(knownFileNames[i]))\r", "+\t\tif (fullName.equals(knownFileNames[i]))\r", "-\tString qualifiedBinaryFileName = qualifiedTypeName + \".class\"; //$NON-NLS-1$\r", "-\tString qualifiedPackageName =\r", "-\t\tqualifiedTypeName.length() == typeName.length\r", "-\t\t\t? \"\" //$NON-NLS-1$\r", "-\t\t\t: qualifiedBinaryFileName.substring(0, qualifiedTypeName.length() - typeName.length - 1);\r", "+\tString filename = new String(name);\r", "+\tString binaryFilename = filename + \".class\"; //$NON-NLS-1$\r", "+\tString sourceFilename = filename + \".java\"; //$NON-NLS-1$\r", "-\t\tNameEnvironmentAnswer answer = classpaths[i].findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName);\r", "-\t\tif (answer != null) return answer;\r", "+\t\tClasspath classpath = classpaths[i];\r", "+\t\tboolean binaryExists = classpath.exists(binaryFilename, packageName);\r", "+\t\tboolean sourceExists = classpath.exists(sourceFilename, packageName);\r", "+\t\tif (binaryExists == sourceExists) {\r", "+\t\t\tif (binaryExists) { // so both are true\r", "+\t\t\t\tlong binaryModified = classpath.lastModified(binaryFilename, packageName);\r", "+\t\t\t\tlong sourceModified = classpath.lastModified(sourceFilename, packageName);\r", "+\t\t\t\tif (binaryModified > sourceModified)\r", "+\t\t\t\t\treturn classpath.readClassFile(binaryFilename, packageName);\r", "+\t\t\t\tif (sourceModified > 0)\r", "+\t\t\t\t\treturn classpath.readJavaFile(sourceFilename, packageName);\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tif (binaryExists)\r", "+\t\t\t\treturn classpath.readClassFile(binaryFilename, packageName);\r", "+\t\t\telse\r", "+\t\t\t\treturn classpath.readJavaFile(sourceFilename, packageName);\r", "+\t\t}\r", "-\treturn null;\r", "+\treturn null; \r"]}], "num": 61885}