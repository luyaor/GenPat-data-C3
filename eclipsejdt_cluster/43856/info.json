{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3267537391721bb6efd727222f0fd30c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b50a902e53f566cac870ea47482bc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/FieldInfo.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void readConstantAttribute()", "signatureAfterChange": " private void readConstantAttribute()", "diff": ["-\t\t\t\t\t\t\t\tconstant = new BooleanConstant(i4At(relativeOffset + 1) == 1);", "+\t\t\t\t\t\t\t\tconstant = BooleanConstant.fromValue(i4At(relativeOffset + 1) == 1);", "-\t\t\t\t\t\t\t\tconstant = new IntConstant(i4At(relativeOffset + 1));", "+\t\t\t\t\t\t\t\tconstant = IntConstant.fromValue(i4At(relativeOffset + 1));", "-\t\t\t\t\t\t\t\tconstant = new CharConstant((char) i4At(relativeOffset + 1));", "+\t\t\t\t\t\t\t\tconstant = CharConstant.fromValue((char) i4At(relativeOffset + 1));", "-\t\t\t\t\t\t\t\tconstant = new ByteConstant((byte) i4At(relativeOffset + 1));", "+\t\t\t\t\t\t\t\tconstant = ByteConstant.fromValue((byte) i4At(relativeOffset + 1));", "-\t\t\t\t\t\t\t\tconstant = new ShortConstant((short) i4At(relativeOffset + 1));", "+\t\t\t\t\t\t\t\tconstant = ShortConstant.fromValue((short) i4At(relativeOffset + 1));", "-\t\t\t\t\tconstant = new FloatConstant(floatAt(relativeOffset + 1));", "+\t\t\t\t\tconstant = FloatConstant.fromValue(floatAt(relativeOffset + 1));", "-\t\t\t\t\tconstant = new DoubleConstant(doubleAt(relativeOffset + 1));", "+\t\t\t\t\tconstant = DoubleConstant.fromValue(doubleAt(relativeOffset + 1));", "-\t\t\t\t\tconstant = new LongConstant(i8At(relativeOffset + 1));", "+\t\t\t\t\tconstant = LongConstant.fromValue(i8At(relativeOffset + 1));", "-\t\t\t\t\t\tnew StringConstant(", "+\t\t\t\t\t\tStringConstant.fromValue("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd387058616de58c93c5d1687036cd5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AnnotationComponentValue.java", "commitBeforeChange": "ffcfe0dac7f476f076089d3cdae600b5982efdfb", "commitAfterChange": "263d5090059fdde1fe0ad777198fe1aa5d325a3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic AnnotationComponentValue( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \t \tpublic AnnotationComponentValue( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["-\t\t\t\tfinal int enumIndex = this.u2At(classFileBytes, this.readOffset, offset);", "-\t\t\t\tthis.enumConstantIndex = enumIndex;", "-\t\t\t\tif (enumIndex != 0) {", "-\t\t\t\t\tIConstantPoolEntry constantPoolEntry = constantPool.decodeEntry(enumIndex);", "-\t\t\t\t\tif (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Fieldref) {", "+\t\t\t\tint index = this.u2At(classFileBytes, this.readOffset, offset);", "+\t\t\t\tthis.enumConstantTypeNameIndex = index;", "+\t\t\t\tif (index != 0) {", "+\t\t\t\t\tIConstantPoolEntry constantPoolEntry = constantPool.decodeEntry(index);", "+\t\t\t\t\tif (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Utf8) {", "-\t\t\t\t\tthis.enumConstant = constantPoolEntry;", "+\t\t\t\t\tthis.enumConstantTypeName = constantPoolEntry;", "+\t\t\t\t}", "+\t\t\t\tthis.readOffset += 2;", "+\t\t\t\tindex = this.u2At(classFileBytes, this.readOffset, offset);", "+\t\t\t\tthis.enumConstantNameIndex = index;", "+\t\t\t\tif (index != 0) {", "+\t\t\t\t\tIConstantPoolEntry constantPoolEntry = constantPool.decodeEntry(index);", "+\t\t\t\t\tif (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Utf8) {", "+\t\t\t\t\t\tthrow new ClassFormatException(ClassFormatException.INVALID_CONSTANT_POOL_ENTRY);", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.enumConstantName = constantPoolEntry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfdca58e3921cab07215b38c1199f81f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/AnnotationInfo.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " Object decodeDefaultValue()", "signatureAfterChange": " Object decodeDefaultValue()", "diff": ["-\t\t\tvalue = new BooleanConstant(i4At(constValueOffset + 1) == 1);", "+\t\t\tvalue = BooleanConstant.fromValue(i4At(constValueOffset + 1) == 1);", "-\t\t\tvalue = new IntConstant(i4At(constValueOffset + 1));", "+\t\t\tvalue = IntConstant.fromValue(i4At(constValueOffset + 1));", "-\t\t\tvalue = new CharConstant((char) i4At(constValueOffset + 1));", "+\t\t\tvalue = CharConstant.fromValue((char) i4At(constValueOffset + 1));", "-\t\t\tvalue = new ByteConstant((byte) i4At(constValueOffset + 1));", "+\t\t\tvalue = ByteConstant.fromValue((byte) i4At(constValueOffset + 1));", "-\t\t\tvalue = new ShortConstant((short) i4At(constValueOffset + 1));", "+\t\t\tvalue = ShortConstant.fromValue((short) i4At(constValueOffset + 1));", "-\t\t\tvalue = new DoubleConstant(doubleAt(constValueOffset + 1));", "+\t\t\tvalue = DoubleConstant.fromValue(doubleAt(constValueOffset + 1));", "-\t\t\tvalue = new FloatConstant(floatAt(constValueOffset + 1));", "+\t\t\tvalue = FloatConstant.fromValue(floatAt(constValueOffset + 1));", "-\t\t\tvalue = new LongConstant(i8At(constValueOffset + 1));", "+\t\t\tvalue = LongConstant.fromValue(i8At(constValueOffset + 1));", "-\t\t\tvalue = new StringConstant(String.valueOf(utf8At(constValueOffset + 3, u2At(constValueOffset + 1))));", "+\t\t\tvalue = StringConstant.fromValue(String.valueOf(utf8At(constValueOffset + 3, u2At(constValueOffset + 1))));"]}], "num": 43856}