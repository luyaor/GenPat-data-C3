{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b951b5b6cfe66e9f1b2d0b60781b401f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2353bebdff80a58997c4556e48b15800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/FloatCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int putIfAbsent(float key, int value)", "signatureAfterChange": " public int putIfAbsent(float key, int value)", "diff": ["-\t\tfor (int i = 0, max = elementSize; i < max; i++) {", "-\t\t\tif (keyTable[i] == 0.0f) {", "+\t\tfor (int i = 0, max = this.elementSize; i < max; i++) {", "+\t\t\tif (this.keyTable[i] == 0.0f) {", "-\t\t\t\tint value2 = Float.floatToIntBits(keyTable[i]);", "+\t\t\t\tint value2 = Float.floatToIntBits(this.keyTable[i]);", "-\t\t\t\t\treturn valueTable[i];", "+\t\t\t\t\treturn this.valueTable[i];", "-\t\t\t\t\treturn valueTable[i];", "+\t\t\t\t\treturn this.valueTable[i];", "-\t\tfor (int i = 0, max = elementSize; i < max; i++) {", "-\t\t\tif (keyTable[i] == key) {", "-\t\t\t\treturn valueTable[i];", "+\t\tfor (int i = 0, max = this.elementSize; i < max; i++) {", "+\t\t\tif (this.keyTable[i] == key) {", "+\t\t\t\treturn this.valueTable[i];", "-\tif (elementSize == keyTable.length) {", "+\tif (this.elementSize == this.keyTable.length) {", "-\t\tSystem.arraycopy(keyTable, 0, (keyTable = new float[elementSize * 2]), 0, elementSize);", "-\t\tSystem.arraycopy(valueTable, 0, (valueTable = new int[elementSize * 2]), 0, elementSize);", "+\t\tSystem.arraycopy(this.keyTable, 0, (this.keyTable = new float[this.elementSize * 2]), 0, this.elementSize);", "+\t\tSystem.arraycopy(this.valueTable, 0, (this.valueTable = new int[this.elementSize * 2]), 0, this.elementSize);", "-\tkeyTable[elementSize] = key;", "-\tvalueTable[elementSize] = value;", "-\telementSize++;", "+\tthis.keyTable[this.elementSize] = key;", "+\tthis.valueTable[this.elementSize] = value;", "+\tthis.elementSize++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fed4ef5ab2e4cf86c5c1c64bbc02ba0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/DoubleCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int putIfAbsent(double key, int value)", "signatureAfterChange": " public int putIfAbsent(double key, int value)", "diff": ["-\t\tfor (int i = 0, max = elementSize; i < max; i++) {", "-\t\t\tif (keyTable[i] == 0.0) {", "+\t\tfor (int i = 0, max = this.elementSize; i < max; i++) {", "+\t\t\tif (this.keyTable[i] == 0.0) {", "-\t\t\t\tlong value2 = Double.doubleToLongBits(keyTable[i]);", "+\t\t\t\tlong value2 = Double.doubleToLongBits(this.keyTable[i]);", "-\t\t\t\t\treturn valueTable[i];", "+\t\t\t\t\treturn this.valueTable[i];", "-\t\t\t\t\treturn valueTable[i];", "+\t\t\t\t\treturn this.valueTable[i];", "-\t\tfor (int i = 0, max = elementSize; i < max; i++) {", "-\t\t\tif (keyTable[i] == key) {", "-\t\t\t\treturn valueTable[i];", "+\t\tfor (int i = 0, max = this.elementSize; i < max; i++) {", "+\t\t\tif (this.keyTable[i] == key) {", "+\t\t\t\treturn this.valueTable[i];", "-\tif (elementSize == keyTable.length) {", "+\tif (this.elementSize == this.keyTable.length) {", "-\t\tSystem.arraycopy(keyTable, 0, (keyTable = new double[elementSize * 2]), 0, elementSize);", "-\t\tSystem.arraycopy(valueTable, 0, (valueTable = new int[elementSize * 2]), 0, elementSize);", "+\t\tSystem.arraycopy(this.keyTable, 0, (this.keyTable = new double[this.elementSize * 2]), 0, this.elementSize);", "+\t\tSystem.arraycopy(this.valueTable, 0, (this.valueTable = new int[this.elementSize * 2]), 0, this.elementSize);", "-\tkeyTable[elementSize] = key;", "-\tvalueTable[elementSize] = value;", "-\telementSize++;", "+\tthis.keyTable[this.elementSize] = key;", "+\tthis.valueTable[this.elementSize] = value;", "+\tthis.elementSize++;"]}], "num": 21127}