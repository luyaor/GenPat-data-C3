{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dc860df92825887d4a7a6134ebec960", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e73be63d364d88f92704e7d87df546", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/MemberDeclarationImpl.java", "commitBeforeChange": "03e205d7db02078dce9accf78d78c9d9a6ce6117", "commitAfterChange": "7ff51a474972e200f8003fdc2186f43ef4e82e14", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public String getDocComment()", "signatureAfterChange": "      public String getDocComment()", "diff": ["-\t\t\tfinal BodyDeclaration bodyDecl = (BodyDeclaration)getAstNode();", "-\t\t\tif( bodyDecl != null ){", "-\t\t\t\tfinal Javadoc javaDoc = bodyDecl.getJavadoc();", "-\t            if( javaDoc == null ) return \"\";", "-\t            return javaDoc.toString();", "-\t\t\t}", "-\t\t\treturn \"\";", "+        \tfinal ASTNode node = getAstNode();        \t", "+        \tif(node != null){", "+        \t\tif( node instanceof BodyDeclaration )", "+        \t\t\t", "+        \t\t\treturn getDocComment((BodyDeclaration)node);", "+", "+        \t\telse if( node.getNodeType() == ASTNode.VARIABLE_DECLARATION_FRAGMENT ){", "+        \t\t\tfinal ASTNode parent = node.getParent();", "+        \t\t\t// a field declaration", "+        \t\t\tif( parent instanceof BodyDeclaration )", "+        \t\t\t\treturn getDocComment((BodyDeclaration)parent);", "+        \t\t\t", "+        \t\t}", "+        \t\treturn \"\";", "+        \t}  ", "-", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a05c8009510314ffb32436a79ec4f68b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationElementDeclarationImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     public AnnotationValue getDefaultValue()", "signatureAfterChange": "     public AnnotationValue getDefaultValue()", "diff": ["-\t */\r", "-    public AnnotationValue getDefaultValue()\r", "-    {   \r", "-        if( isFromSource() ){\r", "-            final AnnotationTypeMemberDeclaration astNode = (AnnotationTypeMemberDeclaration)getAstNode();\r", "-\t\t\tif( astNode == null ) return null;\r", "-            final Expression defaultExpr = astNode.getDefault();\r", "-            if(defaultExpr == null ) return null;\r", "-            return Factory.createAnnotationValue(defaultExpr, this, _env);\r", "-        }\r", "-        else{\r", "-            // TODO: handle the binary case.            \r", "-            return null;\r", "-        }\r", "-    }\r", "+\t */", "+    public AnnotationValue getDefaultValue()", "+    {   ", "+\t\tfinal IMethodBinding binding = getDeclarationBinding();", "+\t\tfinal Object defaultValue = binding.getDefaultValue();", "+\t\treturn Factory.createDefaultValue(defaultValue, this, _env);      ", "+    }"]}], "num": 47424}