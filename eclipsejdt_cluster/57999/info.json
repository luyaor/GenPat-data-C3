{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "219a5b5845ed9104908f4e2803d304e9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1095bc40cf6fa01b9fe4745f61926c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "0f3615b9d34177036abe735792350c6daafd5f0f", "commitAfterChange": "246965b39748e3da2ea49457412592390c45caa5", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": "  \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t            if (this.arguments == null) {", "-\t            \treturn otherParamType.arguments == null;", "-\t            }", "-\t            int length = this.arguments.length;", "-\t            TypeBinding[] otherArguments = otherParamType.arguments;", "-\t            if (otherArguments == null || otherArguments.length != length) return false;", "-\t            for (int i = 0; i < length; i++) {", "-\t            \tif (!this.arguments[i].isTypeArgumentContainedBy(otherArguments[i]))", "-\t            \t\treturn false;", "+\t            if (this.arguments != ParameterizedSingleTypeReference.DIAMOND_TYPE_ARGUMENTS) {", "+\t\t            if (this.arguments == null) {", "+\t\t            \treturn otherParamType.arguments == null;", "+\t\t            }", "+\t\t            int length = this.arguments.length;", "+\t\t            TypeBinding[] otherArguments = otherParamType.arguments;", "+\t\t            if (otherArguments == null || otherArguments.length != length) return false;", "+\t\t            for (int i = 0; i < length; i++) {", "+\t\t            \tif (!this.arguments[i].isTypeArgumentContainedBy(otherArguments[i]))", "+\t\t            \t\treturn false;", "+\t\t            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd288df29be6edbcc80551c6ed9e19a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "02e0207f51a14b2b110968b24524e6d9461bc936", "commitAfterChange": "7743b78aa7dc3095d1fff9fa367431511a686bf2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "signatureAfterChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "diff": ["+\t\t\tReferenceBinding equivalent = this;", "-\t        if (otherEquivalent != null && otherEquivalent.isParameterizedType()) {", "-\t\t        ParameterizedTypeBinding otherParameterizedType = (ParameterizedTypeBinding) otherEquivalent;", "+\t        if (otherEquivalent == null) {", "+\t        \t// allow LinkedList<String> to match List<T> (downcast scenario)", "+\t\t    \tequivalent = this.findSuperTypeErasingTo((ReferenceBinding)otherType.erasure());", "+\t        \tif (equivalent == null || !equivalent.isParameterizedType())", "+\t        \t\treturn;", "+\t        \totherEquivalent = (ReferenceBinding)otherType;", "+\t        }", "+\t        if (equivalent.isParameterizedType() && otherEquivalent.isParameterizedType()) {", "+\t        \tParameterizedTypeBinding parameterizedType = (ParameterizedTypeBinding) equivalent;", "+\t        \tParameterizedTypeBinding otherParameterizedType = (ParameterizedTypeBinding) otherEquivalent;", "-\t                this.arguments[i].collectSubstitutes(otherParameterizedType.arguments[i], substitutes);", "+\t                parameterizedType.arguments[i].collectSubstitutes(otherParameterizedType.arguments[i], substitutes);", "-\t\t    }", "+\t        }"]}], "num": 57999}