{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79c1c53df9653f15da7bce55fcc98d1f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aa248104a19fc4065109fdd0e5da27e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "ec64763fa4e57b4943311ee555e5ddce81854cf2", "commitAfterChange": "b0ee678b65f48d1cfab35972dd53d6bd85389446", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\t\t\tif (innerCtx == null) { // no inference -> assume it wasn't really poly after all", "+\t\t\t\t\t\tif (innerCtx == null || innerCtx.stepCompleted >= InferenceContext18.TYPE_INFERRED) { ", "+\t\t\t\t\t\t\t/* No inference context -> the method was likely manufactured by Scope.findExactMethod -> assume it wasn't really poly after all.", "+\t\t\t\t\t\t\t   Otherwise, either the constraints and initial bounds that would effectively reduce to b3 are already transferred to current context ", "+\t\t\t\t\t\t\t   during C Set construction. Otherwise all that is relevant is to relate the return type with expected type.", "+\t\t\t\t\t\t\t*/", "-\t\t\t\t\t\tif (innerCtx.stepCompleted >= InferenceContext18.TYPE_INFERRED) {", "-\t\t\t\t\t\t\t// The constraints and initial bounds that would effectively reduce to b3 are already transferred to current context during C Set construction.", "-\t\t\t\t\t\t\t// This should really be done only for poly invocations interleaved by a lambda that is not pertinent to applicability. FIXME.", "-\t\t\t\t\t\t\treturn TRUE;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tinnerCtx.outerContext = inferenceContext;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd313f2497d6463edd23950b25add81d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 66, "signatureBeforeChange": " public void exitUserScope(BlockScope currentScope)", "signatureAfterChange": " public void exitUserScope(BlockScope currentScope)", "diff": ["-\tif (!generateLocalVariableTableAttributes)", "+\tif (!manageLocalVariables)", "-\t\tif (visibleLocal == null)", "-\t\t\tcontinue;", "-\t\tif (visibleLocal.declaringScope != currentScope) // left currentScope", "+\t\tif (visibleLocal == null || visibleLocal.declaringScope != currentScope) {", "+\t\t\t// left currentScope", "+\t\t}", "-\t\tif (visibleLocal.initializationCount > 0){", "+\t\tif (visibleLocal.initializationCount > 0 && this.generateLocalVariableTableAttributes){"]}], "num": 44453}