{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d43b7bb3af381622b0d4d3044058aefd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fded595ebc2cb3c55b5f28d48c10045", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c715f8e3803c63af74a48d2bae270a5e793b35ac", "commitAfterChange": "81f50f4d17efde8e5b1f2c46aae8033d5b63adb9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\t\tFieldBinding otherField = (FieldBinding) fieldsFound.elementAt(i);\r", "-\t\t\t\tif (field == otherField)\r", "+\t\t\t\tObject[] other = (Object[])fieldsFound.elementAt(i);\r", "+\t\t\t\tFieldBinding otherField = (FieldBinding) other[0];\r", "+\t\t\t\tReferenceBinding otherReceiverType = (ReferenceBinding) other[1];\r", "+\t\t\t\tif (field == otherField && receiverType == otherReceiverType)\r", "-\t\t\tfieldsFound.add(field);\r", "+\t\t\tfieldsFound.add(new Object[]{field, receiverType});\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8445640aed687dfd04d4e910f36c487c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c715f8e3803c63af74a48d2bae270a5e793b35ac", "commitAfterChange": "81f50f4d17efde8e5b1f2c46aae8033d5b63adb9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\r", "-\t\t\t\tMethodBinding otherMethod = (MethodBinding) methodsFound.elementAt(i);\r", "-\t\t\t\tif (method == otherMethod)\r", "+\t\t\t\tObject[] other = (Object[]) methodsFound.elementAt(i);\r", "+\t\t\t\tMethodBinding otherMethod = (MethodBinding) other[0];\r", "+\t\t\t\tReferenceBinding otherReceiverType = (ReferenceBinding) other[1];\r", "+\t\t\t\tif (method == otherMethod && receiverType == otherReceiverType)\r", "-\t\t\tmethodsFound.add(method);\r", "+\t\t\tmethodsFound.add(new Object[]{method, receiverType});\r"]}], "num": 4240}