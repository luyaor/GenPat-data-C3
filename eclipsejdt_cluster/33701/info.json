{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c872de6c6811aecdd2a140c4e317dfa5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "214cf022d7b70311776113fd81bfc9fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "4e96c3149b06a18db826fbf0e9331240092b91b0", "commitAfterChange": "5e73da37708a3e75174352968dbeb9e810da3395", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected int resolveLevelForType(TypeBinding typeBinding)", "signatureAfterChange": " protected int resolveLevelForType(TypeBinding typeBinding)", "diff": ["-\treturn resolveLevelForType(", "-\t\t\tthis.pattern.simpleName,", "-\t\t\tthis.pattern.qualification,", "-\t\t\tthis.pattern.getTypeArguments(),", "-\t\t\t0,", "-\t\t\ttypeBinding);", "+\tif (typeBinding == null || !typeBinding.isValidBinding()) {", "+\t\tif (this.pattern.typeSuffix != TYPE_SUFFIX) return INACCURATE_MATCH;", "+\t} else {", "+\t\tswitch (this.pattern.typeSuffix) {", "+\t\t\tcase CLASS_SUFFIX:", "+\t\t\t\tif (!typeBinding.isClass()) return IMPOSSIBLE_MATCH;", "+\t\t\t\tbreak;", "+\t\t\tcase CLASS_AND_INTERFACE_SUFFIX:", "+\t\t\t\tif (!(typeBinding.isClass() || (typeBinding.isInterface() && !typeBinding.isAnnotationType()))) return IMPOSSIBLE_MATCH;", "+\t\t\t\tbreak;", "+\t\t\tcase CLASS_AND_ENUM_SUFFIX:", "+\t\t\t\tif (!(typeBinding.isClass() || typeBinding.isEnum())) return IMPOSSIBLE_MATCH;", "+\t\t\t\tbreak;", "+\t\t\tcase INTERFACE_SUFFIX:", "+\t\t\t\tif (!typeBinding.isInterface() || typeBinding.isAnnotationType()) return IMPOSSIBLE_MATCH;", "+\t\t\t\tbreak;", "+\t\t\tcase INTERFACE_AND_ANNOTATION_SUFFIX:", "+\t\t\t\tif (!(typeBinding.isInterface() || typeBinding.isAnnotationType())) return IMPOSSIBLE_MATCH;", "+\t\t\t\tbreak;", "+\t\t\tcase ENUM_SUFFIX:", "+\t\t\t\tif (!typeBinding.isEnum()) return IMPOSSIBLE_MATCH;", "+\t\t\t\tbreak;", "+\t\t\tcase ANNOTATION_TYPE_SUFFIX:", "+\t\t\t\tif (!typeBinding.isAnnotationType()) return IMPOSSIBLE_MATCH;", "+\t\t\t\tbreak;", "+\t\t\tcase TYPE_SUFFIX : // nothing", "+\t\t}", "+\t}", "+\treturn resolveLevelForType( this.pattern.simpleName,", "+\t\t\t\t\t\tthis.pattern.qualification,", "+\t\t\t\t\t\tthis.pattern.getTypeArguments(),", "+\t\t\t\t\t\t0,", "+\t\t\t\t\t\ttypeBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9530d05c30a5ae9138a16d221dc883ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f39402d13165cb2a8baa9e8822f47cb5416f824f", "commitAfterChange": "c59f5d3873f087b004eace9b9fa6844d0400c666", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tIMarker createClasspathProblemMarker( \t\tString message, \t\tint severity, \t\tboolean isCycleProblem,\t\t \t\tboolean isClasspathFileFormatProblem)", "signatureAfterChange": " \tIMarker createClasspathProblemMarker(IJavaModelStatus status)", "diff": ["-\tIMarker createClasspathProblemMarker(", "-\t\tString message,", "-\t\tint severity,", "-\t\tboolean isCycleProblem,\t\t", "-\t\tboolean isClasspathFileFormatProblem) {", "+\tIMarker createClasspathProblemMarker(IJavaModelStatus status) {", "+\t\tint severity;", "+\t\tString[] arguments = new String[0];", "+\t\tboolean isCycleProblem = false, isClasspathFileFormatProblem = false;", "+\t\tswitch (status.getCode()) {", "+", "+\t\t\tcase  IJavaModelStatusConstants.CLASSPATH_CYCLE :", "+\t\t\t\tisCycleProblem = true;", "+\t\t\t\tif (JavaCore.ERROR.equals(getOption(JavaCore.CORE_CIRCULAR_CLASSPATH, true))) {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_ERROR;", "+\t\t\t\t} else {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_WARNING;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+", "+\t\t\tcase  IJavaModelStatusConstants.INVALID_CLASSPATH_FILE_FORMAT :", "+\t\t\t\tisClasspathFileFormatProblem = true;", "+\t\t\t\tseverity = IMarker.SEVERITY_ERROR;", "+\t\t\t\tbreak;", "+", "+\t\t\tdefault:", "+\t\t\t\tIPath path = status.getPath();", "+\t\t\t\tif (path != null) arguments = new String[] { path.toString() };", "+\t\t\t\tif (JavaCore.ERROR.equals(getOption(JavaCore.CORE_INCOMPLETE_CLASSPATH, true))) {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_ERROR;", "+\t\t\t\t} else {", "+\t\t\t\t\tseverity = IMarker.SEVERITY_WARNING;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\t", "-\t\t\t\t\tIJavaModelMarker.CLASSPATH_FILE_FORMAT },", "+\t\t\t\t\tIJavaModelMarker.CLASSPATH_FILE_FORMAT,", "+\t\t\t\t\tIJavaModelMarker.ID,", "+\t\t\t\t\tIJavaModelMarker.ARGUMENTS ,", "+\t\t\t\t},", "-\t\t\t\t\tmessage,", "+\t\t\t\t\tstatus.getMessage(),", "-\t\t\t\t\tisClasspathFileFormatProblem ? \"true\" : \"false\"});//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tisClasspathFileFormatProblem ? \"true\" : \"false\",//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tnew Integer(status.getCode()),", "+\t\t\t\t\tUtil.getProblemArgumentsForMarker(arguments) ,", "+\t\t\t\t}", "+\t\t\t);"]}], "num": 33701}