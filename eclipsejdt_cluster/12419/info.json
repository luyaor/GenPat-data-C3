{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f414e90c61025d93a018df3f5a42383", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406e70810369bbdcd3fee8e7b8a468f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "ce4dcdda36d145f85633203e671aabd032ebd393", "commitAfterChange": "b60aac81ebd86849e9f3995f202b266825efdd72", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": "  public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\t\tif (receiverType != declaringClass) return false;", "+\t\treceiverCheck: {", "+\t\t\tif (receiverType != declaringClass) {", "+\t\t\t\t// special tolerance for type variable direct bounds", "+\t\t\t\tif (receiverType.isTypeVariable() && ((TypeVariableBinding) receiverType).isErasureBoundTo(declaringClass.erasure())) {", "+\t\t\t\t\tbreak receiverCheck;", "+\t\t\t\t}", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943cf105b59f6f56dacb39c3465765b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "ce4dcdda36d145f85633203e671aabd032ebd393", "commitAfterChange": "b60aac81ebd86849e9f3995f202b266825efdd72", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\t\tif (receiverType != declaringClass) return false;", "+\t\treceiverCheck: {", "+\t\t\tif (receiverType != declaringClass) {", "+\t\t\t\t// special tolerance for type variable direct bounds", "+\t\t\t\tif (receiverType.isTypeVariable() && ((TypeVariableBinding) receiverType).isErasureBoundTo(declaringClass.erasure())) {", "+\t\t\t\t\tbreak receiverCheck;", "+\t\t\t\t}", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}"]}], "num": 12419}