{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b759e965c83945b82f7f43aaf486c166", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aedc3154f612b14d4c88103397a22a4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType)", "diff": ["-\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\tmemberType.qualifiedPackageName(),", "-\t\t\t\t\tmemberType.qualifiedSourceName(),", "-\t\t\t\t\tmemberType.sourceName(),", "-\t\t\t\t\tmemberType.modifiers,", "-\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\trelevance);", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\tproposal.setDeclarationSignature(memberType.qualifiedPackageName());", "+\t\t\t\t\tproposal.setSignature(getSignature(memberType));", "+\t\t\t\t\tproposal.setPackageName(memberType.qualifiedPackageName());", "+\t\t\t\t\tproposal.setTypeName(memberType.qualifiedSourceName());", "+\t\t\t\t\tproposal.setCompletion(memberType.sourceName());", "+\t\t\t\t\tproposal.setFlags(memberType.modifiers);", "+\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\tmemberType.qualifiedPackageName(),", "-\t\t\t\t\tmemberType.qualifiedSourceName(),", "-\t\t\t\t\tmemberType.sourceName(),", "-\t\t\t\t\tmemberType.modifiers,", "-\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\trelevance);", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\tproposal.setDeclarationSignature(memberType.qualifiedPackageName());", "+\t\t\t\t\tproposal.setSignature(getSignature(memberType));", "+\t\t\t\t\tproposal.setPackageName(memberType.qualifiedPackageName());", "+\t\t\t\t\tproposal.setTypeName(memberType.qualifiedSourceName());", "+\t\t\t\t\tproposal.setCompletion(memberType.sourceName());", "+\t\t\t\t\tproposal.setFlags(memberType.modifiers | Flags.AccInterface);", "+\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c70bebd598b8976a90493d91d03bcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding)", "signatureAfterChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding)", "diff": ["-\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\tsourceType.qualifiedPackageName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.modifiers,", "-\t\t\t\t\t\tthis.startPosition - this.offset, ", "-\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\trelevance);", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\tproposal.setDeclarationSignature(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setSignature(getSignature(sourceType));", "+\t\t\t\t\t\tproposal.setPackageName(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setTypeName(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setCompletion(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setFlags(sourceType.modifiers);", "+\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\tsourceType.qualifiedPackageName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.modifiers,", "-\t\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\trelevance);", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\tproposal.setDeclarationSignature(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setSignature(getSignature(sourceType));", "+\t\t\t\t\t\tproposal.setPackageName(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setTypeName(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setCompletion(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setFlags(sourceType.modifiers | Flags.AccInterface);", "+\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 1876}