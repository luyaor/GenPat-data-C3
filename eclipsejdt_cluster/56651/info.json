{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e0646b1d6d9530570702051e99c0ee6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dbafc5436c9701f92abde8b6a4eb54f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "47771900cbbb5bb3caa27909268dd0af98465bcb", "commitAfterChange": "0db4739740c3aeec96e03a4d79d729f0f32d8640", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tif (resolver != null) {", "-\t\t\t\tfor (int i = 1, length = resolver.totalUnits; i < length; i++) {", "-\t\t\t\t\tCompilationUnitDeclaration parsedUnit = resolver.unitsToProcess[i];", "-\t\t\t\t\tif (parsedUnit.scope != null) ", "-\t\t\t\t\t\tparsedUnit.scope.faultInTypes(); // force resolution of signatures, so clients can query DOM AST", "-\t\t\t\t\tparsedUnit.cleanUp();", "-\t\t\t\t}", "-\t\t\t}", "+//\t\t\tif (resolver != null) {", "+//\t\t\t\tfor (int i = 1, length = resolver.totalUnits; i < length; i++) {", "+//\t\t\t\t\tCompilationUnitDeclaration parsedUnit = resolver.unitsToProcess[i];", "+//\t\t\t\t\tif (parsedUnit.scope != null) ", "+//\t\t\t\t\t\tparsedUnit.scope.faultInTypes(); // force resolution of signatures, so clients can query DOM AST", "+//\t\t\t\t\tparsedUnit.cleanUp();", "+//\t\t\t\t}", "+//\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba7e4e12d70e79a2fe05f7866486603", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "bb58594beea7321f1a2a3673bab3e26af89ead20", "commitAfterChange": "7376fb10956e4a03cc528e86b634b5ca73ef755b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\tCompilationUnitResolver resolver = null;", "-\t\t\tCompilationUnitResolver resolver =", "+\t\t\tresolver =", "-\t\t\t// unit cleanup is done by caller", "+\t\t\t// first unit cleanup is done by caller, but cleanup all enqueued requested units (not processed)", "+\t\t\tif (resolver != null) {", "+\t\t\t\tfor (int i = 1, length = resolver.totalUnits; i < length; i++) {", "+\t\t\t\t\tCompilationUnitDeclaration parsedUnit = resolver.unitsToProcess[i];", "+\t\t\t\t\tif (parsedUnit.scope != null) ", "+\t\t\t\t\t\tparsedUnit.scope.faultInTypes(); // force resolution of signatures, so clients can query DOM AST", "+\t\t\t\t\tparsedUnit.cleanUp();", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 56651}