{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f219c173e2a430727505df13e25e8d03", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a0f180e7dee74d02f6286bae49e425", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "1209010fd2d01b73be2d5ddcc68dee954a4dfb12", "commitAfterChange": "e2d64401ee163038583789c4f8e64653502b280a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["+\r", "+\t// if the binding declaring class is not visible, need special action\r", "+\t// for runtime compatibility on 1.2 VMs : change the declaring class of the binding\r", "+\t// NOTE: from 1.4 on, method's declaring class is touched if any different from receiver type\r", "+\t// and not from Object or implicit static method call.\t\r", "+\tif (binding.declaringClass != this.qualifyingType\r", "+\t\t&& !this.qualifyingType.isArrayType()\r", "+\t\t&& ((currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t&& (receiver != ThisReference.ThisImplicit || !binding.isStatic())\r", "+\t\t\t\t&& binding.declaringClass.id != T_Object) // no change for Object methods\r", "+\t\t\t|| !binding.declaringClass.canBeSeenBy(currentScope))) {\r", "+\t\tcodegenBinding = currentScope.enclosingSourceType().getUpdatedMethodBinding(binding, (ReferenceBinding) this.qualifyingType);\r", "+\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85530672756b8d803efd1e5923467eba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "1209010fd2d01b73be2d5ddcc68dee954a4dfb12", "commitAfterChange": "e2d64401ee163038583789c4f8e64653502b280a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["+\t\t\treturn;\r", "+\t\treturn;\r", "+\t\t\treturn;\r", "+\t}\r", "+\t// if the binding declaring class is not visible, need special action\r", "+\t// for runtime compatibility on 1.2 VMs : change the declaring class of the binding\r", "+\t// NOTE: from 1.4 on, method's declaring class is touched if any different from receiver type\r", "+\t// and not from Object or implicit static method call.\t\r", "+\tif (binding.declaringClass != this.qualifyingType\r", "+\t\t&& !this.qualifyingType.isArrayType()\r", "+\t\t&& ((currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t&& (receiver != ThisReference.ThisImplicit || !binding.isStatic())\r", "+\t\t\t\t&& binding.declaringClass.id != T_Object) // no change for Object methods\r", "+\t\t\t|| !binding.declaringClass.canBeSeenBy(currentScope))) {\r", "+\r", "+\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedMethodBinding(binding, (ReferenceBinding) this.qualifyingType);\r"]}], "num": 69287}