{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "796632730ff21f13cd81d31e8fedcf99", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d3f1084d2b048a5463a0bd25409796", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope)", "signatureAfterChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards)", "diff": ["-\tpublic MethodBinding getSingleAbstractMethod(Scope scope) {", "+\tpublic MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards) {", "-\t\tMethodBinding theAbstractMethod = genericType.getSingleAbstractMethod(scope);", "+\t\tMethodBinding theAbstractMethod = genericType.getSingleAbstractMethod(scope, replaceWildcards);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40867971ab93cc1dd6cfce5b715e79e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/IntersectionCastTypeBinding.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope)", "signatureAfterChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards)", "diff": ["-\tpublic MethodBinding getSingleAbstractMethod(Scope scope) {", "+\tpublic MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards) {", "-\t\t\tMethodBinding method = this.intersectingTypes[i].getSingleAbstractMethod(scope);", "+\t\t\tMethodBinding method = this.intersectingTypes[i].getSingleAbstractMethod(scope, replaceWildcards);"]}], "num": 50484}