{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38eb27bb59af8567f559d9c9cfb7e18f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b29ba8c38b05b337af8aecae4dd6e52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "commitAfterChange": "7cddbfa7d184b903e6606f21236d46be8958fe44", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["-\t\t\t\t\t\t\t\t\t\tif (params1[index] != params2[index].erasure())", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tif (params1[index] != params2[index].erasure()) {", "+\t\t\t\t\t\t\t\t\t\t\t// If one of them is a raw type", "+\t\t\t\t\t\t\t\t\t\t\tif (params1[index] instanceof RawTypeBinding) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif (params2[index].erasure() != ((RawTypeBinding)params1[index]).actualType()) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t} else  {", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\tif (params1[index].erasure() != params2[index])", "-\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tif (params1[index].erasure() != params2[index]) {", "+\t\t\t\t\t\t\t\t\t\t\t\t// If one of them is a raw type", "+\t\t\t\t\t\t\t\t\t\t\t\tif (params2[index] instanceof RawTypeBinding) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tif (params1[index].erasure() != ((RawTypeBinding)params2[index]).actualType()) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t\t} else  {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6fbf49018da1992a77a61e053f30ddc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "819829cb4aba9d7cb3215affc39d64058ef2e001", "commitAfterChange": "c0e819144102259ba36551701afd75ef0de9c5d8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "signatureAfterChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "diff": ["-\t\tboolean hasChangedSourceEntries = false;\r", "+\t\tboolean hasChangedContentForDependents = false;\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "+\t\t\t\thasChangedContentForDependents |= \r", "+\t\t\t\t\t(changeKind == IClasspathEntry.CPE_SOURCE) || oldResolvedPath[i].isExported();\r", "-\t\t\t} else if (\r", "-\t\t\t\toldResolvedPathLongest && index != i) { //reordering of the classpath\r", "-\t\t\t\taddClasspathDeltas(\r", "-\t\t\t\t\tproject.getPackageFragmentRoots(oldResolvedPath[i]),\r", "-\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "-\t\t\t\t\tdelta);\r", "-\t\t\t\tint changeKind = oldResolvedPath[i].getEntryKind();\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "-\r", "-\t\t\t\thasDelta = true;\r", "+\t\t\t} else {\r", "+\t\t\t\thasChangedContentForDependents |= (oldResolvedPath[i].isExported() != newResolvedPath[index].isExported());\r", "+\t\t\t\tif (oldResolvedPathLongest && index != i) { //reordering of the classpath\r", "+\t\t\t\t\taddClasspathDeltas(\r", "+\t\t\t\t\t\tproject.getPackageFragmentRoots(oldResolvedPath[i]),\r", "+\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "+\t\t\t\t\t\tdelta);\r", "+\t\t\t\t\tint changeKind = oldResolvedPath[i].getEntryKind();\r", "+\t\t\t\t\thasChangedContentForDependents |= (changeKind == IClasspathEntry.CPE_SOURCE);\r", "+\t\r", "+\t\t\t\t\thasDelta = true;\r", "+\t\t\t\t}\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "+\t\t\t\thasChangedContentForDependents |= \r", "+\t\t\t\t\t(changeKind == IClasspathEntry.CPE_SOURCE) || newResolvedPath[i].isExported();\r", "-\t\t\t} else if (\r", "-\t\t\t\t!oldResolvedPathLongest && index != i) { //reordering of the classpath\r", "-\t\t\t\taddClasspathDeltas(\r", "-\t\t\t\t\tproject.getPackageFragmentRoots(newResolvedPath[i]),\r", "-\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "-\t\t\t\t\tdelta);\r", "-\t\t\t\tint changeKind = newResolvedPath[i].getEntryKind();\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "-\t\t\t\thasDelta = true;\r", "+\t\t\t} else {\r", "+\t\t\t\thasChangedContentForDependents |= (newResolvedPath[i].isExported() != oldResolvedPath[index].isExported());\r", "+\t\t\t\tif (!oldResolvedPathLongest && index != i) { //reordering of the classpath\r", "+\t\t\t\t\taddClasspathDeltas(\r", "+\t\t\t\t\t\tproject.getPackageFragmentRoots(newResolvedPath[i]),\r", "+\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "+\t\t\t\t\t\tdelta);\r", "+\t\t\t\t\tint changeKind = newResolvedPath[i].getEntryKind();\r", "+\t\t\t\t\thasChangedContentForDependents |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "+\t\t\t\t\thasDelta = true;\r", "+\t\t\t\t}\r", "-\t\t\tif (hasChangedSourceEntries)\r", "+\t\t\tif (hasChangedContentForDependents)\r"]}], "num": 28678}