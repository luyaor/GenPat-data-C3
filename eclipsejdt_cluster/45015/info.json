{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0a1c207179cbdf911f267e6a3ae965a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240c49b0a86463f040c27d78ff5717e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DualParseSyntaxErrorTest.java", "commitBeforeChange": "880c1fdcebd82e64ed69da7c3bc9800134409052", "commitAfterChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "signatureAfterChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "diff": ["-\t\tfor (int i = computedUnit.types.length; --i >= 0;){", "-\t\t\tcomputedUnit.types[i].parseMethod(parser, computedUnit);", "+\t\tfor (int i = 0, length = computedUnit.types.length; i < length; i++){", "+\t\t\tcomputedUnit.types[i].parseMethods(parser, computedUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5a04cc0e54cecb739d1b2a79070427", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "880c1fdcebd82e64ed69da7c3bc9800134409052", "commitAfterChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration parse( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap settings, \t\t\tint flags)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parse( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap settings, \t\t\tint flags)", "diff": ["-\t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)node).parseMethod(parser, compilationUnitDeclaration);", "+\t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)node).parseMethods(parser, compilationUnitDeclaration);", "-\t\t\t\tfor (int i = types.length; --i >= 0;)", "-\t\t\t\t\ttypes[i].parseMethod(parser, compilationUnitDeclaration);", "+\t\t\t\tfor (int i = 0, length = types.length; i < length; i++)", "+\t\t\t\t\ttypes[i].parseMethods(parser, compilationUnitDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f11f6d69b619dab33e8c58f2454df93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "880c1fdcebd82e64ed69da7c3bc9800134409052", "commitAfterChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings, boolean recordParsingInformation)", "signatureAfterChange": "  \tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings, boolean recordParsingInformation)", "diff": ["-\t\t\tfor (int i = types.length; --i >= 0;) {", "-\t\t\t\ttypes[i].parseMethod(parser, compilationUnitDeclaration);", "+\t\t\tfor (int i = 0, length = types.length; i < length; i++) {", "+\t\t\t\ttypes[i].parseMethods(parser, compilationUnitDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc153a957de175871bf12fe6db06be5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "880c1fdcebd82e64ed69da7c3bc9800134409052", "commitAfterChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 347, "signatureBeforeChange": " \tpublic void getMethodBodies(CompilationUnitDeclaration unit)", "signatureAfterChange": " \tpublic void getMethodBodies(CompilationUnitDeclaration unit)", "diff": ["-\t\t\tfor (int i = unit.types.length; --i >= 0;)", "-\t\t\t\tunit.types[i].parseMethod(this, unit);", "+\t\t\tfor (int i = 0, length = unit.types.length; i < length; i++)", "+\t\t\t\tunit.types[i].parseMethods(this, unit);"]}], "num": 45015}