{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d0772a96197d2e728bb3d7a507684d6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b3c97e4ed78ec525aa7e78150b5c84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "b93a217fe6b68aa2016c37812b125d5d097ba1a3", "commitAfterChange": "1beaef02926dace59f07acb73879fd00f7c0b3eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\t\tFlowInfo flowInfo)", "diff": ["-\t\tint preComputedTrueNullStatus = -1;", "+\t\tthis.ifTrueNullStatus = -1;", "-\t\t\tpreComputedTrueNullStatus = this.valueIfTrue.nullStatus(trueFlowInfo, flowContext);", "+\t\t\tthis.ifTrueNullStatus = this.valueIfTrue.nullStatus(trueFlowInfo, flowContext);", "-\t\t\tif (preComputedTrueNullStatus != -1) {", "-\t\t\t\tthis.nullStatus = preComputedTrueNullStatus;", "+\t\t\tif (this.ifTrueNullStatus != -1) {", "+\t\t\t\tthis.nullStatus = this.ifTrueNullStatus;", "-\t\t\tcomputeNullStatus(preComputedTrueNullStatus, trueFlowInfo, falseFlowInfo, flowContext);", "+\t\t\tcomputeNullStatus(trueFlowInfo, falseFlowInfo, flowContext);", "-\t\tif (isPolyExpression() && compilerOptions.isAnnotationBasedNullAnalysisEnabled && flowInfo.reachMode() == FlowInfo.REACHABLE) {", "-\t\t\tcheckAgainstNullTypeAnnotation(currentScope, this.resolvedType, this.valueIfTrue, flowContext, flowInfo);", "-\t\t\tcheckAgainstNullTypeAnnotation(currentScope, this.resolvedType, this.valueIfFalse, flowContext, flowInfo);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4faa96d297b42727197ee059dac96f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "commitAfterChange": "a6f21a01110fe95a43760ec08fc8cc1e27e1c4bc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\t\tFlowInfo flowInfo)", "diff": ["+\t\tfinal CompilerOptions compilerOptions = currentScope.compilerOptions();", "-\t\t\tif (!isKnowDeadCodePattern(this.condition) || currentScope.compilerOptions().reportDeadCodeInTrivialIfStatement) {", "+\t\t\tif (!isKnowDeadCodePattern(this.condition) || compilerOptions.reportDeadCodeInTrivialIfStatement) {", "-\t\tif (currentScope.compilerOptions().enableSyntacticNullAnalysisForFields) {", "+\t\tif (compilerOptions.enableSyntacticNullAnalysisForFields) {", "-\t\t\tif (!isKnowDeadCodePattern(this.condition) || currentScope.compilerOptions().reportDeadCodeInTrivialIfStatement) {", "+\t\t\tif (!isKnowDeadCodePattern(this.condition) || compilerOptions.reportDeadCodeInTrivialIfStatement) {", "+\t\tif (isPolyExpression() && compilerOptions.isAnnotationBasedNullAnalysisEnabled && flowInfo.reachMode() == FlowInfo.REACHABLE) {", "+\t\t\tcheckAgainstNullTypeAnnotation(currentScope, this.resolvedType, this.valueIfTrue, flowContext, flowInfo);", "+\t\t\tcheckAgainstNullTypeAnnotation(currentScope, this.resolvedType, this.valueIfFalse, flowContext, flowInfo);", "+\t\t}", "+\t\t"]}], "num": 34431}