{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be728125a33436b79ebadd4b9115e917", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d5c8c0bf8ede0cb328a31cd1adb883", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void computeInheritedMethods()", "signatureAfterChange": " private void computeInheritedMethods()", "diff": ["-\t\t\t\t\t\t\tif (areTypesEqual(method.returnType, existingMethods[i].returnType) && areParametersEqual(method, existingMethods[i])) {", "+\t\t\t\t\t\t\tif (areReturnTypeErasuresEqual(method, existingMethods[i]) && areParameterErasuresEqual(method, existingMethods[i])) {", "-\t\t\t\t\t\t\t\t&& areTypesEqual(method.returnType, nonVisibleDefaultMethods[i].returnType)", "-\t\t\t\t\t\t\t\t&& areParametersEqual(method, nonVisibleDefaultMethods[i])) ", "+\t\t\t\t\t\t\t\t&& areReturnTypeErasuresEqual(method, nonVisibleDefaultMethods[i])", "+\t\t\t\t\t\t\t\t&& areParameterErasuresEqual(method, nonVisibleDefaultMethods[i])) ", "-\t\t\t\t\t\t\t\tif (areTypesEqual(method.returnType, current[i].returnType) && areParametersEqual(method, current[i])) {", "+\t\t\t\t\t\t\t\tif (areReturnTypeErasuresEqual(method, current[i]) && areParameterErasuresEqual(method, current[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8172d922d2eefeff267d50e7d69c4fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "198d94bedf8984594355707af3b11dd0e060bd78", "commitAfterChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic void testMethodDeclarationExtraDimensions() throws Exception", "signatureAfterChange": "  \tpublic void testMethodDeclarationExtraDimensions() throws Exception", "diff": ["-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);"]}], "num": 29782}