{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "896a1c3fd027e534d5c701874bcf8879", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379b887ec2e5ae0c7c5cda52fadac82a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected Object parseQualifiedName(boolean reset) throws InvalidInputException", "signatureAfterChange": " \tprotected Object parseQualifiedName(boolean reset) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t// Reset position: we want to rescan last token", "-\t\t\t\t\t\tif (this.kind == DOM_PARSER && this.currentTokenType != -1) {", "-\t\t\t\t\t\t\tthis.index = this.tokenPreviousPosition;", "-\t\t\t\t\t\t\tthis.scanner.currentPosition = this.tokenPreviousPosition;", "-\t\t\t\t\t\t\tthis.currentTokenType = -1;", "+\t\t\t\t\t\tswitch (this.kind) {", "+\t\t\t\t\t\t\tcase COMPLETION_PARSER:", "+\t\t\t\t\t\t\t\treturn invalidSyntax(INVALID_QUALIFIED_NAME, null);", "+\t\t\t\t\t\t\tcase DOM_PARSER:", "+\t\t\t\t\t\t\t\tif (this.currentTokenType != -1) {", "+\t\t\t\t\t\t\t\t\t// Reset position: we want to rescan last token", "+\t\t\t\t\t\t\t\t\tthis.index = this.tokenPreviousPosition;", "+\t\t\t\t\t\t\t\t\tthis.scanner.currentPosition = this.tokenPreviousPosition;", "+\t\t\t\t\t\t\t\t\tthis.currentTokenType = -1;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\tthrow new InvalidInputException();", "-\t\t\t\t\t\tthrow new InvalidInputException();", "-\t\tif (this.currentTokenType != -1) {", "+\t\tif (this.kind != COMPLETION_PARSER && this.currentTokenType != -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741303dfd2094f0e4a20bcb747a93b9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "8f82ae69faed631567ec19572153cde0cce3876b", "commitAfterChange": "1bf42176694d66a5253881d975a0ea5432939e10", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseParam() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t// fall through next case to report error", "+\t\t\t\t\t\t// $FALL-THROUGH$ - fall through next case to report error", "-\t\t\t\t\t\t// fall through next case to report error", "+\t\t\t\t\t\t// $FALL-THROUGH$ - fall through next case to report error", "-\t\t\t\t\t\t// when several lines, fall through next case to report problem immediately", "+\t\t\t\t\t\t// $FALL-THROUGH$ - when several lines, fall through next case to report problem immediately", "-\t\t\t\t\t\t// if not valid fall through next case to report error", "+\t\t\t\t\t\t// $FALL-THROUGH$ - if not valid fall through next case to report error", "-\t\t\t\t\t\t\tif (valid && this.scanner.currentPosition <= (this.lineEnd+1)) break;", "-\t\t\t\t\t\t\t// if not valid fall through next case to report error", "+\t\t\t\t\t\t\tif (valid && this.scanner.currentPosition <= (this.lineEnd+1)) {", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t// $FALL-THROUGH$ - if not valid fall through next case to report error", "-\t\t\t\t\t\t\t// if not valid fall through next case to report error", "+\t\t\t\t\t\t\t// $FALL-THROUGH$ - if not valid fall through next case to report error"]}], "num": 62619}