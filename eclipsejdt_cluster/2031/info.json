{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccc992f5ae5339acc5c63d39d74fe685", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4c2b695eb41a5e1417663122c8004e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public TypeBinding convertToRawType(TypeBinding type)", "signatureAfterChange": "  public TypeBinding convertToRawType(TypeBinding type)", "diff": ["+", "-\t\tswitch (originalEnclosing.kind()) {", "-\t\t\tcase Binding.GENERIC_TYPE :", "-\t\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\t\tif (needToConvert || ((ReferenceBinding)originalType).isStatic()) {", "-\t\t\t\t\tconvertedEnclosing = (ReferenceBinding) convertToRawType(originalEnclosing);", "-\t\t\t\t} else {", "-\t\t\t\t\tconvertedEnclosing = originalEnclosing;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase Binding.RAW_TYPE :", "-\t\t\t\tneedToConvert |= !((ReferenceBinding)originalType).isStatic();", "-\t\t\tdefault :", "-\t\t\t\tconvertedEnclosing = originalEnclosing;", "-\t\t\t\tbreak;", "+\t\tif (originalEnclosing.kind() == Binding.RAW_TYPE) {", "+\t\t\tneedToConvert |= !((ReferenceBinding)originalType).isStatic();", "+\t\t\tconvertedEnclosing = originalEnclosing;", "+\t\t} else if (needToConvert || ((ReferenceBinding)originalType).isStatic()) {", "+\t\t\tconvertedEnclosing = (ReferenceBinding) convertToRawType(originalEnclosing);", "+\t\t} else {", "+//\t\t} else if (originalEnclosing instanceof SourceTypeBinding){", "+\t\t\tconvertedEnclosing = convertToParameterizedType(originalEnclosing);", "+//\t\t} else {", "+//\t\t\tconvertedEnclosing = originalEnclosing;", "-\t\t\tif (originalGeneric.isStatic())", "-\t\t\t\tconvertedType = createParameterizedType(originalGeneric, null, convertedEnclosing);", "-\t\t\telse ", "-\t\t\t\tconvertedType = createRawType(originalGeneric, convertedEnclosing);", "+\t\t\tconvertedType = createParameterizedType(originalGeneric, null, convertedEnclosing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d05c1f08440f1e224757e78ce1cb85c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8d86c45b7dbc1d8316194b358e7234e4491fa695", "commitAfterChange": "0305482ace5c5443f44c914a225574b12096815b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic TypeBinding convertToRawType(TypeBinding type)", "signatureAfterChange": "  \tpublic TypeBinding convertToRawType(TypeBinding type)", "diff": ["-\t\tif (type.isArrayType()) {", "-\t\t    TypeBinding leafComponentType = type.leafComponentType();", "-\t\t    if (leafComponentType.isGenericType())", "-\t\t        return createArrayType(environment().createRawType((ReferenceBinding) leafComponentType, leafComponentType.enclosingType()), type.dimensions());", "-\t\t} else if (type.isGenericType()) {", "-\t        return environment().createRawType((ReferenceBinding) type, type.enclosingType());", "+\t\tint dimension = type.dimensions();", "+\t\tTypeBinding originalType = type.leafComponentType();", "+\t\tif (originalType instanceof ReferenceBinding) {", "+\t\t\tReferenceBinding convertedType = (ReferenceBinding) originalType;", "+\t\t\tReferenceBinding originalEnclosing = originalType.enclosingType();", "+\t\t\tReferenceBinding convertedEnclosing = originalEnclosing;", "+\t\t\tif (originalEnclosing != null && convertedType.isStatic()) {", "+\t\t\t\tif (originalEnclosing.isGenericType()) {", "+\t\t\t\t\tconvertedEnclosing = (ReferenceBinding) convertToRawType(originalEnclosing);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (originalType.isGenericType()) {", "+\t\t\t\tconvertedType = environment().createRawType(convertedType, convertedEnclosing);", "+\t\t\t} else if (originalEnclosing != convertedEnclosing) {", "+\t\t\t\tconvertedType = createParameterizedType(convertedType, null, convertedEnclosing);", "+\t\t\t}", "+\t\t\tif (originalType != convertedType) {", "+\t\t\t\treturn dimension > 0 ? (TypeBinding)createArrayType(convertedType, dimension) : convertedType;", "+\t\t\t}"]}], "num": 2031}