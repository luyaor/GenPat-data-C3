{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e75da699420ddc3481da1a4203f8caf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26bc8c14ccd53b16eea162cedb46c347", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "d198dbbeec87ead700fdbe86d9e79e2e1f88dd6d", "commitAfterChange": "4ecee5c8a75df484effd8533397506b36cfb9d30", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void compareFormattedSource() throws IOException, Exception", "signatureAfterChange": "  void compareFormattedSource() throws IOException, Exception", "diff": ["-\t\t\tString expectedResult = new String(org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(outputFile, null));", "+\t\t\t\tString expectedResult = new String(org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(outputFile, null));", "+\t\t\tcatch (FileNotFoundException fnfe) {", "+\t\t\t\tthis.failureIndex = FILE_NOT_FOUND_FAILURE;", "+\t\t\t\tFAILURES[FILE_NOT_FOUND_FAILURE].failures.add(this.path);", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86a47cc78c182b4253922960cba6aa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "dbb21f9a082cc8b4fc9a756e4b7778384b3f408c", "commitAfterChange": "bbd2ac48b173a123c7419ce013244d878b152c22", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 16, "signatureBeforeChange": "  private boolean isExpectedFailure()", "signatureAfterChange": "  private boolean isExpectedFailure()", "diff": ["-\t\tif (this.path.matchingFirstSegments(expectedFailure) == expectedFailure.segmentCount()) {", "-\t\t\tthis.expectedFailures.add(this.path);", "+\t\tif (this.path.toString().indexOf(expectedFailure.toString()) >= 0) {", "+\t\t\tthis.failureIndex = REFORMATTING_EXPECTED_FAILURE;", "+\t\t\tFAILURES[REFORMATTING_EXPECTED_FAILURE].failures.add(this.path);"]}], "num": 11733}