{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf4412c6b5a39b8c72f00ef9593d776a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9248bf43c55b3698496ac4213324eb39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyPackageFragmentRootOperation.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected IClasspathEntry copy(IClasspathEntry entry) throws JavaModelException", "signatureAfterChange": " \tprotected IClasspathEntry copy(IClasspathEntry entry) throws JavaModelException", "diff": ["-\t\t\t\treturn JavaCore.newContainerEntry(entry.getPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "+\t\t\t\treturn JavaCore.newContainerEntry(entry.getPath(), entry.getAccessibleFiles(), entry.getNonAccessibleFiles(), entry.getExtraAttributes(), entry.isExported());", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(this.destination, entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "+\t\t\t\t\treturn JavaCore.newLibraryEntry(this.destination, entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.getAccessibleFiles(), entry.getNonAccessibleFiles(), entry.getExtraAttributes(), entry.isExported());", "-\t\t\t\treturn JavaCore.newProjectEntry(entry.getPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "+\t\t\t\treturn JavaCore.newProjectEntry(entry.getPath(), entry.getAccessibleFiles(), entry.getNonAccessibleFiles(), entry.getExtraAttributes(), entry.isExported());", "-\t\t\t\treturn JavaCore.newSourceEntry(this.destination, entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.getOutputLocation());", "+\t\t\t\treturn JavaCore.newSourceEntry(this.destination, entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.getOutputLocation(), entry.getExtraAttributes());", "-\t\t\t\t\treturn JavaCore.newVariableEntry(entry.getPath(), entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "+\t\t\t\t\treturn JavaCore.newVariableEntry(entry.getPath(), entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.getAccessibleFiles(), entry.getNonAccessibleFiles(), entry.getExtraAttributes(), entry.isExported());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5e595ba53967dc157605a181dc61c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": " public void add(IJavaElement element) throws JavaModelException", "diff": ["+\tPackageFragmentRoot root = null;", "-\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot)element;", "-\t\t\tIPath rootPath = root.getPath();", "+\t\t\troot = (PackageFragmentRoot)element;", "+\t\t\tIPath rootPath = root.internalPath();", "-\t\t\tIResource rootResource = root.getResource();", "+\t\t\tIResource rootResource = root.resource();", "-\t\t\troot = (IPackageFragmentRoot)element.getParent();", "+\t\t\troot = (PackageFragmentRoot)element.getParent();", "-\t\t\t\tIResource resource = element.getResource();", "+\t\t\t\tIResource resource = ((JavaElement) element).resource();", "-\t\t\t\t\t\tcontainerPath = root.getKind() == IPackageFragmentRoot.K_SOURCE ? root.getParent().getPath() : root.getPath();", "+\t\t\t\t\t\tcontainerPath = root.getKind() == IPackageFragmentRoot.K_SOURCE ? root.getParent().getPath() : root.internalPath();", "-\t\t\troot = (IPackageFragmentRoot) element.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);", "+\t\t\troot = (PackageFragmentRoot) element.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);", "-\t\t\t\trelativePath = Util.relativePath(getPath(element, false/*full path*/), 1/*remove project segmet*/);", "+\t\t\t\trelativePath = Util.relativePath(getPath(element, false/*full path*/), 1/*remove project segment*/);", "-\t\t\t\tcontainerPath = root.getPath();", "+\t\t\t\tcontainerPath = root.internalPath();", "-\tif (containerPath != null)", "-\t\taddEnclosingProjectOrJar(containerPath);", "+\tif (root != null)", "+\t\taddEnclosingProjectOrJar(root.getKind() == IPackageFragmentRoot.K_SOURCE ? root.getParent().getPath() : root.getPath());"]}], "num": 57839}