{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f21323599cd74d5311cd23926fb9d199", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f28717f041cf8d1c098804c37fbf0d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "f7946a416375359bc12d54a58bb3bf2c02362cd6", "commitAfterChange": "af6600694713a0ac0197593e8b3a0fe77524b02a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t \tpublic void consumeWildCard(int kind)", "signatureAfterChange": " \t \tpublic void consumeWildCard(int kind)", "diff": ["-\t\t\t\tthis.typeBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, this.wildcardRank, (TypeBinding) boundResolver.compilerBinding, null /*no extra bound*/, kind);", "+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=157847, do not allow creation of", "+\t\t\t\t// internally inconsistent wildcards of the form '? super <null>' or '? extends <null>'", "+\t\t\t\tfinal Binding boundBinding = boundResolver.compilerBinding;", "+\t\t\t\tif (boundBinding instanceof TypeBinding) {", "+\t\t\t\t\tthis.typeBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, this.wildcardRank, (TypeBinding) boundBinding, null /*no extra bound*/, kind);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.typeBinding = null;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7020b841b923554c17dff57e890949", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\t\ttypeBinding = typeBinding.closestMatch();", "+\t\t\t\tTypeBinding closestMatch = typeBinding.closestMatch();", "+\t\t\t\tif (closestMatch instanceof ReferenceBinding) {", "+\t\t\t\t\ttypeBinding = (ReferenceBinding) closestMatch;", "+\t\t\t\t} else {", "+\t\t\t\t\ttypeBinding = null;", "+\t\t\t\t}"]}], "num": 5873}