{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02a6fee36fa7bc7fb5d12a39c8ae915e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd22ac7936b5be56055182e312f71cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 904, "methodNumberAfterChange": 904, "signatureBeforeChange": " public void test0883()", "signatureAfterChange": " public void test0883()", "diff": ["+// FAIL ERRMSG", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\"", "+\t\t:", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "+\t\t\"\tString s = (String)foo(listu);\\n\" +", "+\t\t\"\t                   ^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<U>). The inferred type List<U> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 11)\\n\" +", "+\t\t\"\tString s = (String)foo(listv);\\n\" +", "+\t\t\"\t                   ^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<V>). The inferred type List<V> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" +", "+\t\t\"----------\\n\" ));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf3ad55e8f9622fe279195d01c86941", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1244, "methodNumberAfterChange": 1244, "signatureBeforeChange": " public void test1210()", "signatureAfterChange": " public void test1210()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "-\t\t\"\tObject[] o  = throwE(objs);\\n\" +", "-\t\t\"\t              ^^^^^^\\n\" +", "-\t\t\"Bound mismatch: The generic method throwE(Object...) of type X is not applicable for the arguments (Object[]). The inferred type Object[] is not a valid substitute for the bounded parameter <E extends Exception>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tObject[] o  = throwE(objs);\\n\" + ", "+\t\t\"\t              ^^^^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method throwE(Object...) of type X is not applicable for the arguments (Object[]). The inferred type Object[]&Exception is not a valid substitute for the bounded parameter <E extends Exception>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tObject[] o  = throwE(objs);\\n\" + ", "+\t\t\"\t              ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Object[]&Exception to Object[]\\n\" + "]}], "num": 2517}