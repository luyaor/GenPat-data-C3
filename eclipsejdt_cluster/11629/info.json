{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84657625e7bad612555adb67b40330a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ea52ed6365cbc5ef11fd84eb80ead8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "458dca4c2b9da6278d150eba84339274fccc6057", "commitAfterChange": "01d995488d5e309c6b243da146c63894a6df881d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public TypeDeclaration getTypeDeclaration(String name)", "signatureAfterChange": "     public TypeDeclaration getTypeDeclaration(String name)", "diff": ["-    \t//First check cache", "-    \tTypeDeclaration result = _typeCache.get(name);", "-    \tif (result != null) return result;", "-", "+    \t//First check cache", "+    \tTypeDeclaration result = _typeCache.get(name);", "+    \tif (result != null) return result;", "+", "-\t\tif( _astRoot != null )", "-\t\t\ttypeBinding = _astRoot.getAST().resolveWellKnownType(name);", "-\t\tString typeKey = BindingKey.createTypeBindingKey(name);", "-\t\tif(typeBinding == null){", "-\t\t\t// then look into the current compilation units\t\t\t", "-\t\t\tASTNode node = null;", "-\t\t\tif( _astRoot != null )", "-\t\t\t\tnode = _astRoot.findDeclaringNode(typeKey);", "-\t\t\t\t\t\t", "-\t\t\tif( node != null ){", "-\t\t\t\tfinal int nodeType = node.getNodeType();", "-\t\t\t\tif( nodeType == ASTNode.TYPE_DECLARATION ||", "-\t\t\t\t\tnodeType == ASTNode.ANNOTATION_TYPE_DECLARATION ||", "-\t\t\t\t\tnodeType == ASTNode.ENUM_DECLARATION )", "-\t\t\t\ttypeBinding = ((AbstractTypeDeclaration)node).resolveBinding();", "+\t\tCompilationUnit[] asts = getAsts();", "+\t\t", "+\t\tif( asts != null && asts.length > 0) {", "+\t\t\ttypeBinding = asts[0].getAST().resolveWellKnownType(name);", "+", "+\t\t\tif(typeBinding == null){", "+\t\t\t\t// then look into the current compilation units\t\t\t", "+\t\t\t\tASTNode node = null;", "+\t\t\t\tString typeKey = BindingKey.createTypeBindingKey(name);", "+\t\t\t\tfor (int i=0, len=asts.length;i<len;i++) {", "+\t\t\t\t\tnode = asts[i].findDeclaringNode(typeKey);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\tif( node != null ){", "+\t\t\t\t\t\tfinal int nodeType = node.getNodeType();", "+\t\t\t\t\t\tif( nodeType == ASTNode.TYPE_DECLARATION ||", "+\t\t\t\t\t\t\tnodeType == ASTNode.ANNOTATION_TYPE_DECLARATION ||", "+\t\t\t\t\t\t\tnodeType == ASTNode.ENUM_DECLARATION )", "+\t\t\t\t\t\ttypeBinding = ((AbstractTypeDeclaration)node).resolveBinding();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b4495c82fbe44ba6d577502df5e5aa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private TypeDeclaration getTypeDeclarationInBatch(String name)", "signatureAfterChange": "      private TypeDeclaration getTypeDeclarationInBatch(String name)", "diff": ["-\t\tITypeBinding typeBinding = _astUnits[0].getAST().resolveWellKnownType(name);", "+\t\tITypeBinding typeBinding = null;", "-\t\tif(typeBinding == null){", "-\t\t\t// then look into the current compilation units\t\t\t", "-\t\t\tASTNode node = null;", "-\t\t\tfor( int i=0, len=_astUnits.length; i<len; i++ )", "-\t\t\t\tnode = _astUnits[i].findDeclaringNode(typeKey);\t\t\t", "-\t\t\tif( node != null ){", "-\t\t\t\tfinal int nodeType = node.getNodeType();", "-\t\t\t\tif( nodeType == ASTNode.TYPE_DECLARATION ||", "-\t\t\t\t\tnodeType == ASTNode.ANNOTATION_TYPE_DECLARATION ||", "-\t\t\t\t\tnodeType == ASTNode.ENUM_DECLARATION )", "-\t\t\t\ttypeBinding = ((AbstractTypeDeclaration)node).resolveBinding();", "+\t\tif( _astUnits.length > 0 ){", "+\t\t\t_astUnits[0].getAST().resolveWellKnownType(name);", "+\t\t\t", "+\t\t\tif(typeBinding == null){", "+\t\t\t\t// then look into the current compilation units\t\t\t", "+\t\t\t\tASTNode node = null;", "+\t\t\t\tfor( int i=0, len=_astUnits.length; i<len; i++ )", "+\t\t\t\t\tnode = _astUnits[i].findDeclaringNode(typeKey);\t\t\t", "+\t\t\t\tif( node != null ){", "+\t\t\t\t\tfinal int nodeType = node.getNodeType();", "+\t\t\t\t\tif( nodeType == ASTNode.TYPE_DECLARATION ||", "+\t\t\t\t\t\tnodeType == ASTNode.ANNOTATION_TYPE_DECLARATION ||", "+\t\t\t\t\t\tnodeType == ASTNode.ENUM_DECLARATION )", "+\t\t\t\t\ttypeBinding = ((AbstractTypeDeclaration)node).resolveBinding();", "+\t\t\t\t}", "+\t\t\tif( typeBinding != null )", "+\t\t\t\treturn Factory.createReferenceType(typeBinding, this);", "-\t\tif( typeBinding != null )", "-\t\t\treturn Factory.createReferenceType(typeBinding, this);"]}], "num": 11629}