{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "555302a33473e86d34ed4cef28e22688", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccce7973c3aaf394caef9d54abbbb61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic HierarchyScope(IType type) throws JavaModelException", "signatureAfterChange": " \tpublic HierarchyScope(IType type) throws JavaModelException", "diff": ["+\t\t", "+\t\tthis.needsRefresh = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1637abcd36f79d40cdb9e7a61097c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "8888070e7d605cddf6c8671034fcca65881ecd22", "commitAfterChange": "e082c4d38d13da031ccac1ca4b31861afe7eec61", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate Object parseMember(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Object parseMember(Object receiver) throws InvalidInputException", "diff": ["+\t\tthis.memberStart = start;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d80f8d6c3fd21fdaf77566a6b94e9b3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalCompletionContext.java", "commitBeforeChange": "68485325d2a928948507d26c14877d852a16310f", "commitAfterChange": "e4951059665fca165a9958caf9b1f64b79cc20d4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprotected void setExtendedData( \t\t\tITypeRoot typeRoot, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tLookupEnvironment lookupEnvironment, \t\t\tScope scope, \t\t\tASTNode astNode, \t\t\tWorkingCopyOwner owner, \t\t\tCompletionParser parser)", "signatureAfterChange": " \t \tprotected void setExtendedData( \t\t\tITypeRoot typeRoot, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tLookupEnvironment lookupEnvironment, \t\t\tScope scope, \t\t\tASTNode astNode, \t\t\tWorkingCopyOwner owner, \t\t\tCompletionParser parser)", "diff": ["+\t", "+\t\tthis.isExtended = true;"]}], "num": 3093}