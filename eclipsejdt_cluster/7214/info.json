{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a314b1269dae74065aefd1aa5cd43186", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "301ddad3ae4982081caa306b214e4a94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void test0022() throws JavaModelException", "signatureAfterChange": " public void test0022() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0022\", \"Test.java\");", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src3/test0022/Test.java\",", "+\t\t\"package test0022;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\tvoid foo() {\\n\" +", "+\t\t\"\t\tnew Z0022<Z0022Z>foo();\\n\" +", "+\t\t\"\t}\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0022<T extends Z0022ZZ> {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0022ZZ {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0022ZZZ {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\");", "-\tString str = cu.getSource();", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:Z0022ZZ    completion:Z0022ZZ    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXACT_EXPECTED_TYPE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:Z0022ZZZ    completion:Z0022ZZZ    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"Z0022ZZZ[TYPE_REF]{Z0022ZZZ, test0022, Ltest0022.Z0022ZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"Z0022ZZ[TYPE_REF]{Z0022ZZ, test0022, Ltest0022.Z0022ZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXACT_EXPECTED_TYPE + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f39ef43c9bfa037f68428f45c3b0dcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void test0021() throws JavaModelException", "signatureAfterChange": " public void test0021() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0021\", \"Test.java\");", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src3/test0021/Test.java\",", "+\t\t\"package test0021;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\t<T extends Z0021Z> void foo() {\\n\" +", "+\t\t\"\t\tthis.<Z0021>foo();\\n\" +", "+\t\t\"\t}\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0021Z {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0021ZZ {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\");", "-\tString str = cu.getSource();", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:Z0021Z    completion:Z0021Z    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:Z0021ZZ    completion:Z0021ZZ    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"Z0021Z[TYPE_REF]{Z0021Z, test0021, Ltest0021.Z0021Z;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"Z0021ZZ[TYPE_REF]{Z0021ZZ, test0021, Ltest0021.Z0021ZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());"]}], "num": 7214}