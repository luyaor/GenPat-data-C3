{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8b8a8c19f171ebbba75d17131002228", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cb333cf72f299d651a590a72e7acb7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void test021()", "signatureAfterChange": " \tpublic void test021()", "diff": ["-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"Y.java\",", "-\t\t\t\t\"class X<T extends Object> {\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"public class Y<V extends String> extends X<V> {\\n\" +", "-\t\t\t\t\"  public static <W extends String> Y<W> make(Class<W> clazz) {\\n\" +", "-\t\t\t\t\"    System.out.print(true);\\n\" +", "-\t\t\t\t\"    return new Y<W>();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  public static <U extends Object> X<U> make(Class<U> clazz) {\\n\" +", "-\t\t\t\t\"    System.out.print(false);\\n\" +", "-\t\t\t\t\"    return new X<U>();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  public static void main(String[] args) throws Exception {\\n\" +", "-\t\t\t\t\"    Y.make(getClazz());\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  public static Class getClazz() {\\n\" +", "-\t\t\t\t\"    return String.class;\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"}\"", "-\t\t\t},", "+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in Y.java (at line 3)\\n\" + ", "+\t\t\"\tpublic class Y<V extends String> extends X<V> {\\n\" + ", "+\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\"The type parameter V should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in Y.java (at line 4)\\n\" + ", "+\t\t\"\tpublic static <W extends String> Y<W> make(Class<W> clazz) {\\n\" + ", "+\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\"The type parameter W should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in Y.java (at line 4)\\n\" + ", "+\t\t\"\tpublic static <W extends String> Y<W> make(Class<W> clazz) {\\n\" + ", "+\t\t\"\t                                      ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method make(Class<W>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in Y.java (at line 8)\\n\" + ", "+\t\t\"\tpublic static <U extends Object> X<U> make(Class<U> clazz) {\\n\" + ", "+\t\t\"\t                                      ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method make(Class<U>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in Y.java (at line 13)\\n\" + ", "+\t\t\"\tY.make(getClazz());\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation make(Class) of the generic method make(Class<W>) of type Y\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in Y.java (at line 13)\\n\" + ", "+\t\t\"\tY.make(getClazz());\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type Class needs unchecked conversion to conform to Class<String>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in Y.java (at line 15)\\n\" + ", "+\t\t\"\tpublic static Class getClazz() {\\n\" + ", "+\t\t\"\t              ^^^^^\\n\" + ", "+\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\":", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\";", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"Y.java\",", "+\t\t\t\t\"class X<T extends Object> {\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"public class Y<V extends String> extends X<V> {\\n\" +", "+\t\t\t\t\"  public static <W extends String> Y<W> make(Class<W> clazz) {\\n\" +", "+\t\t\t\t\"    System.out.print(true);\\n\" +", "+\t\t\t\t\"    return new Y<W>();\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public static <U extends Object> X<U> make(Class<U> clazz) {\\n\" +", "+\t\t\t\t\"    System.out.print(false);\\n\" +", "+\t\t\t\t\"    return new X<U>();\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public static void main(String[] args) throws Exception {\\n\" +", "+\t\t\t\t\"    Y.make(getClazz());\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public static Class getClazz() {\\n\" +", "+\t\t\t\t\"    return String.class;\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"}\"", "+\t\t\t},", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dd4b98d12bbe28c6151e6b26b35953c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void test0052()", "signatureAfterChange": " public void test0052()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\"\tX<String> x2 = new X<String>(\\\"SUCCESS\\\");\\n\" + ", "-\t\t\"\t                   ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <String>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tX<Integer> x3 = new X<Integer>(1);\\n\" + ", "-\t\t\"\t                    ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <Integer>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\"\tX<AX> x4 = new X<AX>(new AX());\\n\" + ", "-\t\t\"\t               ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <AX>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tX<? extends AX> x5 = new X<AX<String>>(new AX<String>());\\n\" + ", "-\t\t\"\t                         ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <AX<String>>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"5. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"\tX<?> x6 = new X<AX<String>>(new AX<String>());\\n\" + ", "-\t\t\"\t              ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <AX<String>>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"6. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\tX<Class<? extends Object>> x7 = new X<Class<? extends Object>>();\\n\" + ", "-\t\t\"\t                                    ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <Class<? extends Object>>\\n\" + ", "-\t\t\"----------\\n\",", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tX<String> x2 = new X<String>(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<Integer> x3 = new X<Integer>(1);\\n\" + ", "+\t\t\t\"\t                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Integer>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX<AX> x4 = new X<AX>(new AX());\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <AX>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX<? extends AX> x5 = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t                         ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <AX<String>>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tX<?> x6 = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t              ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <AX<String>>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tX<Class<? extends Object>> x7 = new X<Class<? extends Object>>();\\n\" + ", "+\t\t\t\"\t                                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Class<? extends Object>>\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t: // additional error at line 5 due to better inference:", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tX<Number> x = new X<Number>(1);\\n\" + ", "+\t\t\t\"\t                  ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Number>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tX<String> x2 = new X<String>(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<Integer> x3 = new X<Integer>(1);\\n\" + ", "+\t\t\t\"\t                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Integer>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX<AX> x4 = new X<AX>(new AX());\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <AX>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX<? extends AX> x5 = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t                         ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <AX<String>>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tX<?> x6 = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t              ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <AX<String>>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tX<Class<? extends Object>> x7 = new X<Class<? extends Object>>();\\n\" + ", "+\t\t\t\"\t                                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Class<? extends Object>>\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t),"]}], "num": 63299}