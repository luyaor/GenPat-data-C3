{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4f5f6550399bd3ae484da2859cf7daf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ccf0b9d6432386c909450ea093e985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeElementImpl.java", "commitBeforeChange": "d8bc0369a4febbf26184c3abdfb00924e5abcf8a", "commitAfterChange": "840a1f2f1e9b39c00b9c2e1286430c4050c7bac6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \t@Override \tpublic String toString()", "signatureAfterChange": "  \t@Override \tpublic String toString()", "diff": ["-\t\treturn new String(CharOperation.concatWith(binding.compoundName, '.'));", "+\t\tchar[] concatWith = CharOperation.concatWith(binding.compoundName, '.');", "+\t\tif (binding.isNestedType()) {", "+\t\t\tCharOperation.replace(concatWith, '$', '.');", "+\t\t\treturn new String(concatWith);", "+\t\t}", "+\t\treturn new String(concatWith);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c368057aababf5dcd6596f96355ab94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathLocation.java", "commitBeforeChange": "39c19ac69bf67c1b8b2b5511a6f5511e53b75c22", "commitAfterChange": "b09783983d142adfd46747128d8619308afbe37b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tAccessRestriction fetchAccessRestriction(String qualifiedBinaryFileName)", "signatureAfterChange": " \tAccessRestriction fetchAccessRestriction(String qualifiedBinaryFileName)", "diff": ["-\t\treturn this.accessRuleSet", "-\t\t\t\t\t.getViolatedRestriction(", "-\t\t\t\t\t\tqualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - SUFFIX_CLASS.length)", "-\t\t\t\t\t\t.toCharArray());", "+\t\tchar [] qualifiedTypeName = qualifiedBinaryFileName.", "+\t\t\tsubstring(0, qualifiedBinaryFileName.length() - SUFFIX_CLASS.length)", "+\t\t\t.toCharArray(); ", "+\t\tif (File.separatorChar == '\\\\') {", "+\t\t\tCharOperation.replace(qualifiedTypeName, File.separatorChar, '/');", "+\t\t}", "+\t\treturn this.accessRuleSet.getViolatedRestriction(qualifiedTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8332189a08e811a1570a076e899d1a08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "c0f9d8b84abc89ce64134386f4c44ab56579df25", "commitAfterChange": "9ba8652d2cebf2117416af5e39a70e172556117b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["+\t\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "+\t\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t\t.append(Signature.toCharArray(localVariableTableEntry.getDescriptor()));", "+\t\t\t\t\t.append(exceptionType);", "+\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "+\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t.append(Signature.toCharArray(localVariableTableEntry.getDescriptor()));", "+\t\t\t\t.append(exceptionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb4406598bd5311606c08838c6fa9e41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "c87dd117aac30a89b6ea22519637d9f69471ec0b", "commitAfterChange": "c79af2ee01d3f2093b2668c0a663bf8f76d7429f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void consumeSingleStaticImportDeclarationName()", "signatureAfterChange": " protected void consumeSingleStaticImportDeclarationName()", "diff": ["-\t\trequestor.acceptUnknownReference(impt.tokens[length], start);", "+\t\tchar[] last = impt.tokens[length];", "+\t\t// accept all possible kind for last name, index users will have to select the right one...", "+\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=86901", "+\t\trequestor.acceptFieldReference(last, start);", "+\t\trequestor.acceptMethodReference(last, 0,start);", "+\t\trequestor.acceptTypeReference(last, start);"]}], "num": 53135}