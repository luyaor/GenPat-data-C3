{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a7cd88e22870f7b1199873ac7f12321", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d103715b1a972b3633359ee52b41036", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "b70a8ef15d3ecb3f80cac545a48011ae8c1f5f45", "commitAfterChange": "78062f651ed5392b1800a53eac72f4f25be7d9fe", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void _testBug425601_001() throws JavaModelException", "signatureAfterChange": "\r public void testBug425601_001() throws JavaModelException", "diff": ["- */", "-public void _testBug425601_001() throws JavaModelException {", "-\tthis.workingCopy = getWorkingCopy(\"/Converter18/src/testBug425601_001/Outer.java\",", "-\t\t\ttrue/* resolve */);", "-\tString contents = \"package testBug425601_001;\\n\" +", "-\t\t\t\"@Deprecated\\n\"+", "-\t\t\t\"public class Outer<O> {\\n\"+", "-\t\t\t\"    @Deprecated\\n\"+", "-\t\t\t\"    public class Middle<X> {\\n\"+", "-\t\t\t\"        @Deprecated\\n\"+", "-\t\t\t\"        public class Inner<E> {\\n\"+", "-\t\t\t\"        }\\n\"+", "-\t\t\t\"    }\\n\"+", "-\t\t\t\"    \\n\"+", "-\t\t\t\"    Outer<String> o;\\n\"+", "-\t\t\t\"    Middle<String> m; // Middle should be deprecated - Middle Case one\\n\"+", "-\t\t\t\"    Outer<String>.Middle<String> m2; // Middle should be deprecated - Middle Case Two \\n\"+", "-\t\t\t\"    @SuppressWarnings(\\\"rawtypes\\\")\"+", "-\t\t\t\"    Outer.Middle m3; \\n\"+", "-\t\t\t\"    Middle<String>.Inner<Object> i; // Inner should be deprecated - Inner Case One\\n\"+", "-\t\t\t\"}\\n\"+", "-\t\t\t\"class Ref {\\n\"+", "-\t\t\t\"    Outer<String> o;\\n\"+", "-\t\t\t\"    Outer<String>.Middle<String> m;\\n\"+", "-\t\t\t\"    Outer<String>.Middle<String>.Inner<Object> i;\\n\"+", "-\t\t\t\"}\\n\";", "-\tCompilationUnit cu = (CompilationUnit) buildAST(contents, this.workingCopy);", "-\tTypeDeclaration typedeclaration = (TypeDeclaration) getASTNode(cu, 0);", "-\tFieldDeclaration[] fields = typedeclaration.getFields();", "-\tITypeBinding binding = fields[0].getType().resolveBinding();", "-\tassertTrue(binding.isDeprecated());", "-\tbinding = fields[3].getType().resolveBinding(); ", "-\tassertTrue(binding.isDeprecated());", "-\tbinding = fields[1].getType().resolveBinding(); // Middle Case One", "-\tassertTrue(binding.isDeprecated());", "-\tbinding = fields[2].getType().resolveBinding(); // Middle Case Two", "-\tassertTrue(binding.isDeprecated());", "-\tbinding = fields[4].getType().resolveBinding(); // Inner Case One", "-\tassertTrue(binding.isDeprecated());", "-}", "+ */\r", "+public void testBug425601_001() throws JavaModelException {\r", "+\tthis.workingCopy = getWorkingCopy(\"/Converter18/src/testBug425601_001/Outer.java\",\r", "+\t\t\ttrue/* resolve */);\r", "+\tString contents = \"package testBug425601_001;\\n\" +\r", "+\t\t\t\"@Deprecated\\n\"+\r", "+\t\t\t\"public class Outer<O> {\\n\"+\r", "+\t\t\t\"    @Deprecated\\n\"+\r", "+\t\t\t\"    public class Middle<X> {\\n\"+\r", "+\t\t\t\"        @Deprecated\\n\"+\r", "+\t\t\t\"        public class Inner<E> {\\n\"+\r", "+\t\t\t\"        }\\n\"+\r", "+\t\t\t\"    }\\n\"+\r", "+\t\t\t\"    \\n\"+\r", "+\t\t\t\"    Outer<String> o;\\n\"+\r", "+\t\t\t\"    Middle<String> m; // Middle should be deprecated - Middle Case one\\n\"+\r", "+\t\t\t\"    Outer<String>.Middle<String> m2; // Middle should be deprecated - Middle Case Two \\n\"+\r", "+\t\t\t\"    @SuppressWarnings(\\\"rawtypes\\\")\"+\r", "+\t\t\t\"    Outer.Middle m3; \\n\"+\r", "+\t\t\t\"    Middle<String>.Inner<Object> i; // Inner should be deprecated - Inner Case One\\n\"+\r", "+\t\t\t\"}\\n\"+\r", "+\t\t\t\"class Ref {\\n\"+\r", "+\t\t\t\"    Outer<String> o;\\n\"+\r", "+\t\t\t\"    Outer<String>.Middle<String> m;\\n\"+\r", "+\t\t\t\"    Outer<String>.Middle<String>.Inner<Object> i;\\n\"+\r", "+\t\t\t\"}\\n\";\r", "+\tCompilationUnit cu = (CompilationUnit) buildAST(contents, this.workingCopy);\r", "+\tTypeDeclaration typedeclaration = (TypeDeclaration) getASTNode(cu, 0);\r", "+\tFieldDeclaration[] fields = typedeclaration.getFields();\r", "+\tITypeBinding binding = fields[0].getType().resolveBinding();\r", "+\tassertTrue(binding.isDeprecated());\r", "+\tbinding = fields[3].getType().resolveBinding(); \r", "+\tassertTrue(binding.isDeprecated());\r", "+\tbinding = fields[1].getType().resolveBinding(); // Middle Case One\r", "+\tassertTrue(binding.isDeprecated());\r", "+\tbinding = fields[2].getType().resolveBinding(); // Middle Case Two\r", "+\tassertTrue(binding.isDeprecated());\r", "+\tbinding = fields[4].getType().resolveBinding(); // Inner Case One\r", "+\tassertTrue(binding.isDeprecated());\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c479040fc6ad14eb08ecfcb14bdeb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "b70a8ef15d3ecb3f80cac545a48011ae8c1f5f45", "commitAfterChange": "78062f651ed5392b1800a53eac72f4f25be7d9fe", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public void _testBug425601_002() throws JavaModelException", "signatureAfterChange": "\r public void testBug425601_002() throws JavaModelException", "diff": ["- */", "-public void _testBug425601_002() throws JavaModelException {", "-\tthis.workingCopy = getWorkingCopy(\"/Converter18/src/testBug425601_002/Outer.java\",", "-\t\t\ttrue/* resolve */);", "-\tString contents = \"package testBug425601_002;\\n\" +", "-\t\t\t//\"@Deprecated\\n\"+", "-\t\t\t\"public class Outer<O> {\\n\"+", "-\t\t\t\"    @Deprecated\\n\"+", "-\t\t\t\"    public class Middle<X> {\\n\"+", "-\t\t\t\"        @Deprecated\\n\"+", "-\t\t\t\"        public class Inner<E> {\\n\"+", "-\t\t\t\"        }\\n\"+", "-\t\t\t\"    }\\n\"+", "-\t\t\t\"    \\n\"+", "-\t\t\t\"    Outer<String> o;\\n\"+", "-\t\t\t\"    Middle<String> m; // Middle should be deprecated - Middle Case one\\n\"+", "-\t\t\t\"    Outer<String>.Middle<String> m2; // Middle should be deprecated - Middle Case Two \\n\"+", "-\t\t\t\"    @SuppressWarnings(\\\"rawtypes\\\")\"+", "-\t\t\t\"    Outer.Middle m3; \\n\"+", "-\t\t\t\"    Middle<String>.Inner<Object> i; // Inner should be deprecated - Inner Case One\\n\"+", "-\t\t\t\"}\\n\"+", "-\t\t\t\"class Ref {\\n\"+", "-\t\t\t\"    Outer<String> o;\\n\"+", "-\t\t\t\"    Outer<String>.Middle<String> m;\\n\"+", "-\t\t\t\"    Outer<String>.Middle<String>.Inner<Object> i;\\n\"+", "-\t\t\t\"}\\n\";", "-\tCompilationUnit cu = (CompilationUnit) buildAST(contents, this.workingCopy);", "-\tTypeDeclaration typedeclaration = (TypeDeclaration) getASTNode(cu, 0);", "-\tFieldDeclaration[] fields = typedeclaration.getFields();", "-\tITypeBinding binding = fields[0].getType().resolveBinding();", "-\tassertTrue(!binding.isDeprecated());", "-\tbinding = fields[3].getType().resolveBinding(); ", "-\tassertTrue(binding.isDeprecated());", "-\tbinding = fields[1].getType().resolveBinding(); // Middle Case One", "-\tassertTrue(binding.isDeprecated());", "-\tbinding = fields[2].getType().resolveBinding(); // Middle Case Two", "-\tassertTrue(binding.isDeprecated());", "-\tbinding = fields[4].getType().resolveBinding(); // Inner Case One", "-\tassertTrue(binding.isDeprecated());", "-}", "+ */\r", "+public void testBug425601_002() throws JavaModelException {\r", "+\tthis.workingCopy = getWorkingCopy(\"/Converter18/src/testBug425601_002/Outer.java\",\r", "+\t\t\ttrue/* resolve */);\r", "+\tString contents = \"package testBug425601_002;\\n\" +\r", "+\t\t\t//\"@Deprecated\\n\"+\r", "+\t\t\t\"public class Outer<O> {\\n\"+\r", "+\t\t\t\"    @Deprecated\\n\"+\r", "+\t\t\t\"    public class Middle<X> {\\n\"+\r", "+\t\t\t\"        @Deprecated\\n\"+\r", "+\t\t\t\"        public class Inner<E> {\\n\"+\r", "+\t\t\t\"        }\\n\"+\r", "+\t\t\t\"    }\\n\"+\r", "+\t\t\t\"    \\n\"+\r", "+\t\t\t\"    Outer<String> o;\\n\"+\r", "+\t\t\t\"    Middle<String> m; // Middle should be deprecated - Middle Case one\\n\"+\r", "+\t\t\t\"    Outer<String>.Middle<String> m2; // Middle should be deprecated - Middle Case Two \\n\"+\r", "+\t\t\t\"    @SuppressWarnings(\\\"rawtypes\\\")\"+\r", "+\t\t\t\"    Outer.Middle m3; \\n\"+\r", "+\t\t\t\"    Middle<String>.Inner<Object> i; // Inner should be deprecated - Inner Case One\\n\"+\r", "+\t\t\t\"}\\n\"+\r", "+\t\t\t\"class Ref {\\n\"+\r", "+\t\t\t\"    Outer<String> o;\\n\"+\r", "+\t\t\t\"    Outer<String>.Middle<String> m;\\n\"+\r", "+\t\t\t\"    Outer<String>.Middle<String>.Inner<Object> i;\\n\"+\r", "+\t\t\t\"}\\n\";\r", "+\tCompilationUnit cu = (CompilationUnit) buildAST(contents, this.workingCopy);\r", "+\tTypeDeclaration typedeclaration = (TypeDeclaration) getASTNode(cu, 0);\r", "+\tFieldDeclaration[] fields = typedeclaration.getFields();\r", "+\tITypeBinding binding = fields[0].getType().resolveBinding();\r", "+\tassertTrue(!binding.isDeprecated());\r", "+\tbinding = fields[3].getType().resolveBinding(); \r", "+\tassertTrue(binding.isDeprecated());\r", "+\tbinding = fields[1].getType().resolveBinding(); // Middle Case One\r", "+\tassertTrue(binding.isDeprecated());\r", "+\tbinding = fields[2].getType().resolveBinding(); // Middle Case Two\r", "+\tassertTrue(binding.isDeprecated());\r", "+\tbinding = fields[4].getType().resolveBinding(); // Inner Case One\r", "+\tassertTrue(binding.isDeprecated());\r", "+}\r"]}], "num": 41951}