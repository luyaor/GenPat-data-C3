{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6508c6887deb9bebcb390bb3e2c9b0d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40a077b81a03ebbd94cf61f7c6a5c4e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void test064()", "signatureAfterChange": " \tpublic void test064()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\"\tvoid bar(T t) {\\n\" + ", "-\t\t\"\t           ^\\n\" + ", "-\t\t\"The parameter t is hiding a field from type X<T>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"\tx.t.foo();\\n\" + ", "-\t\t\"\t    ^^^\\n\" + ", "-\t\t\"The method foo() is undefined for the type Exception\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid bar(T t) {\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"The parameter t is hiding a field from type X<T>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX x = new X();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX x = new X();\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tx.t.foo();\\n\" + ", "+\t\t\t\"\t    ^^^\\n\" + ", "+\t\t\t\"The method foo() is undefined for the type Exception\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604f8ab9eb1e83fb9a81a64fcddbb080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3ec169b44d3736817b7c4ce9bf1791fcda57b692", "commitAfterChange": "4a83e27deea774790864c829cd5109d435b50edd", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": " \tpublic void _test323()", "signatureAfterChange": " \tpublic void test323()", "diff": ["-\t// TODO (philippe) reenable when addressed", "-\tpublic void _test323() {", "-\t\tthis.runConformTest(", "+\t// 76359 - also check warnings for raw conversion", "+\tpublic void test323() {", "+\t\tthis.runNegativeTest(", "-\t\t\t\t\"\tG<String>.Member x = new G().new Member();\\n\" + ", "-\t\t\t\t\"  Zork z;\\n\" +", "-\t\t\t\t\"}\\n\"\t\t\t", "+\t\t\t\t\"\tG<String>.Member gsm = g.new Member();\\n\" + ", "+\t\t\t\t\"\tG.Member gm = null;\\n\" + ", "+\t\t\t\t\"\tG<Thread>.Member gtm = gm;\\n\" + ", "+\t\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\t\"}\\n\"\t\t", "-\t\t\t\"\");\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tG<String> g = new G();\\n\" + ", "+\t\t\t\"\t              ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type G is converted to G<String>. References to generic type G<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tG<Thread>.Member gtm = gm;\\n\" + ", "+\t\t\t\"\t                       ^^\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type G.Member is converted to G<Thread>.Member. References to generic type G<T>.Member should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");\t"]}], "num": 10478}