{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d6a16e3125a64fcbeaad6f369bd2205", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b4177152f4f3467a06b828ea5b0df37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "1d5b841741b609cf6927afba3dde0ac1dd2572e2", "commitAfterChange": "09c7c7b4fe8a9c0ad49252ee63d32d12d87dd8ea", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate static DefaultProblemFactory getProblemFactory(final IProgressMonitor monitor)", "signatureAfterChange": "  \t\tCancelableProblemFactory(IProgressMonitor monitor)", "diff": ["+", "+\t\tCancelableProblemFactory(IProgressMonitor monitor) {", "+\t\t\tsuper();", "+\t\t\tthis.monitor = monitor;", "+\t\t}", "-\tprivate static DefaultProblemFactory getProblemFactory(final IProgressMonitor monitor) {", "-\t\treturn new DefaultProblemFactory() {", "-\t\t\tpublic IProblem createProblem(char[] originatingFileName, int problemId, String[] problemArguments, String[] messageArguments, int severity, int startPosition, int endPosition, int lineNumber) {", "-\t\t\t\tif (monitor != null && monitor.isCanceled()) ", "-\t\t\t\t\tthrow new AbortCompilation(true/*silent*/, new OperationCanceledException());", "-\t\t\t\treturn super.createProblem(originatingFileName, problemId, problemArguments, messageArguments, severity, startPosition, endPosition, lineNumber);", "-\t\t\t}", "-\t\t};", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3526c1b5b48c94eb91f3a845821db36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "37468b15b5c10767a0d1f5bcf745b5635724272d", "commitAfterChange": "269c8c1f587787c02ae256af1e14f83a052a8b35", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tpublic CategorizedProblem createProblem( \t\t\tchar[] originatingFileName, \t\t\tint problemId, \t\t\tString[] problemArguments, \t\t\tString[] messageArguments, \t\t\tint severity, \t\t\tint start, \t\t\tint end, \t\t\tint lineNumber, \t\t\tint columnNumber)", "signatureAfterChange": " \t\t \t\tpublic CategorizedProblem createProblem( \t\t\t\tchar[] originatingFileName, \t\t\t\tint problemId, \t\t\t\tString[] problemArguments, \t\t\t\tString[] messageArguments, \t\t\t\tint severity, \t\t\t\tint start, \t\t\t\tint end, \t\t\t\tint lineNumber, \t\t\t\tint columnNumber)", "diff": ["-\t\tpublic CategorizedProblem createProblem(", "-\t\t\tchar[] originatingFileName,", "-\t\t\tint problemId,", "-\t\t\tString[] problemArguments,", "-\t\t\tString[] messageArguments,", "-\t\t\tint severity,", "-\t\t\tint start,", "-\t\t\tint end,", "-\t\t\tint lineNumber,", "-\t\t\tint columnNumber) {", "-\t\t\t", "-\t\t\tCategorizedProblem pb = super.createProblem(", "-\t\t\t\toriginatingFileName,", "-\t\t\t\tproblemId,", "-\t\t\t\tproblemArguments,", "-\t\t\t\tmessageArguments,", "-\t\t\t\tseverity,", "-\t\t\t\tstart,", "-\t\t\t\tend,", "-\t\t\t\tlineNumber,", "-\t\t\t\tcolumnNumber);", "+\t\tpublic CategorizedProblem createProblem(", "+\t\t\t\tchar[] originatingFileName,", "+\t\t\t\tint problemId,", "+\t\t\t\tString[] problemArguments,", "+\t\t\t\tString[] messageArguments,", "+\t\t\t\tint severity,", "+\t\t\t\tint start,", "+\t\t\t\tint end,", "+\t\t\t\tint lineNumber,", "+\t\t\t\tint columnNumber) {", "+\t\t\t\treturn checkProblem(", "+\t\t\t\t\tsuper.createProblem(", "+\t\t\t\t\t\toriginatingFileName,", "+\t\t\t\t\t\tproblemId,", "+\t\t\t\t\t\tproblemArguments,", "+\t\t\t\t\t\tmessageArguments,", "+\t\t\t\t\t\tseverity,", "+\t\t\t\t\t\tstart,", "+\t\t\t\t\t\tend,", "+\t\t\t\t\t\tlineNumber,", "+\t\t\t\t\t\tcolumnNumber), originatingFileName, severity, start);", "+\t\t}"]}], "num": 20677}