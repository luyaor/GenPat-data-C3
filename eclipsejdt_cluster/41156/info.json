{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b0bf9246f5c207fa74cd7a19acf0960", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379e88564fb9469cf50beaa29342bb48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemHandler.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void handle( \tint problemId, \tString[] problemArguments, \tint elaborationId, \tString[] messageArguments, \tint severity, \tint problemStartPosition, \tint problemEndPosition, \tReferenceContext referenceContext, \tCompilationResult unitResult)", "signatureAfterChange": " public void handle( \tint problemId, \tString[] problemArguments, \tint elaborationId, \tString[] messageArguments, \tint severity, \tint problemStartPosition, \tint problemEndPosition, \tReferenceContext referenceContext, \tCompilationResult unitResult)", "diff": ["+\tif ((severity & ProblemSeverities.Optional) != 0 && problemId != IProblem.Task) {", "+\t\tICompilationUnit cu = unitResult.getCompilationUnit();", "+\t\tif (cu != null && cu.ignoreOptionalProblems())", "+\t\t\treturn;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c14216bce20bfc7452c3b221e42abf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "43c947b648b5a1fa1fb7d4f5ce5b7cea1d4fa7a2", "commitAfterChange": "eee151556fa5628da58c297d3e841df408f33c62", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic int getExtendedEnd(ASTNode node)", "signatureAfterChange": " \tpublic int getExtendedEnd(ASTNode node)", "diff": ["-\t\t\t\tComment lastComment = this.comments[range[1]];", "-\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();", "+\t\t\t\tif (range[0] == -1 && range[1] == -1) {", "+\t\t\t\t\tASTNode parent = node.getParent();", "+\t\t\t\t\tif (parent != null) {", "+\t\t\t\t\t\treturn getExtendedEnd(parent);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tComment lastComment = this.comments[range[1]];", "+\t\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();", "+\t\t\t\t}", "-\t\treturn end;", "+\t\treturn end-1;"]}], "num": 41156}