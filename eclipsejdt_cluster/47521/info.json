{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa6cea7c401910f911554796ca9347d3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043355033bd401cff3756c2a15cb6bad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " IMethod createBinaryMethodHandle(IType type, char[] methodSelector, char[][] argumentTypeNames)", "signatureAfterChange": " IMethod createBinaryMethodHandle(IType type, char[] methodSelector, char[][] argumentTypeNames)", "diff": ["-\t\t\t\t\t\t\tif (!CharOperation.endsWith(Signature.toCharArray(Signature.getTypeErasure(parameterTypeName)), argumentTypeNames[j]))", "+\t\t\t\t\t\t\tif (!CharOperation.endsWith(Signature.toCharArray(Signature.getTypeErasure(parameterTypeName)), CharOperation.replaceOnCopy(argumentTypeNames[j], '$', '.')))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6330ab1be512925fc537709bd2dd431", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "2e1b23f98836905d3f42db7b6f478daa55f495cd", "commitAfterChange": "95eb10edbab346b9a543e6c0230c09018020d5a2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprotected boolean mustQualifyType( \t\tchar[] packageName, \t\tchar[] typeName)", "signatureAfterChange": " \t \tprotected boolean mustQualifyType( \t\tchar[] packageName, \t\tchar[] typeName)", "diff": ["-\t\t\t\t\t\t\t\t\tif(CharOperation.equals(CharOperation.lastSegment(imports[j].readableName(), '.'), typeName)) {", "+\t\t\t\t\t\t\t\t\tif(CharOperation.equals(CharOperation.lastSegment(imports[j].readableName(), '.'), typeName)", "+\t\t\t\t\t\t\t\t\t\t&& !CharOperation.equals(imports[j].compoundName, CharOperation.splitOn('.', readableTypeName))) {"]}], "num": 47521}