{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0def1e426f48f5984b21b1a0baa994bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75b4dabac4e3696e594bcc5b6282f835", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\t\tsuper.findIndexMatches(input, requestor, detailLevel, progressMonitor, scope);", "+\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);", "-\t\tsuper.findIndexMatches(input, requestor, detailLevel, progressMonitor, scope);", "+\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a8774f1715d51b3ea16401c3fa7a66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\t\tsuper.findIndexMatches(input, requestor, detailLevel, progressMonitor, scope);\t", "+\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);\t", "-\t\tfeedIndexRequestor(requestor, detailLevel, entry.getFileReferences(), input, scope);", "+\t\tfeedIndexRequestor(requestor, entry.getFileReferences(), input, scope);"]}], "num": 30112}