{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40d7558e91e139aeb3714ac4e35edd16", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0534228a02eec64fd53451ecf83897a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public void generateUnboxingConversion(int unboxedTypeID)", "signatureAfterChange": " public void generateUnboxingConversion(int unboxedTypeID)", "diff": ["-\tsuper.generateUnboxingConversion(unboxedTypeID);", "-\tVerificationTypeInfo info = null;", "-\tswitch (unboxedTypeID) {", "-\t\tcase TypeIds.T_byte :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.BYTE);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_short :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.SHORT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_char :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.CHAR);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_int :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.INT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_long :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.LONG);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_float :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.FLOAT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_double :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.DOUBLE);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_boolean :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.BOOLEAN);", "-\t}", "-\tif (info != null) {", "-    \tthis.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1] = info;", "-\t}", "+    super.generateUnboxingConversion(unboxedTypeID);", "+    VerificationTypeInfo info = null;", "+    switch (unboxedTypeID) {", "+        case TypeIds.T_byte :", "+            info = new VerificationTypeInfo(TypeBinding.BYTE);", "+            break;", "+        case TypeIds.T_short :", "+            info = new VerificationTypeInfo(TypeBinding.SHORT);", "+            break;", "+        case TypeIds.T_char :", "+            info = new VerificationTypeInfo(TypeBinding.CHAR);", "+            break;", "+        case TypeIds.T_int :", "+            info = new VerificationTypeInfo(TypeBinding.INT);", "+            break;", "+        case TypeIds.T_long :", "+            info = new VerificationTypeInfo(TypeBinding.LONG);", "+            break;", "+        case TypeIds.T_float :", "+            info = new VerificationTypeInfo(TypeBinding.FLOAT);", "+            break;", "+        case TypeIds.T_double :", "+            info = new VerificationTypeInfo(TypeBinding.DOUBLE);", "+            break;", "+        case TypeIds.T_boolean :", "+            info = new VerificationTypeInfo(TypeBinding.BOOLEAN);", "+    }", "+    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "+    if (info != null && (numberOfStackItems >= 1)) {", "+        this.currentFrame.stackItems[numberOfStackItems - 1] = info;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdcd816436103493c3ca26e17b0ea3fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " protected void invokeJavaLangReflectFieldGetter(int typeID)", "signatureAfterChange": " protected void invokeJavaLangReflectFieldGetter(int typeID)", "diff": ["-\tsuper.invokeJavaLangReflectFieldGetter(typeID);", "-\tVerificationTypeInfo info = null;", "-\tswitch (typeID) {", "-\t\tcase TypeIds.T_int :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.INT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_byte :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.BYTE);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_short :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.SHORT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_long :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.LONG);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_float :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.FLOAT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_double :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.DOUBLE);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_char :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.CHAR);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_boolean :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.BOOLEAN);", "-\t\t\tbreak;", "-\t\tdefault :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangObject, ConstantPool.JavaLangObjectConstantPoolName);", "-\t\t\tbreak;", "-\t}", "-\tthis.currentFrame.numberOfStackItems--;", "-\tthis.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1] = info;\t", "+    super.invokeJavaLangReflectFieldGetter(typeID);", "+    VerificationTypeInfo info = null;", "+    switch (typeID) {", "+        case TypeIds.T_int :", "+            info = new VerificationTypeInfo(TypeBinding.INT);", "+            break;", "+        case TypeIds.T_byte :", "+            info = new VerificationTypeInfo(TypeBinding.BYTE);", "+            break;", "+        case TypeIds.T_short :", "+            info = new VerificationTypeInfo(TypeBinding.SHORT);", "+            break;", "+        case TypeIds.T_long :", "+            info = new VerificationTypeInfo(TypeBinding.LONG);", "+            break;", "+        case TypeIds.T_float :", "+            info = new VerificationTypeInfo(TypeBinding.FLOAT);", "+            break;", "+        case TypeIds.T_double :", "+            info = new VerificationTypeInfo(TypeBinding.DOUBLE);", "+            break;", "+        case TypeIds.T_char :", "+            info = new VerificationTypeInfo(TypeBinding.CHAR);", "+            break;", "+        case TypeIds.T_boolean :", "+            info = new VerificationTypeInfo(TypeBinding.BOOLEAN);", "+            break;", "+        default :", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangObject, ConstantPool.JavaLangObjectConstantPoolName);", "+            break;", "+    }", "+    if (this.currentFrame.numberOfStackItems >= 2) {", "+        this.currentFrame.numberOfStackItems--;", "+        this.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1] = info;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7303caf84deee04d4f9f55b59062b2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void getBaseTypeValue(int baseTypeID)", "signatureAfterChange": " public void getBaseTypeValue(int baseTypeID)", "diff": ["-\tsuper.getBaseTypeValue(baseTypeID);", "-\tVerificationTypeInfo info = null;", "-\tswitch (baseTypeID) {", "-\t\tcase TypeIds.T_byte :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.BYTE);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_short :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.SHORT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_char :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.CHAR);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_int :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.INT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_long :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.LONG);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_float :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.FLOAT);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_double :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.DOUBLE);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_boolean :", "-\t\t\tinfo = new VerificationTypeInfo(TypeBinding.BOOLEAN);", "-\t}", "-\tif (info != null) {", "-\t\tthis.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1] = info;\t", "-\t}", "+    super.getBaseTypeValue(baseTypeID);", "+    VerificationTypeInfo info = null;", "+    switch (baseTypeID) {", "+        case TypeIds.T_byte :", "+            info = new VerificationTypeInfo(TypeBinding.BYTE);", "+            break;", "+        case TypeIds.T_short :", "+            info = new VerificationTypeInfo(TypeBinding.SHORT);", "+            break;", "+        case TypeIds.T_char :", "+            info = new VerificationTypeInfo(TypeBinding.CHAR);", "+            break;", "+        case TypeIds.T_int :", "+            info = new VerificationTypeInfo(TypeBinding.INT);", "+            break;", "+        case TypeIds.T_long :", "+            info = new VerificationTypeInfo(TypeBinding.LONG);", "+            break;", "+        case TypeIds.T_float :", "+            info = new VerificationTypeInfo(TypeBinding.FLOAT);", "+            break;", "+        case TypeIds.T_double :", "+            info = new VerificationTypeInfo(TypeBinding.DOUBLE);", "+            break;", "+        case TypeIds.T_boolean :", "+            info = new VerificationTypeInfo(TypeBinding.BOOLEAN);", "+    }", "+    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "+    if (info != null && (numberOfStackItems >= 1)) {", "+        this.currentFrame.stackItems[numberOfStackItems - 1] = info;", "+    }"]}], "num": 13935}