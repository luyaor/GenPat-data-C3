{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73713d4c2f3734e3c859fbc587a95951", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b33d67d8eb2a471f8df0b99045b2e28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3ff7b81bced83cc6ffeee9cd4ddf361110eeeb98", "commitAfterChange": "25f2a2d3f2ea6a2ed84c0af6dba49f7f2a42eab8", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \tprivate void findMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\tif(isCompletingDeclaration){\r", "-\t\t\t\tfindLocalMethodDeclarations(\r", "-\t\t\t\t\tselector,\r", "-\t\t\t\t\tcurrentType.availableMethods(),\r", "-\t\t\t\t\tscope,\r", "-\t\t\t\t\tmethodsFound,\r", "-\t\t\t\t\tonlyStaticMethods,\r", "-\t\t\t\t\texactMatch,\r", "-\t\t\t\t\treceiverType);\r", "-\t\t\t} else{\r", "-\t\t\t\tfindLocalMethods(\r", "-\t\t\t\t\tselector,\r", "-\t\t\t\t\targTypes,\r", "-\t\t\t\t\tcurrentType.availableMethods(),\r", "-\t\t\t\t\tscope,\r", "-\t\t\t\t\tmethodsFound,\r", "-\t\t\t\t\tonlyStaticMethods,\r", "-\t\t\t\t\texactMatch,\r", "-\t\t\t\t\treceiverType,\r", "-\t\t\t\t\tinvocationSite,\r", "-\t\t\t\t\tinvocationScope,\r", "-\t\t\t\t\timplicitCall);\r", "+\t\t\t\r", "+\t\t\tMethodBinding[] methods = currentType.availableMethods();\r", "+\t\t\tif(methods != null) {\r", "+\t\t\t\tif(isCompletingDeclaration){\r", "+\t\t\t\t\tfindLocalMethodDeclarations(\r", "+\t\t\t\t\t\tselector,\r", "+\t\t\t\t\t\tmethods,\r", "+\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\tmethodsFound,\r", "+\t\t\t\t\t\tonlyStaticMethods,\r", "+\t\t\t\t\t\texactMatch,\r", "+\t\t\t\t\t\treceiverType);\r", "+\t\t\t\t} else{\r", "+\t\t\t\t\tfindLocalMethods(\r", "+\t\t\t\t\t\tselector,\r", "+\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\tmethods,\r", "+\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\tmethodsFound,\r", "+\t\t\t\t\t\tonlyStaticMethods,\r", "+\t\t\t\t\t\texactMatch,\r", "+\t\t\t\t\t\treceiverType,\r", "+\t\t\t\t\t\tinvocationSite,\r", "+\t\t\t\t\t\tinvocationScope,\r", "+\t\t\t\t\t\timplicitCall);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "999eca8976c57cc5c0c350288fb81a83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3ff7b81bced83cc6ffeee9cd4ddf361110eeeb98", "commitAfterChange": "25f2a2d3f2ea6a2ed84c0af6dba49f7f2a42eab8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r \tprivate void findIntefacesMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tReferenceBinding[] itsInterfaces,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \r \tprivate void findIntefacesMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tReferenceBinding[] itsInterfaces,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\t\t\t\tif(isCompletingDeclaration){\r", "-\r", "-\t\t\t\t\t\t\tfindLocalMethodDeclarations(\r", "-\t\t\t\t\t\t\t\tselector,\r", "-\t\t\t\t\t\t\t\tcurrentType.availableMethods(),\r", "-\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\tmethodsFound,\r", "-\t\t\t\t\t\t\t\tonlyStaticMethods,\r", "-\t\t\t\t\t\t\t\texactMatch,\r", "-\t\t\t\t\t\t\t\treceiverType);\r", "-\r", "-\t\t\t\t\t\t} else {\r", "-\r", "-\t\t\t\t\t\t\tfindLocalMethods(\r", "-\t\t\t\t\t\t\t\tselector,\r", "-\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\tcurrentType.availableMethods(),\r", "-\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\tmethodsFound,\r", "-\t\t\t\t\t\t\t\tonlyStaticMethods,\r", "-\t\t\t\t\t\t\t\texactMatch,\r", "-\t\t\t\t\t\t\t\treceiverType,\r", "-\t\t\t\t\t\t\t\tinvocationSite,\r", "-\t\t\t\t\t\t\t\tinvocationScope,\r", "-\t\t\t\t\t\t\t\timplicitCall);\r", "+\t\t\t\t\t\tMethodBinding[] methods = currentType.availableMethods();\r", "+\t\t\t\t\t\tif(methods != null) {\r", "+\t\t\t\t\t\t\tif(isCompletingDeclaration){\r", "+\t\r", "+\t\t\t\t\t\t\t\tfindLocalMethodDeclarations(\r", "+\t\t\t\t\t\t\t\t\tselector,\r", "+\t\t\t\t\t\t\t\t\tmethods,\r", "+\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\tmethodsFound,\r", "+\t\t\t\t\t\t\t\t\tonlyStaticMethods,\r", "+\t\t\t\t\t\t\t\t\texactMatch,\r", "+\t\t\t\t\t\t\t\t\treceiverType);\r", "+\t\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\r", "+\t\t\t\t\t\t\t\tfindLocalMethods(\r", "+\t\t\t\t\t\t\t\t\tselector,\r", "+\t\t\t\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\t\t\t\tmethods,\r", "+\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\tmethodsFound,\r", "+\t\t\t\t\t\t\t\t\tonlyStaticMethods,\r", "+\t\t\t\t\t\t\t\t\texactMatch,\r", "+\t\t\t\t\t\t\t\t\treceiverType,\r", "+\t\t\t\t\t\t\t\t\tinvocationSite,\r", "+\t\t\t\t\t\t\t\t\tinvocationScope,\r", "+\t\t\t\t\t\t\t\t\timplicitCall);\r", "+\t\t\t\t\t\t\t}\r"]}], "num": 37422}