{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5a321626994a663bc7a4d3f1ca25ee6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15505e6e18cc49d3474afca45d802ec6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "2fdd800912ee4f65c51a2ec384533d1146c71af7", "commitAfterChange": "844f82aaef831e55c4827a65ccd98caed0cd08f3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void test005()", "signatureAfterChange": "  \tpublic void test005()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in p\\\\X.java (at line 3)\\n\" + ", "-\t\t\t\"\timport static p2.Z.Zint;\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^\\n\" + ", "-\t\t\t\"The import p2.Z.Zint cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in p\\\\X.java (at line 4)\\n\" + ", "-\t\t\t\"\timport static p2.Z.ZMember;\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The type p2.Z.ZMember is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in p\\\\X.java (at line 6)\\n\" + ", "-\t\t\t\"\tint x = y(1);\\n\" + ", "-\t\t\t\"\t        ^\\n\" + ", "-\t\t\t\"The method y(int) from the type Y is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in p\\\\X.java (at line 7)\\n\" + ", "-\t\t\t\"\tint y = Yint;\\n\" + ", "-\t\t\t\"\t        ^^^^\\n\" + ", "-\t\t\t\"The field Yint is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in p\\\\X.java (at line 8)\\n\" + ", "-\t\t\t\"\tint z = Zint;\\n\" + ", "-\t\t\t\"\t        ^^^^\\n\" + ", "-\t\t\t\"Zint cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in p\\\\X.java (at line 9)\\n\" + ", "-\t\t\t\"\tvoid m1(YMember m) {}\\n\" + ", "-\t\t\t\"\t        ^^^^^^^\\n\" + ", "-\t\t\t\"The type YMember is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"7. ERROR in p\\\\X.java (at line 10)\\n\" + ", "-\t\t\t\"\tvoid m2(ZMember m) {}\\n\" + ", "-\t\t\t\"\t        ^^^^^^^\\n\" + ", "-\t\t\t\"ZMember cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p\\\\X.java (at line 3)\\n\" + ", "+\t\t\"\timport static p2.Z.Zint;\\n\" + ", "+\t\t\"\t              ^^^^^^^^^\\n\" + ", "+\t\t\"The import p2.Z.Zint cannot be resolved\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\"\timport static p2.Z.ZMember;\\n\" + ", "+\t\t\"\t              ^^^^^^^^^^^^\\n\" + ", "+\t\t\"The type p2.Z.ZMember is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\"\tint x = y(1);\\n\" + ", "+\t\t\"\t        ^\\n\" + ", "+\t\t\"The method y(int) from the type Y is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tint y = Yint;\\n\" + ", "+\t\t\"\t        ^^^^\\n\" + ", "+\t\t\"The field Y.Yint is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in p\\\\X.java (at line 8)\\n\" + ", "+\t\t\"\tint z = Zint;\\n\" + ", "+\t\t\"\t        ^^^^\\n\" + ", "+\t\t\"Zint cannot be resolved\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in p\\\\X.java (at line 9)\\n\" + ", "+\t\t\"\tvoid m1(YMember m) {}\\n\" + ", "+\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\"The type YMember is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. ERROR in p\\\\X.java (at line 10)\\n\" + ", "+\t\t\"\tvoid m2(ZMember m) {}\\n\" + ", "+\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\"ZMember cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "473dd8c01f36aa56aaa867e3e4796d7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "3bee3efb3c3139a52dff7aa299065deb5290ece4", "commitAfterChange": "645825dd1e7c490f7b149a754d38a08b99765996", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic void testBug76324string()", "signatureAfterChange": " \tpublic void testBug76324string()", "diff": ["-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\t\"\t * Inline string references \\n\" + ", "-\t\t\t\t\t\"\t *\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"unterminated string}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"invalid string\\\"\\\"}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"valid string\\\"}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "-\t\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\t\"\tpublic void s_foo() {\\n\" + ", "-\t\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\t\"}\\n\" },", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"}\\n\" + ", "-\t\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"unterminated string}\\n\" + ", "-\t\t\t\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"invalid string\\\"\\\"}\\n\" + ", "-\t\t\t\t\t\"\t                         ^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Unexpected text\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "-\t\t\t\t\t\"\t                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Unexpected text\\n\" + ", "-\t\t\t\t\t\"----------\\n\"", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * Inline string references \\n\" + ", "+\t\t\t\"\t *\\n\" + ", "+\t\t\t\"\t * {@link \\\"}\\n\" + ", "+\t\t\t\"\t * {@link \\\"unterminated string}\\n\" + ", "+\t\t\t\"\t * {@link \\\"invalid string\\\"\\\"}\\n\" + ", "+\t\t\t\"\t * {@link \\\"valid string\\\"}\\n\" + ", "+\t\t\t\"\t * {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tpublic void s_foo() {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" },", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\t* {@link \\\"}\\n\" + ", "+\t\t\t\"\t         ^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid reference\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\t* {@link \\\"unterminated string}\\n\" + ", "+\t\t\t\"\t         ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid reference\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t* {@link \\\"invalid string\\\"\\\"}\\n\" + ", "+\t\t\t\"\t                         ^^\\n\" + ", "+\t\t\t\"Javadoc: Unexpected text\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\t* {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Unexpected text\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8197234fd5437ad9b9d2c190d0ba53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "     public void test115()", "signatureAfterChange": "     public void test115()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t@Annot(foo = M.class, bar = baz()+s)\\n\" + ", "-\t\t\t\"\t             ^\\n\" + ", "-\t\t\t\"M cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t@Annot(foo = M.class, bar = baz()+s)\\n\" + ", "-\t\t\t\"\t                            ^^^\\n\" + ", "-\t\t\t\"The method baz() is undefined for the type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t@Annot(foo = M.class, bar = baz()+s)\\n\" + ", "-\t\t\t\"\t                                  ^\\n\" + ", "-\t\t\t\"s cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\t@Annot(foo = T.class, bar = s)\\n\" + ", "-\t\t\t\"\t             ^^^^^^^\\n\" + ", "-\t\t\t\"Illegal class literal for the type parameter T\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"\t<T> T foo(T t, String s) {\\n\" + ", "-\t\t\t\"\t                      ^\\n\" + ", "-\t\t\t\"The parameter s is hiding a field from type X\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+    \t\t\"\tClass foo();\\n\" + ", "+    \t\t\"\t^^^^^\\n\" + ", "+    \t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+    \t\t\"\t@Annot(foo = M.class, bar = baz()+s)\\n\" + ", "+    \t\t\"\t             ^\\n\" + ", "+    \t\t\"M cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+    \t\t\"\t@Annot(foo = M.class, bar = baz()+s)\\n\" + ", "+    \t\t\"\t                            ^^^\\n\" + ", "+    \t\t\"The method baz() is undefined for the type X\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. ERROR in X.java (at line 5)\\n\" + ", "+    \t\t\"\t@Annot(foo = M.class, bar = baz()+s)\\n\" + ", "+    \t\t\"\t                                  ^\\n\" + ", "+    \t\t\"s cannot be resolved\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"5. ERROR in X.java (at line 11)\\n\" + ", "+    \t\t\"\t@Annot(foo = T.class, bar = s)\\n\" + ", "+    \t\t\"\t             ^^^^^^^\\n\" + ", "+    \t\t\"Illegal class literal for the type parameter T\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"6. WARNING in X.java (at line 12)\\n\" + ", "+    \t\t\"\t<T> T foo(T t, String s) {\\n\" + ", "+    \t\t\"\t                      ^\\n\" + ", "+    \t\t\"The parameter s is hiding a field from type X\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5530fce038b83949d55e56e9a7905145", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7cc5105214055493937549b61fac95d343064ee5", "commitAfterChange": "7568a4350d418633b0b504fd95408219cea387db", "methodNumberBeforeChange": 1113, "methodNumberAfterChange": 1113, "signatureBeforeChange": " public void test1085()", "signatureAfterChange": " public void test1085()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in Y.java (at line 2)\\n\" +", "-\t\t\"\tZ z1 = z1;\\n\" +", "-\t\t\"\t       ^^\\n\" +", "-\t\t\"Cannot reference a field before it is defined\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in Y.java (at line 3)\\n\" +", "-\t\t\"\tZ[] z2 = z2;\\n\" +", "-\t\t\"\t         ^^\\n\" +", "-\t\t\"Cannot reference a field before it is defined\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in Y.java (at line 6)\\n\" +", "-\t\t\"\tE e0 = es[0];\\n\" +", "-\t\t\"\t       ^^\\n\" +", "-\t\t\"Cannot reference a field before it is defined\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. ERROR in Y.java (at line 7)\\n\" +", "-\t\t\"\tE e = e;\\n\" +", "-\t\t\"\t      ^\\n\" +", "-\t\t\"Cannot reference a field before it is defined\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. ERROR in Y.java (at line 8)\\n\" +", "-\t\t\"\tE[] es = es;\\n\" +", "-\t\t\"\t         ^^\\n\" +", "-\t\t\"Cannot reference a field before it is defined\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. ERROR in Y.java (at line 9)\\n\" +", "-\t\t\"\tE e2 = e2.e;\\n\" +", "-\t\t\"\t       ^^^^\\n\" +", "-\t\t\"Cannot reference a field before it is defined\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. ERROR in Y.java (at line 9)\\n\" +", "-\t\t\"\tE e2 = e2.e;\\n\" +", "-\t\t\"\t       ^^^^\\n\" +", "-\t\t\"e2.e cannot be resolved or is not a field\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in Y.java (at line 2)\\n\" + ", "+\t\t\"\tZ z1 = z1;\\n\" + ", "+\t\t\"\t       ^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in Y.java (at line 3)\\n\" + ", "+\t\t\"\tZ[] z2 = z2;\\n\" + ", "+\t\t\"\t         ^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in Y.java (at line 6)\\n\" + ", "+\t\t\"\tE e0 = es[0];\\n\" + ", "+\t\t\"\t       ^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in Y.java (at line 7)\\n\" + ", "+\t\t\"\tE e = e;\\n\" + ", "+\t\t\"\t      ^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in Y.java (at line 8)\\n\" + ", "+\t\t\"\tE[] es = es;\\n\" + ", "+\t\t\"\t         ^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in Y.java (at line 9)\\n\" + ", "+\t\t\"\tE e2 = e2.e;\\n\" + ", "+\t\t\"\t       ^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. ERROR in Y.java (at line 9)\\n\" + ", "+\t\t\"\tE e2 = e2.e;\\n\" + ", "+\t\t\"\t       ^^^^\\n\" + ", "+\t\t\"e2.e cannot be resolved or is not a field\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe92065ef4c9565da0e5f87d2bb02cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "d5a32e245b27c645dcf70347396d7253765682d3", "commitAfterChange": "562bd70d52b78a80d9ea0f036f9a91cfb91468db", "methodNumberBeforeChange": 353, "methodNumberAfterChange": 353, "signatureBeforeChange": " public void test0960_assert_finally()", "signatureAfterChange": " public void test0960_assert_finally()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 12)\\n\" +", "-\t\t\"\tif (foo == null) {}\\n\" +", "-\t\t\"\t    ^^^\\n\" +", "-\t\t\"Null comparison always yields false: The variable foo cannot be null at this location\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 14)\\n\" +", "-\t\t\"\tif (foo2 == null) {}\\n\" +", "-\t\t\"\t    ^^^^\\n\" +", "-\t\t\"Redundant null check: The variable foo2 can only be null at this location\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 16)\\n\" +", "-\t\t\"\tif (bar == null) {}\\n\" +", "-\t\t\"\t    ^^^\\n\" +", "-\t\t\"Redundant null check: The variable bar can only be null at this location\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. ERROR in X.java (at line 18)\\n\" +", "-\t\t\"\tif (bar2 == null) {}\\n\" +", "-\t\t\"\t    ^^^^\\n\" +", "-\t\t\"Null comparison always yields false: The variable bar2 cannot be null at this location\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"\tif (foo == null) {}\\n\" + ", "+\t\t\"\t    ^^^\\n\" + ", "+\t\t\"Null comparison always yields false: The variable foo cannot be null at this location\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"\tif (foo == null) {}\\n\" + ", "+\t\t\"\t                 ^^\\n\" + ", "+\t\t\"Dead code\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"\tassert (foo2 == null);\\n\" + ", "+\t\t\"\t        ^^^^\\n\" + ", "+\t\t\"Null comparison always yields false: The variable foo2 cannot be null at this location\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\tif (foo2 == null) {}\\n\" + ", "+\t\t\"\t    ^^^^\\n\" + ", "+\t\t\"Redundant null check: The variable foo2 can only be null at this location\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"\tif (bar == null) {}\\n\" + ", "+\t\t\"\t    ^^^\\n\" + ", "+\t\t\"Redundant null check: The variable bar can only be null at this location\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\"\tassert (bar2 != null);\\n\" + ", "+\t\t\"\t        ^^^^\\n\" + ", "+\t\t\"Null comparison always yields false: The variable bar2 can only be null at this location\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\"\tif (bar2 == null) {}\\n\" + ", "+\t\t\"\t    ^^^^\\n\" + ", "+\t\t\"Null comparison always yields false: The variable bar2 cannot be null at this location\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\"\tif (bar2 == null) {}\\n\" + ", "+\t\t\"\t                  ^^\\n\" + ", "+\t\t\"Dead code\\n\" + "]}], "num": 50020}