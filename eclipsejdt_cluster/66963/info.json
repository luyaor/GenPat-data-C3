{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "833e7e63b9afc759778de93ad868d287", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c9bea449384a431b650440a838c2735", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "346bdb103ce71b1f3a960787ed6224b38d446bd2", "commitAfterChange": "c3e972de5a9a1c97c9d05a1e4aa6e94a7d4bef7d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public boolean forcedToBeRaw(ReferenceContext referenceContext)", "signatureAfterChange": " public boolean forcedToBeRaw(ReferenceContext referenceContext)", "diff": ["+\t} else if (this instanceof ConditionalExpression) { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=337751", "+\t\tConditionalExpression ternary = (ConditionalExpression) this;", "+\t\tif (ternary.valueIfTrue.forcedToBeRaw(referenceContext) || ternary.valueIfFalse.forcedToBeRaw(referenceContext)) {", "+\t\t\treturn true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94356158dcd374274ca3e671937a8e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExceptionFormula.java", "commitBeforeChange": "dca0c800b618e06354348679c785dbf10c5f5a8f", "commitAfterChange": "cab98b2b8859caae533ee4cfbe628b2265262135", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tCollection inputVariables(final InferenceContext18 context)", "signatureAfterChange": "  \tCollection inputVariables(final InferenceContext18 context)", "diff": ["-\t\t\t}\t\t\t", "-\t\t} else if (this.left instanceof ConditionalExpression && this.left.isPolyExpression()) {", "-\t\t\tConditionalExpression expr = (ConditionalExpression) this.left;", "-\t\t\tSet variables = new HashSet();", "-\t\t\tvariables.addAll(new ConstraintExceptionFormula(expr.valueIfTrue, this.right).inputVariables(context));", "-\t\t\tvariables.addAll(new ConstraintExceptionFormula(expr.valueIfFalse, this.right).inputVariables(context));", "-\t\t\treturn variables;", "+\t\t\t}"]}], "num": 66963}