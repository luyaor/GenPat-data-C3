{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e795e920ca50d4f524a7cd5e2e3185f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b31ae7edfbac9b5864fddb5a3c4e1d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void testPatternMatchPackageReference() throws CoreException", "signatureAfterChange": " public void testPatternMatchPackageReference() throws CoreException", "diff": ["-\t\t\"src/PackageReference/A.java [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/B.java [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/C.java PackageReference.C [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/D.java PackageReference.D.x [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/E.java PackageReference.E.x [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/F.java PackageReference.F.foo() -> p3.p2.p.X [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/G.java PackageReference.G.foo(p3.p2.p.X) -> void [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/H.java PackageReference.H.foo() -> void [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/I.java PackageReference.I.foo() -> void [p3.p2.p]\\n\" +", "-\t\t\"src/PackageReference/J.java PackageReference.J.foo() -> void [p3.p2.p]\", ", "+\t\t\"src/PackageReference/A.java [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/B.java [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/C.java PackageReference.C [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/D.java PackageReference.D.x [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/E.java PackageReference.E.x [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/F.java p3.p2.p.X PackageReference.F.foo() [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/G.java void PackageReference.G.foo(p3.p2.p.X) [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/H.java void PackageReference.H.foo() [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/I.java void PackageReference.I.foo() [p3.p2.p]\\n\" + ", "+\t\t\"src/PackageReference/J.java void PackageReference.J.foo() [p3.p2.p]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ad10605543baa7b65069883ff68556e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 921, "methodNumberAfterChange": 921, "signatureBeforeChange": " public void test0914()", "signatureAfterChange": " public void test0914()", "diff": ["-\t\t\"Type mismatch: cannot convert from List<capture-of ? super Collection<?>[]> to List<Collection[]>\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List<capture#1-of ? super Collection<?>[]> to List<Collection[]>\\n\" + ", "-\t\t\"Type mismatch: cannot convert from List<capture-of ? super Collection[]> to List<Collection[]>\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List<capture#2-of ? super Collection[]> to List<Collection[]>\\n\" + ", "-\t\t\"Type mismatch: cannot convert from List<capture-of ? super Collection<?>[]> to List<Collection<?>[]>\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List<capture#3-of ? super Collection<?>[]> to List<Collection<?>[]>\\n\" + ", "-\t\t\"Type mismatch: cannot convert from List<capture-of ? super Collection[]> to List<Collection<?>[]>\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List<capture#4-of ? super Collection[]> to List<Collection<?>[]>\\n\" + ", "-\t\t\"Type mismatch: cannot convert from List<capture-of ? super Collection<?>[]> to List<? super Collection[]>\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List<capture#12-of ? super Collection<?>[]> to List<? super Collection[]>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5468db022378b0483ab1dfe44ea7a85e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test016()", "signatureAfterChange": " \tpublic void test016()", "diff": ["-\t\t\t\"     2  istore_1\\n\" + ", "-\t\t\t\"     3  iload_1\\n\" + ", "+\t\t\t\"     2  istore_1 [i]\\n\" + ", "+\t\t\t\"     3  iload_1 [i]\\n\" + ", "-\t\t\t\"     9  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    12  iload_1\\n\" + ", "-\t\t\t\"    13  invokevirtual #27 <Method java/io/PrintStream.println(I)V>\\n\" + ", "+\t\t\t\"     9  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"    12  iload_1 [i]\\n\" + ", "+\t\t\t\"    13  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6432500a5864076183bc69c7bc8dd206", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SwitchTest.java", "commitBeforeChange": "8881369a7d0e4bdf41211abd8b5386c3693abb68", "commitAfterChange": "bf2117b5b91f53fb296d1eef53e3b05f16ac6939", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testSwitchOnNull()", "signatureAfterChange": " public void testSwitchOnNull()", "diff": ["-\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum constants are permitted\\n\" + ", "+\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum variables are permitted\\n\" + ", "-\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum constants are permitted\\n\" + ", "+\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum variables are permitted\\n\" + ", "-\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum constants are permitted\\n\" + ", "+\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum variables are permitted\\n\" + ", "-\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum constants are permitted\\n\" + ", "+\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum variables are permitted\\n\" + ", "-\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum constants are permitted\\n\" + ", "+\t\t\"Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum variables are permitted\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829d30b3ad82551dd907c3d0e0a92cef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SelectionJavadocModelTests.java", "commitBeforeChange": "46bb2fc11bd9440d4fff5ca5f3078f9c39a1d152", "commitAfterChange": "cc1ae7d3e1f618e7e804996cc901b77df44b4213", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void test08() throws JavaModelException", "signatureAfterChange": "  \tpublic void test08() throws JavaModelException", "diff": ["-\t\t\t\"Test {key=LTest;} [in [Working copy] Test.java [in <default> [in src [in Tests]]]]\\n\" + ", "-\t\t\t\"field {key=LTest;.field} [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]\\n\" + ", "-\t\t\t\"foo(int, String) {key=LTest;.foo(ILjava/lang/String;)V} [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]\\n\" + ", "+\t\t\t\"Test {key=LTest;} [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "+\t\t\t\"field {key=LTest;.field} [in Test [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]]\\n\" + ", "+\t\t\t\"foo(int, String) {key=LTest;.foo(ILjava/lang/String;)V} [in Test [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]]\\n\" + ", "-\t\t\t\"Test {key=LTest;} [in [Working copy] Test.java [in <default> [in src [in Tests]]]]\\n\" + ", "-\t\t\t\"foo(int, String) {key=LTest;.foo(ILjava/lang/String;)V} [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]\\n\" + ", "+\t\t\t\"Test {key=LTest;} [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "+\t\t\t\"foo(int, String) {key=LTest;.foo(ILjava/lang/String;)V} [in Test [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91884918c62cbc5ba4cf0934e574f583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void test043()", "signatureAfterChange": " \tpublic void test043()", "diff": ["-\t\t\t\"    29  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"    29  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    33  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\t\"    33  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 37] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 37] local: b index: 1 type: Z\\n\" + ", "-\t\t\t\"        [pc: 5, pc: 37] local: i index: 2 type: I\\n\";", "+\t\t\t\"        [pc: 0, pc: 37] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 37] local: b index: 1 type: boolean\\n\" + ", "+\t\t\t\"        [pc: 5, pc: 37] local: i index: 2 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c7b670a38e46e7cfbfde9d6f0d8459", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 219, "signatureBeforeChange": " \tpublic void test215()", "signatureAfterChange": " \tpublic void test215()", "diff": ["-\t\t\t\"    10  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "+\t\t\t\"    10  getstatic java.lang.System.out : java.io.PrintStream [16]\\n\" + ", "-\t\t\t\"    14  invokevirtual java.io.PrintStream.println(java.lang.Object) : void  [27]\\n\" + ", "-\t\t\t\"    17  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    20  ldc <String \\\"SUCCESS\\\"> [29]\\n\" + ", "-\t\t\t\"    22  invokevirtual java.io.PrintStream.println(java.lang.String) : void  [32]\\n\" + ", "+\t\t\t\"    14  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [22]\\n\" + ", "+\t\t\t\"    17  getstatic java.lang.System.out : java.io.PrintStream [16]\\n\" + ", "+\t\t\t\"    20  ldc <String \\\"SUCCESS\\\"> [28]\\n\" + ", "+\t\t\t\"    22  invokevirtual java.io.PrintStream.println(java.lang.String) : void [30]\\n\" + "]}], "num": 63011}