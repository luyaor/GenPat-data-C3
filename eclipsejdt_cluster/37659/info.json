{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cd213357400ccb0314e30177d94bb51", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e204efe3983957122eb87caecf110d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "commitAfterChange": "dbd0d1d22c0c3005a7b77030231806c749e2cebd", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 91, "signatureBeforeChange": "  \tpublic boolean visit(WhileStatement node)", "signatureAfterChange": "  \tpublic boolean visit(WhileStatement node)", "diff": ["-\t\tfinal Statement action = node.getBody();", "-\t\tif (action != null) {", "-\t\t\tswitch(action.getNodeType()) {", "-\t\t\t\tcase ASTNode.BLOCK :", "-\t                formatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase ASTNode.EMPTY_STATEMENT :", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault :", "-\t\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.unIndent();\t\t\t\t\t", "-\t\t\t\t\t", "-\t\t\t}", "-\t\t} else {", "-\t\t\tthis.scribe.indent();", "-\t\t\taction.accept(this);", "-\t\t\tthis.scribe.unIndent();", "-\t\t}", "+\t\tformatAction(line, node.getBody());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f974fe31c721ea1333b42bdd2fbe7cb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "10bffe6b84331580bd1f7b273305c5a3d5e7af2d", "commitAfterChange": "a9d9ef126afa0b02402ec922ee1b18941ed8396d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-", "-\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "-\t\t\t/*", "-\t\t\t * Type body", "-\t\t\t */", "-\t\t\tString anonymous_type_declaration_brace_position = this.preferences.anonymous_type_declaration_brace_position;", "-\t\t\tformatTypeOpeningBrace(anonymous_type_declaration_brace_position, this.preferences.insert_space_before_anonymous_type_open_brace, typeDeclaration);", "-\t\t\t", "-\t\t\tthis.scribe.indent();", "-\t", "-\t\t\tformatTypeMembers(typeDeclaration);", "-\t\t\t", "-\t\t\tthis.scribe.printComment();", "-\t\t\tthis.scribe.unIndent();", "-\t\t\tif (this.preferences.insert_new_line_in_empty_anonymous_type_declaration) {", "-\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t}", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);", "-\t\t\tif (anonymous_type_declaration_brace_position.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {", "-\t\t\t\tthis.scribe.unIndent();", "-\t\t\t}", "-\t\t\treturn;", "-\t\t}", "-\t\tthis.scribe.printModifiers();", "+        /*", "+         * Print comments to get proper line number", "+         */", "+        this.scribe.printComment();", "+        final int line = scribe.line; ", "+        ", "+        this.scribe.printModifiers();", "+        formatLeftCurlyBrace(line, this.preferences.type_declaration_brace_position);", "+\t}"]}], "num": 37659}