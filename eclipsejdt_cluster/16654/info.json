{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbb33c8a369e1f5152736214a818b5b2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e922b2cbadf2ea0aee627f3d661e81b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a02dc2635b15c289c546ca96a49f66d7180ade17", "commitAfterChange": "efe1773a267b3bdb803164d9b413b69c3685878f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "signatureAfterChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "diff": ["-\t\tacceptPendingPolyArguments(bounds, parameterTypes, this.inferenceKind == CHECK_VARARG);", "+\t\tboolean isVarargs = this.inferenceKind == CHECK_VARARG;", "+\t\tacceptPendingPolyArguments(bounds, parameterTypes, isVarargs);", "-\t\t\t\tMethodBinding original = innerMessage.binding().original();", "+\t\t\t\tMethodBinding binding = innerMessage.binding(getParameter(parameterTypes, i, isVarargs));", "+\t\t\t\tif (binding == null)", "+\t\t\t\t\tcontinue;", "+\t\t\t\tMethodBinding original = binding.original();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef12f5fae6928cf32e8679d70cc49b3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "4220d2134a90d374ac05c79459173b3914fac756", "commitAfterChange": "582eb93dfcda39c268d1ac3d9713da9a75209c41", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tprivate char[][] computeNames(char[] sourceName, boolean forArray)", "signatureAfterChange": " \tprivate char[][] computeNames(char[] sourceName, boolean forArray)", "diff": ["+\t\tboolean previousIsLetter = true;", "-\t\t\tif(isUpperCase && !previousIsUpperCase){", "+\t\t\tboolean isLetter = Character.isLetter(sourceName[i]);", "+\t\t\tif(isUpperCase && !previousIsUpperCase && previousIsLetter){", "+\t\t\tpreviousIsLetter = isLetter;"]}], "num": 16654}