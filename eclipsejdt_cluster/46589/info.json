{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67a26ea31ba97f589302a49b69cc961d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ac03a94210b898a1c6af4113af9954e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 29, "signatureBeforeChange": " public int indexOfWellKnownMethods(MethodBinding methodBinding)", "signatureAfterChange": " protected int putInNameAndTypeCache(MethodBinding binding, int index)", "diff": ["- */", "-public int indexOfWellKnownMethods(MethodBinding methodBinding) {", "-\tchar firstChar = methodBinding.selector[0];", "-\tswitch (methodBinding.declaringClass.id) {", "-\t\tcase T_JavaLangClass :", "-\t\t\tif ((firstChar == 'f') && (methodBinding.isStatic()) && (methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_JavaLangString) && (methodBinding.returnType.id == T_JavaLangClass) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ForName))) {", "-\t\t\t\t// This method binding is forName(java.lang.String)", "-\t\t\t\treturn CLASS_FORNAME_METHOD;", "-\t\t\t} else if ((firstChar == 'd') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_boolean) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.DesiredAssertionStatus)) {", "-\t\t\t\t\treturn CLASS_DESIREDASSERTIONSTATUS_METHOD;", "-\t\t\t} else if ((firstChar == 'g') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangClass) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetComponentType)) {", "-\t\t\t\treturn CLASS_GETCOMPONENTTYPE_METHOD;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangNoClassDefError :", "-\t\t\tif ((firstChar == '<') && (methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init))) {", "-\t\t\t\t// This method binding is NoClassDefFoundError(java.lang.String)", "-\t\t\t\treturn NOCLASSDEFFOUNDERROR_CONSTR_METHOD;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangReflectConstructor :", "-\t\t\tif ((firstChar == 'n') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangObject) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.NewInstance) && CharOperation.equals(methodBinding.parameters[0].constantPoolName(), QualifiedNamesConstants.ArrayJavaLangObjectConstantPoolName)) {", "-\t\t\t\treturn NEWINSTANCE_CONSTRUCTOR_METHOD;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangStringBuffer :", "-\t\t\tif ((firstChar == 'a') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangStringBuffer) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Append))) {", "-\t\t\t\tswitch (methodBinding.parameters[0].id) {", "-\t\t\t\t\tcase T_int :", "-\t\t\t\t\tcase T_byte :", "-\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t// This method binding is append(int)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_INT_METHOD;", "-\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t// This method binding is append(float)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_FLOAT_METHOD;", "-\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t// This method binding is append(long)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_LONG_METHOD;", "-\t\t\t\t\tcase T_JavaLangObject :", "-\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_OBJECT_METHOD;", "-\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t// This method binding is append(char)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_CHAR_METHOD;", "-\t\t\t\t\tcase T_JavaLangString :", "-\t\t\t\t\t\t// This method binding is append(java.lang.String)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_STRING_METHOD;", "-\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t// This method binding is append(boolean)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_BOOLEAN_METHOD;", "-\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t// This method binding is append(double)", "-\t\t\t\t\t\treturn STRINGBUFFER_APPEND_DOUBLE_METHOD;", "-\t\t\t\t}", "-\t\t\t} else", "-\t\t\t\tif ((firstChar == 't') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ToString))) {", "-\t\t\t\t\t// This method binding is toString()", "-\t\t\t\t\treturn STRINGBUFFER_TOSTRING_METHOD;", "-\t\t\t\t} else", "-\t\t\t\t\tif ((firstChar == '<') && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init))) {", "-\t\t\t\t\t\tif ((methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_JavaLangString)) {", "-\t\t\t\t\t\t\t// This method binding is <init>(String)                    ", "-\t\t\t\t\t\t\treturn STRINGBUFFER_STRING_CONSTR_METHOD;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (methodBinding.parameters.length == 0) {", "-\t\t\t\t\t\t\t\t// This method binding is <init>()", "-\t\t\t\t\t\t\t\treturn STRINGBUFFER_DEFAULT_CONSTR_METHOD;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangStringBuilder :", "-\t\t\tif ((firstChar == 'a') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangStringBuilder) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Append))) {", "-\t\t\t\tswitch (methodBinding.parameters[0].id) {", "-\t\t\t\t\tcase T_int :", "-\t\t\t\t\tcase T_byte :", "-\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t// This method binding is append(int)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_INT_METHOD;", "-\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t// This method binding is append(float)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_FLOAT_METHOD;", "-\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t// This method binding is append(long)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_LONG_METHOD;", "-\t\t\t\t\tcase T_JavaLangObject :", "-\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_OBJECT_METHOD;", "-\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t// This method binding is append(char)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_CHAR_METHOD;", "-\t\t\t\t\tcase T_JavaLangString :", "-\t\t\t\t\t\t// This method binding is append(java.lang.String)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_STRING_METHOD;", "-\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t// This method binding is append(boolean)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_BOOLEAN_METHOD;", "-\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t// This method binding is append(double)", "-\t\t\t\t\t\treturn STRINGBUILDER_APPEND_DOUBLE_METHOD;", "-\t\t\t\t}", "-\t\t\t} else", "-\t\t\t\tif ((firstChar == 't') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ToString))) {", "-\t\t\t\t\t// This method binding is toString()", "-\t\t\t\t\treturn STRINGBUILDER_TOSTRING_METHOD;", "-\t\t\t\t} else", "-\t\t\t\t\tif ((firstChar == '<') && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init))) {", "-\t\t\t\t\t\tif ((methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_JavaLangString)) {", "-\t\t\t\t\t\t\t// This method binding is <init>(String)                    ", "-\t\t\t\t\t\t\treturn STRINGBUILDER_STRING_CONSTR_METHOD;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (methodBinding.parameters.length == 0) {", "-\t\t\t\t\t\t\t\t// This method binding is <init>()", "-\t\t\t\t\t\t\t\treturn STRINGBUILDER_DEFAULT_CONSTR_METHOD;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangString :", "-\t\t\tif ((firstChar == 'v') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ValueOf))) {", "-\t\t\t\t// This method binding is valueOf(java.lang.Object)", "-\t\t\t\tswitch (methodBinding.parameters[0].id) {", "-\t\t\t\t\tcase T_Object :", "-\t\t\t\t\t\treturn STRING_VALUEOF_OBJECT_METHOD;", "-\t\t\t\t\tcase T_int :", "-\t\t\t\t\tcase T_short :", "-\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\treturn STRING_VALUEOF_INT_METHOD;", "-\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\treturn STRING_VALUEOF_LONG_METHOD;", "-\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\treturn STRING_VALUEOF_FLOAT_METHOD;", "-\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\treturn STRING_VALUEOF_DOUBLE_METHOD;", "-\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\treturn STRING_VALUEOF_BOOLEAN_METHOD;", "-\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\treturn STRING_VALUEOF_CHAR_METHOD;", "-\t\t\t\t}", "-\t\t\t} else", "-\t\t\t\tif ((firstChar == 'i') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Intern))) {", "-\t\t\t\t\t// This method binding is valueOf(java.lang.Object)", "-\t\t\t\t\treturn STRING_INTERN_METHOD;", "-\t\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangSystem :", "-\t\t\tif ((firstChar == 'e') && (methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_int) && (methodBinding.returnType.id == T_void) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Exit))) {", "-\t\t\t\t// This method binding is exit(int)", "-\t\t\t\treturn SYSTEM_EXIT_METHOD;", "-\t\t\t}", "-\t\t\tif (firstChar == 'a' && (methodBinding.parameters.length == 5)", "-\t\t\t\t\t&& CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ArrayCopy)", "-\t\t\t\t\t&& methodBinding.returnType.id == T_void", "-\t\t\t\t\t&& methodBinding.parameters[0].id == T_JavaLangObject", "-\t\t\t\t\t&& methodBinding.parameters[1].id == T_int", "-\t\t\t\t\t&& methodBinding.parameters[2].id == T_JavaLangObject", "-\t\t\t\t\t&& methodBinding.parameters[3].id == T_int", "-\t\t\t\t\t&& methodBinding.parameters[4].id == T_int) {", "-\t\t\t\treturn SYSTEM_ARRAYCOPY_METHOD;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangThrowable :", "-\t\t\tif ((firstChar == 'g') && (methodBinding.selector.length == 10) && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetMessage))) {", "-\t\t\t\t// This method binding is getMessage()", "-\t\t\t\treturn THROWABLE_GETMESSAGE_METHOD;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangError :", "-\t\t\tif ((firstChar == '<') && (methodBinding.parameters.length == 1) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init)) && (methodBinding.parameters[0].id == T_String)) {", "-\t\t\t\treturn JAVALANGERROR_CONSTR_METHOD;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangAssertionError :", "-\t\t\tif ((firstChar == '<') && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init)) {", "-\t\t\t\tswitch (methodBinding.parameters.length) {", "-\t\t\t\t\tcase 0:", "-\t\t\t\t\t\treturn ASSERTIONERROR_DEFAULT_CONSTR_METHOD;", "-\t\t\t\t\tcase 1:", "-\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {", "-\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_BOOLEAN_METHOD;", "-\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_CHAR_METHOD;", "-\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_DOUBLE_METHOD;", "-\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_INT_METHOD;", "-\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_FLOAT_METHOD;", "-\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_LONG_METHOD;", "-\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_OBJECT_METHOD;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaLangObject :", "-\t\t\tif (methodBinding.parameters.length == 0", "-\t\t\t\t&& CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetClass)) {", "-\t\t\t\t\treturn OBJECT_GETCLASS_METHOD;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase T_JavaUtilIterator :", "-\t\t\tif (methodBinding.parameters.length == 0) {", "-\t\t\t\tif (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.HasNext)) {", "-\t\t\t\t\treturn ITERATOR_HASNEXT_METHOD;", "-\t\t\t\t}", "-\t\t\t\tif (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Next)) {", "-\t\t\t\t\treturn ITERATOR_NEXT_METHOD;", "-\t\t\t\t}", "-\t\t\t}", "-\t}", "-\treturn -1;", "+}", "+protected int putInNameAndTypeCache(MethodBinding binding, int index) {", "+\treturn putInNameAndTypeCache(binding.selector, binding.signature(), index);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d5dc2b20baff55ba5571316f9097910", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": " private int getFromCache(char[] declaringClass, char[] name, char[] signature)", "diff": ["- */", "-public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding) {", "-\tchar firstChar = methodBinding.selector[0];", "-\tswitch (firstChar) {", "-\t\tcase 'f' :", "-\t\t\tif ((methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_JavaLangString) && (methodBinding.returnType.id == T_JavaLangClass) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ForName))) {", "-\t\t\t\t// This method binding is forName(java.lang.String)", "-\t\t\t\treturn FORNAME_CLASS_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase '<' :", "-\t\t\tif (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init)) {", "-\t\t\t\tswitch(methodBinding.parameters.length) {", "-\t\t\t\t\tcase 1:", "-\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {", "-\t\t\t\t\t\t\tcase T_String :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tcase T_Object :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {", "-\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\treturn -1;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\tcase 0:", "-\t\t\t\t\t\tif (methodBinding.signature().length == 3) {", "-\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase 'a' :", "-\t\t\tif ((methodBinding.parameters.length == 1) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Append)) {", "-\t\t\t\tif (methodBinding.returnType.id == T_JavaLangStringBuffer) {", "-\t\t\t\t\tswitch (methodBinding.parameters[0].id) {", "-\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t// This method binding is append(int)", "-\t\t\t\t\t\t\treturn APPEND_INT_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t// This method binding is append(float)", "-\t\t\t\t\t\t\treturn APPEND_FLOAT_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t// This method binding is append(long)", "-\t\t\t\t\t\t\treturn APPEND_LONG_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_JavaLangObject :", "-\t\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "-\t\t\t\t\t\t\treturn APPEND_OBJECT_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t// This method binding is append(char)", "-\t\t\t\t\t\t\treturn APPEND_CHAR_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_JavaLangString :", "-\t\t\t\t\t\t\t// This method binding is append(java.lang.String)", "-\t\t\t\t\t\t\treturn APPEND_STRING_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t// This method binding is append(boolean)", "-\t\t\t\t\t\t\treturn APPEND_BOOLEAN_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t// This method binding is append(double)", "-\t\t\t\t\t\t\treturn APPEND_DOUBLE_STRINGBUFFER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t}", "-\t\t\t\t} else if (methodBinding.returnType.id == T_JavaLangStringBuilder) {", "-\t\t\t\t\tswitch (methodBinding.parameters[0].id) {", "-\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t// This method binding is append(int)", "-\t\t\t\t\t\t\treturn APPEND_INT_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t// This method binding is append(float)", "-\t\t\t\t\t\t\treturn APPEND_FLOAT_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t// This method binding is append(long)", "-\t\t\t\t\t\t\treturn APPEND_LONG_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_JavaLangObject :", "-\t\t\t\t\t\t\t// This method binding is append(java.lang.Object)", "-\t\t\t\t\t\t\treturn APPEND_OBJECT_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t// This method binding is append(char)", "-\t\t\t\t\t\t\treturn APPEND_CHAR_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_JavaLangString :", "-\t\t\t\t\t\t\t// This method binding is append(java.lang.String)", "-\t\t\t\t\t\t\treturn APPEND_STRING_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t// This method binding is append(boolean)", "-\t\t\t\t\t\t\treturn APPEND_BOOLEAN_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t// This method binding is append(double)", "-\t\t\t\t\t\t\treturn APPEND_DOUBLE_STRINGBUILDER_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif ((methodBinding.parameters.length == 5)", "-\t\t\t\t\t&& CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ArrayCopy)", "-\t\t\t\t\t&& methodBinding.returnType.id == T_void", "-\t\t\t\t\t&& methodBinding.parameters[0].id == T_JavaLangObject", "-\t\t\t\t\t&& methodBinding.parameters[1].id == T_int", "-\t\t\t\t\t&& methodBinding.parameters[2].id == T_JavaLangObject", "-\t\t\t\t\t&& methodBinding.parameters[3].id == T_int", "-\t\t\t\t\t&& methodBinding.parameters[4].id == T_int) {", "-\t\t\t\treturn ARRAYCOPY_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase 't' :", "-\t\t\tif ((methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ToString))) {", "-\t\t\t\t// This method binding is toString()", "-\t\t\t\treturn TOSTRING_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase 'v' :", "-\t\t\tif ((methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.ValueOf))) {", "-\t\t\t\tswitch(methodBinding.parameters[0].id) {", "-\t\t\t\t\tcase T_Object:", "-\t\t\t\t\t\treturn VALUEOF_OBJECT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_int:", "-\t\t\t\t\tcase T_short:", "-\t\t\t\t\tcase T_byte:", "-\t\t\t\t\t\treturn VALUEOF_INT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_long:", "-\t\t\t\t\t\treturn VALUEOF_LONG_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_float:", "-\t\t\t\t\t\treturn VALUEOF_FLOAT_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_double:", "-\t\t\t\t\t\treturn VALUEOF_DOUBLE_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_boolean:", "-\t\t\t\t\t\treturn VALUEOF_BOOLEAN_METHOD_NAME_AND_TYPE;", "-\t\t\t\t\tcase T_char:", "-\t\t\t\t\t\treturn VALUEOF_CHAR_METHOD_NAME_AND_TYPE;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase 'e' :", "-\t\t\tif ((methodBinding.parameters.length == 1) && (methodBinding.parameters[0].id == T_int) && (methodBinding.returnType.id == T_void) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Exit))) {", "-\t\t\t\t// This method binding is exit(int)", "-\t\t\t\treturn EXIT_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase 'g' :", "-\t\t\tif ((methodBinding.selector.length == 10)", "-\t\t\t    && (methodBinding.parameters.length == 0)", "-\t\t\t    && (methodBinding.returnType.id == T_JavaLangString)", "-\t\t\t    && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetMessage))) {", "-\t\t\t\t// This method binding is getMessage()", "-\t\t\t\treturn GETMESSAGE_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tif (methodBinding.parameters.length == 0", "-\t\t\t\t&& methodBinding.returnType.id == T_JavaLangClass", "-\t\t\t\t&& CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetClass)) {", "-\t\t\t\t\treturn GETCLASS_OBJECT_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tif (methodBinding.parameters.length == 0", "-\t\t\t\t&& methodBinding.returnType.id == T_JavaLangClass", "-\t\t\t\t&& CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetComponentType)) {", "-\t\t\t\t\treturn GETCOMPONENTTYPE_CLASS_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase 'i' :", "-\t\t\tif ((methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangString) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Intern))) {", "-\t\t\t\t// This method binding is intern()java.lang.String", "-\t\t\t\treturn INTERN_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase 'h' :", "-\t\t\tif ((methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_boolean) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.HasNext))) {", "-\t\t\t\t// This method binding is hasNext()Z", "-\t\t\t\treturn HASNEXT_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t\tcase 'n' :", "-\t\t\tif ((methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_JavaLangObject) && (CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Next))) {", "-\t\t\t\t// This method binding is next()java.lang.Object", "-\t\t\t\treturn NEXT_METHOD_NAME_AND_TYPE;", "-\t\t\t}", "-\t}", "-\treturn -1;", "+private int getFromCache(char[] declaringClass, char[] name, char[] signature) {", "+\tHashtableOfObject value = (HashtableOfObject) this.methodsAndFieldsCache.get(declaringClass);", "+\tif (value == null) {", "+\t\treturn -1;", "+\tCharArrayCache value2 = (CharArrayCache) value.get(name);", "+\tif (value2 == null) {", "+\t\treturn -1;", "+\t}", "+\treturn value2.get(signature);", "+}"]}], "num": 46589}