{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b9c53a60fafbebf6020ec8702ea2ba4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08cb84e755b332f5cccfba2d0733ff42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1036, "methodNumberAfterChange": 1036, "signatureBeforeChange": " public void test1012()", "signatureAfterChange": " public void test1012()", "diff": ["-\t\t\t\"\t\treturn null;\\n\" +", "+\t\t\t\"\t\treturn zork;\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 2)\\r\\n\" +", "-\t\t\"\tvoid foo(L l, C<X> c) {\\r\\n\" +", "-\t\t\"\t         ^\\n\" +", "-\t\t\"L is a raw type. References to generic type L<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar1(l, c);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar1(L, C) of the generic method bar1(L<T>, C<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar1(l, c);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Object to X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar1(l, c);\\r\\n\" +", "-\t\t\"\t           ^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<T>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tL<X> lx = bar2(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar2(L, C) of the generic method bar2(L<T>, C<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. WARNING in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tL<X> lx = bar2(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tL<X> lx = bar2(l, c);\\r\\n\" +", "-\t\t\"\t               ^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<T>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"8. WARNING in X.java (at line 5)\\r\\n\" +", "-\t\t\"\tC<X> cx = bar3(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar3(L, C) of the generic method bar3(L<T>, C<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"9. WARNING in X.java (at line 5)\\r\\n\" +", "-\t\t\"\tC<X> cx = bar3(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type C needs unchecked conversion to conform to C<X>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"10. WARNING in X.java (at line 5)\\r\\n\" +", "-\t\t\"\tC<X> cx = bar3(l, c);\\r\\n\" +", "-\t\t\"\t               ^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<T>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tvoid foo(L l, C<X> c) {\\n\" + ", "+\t\t\"\t         ^\\n\" + ", "+\t\t\"L is a raw type. References to generic type L<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar1(l, c);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar1(L, C<X>) of the generic method bar1(L<T>, C<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar1(l, c);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Object to X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar1(l, c);\\n\" + ", "+\t\t\"\t           ^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tL<X> lx = bar2(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar2(L, C<X>) of the generic method bar2(L<T>, C<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tL<X> lx = bar2(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tL<X> lx = bar2(l, c);\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tC<X> cx = bar3(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar3(L, C<X>) of the generic method bar3(L<T>, C<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"9. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tC<X> cx = bar3(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type C needs unchecked conversion to conform to C<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"10. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tC<X> cx = bar3(l, c);\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"11. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\treturn zork;\\n\" + ", "+\t\t\"\t       ^^^^\\n\" + ", "+\t\t\"zork cannot be resolved\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e5b2ef7a06951678390d31c099a408", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "commitAfterChange": "0b27e1fc307c28641d0d95f2d81ae5062cecb103", "methodNumberBeforeChange": 820, "methodNumberAfterChange": 820, "signatureBeforeChange": " public void test0799()", "signatureAfterChange": " public void test0799()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "-\t\t\"\tY first;\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Y is a raw type. References to generic type Y<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tY first2;\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Y is a raw type. References to generic type Y<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 9)\\n\" +", "-\t\t\"\tString s = foo(ref, first);\\n\" +", "-\t\t\"\t           ^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Y to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 13)\\n\" +", "-\t\t\"\tref.next = first == null ? ref : first;\\n\" +", "-\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture#2-of ? extends T>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. ERROR in X.java (at line 14)\\n\" +", "-\t\t\"\tString s = first == null ? ref : first;\\n\" +", "-\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Y to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. WARNING in X.java (at line 15)\\n\" +", "-\t\t\"\tref.next = first2 == null ? ref : first2;\\n\" +", "-\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture#5-of ? extends T>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 18)\\n\" +", "-\t\t\"\treturn first == null ? ref : first;\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<? extends T>\\n\" +", "-\t\t\"----------\\n\");", "+\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "+\t\t\t\"\tY first;\\n\" +", "+\t\t\t\"\t^\\n\" +", "+\t\t\t\"Y is a raw type. References to generic type Y<E> should be parameterized\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. WARNING in X.java (at line 3)\\n\" +", "+\t\t\t\"\tY first2;\\n\" +", "+\t\t\t\"\t^\\n\" +", "+\t\t\t\"Y is a raw type. References to generic type Y<E> should be parameterized\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in X.java (at line 9)\\n\" +", "+\t\t\t\"\tString s = foo(ref, first);\\n\" +", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Y to String\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. WARNING in X.java (at line 13)\\n\" +", "+\t\t\t\"\tref.next = first == null ? ref : first;\\n\" +", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture#2-of ? extends T>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"5. ERROR in X.java (at line 14)\\n\" +", "+\t\t\t\"\tString s = first == null ? ref : first;\\n\" +", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Y to String\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"6. WARNING in X.java (at line 15)\\n\" +", "+\t\t\t\"\tref.next = first2 == null ? ref : first2;\\n\" +", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture#5-of ? extends T>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"7. WARNING in X.java (at line 18)\\n\" +", "+\t\t\t\"\treturn first == null ? ref : first;\\n\" +", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<? extends T>\\n\" +", "+\t\t\t\"----------\\n\" : ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tY first;\\n\" + ", "+\t\t\t\t\"\t^\\n\" + ", "+\t\t\t\t\"Y is a raw type. References to generic type Y<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tY first2;\\n\" + ", "+\t\t\t\t\"\t^\\n\" + ", "+\t\t\t\t\"Y is a raw type. References to generic type Y<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tString s = foo(ref, first);\\n\" + ", "+\t\t\t\t\"\t           ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Y to String\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\t\"\tref.next = first == null ? ref : first;\\n\" + ", "+\t\t\t\t\"\t                           ^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Y<capture#3-of ? extends T> to Y<capture#2-of ? extends T>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\t\"\tString s = first == null ? ref : first;\\n\" + ", "+\t\t\t\t\"\t                           ^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Y<capture#4-of ? extends T> to String\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\t\"\tString s = first == null ? ref : first;\\n\" + ", "+\t\t\t\t\"\t                                 ^^^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Y to String\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\t\"\tref.next = first2 == null ? ref : first2;\\n\" + ", "+\t\t\t\t\"\t                            ^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Y<capture#6-of ? extends T> to Y<capture#5-of ? extends T>\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}], "num": 69705}