{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2d23494f8fefdd055e26ff8b30230f5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01af891e869f951fb3f7727cda5020e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "3529cae0ed31a5b1028c1cc1e840d02dfd760a3c", "commitAfterChange": "66c03ebda0e34a6ab10a14fbb678711ca6abc67f", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void testGetTypeSignatureKind()", "signatureAfterChange": " public void testGetTypeSignatureKind01()", "diff": ["-public void testGetTypeSignatureKind() {", "+public void testGetTypeSignatureKind01() {", "+}", "-\t// signatures with 1.5 elements"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e578a85477452c5aedff45b5c61091", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/GetSourceTests.java", "commitBeforeChange": "726a798d36524f8c9a905565a81f0a3797b5162f", "commitAfterChange": "e925e4f453288f04c2f64d6eaf5afcd7f24f7bf6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testFieldConstant() throws CoreException", "signatureAfterChange": "  \tpublic void testFieldConstant01() throws CoreException", "diff": ["-\tpublic void testFieldConstant() throws CoreException {", "-\t\ttry {", "-\t\t\tString cuSource = ", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class Y {\\n\" +", "-\t\t\t\t\"  static final long field1 = 938245798324893L;\\n\" +", "-\t\t\t\t\"  static final long field2 = 938245798324893l;\\n\" +", "-\t\t\t\t\"  static final long field3 = 938245798324893;\\n\" +", "-\t\t\t\t\"  static final char field4 = ' ';\\n\" +", "-\t\t\t\t\"  static final double field5 = 938245798324893D;\\n\" +", "-\t\t\t\t\"  static final float field6 = 123456f;\\n\" +", "-\t\t\t\t\"}\";", "-\t\t\tcreateFile(\"/P/p/Y.java\", cuSource);", "-\t\t\tIType type = getCompilationUnit(\"/P/p/Y.java\").getType(\"Y\");", "-\t\t\tIField field = type.getField(\"field1\");", "-\t\t", "-\t\t\tString actualSource = field.getSource();", "-\t\t\tString expectedSource = \"static final long field1 = 938245798324893L;\";", "-\t\t\tassertSourceEquals(\"Unexpected source'\", expectedSource, actualSource);", "-\t\t\tObject constant = field.getConstant();", "-\t\t\tassertNotNull(\"No constant\", constant);", "-\t\t\tassertTrue(\"Not a Long\", constant instanceof Long);", "-\t\t\tLong value = (Long) constant;", "-\t\t\tassertEquals(\"Wrong value\", 938245798324893l, value.longValue());", "-\t\t\t", "-\t\t\tfield = type.getField(\"field2\");", "-\t\t", "-\t\t\tactualSource = field.getSource();", "-\t\t\texpectedSource = \"static final long field2 = 938245798324893l;\";", "-\t\t\tassertSourceEquals(\"Unexpected source'\", expectedSource, actualSource);", "-\t\t\tconstant = field.getConstant();", "-\t\t\tassertNotNull(\"No constant\", constant);", "-\t\t\tassertTrue(\"Not a Long\", constant instanceof Long);", "-\t\t\tvalue = (Long) constant;", "-\t\t\tassertEquals(\"Wrong value\", 938245798324893l, value.longValue());", "-\t\t\t", "-\t\t\tfield = type.getField(\"field3\");", "-\t\t", "-\t\t\tactualSource = field.getSource();", "-\t\t\texpectedSource = \"static final long field3 = 938245798324893;\";", "-\t\t\tassertSourceEquals(\"Unexpected source'\", expectedSource, actualSource);", "-\t\t\tconstant = field.getConstant();", "-\t\t\tassertNotNull(\"No constant\", constant);", "-\t\t\tassertTrue(\"Not a Long\", constant instanceof Long);", "-\t\t\tvalue = (Long) constant;", "-\t\t\tassertEquals(\"Wrong value\", 938245798324893l, value.longValue());", "-\t\t\tfield = type.getField(\"field4\");", "-\t\t\t", "-\t\t\tactualSource = field.getSource();", "-\t\t\texpectedSource = \"static final char field4 = ' ';\";", "-\t\t\tassertSourceEquals(\"Unexpected source'\", expectedSource, actualSource);", "-\t\t\tconstant = field.getConstant();", "-\t\t\tassertNotNull(\"No constant\", constant);", "-\t\t\tassertTrue(\"Not a Character\", constant instanceof Character);", "-\t\t\tCharacter character = (Character) constant;", "-\t\t\tassertEquals(\"Wrong value\", ' ', character.charValue());", "-\t\t\t", "-\t\t\tfield = type.getField(\"field5\");", "-\t\t\t", "-\t\t\tactualSource = field.getSource();", "-\t\t\texpectedSource = \"static final double field5 = 938245798324893D;\";", "-\t\t\tassertSourceEquals(\"Unexpected source'\", expectedSource, actualSource);", "-\t\t\tconstant = field.getConstant();", "-\t\t\tassertNotNull(\"No constant\", constant);", "-\t\t\tassertTrue(\"Not a Double\", constant instanceof Double);", "-\t\t\tDouble double1 = (Double) constant;", "-\t\t\tassertEquals(\"Wrong value\", 938245798324893l, double1.doubleValue(), 0.01);\t\t\t", "+\tpublic void testFieldConstant01() throws CoreException {", "+\t\tIField field = getConstantField(\"field1\");", "+\t", "+\t\tObject constant = field.getConstant();", "+\t\tLong value = (Long) constant;", "+\t\tassertEquals(\"Wrong value\", 938245798324893l, value.longValue());", "+\t}", "-\t\t\tfield = type.getField(\"field6\");", "-\t\t\t", "-\t\t\tactualSource = field.getSource();", "-\t\t\texpectedSource = \"static final float field6 = 123456f;\";", "-\t\t\tassertSourceEquals(\"Unexpected source'\", expectedSource, actualSource);", "-\t\t\tconstant = field.getConstant();", "-\t\t\tassertNotNull(\"No constant\", constant);", "-\t\t\tassertTrue(\"Not a Float\", constant instanceof Float);", "-\t\t\tFloat float1 = (Float) constant;", "-\t\t\tassertEquals(\"Wrong value\", 123456, float1.floatValue(), 0.01f);\t\t\t", "-\t\t} finally {", "-\t\t\tdeleteFile(\"/P/p/Y.java\");", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f04ac62375b4ab5f7de6c11157806eb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "3529cae0ed31a5b1028c1cc1e840d02dfd760a3c", "commitAfterChange": "66c03ebda0e34a6ab10a14fbb678711ca6abc67f", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 130, "signatureBeforeChange": " public void testGetTypeSignatureKind2()", "signatureAfterChange": " public void testGetTypeSignatureKindCharArray01()", "diff": ["-public void testGetTypeSignatureKind2() {", "+public void testGetTypeSignatureKindCharArray01() {", "+}", "-\t", "-\t// signatures with 1.5 elements", "-\t"]}], "num": 67824}