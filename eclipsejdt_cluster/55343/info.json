{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25c200c9981b6a71f25ccaa2cab8e8be", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211f37e2e7663627b04931c740598540", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\tif (methodDeclaration.modifiers != NO_MODIFIERS) {", "-\t\t\tthis.scribe.printModifiers();", "-\t\t\tthis.scribe.space();", "-\t\t}", "+\t\tthis.scribe.printModifiers();", "+\t\tthis.scribe.space();", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true); ", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); ", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACKET);", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e07a8e241b16d06013ba59a6e39874d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true); ", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); ", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACKET);", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_multiple_local_declarations); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_multiple_local_declarations); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a10a9859c76821d4d60571e24a0b7f18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "signatureAfterChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "diff": ["-\t\tif (fieldDeclaration.modifiers != NO_MODIFIERS) {", "-\t\t\tthis.scribe.printModifiers();", "-\t\t}", "+\t\tthis.scribe.printModifiers();", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACKET);", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed47123faba7ceff9dfd5ad441646cec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "signatureAfterChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "diff": ["-\t\tif (multiFieldDeclaration.declarations[0].modifiers != NO_MODIFIERS) {", "-\t\t\tthis.scribe.printModifiers();", "-\t\t}", "+\t\tthis.scribe.printModifiers();", "-\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true);", "+\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "-\t\t\t\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACKET);", "-\t\t\t\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACKET);", "+\t\t\t\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_multiple_field_declarations);", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_multiple_field_declarations);", "-\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}], "num": 55343}