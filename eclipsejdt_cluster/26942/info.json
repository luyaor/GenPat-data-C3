{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5031bd106ae6a6d590bea22df47027e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6fb056c4298dfcebd77e703473d1f92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final boolean[] exportedProjects, final String projectOutput, final String[] sourceOutputs, final String[][] inclusionPatterns, final String[][] exclusionPatterns) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final boolean[] exportedProjects, final String projectOutput, final String[] sourceOutputs, final String[][] inclusionPatterns, final String[][] exclusionPatterns, final String compliance) throws CoreException", "diff": ["-\tprotected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final boolean[] exportedProjects, final String projectOutput, final String[] sourceOutputs, final String[][] inclusionPatterns, final String[][] exclusionPatterns) throws CoreException {", "+\tprotected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final boolean[] exportedProjects, final String projectOutput, final String[] sourceOutputs, final String[][] inclusionPatterns, final String[][] exclusionPatterns, final String compliance) throws CoreException {", "+\t\t\t\t", "+\t\t\t\t// set compliance level options", "+\t\t\t\tif (\"1.5\".equals(compliance)) {", "+\t\t\t\t\tMap options = new HashMap();", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);\t", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);\t", "+\t\t\t\t\tjavaProject.setOptions(options);", "+\t\t\t\t}", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd90f51a63842a9da4b04c04c3aa1bd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tprotected IJavaProject setUpJavaProject(final String projectName) throws CoreException, IOException", "signatureAfterChange": " \tprotected IJavaProject setUpJavaProject(final String projectName, String compliance) throws CoreException, IOException", "diff": ["+\t}", "+\tprotected IJavaProject setUpJavaProject(final String projectName, String compliance) throws CoreException, IOException {", "-\t\treturn JavaCore.create(project);", "+\t\tIJavaProject javaProject = JavaCore.create(project);", "+\t\tif (\"1.5\".equals(compliance)) {", "+\t\t\tMap options = new HashMap();", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "+\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);\t", "+\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);\t", "+\t\t\tjavaProject.setOptions(options);", "+\t\t}", "+\t\treturn javaProject;"]}], "num": 26942}