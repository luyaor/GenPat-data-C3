{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69842c05d12f2fde3a846eb311a1b255", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c711ab5d173ff4917616045ec6344a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "5053d930a1699a7a249c68442b6dfc52c4208d0b", "commitAfterChange": "a5491224670be0cb02afb8b7794366fa0f54180b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r private static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": "\r private static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\t\t\tif (typeQualification.length == 1 && typeQualification[0] == '*') typeQualification = null;\r", "+\t\t\tif (typeQualification.length == 1 && typeQualification[0] == '*') {\r", "+\t\t\t\ttypeQualification = null;\r", "+\t\t\t} else {\r", "+\t\t\t\t// prefix with a '*' as the full qualification could be bigger \r", "+\t\t\t\t// (i.e. because of an import)\r", "+\t\t\t\ttypeQualification = CharOperation.concat(ONE_STAR, typeQualification);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b489fc99f96baf7ddcf8961bae8f5203", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 18, "signatureBeforeChange": " public EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " public EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\t\t\tif (this.declaringSimpleName != null && this.parameterCount >= 0 && !this.varargs)", "+\t\t\tif (this.declaringSimpleName != null && this.parameterCount >= 0 && !this.varargs) {", "-\t\t\telse { // do a prefix query with the declaringSimpleName", "-\t\t\t\tmatchRule &= ~R_EXACT_MATCH;", "-\t\t\t\tmatchRule |= R_PREFIX_MATCH;", "+\t\t\tmatchRule &= ~R_EXACT_MATCH;", "+\t\t\tmatchRule |= R_PREFIX_MATCH;", "+\t\t\tkey = CharOperation.concat(key, ONE_STAR);"]}], "num": 13645}