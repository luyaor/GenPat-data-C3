{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36d5904d61ba53239a766e379067074e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06847e2a39d05f9f37d1f1bc4e498c17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "a34df737b5102c35af6a4e4a81e1b17f0f972c06", "commitAfterChange": "503b10826319a8f0c6051f7e6004c5665ff89de5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "signatureAfterChange": " public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "diff": ["-\tsynchronized (this.lock) {", "-\t\tif (!hasUnsavedChanges())", "-\t\t\treturn;", "-\t\t\t", "-\t\t// use a platform operation to update the resource contents", "-\t\ttry {", "-\t\t\tString encoding = ((IJavaElement)this.owner).getJavaProject().getOption(JavaCore.CORE_ENCODING, true);", "-\t\t\tString stringContents = this.getContents();", "-\t\t\tif (stringContents == null) return;", "-\t\t\tbyte[] bytes = encoding == null ", "-\t\t\t\t? stringContents.getBytes() ", "-\t\t\t\t: stringContents.getBytes(encoding);", "-\t\t\tByteArrayInputStream stream = new ByteArrayInputStream(bytes);", "+\tif (!hasUnsavedChanges())", "+\t\treturn;", "+\t\t", "+\t// use a platform operation to update the resource contents", "+\ttry {", "+\t\tString encoding = ((IJavaElement)this.owner).getJavaProject().getOption(JavaCore.CORE_ENCODING, true);", "+\t\tString stringContents = this.getContents();", "+\t\tif (stringContents == null) return;", "+\t\tbyte[] bytes = encoding == null ", "+\t\t\t? stringContents.getBytes() ", "+\t\t\t: stringContents.getBytes(encoding);", "+\t\tByteArrayInputStream stream = new ByteArrayInputStream(bytes);", "-\t\t\tif (this.file.exists()) {", "-\t\t\t\tthis.file.setContents(", "-\t\t\t\t\tstream, ", "-\t\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, ", "-\t\t\t\t\tnull);", "-\t\t\t} else {", "-\t\t\t\tthis.file.create(stream, force, null);", "-\t\t\t}\t", "-\t\t} catch (IOException e) {", "-\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);", "-\t\t} catch (CoreException e) {", "-\t\t\tthrow new JavaModelException(e);", "-\t\t}", "-", "-\t\t// the resource no longer has unsaved changes", "-\t\tthis.flags &= ~ (F_HAS_UNSAVED_CHANGES);", "+\t\tif (this.file.exists()) {", "+\t\t\tthis.file.setContents(", "+\t\t\t\tstream, ", "+\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, ", "+\t\t\t\tnull);", "+\t\t} else {", "+\t\t\tthis.file.create(stream, force, null);", "+\t\t}\t", "+\t} catch (IOException e) {", "+\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);", "+\t} catch (CoreException e) {", "+\t\tthrow new JavaModelException(e);", "+", "+\t// the resource no longer has unsaved changes", "+\tthis.flags &= ~ (F_HAS_UNSAVED_CHANGES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df620eb24a5337d0f62ae7671764e64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "739f46dc80f05018247a11479ac4224752f3b7da", "commitAfterChange": "b87b4725d2e28b5cdeb71175856b8b7535e04544", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException", "signatureAfterChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException", "diff": ["-\t\tString newContent = updatedContent(source, dest, newCUName); // null if unchanged", "+\t\tASTRewrite rewrite = updateContent(source, dest, newCUName); // null if unchanged", "-\t\t\t\t\tif (force) {", "+\t\t\t\t\tif (this.force) {", "-\t\t\t\tint flags = force ? IResource.FORCE : IResource.NONE;", "+\t\t\t\tint flags = this.force ? IResource.FORCE : IResource.NONE;", "-\t\t\t\t\tif (newContent != null) flags |= IResource.KEEP_HISTORY;", "+\t\t\t\t\tif (rewrite != null) flags |= IResource.KEEP_HISTORY;", "-\t\t\tif (newContent != null){", "+\t\t\tif (rewrite != null){", "-\t\t\t\t\tString encoding = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\t// TODO (frederic) remove when bug 67606 will be fixed (bug 67823)", "-\t\t\t\t\t\t// fix bug 66898", "-\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding, this.progressMonitor);", "-\t\t\t\t\t\t// end todo", "-\t\t\t\t\t\tencoding = destFile.getCharset();", "-\t\t\t\t\t}", "-\t\t\t\t\tcatch (CoreException ce) {", "-\t\t\t\t\t\t// use no encoding", "-\t\t\t\t\t}", "-\t\t\t\t\t// when the file was copied, its read-only flag was preserved -> temporary set it to false", "-\t\t\t\t\t// note this doesn't interfer with repository providers as this is a new resource that cannot be under", "-\t\t\t\t\t// version control yet", "-\t\t\t\t\tUtil.setReadOnly(destFile, false);", "-\t\t\t\t\t", "-\t\t\t\t\tdestFile.setContents(", "-\t\t\t\t\t\tnew ByteArrayInputStream(encoding == null ? newContent.getBytes() : newContent.getBytes(encoding)), ", "-\t\t\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY,", "-\t\t\t\t\t\tgetSubProgressMonitor(1));", "-\t\t\t\t} catch(IOException e) {", "-\t\t\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);", "+\t\t\t\t\tsaveContent(dest, destName, rewrite, sourceEncoding, destFile);", "+\t\t\t\t\tif (e instanceof JavaModelException) throw (JavaModelException) e;", "-\t\t\tif (!force) {", "+\t\t\tif (!this.force) {", "-\t\t\t\tif (newContent != null){", "-\t\t\t\t\tString encoding = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\t// TODO (frederic) remove when bug 67606 will be fixed (bug 67823)", "-\t\t\t\t\t\t// fix bug 66898", "-\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding, this.progressMonitor);", "-\t\t\t\t\t\t// end todo", "-\t\t\t\t\t\tencoding = destFile.getCharset();", "-\t\t\t\t\t}", "-\t\t\t\t\tcatch (CoreException ce) {", "-\t\t\t\t\t\t// use no encoding", "-\t\t\t\t\t}", "-\t\t\t\t\tdestFile.setContents(", "-\t\t\t\t\t\tnew ByteArrayInputStream(encoding == null ? newContent.getBytes() : newContent.getBytes(encoding)), ", "-\t\t\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, ", "-\t\t\t\t\t\tgetSubProgressMonitor(1));", "+\t\t\t\tif (rewrite != null){", "+\t\t\t\t\tsaveContent(dest, destName, rewrite, sourceEncoding, destFile);", "-\t\t\t} catch(IOException e) {", "-\t\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);", "+\t\t\t\tif (e instanceof JavaModelException) throw (JavaModelException) e;"]}], "num": 65697}