{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cd6e5bb02b15fca2a3fdd642766b98d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1352a49116b476f2f5ad170e5dabdf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "26ecbd70f644b3e526f4a51dee0b94e84d57cade", "commitAfterChange": "63af609b0c4ca15a76568f63423f1cb23d7be92e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected TypeBinding findNextTypeBinding(int tokenIndex, Scope scope, PackageBinding packageBinding)", "signatureAfterChange": "  \tprotected TypeBinding findNextTypeBinding(int tokenIndex, Scope scope, PackageBinding packageBinding)", "diff": ["+\t\t\tReferenceBinding previousType = null;", "+\t\t\t\tif (this.resolvedType instanceof ReferenceBinding)", "+\t\t\t\t\tpreviousType = (ReferenceBinding) this.resolvedType;", "+\t\t\tif (this.annotations != null && this.annotations[tokenIndex] != null) {", "+\t\t\t\tthis.resolvedType = captureTypeAnnotations(scope, previousType, this.resolvedType, this.annotations[tokenIndex]);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f973a5d5f16df949468e704fd810eb59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "fcb6b52dfb91300241dc1cd9c915f45219747f35", "commitAfterChange": "9d67e78041cfcf4ea8149504d41dd65a12494e92", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\t}\t   \t    ", "+\t\t}", "+\t\tReferenceBinding captureSourceType = null;", "-\t\t        sig.append(this.arguments[i].computeUniqueKey(false/*not a leaf*/));", "+\t\t    \tTypeBinding typeBinding = this.arguments[i];", "+\t\t        sig.append(typeBinding.computeUniqueKey(false/*not a leaf*/));", "+\t\t        if (typeBinding instanceof CaptureBinding)", "+\t\t        \tcaptureSourceType = ((CaptureBinding) typeBinding).sourceType;", "+\t\tif (captureSourceType != null && captureSourceType != this.type) {", "+\t\t\t// contains a capture binding", "+\t\t\tsig.insert(0, \"&\"); //$NON-NLS-1$", "+\t\t\tsig.insert(0, captureSourceType.computeUniqueKey(false/*not a leaf*/));", "+\t\t}"]}], "num": 66705}