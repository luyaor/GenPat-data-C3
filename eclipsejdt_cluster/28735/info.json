{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5df86881bd9acd7b7388777433dd6755", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63028ce6a5ea012654b13d41876629a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void checkcast(int baseId)", "signatureAfterChange": " public void checkcast(int baseId)", "diff": ["-\tsuper.checkcast(baseId);", "-\tVerificationTypeInfo info = null;", "-\tswitch (baseId) {", "-\t\tcase TypeIds.T_byte :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangByte, ConstantPool.JavaLangByteConstantPoolName);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_short :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangShort, ConstantPool.JavaLangShortConstantPoolName);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_char :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangCharacter, ConstantPool.JavaLangCharacterConstantPoolName);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_int :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangInteger, ConstantPool.JavaLangIntegerConstantPoolName);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_long :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangLong, ConstantPool.JavaLangLongConstantPoolName);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_float :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangFloat, ConstantPool.JavaLangFloatConstantPoolName);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_double :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangDouble, ConstantPool.JavaLangDoubleConstantPoolName);", "-\t\t\tbreak;", "-\t\tcase TypeIds.T_boolean :", "-\t\t\tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangBoolean, ConstantPool.JavaLangBooleanConstantPoolName);", "-\t}", "-\tif (info != null) {", "-\t\tthis.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1] = info;", "-\t}", "-}", "+    super.checkcast(baseId);", "+    VerificationTypeInfo info = null;", "+    switch (baseId) {", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangByte, ConstantPool.JavaLangByteConstantPoolName);", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangShort, ConstantPool.JavaLangShortConstantPoolName);", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangCharacter, ConstantPool.JavaLangCharacterConstantPoolName);", "+            break;", "+        case TypeIds.T_int :", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangInteger, ConstantPool.JavaLangIntegerConstantPoolName);", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangLong, ConstantPool.JavaLangLongConstantPoolName);", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangFloat, ConstantPool.JavaLangFloatConstantPoolName);", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangDouble, ConstantPool.JavaLangDoubleConstantPoolName);", "+            break;", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangBoolean, ConstantPool.JavaLangBooleanConstantPoolName);", "+    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "+    if (info != null && (numberOfStackItems >= 1)) {", "+        this.currentFrame.stackItems[numberOfStackItems - 1] = info;", "+    }", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc09326dcb3cea46aa01838df6c1c381", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void generateBoxingConversion(int unboxedTypeID)", "signatureAfterChange": " public void generateBoxingConversion(int unboxedTypeID)", "diff": ["-}", "-public void generateBoxingConversion(int unboxedTypeID) {", "-\tsuper.generateBoxingConversion(unboxedTypeID);", "-\tVerificationTypeInfo info = null;", "-    switch (unboxedTypeID) {", "-        \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangByte, ConstantPool.JavaLangByteConstantPoolName);", "-        \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangShort, ConstantPool.JavaLangShortConstantPoolName);", "-           \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangCharacter, ConstantPool.JavaLangCharacterConstantPoolName);", "-           break;", "-        case TypeIds.T_int :             ", "-           \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangInteger, ConstantPool.JavaLangIntegerConstantPoolName);", "-           \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangLong, ConstantPool.JavaLangLongConstantPoolName);", "-           \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangFloat, ConstantPool.JavaLangFloatConstantPoolName);", "-           \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangDouble, ConstantPool.JavaLangDoubleConstantPoolName);", "-            break;  ", "-           \tinfo = new VerificationTypeInfo(TypeIds.T_JavaLangBoolean, ConstantPool.JavaLangBooleanConstantPoolName);", "-    if (info != null) {", "-    \tthis.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1] = info;", "+}", "+public void generateBoxingConversion(int unboxedTypeID) {", "+    super.generateBoxingConversion(unboxedTypeID);", "+    VerificationTypeInfo info = null;", "+    switch (unboxedTypeID) {", "+        case TypeIds.T_byte :", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangByte, ConstantPool.JavaLangByteConstantPoolName);", "+            break;", "+        case TypeIds.T_short :", "+            info = new VerificationTypeInfo(TypeIds.T_JavaLangShort, ConstantPool.JavaLangShortConstantPoolName);", "+            break;", "+        case TypeIds.T_char :", "+               info = new VerificationTypeInfo(TypeIds.T_JavaLangCharacter, ConstantPool.JavaLangCharacterConstantPoolName);", "+           break;", "+        case TypeIds.T_int :", "+               info = new VerificationTypeInfo(TypeIds.T_JavaLangInteger, ConstantPool.JavaLangIntegerConstantPoolName);", "+            break;", "+        case TypeIds.T_long :", "+               info = new VerificationTypeInfo(TypeIds.T_JavaLangLong, ConstantPool.JavaLangLongConstantPoolName);", "+            break;", "+        case TypeIds.T_float :", "+               info = new VerificationTypeInfo(TypeIds.T_JavaLangFloat, ConstantPool.JavaLangFloatConstantPoolName);", "+            break;", "+        case TypeIds.T_double :", "+               info = new VerificationTypeInfo(TypeIds.T_JavaLangDouble, ConstantPool.JavaLangDoubleConstantPoolName);", "+            break;", "+        case TypeIds.T_boolean :", "+               info = new VerificationTypeInfo(TypeIds.T_JavaLangBoolean, ConstantPool.JavaLangBooleanConstantPoolName);", "+    }", "+    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "+    if (info != null && (numberOfStackItems >= 1)) {", "+        this.currentFrame.stackItems[numberOfStackItems - 1] = info;"]}], "num": 28735}