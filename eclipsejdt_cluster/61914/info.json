{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47b51b7711428d6fd0733eb9675fab43", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ef172a7cd43919513b7e4124a6f275b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "cf6f1846e6d68aced683df5ec26e410c6ba01610", "commitAfterChange": "ae30fd6df4fe6e776883eda11e8cb81aefe2c34c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["-\tIBuffer buffer = this.owner.createBuffer(this);", "-\tif (buffer == null) return null;", "+\tIBuffer buffer = BufferManager.createBuffer(this);", "-\tif (buffer.getCharacters() == null) {", "-\t\tIBuffer classFileBuffer = this.classFile.getBuffer();", "-\t\tif (classFileBuffer != null) {", "-\t\t\tbuffer.setContents(classFileBuffer.getCharacters());", "-\t\t} else {", "-\t\t\t// Disassemble", "-\t\t\tIClassFileReader reader = ToolFactory.createDefaultClassFileReader(this.classFile, IClassFileReader.ALL);", "-\t\t\tDisassembler disassembler = new Disassembler();", "-\t\t\tString contents = disassembler.disassemble(reader, Util.getLineSeparator(\"\", getJavaProject()), ClassFileBytesDisassembler.WORKING_COPY); //$NON-NLS-1$", "-\t\t\tbuffer.setContents(contents);", "-\t\t}", "+\tIBuffer classFileBuffer = this.classFile.getBuffer();", "+\tif (classFileBuffer != null) {", "+\t\tbuffer.setContents(classFileBuffer.getCharacters());", "+\t} else {", "+\t\t// Disassemble", "+\t\tIClassFileReader reader = ToolFactory.createDefaultClassFileReader(this.classFile, IClassFileReader.ALL);", "+\t\tDisassembler disassembler = new Disassembler();", "+\t\tString contents = disassembler.disassemble(reader, Util.getLineSeparator(\"\", getJavaProject()), ClassFileBytesDisassembler.WORKING_COPY); //$NON-NLS-1$", "+\t\tbuffer.setContents(contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e796f25e94597de527ebfade036cd12f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "24ecdaaa88a3d3df53c6657b56b1c35a02f254d7", "commitAfterChange": "b77d2ea3108de5650fdc8f1f0c9f51bf7203159f", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner wcowner) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["+ */", "+protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException {", "+\t// create buffer", "+\tIBuffer buffer = this.owner.createBuffer(this);", "+\tif (buffer == null) return null;", "+\t// set the buffer source", "+\tif (buffer.getCharacters() == null) {", "+\t\tIBuffer classFileBuffer = this.classFile.getBuffer();", "+\t\tif (classFileBuffer != null) {", "+\t\t\tbuffer.setContents(classFileBuffer.getCharacters());", "+\t\t} else {", "+\t\t\t// Disassemble", "+\t\t\tIClassFileReader reader = ToolFactory.createDefaultClassFileReader(this.classFile, IClassFileReader.ALL);", "+\t\t\tDisassembler disassembler = new Disassembler();", "+\t\t\tString contents = disassembler.disassemble(reader, Util.getLineSeparator(\"\", getJavaProject()), ClassFileBytesDisassembler.WORKING_COPY); //$NON-NLS-1$", "+\t\t\tbuffer.setContents(contents);", "+\t\t}", "+", "+\t// add buffer to buffer cache", "+\tBufferManager bufManager = getBufferManager();", "+\tbufManager.addBuffer(buffer);", "+\t\t\t", "+\t// listen to buffer changes", "+\tbuffer.addBufferChangedListener(this);", "+\treturn buffer;", "+}", "-\t */", "-\tpublic void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner wcowner) throws JavaModelException {", "-\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.ELEMENT_DOES_NOT_EXIST, this));", "-\t}"]}], "num": 61914}