{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "263fc2c0d2a45155397827dd01032d0d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451c707c3c6b05ae9655d6d62de8474c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "906228369eed23f930bc548422a9ed0c01a3237e", "commitAfterChange": "06cedbd8bd184e3f34c939385e2cbddd9e3aedca", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic ITypeBinding[] getTypeBounds()", "signatureAfterChange": " \tpublic ITypeBinding[] getTypeBounds()", "diff": ["+\t\tTypeVariableBinding typeVariableBinding = null;", "-\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t\ttypeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t} else if (this.binding instanceof WildcardBinding) {", "+\t\t\tWildcardBinding wildcardBinding = (WildcardBinding) this.binding;", "+\t\t\ttypeVariableBinding = wildcardBinding.typeVariable();", "+\t\t}", "+\t\tif (typeVariableBinding != null) {", "-\t\t\tif (firstClassOrArrayBound != null) {", "+\t\t\tif (firstClassOrArrayBound == null) {", "+\t\t\t\tif (varSuperclass != null && varSuperclass.id != TypeIds.T_JavaLangObject) {", "+\t\t\t\t\tfirstClassOrArrayBound = varSuperclass;", "+\t\t\t\t\tboundsLength++;", "+\t\t\t\t}", "+\t\t\t} else  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5da44761a7f4dc69c6a8bf70b2041f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationSingleNameReference.java", "commitBeforeChange": "0d08aa661af23c77dec180adb0e2d54bc237084f", "commitAfterChange": "5eb7cf53adf1de05482e3d2eb14b8fd35c6f4286", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(token, BindingIds.VARIABLE, this, true /*resolve*/);", "-\t\tif (existingVariable != null && existingVariable.isValidBinding()){", "-\t\t\tif (existingVariable instanceof VariableBinding) {", "-\t\t\t\tif (existingVariable instanceof LocalVariableBinding) {", "-\t\t\t\t\tLocalVariableBinding local = (LocalVariableBinding) existingVariable;", "-\t\t\t\t\tif (local.isArgument) {", "-\t\t\t\t\t\tthis.binding = local;", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} ", "+\t\tLocalVariableBinding variableBinding = scope.findVariable(token);", "+\t\tif (variableBinding != null && variableBinding.isValidBinding() && variableBinding.isArgument) {", "+\t\t\tthis.binding = variableBinding;", "+\t\t\treturn;"]}], "num": 72642}