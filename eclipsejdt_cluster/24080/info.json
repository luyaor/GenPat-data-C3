{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e2f4f76968bb9d99a8a6166f54d35e7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138f8ecd49f564acd9d5a9acf52e7660", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "signatureAfterChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "diff": ["+\t\t\t\tchar[] name;", "+\t\t\t\tif (method.isConstructor()) {", "+\t\t\t\t\tname = info.getName();", "+\t\t\t\t\tint lastSlash = CharOperation.lastIndexOf('/', name);", "+\t\t\t\t\tif (lastSlash != -1) {", "+\t\t\t\t\t\tname = CharOperation.subarray(name, lastSlash+1, name.length);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tname = method.getSelector();", "+\t\t\t\t}", "-\t\t\t\t\tnew String(method.isConstructor() ? info.getName() : method.getSelector()),", "+\t\t\t\t\tnew String(name),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392ee4f856062139292e144719ff252f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "bc26b87233d42889a8d0ab7118ee0887338fae91", "commitAfterChange": "75c775ba1c55e2d0e3e3569d2cd59f27c56a3761", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic String[] convertTypeNamesToSigs(char[][] typeNames)", "signatureAfterChange": "\r \tprivate String[] convertTypeNamesToSigs(char[][] typeNames)", "diff": ["-\tpublic String[] convertTypeNamesToSigs(char[][] typeNames) {\r", "+\tprivate String[] convertTypeNamesToSigs(char[][] typeNames) {\r", "-\t\t\ttypeSigs[i] = Signature.createTypeSignature(typeNames[i], false);\r", "+\t\t\tString typeSig = Signature.createTypeSignature(typeNames[i], false);\r", "+\t\t\tint lastIndex = typeSig.lastIndexOf('.');\r", "+\t\t\tif (lastIndex == -1) {\r", "+\t\t\t\ttypeSigs[i] = typeSig;\r", "+\t\t\t} else {\r", "+\t\t\t\ttypeSigs[i] = \"\" + Signature.C_UNRESOLVED + typeSig.substring(lastIndex + 1, typeSig.length());\r", "+\t\t\t}\r"]}], "num": 24080}