{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa8d996857179e3e893134528488c64a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af2592fb44399ac7df0b0d4ff49ff99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectEnumSuperclass()", "signatureAfterChange": " \tprivate boolean connectEnumSuperclass()", "diff": ["-\t\tSourceTypeBinding sourceType = referenceContext.binding;", "+\t\tSourceTypeBinding sourceType = this.referenceContext.binding;", "-\t\t\tproblemReporter().nonGenericTypeCannotBeParameterized(null, rootEnumType, new TypeBinding[]{ sourceType });", "+\t\t\tproblemReporter().nonGenericTypeCannotBeParameterized(0, null, rootEnumType, new TypeBinding[]{ sourceType });", "-\t\tParameterizedTypeBinding  superType = environment().createParameterizedType(rootEnumType, new TypeBinding[]{ environment().convertToRawType(sourceType, false /*do not force conversion of enclosing types*/) } , null);", "+\t\tParameterizedTypeBinding  superType = environment().createParameterizedType(", "+\t\t\trootEnumType, ", "+\t\t\tnew TypeBinding[]{ ", "+\t\t\t\tenvironment().convertToRawType(sourceType, false /*do not force conversion of enclosing types*/), ", "+\t\t\t} , ", "+\t\t\tnull);", "+\t\tsourceType.tagBits |= (superType.tagBits & TagBits.HierarchyHasProblems); // propagate if missing supertpye"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc4b41685f26fca751def95dd6b262c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "65bc58d731b2b7495611004f31fbf68869bf0c34", "commitAfterChange": "a618dea008dd005a2062d94159d61d7900b021b7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t ParameterizedTypeBinding getParameterizedTypeBinding(ReferenceBinding genericType, ReferenceBinding enclosingType, CompilationUnitResolver resolver)", "signatureAfterChange": " \t ParameterizedTypeBinding getParameterizedTypeBinding(ReferenceBinding genericType, ReferenceBinding enclosingType)", "diff": ["-\t ParameterizedTypeBinding getParameterizedTypeBinding(ReferenceBinding genericType, ReferenceBinding enclosingType, CompilationUnitResolver resolver) {", "+\t ParameterizedTypeBinding getParameterizedTypeBinding(ReferenceBinding genericType, ReferenceBinding enclosingType) {", "-\t\t\tBinding argument = getCompilerBinding(resolver);", "+\t\t\tBinding argument = getCompilerBinding();", "-\t\t\t\treturn resolver.lookupEnvironment.createRawType(genericType, enclosingType);", "+\t\t\t\treturn this.environment.createRawType(genericType, enclosingType);", "-\t \tParameterizedTypeBinding parameterizedTypeBinding = resolver.lookupEnvironment.createParameterizedType(genericType, arguments, enclosingType);", "+\t \tParameterizedTypeBinding parameterizedTypeBinding = this.environment.createParameterizedType(genericType, arguments, enclosingType);", "-\t \t\treturn getParameterizedTypeBinding(memberType, parameterizedTypeBinding, resolver);", "+\t \t\treturn getParameterizedTypeBinding(memberType, parameterizedTypeBinding);"]}], "num": 14774}