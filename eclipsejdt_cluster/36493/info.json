{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83ae4a4115de852cd3ca5149d3ee8ded", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3335227b04f841f22a6c0966337a2b7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "f74beb57e62e872a608b1d99069f6ffa51720699", "commitAfterChange": "0bcd341ea781d3ca9f30d724e6161bfab2161b14", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void _test0026()", "signatureAfterChange": " public void test0026()", "diff": ["-public void _test0026() {", "+// NOTE: THIS TEST MOST LIKELY CAPTURES THE WRONG OUTPUT FOR JAVA 8. AS WE FIX TYPE INFERENCE ISSUES, THIS MAY FAIL.", "+public void test0026() {", "+\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX<Number> x = new X<>(1);\\n\" + ", "+\t\t\t\"\t              ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<Integer> to X<Number>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tX<Object> x4 = new X<>(1).idem();\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<Integer> to X<Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tX<Object> x5 = new X<>(1);\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<Integer> to X<Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tint i = m(new X<>(\\\"\\\"));\\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The constructor X<String>(String) is ambiguous\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c867014e856de6ba92a661007da907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1055, "methodNumberAfterChange": 1055, "signatureBeforeChange": " public void test1027()", "signatureAfterChange": " public void test1027()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"\\n\", // =================", "+\t\t\t\"\\n\" : ", "+\t\t\t\t\"import java.util.LinkedHashSet;\\n\" +", "+\t\t\t\t\"import java.util.Set;\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"    public class A {};\\n\" +", "+\t\t\t\t\"    public class B extends A {};\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "+\t\t\t\t\"        X g = new X();\\n\" +", "+\t\t\t\t\"        Set<A> set = g.newSet(g.new B());\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"    @SuppressWarnings(\\\"unchecked\\\")\\n\" +", "+\t\t\t\t\"    public <T, V extends T> Set<T> newSet(V... objects) {\\n\" +", "+\t\t\t\t\"        Set<T> set = new LinkedHashSet<T>();\\n\" +", "+\t\t\t\t\"        for (T t : objects) {\\n\" +", "+\t\t\t\t\"            set.add(t);\\n\" +", "+\t\t\t\t\"        }\\n\" +", "+\t\t\t\t\"        return set;\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"\\n\", // =================, // ================="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda2f091dd66b968ccf8bbd36d84ff5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "6afa93473446fb2c6b874f92c72045670997535f", "commitAfterChange": "e9d42bfbf494b3bd89965c526aaae07d7189c12c", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void test_parameter_specification_inheritance_014()", "signatureAfterChange": " public void test_parameter_specification_inheritance_014()", "diff": ["+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\"", "+\t\t: // at 1.8 we show null type annotations in the message:", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method @Nullable String getString1(String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method String getString2(String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method getString5(@NonNull String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method getString3(String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\"));"]}], "num": 36493}