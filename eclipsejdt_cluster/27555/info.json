{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e80f316bb8d3b9c260ceca8c719bae3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44ac03c8a4c13def605b3f19acb73d64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1987bebfc0499fe07d643a641d2e74ff184f5cc7", "commitAfterChange": "2b6b723d87be49aecbb1b89e893d389af560ea10", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void bytecodeExceeds64KLimit(TypeDeclaration location)", "signatureAfterChange": " public void bytecodeExceeds64KLimit(LambdaExpression location)", "diff": ["+public void bytecodeExceeds64KLimit(LambdaExpression location) {", "+\tMethodBinding method = location.binding;", "+\t\tthis.handle(", "+\t\t\tIProblem.BytecodeExceeds64KLimit,", "+\t\t\tnew String[] {new String(method.selector), typesAsString(method, false)},", "+\t\t\tnew String[] {new String(method.selector), typesAsString(method, true)},", "+\t\t\tProblemSeverities.Error | ProblemSeverities.Abort | ProblemSeverities.Fatal,", "+\t\t\tlocation.sourceStart,", "+\t\t\tlocation.sourceEnd);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1ee6b8226b24c0982dd321e10b06b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void maskedExceptionHandler(ReferenceBinding exceptionType, AstNode location)", "signatureAfterChange": " public void hiddenCatchBlock(ReferenceBinding exceptionType, AstNode location)", "diff": ["+}", "+public void hiddenCatchBlock(ReferenceBinding exceptionType, AstNode location) {", "+\tthis.handle(", "+\t\tIProblem.MaskedCatch,", "+\t\tnew String[] {", "+\t\t\tnew String(exceptionType.readableName()),", "+\t\t }, ", "+\t\tnew String[] {", "+\t\t\tnew String(exceptionType.shortReadableName()),", "+\t\t }, ", "+\t\tlocation.sourceStart,", "+\t\tlocation.sourceEnd);", "-public void maskedExceptionHandler(ReferenceBinding exceptionType, AstNode location) {", "-\tthis.handle(", "-\t\tIProblem.MaskedCatch,", "-\t\tNoArgument,", "-\t\tNoArgument,", "-\t\tlocation.sourceStart,", "-\t\tlocation.sourceEnd);", "-}"]}], "num": 27555}