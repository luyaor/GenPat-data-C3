{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bec3c6aa6a222d7df7ef930ad45a442b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fcc9e9a147a0229be62d3e2ddda6154", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "41de7547cd0b25c1246589b4554509ae324d796a", "commitAfterChange": "ae9c2f31a90b47398d8d35cc3e43c6bf47ddbbd7", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 41, "signatureBeforeChange": "\r \r \tprivate void findVariablesAndMethods(\r \t\tchar[] token,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \r \tprivate void findVariablesAndMethods(\r \t\tchar[] token,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["-\t\t\t\t\t\tif (CharOperation.prefixEquals(token, local.name, true /* do not ignore case */)) {\r", "-\t\t\t\t\t\t\trelevance += CASEMATCHRELEVANCE;\r", "-\t\t\t\t\t\t}\r", "+\t\t\t\t\t\trelevance += computeRelevanceForCaseMatching(token, local.name);\r", "+\t\t\t\t\t\trelevance += computeRelevanceForExpectingType(local.type);\r", "+\t\t\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5f8e79e171283947f7664c8f1c455e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "41de7547cd0b25c1246589b4554509ae324d796a", "commitAfterChange": "ae9c2f31a90b47398d8d35cc3e43c6bf47ddbbd7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\tif (CharOperation.prefixEquals(fieldName, field.name, true /* do not ignore case */)){\r", "-\t\t\t\trelevance += CASEMATCHRELEVANCE;\t\r", "-\t\t\t}\r", "+\t\t\trelevance += computeRelevanceForCaseMatching(fieldName, field.name);\r", "+\t\t\trelevance += computeRelevanceForExpectingType(field.type);\r"]}], "num": 63066}