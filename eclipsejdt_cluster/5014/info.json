{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd57c889d18b741d68400702e166f19e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420e6cf7289fdca0f6858be9571d3a15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "171d07f6ada876001613e11586ace05862b09fcf", "commitAfterChange": "ae74c3a029060b6d3cf931c296e1169709de4671", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public boolean isCompatibleWith(TypeBinding right)", "signatureAfterChange": " public boolean isCompatibleWith(TypeBinding otherType)", "diff": ["-public boolean isCompatibleWith(TypeBinding right) {", "-\tif (this == right)", "+public boolean isCompatibleWith(TypeBinding otherType) {", "+\tif (this == otherType)", "-\tswitch (right.kind()) {", "+\tswitch (otherType.kind()) {", "-\t\t\tArrayBinding rightArray = (ArrayBinding) right;", "-\t\t\tif (rightArray.leafComponentType.isBaseType())", "+\t\t\tArrayBinding otherArray = (ArrayBinding) otherType;", "+\t\t\tif (otherArray.leafComponentType.isBaseType())", "-\t\t\tif (dimensions == rightArray.dimensions)", "-\t\t\t\treturn leafComponentType.isCompatibleWith(rightArray.leafComponentType);", "-\t\t\tif (dimensions < rightArray.dimensions)", "+\t\t\tif (dimensions == otherArray.dimensions)", "+\t\t\t\treturn leafComponentType.isCompatibleWith(otherArray.leafComponentType);", "+\t\t\tif (dimensions < otherArray.dimensions)", "-\t\t    return ((WildcardBinding) right).boundCheck(this);", "+\t\t    return ((WildcardBinding) otherType).boundCheck(this);", "+/*\t\t    ", "+\t\tcase Binding.TYPE_PARAMETER :", "+\t\t\t// check compatibility with capture of ? super X", "+\t\t\tif (otherType.isCapture()) {", "+\t\t\t\tCaptureBinding otherCapture = (CaptureBinding) otherType;", "+\t\t\t\tTypeBinding otherLowerBound;", "+\t\t\t\tif ((otherLowerBound = otherCapture.lowerBound) != null) {", "+\t\t\t\t\tif (!otherLowerBound.isArrayType()) return false;\t\t\t\t\t", "+\t\t\t\t\treturn this.isCompatibleWith(otherLowerBound);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn false;", "+*/", "-\tswitch (right.leafComponentType().id) {", "+\tswitch (otherType.leafComponentType().id) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47260ba6efbea8b4741b60210fc84847", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public boolean isCompatibleWith(TypeBinding right)", "signatureAfterChange": " public boolean isCompatibleWith(TypeBinding right)", "diff": ["-\tif (right.isArrayType()) {", "-\t\tArrayBinding rightArray = (ArrayBinding) right;", "-\t\tif (rightArray.leafComponentType.isBaseType())", "-\t\t\treturn false; // relying on the fact that all equal arrays are identical", "-\t\tif (dimensions == rightArray.dimensions)", "-\t\t\treturn leafComponentType.isCompatibleWith(rightArray.leafComponentType);", "-\t\tif (dimensions < rightArray.dimensions)", "-\t\t\treturn false; // cannot assign 'String[]' into 'Object[][]' but can assign 'byte[][]' into 'Object[]'", "-\t} else {", "-\t\tif (right.isBaseType())", "+\tswitch (right.kind()) {", "+\t\tcase Binding.ARRAY_TYPE :", "+\t\t\tArrayBinding rightArray = (ArrayBinding) right;", "+\t\t\tif (rightArray.leafComponentType.isBaseType())", "+\t\t\t\treturn false; // relying on the fact that all equal arrays are identical", "+\t\t\tif (dimensions == rightArray.dimensions)", "+\t\t\t\treturn leafComponentType.isCompatibleWith(rightArray.leafComponentType);", "+\t\t\tif (dimensions < rightArray.dimensions)", "+\t\t\t\treturn false; // cannot assign 'String[]' into 'Object[][]' but can assign 'byte[][]' into 'Object[]'", "+\t\t\tbreak;", "+\t\tcase Binding.BASE_TYPE :", "-\t\tif (right.isWildcard()) {", "+\t\tcase Binding.WILDCARD_TYPE :", "-\t\t}"]}], "num": 5014}