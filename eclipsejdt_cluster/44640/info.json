{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a37ad5c126a0c856372725b1c81ac740", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a94efa4f4b3106d6371a67aa419d4ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/MementoTokenizer.java", "commitBeforeChange": "2d127f9c4f7d2f6e84664bc558e4d5a8224f5ac8", "commitAfterChange": "ba102afaa27b3b6b63ee0fd01eab5a8d45f4d8a9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String nextToken()", "signatureAfterChange": "  \tpublic String nextToken()", "diff": ["+\t\t\t\t// Also covers JavaElement#JEM_DELIMITER_ESCAPE, in which case, ", "+\t\t\t\t// we seek ahead by one char and check if it's an escaped delimiter", "+\t\t\t\t// and if that's true, we return that as the token. ", "+\t\t\t\t// Else, we decide that JEM_JAVAPROJECT is the current token.", "+\t\t\t\tif (this.index < this.length) {", "+\t\t\t\t\tchar nextChar = this.memento[this.index++];", "+\t\t\t\t\tswitch(nextChar) {", "+\t\t\t\t\t\tcase JavaElement.JEM_LAMBDA_EXPRESSION:", "+\t\t\t\t\t\t\treturn LAMBDA_EXPRESSION;", "+\t\t\t\t\t\tcase JavaElement.JEM_LAMBDA_METHOD:", "+\t\t\t\t\t\t\treturn LAMBDA_METHOD;", "+\t\t\t\t\t\tcase JavaElement.JEM_STRING:", "+\t\t\t\t\t\t\treturn STRING;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tthis.index--;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\tcase JavaElement.JEM_LAMBDA_EXPRESSION:", "-\t\t\t\treturn LAMBDA_EXPRESSION;", "-\t\t\tcase JavaElement.JEM_LAMBDA_METHOD:", "-\t\t\t\treturn LAMBDA_METHOD;", "-\t\t\tcase JavaElement.JEM_STRING:", "-\t\t\t\treturn STRING;", "-\t\t\t\tcase JavaElement.JEM_LAMBDA_EXPRESSION:", "-\t\t\t\tcase JavaElement.JEM_LAMBDA_METHOD:\t", "-\t\t\t\tcase JavaElement.JEM_STRING:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b3fb2c67d9fd598fb33d5c8fe472e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["+}", "+public static Test suite() {", "+\tTestSuite suite = new TestSuite(AnnotationTest.class.getName());", "+\tfor (int i=0; i<allTestClasses.size(); i++) {", "+\t\taddTest(suite, (Class) allTestClasses.get(i));", "+\t}", "+\treturn new RegressionTestSetup(suite, COMPLIANCE_1_4);", "+}", "-public static Test suite() {", "-\tif (false) {", "-\t   \tTestSuite ts;", "-\t\t//some of the tests depend on the order of this suite.", "-\t\tts = new TestSuite();", "-\t\tts.addTest(new AnnotationTest(\"test221\"));", "-\t\treturn new RegressionTestSetup(ts, COMPLIANCE_1_4);", "-\treturn setupSuite(testClass());"]}], "num": 44640}