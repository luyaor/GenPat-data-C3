{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f0d3794bc82c7e081be16894de108ed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98832c614f7afb265f5c8f6942e8518e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "signatureAfterChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "diff": ["-\tDataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(getIndexFile()), 2048));", "+\tDataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(this.indexFile), 2048));", "-\t\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\t\tSystem.err.println(\"file = \"+this.indexFile); //$NON-NLS-1$", "-\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\tSystem.err.println(\"file = \"+this.indexFile); //$NON-NLS-1$", "-\t\tthis.categoryTables.put(categoryName, categoryTable);", "+\t\tthis.categoryTables.put(INTERNED_CATEGORY_NAMES.get(categoryName), categoryTable);", "-\t\tthis.cachedCategoryName = categoryTable.elementSize < 10000 ? categoryName : null;", "+\t\tthis.cachedCategoryName = categoryTable.elementSize < 20000 ? categoryName : null;", "-\t\tstream = new DataInputStream(new BufferedInputStream(new FileInputStream(getIndexFile()), 2048));", "+\t\tstream = new DataInputStream(new BufferedInputStream(new FileInputStream(this.indexFile), 2048));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0dc70889701048b1b7ba3b96fa5aa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "c56d8289161a1b2e501ace042a7085f33bafd661", "commitAfterChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " synchronized String readDocumentName(int docNumber) throws IOException", "signatureAfterChange": " synchronized String readDocumentName(int docNumber) throws IOException", "diff": ["-\t\tDataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(getIndexFile()), 2048));", "+\t\tboolean isLastChunk = chunkNumber == this.numberOfChunks - 1;", "+\t\tint start = this.chunkOffsets[chunkNumber];", "+\t\tint numberOfBytes = (isLastChunk ? this.startOfCategoryTables : this.chunkOffsets[chunkNumber + 1]) - start;", "+\t\tif (numberOfBytes < 0)", "+\t\t\tthrow new IllegalArgumentException();", "+\t\tbyte[] bytes = new byte[numberOfBytes];", "+\t\tFileInputStream file = new FileInputStream(getIndexFile());", "-\t\t\tstream.skip(this.chunkOffsets[chunkNumber]);", "-\t\t\tint size = chunkNumber == this.numberOfChunks - 1 ? this.sizeOfLastChunk : CHUNK_SIZE;", "-\t\t\tchunk = new String[size];", "-\t\t\treadChunk(chunk, stream, 0, size);", "+\t\t\tfile.skip(start);", "+\t\t\tif (file.read(bytes, 0, numberOfBytes) != numberOfBytes)", "+\t\t\t\tthrow new IOException();", "-\t\t\tstream.close();", "+\t\t\tfile.close();", "-\t\tthis.cachedChunks[chunkNumber] = chunk;", "+\t\tDataInputStream stream = new DataInputStream(new ByteArrayInputStream(bytes));", "+\t\tint numberOfNames = isLastChunk ? this.sizeOfLastChunk : CHUNK_SIZE;", "+\t\tchunk = this.cachedChunks[chunkNumber] = new String[numberOfNames];", "+\t\treadChunk(chunk, stream, 0, numberOfNames);"]}], "num": 52518}