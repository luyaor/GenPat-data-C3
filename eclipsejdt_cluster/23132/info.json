{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1fbcd92ed9e147eea5be14000409ded", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d661ace036f4f70b07646dcae45fa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "b86c62c9276301f4293d579436f1016659c6742c", "commitAfterChange": "9816d147cfcd9317931332a2edf2549b9a55fa79", "methodNumberBeforeChange": 689, "methodNumberAfterChange": 696, "signatureBeforeChange": " \tpublic void test674()", "signatureAfterChange": " \tpublic void test674()", "diff": ["+\t\t/* old version", "+\t\t*/", "+\t\tString source = ", "+\t\t\t\"public class A {\\n\" + ", "+\t\t\t\"\t\\n\" + ", "+\t\t\t\"\t\\n\" + ", "+\t\t\t\"\tprivate class Inner1 {[#\\n\" + ", "+\t\t\t\"\t    \t \\n\" + ", "+\t\t\t\"\t    \t \\n\" + ", "+\t\t\t\"\t    \t      void    bar () {   }\\n\" + ", "+\t\t\t\"\t    \t      \\n\" + ", "+\t\t\t\"\t    \t   void    i()\\n\" + ", "+\t\t\t\"\t    \t   {\\n\" + ", "+\t\t\t\"\t    \t\t   \\n\" + ", "+\t\t\t\"\t    \t      }\\n\" + ", "+\t\t\t\"\t     #]}\\n\" + ", "+\t\t\t\"\t     \\n\" + ", "+\t\t\t\"\t     \\n\" + ", "+\t\t\t\"\tprivate class Inner2 {\\n\" + ", "+\t\t\t\"\t    \t     void    xy()  {\\n\" + ", "+\t\t\t\"\t    \t    \t \\n\" + ", "+\t\t\t\"\t    }\\n\" + ", "+\t\t\t\"\t     }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class B {[#\\n\" + ", "+\t\t\t\"\t     private      void foo() {\\n\" + ", "+\t\t\t\"\t    \t \\n\" + ", "+\t\t\t\"\t          }\\n\" + ", "+\t\t\t\"#]}\\n\";", "+\t\tformatSource(source,", "+\t\t\t\"public class A {\\n\" + ", "+\t\t\t\"\t\\n\" + ", "+\t\t\t\"\t\\n\" + ", "+\t\t\t\"\tprivate class Inner1 {\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\t\tvoid bar() {\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\t\tvoid i() {\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\t     \\n\" + ", "+\t\t\t\"\t     \\n\" + ", "+\t\t\t\"\tprivate class Inner2 {\\n\" + ", "+\t\t\t\"\t    \t     void    xy()  {\\n\" + ", "+\t\t\t\"\t    \t    \t \\n\" + ", "+\t\t\t\"\t    }\\n\" + ", "+\t\t\t\"\t     }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class B {\\n\" + ", "+\t\t\t\"\tprivate void foo() {\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\tCodeFormatter.K_CLASS_BODY_DECLARATIONS,", "+\t\t\t0 /*no indentation*/,", "+\t\t\ttrue /*repeat formatting twice*/", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0f0219c1a86bad74daf30ef8d6ad277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "b70c37ecf76f05e7ae76a32ba47dec687904996c", "commitAfterChange": "991f76a3733441af275e22b3c172d2ee3c84bb0e", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void testBug70892conform2()", "signatureAfterChange": " \tpublic void testBug70892b()", "diff": ["-\t}", "-\tpublic void testBug70892conform2() {", "-\t\t\t\t\t\"\t/**{@value #field}*/\\n\" + ", "-\t\t\t\t\t\"\tstatic int field;\\n\" + ", "-\t\t\t\t\t\"}\\n\"", "+\t}", "+\tpublic void testBug70892b() {", "+\t\tString[] testFiles = new String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value \\\"invalid\\\"}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field1 = 1;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value <a href=\\\"invalid\\\">invalid</a>} invalid\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field2 = 2;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value #field}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field3 = 3;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value #foo}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field4 = 4;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value #foo()}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field5 = 5;\\n\" + ", "+\t\t\t\"\tvoid foo() {}\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t};", "+\t\tif (this.complianceLevel.equals(COMPLIANCE_1_3) || this.complianceLevel.equals(COMPLIANCE_1_4)) {", "+\t\t\trunConformTest(testFiles);", "+\t\t} else {", "+\t\t\trunNegativeTest(testFiles,", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value \\\"invalid\\\"}\\r\\n\" + ", "+\t\t\t\t\"\t          ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 7)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value <a href=\\\"invalid\\\">invalid</a>} invalid\\r\\n\" + ", "+\t\t\t\t\"\t          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 11)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value #field}\\r\\n\" + ", "+\t\t\t\t\"\t           ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: field cannot be resolved or is not a field\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 15)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value #foo}\\r\\n\" + ", "+\t\t\t\t\"\t           ^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 19)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value #foo()}\\r\\n\" + ", "+\t\t\t\t\"\t           ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t);", "+\t\t}"]}], "num": 23132}