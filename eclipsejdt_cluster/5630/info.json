{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "801eaf194718eb8d4a6cba63d85a3b64", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1122db058bc0f2bd68d929123fe0c2d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "commitAfterChange": "369ffd3db09511488e039ba2575df2eeea055320", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic static IJavaElement create(IFolder folder)", "signatureAfterChange": "\r \tpublic static IJavaElement create(IFolder folder)", "diff": ["-\t\ttry {\r", "-\t\t\tIPath outputLocation = project.getOutputLocation();\r", "-\t\t\tif (outputLocation == null)\r", "-\t\t\t\treturn null;\r", "-\t\t\tif (outputLocation.isPrefixOf(folder.getFullPath())) {\r", "-\t\t\t\tif (project.getClasspathEntryFor(outputLocation) != null) {\r", "-\t\t\t\t\t// if the output location is the same as an input location, return the element\r", "-\t\t\t\t\treturn element;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\t// otherwise, do not create elements for folders in the output location\r", "-\t\t\t\t\treturn null;\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\tif (folder.getName().indexOf('.') >= 0 && !(element instanceof IPackageFragmentRoot)) {\r", "-\t\t\t\t\treturn null; // only package fragment roots are allowed with dot names\r", "-\t\t\t\t}\r", "-\r", "-\t\t\t\treturn element;\r", "-\t\t\t}\r", "-\t\t} catch (JavaModelException e) {\r", "+\t\tif (Util.conflictsWithOutputLocation(folder.getFullPath(), project)\r", "+\t\t \t|| (folder.getName().indexOf('.') >= 0 \r", "+\t\t \t\t&& !(element instanceof IPackageFragmentRoot))) {\r", "+\t\t\treturn null; // only package fragment roots are allowed with dot names\r", "+\t\t} else {\r", "+\t\t\treturn element;\r", "-\t\treturn null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bf6e82e9664ebf1a0a19dfefa3d9665", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "9053fa9007e068e0e9e5a3cf9b906249912e9ab6", "commitAfterChange": "3c1189c010553b032ad2a6abf74eff85d6715414", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic static IJavaElement create(IFolder folder)", "signatureAfterChange": "\r \tpublic static IJavaElement create(IFolder folder)", "diff": ["-\t\tif (folder.getName().indexOf('.') < 0) {\r", "-\t\t\tJavaProject project = (JavaProject) create(folder.getProject());\r", "-\t\t\tif (project == null)\r", "+\t\tJavaProject project = (JavaProject) create(folder.getProject());\r", "+\t\tif (project == null)\r", "+\t\t\treturn null;\r", "+\t\tIJavaElement element = determineIfOnClasspath(folder, project);\r", "+\t\ttry {\r", "+\t\t\tIPath outputLocation = project.getOutputLocation();\r", "+\t\t\tif (outputLocation == null)\r", "-\t\t\tIJavaElement element = determineIfOnClasspath(folder, project);\r", "-\t\t\ttry {\r", "-\t\t\t\tIPath outputLocation = project.getOutputLocation();\r", "-\t\t\t\tif (outputLocation == null)\r", "-\t\t\t\t\treturn null;\r", "-\t\t\t\tif (outputLocation.isPrefixOf(folder.getFullPath())) {\r", "-\t\t\t\t\tif (project.getClasspathEntryFor(outputLocation) != null) {\r", "-\t\t\t\t\t\t// if the output location is the same as an input location, return the element\r", "-\t\t\t\t\t\treturn element;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t// otherwise, do not create elements for folders in the output location\r", "-\t\t\t\t\t\treturn null;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} else {\r", "+\t\t\tif (outputLocation.isPrefixOf(folder.getFullPath())) {\r", "+\t\t\t\tif (project.getClasspathEntryFor(outputLocation) != null) {\r", "+\t\t\t\t\t// if the output location is the same as an input location, return the element\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\t// otherwise, do not create elements for folders in the output location\r", "+\t\t\t\t\treturn null;\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\treturn null;\r", "+\t\t\t} else {\r", "+\t\t\t\tif (folder.getName().indexOf('.') >= 0 && !(element instanceof IPackageFragmentRoot)) {\r", "+\t\t\t\t\treturn null; // only package fragment roots are allowed with dot names\r", "+\t\t\t\t}\r", "+\r", "+\t\t\t\treturn element;\r", "+\t\t} catch (JavaModelException e) {\r"]}], "num": 5630}