{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f859d9fc4efeda371cf65ca4a8d0bbe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2825b69a89b728d54280be73b4bbbe2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "8308fbb078e8e036c815675ec6bbbcc0aa49f4d3", "commitAfterChange": "e9cd393d27e7dcc4d1e8856bf858c025f0164f22", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r \tpublic FlowInfo analyseCode(\r \t\tBlockScope currentScope,\r \t\tFlowContext flowContext,\r \t\tFlowInfo flowInfo)", "signatureAfterChange": "\r \r \tpublic FlowInfo analyseCode(\r \t\tBlockScope currentScope,\r \t\tFlowContext flowContext,\r \t\tFlowInfo flowInfo)", "diff": ["+\t\tConstant constant = assertExpression.constant;\r", "+\t\tif (constant != NotAConstant && constant.booleanValue() == true) {\r", "+\t\t\treturn flowInfo;\r", "+\t\t}\r", "+\r", "-\t\t// add the assert support in the clinit\r", "-\t\r", "+\t\t// assertion might throw AssertionError (unchecked), which can have consequences in term of\r", "+\t\t// definitely assigned variables (depending on caught exception in the context)\r", "+\t\t// DISABLED - AssertionError is unchecked, try statements are already protected against these.\r", "+\t\t//flowContext.checkExceptionHandlers(currentScope.getJavaLangAssertionError(), this, assertInfo, currentScope);\r", "+\r", "-\t\t\r", "-\t\tConstant constant = assertExpression.constant;\r", "-\t\t\r", "-\t\tif (constant != NotAConstant && constant.booleanValue() == true) {\r", "-\t\t\treturn flowInfo;\r", "-\t\t}\r", "+\r", "+\t\t// add the assert support in the clinit\r", "+\t\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72aedc728115dbf6e4a34bb906719039", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "a7e4d01a51c73dd3e64b855df6fdca037a0f348d", "commitAfterChange": "07b82c9368bd10ac7ebb1046caebd6da084b537f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic boolean visit(ForStatement node)", "signatureAfterChange": " \tpublic boolean visit(ForStatement node)", "diff": ["+\t\tif (node.getExpression() != null) {", "+\t\t\tnode.getExpression().accept(this);", "+\t\t}", "+\t\tbuffer.append(\"; \");//$NON-NLS-1$", "-\t\t}", "-\t\tbuffer.append(\"; \");//$NON-NLS-1$", "-\t\tif (node.getExpression() != null) {", "-\t\t\tnode.getExpression().accept(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "861fe08c5cb6101e4f49075364d8967b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "c01d4e421a0fa2c650a398bcf3ff121ab0577af6", "commitAfterChange": "42d19dd3705bce900dfc36deb77d97fde99bf108", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["+\t\tASTNode[] bodyDeclarations = CodeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), this.options);", "+\t\t", "+\t\tif (bodyDeclarations != null) {", "+\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, offset, length);", "+\t\t}", "+", "-\t\tASTNode[] bodyDeclarations = CodeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), this.options);", "-\t\t", "-\t\tif (bodyDeclarations != null) {", "-\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, offset, length);", "-\t\t}"]}], "num": 53499}