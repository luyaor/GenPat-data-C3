{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9a5aecf59ae76abb126b6f436a7c483", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ea032eba45c025d3bdffbaecab1350", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7750e1b5a6b245445fbc69259bf6412de07423cc", "commitAfterChange": "837e74414fb9b240932cd6afae3110277fb777db", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r public final void computeLocalVariablePositions(int offset, CodeStream codeStream)", "signatureAfterChange": "\r \r public final void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["-public final void computeLocalVariablePositions(int offset, CodeStream codeStream) {\r", "+public final void computeLocalVariablePositions(int initOffset, CodeStream codeStream) {\r", "+\tObjectVector returnAddresses = new ObjectVector();\r", "+\tcomputeLocalVariablePositions(initOffset, codeStream, returnAddresses);\r", "+\tfor (int i = 0, length = returnAddresses.size(); i < length; i++){\r", "+\t\tLocalVariableBinding returnAddress = (LocalVariableBinding)returnAddresses.elementAt(i);\t\r", "+\t\treturnAddress.resolvedPosition = this.maxOffset ++;\r", "+\t}\r", "+}\r", "-\r", "-\t\t\tif (subscopes[iscope] instanceof BlockScope)\r", "-\t\t\t\t((BlockScope) subscopes[iscope]).computeLocalVariablePositions(offset, codeStream);\r", "-\t\t\t\tif (local.declaration != null)\r", "-\t\t\t\t\tcodeStream.record(local); // record user local variables for attribute generation\r", "-\t\t\t\tlocal.resolvedPosition = offset;\r", "-\t\t\t\t// check for too many arguments/local variables\r", "-\t\t\t\tif(local.isArgument){\r", "-\t\t\t\t\tif (offset > 0xFF){ // no more than 255 words of arguments\r", "-\t\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(local.declaration);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif(offset > 0xFFFF){ // no more than 65535 words of locals\r", "-\t\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForLocal(local.declaration);\r", "-\t\t\t\tif ((local.type == LongBinding) || (local.type == DoubleBinding))\r", "-\t\t\t\t\toffset += 2;\r", "-\t\t\t\telse\r", "-\t\t\t\t\toffset++;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b0bd409c2288f7438cc486b505db5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "a966ab9bd6f1a46289abe3e77d65d881ca0ea764", "commitAfterChange": "ac87c661e83dcf7bccbf0b1cb889acd82f188015", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r public final void computeLocalVariablePositions(int offset, CodeStream codeStream)", "signatureAfterChange": "\r \r public final void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["-public final void computeLocalVariablePositions(int offset, CodeStream codeStream) {\r", "+public final void computeLocalVariablePositions(int initOffset, CodeStream codeStream) {\r", "+\tObjectVector returnAddresses = new ObjectVector();\r", "+\tcomputeLocalVariablePositions(initOffset, codeStream, returnAddresses);\r", "+\tfor (int i = 0, length = returnAddresses.size(); i < length; i++){\r", "+\t\tLocalVariableBinding returnAddress = (LocalVariableBinding)returnAddresses.elementAt(i);\t\r", "+\t\treturnAddress.resolvedPosition = this.maxOffset ++;\r", "+\t}\r", "+}\r", "-\r", "-\t\t\tif (subscopes[iscope] instanceof BlockScope)\r", "-\t\t\t\t((BlockScope) subscopes[iscope]).computeLocalVariablePositions(offset, codeStream);\r", "-\t\t\t\tif (local.declaration != null)\r", "-\t\t\t\t\tcodeStream.record(local); // record user local variables for attribute generation\r", "-\t\t\t\tlocal.resolvedPosition = offset;\r", "-\t\t\t\t// check for too many arguments/local variables\r", "-\t\t\t\tif(local.isArgument){\r", "-\t\t\t\t\tif (offset > 0xFF){ // no more than 255 words of arguments\r", "-\t\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(local.declaration);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif(offset > 0xFFFF){ // no more than 65535 words of locals\r", "-\t\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForLocal(local.declaration);\r", "-\t\t\t\tif ((local.type == LongBinding) || (local.type == DoubleBinding))\r", "-\t\t\t\t\toffset += 2;\r", "-\t\t\t\telse\r", "-\t\t\t\t\toffset++;\r"]}], "num": 5402}