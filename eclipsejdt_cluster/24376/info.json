{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50ad5976875a3fcb36d0911d8d515849", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec62d5199477c01f3064191bfab13c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a2cfaf33b626413a70eea1530c77695e81ac081f", "commitAfterChange": "89847a0c1a06590b3bbeee9528d77f57e2f8453c", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 372, "signatureBeforeChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "signatureAfterChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "diff": ["-\tTypeBinding erasedCastType = castExpression.resolvedType.erasure();", "-\tTypeBinding erasedLeaf = erasedCastType.leafComponentType();", "-\tint dim = erasedCastType.dimensions();", "-\tif (erasedLeaf.isGenericType()) {", "-\t\tReferenceBinding leafEnclosing = scope.environment().convertToParameterizedType(erasedLeaf.enclosingType());", "-\t\terasedCastType = scope.environment().createRawType((ReferenceBinding)erasedLeaf, leafEnclosing);", "-\t\tif (dim > 0) erasedCastType = scope.environment().createArrayType(erasedCastType, dim);", "-\t}\t", "+\tTypeBinding castExpressionResolvedType = castExpression.resolvedType;", "-\t\t\tnew String(castExpression.resolvedType.readableName()),", "-\t\t\tnew String(erasedCastType.readableName()),", "+\t\t\tnew String(castExpressionResolvedType.readableName())", "-\t\t\tnew String(castExpression.resolvedType.shortReadableName()),", "-\t\t\tnew String(erasedCastType.shortReadableName()),", "+\t\t\tnew String(castExpressionResolvedType.shortReadableName())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7860f3a008f96607b8d57133d0b1bed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 335, "methodNumberAfterChange": 336, "signatureBeforeChange": " public void unsafeCast(CastExpression castExpression)", "signatureAfterChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "diff": ["-public void unsafeCast(CastExpression castExpression) {", "+public void unsafeCast(CastExpression castExpression, Scope scope) {", "+\tTypeBinding erasedCastType = castExpression.resolvedType.erasure();", "+\tif (erasedCastType.isGenericType()) erasedCastType = scope.environment().createRawType((ReferenceBinding)erasedCastType, erasedCastType.enclosingType());", "-\t\tnew String[]{ new String(castedExpressionType.readableName()), new String(castExpression.resolvedType.readableName())},", "-\t\tnew String[]{ new String(castedExpressionType.shortReadableName()), new String(castExpression.resolvedType.shortReadableName())},", "+\t\tnew String[]{ ", "+\t\t\tnew String(castedExpressionType.readableName()), ", "+\t\t\tnew String(castExpression.resolvedType.readableName()),", "+\t\t\tnew String(erasedCastType.readableName()),", "+\t\t},", "+\t\tnew String[]{ ", "+\t\t\tnew String(castedExpressionType.shortReadableName()), ", "+\t\t\tnew String(castExpression.resolvedType.shortReadableName()),", "+\t\t\tnew String(erasedCastType.shortReadableName()),", "+\t\t},"]}], "num": 24376}