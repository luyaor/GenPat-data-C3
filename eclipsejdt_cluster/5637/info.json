{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c658d685af6f19431d4665587a11d0f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44bbe9558e42c8a4b72f12d40582da47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "f6d62cf5509e336368d118f27513759c555039cb", "commitAfterChange": "89f7cc9d4d0d48b1e9133696ddad31d6d3751273", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "signatureAfterChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "diff": ["-// anonymous type constructor creation", "+// anonymous type constructor creation: rank is important since bindings already got sorted", "-\t\tSystem.arraycopy(", "-\t\t\tthis.methods,", "-\t\t\t0,", "-\t\t\tnewMethods = new AbstractMethodDeclaration[this.methods.length + 1],", "-\t\t\t1,", "-\t\t\tthis.methods.length);", "+\t\tSystem.arraycopy(this.methods, 0, newMethods = new AbstractMethodDeclaration[this.methods.length + 1], 1, this.methods.length);", "+\tSourceTypeBinding sourceType = this.binding;", "-\t\t\tthis.binding); //declaringClass", "+\t\t\tsourceType); //declaringClass", "-\tMethodBinding[] oldMethods = this.binding.methods(); // trigger sorting", "+\tMethodBinding[] oldMethods = sourceType.methods(); // trigger sorting", "-\tSystem.arraycopy(", "-\t\tthis.binding.methods(),", "-\t\t0,", "-\t\tnewMethods = new MethodBinding[oldMethods.length + 1],", "-\t\t1,", "-\t\toldMethods.length);", "-\tnewMethods[0] = constructor.binding; // position 0 is important, since if sorted, constructor will still be ahead", "-\tthis.binding.setMethods(newMethods);", "+\tSystem.arraycopy(oldMethods, 0, newMethods = new MethodBinding[oldMethods.length + 1], 1, oldMethods.length);", "+\tnewMethods[0] = constructor.binding; ", "+\tsourceType.tagBits &= ~(TagBits.AreMethodsComplete|TagBits.AreMethodsSorted); // still need to resort, since could be valid methods ahead (140643)", "+\tsourceType.setMethods(newMethods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cccc359fb05da7affceebd0318892389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "6912a8312907c3d5bb120e8d583e127394e2406d", "commitAfterChange": "582e47f10df1694e41302b9db53f26bb01547494", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "signatureAfterChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "diff": ["-\tMethodBinding[] oldMethods = sourceType.methods(); // trigger sorting", "-\tMethodBinding[] newMethods;", "-\tSystem.arraycopy(oldMethods, 0, newMethods = new MethodBinding[oldMethods.length + 1], 1, oldMethods.length);", "-\tnewMethods[0] = constructor.binding; ", "-\tsourceType.tagBits &= ~(TagBits.AreMethodsComplete|TagBits.AreMethodsSorted); // still need to resort, since could be valid methods ahead (140643)", "-\tsourceType.setMethods(newMethods);", "+\tMethodBinding[] methodBindings = sourceType.methods(); // trigger sorting", "+\tint length;", "+\tSystem.arraycopy(methodBindings, 0, methodBindings = new MethodBinding[(length = methodBindings.length) + 1], 1, length);", "+\tmethodBindings[0] = constructor.binding; ", "+\tif (++length > 1)", "+\t\tReferenceBinding.sortMethods(methodBindings, 0, length);\t// need to resort, since could be valid methods ahead (140643) - DOM needs eager sorting", "+\tsourceType.setMethods(methodBindings);"]}], "num": 5637}