{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5b04a243b9042f2622dfc9f19f46118", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0015077e1f7c25a3378c4c475971fb22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\tpublic void initialize()", "signatureAfterChange": " \t\tpublic void initialize(char[] source)", "diff": ["-\t\tpublic void initialize() {", "+\t\tpublic void initialize(char[] source) {", "+\t\t\tthis.unitSource = source;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225d5f4197bff4cad03a30764105383b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tRootInfo(IJavaProject project, IPath rootPath, char[][] exclusionPatterns, int entryKind)", "signatureAfterChange": " \t\tRootInfo(JavaProject project, IPath rootPath, char[][] inclusionPatterns, char[][] exclusionPatterns, int entryKind)", "diff": ["-\t\tRootInfo(IJavaProject project, IPath rootPath, char[][] exclusionPatterns, int entryKind) {", "+\t\tIPackageFragmentRoot root;", "+\t\tRootInfo(JavaProject project, IPath rootPath, char[][] inclusionPatterns, char[][] exclusionPatterns, int entryKind) {", "+\t\t\tthis.inclusionPatterns = inclusionPatterns;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2386434ab614729c28dcc3ebfcefbf1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ExceptionLabel.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public ExceptionLabel(CodeStream codeStream, TypeBinding exceptionType, TypeReference exceptionTypeReference)", "signatureAfterChange": "  public ExceptionLabel(CodeStream codeStream, TypeBinding exceptionType, TypeReference exceptionTypeReference, Annotation [] se7Annotations)", "diff": ["-public ExceptionLabel(CodeStream codeStream, TypeBinding exceptionType, TypeReference exceptionTypeReference) {", "+public ExceptionLabel(CodeStream codeStream, TypeBinding exceptionType, TypeReference exceptionTypeReference, Annotation [] se7Annotations) {", "+\tthis.se7Annotations = se7Annotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "324aaaed99cdfe3c8e541bad4d325e51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "commitAfterChange": "74ba53ab0437265c5342ec723f72d2aea81fd661", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public Scanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean checkNonExternalizedStringLiterals, boolean assertMode)", "signatureAfterChange": " public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tboolean assertMode, \tchar[] toDoTag)", "diff": ["+public Scanner(", "+\tboolean tokenizeComments, ", "+\tboolean tokenizeWhiteSpace, ", "+\tboolean checkNonExternalizedStringLiterals, ", "+\tboolean assertMode,", "+\tchar[] toDoTag) {", "+\t\t", "+\tthis.eofPosition = Integer.MAX_VALUE;", "+\tthis.tokenizeComments = tokenizeComments;", "+\tthis.tokenizeWhiteSpace = tokenizeWhiteSpace;", "+\tthis.checkNonExternalizedStringLiterals = checkNonExternalizedStringLiterals;", "+\tthis.assertMode = assertMode;", "+\tthis.toDoTag = toDoTag;", "-", "-public Scanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean checkNonExternalizedStringLiterals, boolean assertMode) {", "-\tthis.eofPosition = Integer.MAX_VALUE;", "-\tthis.tokenizeComments = tokenizeComments;", "-\tthis.tokenizeWhiteSpace = tokenizeWhiteSpace;", "-\tthis.checkNonExternalizedStringLiterals = checkNonExternalizedStringLiterals;", "-\tthis.assertMode = assertMode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "440db66559538280711d96fc49934d2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "a790cc2a1fe344908ce312351c9762d437d04475", "commitAfterChange": "96135df97393d0f8f1ee1a690487357a43849eda", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t\tpublic DefaultContainer(char[][] libPaths, boolean[] areExported)", "signatureAfterChange": " \t\t\tpublic DefaultContainer(char[][] libPaths, boolean[] areExported, String[] forbiddenReferences)", "diff": ["-\t\t\tpublic DefaultContainer(char[][] libPaths, boolean[] areExported) {", "+\t\t\tString[] forbiddenReferences;", "+\t\t\tpublic DefaultContainer(char[][] libPaths, boolean[] areExported, String[] forbiddenReferences) {", "+\t\t\t\tthis.forbiddenReferences = forbiddenReferences;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1afc843da39b5ab0303613bb6e00b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "commitAfterChange": "dd2d999bb92f1e106218a30e477eebe8f58b2e19", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic CaptureBinding18(ReferenceBinding contextType, char[] sourceName, int captureID, LookupEnvironment environment)", "signatureAfterChange": "  \tpublic CaptureBinding18(ReferenceBinding contextType, char[] sourceName, char[] originalName, int captureID, LookupEnvironment environment)", "diff": ["-\tpublic CaptureBinding18(ReferenceBinding contextType, char[] sourceName, int captureID, LookupEnvironment environment) {", "+\tpublic CaptureBinding18(ReferenceBinding contextType, char[] sourceName, char[] originalName, int captureID, LookupEnvironment environment) {", "+\t\tthis.originalName = originalName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7158f0581980396ba14dddb781f7ef10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "78c62e3a4157070f714848f4de312a55f14f5144", "commitAfterChange": "fb48e11da0ebe84c63fab7b3cb5afd39c0ba6101", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound)", "signatureAfterChange": "  \tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound, TypeBinding[] someOtherBounds)", "diff": ["-\tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound) {", "+\tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound, TypeBinding[] someOtherBounds) {", "+\t\tthis.otherBounds = someOtherBounds;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74ca2823f0932d921b524ecf168cdac2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/SourceFile.java", "commitBeforeChange": "96cbe57b16442df110d3b0ecde11c12b456820b8", "commitAfterChange": "16a26bc49f78acb9a7d0c10a9d6bedce29952111", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public SourceFile(String fileName)", "signatureAfterChange": "\r \r public SourceFile(String fileName, char[][] packageName)", "diff": ["-public SourceFile(String fileName) {\r", "+public SourceFile(String fileName, char[][] packageName) {\r", "+\tthis.packageName = packageName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afdd58070929982215a0acdcee9aca1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex.java", "commitBeforeChange": "6138f92fd5c7abeb22a4199219b18e2107d6edbc", "commitAfterChange": "7073418b816148d53c325cad45ff5b7e93774712", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic RemoveFolderFromIndex(IPath folderPath, IProject project, IndexManager manager)", "signatureAfterChange": "  \tpublic RemoveFolderFromIndex(IPath folderPath, char[][] exclusionPatterns, IProject project, IndexManager manager)", "diff": ["-\tpublic RemoveFolderFromIndex(IPath folderPath, IProject project, IndexManager manager) {", "+\tpublic RemoveFolderFromIndex(IPath folderPath, char[][] exclusionPatterns, IProject project, IndexManager manager) {", "+\t\tthis.exclusionPatterns = exclusionPatterns;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9debc5309f2378c17d180e72e1883f17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tboolean assertMode, \tchar[][] taskTags)", "signatureAfterChange": " public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tboolean assertMode, \tchar[][] taskTags, \tchar[][] taskPriorities)", "diff": ["-\tchar[][] taskTags) {", "+\tchar[][] taskTags,", "+\tchar[][] taskPriorities) {", "+\tthis.taskPriorities = taskPriorities;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af5dc0279fc605cd8bdd77a47e867133", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic RemoveFolderFromIndex(IPath folderPath, char[][] exclusionPatterns, IProject project, IndexManager manager)", "signatureAfterChange": "  \tpublic RemoveFolderFromIndex(IPath folderPath, char[][] inclusionPatterns, char[][] exclusionPatterns, IProject project, IndexManager manager)", "diff": ["-\tpublic RemoveFolderFromIndex(IPath folderPath, char[][] exclusionPatterns, IProject project, IndexManager manager) {", "+\tpublic RemoveFolderFromIndex(IPath folderPath, char[][] inclusionPatterns, char[][] exclusionPatterns, IProject project, IndexManager manager) {", "+\t\tthis.inclusionPatterns = inclusionPatterns;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcae9c261c949120410696430aabf641", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BasicCompilationUnit.java", "commitBeforeChange": "0c30c509f770e7e3596eca8733ca9dd62ac37742", "commitAfterChange": "e42deb57e6190d97c310bfecdaaf1fc0d7432060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r public BasicCompilationUnit(char[] contents, String fileName, String encoding)", "signatureAfterChange": "\r \t\r public BasicCompilationUnit(char[] contents, char[][] packageName, String fileName, String encoding)", "diff": ["-public BasicCompilationUnit(char[] contents, String fileName, String encoding) {\r", "+public BasicCompilationUnit(char[] contents, char[][] packageName, String fileName, String encoding) {\r", "+\tthis.packageName = packageName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc69e8e7b4102b6639855da853aea4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "9e38be072cbd6b6bac28faab5c373214de7387f2", "commitAfterChange": "c564e1960f12e31734dd5abe85ed6264f27cd484", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tboolean isExported)", "signatureAfterChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tString[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tboolean isExported)", "diff": ["+\t\tString[] exclusionPatterns,", "+\t\tthis.exclusionPatterns = exclusionPatterns;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1758b202d2b36a8b2a135f5acffc2f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/AbortCompilation.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public AbortCompilation(int problemId, String[] problemArguments)", "signatureAfterChange": "  \tpublic AbortCompilation(int problemId, String[] problemArguments, String[] messageArguments)", "diff": ["-}", "-public AbortCompilation(int problemId, String[] problemArguments) {", "-\tthis.problemId = problemId;", "-\tthis.problemArguments = problemArguments;", "-}", "+", "+\tpublic AbortCompilation(int problemId, String[] problemArguments, String[] messageArguments) {", "+\t", "+\t\tthis.problemId = problemId;", "+\t\tthis.problemArguments = problemArguments;", "+\t\tthis.messageArguments = messageArguments;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e504cb71b7ee598a0067f90d49bab810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "a3da1013b6fe549ad5c2ee5b7dc726eba38ff59e", "commitAfterChange": "30692448718de71df165cc52c018bee7df31a8fb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public HierarchyBinaryType(int modifiers, char[] qualification, char[] typeName, char[] enclosingTypeName, char typeSuffix)", "signatureAfterChange": " \t public HierarchyBinaryType(int modifiers, char[] qualification, char[] typeName, char[] enclosingTypeName, char[][] typeParameterSignatures, char typeSuffix)", "diff": ["-public HierarchyBinaryType(int modifiers, char[] qualification, char[] typeName, char[] enclosingTypeName, char typeSuffix){", "+public HierarchyBinaryType(int modifiers, char[] qualification, char[] typeName, char[] enclosingTypeName, char[][] typeParameterSignatures, char typeSuffix){", "+\tthis.typeParameterSignatures = typeParameterSignatures;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d54cb6c20a22fbf803739acc06143b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "commitAfterChange": "4bc0ba437bacd2b1f452f8c7e62bbdf6cd1994b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public TypeHierarchy(IType type, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException", "signatureAfterChange": " public TypeHierarchy(IType type, IJavaSearchScope scope, boolean computeSubtypes, ICompilationUnit[] workingCopies) throws JavaModelException", "diff": ["-public TypeHierarchy(IType type, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException {", "+public TypeHierarchy(IType type, IJavaSearchScope scope, boolean computeSubtypes, ICompilationUnit[] workingCopies) throws JavaModelException {", "+\tthis.workingCopies = workingCopies;"]}], "num": 55411}