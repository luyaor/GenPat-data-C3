{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdb32bfca47c2f831e30e3900f00f180", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7e9bb7419f13d4c7dce32aa0990ae9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "e60903fe9d1be9609e2d7018794b66ab39d77839", "commitAfterChange": "1cff9f79be5fd6fcc760af55214bca85f6dbdfe8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  protected void cleanOutputFolders() throws CoreException", "signatureAfterChange": "  protected void cleanOutputFolders() throws CoreException", "diff": ["-\tnext : for (int iSource = 0, length = sourceLocations.length; iSource < length; iSource++) {", "-\t\tClasspathMultiDirectory sourceLocation = sourceLocations[iSource];", "+\tnext : for (int i = 0, l = sourceLocations.length; i < l; i++) {", "+\t\tClasspathMultiDirectory sourceLocation = sourceLocations[i];", "-\t\t\tif (!visited.contains(outputFolder)){", "+\t\t\tif (!visited.contains(outputFolder)) {", "-\t\t\t\t\tfor (int iMember = 0, memberLength = members.length; iMember < memberLength; iMember++)", "-\t\t\t\t\t\tmembers[iMember].delete(IResource.FORCE, null);", "+\t\t\t\t\tfor (int j = 0, m = members.length; j < m; j++)", "+\t\t\t\t\t\tmembers[j].delete(IResource.FORCE, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b7b0c4c4d0f1d267d78bffe44e1b6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "68510f354df915bfae6d7cab257ea569b0a04f02", "commitAfterChange": "94922404a8030ddb0c95da3eb05c6a622d226ac7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  protected void cleanOutputFolders() throws CoreException", "signatureAfterChange": "  protected void cleanOutputFolders() throws CoreException", "diff": ["-\tnext : for (int i = 0, l = sourceLocations.length; i < l; i++) {", "-\t\tClasspathMultiDirectory sourceLocation = sourceLocations[i];", "+\tnext : for (int iSource = 0, length = sourceLocations.length; iSource < length; iSource++) {", "+\t\tClasspathMultiDirectory sourceLocation = sourceLocations[iSource];", "-\t\t\tif (visited.contains(outputFolder)) continue next;", "-\t\t\tvisited.add(outputFolder);", "-\t\t\tif (deleteAll) {", "-\t\t\t\tIResource[] members = outputFolder.members(); ", "-\t\t\t\tfor (int ii = 0, ll = members.length; ii < ll; ii++)", "-\t\t\t\t\tmembers[ii].delete(IResource.FORCE, null);", "-\t\t\t} else {", "-\t\t\t\toutputFolder.accept(", "-\t\t\t\t\tnew IResourceVisitor() {", "-\t\t\t\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\t\tif (JavaBuilder.CLASS_EXTENSION.equalsIgnoreCase(resource.getFileExtension()))", "-\t\t\t\t\t\t\t\t\tresource.delete(IResource.FORCE, null);", "-\t\t\t\t\t\t\t\treturn false;", "+\t\t\tif (!visited.contains(outputFolder)){", "+\t\t\t\tvisited.add(outputFolder);", "+\t\t\t\tif (deleteAll) {", "+\t\t\t\t\tIResource[] members = outputFolder.members(); ", "+\t\t\t\t\tfor (int iMember = 0, memberLength = members.length; iMember < memberLength; iMember++)", "+\t\t\t\t\t\tmembers[iMember].delete(IResource.FORCE, null);", "+\t\t\t\t} else {", "+\t\t\t\t\toutputFolder.accept(", "+\t\t\t\t\t\tnew IResourceVisitor() {", "+\t\t\t\t\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "+\t\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\t\tif (JavaBuilder.CLASS_EXTENSION.equalsIgnoreCase(resource.getFileExtension()))", "+\t\t\t\t\t\t\t\t\t\tresource.delete(IResource.FORCE, null);", "+\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t}", "-\t\t\t\t);", "+\t\t\t\t\t);", "+\t\t\t\t}"]}], "num": 10449}