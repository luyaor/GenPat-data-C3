{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7e411cb6085e4ee1e0e4e900f446fc3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3531d148911864a32ffc9b643eab3cd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic static void setOptions(Hashtable newOptions)", "signatureAfterChange": " \tpublic static void setOptions(Hashtable newOptions)", "diff": ["-\t\t", "+", "+\t\t// Backward compatibility", "+\t\tString[] propertyNames = preferences.propertyNames();", "+\t\tfor (int i = 0; i < propertyNames.length; i++){", "+\t\t\tString propertyName = propertyNames[i];", "+\t\t\t// bug 45112", "+\t\t\tif (OLD_COMPILER_PB_INVALID_ANNOTATION.equals(propertyName)) {", "+\t\t\t\tpreferences.setToDefault(OLD_COMPILER_PB_INVALID_ANNOTATION);", "+\t\t\t}", "+\t\t\telse if (OLD_COMPILER_PB_MISSING_ANNOTATION.equals(propertyName)) {", "+\t\t\t\tpreferences.setToDefault(OLD_COMPILER_PB_MISSING_ANNOTATION);", "+\t\t\t}", "+\t\t\t// end bug 45112", "+\t\t\t// bug 46854", "+\t\t\telse if (OLD_COMPILER_PB_MISSING_JAVADOC.equals(propertyName)) {", "+\t\t\t\tpreferences.setToDefault(OLD_COMPILER_PB_MISSING_JAVADOC);", "+\t\t\t}", "+\t\t\t// end bug 46854", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ec900c57aa0fd48353083de1e6b3a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map newOptions)", "diff": ["-\t\t", "+", "+\t\t// Backward compatibility", "+\t\tString[] propertyNames = preferences.propertyNames();", "+\t\tfor (int i = 0; i < propertyNames.length; i++){", "+\t\t\tString propertyName = propertyNames[i];", "+\t\t\t// bug 45112", "+\t\t\tif (JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION.equals(propertyName)) {", "+\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION);", "+\t\t\t}", "+\t\t\telse if (JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION.equals(propertyName)) {", "+\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION);", "+\t\t\t}", "+\t\t\t// end bug 45112", "+\t\t\t// bug 46854", "+\t\t\telse if (JavaCore.OLD_COMPILER_PB_MISSING_JAVADOC.equals(propertyName)) {", "+\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_MISSING_JAVADOC);", "+\t\t\t}", "+\t\t\t// end bug 46854", "+\t\t}", "+"]}], "num": 26175}