{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01601ba1c5bcb2e9e228d503631ba5dc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62b81c7c2765578cfacb0569013bb54e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void consumeExitVariableWithInitialization()", "signatureAfterChange": " protected void consumeExitVariableWithInitialization()", "diff": ["+\t} else if (assistNode != null && assistNode == variable.initialization) {", "+\t\tassistNodeParent = variable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5d09258e1ee0bb4b09aedc4fe61f4b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "3a5fcda14833c30c433021580cbaac3b7d8e9113", "commitAfterChange": "493886e55be15953b837fd1face3355603b485b8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["+\tif (searchPattern != null && limitTo == IJavaSearchConstants.REFERENCES) {", "+\t\tsearchPattern.focus = element;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e065d5a3faef659b24d76964a56a61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "c80004d70ebe07235571e96c3ea452dbc7ba5394", "commitAfterChange": "70dd884582455dcf661aaade70c8faff4213db3a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\t\tif (match == castType) {", "+ \t\tif (match == castType) {", "+\t\t\tif (match == null && castType.isBoundParameterizedType()) { // cast between unrelated types", "+\t\t\t\tthis.bits |= UnsafeCast;", "+\t\t\t\treturn true;", "+\t\t\t}"]}], "num": 34797}