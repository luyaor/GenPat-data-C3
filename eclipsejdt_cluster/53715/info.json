{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59411b7c089e12ea52184b749bf60455", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533b98b21f8276b409608da851c8cd42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "1252d6bab1f9d9bcd087d91685fabf29808e5435", "commitAfterChange": "fe80fb2f9320067d19b473914ec4b9e11a8d423c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected String getKey(IMethod method, boolean forceOpen) throws JavaModelException", "signatureAfterChange": " \t \tprotected String getKey(IMethod method, boolean forceOpen) throws JavaModelException", "diff": ["+\t\t// type parameters", "+\t\tif (forceOpen) {", "+\t\t\tITypeParameter[] typeParameters = method.getTypeParameters();", "+\t\t\tint length = typeParameters.length;", "+\t\t\tif (length > 0) {", "+\t\t\t\tkey.append('<');", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tITypeParameter typeParameter = typeParameters[i];", "+\t\t\t\t\tString[] bounds = typeParameter.getBounds();", "+\t\t\t\t\tint boundsLength = bounds.length;", "+\t\t\t\t\tchar[][] boundSignatures = new char[boundsLength][];", "+\t\t\t\t\tfor (int j = 0; j < boundsLength; j++) {", "+\t\t\t\t\t\tboundSignatures[j] = Signature.createCharArrayTypeSignature(bounds[j].toCharArray(), method.isBinary());", "+\t\t\t\t\t\tCharOperation.replace(boundSignatures[j], '.', '/');", "+\t\t\t\t\t}", "+\t\t\t\t\tchar[] sig = Signature.createTypeParameterSignature(typeParameter.getElementName().toCharArray(), boundSignatures);", "+\t\t\t\t\tkey.append(sig);", "+\t\t\t\t}", "+\t\t\t\tkey.append('>');", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7976a722f37b1a68eb13df46d2e6d52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "diff": ["-\t\t\t\t\tCharOperation.concatWith(superInterfaces[i].getTypeName(), '.'); ", "+\t\t\t\t\tCharOperation.concatWith(superInterfaces[i].getParameterizedTypeName(), '.'); ", "+\t\t\t}", "+\t\t}", "+\t\tTypeParameter[] typeParameters = typeDeclaration.typeParameters;", "+\t\tchar[][] typeParameterNames = null;", "+\t\tchar[][][] typeParameterBounds = null;", "+\t\tif (typeParameters != null) {", "+\t\t\tint typeParametersLength = typeParameters.length;", "+\t\t\ttypeParameterNames = new char[typeParametersLength][];", "+\t\t\ttypeParameterBounds = new char[typeParametersLength][][];", "+\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "+\t\t\t\ttypeParameterNames[i] = typeParameters[i].name;", "+\t\t\t\tTypeReference[] bounds = typeParameters[i].bounds;", "+\t\t\t\tif (bounds != null) {", "+\t\t\t\t\tint boundLength = bounds.length;", "+\t\t\t\t\tchar[][] boundNames = new char[boundLength][];", "+\t\t\t\t\tfor (int j = 0; j < boundLength; j++) {", "+\t\t\t\t\t\tboundNames[j] = ", "+\t\t\t\t\t\t\tCharOperation.concatWith(bounds[i].getParameterizedTypeName(), '.'); ", "+\t\t\t\t\t}", "+\t\t\t\t\ttypeParameterBounds[i] = boundNames;", "+\t\t\t\t}", "-\t\t\t\t\tinterfaceNames);", "+\t\t\t\t\tinterfaceNames,", "+\t\t\t\t\ttypeParameterNames,", "+\t\t\t\t\ttypeParameterBounds);", "-\t\t\t\t\t\tinterfaceNames); ", "+\t\t\t\t\t\tinterfaceNames,", "+\t\t\t\t\t\ttypeParameterNames,", "+\t\t\t\t\t\ttypeParameterBounds);", "-\t\t\t\t\t\tCharOperation.concatWith(superclass.getTypeName(), '.'), ", "-\t\t\t\t\t\tinterfaceNames); ", "+\t\t\t\t\t\tCharOperation.concatWith(superclass.getParameterizedTypeName(), '.'), ", "+\t\t\t\t\t\tinterfaceNames,", "+\t\t\t\t\t\ttypeParameterNames,", "+\t\t\t\t\t\ttypeParameterBounds);", "-\t\t\tsuperTypeNames[nestedTypeIndex++] = superclass == null ? JAVA_LANG_OBJECT : CharOperation.concatWith(superclass.getTypeName(), '.');", "+\t\t\tsuperTypeNames[nestedTypeIndex++] = superclass == null ? JAVA_LANG_OBJECT : CharOperation.concatWith(superclass.getParameterizedTypeName(), '.');"]}], "num": 53715}