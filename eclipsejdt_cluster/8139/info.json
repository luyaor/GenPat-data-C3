{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc328cd6db443d872a6daff24176ca5a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1296657a8ac2a35bf98e3573648ad672", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "0bb2d7a3d950dd3a71cdf28c102c99037d0f4e42", "commitAfterChange": "4d28b02e115dd3daa57fd616f72b21b49c14976a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private Binding findSingleStaticImport(char[][] compoundName)", "signatureAfterChange": " private Binding findSingleStaticImport(char[][] compoundName)", "diff": ["-\tif (field != null && field.isValidBinding() && field.isStatic() && field.canBeSeenBy(type, null, this))", "-\t\treturn field;", "+\tif (field != null) {", "+\t\tif (field.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\tfield = ((ProblemFieldBinding)field).closestMatch;", "+\t\t}", "+\t\tif (field.isStatic() && field.canBeSeenBy(type, null, this)) {", "+\t\t\treturn field;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48a0082ba70997a95dcfed95b5dae663", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "6eb70a41e0be0423bb1f7fafc15cb4df8d80eaea", "commitAfterChange": "5837c58022f758b07c41af8b2f2cf947269d4beb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private Binding findSingleStaticImport(char[][] compoundName)", "signatureAfterChange": " private Binding findSingleStaticImport(char[][] compoundName)", "diff": ["-\t\tif (field.problemId() == ProblemReasons.Ambiguous) {", "-\t\t\tfield = ((ProblemFieldBinding)field).closestMatch;", "-\t\t}", "-\t\tif (field.isStatic() && field.canBeSeenBy(type, null, this)) {", "+\t\tif (field.problemId() == ProblemReasons.Ambiguous && ((ProblemFieldBinding) field).closestMatch.isStatic())", "+\t\t\treturn field; // keep the ambiguous field instead of a possible method match", "+\t\tif (field.isValidBinding() && field.isStatic() && field.canBeSeenBy(type, null, this))", "-\t\t}"]}], "num": 8139}