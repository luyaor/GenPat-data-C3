{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "410a68185d9a9a12311751c9ad0dc726", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "502d7c4695ffda64f6e99fdec240b6ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "8c089351bfcdc5060e40ea383d5523348a6b2ae1", "commitAfterChange": "5cd6d554e47148a099f1dfe40c111b4b659cb120", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\t \tpublic void testBug66898b() throws JavaModelException, CoreException", "signatureAfterChange": "\t \tpublic void testBug66898b() throws JavaModelException, CoreException", "diff": ["-\t\tthis.utf8File.setCharset(encoding, null);", "-\t\tfinal String fileName = utf8File.getName();", "-\t\tfinal IPackageFragment srcFolder = getPackageFragment(\"Encoding\", \"src\", \"testUTF8\");", "+\t\tfinal IFile file = (IFile) this.encodingProject.findMember(\"src/testBug66898b/Test.java\");", "+\t\tfile.setCharset(encoding, null);", "+\t\tfinal String fileName = file.getName();", "+\t\tfinal IPackageFragment srcFolder = getPackageFragment(\"Encoding\", \"src\", \"testBug66898b\");", "-", "-\t\t// Copy file", "-\t\tIWorkspaceRunnable copy = new IWorkspaceRunnable() {", "-\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "-\t\t\t\tICompilationUnit cu = getCompilationUnit(utf8File.getFullPath().toString());", "-\t\t\t\tcu.copy(tmpFolder, null, null, true, null);", "-\t\t\t\tcu.close(); // purge buffer contents from cache", "-\t\t\t\tICompilationUnit dest = tmpFolder.getCompilationUnit(fileName);", "-\t\t\t\tIFile destFile = (IFile) dest.getUnderlyingResource();", "-\t\t\t\tassertEquals(\"Copied file should keep encoding\", encoding, destFile.getCharset());", "-\t\t", "-\t\t\t\t// Get source and compare with file contents", "-\t\t\t\tcompareContents(dest, encoding);", "-\t\t\t}", "-\t\t};", "-\t\tJavaCore.run(copy, null);", "-", "-\t\t// Rename file", "-\t\tIWorkspaceRunnable rename = new IWorkspaceRunnable() {", "-\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "-\t\t\t\tICompilationUnit cu = tmpFolder.getCompilationUnit(fileName);", "-\t\t\t\tcu.rename(\"Renamed.java\", true, null);", "-\t\t\t\tcu.close(); // purge buffer contents from cache", "-\t\t\t\tICompilationUnit ren = tmpFolder.getCompilationUnit(\"Renamed.java\");", "-\t\t\t\tIFile renFile = (IFile) ren.getUnderlyingResource();", "-\t\t\t\tassertEquals(\"Renamed file should keep encoding\", encoding, renFile.getCharset());", "-\t\t", "-\t\t\t\t// Get source and compare with file contents", "-\t\t\t\tcompareContents(ren, encoding);", "-\t\t\t}", "-\t\t};", "-\t\tJavaCore.run(rename, null);", "-", "-\t\t// Move file", "-\t\tIWorkspaceRunnable move = new IWorkspaceRunnable() {", "-\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "-\t\t\t\tICompilationUnit cu = tmpFolder.getCompilationUnit(\"Renamed.java\");", "-\t\t\t\tcu.move(srcFolder, null, null, true, null);", "-\t\t\t\tcu.close(); // purge buffer contents from cache", "-\t\t\t\tICompilationUnit moved = srcFolder.getCompilationUnit(\"Renamed.java\");", "-\t\t\t\tIFile movedFile = (IFile) moved.getUnderlyingResource();", "-\t\t\t\tassertEquals(\"Renamed file should keep encoding\", encoding, movedFile.getCharset());", "-\t\t", "-\t\t\t\t// Get source and compare with file contents", "-\t\t\t\tcompareContents(moved, encoding);", "-\t\t\t}", "-\t\t};", "-\t\tJavaCore.run(move, null);", "-\t\t", "-\t\t// Delete file", "-\t\tICompilationUnit cu = srcFolder.getCompilationUnit(\"Renamed.java\");", "-\t\tcu.delete(true, null);", "-\t\tdeleteFolder(\"/Encoding/src/tmp\");", "+\t", "+\t\ttry {", "+\t\t\t// Copy file", "+\t\t\tIWorkspaceRunnable copy = new IWorkspaceRunnable() {", "+\t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\t\tICompilationUnit cu = getCompilationUnit(file.getFullPath().toString());", "+\t\t\t\t\tcu.copy(tmpFolder, null, null, true, null);", "+\t\t\t\t\tcu.close(); // purge buffer contents from cache", "+\t\t\t\t\tICompilationUnit dest = tmpFolder.getCompilationUnit(fileName);", "+\t\t\t\t\tIFile destFile = (IFile) dest.getUnderlyingResource();", "+\t\t\t\t\tassertEquals(\"Copied file should keep encoding\", encoding, destFile.getCharset());", "+\t\t\t", "+\t\t\t\t\t// Get source and compare with file contents", "+\t\t\t\t\tcompareContents(dest, encoding);", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\tJavaCore.run(copy, null);", "+\t", "+\t\t\t// Rename file", "+\t\t\tIWorkspaceRunnable rename = new IWorkspaceRunnable() {", "+\t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\t\tICompilationUnit cu = tmpFolder.getCompilationUnit(fileName);", "+\t\t\t\t\tcu.rename(\"Renamed.java\", true, null);", "+\t\t\t\t\tcu.close(); // purge buffer contents from cache", "+\t\t\t\t\tICompilationUnit ren = tmpFolder.getCompilationUnit(\"Renamed.java\");", "+\t\t\t\t\tIFile renFile = (IFile) ren.getUnderlyingResource();", "+\t\t\t\t\tassertEquals(\"Renamed file should keep encoding\", encoding, renFile.getCharset());", "+\t\t\t", "+\t\t\t\t\t// Get source and compare with file contents", "+\t\t\t\t\tcompareContents(ren, encoding);", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\tJavaCore.run(rename, null);", "+\t", "+\t\t\t// Move file", "+\t\t\tIWorkspaceRunnable move = new IWorkspaceRunnable() {", "+\t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\t\tICompilationUnit cu = tmpFolder.getCompilationUnit(\"Renamed.java\");", "+\t\t\t\t\tcu.move(srcFolder, null, null, true, null);", "+\t\t\t\t\tcu.close(); // purge buffer contents from cache", "+\t\t\t\t\tICompilationUnit moved = srcFolder.getCompilationUnit(\"Renamed.java\");", "+\t\t\t\t\tIFile movedFile = (IFile) moved.getUnderlyingResource();", "+\t\t\t\t\tassertEquals(\"Renamed file should keep encoding\", encoding, movedFile.getCharset());", "+\t\t\t", "+\t\t\t\t\t// Get source and compare with file contents", "+\t\t\t\t\tcompareContents(moved, encoding);", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\tJavaCore.run(move, null);", "+\t\t}", "+\t\tfinally {", "+\t\t\t// Delete temporary file and folder", "+\t\t\tICompilationUnit cu = srcFolder.getCompilationUnit(\"Renamed.java\");", "+\t\t\tif (cu.exists()) cu.delete(true, null);", "+\t\t\tdeleteFolder(\"/Encoding/src/tmp\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a29c6a9da85773891e86b4663d4888", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "8c089351bfcdc5060e40ea383d5523348a6b2ae1", "commitAfterChange": "5cd6d554e47148a099f1dfe40c111b4b659cb120", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testBug66898() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void testBug66898() throws JavaModelException, CoreException", "diff": ["-\t\tthis.utf8File.setCharset(encoding, null);", "-\t\tString fileName = this.utf8File.getName();", "-\t\tICompilationUnit cu = getCompilationUnit(this.utf8File.getFullPath().toString());", "+\t\tIFile file = (IFile) this.encodingProject.findMember(\"src/testBug66898/Test.java\");", "+\t\tfile.setCharset(encoding, null);", "+\t\tString fileName = file.getName();", "+\t\tICompilationUnit cu = getCompilationUnit(file.getFullPath().toString());", "-\t\t// Move file", "-\t\tcu.move(packFrag, null, null, false, null);", "-\t\tICompilationUnit destSource = packFrag.getCompilationUnit(fileName);", "-\t\tIFile destFile = (IFile) destSource.getUnderlyingResource();", "-\t\tassertEquals(\"Moved file should keep encoding\", encoding, destFile.getCharset());", "-", "-\t\t// Get source and compare with file contents", "-\t\tcompareContents(destSource, encoding);", "-\t\t", "-\t\t// Rename file", "-\t\tdestSource.rename(\"TestUTF8.java\", false, null);", "-\t\tICompilationUnit renamedSource = packFrag.getCompilationUnit(\"TestUTF8.java\");", "-\t\tIFile renamedFile = (IFile) renamedSource.getUnderlyingResource();", "-\t\tassertEquals(\"Moved file should keep encoding\", encoding, renamedFile.getCharset());", "-\t\t", "-\t\t// Compare contents again", "-\t\tcompareContents(renamedSource, encoding);", "-\t\t", "-\t\t// Move back ", "-\t\trenamedFile.move(this.utf8File.getFullPath(), false, null);", "-\t\tassertEquals(\"Moved file should keep encoding\", encoding, this.utf8File.getCharset());", "-\t\tdeleteFolder(\"/Encoding/src/tmp\");", "+\t\ttry {", "+\t\t\t// Move file", "+\t\t\tcu.move(packFrag, null, null, false, null);", "+\t\t\tICompilationUnit destSource = packFrag.getCompilationUnit(fileName);", "+\t\t\tIFile destFile = (IFile) destSource.getUnderlyingResource();", "+\t\t\tassertEquals(\"Moved file should keep encoding\", encoding, destFile.getCharset());", "+\t", "+\t\t\t// Get source and compare with file contents", "+\t\t\tcompareContents(destSource, encoding);", "+\t\t\t", "+\t\t\t// Rename file", "+\t\t\tdestSource.rename(\"TestUTF8.java\", false, null);", "+\t\t\tICompilationUnit renamedSource = packFrag.getCompilationUnit(\"TestUTF8.java\");", "+\t\t\tIFile renamedFile = (IFile) renamedSource.getUnderlyingResource();", "+\t\t\tassertEquals(\"Moved file should keep encoding\", encoding, renamedFile.getCharset());", "+\t\t\t", "+\t\t\t// Compare contents again", "+\t\t\tcompareContents(renamedSource, encoding);", "+\t\t}", "+\t\tfinally {", "+\t\t\t// Delete temporary folder", "+\t\t\t//renamedFile.move(this.utf8File.getFullPath(), false, null);", "+\t\t\t//assertEquals(\"Moved file should keep encoding\", encoding, this.utf8File.getCharset());", "+\t\t\tdeleteFolder(\"/Encoding/src/tmp\");", "+\t\t}"]}], "num": 70610}