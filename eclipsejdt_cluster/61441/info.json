{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "516028290eee20c184fb209353aa7adf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41900d3006835864dcc3361f74b011cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": " public synchronized IIndex recreateIndex(IPath path)", "signatureAfterChange": " public synchronized Index recreateIndex(IPath path)", "diff": ["-public synchronized IIndex recreateIndex(IPath path) {", "+public synchronized Index recreateIndex(IPath path) {", "-\t\tIIndex index = (IIndex) this.indexes.get(path);", "+\t\tIndex index = (Index) this.indexes.get(path);", "-\t\tindex = new Index(indexPath, \"Index for \" + path.toOSString(), false /*reuse index file*/); //$NON-NLS-1$", "+\t\tindex = new org.eclipse.jdt.internal.core.index.impl.IndexImpl(indexPath, \"Index for \" + path.toOSString(), false /*reuse index file*/); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "448115763a379d9e34a795f490f5e820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing) {", "+public synchronized Index getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing) {", "-\tIIndex index = (IIndex) indexes.get(path);", "+\tIndex index = (Index) indexes.get(path);", "-\t\t\t\t\tindex = new Index(indexName, \"Index for \" + path.toOSString(), true /*reuse index file*/); //$NON-NLS-1$", "+\t\t\t\t\tindex = new org.eclipse.jdt.internal.core.index.impl.IndexImpl(indexName, \"Index for \" + path.toOSString(), true /*reuse index file*/); //$NON-NLS-1$", "-\t\t\t\tindex = new Index(indexName, \"Index for \" + path.toOSString(), false /*do not reuse index file*/); //$NON-NLS-1$", "+\t\t\t\tindex = new org.eclipse.jdt.internal.core.index.impl.IndexImpl(indexName, \"Index for \" + path.toOSString(), false /*do not reuse index file*/); //$NON-NLS-1$"]}], "num": 61441}