{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6849a8603945bf04cd08379b06146bca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33f5ce38c9a9036f586d66c5eaa8840a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0c8d3633f61f58e086a6550fc6a80c1ca119e1ce", "commitAfterChange": "b38764da707cc96f96750b2abc87c30eb0ae9f0a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic synchronized PerProjectInfo getPerProjectInfo(IProject project, boolean create)", "signatureAfterChange": " \tpublic PerProjectInfo getPerProjectInfo(IProject project, boolean create)", "diff": ["-\tpublic synchronized PerProjectInfo getPerProjectInfo(IProject project, boolean create) {", "-\t\tPerProjectInfo info= (PerProjectInfo) perProjectInfo.get(project);", "-\t\tif (info == null && create) {", "-\t\t\tinfo= new PerProjectInfo(project);", "-\t\t\tperProjectInfo.put(project, info);", "+\tpublic PerProjectInfo getPerProjectInfo(IProject project, boolean create) {", "+\t\tsynchronized(perProjectInfo) { // use the perProjectInfo collection as its own lock", "+\t\t\tPerProjectInfo info= (PerProjectInfo) perProjectInfo.get(project);", "+\t\t\tif (info == null && create) {", "+\t\t\t\tinfo= new PerProjectInfo(project);", "+\t\t\t\tperProjectInfo.put(project, info);", "+\t\t\t}", "+\t\t\treturn info;", "-\t\treturn info;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c529821908e82f704a8ebb8073a5a59c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic synchronized ProjectUpdateInfo[] removeAllProjectUpdates()", "signatureAfterChange": " \t \tpublic synchronized ProjectReferenceChange[] removeProjectReferenceChanges()", "diff": ["-\tpublic synchronized ProjectUpdateInfo[] removeAllProjectUpdates() {", "-\t    int length = this.projectUpdates.size();", "-\t    ProjectUpdateInfo[]  updates = new ProjectUpdateInfo[length];", "-\t    this.projectUpdates.values().toArray(updates);", "-\t    this.projectUpdates.clear();", "+\t", "+\tpublic synchronized ProjectReferenceChange[] removeProjectReferenceChanges() {", "+\t    int length = this.projectReferenceChanges.size();", "+\t    if (length == 0) return null;", "+\t    ProjectReferenceChange[]  updates = new ProjectReferenceChange[length];", "+\t    this.projectReferenceChanges.values().toArray(updates);", "+\t    this.projectReferenceChanges.clear();"]}], "num": 58574}