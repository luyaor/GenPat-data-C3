{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9d082866e4ae0bbef4a1288a38ccc07", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c45a914b6eede4af08dd094903a4e63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9f04a37d9dedc649b09302b2f366cc2c19a3e4e8", "commitAfterChange": "e03f3a3c4444937d4c741427780492d0c2a43aeb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \t\r \tprivate AbstractMethodDeclaration parseSnippetMethod(char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": "\r \t\r \tprivate Initializer parseSnippeInitializer(char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\r", "-\tprivate AbstractMethodDeclaration parseSnippetMethod(char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic){\r", "+\tprivate Initializer parseSnippeInitializer(char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic){\r", "-\t\tprefix.append(\"public class FakeType {\\npublic \"); //$NON-NLS-1$\r", "+\t\tprefix.append(\"public class FakeType {\\n \"); //$NON-NLS-1$\r", "-\t\t\tprefix.append(\"static\"); //$NON-NLS-1$\r", "+\t\t\tprefix.append(\"static \"); //$NON-NLS-1$\r", "-\t\tprefix.append(\" void fakeMethod(){\\n\"); //$NON-NLS-1$\r", "+\t\tprefix.append(\"{\\n\"); //$NON-NLS-1$\r", "-\t\tAbstractMethodDeclaration fakeMethod = fakeAST.types[0].methods[1];\r", "-\t\tfakeMethod.selector[0] = ' ';\r", "-\t\treturn fakeMethod;\r", "+\t\treturn (Initializer)fakeAST.types[0].fields[0];\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87daf300c0343b03f2ecdb798362c72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9f04a37d9dedc649b09302b2f366cc2c19a3e4e8", "commitAfterChange": "e03f3a3c4444937d4c741427780492d0c2a43aeb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \t\r \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": "\r \t\r \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\t\tAbstractMethodDeclaration fakeMethod = parseSnippetMethod(snippet, position, localVariableTypeNames, localVariableNames, localVariableModifiers, isStatic);\r", "+\t\t\tInitializer fakeInitializer = parseSnippeInitializer(snippet, position, localVariableTypeNames, localVariableNames, localVariableModifiers, isStatic);\r", "-\t\t\tAbstractMethodDeclaration[] oldMethods = typeDeclaration.methods;\r", "-\t\t\tAbstractMethodDeclaration[] newMethods = new AbstractMethodDeclaration[oldMethods.length + 1];\r", "-\t\t\tSystem.arraycopy(oldMethods, 0, newMethods, 0, oldMethods.length);\r", "-\t\t\tnewMethods[oldMethods.length] = fakeMethod;\r", "-\t\t\ttypeDeclaration.methods = newMethods;\r", "+\t\t\tFieldDeclaration[] oldFields = typeDeclaration.fields;\r", "+\t\t\tFieldDeclaration[] newFields = new FieldDeclaration[oldFields.length + 1];\r", "+\t\t\tSystem.arraycopy(oldFields, 0, newFields, 0, oldFields.length);\r", "+\t\t\tnewFields[oldFields.length] = fakeInitializer;\r", "+\t\t\ttypeDeclaration.fields = newFields;\r"]}], "num": 64929}