{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8709d7bf12b3c133f6e3c72686a7a278", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7929c0c3916fde5801cab72f7db290df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "aa840c8bcdfb26adabb4ef3914d3bd09d15784c4", "commitAfterChange": "c1f9cc390c170609267b76bee97dfba81631d517", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\tif (this.binding != null && !this.binding.isUsed() && (this.binding.isPrivate() || (this.binding.declaringClass.tagBits & (TagBits.IsAnonymousType|TagBits.IsLocalType)) == TagBits.IsLocalType)) {", "-\t\tif (!classScope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "-\t\t\tthis.scope.problemReporter().unusedPrivateConstructor(this);", "+\tcheckUnused: {", "+\t\tMethodBinding constructorBinding;", "+\t\tif ((constructorBinding = this.binding) == null) break checkUnused;", "+\t\tif (this.isDefaultConstructor) break checkUnused;", "+\t\tif (constructorBinding.isUsed()) break checkUnused;", "+\t\tif (constructorBinding.isPrivate()) {", "+\t\t\tif ((this.binding.declaringClass.tagBits & TagBits.HasNonPrivateConstructor) == 0)", "+\t\t\t\tbreak checkUnused; // tolerate as known pattern to block instantiation", "+\t\t} else if ((this.binding.declaringClass.tagBits & (TagBits.IsAnonymousType|TagBits.IsLocalType)) != TagBits.IsLocalType) {", "+\t\t\tbreak checkUnused;", "+\t\t// complain unused", "+\t\tthis.scope.problemReporter().unusedPrivateConstructor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8bdc016bc7f514c1a9f6f629e096bcd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "8d8cc91b7aba4777ee9418a3cef6e1e163bfbf27", "commitAfterChange": "d0534e0376f1634b8fe35d19dde78d7433440f37", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\t} else if ((this.binding.declaringClass.tagBits & (TagBits.IsAnonymousType|TagBits.IsLocalType)) != TagBits.IsLocalType) {", "+\t\t} else if (!constructorBinding.isOrEnclosedByPrivateType()) {", "+ \t\t}", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=264991, Don't complain about this", "+\t\t// constructor being unused if the base class doesn't have a no-arg constructor.", "+\t\t// See that a seemingly unused constructor that chains to another constructor with a", "+\t\t// this(...) can be flagged as being unused without hesitation.", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=265142", "+\t\tif (this.constructorCall.accessMode != ExplicitConstructorCall.This) {", "+\t\t\tReferenceBinding superClass = constructorBinding.declaringClass.superclass();", "+\t\t\tif (superClass == null)", "+\t\t\t\tbreak checkUnused;", "+\t\t\t// see if there is a no-arg super constructor", "+\t\t\tMethodBinding methodBinding = superClass.getExactConstructor(Binding.NO_PARAMETERS);", "+\t\t\tif (methodBinding == null)", "+\t\t\t\tbreak checkUnused;", "+\t\t\tif (!methodBinding.canBeSeenBy(SuperReference.implicitSuperConstructorCall(), this.scope))", "+\t\t\t\tbreak checkUnused;", "+\t\t\t// otherwise default super constructor exists, so go ahead and complain unused."]}], "num": 14424}