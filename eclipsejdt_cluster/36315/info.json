{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3118ec1b7b0f128310047de0f04d0244", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ae06cc81c793702ca978f4870c3016c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "diff": ["+\t\t\tJavaProject javaProject = null;\r", "-\t\t\t\tJavaProject javaProject = (JavaProject) openable.getJavaProject();\r", "+\t\t\t\tjavaProject = (JavaProject) openable.getJavaProject();\r", "-\t\t\t\t\t\tthis.locateMatches();\r", "+\t\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t\tthis.locateMatches();\r", "+\t\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t\t\tif (e.getException() instanceof CoreException) {\r", "+\t\t\t\t\t\t\t\tthrow e;\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t// problem with classpath in this project -> skip it\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "-\t\t\tthis.locateMatches();\r", "+\t\t\ttry {\r", "+\t\t\t\tthis.locateMatches();\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\tif (e.getException() instanceof CoreException) {\r", "+\t\t\t\t\tthrow e;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\t// problem with classpath in last project -> skip it\r", "+\t\t\t\t}\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66458509480093eac68b9f8e7889af0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "917b34c1f7a37af6e7b13390e833b19783e10d19", "commitAfterChange": "2a40159dff47fb0e9026a9eb6e050f6d14cc5873", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "signatureAfterChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "diff": ["+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();\r", "+\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, jar.getPath(), true);\r", "-\t\t\t\tZipFile zipFile = null;\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tzipFile = jar.getJar();\r", "-\t\t\t\t\tzipFileName = zipFile.getName();\r", "-\t\t\t\t} catch (CoreException e) {\r", "-\t\t\t\t\tthrow new JavaModelException(e);\r", "-\t\t\t\t} finally {\r", "-\t\t\t\t\tif (zipFile != null) {\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tzipFile.close();\r", "-\t\t\t\t\t\t} catch (IOException e) {\r", "-\t\t\t\t\t\t\t// ignore \r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "+\t\t\t\tif (target instanceof IFile) {\r", "+\t\t\t\t\tzipFileName = ((IFile)target).getLocation().toOSString();\r", "+\t\t\t\t} else if (target instanceof File) {\r", "+\t\t\t\t\tzipFileName = ((File)target).getPath();\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tcontinue; // unknown target\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8473ca4dfda462385f5998bc87a8c8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic char[] findSource(IType type, IBinaryType info)", "signatureAfterChange": " \tpublic char[] findSource(IType type, IBinaryType info)", "diff": ["-\t\t//add the root path if specified", "-\t\tif (!this.rootPath.equals(IPackageFragmentRoot.DEFAULT_PACKAGEROOT_PATH)) {", "+\t\tif (this.rootPath != null && !this.rootPath.equals(IPackageFragmentRoot.DEFAULT_PACKAGEROOT_PATH)) {", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\t\tzip = getZip();", "+\t\t\t\tzip = manager.getZipFile(this.sourcePath);", "-\t\t\t\t\tbyte[] bytes = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tbytes = Util.getZipEntryByteContent(entry, zip);", "-\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t}", "-\t\t\t\t\tif (bytes != null) {", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tsource = Util.bytesToChar(bytes, this.encoding);", "-\t\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\t\tsource = null;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\tsource = readSource(entry, zip);", "-\t\t\t\tJavaModelManager.getJavaModelManager().closeZipFile(zip);", "+\t\t\t\tmanager.closeZipFile(zip); // handle null case"]}], "num": 36315}