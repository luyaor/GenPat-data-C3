{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a41db45d50008c6484eea805f7b7eda0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177706f9c2c15c15dc629db3fe6608c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7cdc478cdd8ecd6517119ed517a89b2200812e0f", "commitAfterChange": "8a633d56819c44af45234d7a3760b2d36e5276ed", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": " public void test101()", "signatureAfterChange": " public void test101()", "diff": ["-\t\t\t\"Method getX(List<Integer>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method getX(List<Integer>) is the same as another method in type X\\n\" +", "-\t\t\t\"Method getX(List<String>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method getX(List<String>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method getX(List<Integer>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method getX(List<Integer>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method getX(List<String>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method getX(List<String>) is the same as another method in type X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4885d8a164533d5885827c0aab8a0244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "4cdb299c3f5b0de082f2ec44442dd8762f2b077f", "commitAfterChange": "146b201b76577d8a0a09d69f0ce4d90e5c5e3978", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  private SimpleLookupTable findDeltas()", "signatureAfterChange": "  private SimpleLookupTable findDeltas()", "diff": ["-\t\t\t\tSystem.out.println(\"Found source delta for: \" + this.currentProject.getName()); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"JavaBuilder: Found source delta for: \" + this.currentProject.getName()); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"Missing delta for: \" + this.currentProject.getName()); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"JavaBuilder: Missing delta for: \" + this.currentProject.getName()); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(\"Found binary delta for: \" + p.getName()); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.println(\"JavaBuilder: Found binary delta for: \" + p.getName()); //$NON-NLS-1$", "-\t\t\t\t\tSystem.out.println(\"Missing delta for: \" + p.getName());\t //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.println(\"JavaBuilder: Missing delta for: \" + p.getName());\t //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bb69a6f2806c5319267305f56206493", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  \tpublic void test056()", "signatureAfterChange": "  \tpublic void test056()", "diff": ["-\t\t\t\"     9  invokestatic X.boom()Z [27]\\n\" + ", "+\t\t\t\"     9  invokestatic X.boom() : boolean  [27]\\n\" + ", "-\t\t\t\"    15  getstatic java/lang/System.out Ljava/io/PrintStream; [33]\\n\" + ", "+\t\t\t\"    15  getstatic java.lang.System.out : java.io.PrintStream [33]\\n\" + ", "-\t\t\t\"    19  invokevirtual java/io/PrintStream.println(I)V [39]\\n\" + ", "+\t\t\t\"    19  invokevirtual java.io.PrintStream.println(int) : void  [39]\\n\" + ", "-\t\t\t\"        [pc: 3, pc: 23] local: i index: 0 type: I\\n\";", "+\t\t\t\"        [pc: 3, pc: 23] local: i index: 0 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6baaa0ab7092f2d9f842622ef9cdd2dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void testBug83127e()", "signatureAfterChange": " \tpublic void testBug83127e()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85cf511d0c47923f5d56adc1bd5bd680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void testBug54962() throws CoreException", "signatureAfterChange": " \tpublic void testBug54962() throws CoreException", "diff": ["-\t\t\t\t\"src/j6/Bug54962.java j6.Bug54962 [ * @see \ufffd|j6|\ufffd] EXACT_MATCH INSIDE_JAVADOC\\n\" +", "-\t\t\t\t\"src/j6/Bug54962.java j6.Bug54962 [ * @see \ufffd|j6|\ufffd.BUG54962] EXACT_MATCH INSIDE_JAVADOC\\n\" +", "-\t\t\t\t\"src/j6/Bug54962.java j6.Bug54962 [ * @see \ufffd|j6|\ufffd.Bug54962] EXACT_MATCH INSIDE_JAVADOC\\n\" +", "-\t\t\t\t\"src/j7/qua/li/fied/Bug54962a.java [import \ufffd|j6|\ufffd.Bug54962;] EXACT_MATCH OUTSIDE_JAVADOC\",", "+\t\t\t\t\"src/j6/Bug54962.java j6.Bug54962 [ * @see !|j6|!] EXACT_MATCH INSIDE_JAVADOC\\n\" +", "+\t\t\t\t\"src/j6/Bug54962.java j6.Bug54962 [ * @see !|j6|!.BUG54962] EXACT_MATCH INSIDE_JAVADOC\\n\" +", "+\t\t\t\t\"src/j6/Bug54962.java j6.Bug54962 [ * @see !|j6|!.Bug54962] EXACT_MATCH INSIDE_JAVADOC\\n\" +", "+\t\t\t\t\"src/j7/qua/li/fied/Bug54962a.java [import !|j6|!.Bug54962;] EXACT_MATCH OUTSIDE_JAVADOC\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a22edf83af0b8d04839c57f78100e68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testBug83127f()", "signatureAfterChange": " \tpublic void testBug83127f()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5 or greater\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" + "]}], "num": 14108}