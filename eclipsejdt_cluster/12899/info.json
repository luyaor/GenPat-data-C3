{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0af971efd97fa1673ad1a197a0bf09cf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e9d7b35b67a0a68ceaddd85dfa4bcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "79850b9241ef6ac63f9341f1e04e68f2cb70e4c3", "commitAfterChange": "ed03b97e41cec71a1f276a24a6c89d537dde57f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static IStatus validatePackageName(String name)", "signatureAfterChange": " \tpublic static IStatus validatePackageName(String name)", "diff": ["+\t\tIStatus warningStatus = null;", "-\t\t\t\treturn new Status(IStatus.WARNING, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.package.uppercaseName\"), null); //$NON-NLS-1$", "+\t\t\t\tif (warningStatus == null) {", "+\t\t\t\t\twarningStatus = new Status(IStatus.WARNING, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.package.uppercaseName\"), null); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\tif (warningStatus != null) {", "+\t\t\treturn warningStatus;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24e1c43f6846ebb0f59e6a969c2bfc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "819bb62f16446e9a1757b33db7d63dd4b15a4d8f", "commitAfterChange": "187128198001f088f437c77fd90e7d0733035368", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic MethodBinding getExactConstructor(TypeBinding[] argumentTypes)", "signatureAfterChange": " \tpublic MethodBinding getExactConstructor(TypeBinding[] argumentTypes)", "diff": ["+\t\tMethodBinding match = null;", "-\t\t\t\t\t\treturn method;", "+\t\t\t\t\t\tif (match != null) return null; // collision case", "+\t\t\t\t\t\tmatch = method;", "-\t\t\t\t\t\treturn method;", "+\t\t\t\t\t\tif (match != null) return null; // collision case", "+\t\t\t\t\t\tmatch = method;", "-\t\treturn null;", "+\t\treturn match;"]}], "num": 12899}