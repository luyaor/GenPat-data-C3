{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "242b7d9fbfa1f2b85169f10bcd6d61bd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21552d1d7708d8dfa9c6d4f7675f8ef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "8565022490f4eb0a47445253d428acd415a93871", "commitAfterChange": "13d2f617e2307a81f1ff967feb328a472a058ad0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["+\t\t\t\t\tthis.assistNodeParent = parentNode;", "+\t\t\t\t}", "+\t\t\t\tbreak nextElement;", "+\t\t\tcase K_CAST_STATEMENT :", "+\t\t\t\tExpression castType;", "+\t\t\t\tif(this.expressionPtr > 0", "+\t\t\t\t\t&& ((castType = this.expressionStack[this.expressionPtr-1]) instanceof TypeReference", "+\t\t\t\t\t\t|| castType instanceof NameReference)) {", "+\t\t\t\t\tCastExpression cast = new CastExpression(expression, getTypeReference(castType));", "+\t\t\t\t\tcast.sourceStart = castType.sourceStart;", "+\t\t\t\t\tcast.sourceEnd= expression.sourceEnd;", "+\t\t\t\t\tparentNode = cast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d904420592eb265ec09e4d5e7409071c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "fcc72e46b744ea79a152e24a7ffac0f0901b7400", "commitAfterChange": "06a3d951c7ec6b39762293a6177f305ce0f3f22c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic ITypeBinding[] getInterfaces()", "signatureAfterChange": "  \tpublic ITypeBinding[] getInterfaces()", "diff": ["+\t\tif (this.interfaces != null) {", "+\t\t\treturn this.interfaces;", "+\t\t}", "-\t\t\treturn NO_TYPE_BINDINGS;", "+\t\t\treturn this.interfaces = NO_TYPE_BINDINGS;", "-\t\t\t\treturn NO_TYPE_BINDINGS;", "+\t\t\t\treturn this.interfaces = NO_TYPE_BINDINGS;", "-\t\tReferenceBinding[] interfaces = null;", "+\t\tReferenceBinding[] internalInterfaces = null;", "-\t\t\tinterfaces = referenceBinding.superInterfaces();", "+\t\t\tinternalInterfaces = referenceBinding.superInterfaces();", "-\t\tif (interfaces == null) {", "-\t\t\treturn NO_TYPE_BINDINGS;", "-\t\t}", "-\t\tint length = interfaces.length;", "-\t\tif (length == 0) {", "-\t\t\treturn NO_TYPE_BINDINGS;", "-\t\t} else {", "+\t\tint length = internalInterfaces == null ? 0 : internalInterfaces.length;", "+\t\tif (length != 0) {", "+\t\t\tint interfacesCounter = 0;", "-\t\t\t\tITypeBinding typeBinding = this.resolver.getTypeBinding(interfaces[i]);", "+\t\t\t\tITypeBinding typeBinding = this.resolver.getTypeBinding(internalInterfaces[i]);", "-\t\t\t\t\treturn NO_TYPE_BINDINGS;", "+\t\t\t\t\tcontinue;", "-\t\t\t\tnewInterfaces[i] = typeBinding;", "+\t\t\t\tnewInterfaces[interfacesCounter++] = typeBinding;", "-\t\t\treturn newInterfaces;", "+\t\t\tif (length != interfacesCounter) {", "+\t\t\t\tSystem.arraycopy(newInterfaces, 0, (newInterfaces = new ITypeBinding[interfacesCounter]), 0, interfacesCounter);", "+\t\t\t}", "+\t\t\treturn this.interfaces = newInterfaces;", "+\t\treturn this.interfaces = NO_TYPE_BINDINGS;"]}], "num": 19526}