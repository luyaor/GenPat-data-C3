{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0b649c00f9f55b329169c5d3f5c7984", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c684ed92f9f8cca6b20e664e3f26b40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "cea68c59c921f1ca5c01091f0bfe74894257a349", "commitAfterChange": "75afdf2996a1c8ae6b0b5be7d9f9b9919d6b66a0", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "signatureAfterChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "diff": ["+\t\tif (astNode instanceof CompletionOnMemberAccess && qualifiedBinding instanceof BaseTypeBinding) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "205be2481f466bd820feb8e1f3b2301d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c19d88a111d4eb45af44060928b3748cf8b0553d", "commitAfterChange": "d882c7320957134d2934c77732f10d26c3e6378f", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "  \tprotected void recordNodes(ASTNode node, org.eclipse.jdt.internal.compiler.ast.ASTNode oldASTNode)", "signatureAfterChange": "  \tprotected void recordNodes(ASTNode node, org.eclipse.jdt.internal.compiler.ast.ASTNode oldASTNode)", "diff": ["+\t\t// Do not record the fake literal node created in lieu of LambdaExpressions at JLS levels < 8, as it would lead to CCE down the road.", "+\t\tif (oldASTNode instanceof org.eclipse.jdt.internal.compiler.ast.LambdaExpression && node instanceof NullLiteral) {", "+\t\t\treturn;", "+\t\t}"]}], "num": 69331}