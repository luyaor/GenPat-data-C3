{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "581c0e892e8400fb1991cb9910f1a4c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206cf456a109b4277bc29f17f2530428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "commitAfterChange": "75a1e994888330022017b20e200adbe75bfe0c3e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected Control createContents(Composite parent)", "signatureAfterChange": " \t \t@Override \tprotected Control createContents(Composite parent)", "diff": ["+\t@Override", "+\t\tLabel description= new Label(composite, SWT.WRAP);", "+\t\tdescription.setText(Messages.AptConfigurationBlock_classpathAddedAutomaticallyNote); ", "+\t\tGridData gd= new GridData(GridData.HORIZONTAL_ALIGN_FILL);", "+\t\tgd.horizontalSpan= 2;", "+\t\tgd.widthHint= fPixelConverter.convertWidthInCharsToPixels(60);", "+\t\tdescription.setLayoutData(gd);", "+", "+\t\t", "+\t\tvalidateSettings(null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c17d58af724f257e99a1738ec5a2cf84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "613782ce0a459b2b9d97830b644944724bd8bd6d", "commitAfterChange": "38391f1424c2a310d61708561599c0ef2e593103", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void setupConverterJCL() throws IOException", "signatureAfterChange": " \tpublic void setupConverterJCL() throws IOException", "diff": ["+\t\t\t} else {", "+\t\t\t\t//copy the two files to the JCL directory", "+\t\t\t\tjava.io.File resourceJCLMin =", "+\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "+\t\t\t\tcopy(resourceJCLMin, jclMin);", "+\t\t\t\tjava.io.File resourceJCLMinsrc =", "+\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "+\t\t\t\tcopy(resourceJCLMinsrc, jclMinsrc);", "+\t\t\t}", "+\t\t} else {", "+\t\t\t//check that the two files, jclMin.jar and jclMinsrc.zip are present", "+\t\t\t//copy either file that is missing or less recent than the one in workspace", "+\t\t\tjava.io.File resourceJCLMin =", "+\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "+\t\t\tif (jclMin.lastModified() < resourceJCLMin.lastModified()) {", "+\t\t\t\tcopy(resourceJCLMin, jclMin);", "+\t\t\t}", "+\t\t\tjava.io.File resourceJCLMinsrc =", "+\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "+\t\t\tif (jclMinsrc.lastModified() < resourceJCLMinsrc.lastModified()) {", "+\t\t\t\tcopy(resourceJCLMinsrc, jclMinsrc);", "-\t\t//copy the two files to the JCL directory", "-\t\tjava.io.File resourceJCLMin =", "-\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "-\t\tcopy(resourceJCLMin, jclMin);", "-\t\tjava.io.File resourceJCLMinsrc =", "-\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "-\t\tcopy(resourceJCLMinsrc, jclMinsrc);"]}], "num": 1614}