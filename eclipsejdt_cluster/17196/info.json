{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e26f518290c58874d425303156f03ad2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c252a2f13ccb947bc15c7890db9a8277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c44d89fd5379544a6ddb472a22f014ab5bce19e8", "commitAfterChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\tfindMethods(this.completionToken,null,enclosingType,scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "+\t\t\t\t\t\tfindMethods(this.completionToken,null,null,enclosingType,scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "-\t\t\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "+\t\t\t\t\t\tfindMethods(this.completionToken,null,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\tnull,", "+\t\t} else if(astNode instanceof CompletionOnMessageSendName) {", "+\t\t\tif (!this.requestor.isIgnored(CompletionProposal.METHOD_REF)) {", "+\t\t\t\tCompletionOnMessageSendName messageSend = (CompletionOnMessageSendName) astNode;", "+\t\t\t\t", "+\t\t\t\tthis.insideQualifiedReference = true;", "+\t\t\t\tthis.completionToken = messageSend.selector;", "+\t\t\t\tboolean onlyStatic = false;", "+\t\t\t\tTypeBinding receiverType = null;", "+\t\t\t\tif(qualifiedBinding instanceof VariableBinding) {", "+\t\t\t\t\treceiverType = ((VariableBinding)qualifiedBinding).type;", "+\t\t\t\t} else if(qualifiedBinding instanceof MethodBinding) {", "+\t\t\t\t\treceiverType = ((MethodBinding)qualifiedBinding).returnType;", "+\t\t\t\t} else if(qualifiedBinding instanceof ReferenceBinding && !(qualifiedBinding instanceof TypeVariableBinding)) {", "+\t\t\t\t\tonlyStatic = true;", "+\t\t\t\t\treceiverType = (TypeBinding)qualifiedBinding;", "+\t\t\t\t}", "+\t\t\t\tif(receiverType != null && receiverType instanceof ReferenceBinding) {", "+\t\t\t\t\tTypeBinding[] typeArgTypes = computeTypesIfCorrect(messageSend.typeArguments);", "+\t\t\t\t\tif(typeArgTypes != null) {", "+\t\t\t\t\t\tthis.findMethods(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\ttypeArgTypes,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t(ReferenceBinding)receiverType.capture(scope, messageSend.receiver.sourceEnd),", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\tonlyStatic,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tmessageSend,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1de5a78382eabae367089d7c12eea12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, ASTNode enclosingNode, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation) {", "+\tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, ASTNode enclosingNode, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation) {", "-\t\t\t\t\t\tfindMethods(this.completionToken,null,null,enclosingType,scope,new ObjectVector(),false,false,true,null,null,false,false,true,null, null, null, false);", "+\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tenclosingType,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\tfindMethods(this.completionToken,null,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true,null, null, null, false);", "+\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\tnull,null,", "+\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\tfindFieldsAndMethods(this.completionToken, receiverType.capture(scope, ref.sourceEnd), scope, ref, scope,false,false, null, null, null, false);", "+\t\t\t\t\tObjectVector fieldsFound = new ObjectVector();", "+\t\t\t\t\tObjectVector methodsFound = new ObjectVector();", "+\t\t\t\t\t", "+\t\t\t\t\tfindFieldsAndMethods(", "+\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\treceiverType.capture(scope, ref.sourceEnd),", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\tref,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t-1);", "+\t\t\t\t\t", "+\t\t\t\t\tfindFieldsAndMethodsFromCastedReceiver(", "+\t\t\t\t\t\t\tenclosingNode,", "+\t\t\t\t\t\t\tqualifiedBinding,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\tref,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tref);", "+\t\t\t\t\t", "+\t\t\t\t\tObjectVector fieldsFound = new ObjectVector();", "+\t\t\t\t\tObjectVector methodsFound = new ObjectVector();", "+\t\t\t\t\t", "+\t\t\t\t\tboolean superCall = access.receiver instanceof SuperReference;", "+\t\t\t\t\t", "+\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\taccess.receiver instanceof SuperReference,", "+\t\t\t\t\t\tsuperCall,", "-\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t-1);", "+\t\t\t\t\t", "+\t\t\t\t\tif (!superCall) {", "+\t\t\t\t\t\tfindFieldsAndMethodsFromCastedReceiver(", "+\t\t\t\t\t\t\t\tenclosingNode,", "+\t\t\t\t\t\t\t\tqualifiedBinding,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\t\taccess,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\taccess.receiver);", "+\t\t\t\t\t}", "-\t\t\t\t\tfalse);", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tnull,", "+\t\t\t\t\t-1,", "+\t\t\t\t\t-1);", "-\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\tfindMethods(this.completionToken,", "+\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t-1);", "+\t}"]}], "num": 17196}