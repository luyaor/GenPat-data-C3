{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1aa15881013ac7579b54b61e5b811804", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20a77cb35eb4a932532cb82e61131248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "d767f31ad272e19eba4786e29173a3473ca8fe5d", "commitAfterChange": "7b4ef44b48315814df71e76cacb577adcea439c0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding erasure()", "signatureAfterChange": "  \tpublic TypeBinding erasure()", "diff": ["+\t\t\tboolean multipleErasures = false;", "+\t\t\t\tif (i > 0) {", "+\t\t\t\t\tif (TypeBinding.notEquals(erasures[0], erasures[i]))", "+\t\t\t\t\t\tmultipleErasures = true;", "+\t\t\t\t}", "+\t\t\tif (!multipleErasures)", "+\t\t\t\treturn erasures[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f1f94c94f090ab01a99f9166a37dd30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d57293f4f12e1bef48b48f8eb4effbb7e4554bd3", "commitAfterChange": "80133b35a6b0bcde494737060ceebe86e07b8204", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 257, "signatureBeforeChange": " private void rejectIllegalTypeAnnotations(TypeReference typeReference)", "signatureAfterChange": " private void rejectIllegalTypeAnnotations(TypeReference typeReference, boolean tolerateAnnotationsOnDimensions)", "diff": ["+}", "+private void rejectIllegalTypeAnnotations(TypeReference typeReference, boolean tolerateAnnotationsOnDimensions) {", "+\tboolean tolerated = false;", "-\t\t\tproblemReporter().misplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "+\t\t\tif (tolerateAnnotationsOnDimensions) {", "+\t\t\t\tproblemReporter().toleratedMisplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "+\t\t\t\ttolerated = true;", "+\t\t\t}", "+\t\t\telse ", "+\t\t\t\tproblemReporter().misplacedTypeAnnotations(misplacedAnnotations[0], misplacedAnnotations[misplacedAnnotations.length - 1]);", "-\ttypeReference.annotations = null;", "-\ttypeReference.setAnnotationsOnDimensions(null);", "-\ttypeReference.bits &= ~ASTNode.HasTypeAnnotations;", "+\tif (!tolerated) {", "+\t\ttypeReference.annotations = null;", "+\t\ttypeReference.setAnnotationsOnDimensions(null);", "+\t\ttypeReference.bits &= ~ASTNode.HasTypeAnnotations;", "+\t}"]}], "num": 70842}