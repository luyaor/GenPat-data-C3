{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75ccd5160f12386ead432f85e843ca46", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d6a482b15bc0c6e700c91403323a13d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "commitAfterChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tMap reverseMap) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tMap reverseMap) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\tIClasspathEntry resolvedEntry = JavaCore.getResolvedClasspathEntry(rawEntry);", "+\t\t\t\t\tIClasspathEntry resolvedEntry = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tresolvedEntry = JavaCore.getResolvedClasspathEntry(rawEntry);", "+\t\t\t\t\t} catch (Assert.AssertionFailedException e) {", "+\t\t\t\t\t\t// Catch the assertion failure and throw java model exception instead", "+\t\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=55992", "+\t\t\t\t\t\t// if ignoredUnresolvedEntry is false, status is set by by ClasspathEntry.validateClasspathEntry", "+\t\t\t\t\t\t// called above as validation was needed", "+\t\t\t\t\t\tif (!ignoreUnresolvedEntry) throw new JavaModelException(status);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c0f0dd2758028f582d89286b42bd11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "commitAfterChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-", "+\t", "-", "+\t", "-\t\t\t\t\tentry = JavaCore.getResolvedClasspathEntry(entry);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tentry = JavaCore.getResolvedClasspathEntry(entry);", "+\t\t\t\t\t} catch (Assert.AssertionFailedException e) {", "+\t\t\t\t\t\t// Catch the assertion failure and throw java model exception instead", "+\t\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=55992", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, e.getMessage());", "+\t\t\t\t\t}", "-", "+\t", "-", "+\t", "-", "+\t"]}], "num": 51476}