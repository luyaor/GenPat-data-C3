{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27eb22c3ff176b9ff67f61e91febd7d5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4733e7afdb8e444ae1b00a2a377fdaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "e3822f42ca0adb637888a2b8f6caa05d9b5ce61b", "commitAfterChange": "8c0681689bb7016ae1fdf06168ac4642209638f2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tint previousDeltaCount = manager.javaModelDeltas.size();", "+\t\tDeltaProcessor deltaProcessor = manager.deltaProcessor;", "+\t\tint previousDeltaCount = deltaProcessor.javaModelDeltas.size();", "-\t\t\t\tfor (int i = previousDeltaCount, size = manager.javaModelDeltas.size(); i < size; i++) {", "-\t\t\t\t\tmanager.updateJavaModel((IJavaElementDelta)manager.javaModelDeltas.get(i));", "+\t\t\t\tfor (int i = previousDeltaCount, size = deltaProcessor.javaModelDeltas.size(); i < size; i++) {", "+\t\t\t\t\tdeltaProcessor.updateJavaModel((IJavaElementDelta)deltaProcessor.javaModelDeltas.get(i));", "-\t\t\t\t\tif ((manager.javaModelDeltas.size() > previousDeltaCount || !manager.reconcileDeltas.isEmpty()) ", "+\t\t\t\t\tif ((deltaProcessor.javaModelDeltas.size() > previousDeltaCount || !deltaProcessor.reconcileDeltas.isEmpty()) ", "-\t\t\t\t\t\tmanager.fire(null, JavaModelManager.DEFAULT_CHANGE_EVENT);", "+\t\t\t\t\t\tdeltaProcessor.fire(null, DeltaProcessor.DEFAULT_CHANGE_EVENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac94d2d139517769523fff5e518951a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void run(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "diff": ["- */", "-public void run(IProgressMonitor monitor) throws CoreException {", "-\ttry {", "-\t\tfMonitor = monitor;", "-\t\texecute();", "-\t} finally {", "-\t\tregisterDeltas();", "-}", "+\t */", "+\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tint previousDeltaCount = manager.javaModelDeltas.size();", "+\t\ttry {", "+\t\t\tfMonitor = monitor;", "+\t\t\tpushOperation(this);", "+\t\t\ttry {", "+\t\t\t\tthis.execute();", "+\t\t\t} finally {", "+\t\t\t\tif (this.isTopLevelOperation()) {", "+\t\t\t\t\tthis.runPostActions();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} finally {", "+\t\t\ttry {", "+\t\t\t\t// update JavaModel using deltas that were recorded during this operation", "+\t\t\t\tfor (int i = previousDeltaCount, size = manager.javaModelDeltas.size(); i < size; i++) {", "+\t\t\t\t\tmanager.updateJavaModel((IJavaElementDelta)manager.javaModelDeltas.get(i));", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t// fire only iff:", "+\t\t\t\t// - the operation is a top level operation", "+\t\t\t\t// - the operation did produce some delta(s)", "+\t\t\t\t// - but the operation has not modified any resource", "+\t\t\t\tif (this.isTopLevelOperation()", "+\t\t\t\t\t\t&& (manager.javaModelDeltas.size() > previousDeltaCount) ", "+\t\t\t\t\t\t&& !this.hasModifiedResource()) {", "+\t\t\t\t\tmanager.fire(null, JavaModelManager.DEFAULT_CHANGE_EVENT);", "+\t\t\t\t} // else deltas are fired while processing the resource delta", "+\t\t\t} finally {", "+\t\t\t\tpopOperation();", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 1095}