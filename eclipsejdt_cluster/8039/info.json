{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90931748762719dbab91820e86e092e7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6367e6e6e76c12a1a8b42424a5c2471c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected NameLookup getNameLookup()", "signatureAfterChange": " \t \tHashMap getAllPackageFragments(JavaProject project)", "diff": ["-\t */", "-\tprotected NameLookup getNameLookup() {", "-", "-\t\treturn fNameLookup;", "+\tHashMap getAllPackageFragments(JavaProject project) {", "+\t\tif (this.allPkgFragmentsCache == null) {", "+\t\t\tHashMap cache = new HashMap();", "+\t\t\tIPackageFragmentRoot[] roots = getAllPackageFragmentRoots(project);", "+\t\t\tIPackageFragment[] frags = this.getPackageFragmentsInRoots(roots, project);", "+\t\t\tfor (int i= 0; i < frags.length; i++) {", "+\t\t\t\tIPackageFragment fragment= frags[i];", "+\t\t\t\tIPackageFragment[] entry= (IPackageFragment[]) cache.get(fragment.getElementName());", "+\t\t\t\tif (entry == null) {", "+\t\t\t\t\tentry= new IPackageFragment[1];", "+\t\t\t\t\tentry[0]= fragment;", "+\t\t\t\t\tcache.put(fragment.getElementName(), entry);", "+\t\t\t\t} else {", "+\t\t\t\t\tIPackageFragment[] copy= new IPackageFragment[entry.length + 1];", "+\t\t\t\t\tSystem.arraycopy(entry, 0, copy, 0, entry.length);", "+\t\t\t\t\tcopy[entry.length]= fragment;", "+\t\t\t\t\tcache.put(fragment.getElementName(), copy);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.allPkgFragmentsCache = cache;", "+\t\t}", "+\t\treturn this.allPkgFragmentsCache;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2411573e67a029266dc75be9825e243", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "bb49ae1f5759ef970a2a314fd9778e459f4c097c", "commitAfterChange": "31d45554331a458304a632ad1dfc3ad3337a9ef2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tHashtableOfArrayToObject getAllPackageFragments(JavaProject project)", "signatureAfterChange": " \t \tHashtableOfArrayToObject getAllPackageFragments(JavaProject project)", "diff": ["-\t\t\t\t\tIPackageFragmentRoot[] entry= (IPackageFragmentRoot[]) cache.get(pkgName);", "-\t\t\t\t\tif (entry == null) {", "-\t\t\t\t\t\tentry= new IPackageFragmentRoot[] {root};", "-\t\t\t\t\t\tcache.put(pkgName, entry);", "+\t\t\t\t\tObject existing = cache.get(pkgName);", "+\t\t\t\t\tif (existing == null) {", "+\t\t\t\t\t\tcache.put(pkgName, root);", "-\t\t\t\t\t\tIPackageFragmentRoot[] copy= new IPackageFragmentRoot[entry.length + 1];", "-\t\t\t\t\t\tSystem.arraycopy(entry, 0, copy, 0, entry.length);", "-\t\t\t\t\t\tcopy[entry.length]= root;", "-\t\t\t\t\t\tcache.put(pkgName, copy);", "+\t\t\t\t\t\tif (existing instanceof PackageFragmentRoot) {", "+\t\t\t\t\t\t\tcache.put(pkgName, new IPackageFragmentRoot[] {(PackageFragmentRoot) existing, root});", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tIPackageFragmentRoot[] entry= (IPackageFragmentRoot[]) existing;", "+\t\t\t\t\t\t\tIPackageFragmentRoot[] copy= new IPackageFragmentRoot[entry.length + 1];", "+\t\t\t\t\t\t\tSystem.arraycopy(entry, 0, copy, 0, entry.length);", "+\t\t\t\t\t\t\tcopy[entry.length]= root;", "+\t\t\t\t\t\t\tcache.put(pkgName, copy);", "+\t\t\t\t\t\t}"]}], "num": 8039}