{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0420a22bc9aa0a084a71395db1d86a6a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19f987de325751486920547f70d3c013", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " public synchronized void removeIndexPath(IPath path)", "signatureAfterChange": " public synchronized void removeIndexPath(IPath path)", "diff": ["-\tSet entrySet = this.indexes.entrySet();", "-\tIterator entries = entrySet.iterator();", "-\tString[] locations = null;", "-\tint max = entrySet.size();", "-\tint ptr = 0;", "-\twhile (entries.hasNext()) {", "-\t\tMap.Entry entry = (Map.Entry) entries.next();", "-\t\tString indexLocation = (String) entry.getKey();", "-\t\tIPath indexPath = new Path(indexLocation);", "-\t\tif (path.isPrefixOf(indexPath)) {", "-\t\t\tIndex index = (Index) entry.getValue();", "-\t\t\tif (index != null) index.monitor = null;", "-\t\t\tif (locations == null) locations = new String[max];", "-\t\t\tlocations[ptr++] = indexLocation;", "-\t\t\tFile indexFile = new File(indexLocation);", "-\t\t\tif (indexFile.exists()) {", "+\tObject[] keyTable = this.indexes.keyTable;", "+\tObject[] valueTable = this.indexes.valueTable;", "+\tIPath[] locations = null;", "+\tint max = this.indexes.elementSize;", "+\tint count = 0;", "+\tfor (int i = 0, l = keyTable.length; i < l; i++) {", "+\t\tIPath indexLocation = (IPath) keyTable[i];", "+\t\tif (indexLocation == null)", "+\t\t\tcontinue;", "+\t\tif (path.isPrefixOf(indexLocation)) {", "+\t\t\tIndex index = (Index) valueTable[i];", "+\t\t\tindex.monitor = null;", "+\t\t\tif (locations == null)", "+\t\t\t\tlocations = new IPath[max];", "+\t\t\tlocations[count++] = indexLocation;", "+\t\t\tFile indexFile = index.getIndexFile();", "+\t\t\tif (indexFile.exists())", "-\t\t\t}", "-\t\t} else if (locations == null) {", "+\t\t} else {", "-\t\tfor (int i=0; i<ptr; i++) {", "-\t\t\tthis.indexes.remove(locations[i]);", "-\t\t}", "+\t\tfor (int i = 0; i < count; i++)", "+\t\t\tthis.indexes.removeKey(locations[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de150c8c48369e901b323e948fc7a9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " public synchronized void removeIndexPath(IPath path)", "signatureAfterChange": " public synchronized void removeIndexPath(IPath path)", "diff": ["-\tIPath[] locations = null;", "+\tIndexLocation[] locations = null;", "-\t\tIPath indexLocation = (IPath) keyTable[i];", "+\t\tIndexLocation indexLocation = (IndexLocation) keyTable[i];", "-\t\tif (path.isPrefixOf(indexLocation)) {", "+\t\tif (indexLocation.startsWith(path)) {", "-\t\t\t\tlocations = new IPath[max];", "+\t\t\t\tlocations = new IndexLocation[max];", "-\t\t\tFile indexFile = index.getIndexFile();", "-\t\t\tif (indexFile.exists()) {", "+\t\t\tif (this.indexStates.get(indexLocation) == REUSE_STATE) {", "+\t\t\t\tindexLocation.close();", "+\t\t\t} else {", "-\t\t\t\t\tUtil.verbose(\"removing index file \" + indexFile); //$NON-NLS-1$", "-\t\t\t\tindexFile.delete();", "+\t\t\t\t\tUtil.verbose(\"removing index file \" + indexLocation); //$NON-NLS-1$", "+\t\t\t\tindexLocation.delete();", "-\t\tif (this.participantsContainers != null && this.participantsContainers.get(path.toOSString()) != null) {", "-\t\t\tthis.participantsContainers.removeKey(path.toOSString());\t", "-\t\t\twriteParticipantsIndexNamesFile();", "+\t\tif (this.participantsContainers != null) {", "+\t\t\tboolean update = false;", "+\t\t\tfor (int i = 0; i < count; i++) {", "+\t\t\t\tif (this.participantsContainers.get(locations[i]) != null) {", "+\t\t\t\t\tupdate = true;", "+\t\t\t\t\tthis.participantsContainers.removeKey(locations[i]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (update) writeParticipantsIndexNamesFile();"]}], "num": 26557}