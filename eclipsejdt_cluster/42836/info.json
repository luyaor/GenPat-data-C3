{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09decd538eb87399ee261a819c0aa10c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99220a5303c769a01efb04d66c52671c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "4a3b8d7f66c815bfc252f4ffc29a63c010eff917", "commitAfterChange": "2eb63d812179e5217306b90a651b95bfe7169c81", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t\tpublic void logTiming(CompilerStats compilerStats)", "signatureAfterChange": " \t\tpublic void logTiming(CompilerStats compilerStats)", "diff": ["-\t\t\t\tlong readTime = compilerStats.sourceInputTime + compilerStats.binaryInputTime;", "-\t\t\t\t\t\t\t}));", "-\t\t\t\tthis.printlnOut(", "-\t\t\t\t\t\tthis.main.bind(\"compile.ioTime\", //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tString.valueOf(readTime),", "-\t\t\t\t\t\t\t\tString.valueOf(((int) (readTime * 1000.0 / time)) / 10.0),", "-\t\t\t\t\t\t\t\tString.valueOf(compilerStats.outputTime),", "-\t\t\t\t\t\t\t\tString.valueOf(((int) (compilerStats.outputTime * 1000.0 / time)) / 10.0),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ce8341605fd2b08bed89c468b7d74e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "4a3b8d7f66c815bfc252f4ffc29a63c010eff917", "commitAfterChange": "2eb63d812179e5217306b90a651b95bfe7169c81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t\tpublic void logAverage()", "signatureAfterChange": "  \t\tpublic void logAverage()", "diff": ["-\t\t\tlong sum = 0, readSum = 0, writeSum = 0;", "+\t\t\tlong sum = 0;", "-\t\t\t\treadSum += stats.sourceInputTime + stats.binaryInputTime;", "-\t\t\t\twriteSum += stats.outputTime;", "-\t\t\tlong readTime = readSum/(length - 2);", "-\t\t\tlong writeTime = writeSum/(length - 2);", "-\t\t\t\t\t\t\t}));", "-\t\t\t\tthis.printlnOut(", "-\t\t\t\t\t\tthis.main.bind(\"compile.ioTime\", //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tString.valueOf(readTime),", "-\t\t\t\t\t\t\t\tString.valueOf(((int) (readTime * 1000.0 / time)) / 10.0),", "-\t\t\t\t\t\t\t\tString.valueOf(writeTime),", "-\t\t\t\t\t\t\t\tString.valueOf(((int) (writeTime * 1000.0 / time)) / 10.0),"]}], "num": 42836}