{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfb069db34e3c14e8bc9f36fda34baf4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c466042a057cc2137579a7aa7aab79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "5ea0ae6c0d5a6162940bd458d3ead5d427058c35", "commitAfterChange": "2ad69f466c4df4c3e626fb0d9831c536de8ea5c0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  protected void deleteGeneratedFiles(IFile[] deletedGeneratedFiles)", "signatureAfterChange": "  protected void deleteGeneratedFiles(IFile[] deletedGeneratedFiles)", "diff": ["-\t\t\tSourceFile sourceFile = findSourceFile(deletedGeneratedFiles[j]);", "-\t\t\tif (sourceFile == null) continue;", "+\t\t\tIFile deletedFile = deletedGeneratedFiles[j];", "+\t\t\tif (deletedFile.exists()) continue; // only delete .class files for source files that were actually deleted", "+", "+\t\t\tSourceFile sourceFile = findSourceFile(deletedFile, false);", "+\t\t\taddDependentsOf(typePath, true); // add dependents of the source file since its now deleted", "+\t\t\tpreviousSourceFiles = null; // existing source files did not see it as deleted since they were compiled before it was", "-\t\t\t\taddDependentsOf(typePath, true); // add dependents of the source file since it may be involved in a name collision"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5341dd213bad3ce891ad5c01f87571ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "bbf8bed45f301e3c1311bf7420412781e2f72822", "commitAfterChange": "4b38f12e0fbe8666ccacbe87e7c3a7747f09c440", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["-\tSourceMapper mapper = getSourceMapper();", "-\tif (mapper != null) {", "-\t\treturn mapSource(mapper, info instanceof IBinaryType ? (IBinaryType) info : null);", "+\t// Check the cache for the top-level type first", "+\tIType outerMostEnclosingType = getOuterMostEnclosingType();", "+\tIBuffer buffer = getBufferManager().getBuffer(outerMostEnclosingType.getClassFile());", "+\tif (buffer == null) {", "+\t\tSourceMapper mapper = getSourceMapper();", "+\t\tIBinaryType typeInfo = info instanceof IBinaryType ? (IBinaryType) info : null;", "+\t\tif (mapper != null) {", "+\t\t\tbuffer = mapSource(mapper, typeInfo, outerMostEnclosingType.getClassFile());", "+\t\t}", "-\treturn null;", "+\treturn buffer;"]}], "num": 21071}