{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d119f1d55a6c0db6cde30acc2eaff58", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfd091293d0190b2e2f67d2c71b83416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void forbiddenReference(TypeBinding type, ASTNode location, String messageTemplate)", "signatureAfterChange": " public void forbiddenReference(TypeBinding type, ASTNode location, String messageTemplate, int severity)", "diff": ["-public void forbiddenReference(TypeBinding type, ASTNode location, String messageTemplate) {", "-\tif (location == null) return; ", "+public void forbiddenReference(TypeBinding type, ASTNode location, String messageTemplate, int severity) {", "+\tif (location == null) return;", "+\tint problemId = severity == ProblemSeverities.Error ? IProblem.ForbiddenReference : IProblem.DiscouragedReference;", "-\t\tIProblem.ForbiddenReference,", "+\t\tproblemId,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01a8379373c0f6b4753980af6af869f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "e37ddd2cb60251da977bfe008d0c558febeb1616", "commitAfterChange": "ddff16f6a6b8fee88d497b4653d14d58ccda81b4", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "signatureAfterChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "diff": ["+\t\tint problemID = (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod())", "+\t\t\t\t? IProblem.DuplicateInheritedDefaultMethods", "+\t\t\t\t: IProblem.DuplicateInheritedMethods;", "-\t\t\tIProblem.DuplicateInheritedMethods,", "+\t\t\tproblemID,"]}], "num": 48724}