{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47b1c167e0d7953ea05efedd38b89471", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d2da01be1d7de00761d91a3f075249c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public final void arrayInitializer(int length)", "signatureAfterChange": " public final void arrayInitializer(int length)", "diff": ["-\t\texpressionPtr -= length;", "-\t\tSystem.arraycopy(expressionStack, expressionPtr + 1, ai.expressions = new Expression[length], 0, length);", "+\t\tthis.expressionPtr -= length;", "+\t\tSystem.arraycopy(this.expressionStack, this.expressionPtr + 1, ai.expressions = new Expression[length], 0, length);", "-\tai.sourceEnd = endStatementPosition;", "-\tint searchPosition = length == 0 ? endPosition + 1 : ai.expressions[0].sourceStart;", "+\tai.sourceEnd = this.endStatementPosition;", "+\tint searchPosition = length == 0 ? this.endPosition + 1 : ai.expressions[0].sourceStart;", "-\t\twhile (scanner.source[--searchPosition] != '{');", "+\t\twhile (this.scanner.source[--searchPosition] != '{');", "-\t\tsearchPosition = (length == 0 ? endPosition : ai.expressions[0].sourceStart) - 1;", "+\t\tsearchPosition = (length == 0 ? this.endPosition : ai.expressions[0].sourceStart) - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494b229ca85d0d475dd768f7c34477bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  protected void consumeAssignment()", "signatureAfterChange": "  protected void consumeAssignment()", "diff": ["-\tint op = intStack[intPtr--] ; //<--the encoded operator", "+\tint op = this.intStack[this.intPtr--] ; //<--the encoded operator", "-\texpressionPtr -- ; expressionLengthPtr -- ;", "-\texpressionStack[expressionPtr] =", "+\tthis.expressionPtr -- ; this.expressionLengthPtr -- ;", "+\tthis.expressionStack[this.expressionPtr] =", "-\t\t\t\texpressionStack[expressionPtr] ,", "-\t\t\t\texpressionStack[expressionPtr+1], ", "+\t\t\t\tthis.expressionStack[this.expressionPtr] ,", "+\t\t\t\tthis.expressionStack[this.expressionPtr+1], ", "-\t\t\t\tscanner.startPosition - 1)\t:", "+\t\t\t\tthis.scanner.startPosition - 1)\t:", "-\t\t\t\texpressionStack[expressionPtr] ,", "-\t\t\t\texpressionStack[expressionPtr+1],", "-\t\t\t\tscanner.startPosition - 1);", "+\t\t\t\tthis.expressionStack[this.expressionPtr] ,", "+\t\t\t\tthis.expressionStack[this.expressionPtr+1],", "+\t\t\t\tthis.scanner.startPosition - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21926282cf3265895bcad1252d2769e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "signatureAfterChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "diff": ["-\t\t\texpressionStack[expressionPtr] = ", "+\t\t\tthis.expressionStack[this.expressionPtr] = ", "-\t\t\t\t\texpressionStack[expressionPtr]);", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr]);", "-\t\texpressionPtr--;", "-\t\texpressionLengthPtr--;", "+\t\tthis.expressionPtr--;", "+\t\tthis.expressionLengthPtr--;", "-\t\t\texpressionStack[expressionPtr] = ", "+\t\t\tthis.expressionStack[this.expressionPtr] = ", "-\t\t\t\t\texpressionStack[expressionPtr],", "-\t\t\t\t\texpressionStack[expressionPtr + 1]);", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr],", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr + 1]);", "-\texp.sourceEnd = endPosition;", "+\texp.sourceEnd = this.endPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b9c57082fe5996bc044c2e804ee68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " protected void consumeUnaryExpression(int op)", "signatureAfterChange": " protected void consumeUnaryExpression(int op)", "diff": ["-\tExpression r, exp = expressionStack[expressionPtr];", "+\tExpression r, exp = this.expressionStack[this.expressionPtr];", "-\t\t\tr = expressionStack[expressionPtr] = new IntLiteralMinValue();", "+\t\t\tr = this.expressionStack[this.expressionPtr] = new IntLiteralMinValue();", "-\t\t\t\tr = expressionStack[expressionPtr] = new LongLiteralMinValue();", "+\t\t\t\tr = this.expressionStack[this.expressionPtr] = new LongLiteralMinValue();", "-\t\t\t\tr = expressionStack[expressionPtr] = new UnaryExpression(exp, op);", "+\t\t\t\tr = this.expressionStack[this.expressionPtr] = new UnaryExpression(exp, op);", "-\t\tr = expressionStack[expressionPtr] = new UnaryExpression(exp, op);", "+\t\tr = this.expressionStack[this.expressionPtr] = new UnaryExpression(exp, op);", "-\tr.sourceStart = intStack[intPtr--];", "+\tr.sourceStart = this.intStack[this.intPtr--];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f7f59bd818050688bdabc7fe0c7a6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " protected void consumeExplicitConstructorInvocation(int flag, int recFlag)", "signatureAfterChange": " protected void consumeExplicitConstructorInvocation(int flag, int recFlag)", "diff": ["-\tint startPosition = intStack[intPtr--];", "+\tint startPosition = this.intStack[this.intPtr--];", "-\tif ((length = expressionLengthStack[expressionLengthPtr--]) != 0) {", "-\t\texpressionPtr -= length;", "-\t\tSystem.arraycopy(expressionStack, expressionPtr + 1, ecc.arguments = new Expression[length], 0, length);", "+\tif ((length = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {", "+\t\tthis.expressionPtr -= length;", "+\t\tSystem.arraycopy(this.expressionStack, this.expressionPtr + 1, ecc.arguments = new Expression[length], 0, length);", "-\t\t\texpressionLengthPtr--;", "-\t\t\tecc.sourceStart = (ecc.qualification = expressionStack[expressionPtr--]).sourceStart;", "+\t\t\tthis.expressionLengthPtr--;", "+\t\t\tecc.sourceStart = (ecc.qualification = this.expressionStack[this.expressionPtr--]).sourceStart;", "-\tecc.sourceEnd = endPosition;", "+\tecc.sourceEnd = this.endPosition;"]}], "num": 33674}