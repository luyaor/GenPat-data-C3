{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f57f2bc2899bd8b3e2f4d20f8e42717", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14993048c1bedf5fd838f40668348539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "commitAfterChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\tthis.tagValue = NO_TAG_VALUE;", "+\t\tthis.tagValue = TAG_OTHERS_VALUE;", "+\t\t\t\t\tcase 'a':", "+\t\t\t\t\t\tif (length == TAG_AUTHOR_LENGTH && CharOperation.equals(TAG_AUTHOR, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_AUTHOR_VALUE;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t} else if (length == TAG_CODE_LENGTH && this.inlineTagStarted && CharOperation.equals(TAG_CODE, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_CODE_VALUE;", "+\t\t\t\t\t\t} else if (length == TAG_LITERAL_LENGTH && this.inlineTagStarted && CharOperation.equals(TAG_LITERAL, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_LITERAL_VALUE;", "+\t\t\t\t\t\t} else if (length == TAG_SERIAL_LENGTH && CharOperation.equals(TAG_SERIAL, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_VALUE;", "+\t\t\t\t\t\t} else if (length == TAG_SERIAL_DATA_LENGTH && CharOperation.equals(TAG_SERIAL_DATA, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_DATA_VALUE;", "+\t\t\t\t\t\t} else if (length == TAG_SERIAL_FIELD_LENGTH && CharOperation.equals(TAG_SERIAL_FIELD, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_FIELD_VALUE;", "+\t\t\t\t\t\t} else if (length == TAG_SINCE_LENGTH && CharOperation.equals(TAG_SINCE, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_SINCE_VALUE;", "+\t\t\t\t\t\t} else if (length == TAG_VERSION_LENGTH && CharOperation.equals(TAG_VERSION, tagName)) {", "+\t\t\t\t\t\t\tthis.tagValue = TAG_VERSION_VALUE;", "-\t\tif (! alreadyParsedTag && this.reportProblems && verifyEndLine(this.scanner.currentPosition)) {", "+\t\tif (this.tagValue != TAG_OTHERS_VALUE && ! alreadyParsedTag && this.reportProblems && verifyEndLine(this.scanner.currentPosition)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b6bd0566bdb49ec5b4dd16cad67b34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "1ddaa88ca7b93ac6c1dc13d6d1d7c697fa81b2a7", "commitAfterChange": "640dca164a379d10390fa11e5cf245ab3efaf152", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void createTag()", "signatureAfterChange": " \tprotected void createTag()", "diff": ["+\t\tint position = this.scanner.currentPosition;", "+\t\tthis.scanner.resetTo(this.tagSourceStart, this.tagSourceEnd);", "+\t\tStringBuffer tagName = new StringBuffer();", "-\t\tString tagName = new String(this.source, start, this.tagSourceEnd-start+1);", "-\t\tswitch (tagName.charAt(0)) {", "-\t\t\tcase 'a':", "-\t\t\t\tif (tagName.equals(TagElement.TAG_AUTHOR)) {", "-\t\t\t\t\ttagName = TagElement.TAG_AUTHOR;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase 'd':", "-\t\t\t\tif (tagName.equals(TagElement.TAG_DOCROOT)) {", "-\t\t\t\t\ttagName = TagElement.TAG_DOCROOT;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase 'r':", "-\t\t\t\tif (tagName.equals(TagElement.TAG_RETURN)) {", "-\t\t\t\t\ttagName = TagElement.TAG_RETURN;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase 's':", "-\t\t\t\tif (tagName.equals(TagElement.TAG_SERIAL)) {", "-\t\t\t\t\ttagName = TagElement.TAG_SERIAL;", "-\t\t\t\t} else  if (tagName.equals(TagElement.TAG_SERIALDATA)) {", "-\t\t\t\t\ttagName = TagElement.TAG_SERIALDATA;", "-\t\t\t\t} else if (tagName.equals(TagElement.TAG_SERIALFIELD)) {", "-\t\t\t\t\ttagName = TagElement.TAG_SERIALFIELD;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase 'v':", "-\t\t\t\tif (tagName.equals(TagElement.TAG_VERSION)) {", "-\t\t\t\t\ttagName = TagElement.TAG_VERSION;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\t\tthis.scanner.getNextChar();", "+\t\twhile (this.scanner.currentPosition <= (this.tagSourceEnd+1)) {", "+\t\t\ttagName.append(this.scanner.currentCharacter);", "+\t\t\tthis.scanner.getNextChar();", "-\t\ttagElement.setTagName(tagName);", "+\t\ttagElement.setTagName(tagName.toString());", "-//\t\treturn true;", "+\t\tthis.scanner.resetTo(position, this.javadocEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c85f11b24355cc27fbd7ca521722d627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "53380a5830867128cd28d10f3919067730bbfb82", "commitAfterChange": "c0f393752b7d4523a5fc372912c7b4e192e52da7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void createTag()", "signatureAfterChange": " \tprotected void createTag()", "diff": ["-\t\tTagElement tag = this.ast.newTagElement();", "+\t\tTagElement tagElement = this.ast.newTagElement();", "-\t\ttag.setTagName(new String(this.source, start, this.tagSourceEnd-start+1));", "+\t\tString tagName = new String(this.source, start, this.tagSourceEnd-start+1);", "+\t\tswitch (tagName.charAt(0)) {", "+\t\t\tcase 'a':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_AUTHOR)) {", "+\t\t\t\t\ttagName = TagElement.TAG_AUTHOR;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 'd':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_DOCROOT)) {", "+\t\t\t\t\ttagName = TagElement.TAG_DOCROOT;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 'r':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_RETURN)) {", "+\t\t\t\t\ttagName = TagElement.TAG_RETURN;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 's':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_SERIAL)) {", "+\t\t\t\t\ttagName = TagElement.TAG_SERIAL;", "+\t\t\t\t} else  if (tagName.equals(TagElement.TAG_SERIALDATA)) {", "+\t\t\t\t\ttagName = TagElement.TAG_SERIALDATA;", "+\t\t\t\t} else if (tagName.equals(TagElement.TAG_SERIALFIELD)) {", "+\t\t\t\t\ttagName = TagElement.TAG_SERIALFIELD;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 'v':", "+\t\t\t\tif (tagName.equals(TagElement.TAG_VERSION)) {", "+\t\t\t\t\ttagName = TagElement.TAG_VERSION;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\ttagElement.setTagName(tagName);", "-\t\t\tpreviousTag.fragments().add(tag);", "+\t\t\tpreviousTag.fragments().add(tagElement);", "-\t\t\tpushOnAstStack(tag, true);", "+\t\t\tpushOnAstStack(tagElement, true);", "-\t\ttag.setSourceRange(start, this.tagSourceEnd-start+1);", "+\t\ttagElement.setSourceRange(start, this.tagSourceEnd-start+1);"]}], "num": 71149}