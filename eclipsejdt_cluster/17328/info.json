{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bff87de8a28ba46e2e52475f5bad3bc2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23de210789cbe153f3af8daaa1179d0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "115aa955b9babd8a2ed6e802830c5035a2e2a28f", "commitAfterChange": "c555269f6d77af957f827daf14cfb9a3af0c01ad", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t\t \tprivate final TextEdit doTextCopy(TextEdit sourceEdit, int destOffset, int sourceIndentLevel, String destIndentString, TextEditGroup editGroup)", "signatureAfterChange": " \t\t \tprivate final TextEdit doTextCopy(TextEdit sourceEdit, int destOffset, int sourceIndentLevel, String destIndentString, int tabWidth, TextEditGroup editGroup)", "diff": ["-\tprivate final TextEdit doTextCopy(TextEdit sourceEdit, int destOffset, int sourceIndentLevel, String destIndentString, TextEditGroup editGroup) {", "+\tprivate final TextEdit doTextCopy(TextEdit sourceEdit, int destOffset, int sourceIndentLevel, String destIndentString, int tabWidth, TextEditGroup editGroup) {", "-\t\tSourceModifier modifier= new SourceModifier(sourceIndentLevel, destIndentString, this.formatter.tabWidth, this.formatter.indentWidth);", "-\t\t", "-\t\t\tmoveEdit.setSourceModifier(modifier);", "+\t\t\tmoveEdit.setSourceModifier(new SourceModifier(sourceIndentLevel, destIndentString, tabWidth));", "-\t\t\tcopyEdit.setSourceModifier(modifier);", "+\t\t\tcopyEdit.setSourceModifier(new SourceModifier(sourceIndentLevel, destIndentString, tabWidth));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f494f22231df9a1ddddd05d982d3292", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Alignment createAlignment(String name, int mode, int tieBreakRule, int count, int sourceRestart, boolean adjust)", "signatureAfterChange": "  \tpublic Alignment createAlignment(String name, int mode, int tieBreakRule, int count, int sourceRestart, int continuationIndent, boolean adjust)", "diff": ["-\tpublic Alignment createAlignment(String name, int mode, int tieBreakRule, int count, int sourceRestart, boolean adjust){", "-\t\tAlignment alignment = new Alignment(name, mode, tieBreakRule, this, count, sourceRestart);", "+\tpublic Alignment createAlignment(String name, int mode, int tieBreakRule, int count, int sourceRestart, int continuationIndent, boolean adjust){", "+\t\tAlignment alignment = new Alignment(name, mode, tieBreakRule, this, count, sourceRestart, continuationIndent);", "-\t\t\t\t\talignment.breakIndentationLevel = this.indentationLevel + (this.useTab ? this.formatter.preferences.continuation_indentation : this.tabSize);", "+\t\t\t\t\talignment.breakIndentationLevel = this.indentationLevel + continuationIndent * (this.useTab ? 1 : this.tabSize);", "-\t\t\t\t\talignment.breakIndentationLevel = current.originalIndentationLevel + (this.useTab ? this.formatter.preferences.continuation_indentation : this.tabSize);", "+\t\t\t\t\talignment.breakIndentationLevel = current.originalIndentationLevel + continuationIndent * (this.useTab ? 1 : this.tabSize);"]}], "num": 17328}