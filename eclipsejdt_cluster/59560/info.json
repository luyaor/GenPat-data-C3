{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0df2538d740289b6d14eaac37bea7ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b9f098c3484266051dba27534106e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperConstructorInvocation.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\treturn ", "-\t\t\tmemSize()", "-\t\t\t+ (this.optionalExpression == null ? 0 : getExpression().treeSize())", "-\t\t\t+ this.arguments.listSize();", "+\t\treturn memSize()", "+\t\t+ (this.optionalExpression == null ? 0 : getExpression().treeSize())", "+\t\t+ (this.typeArguments == null ? 0 : this.typeArguments.listSize())", "+\t\t+ (this.arguments == null ? 0 : this.arguments.listSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20bcd406d65d0e3c2d6952541a5ad39c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConstructorInvocation.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ this.arguments.listSize();", "+\t\t\t+ (this.typeArguments == null ? 0 : this.typeArguments.listSize())", "+\t\t\t+ (this.arguments == null ? 0 : this.arguments.listSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecaea521ebc147e0063779e4909359de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "commitAfterChange": "3b34d278ba258a10a58d188a2047da908229b941", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "signatureAfterChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "diff": ["-\t\tConstant cst = this.condition.constant;", "-\t\tboolean isConditionTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "-\t\tcst = this.condition.optimizedBooleanConstant();", "-\t\tboolean isConditionOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tConstant cst = this.condition == null ? null : this.condition.constant;", "+\t\tboolean isConditionTrue = cst == null || cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tcst = this.condition == null ? null : this.condition.optimizedBooleanConstant();", "+\t\tboolean isConditionOptimizedTrue = cst == null ? true : cst != Constant.NotAConstant && cst.booleanValue() == true;", "-\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOut());", "+\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOut(null));", "+\t}"]}], "num": 59560}