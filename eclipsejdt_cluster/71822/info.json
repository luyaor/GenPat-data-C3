{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12594a2ce3b4ca13b6b0fcad27f51109", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2ec37e3ba4923b8a801b0d9cba6b51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "8975a4993759f4f0cb2d8fff2da5bbb83e0cb45e", "commitAfterChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification, boolean isDeclaration, int start, int end)", "signatureAfterChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] genericTypeSignature, int start, int end)", "diff": ["-protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification, boolean isDeclaration, int start, int end) {", "+protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] genericTypeSignature, int start, int end) {", "+\t\tif(type != null && genericTypeSignature != null) {", "+\t\t\tif(type.isBinary()) {", "+\t\t\t\ttype = new ParameterizedBinaryType((JavaElement)type.getParent(), type.getElementName(), new String(genericTypeSignature));", "+\t\t\t} else {", "+\t\t\t\ttype = new ParameterizedSourceType((JavaElement)type.getParent(), type.getElementName(), new String(genericTypeSignature));", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349a9303a647e29aadf0dc77ad5dd62f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "8975a4993759f4f0cb2d8fff2da5bbb83e0cb45e", "commitAfterChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void acceptLocalType(SourceTypeBinding typeBinding)", "signatureAfterChange": " public void acceptLocalType(TypeBinding typeBinding)", "diff": ["-public void acceptLocalType(SourceTypeBinding typeBinding) {", "-\tIJavaElement res = findLocalElement(typeBinding.sourceStart());", "+public void acceptLocalType(TypeBinding typeBinding) {", "+\tIJavaElement res =  null;", "+\tif(typeBinding instanceof ParameterizedTypeBinding) {", "+\t\tLocalTypeBinding localTypeBinding = (LocalTypeBinding)((ParameterizedTypeBinding)typeBinding).type;", "+\t\tres = findLocalElement(localTypeBinding.sourceStart());", "+\t\tif(typeBinding.isParameterizedType()) {", "+\t\t\tres = new ParameterizedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(typeBinding.computeUniqueKey()));", "+\t\t}", "+\t} else if(typeBinding instanceof SourceTypeBinding) {", "+\t\tres = findLocalElement(((SourceTypeBinding)typeBinding).sourceStart());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5d7a8aae8d432b72811f57eae1e281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, int start, int end)", "signatureAfterChange": " public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, char[] uniqueKey, int start, int end)", "diff": ["-public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, int start, int end) {", "+public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, char[] uniqueKey, int start, int end) {", "+\t\t\t\tif(uniqueKey != null) {", "+\t\t\t\t\tif(field.isBinary()) {", "+\t\t\t\t\t\tfield = new ParameterizedBinaryField(", "+\t\t\t\t\t\t\t\t(JavaElement)field.getParent(),", "+\t\t\t\t\t\t\t\tfield.getElementName(),", "+\t\t\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfield = new ParameterizedSourceField(", "+\t\t\t\t\t\t\t\t(JavaElement)field.getParent(),", "+\t\t\t\t\t\t\t\tfield.getElementName(),", "+\t\t\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c7b6a79962182ba34a3e7c68279d57f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "signatureAfterChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "diff": ["+\t\tif (methodBinding instanceof ParameterizedMethodBinding) {", "+\t\t\tif(((IMethod)res).isBinary()) {", "+\t\t\t\tres = new ParameterizedBinaryField(", "+\t\t\t\t\t\t(JavaElement)res.getParent(),", "+\t\t\t\t\t\tres.getElementName(),", "+\t\t\t\t\t\tnew String(methodBinding.computeUniqueKey()));", "+\t\t\t} else {", "+\t\t\t\tres = new ParameterizedSourceField(", "+\t\t\t\t\t\t(JavaElement)res.getParent(),", "+\t\t\t\t\t\tres.getElementName(),", "+\t\t\t\t\t\tnew String(methodBinding.computeUniqueKey()));", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf46cc6af3f2589784a3b6239b0a258f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "287a8246425dec3b8e6cdd428f661326776e45cd", "commitAfterChange": "058b7e49b52c7b18f15a01083d7620b3d5aa8490", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void acceptLocalVariable(LocalVariableBinding binding, CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": " public void acceptLocalVariable(LocalVariableBinding binding)", "diff": ["-public void acceptLocalVariable(LocalVariableBinding binding, CompilationUnitDeclaration parsedUnit) {", "-\tIJavaElement localVar = this.handleFactory.createElement(binding.declaration, parsedUnit, this.openable);", "+}", "+public void acceptLocalVariable(LocalVariableBinding binding) {", "+\tLocalDeclaration local = binding.declaration;", "+\tIJavaElement parent = findLocalElement(local.sourceStart); // findLocalElement() cannot find local variable", "+\tIJavaElement localVar = null;", "+\tif(parent != null) {", "+\t\tlocalVar = new LocalVariable(", "+\t\t\t\t(JavaElement)parent, ", "+\t\t\t\tnew String(local.name), ", "+\t\t\t\tlocal.declarationSourceStart,", "+\t\t\t\tlocal.declarationSourceEnd,", "+\t\t\t\tlocal.sourceStart,", "+\t\t\t\tlocal.sourceEnd,", "+\t\t\t\tUtil.typeSignature(local.type));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e622e767551bd117f3319910056e5591", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void acceptLocalField(FieldBinding fieldBinding)", "signatureAfterChange": " public void acceptLocalField(FieldBinding fieldBinding)", "diff": ["-\tSourceTypeBinding typeBinding = (SourceTypeBinding)fieldBinding.declaringClass;", "-\tIJavaElement res = findLocalElement(typeBinding.sourceStart());", "+\tIJavaElement res;", "+\tif(fieldBinding.declaringClass instanceof ParameterizedTypeBinding) {", "+\t\tLocalTypeBinding localTypeBinding = (LocalTypeBinding)((ParameterizedTypeBinding)fieldBinding.declaringClass).type;", "+\t\tres = findLocalElement(localTypeBinding.sourceStart());", "+\t} else {", "+\t\tSourceTypeBinding typeBinding = (SourceTypeBinding)fieldBinding.declaringClass;", "+\t\tres = findLocalElement(typeBinding.sourceStart());", "+\t}", "+\t\t\tif (fieldBinding instanceof ParameterizedFieldBinding) {", "+\t\t\t\tif(field.isBinary()) {", "+\t\t\t\t\tfield = new ParameterizedBinaryField(", "+\t\t\t\t\t\t\t(JavaElement)field.getParent(),", "+\t\t\t\t\t\t\tfield.getElementName(),", "+\t\t\t\t\t\t\tnew String(fieldBinding.computeUniqueKey()));", "+\t\t\t\t} else {", "+\t\t\t\t\tfield = new ParameterizedSourceField(", "+\t\t\t\t\t\t\t(JavaElement)field.getParent(),", "+\t\t\t\t\t\t\tfield.getElementName(),", "+\t\t\t\t\t\t\tnew String(fieldBinding.computeUniqueKey()));", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 71822}