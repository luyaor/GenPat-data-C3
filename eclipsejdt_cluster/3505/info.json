{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ab6d4caf7500a1be26758f1950a90e3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118ef5a594f9da5734b124b528daedf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test0015_field_with_explicit_this_access()", "signatureAfterChange": " public void test0015_field_with_explicit_this_access()", "diff": ["-\t\t\"\"", "-//      \"----------\\n\" +", "-//      \"1. ERROR in X.java (at line 5)\\n\" +", "-//      \"\to.toString();\\n\" +", "-//      \"\t^\\n\" +", "-//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "-//      \"----------\\n\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef8ad6f1146ae6911b3ebd9583240dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "cbb80b4c969d064367ed598ba99f074660c726c6", "commitAfterChange": "48bf00145f70fca24101eaac33adc5d495f9e595", "methodNumberBeforeChange": 301, "methodNumberAfterChange": 300, "signatureBeforeChange": " public void test432759()", "signatureAfterChange": " public void test432759()", "diff": ["-\t\"\");", "+\t\"----------\\n\" + ", "+\t\"1. ERROR in X.java (at line 16)\\n\" + ", "+\t\"\tBinaryOperator<Subsumer<? super T>> attempt_X_3 = Subsumer::andThe3;\\n\" + ", "+\t\"\t                                                  ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\"The type Subsumer does not define andThe3(Subsumer<capture#5-of ? super T>, Subsumer<capture#5-of ? super T>) that is applicable here\\n\" + ", "+\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "317c52267d9d57a377b8173ddb20faa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test0019_field_synchronized()", "signatureAfterChange": " public void test0019_field_synchronized()", "diff": ["-\t\t\"\"", "-//      \"----------\\n\" +", "-//      \"1. ERROR in X.java (at line 5)\\n\" +", "-//      \"\to.toString();\\n\" +", "-//      \"\t^\\n\" +", "-//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "-//      \"----------\\n\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f44cec4f3b9d6ca353bfcc7b259b661", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "ab7efb5fc7aa3c0010645bf37cbb96632a7db099", "commitAfterChange": "02c268a4d3cda9d82648fb2a27d6f6a49334a9c9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\t\t\t \t \tpublic void test027()", "signatureAfterChange": "\t\t\t \t \tpublic void test027()", "diff": ["-\t\t\t\"1\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tif (0 == new X()) {\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Incompatible operand types int and X\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4177e34041c91b87aea790c2841f5d64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "45a56425aa646e258743712b7b8dd871458d173e", "commitAfterChange": "53367e7594cd90802bb610558e9e1ffd148fd7db", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 314, "signatureBeforeChange": " \tpublic void _test312()", "signatureAfterChange": " \tpublic void _test312()", "diff": ["-\t// TODO (kent) reenable once addressed", "+\t// TODO (kent) fixed with !inheritedArg.isEquivalentTo(currentArg) check in MethodVerifier", "-\t\t\t\"should report name clash\");\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\t\"\tvoid foo(List<X> lx) { }\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash : The method foo(List<X>) of type X has the same erasure as foo(List<Object>) of type X2 but does not override it\\n\" + ", "+\t\t\t\"----------\\n\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b984278c7721a78a7c375eebeba889b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "0fdabed7d03d0f0d08fda0e7f845381fd7c643ef", "commitAfterChange": "b31cd8ccd51413655d3e805905e8dd7d1404f391", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r \tpublic void test420038()", "signatureAfterChange": "\r \tpublic void test420038()", "diff": ["-\t\t\t\"\");\t\t\r", "+\t\t\t\"----------\\n\" + \r", "+\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + \r", "+\t\t\t\"\tClass<?> c = int @T [].class; \\n\" + \r", "+\t\t\t\"\t                 ^^\\n\" + \r", "+\t\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "+\t\t\t\"----------\\n\");\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d3b51a7f3ad1e439ca9077a6656e812", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "c539ab4170e4fe0d8578cc8fb0121c9a797f5894", "commitAfterChange": "44363e0012bf09a8a44565479ae5740426ed378a", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " public void test384750j()", "signatureAfterChange": " public void test384750j()", "diff": ["-\t\t\t\t\t\"\");", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\t\"\tI i = super::foo;\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Access to enclosing method foo(int, String) from the type Y is emulated by a synthetic accessor method\\n\" + ", "+\t\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c689d60e99afe83d4d62e2f8e9849a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "a430dcf4a558e1c36680a36ef4af1ace851e14d2", "commitAfterChange": "dce0303da6d0cbf1d565391873636c507bd68d3f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void test020()", "signatureAfterChange": " public void test020()", "diff": ["+\t\t\"try1\\n\" + ", "+\t\t\"try2\\n\" + ", "+\t\t\"finally2\\n\" + ", "+\t\t\"finally1\\n\" + ", "+\t\t\"try3\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "777bd87206c1c7480d026b48da937659", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "45a56425aa646e258743712b7b8dd871458d173e", "commitAfterChange": "53367e7594cd90802bb610558e9e1ffd148fd7db", "methodNumberBeforeChange": 312, "methodNumberAfterChange": 312, "signatureBeforeChange": " \t  public void _test310()", "signatureAfterChange": " \t  public void _test310()", "diff": ["-\t// TODO (kent) reenable once addressed", "+\t// TODO (kent) fixed with !inheritedArg.isEquivalentTo(currentArg) check in MethodVerifier", "-\t\t\t\"report name clash\");\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\t\"\tvoid foo(List<X> lx) { }\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash : The method foo(List<X>) of type X has the same erasure as foo(List<Object>) of type X2 but does not override it\\n\" + ", "+\t\t\t\"----------\\n\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82614a82ccfc16200546a28d3496dfd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0002_simple_field()", "signatureAfterChange": " public void test0002_simple_field()", "diff": ["-\t\"\"", "-//      \"----------\\n\" +", "-//      \"1. ERROR in X.java (at line 5)\\n\" +", "-//      \"\to.toString();\\n\" +", "-//      \"\t^\\n\" +", "-//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "-//      \"----------\\n\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ec32f3da6238d67d7280492e39b362d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "c539ab4170e4fe0d8578cc8fb0121c9a797f5894", "commitAfterChange": "44363e0012bf09a8a44565479ae5740426ed378a", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": " public void test384750l()", "signatureAfterChange": " public void test384750l()", "diff": ["-\t\t\t\t\t\"\");", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\t\t\"\tI i = X.super::zoo;\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Access to enclosing method zoo() from the type Z is emulated by a synthetic accessor method\\n\" + ", "+\t\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a13581e7f6b3604bba66ae020cf07b82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "bfeefe0bfa824914f542a3a07eccab1379d1c70b", "commitAfterChange": "999bcda04cb6d6af2ffd5ec4d0e38a056d1cb17e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testBroadcastAST3() throws JavaModelException", "signatureAfterChange": " public void testBroadcastAST3() throws JavaModelException", "diff": ["-\t\t\"null\",", "+\t\t\"package p1;\\n\" + ", "+\t\t\"import p2.*;\\n\" + ", "+\t\t\"public class X {\\n\" + ", "+\t\t\"  public void foo(){\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c8fdd2e206043f0a0f10ea3665d63c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "039d36406bcab8d55430422b8fa21e6430ca432b", "commitAfterChange": "2589a5043fbf85cbfa0148485996a08e8c01e3cf", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 309, "signatureBeforeChange": " public void test297()", "signatureAfterChange": " public void test297()", "diff": ["-\t\t\t\"\",", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 15)\\n\" + ", "+\t\t\t\"\treturn i == i;\\n\" + ", "+\t\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\t\"Comparing identical expressions\\n\" + ", "+\t\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8a83fad305045974991b6d00e4c525", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "341ead40b71a0bffec0f8325f6b29d2b567caf8a", "commitAfterChange": "f5884fa8b0573c548eaeabaa37cd99c51e41fd3b", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void testBug433158()", "signatureAfterChange": " public void testBug433158()", "diff": ["-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in CollectorsMaps.java (at line 20)\\n\" + ", "+\t\t\"\tp -> p.lhs.stream().map(p::keepingRhs)).collect(\\n\" + ", "+\t\t\"\t                                        ^^^^^^^\\n\" + ", "+\t\t\"The method collect(Collector<? super Object,A,R>) in the type Stream<Object> is not applicable for the arguments (Collector<CollectorsMaps.Pair<String,String>,capture#3-of ?,Map<String,List<String>>>)\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd2f619625e59aec72f28554a3f9bd50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void test0018_field_of_enclosing_object()", "signatureAfterChange": " public void test0018_field_of_enclosing_object()", "diff": ["-\t\t\"\"", "-//      \"----------\\n\" +", "-//      \"1. ERROR in X.java (at line 6)\\n\" +", "-//      \"\tX.this.o.toString();\\n\" +", "-//      \"\t^^^^^^^^\\n\" +", "-//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "-//      \"----------\\n\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tX.this.o.toString();\\n\" + ", "+\t\t\"\t       ^\\n\" + ", "+\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c423aef6be6641e40f38530ade7b0ad8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": " public void test0954_assert_fake_reachable()", "signatureAfterChange": " public void test0954_assert_fake_reachable()", "diff": ["-\t\t\"\");", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tassert(false && o != null);\\n\" + ", "+\t\t\t\t\"\t                ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Dead code\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdada580601accd327725023518af3c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "42447436e23c8b834f739c59c59e1920ee7c8e20", "commitAfterChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "methodNumberBeforeChange": 1126, "methodNumberAfterChange": 1126, "signatureBeforeChange": " public void _test1101()", "signatureAfterChange": " public void _test1101()", "diff": ["-\t\t}, ", "-\t\t\"NEED TO BE DETERMINED\");", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\"\tlist.add(X.<?, Object>create(\\\"\\\", \\\"\\\"));\\n\" + ", "+\t\t\"\t            ^\\n\" + ", "+\t\t\"Wildcard is not allowed at this location\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f9b0006038a749fd4afa5372f5c082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test0014_field_with_explicit_this_access()", "signatureAfterChange": " public void test0014_field_with_explicit_this_access()", "diff": ["-\t\t\"\"", "-//      \"----------\\n\" +", "-//      \"1. ERROR in X.java (at line 5)\\n\" +", "-//      \"\tthis.o.toString();\\n\" +", "-//      \"\t^^^^^^\\n\" +", "-//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "-//      \"----------\\n\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tthis.o.toString();\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d322764d3400431b1d9dc5bff88c12b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a61eee4f24f1c2965e704a1c85f9756b85244f55", "commitAfterChange": "fc6677e40e721485518e6c374f4d05609842a9f4", "methodNumberBeforeChange": 531, "methodNumberAfterChange": 531, "signatureBeforeChange": " \tpublic void test529()", "signatureAfterChange": " \tpublic void test529()", "diff": ["-\t\t\t\"\"", "-\t\t);", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tT t = new ArrayList(); // BUG!!!\\n\" + ", "+\t\t\t\"\t  ^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from ArrayList to T\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 3505}