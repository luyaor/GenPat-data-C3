{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bb252a7685b164c7728ed4be9834b43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d6c76c2bb02a8a16ca0caee5c98713", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void saveIndexes()", "signatureAfterChange": " public void saveIndexes()", "diff": ["+\tboolean allSaved = true;", "-\t\tReadWriteMonitor monitor = getMonitorFor(index);", "+\t\tReadWriteMonitor monitor = index.monitor;", "-\t\t\t\tmonitor.exitRead();", "-\t\t\t\tmonitor.enterWrite();", "-\t\t\t\ttry {", "-\t\t\t\t\tsaveIndex(index);", "-\t\t\t\t} catch(IOException e){", "-\t\t\t\t\tif (VERBOSE) {", "-\t\t\t\t\t\tJobManager.verbose(\"-> got the following exception while saving:\"); //$NON-NLS-1$", "-\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\tif (monitor.exitReadEnterWrite()) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tsaveIndex(index);", "+\t\t\t\t\t} catch(IOException e) {", "+\t\t\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\t\t\tJobManager.verbose(\"-> got the following exception while saving:\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tallSaved = false;", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tmonitor.exitWriteEnterRead();", "-\t\t\t\t\t//Util.log(e);", "-\t\t\t\t} finally {", "-\t\t\t\t\tmonitor.exitWriteEnterRead();", "+\t\t\t\t} else {", "+\t\t\t\t\tallSaved = false;", "-\tneedToSave = false;", "+\tthis.needToSave = !allSaved;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15a015d8cf87181e23ee04bf4af357f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "diff": ["+\t\tboolean hasAbstractMethods = false;", "-\t\t\tif (isInterface || method.isAbstract()) { // fix-up flag ", "+\t\t\tboolean isAbstract;", "+\t\t\tif ((isAbstract = method.isAbstract()) || isInterface) { // fix-up flag ", "+\t\t\tif (isAbstract) {", "+\t\t\t\thasAbstractMethods = true;", "+\t\t\t}", "+\t\tif (hasAbstractMethods) {", "+\t\t\ttypeDeclaration.bits |= ASTNode.HasAbstractMethods;", "+\t\t}"]}], "num": 31003}