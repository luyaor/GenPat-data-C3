{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c9347c6ac032df99fd750b4ed2542b6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54ae519f6ac4da8acd0e6a45e655877c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "commitAfterChange": "c9769d083b4db22816fec0d9f0474fe81ee618a0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": "\t  \tpublic void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, syntheticAccessors == null ? null : syntheticAccessors[WRITE], operation.right, (operation.bits & OperatorMASK) >> OperatorSHIFT, operation.left.implicitConversion /*should be equivalent to no conversion*/, valueRequired);", "+\t\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, syntheticAccessors == null ? null : syntheticAccessors[WRITE], operation.right, (operation.bits & OperatorMASK) >> OperatorSHIFT, operation.implicitConversion, valueRequired);", "-\t\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, syntheticAccessors == null ? null : syntheticAccessors[WRITE], operation.left, operator, operation.right.implicitConversion /*should be equivalent to no conversion*/, valueRequired);", "+\t\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, syntheticAccessors == null ? null : syntheticAccessors[WRITE], operation.left, operator, operation.implicitConversion, valueRequired);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8c7cab0b2b1ea51cbe2e710095f9f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "c986b0f978be08ca5c6279c4e65ad1a7f4c62b60", "commitAfterChange": "be7acf5c57ef3c4a15433f3f4f0191da4eed3774", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": " public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["+\t\tint operator = (operation.bits & OperatorMASK) >> OperatorSHIFT;", "-\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, this.syntheticAccessors == null ? null : this.syntheticAccessors[WRITE], operation.right, (operation.bits & OperatorMASK) >> OperatorSHIFT, operation.left.implicitConversion /*should be equivalent to no conversion*/, valueRequired);", "+\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, this.syntheticAccessors == null ? null : this.syntheticAccessors[WRITE], operation.right, operator, operation.implicitConversion, valueRequired);", "+\t\t\tif (valueRequired) {", "+\t\t\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "+\t\t\t}", "-\t\tint operator = (operation.bits & OperatorMASK) >> OperatorSHIFT;", "-\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, this.syntheticAccessors == null ? null : this.syntheticAccessors[WRITE], operation.left, operator, operation.right.implicitConversion /*should be equivalent to no conversion*/, valueRequired);", "+\t\t\tvariableReference.generateCompoundAssignment(currentScope, codeStream, this.syntheticAccessors == null ? null : this.syntheticAccessors[WRITE], operation.left, operator, operation.implicitConversion, valueRequired);", "+\t\t\tif (valueRequired) {", "+\t\t\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "+\t\t\t}"]}], "num": 62176}