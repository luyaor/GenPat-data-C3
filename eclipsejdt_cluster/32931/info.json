{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa676444cc082e3574c2980a0b1557da", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "332d14bbaa9d612c3781d5c332ffaea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "4bdaeea55f822d40f091cb049396332b7c171014", "commitAfterChange": "d711e1b4c31d759d30a3f5572a5f96c92a5c08ae", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static String displayString(String inputString, int indent)", "signatureAfterChange": " public static String displayString(String inputString, int indent)", "diff": ["-\t\t\tbuffer.append(\"\\\\n\\\" + \\n\");", "-\t\t\tfor (int i = 0; i < indent; i++) buffer.append(\"\\t\");", "-\t\t\tbuffer.append(\"\\\"\");", "+\t\t\tif (tokenizer.hasMoreTokens()) {", "+\t\t\t\tbuffer.append(\"\\\\n\\\" + \\n\");", "+\t\t\t\tfor (int i = 0; i < indent; i++) buffer.append(\"\\t\");", "+\t\t\t\tbuffer.append(\"\\\"\");", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a53eff75bed5fb9e763bfaee76c8ae65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "391f791bfc062c8038e2d943e7b32d7fd90d00ef", "commitAfterChange": "d08e5f309402c54ffedba70c68551e94fb181264", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic static String getLineSeparator(String text, IJavaProject project)", "signatureAfterChange": " \tpublic static String getLineSeparator(String text, IJavaProject project)", "diff": ["-\t\t// line delimiter in project preference", "-\t\tIScopeContext[] scopeContext;", "-\t\tif (project != null) {", "-\t\t\tscopeContext= new IScopeContext[] { new ProjectScope(project.getProject()) };", "-\t\t\tlineSeparator= Platform.getPreferencesService().getString(Platform.PI_RUNTIME, Platform.PREF_LINE_SEPARATOR, null, scopeContext);", "+\t\tif (Platform.isRunning()) {", "+\t\t\t// line delimiter in project preference", "+\t\t\tIScopeContext[] scopeContext;", "+\t\t\tif (project != null) {", "+\t\t\t\tscopeContext= new IScopeContext[] { new ProjectScope(project.getProject()) };", "+\t\t\t\tlineSeparator= Platform.getPreferencesService().getString(Platform.PI_RUNTIME, Platform.PREF_LINE_SEPARATOR, null, scopeContext);", "+\t\t\t\tif (lineSeparator != null)", "+\t\t\t\t\treturn lineSeparator;", "+\t\t\t}", "+\t", "+\t\t\t// line delimiter in workspace preference", "+\t\t\tscopeContext= new IScopeContext[] { new InstanceScope() };", "+\t\t\tlineSeparator = Platform.getPreferencesService().getString(Platform.PI_RUNTIME, Platform.PREF_LINE_SEPARATOR, null, scopeContext);", "-", "-\t\t// line delimiter in workspace preference", "-\t\tscopeContext= new IScopeContext[] { new InstanceScope() };", "-\t\tlineSeparator = Platform.getPreferencesService().getString(Platform.PI_RUNTIME, Platform.PREF_LINE_SEPARATOR, null, scopeContext);", "-\t\tif (lineSeparator != null)", "-\t\t\treturn lineSeparator;"]}], "num": 32931}