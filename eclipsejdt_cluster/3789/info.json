{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23aa2007d8ed6be577af1198e492b51b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "346f9122cc16601a7df0e4590237cda2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "133637902ff6fb378bf39fc58702c75f6ada75f9", "commitAfterChange": "578bacf5897125d4f0c0b3fc7b65eea2b34abec3", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " protected void reportAccurateFieldReference(QualifiedNameReference qNameRef, IJavaElement element, int[] accuracies) throws CoreException", "signatureAfterChange": " protected void reportAccurateFieldReference(QualifiedNameReference qNameRef, IJavaElement element, int[] accuracies) throws CoreException", "diff": ["-\t\t\twhile (i < length && !(equals = this.pattern.matchesName(tokens[i++], currentTokenSource)));", "+\t\t\twhile (i < length && !(equals = this.pattern.matchesName(tokens[i++], currentTokenSource))){/*empty*/}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d860a3be71c25a60c172c8b74d20d9f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "16f19f97a8c0b1427b54df75b660d6aca7b7db26", "commitAfterChange": "541b97703db1bd451769991108f32e3de9b086ac", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] tokens, IJavaElement element, int[] accuracies) throws CoreException", "signatureAfterChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] tokens, IJavaElement element, int[] accuracies) throws CoreException", "diff": ["+\t\t\t//ignore", "-\t\t\twhile (i < length && !(equals = this.pattern.matchesName(tokens[i++], currentTokenSource))) {", "-\t\t\t}", "+\t\t\twhile (i < length && !(equals = this.pattern.matchesName(tokens[i++], currentTokenSource)));", "+\t\t\t\t// ignore"]}], "num": 3789}