{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c0e4169dc51896ead317877ce634d98", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e27de5a991b52bfcc14d2eaa7067b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t public MethodPattern(int matchMode, boolean isCaseSensitive)", "signatureAfterChange": "  public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tint matchMode,  \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType)", "diff": ["-\tprotected int decodedParameterCount;\t", "-public MethodPattern(int matchMode, boolean isCaseSensitive) {", "+", "+public MethodPattern(", "+\tboolean findDeclarations,", "+\tboolean findReferences,", "+\tchar[] selector, ", "+\tint matchMode, ", "+\tboolean isCaseSensitive,", "+\tchar[] declaringQualification,", "+\tchar[] declaringSimpleName,\t", "+\tchar[] returnQualification, ", "+\tchar[] returnSimpleName,", "+\tchar[][] parameterQualifications, ", "+\tchar[][] parameterSimpleNames,", "+\tIType declaringType) {", "+", "-}", "+\tthis.findDeclarations = findDeclarations;", "+\tthis.findReferences = findReferences;", "+", "+\tthis.selector = isCaseSensitive ? selector : CharOperation.toLowerCase(selector);", "+\tthis.declaringQualification = isCaseSensitive ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "+\tthis.declaringSimpleName = isCaseSensitive ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "+\tthis.returnQualification = isCaseSensitive ? returnQualification : CharOperation.toLowerCase(returnQualification);", "+\tthis.returnSimpleName = isCaseSensitive ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "+\tif (parameterSimpleNames != null) {", "+\t\tthis.parameterQualifications = new char[parameterSimpleNames.length][];", "+\t\tthis.parameterSimpleNames = new char[parameterSimpleNames.length][];", "+\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++) {", "+\t\t\tthis.parameterQualifications[i] = isCaseSensitive ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "+\t\t\tthis.parameterSimpleNames[i] = isCaseSensitive ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);", "+", "+\tthis.declaringType = declaringType;", "+\tthis.mustResolve = mustResolve();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8801e616a05bcee9775fefc2868f3b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "0774ccc9fbfb251d06c1b6758403976034210f78", "commitAfterChange": "2c05ea4676dfc26a576c4e213abe1328f88694aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "signatureAfterChange": "  public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "diff": ["-\tthis.selector = this.isCaseSensitive ? selector : CharOperation.toLowerCase(selector);", "-\tthis.declaringQualification = this.isCaseSensitive ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "-\tthis.declaringSimpleName = this.isCaseSensitive ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "-\tthis.returnQualification = this.isCaseSensitive ? returnQualification : CharOperation.toLowerCase(returnQualification);", "-\tthis.returnSimpleName = this.isCaseSensitive ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "+\tthis.selector = isCaseSensitive() ? selector : CharOperation.toLowerCase(selector);", "+\tthis.declaringQualification = isCaseSensitive() ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "+\tthis.declaringSimpleName = isCaseSensitive() ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "+\tthis.returnQualification = isCaseSensitive() ? returnQualification : CharOperation.toLowerCase(returnQualification);", "+\tthis.returnSimpleName = isCaseSensitive() ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "-\t\t\tthis.parameterQualifications[i] = this.isCaseSensitive ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "-\t\t\tthis.parameterSimpleNames[i] = this.isCaseSensitive ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);", "+\t\t\tthis.parameterQualifications[i] = isCaseSensitive() ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "+\t\t\tthis.parameterSimpleNames[i] = isCaseSensitive() ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);"]}], "num": 29777}