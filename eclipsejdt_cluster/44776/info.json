{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "138530ce99b328b472f8c3a10d65d031", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c33bd690f8e7c9710940c4ea40e6b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/junit/textui/TestRunner.java", "commitBeforeChange": "5f14954289dcfe3aa64cd723a9ea9807dea33e05", "commitAfterChange": "4b4449dde49cdcaed9ae00d1ac057ecfeb8d8c23", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void printFailures(TestResult result)", "signatureAfterChange": " \tpublic TestRunner(ResultPrinter printer)", "diff": ["+\tpublic TestRunner(ResultPrinter printer) {", "+\t\tfPrinter= printer;", "-\t */", "-\tpublic void printFailures(TestResult result) {", "-\t\tif (result.failureCount() != 0) {", "-\t\t\tif (result.failureCount() == 1)", "-\t\t\t\twriter().println(\"There was \" + result.failureCount() + \" failure:\");", "-\t\t\telse", "-\t\t\t\twriter().println(\"There were \" + result.failureCount() + \" failures:\");", "-\t\t\tint i = 1;", "-\t\t\tfor (Enumeration e= result.failures(); e.hasMoreElements(); i++) {", "-\t\t\t\tTestFailure failure= (TestFailure) e.nextElement();", "-\t\t\t\twriter().print(i + \") \" + failure.failedTest());", "-\t\t\t\tThrowable t= failure.thrownException();", "-\t\t\t\twriter().print(getFilteredTrace(failure.thrownException()));", "-\t\t\t}", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f71bab59cc376428d3ed46f89e95f70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "ac56f2b73d9b33e4b9a6e4d4cb10ee0f16401ca0", "commitAfterChange": "075f0337e26b45d6db80c1a335ec63cbf2bb29bc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic void recordStringLiteral(StringLiteral literal)", "signatureAfterChange": "  \tpublic void recordStringLiteral(StringLiteral literal, boolean fromRecovery)", "diff": ["-\tpublic void recordStringLiteral(StringLiteral literal) {", "+\tpublic void recordStringLiteral(StringLiteral literal, boolean fromRecovery) {", "+\t\tif (this.stringLiteralsStart != null) {", "+\t\t\tif (this.stringLiteralsStart.contains(literal.sourceStart)) return;", "+\t\t\tthis.stringLiteralsStart.add(literal.sourceStart);", "+\t\t} else if (fromRecovery) {", "+\t\t\tthis.stringLiteralsStart = new HashSetOfInt(stringLiteralsPtr + STRING_LITERALS_INCREMENT);", "+\t\t\tfor (int i = 0; i < this.stringLiteralsPtr; i++) {", "+\t\t\t\tthis.stringLiteralsStart.add(this.stringLiterals[i].sourceStart);", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (this.stringLiteralsStart.contains(literal.sourceStart)) return;", "+\t\t\tthis.stringLiteralsStart.add(literal.sourceStart);", "+\t\t}", "+\t\t"]}], "num": 44776}