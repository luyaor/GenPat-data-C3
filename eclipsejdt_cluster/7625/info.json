{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f509f620b135687b52a5ae65e6d4fb4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250cca2c4089252d81ba4fec7814a000", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "6e642a34a8b5c85df508f049684a8996f1b8df52", "commitAfterChange": "355460267a070a52738f93cd1e4e0f2039fb0d85", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild)", "signatureAfterChange": " \tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild, int[] parentLineRange)", "diff": ["-\tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild) {", "+\tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild, int[] parentLineRange) {", "-\t\tint nodeEndLine = this.scanner.getLineNumber(nodeEnd);", "+\t\tint nodeEndLine = getLineNumber(nodeEnd, parentLineRange);", "-\t\t\tint commentLine = this.scanner.getLineNumber(commentStart);", "+\t\t\tint commentLine = getLineNumber(commentStart, parentLineRange);", "-\t\t\t\tint nextLine = this.scanner.getLineNumber(nextStart);", "-\t\t\t\tint previousLine = this.scanner.getLineNumber(previousEnd);", "+\t\t\t\tint nextLine = getLineNumber(nextStart, parentLineRange);", "+\t\t\t\tint previousLine = getLineNumber(previousEnd, parentLineRange);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6fcb4bdc7a6028b1f220b0020b1b34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "6e642a34a8b5c85df508f049684a8996f1b8df52", "commitAfterChange": "355460267a070a52738f93cd1e4e0f2039fb0d85", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tint storeLeadingComments(ASTNode node, int previousEnd)", "signatureAfterChange": " \tint storeLeadingComments(ASTNode node, int previousEnd, int[] parentLineRange)", "diff": ["-\tint storeLeadingComments(ASTNode node, int previousEnd) {", "+\tint storeLeadingComments(ASTNode node, int previousEnd, int[] parentLineRange) {", "-\t\tint previousEndLine = this.scanner.getLineNumber(previousEnd);", "-\t\tint nodeStartLine = this.scanner.getLineNumber(nodeStart);", "+\t\tint previousEndLine = getLineNumber(previousEnd, parentLineRange);", "+\t\tint nodeStartLine = getLineNumber(nodeStart, parentLineRange);", "-\t\t\tint commentLine = this.scanner.getLineNumber(commentStart);", "+\t\t\tint commentLine = getLineNumber(commentStart, parentLineRange);", "-\t\t\t\tint lastTokenLine = this.scanner.getLineNumber(lastTokenEnd);", "+\t\t\t\tint lastTokenLine = getLineNumber(lastTokenEnd, parentLineRange);", "-\t\t\t\twhile (startIdx<length && lastTokenLine == this.scanner.getLineNumber(this.comments[startIdx].getStartPosition()) && nodeStartLine != lastTokenLine) {", "+\t\t\t\twhile (startIdx<length && lastTokenLine == getLineNumber(this.comments[startIdx].getStartPosition(), parentLineRange) && nodeStartLine != lastTokenLine) {"]}], "num": 7625}