{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee19b71de142385d0d5d1ce36f046520", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079b1b90ceb61b6010ddf3c306bbd2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "4a42ce44b4dbdac7dfa261ef1a39fce0de95d7be", "commitAfterChange": "51fbd8e4f6294604d20aa6227743a8c8abfdc166", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "signatureAfterChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "diff": ["-\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(segmentCount).makeRelative();\r", "+\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(segmentCount).makeRelative().setDevice(null);\r", "-\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(segmentCount).makeRelative();\r", "+\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(segmentCount).makeRelative().setDevice(null);\r", "-\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension().makeRelative();\r", "+\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension().makeRelative().setDevice(null);\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Compile this added source file \" + location); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Compile this added source file \" + sourceLocation); //$NON-NLS-1$\r", "-\t\t\t\t\t\tString typeName = typePath.setDevice(null).toString();\r", "+\t\t\t\t\t\tString typeName = typePath.toString();\r", "-\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added source file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added source file \" + typeName); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Compile this changed source file \" + location); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Compile this changed source file \" + sourceLocation); //$NON-NLS-1$\r", "-\t\t\t\t\t\ttypeNames.add(typePath.setDevice(null).toString());\r", "+\t\t\t\t\t\ttypeNames.add(typePath.toString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155787913db0447327f7bf498658ef80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/IncrementalImageBuilder.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int outputFolderSegmentCount)", "signatureAfterChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int outputFolderSegmentCount)", "diff": ["-\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "-\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\tSystem.out.println(\"Add dependents of added package \" + addedPackagePath); //$NON-NLS-1$\r", "-\t\t\t\t\taddDependentsOf(addedPackagePath, false);\r", "-\t\t\t\t\treturn;\r", "-\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "+\t\t\t\t\tIPath packagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "-\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed package \" + removedPackagePath); //$NON-NLS-1$\r", "-\t\t\t\t\taddDependentsOf(removedPackagePath, false);\r", "+\t\t\t\t\t\tSystem.out.println(\"Add dependents of added/removed package \" + packagePath); //$NON-NLS-1$\r", "+\t\t\t\t\taddDependentsOf(packagePath, false);\r", "-\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added class file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\t\t\taddDependentsOf(typePath, false);\r", "-\t\t\t\t\t\treturn;\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed class file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added/removed class file \" + typePath); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d8dbd5e4d40e6e5f1c99b6e8ecc670e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "4a42ce44b4dbdac7dfa261ef1a39fce0de95d7be", "commitAfterChange": "51fbd8e4f6294604d20aa6227743a8c8abfdc166", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int segmentCount)", "signatureAfterChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int segmentCount)", "diff": ["-\t\t\t\t\tIPath packagePath = location.removeFirstSegments(segmentCount).makeRelative();\r", "-\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\tSystem.out.println(\"Add dependents of added/removed package \" + packagePath); //$NON-NLS-1$\r", "-\t\t\t\t\taddDependentsOf(packagePath, false);\r", "-\t\t\t\t\treturn;\r", "+\t\t\t\t\tIPath packagePath = location.removeFirstSegments(segmentCount).makeRelative().setDevice(null);\r", "+\t\t\t\t\tString packageName = packagePath.toString();\r", "+\t\t\t\t\tif (binaryDelta.getKind() == IResourceDelta.ADDED) {\r", "+\t\t\t\t\t\t// see if any known source file is from the same package... classpath already includes new package\r", "+\t\t\t\t\t\tif (!newState.isKnownPackage(packageName)) {\r", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added package \" + packageName); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\taddDependentsOf(packagePath, false);\r", "+\t\t\t\t\t\t\treturn;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Skipped dependents of added package \" + packageName); //$NON-NLS-1$\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t// see if the package still exists on the classpath\r", "+\t\t\t\t\t\tif (!nameEnvironment.isPackage(packageName)) {\r", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed package \" + packageName); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\taddDependentsOf(packagePath, false);\r", "+\t\t\t\t\t\t\treturn;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Skipped dependents of removed package \" + packageName); //$NON-NLS-1$\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\t// fall thru & traverse the sub-packages and .class files\r", "-\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension().makeRelative();\r", "+\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension().makeRelative().setDevice(null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "269e9f8a1da3172fce4b65e830a265ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "142b4cee7fc63efbc8075023107573a5b585caaa", "commitAfterChange": "403e7e464831535d0b419fdd79236883baa68267", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "signatureAfterChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "diff": ["-\t\t\t\t\t\t} else if (definedTypeNames.length > 0) { // skip it if it failed to successfully define a type\r", "-\t\t\t\t\t\t\tIPath packagePath = typePath.removeLastSegments(1);\r", "-\t\t\t\t\t\t\tfor (int i = 0, length = definedTypeNames.length; i < length; i++)\r", "-\t\t\t\t\t\t\t\tremoveClassFile(packagePath.append(new String(definedTypeNames[i])));\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed source file \" + typePath.toString()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\taddDependentsOf(typePath, true); // add dependents of the source file since it may be involved in a name collision\r", "+\t\t\t\t\t\t\tif (definedTypeNames.length > 0) { // skip it if it failed to successfully define a type\r", "+\t\t\t\t\t\t\t\tIPath packagePath = typePath.removeLastSegments(1);\r", "+\t\t\t\t\t\t\t\tfor (int i = 0, length = definedTypeNames.length; i < length; i++)\r", "+\t\t\t\t\t\t\t\t\tremoveClassFile(packagePath.append(new String(definedTypeNames[i])));\r", "+\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87637dff170c4be0ca2518593f2abd69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/IncrementalImageBuilder.java", "commitBeforeChange": "ceb521e070d662becc4ec3ee749b1a95a26cea96", "commitAfterChange": "76e64f6d50988c18aa31100f2ef1486d1924fea9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int sourceFolderSegmentCount) throws CoreException", "signatureAfterChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int sourceFolderSegmentCount) throws CoreException", "diff": ["-\t\t\t\t\t\ttypeNames.add(typePath.setDevice(null).toString());\r", "-\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added source file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\t\t\taddDependentsOf(typePath, true);\r", "+\t\t\t\t\t\tString typeName = typePath.setDevice(null).toString();\r", "+\t\t\t\t\t\ttypeNames.add(typeName);\r", "+\t\t\t\t\t\tif (!newState.isDuplicateLocation(typeName, sourceLocation)) {\r", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added source file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\taddDependentsOf(typePath, true);\r", "+\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t} else if (definedTypeNames.length == 0) { // failed to successfully define a type\r", "-\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed empty source file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\taddDependentsOf(typePath, true);\r", "-\t\t\t\t\t\t} else { // defined multiple types\r", "+\t\t\t\t\t\t} else if (definedTypeNames.length > 0) { // ignore it if it failed to successfully define a type\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd4f28bbad97da75f14adb13ff4da7de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/IncrementalImageBuilder.java", "commitBeforeChange": "9972a270d052b806463661287625f0d281667e4e", "commitAfterChange": "79c96bc51135904745e51a2c90ed269611b0cb4a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int sourceFolderSegmentCount) throws CoreException", "signatureAfterChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int sourceFolderSegmentCount) throws CoreException", "diff": ["+\t\t\t\tString sourceLocation = location.toString();\r", "-\t\t\t\t\t\tlocations.add(location.toString());\r", "+\t\t\t\t\t\tlocations.add(sourceLocation);\r", "-\t\t\t\t\t\tchar[][] definedTypeNames = newState.getDefinedTypeNamesFor(location.toString());\r", "-\t\t\t\t\t\tif (definedTypeNames == null || definedTypeNames.length == 0) {\r", "+\t\t\t\t\t\tchar[][] definedTypeNames = newState.getDefinedTypeNamesFor(sourceLocation);\r", "+\t\t\t\t\t\tif (definedTypeNames == null) { // defined a single type matching typePath\r", "-\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t} else if (definedTypeNames.length == 0) { // failed to successfully define a type\r", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed empty source file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\taddDependentsOf(typePath, true);\r", "+\t\t\t\t\t\t} else { // defined multiple types\r", "-\t\t\t\t\t\tlocations.add(sourceDelta.getResource().getLocation().toString());\r", "+\t\t\t\t\t\tlocations.add(sourceLocation);\r", "+\t\t\t\t\t\tchar[][] previousTypeNames = newState.getDefinedTypeNamesFor(sourceLocation);\r", "+\t\t\t\t\t\tif (previousTypeNames != null && previousTypeNames.length == 0) {\r", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of changed empty source file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\taddDependentsOf(typePath, true);\r", "+\t\t\t\t\t\t}\r"]}], "num": 15318}