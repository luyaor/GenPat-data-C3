{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20ce7d06d25550e4c4178c2eca6ff687", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04e31bd13ed21b0adea47f9841acd401", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "a6c016e4b9174d429d2989715c74cf56e42ef6bb", "commitAfterChange": "c9f804b2e84f02e4cfe425f0463c67be2149642c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType)", "diff": ["-\t\t\tif (isTypeUseDeprecated(this.resolvedType, scope)) {", "+\t\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "-\t\t\t}", "-\t\t// check argument type compatibility", "-\t\tfor (int i = 0; i < argLength; i++) {", "-\t\t    TypeBinding argType = argTypes[i];", "-\t\t\tif (!typeVariables[i].boundCheck(parameterizedType, argType)) {", "-\t\t\t\tscope.problemReporter().typeMismatchError(argType, typeVariables[i], currentType, this.typeArguments[i]);", "-\t\t    }", "-\t\t}", "+\t\t// check argument type compatibility now if not a class scope", "+\t\tif (!isClassScope) // otherwise will do it in Scope.connectTypeVariables()", "+\t\t\tfor (int i = 0; i < argLength; i++)", "+\t\t\t    if (!typeVariables[i].boundCheck(parameterizedType, argTypes[i]))", "+\t\t\t\t\tscope.problemReporter().typeMismatchError(argTypes[i], typeVariables[i], currentType, this.typeArguments[i]);", "+", "-\t\tif (isTypeUseDeprecated(this.resolvedType, scope)) {", "+\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "-\t\t}\t\t", "-\t\t\tif (dimensions > 255) {", "+\t\t\tif (dimensions > 255)", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8c212651046ceace57e0bcfb04b5346", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "289dce143850c03aff8ce780ffcfc4ff9946c93b", "commitAfterChange": "627ddb655d5f70180ea3a2ef27ecd181e1d5ac35", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \tReferenceBinding resolve()", "signatureAfterChange": "  \tReferenceBinding resolve()", "diff": ["-\t\t\t}\t\t\t", "-\t\t\t// check argument type compatibility", "-\t\t\tfor (int i = 0; i < argLength; i++) {", "-\t\t\t    TypeBinding resolvedArgument = this.arguments[i];", "-\t\t\t\tif (refTypeVariables[i].boundCheck(this, resolvedArgument) != TypeConstants.OK) {", "-\t\t\t\t\tthis.environment.problemReporter.typeMismatchError(resolvedArgument, refTypeVariables[i], resolvedType, null);", "-\t\t\t    }", "+\t\t\t// check argument type compatibility... REMOVED for now since incremental build will propagate change & detect in source", "+//\t\t\tfor (int i = 0; i < argLength; i++) {", "+//\t\t\t    TypeBinding resolvedArgument = this.arguments[i];", "+//\t\t\t\tif (refTypeVariables[i].boundCheck(this, resolvedArgument) != TypeConstants.OK) {", "+//\t\t\t\t\tthis.environment.problemReporter.typeMismatchError(resolvedArgument, refTypeVariables[i], resolvedType, null);", "+//\t\t\t    }", "+//\t\t\t}"]}], "num": 3881}