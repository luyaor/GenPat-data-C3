{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9f4a83d6bc07b5bb4c404b41178aafb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55d3b5d0391853228f14f8a66d79061e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "7a9c0666eb2e26d6f63c1d37d496287d2df152d0", "commitAfterChange": "0c3f540ce1fe9929593a8b5509ca781a32c3ede2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env)", "signatureAfterChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env)", "diff": ["-\tint length = binaryPairs == null ? 0 : binaryPairs.length;", "-\tElementValuePair[] pairs = length == 0 ? Binding.NO_ELEMENT_VALUE_PAIRS : new ElementValuePair[length];", "-\tfor (int i = 0; i < length; i++)", "-\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env), null);", "-", "+\tint length;", "+\tElementValuePair[] pairs;", "+\tif (binaryPairs == null || (length = binaryPairs.length) == 0) {", "+\t\tpairs = Binding.NO_ELEMENT_VALUE_PAIRS;", "+\t} else {", "+\t\tpairs = new ElementValuePair[length];", "+\t\tfor (int i = 0; i < length; i++)", "+\t\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env), null);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "950deffc815ceea21430d73082d24732", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "1a66e0c1f7e396bd2b9ea140c3bd983c6d639200", "commitAfterChange": "109d0a84ac2e129f5c95f47b70b2216579e61e16", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env)", "signatureAfterChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env)", "diff": ["-\tint length;", "-\tElementValuePair[] pairs;", "-\tif (binaryPairs == null || (length = binaryPairs.length) == 0) {", "-\t\tpairs = Binding.NO_ELEMENT_VALUE_PAIRS;", "-\t} else {", "-\t\tpairs = new ElementValuePair[length];", "-\t\tfor (int i = 0; i < length; i++)", "-\t\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env), null);", "-\t}", "+\tint length = binaryPairs == null ? 0 : binaryPairs.length;", "+\tElementValuePair[] pairs = length == 0 ? Binding.NO_ELEMENT_VALUE_PAIRS : new ElementValuePair[length];", "+\tfor (int i = 0; i < length; i++)", "+\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env), null);", "+"]}], "num": 41661}