{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd7a2e9c8c2416cb3781335dc15df2da", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022e10eee766e2580343e2d0a1f60c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\t\tthis.resetAnyExceptionHandlers(); // could reenter if redoing codegen in wide-mode", "-\t\t\tExceptionLabel anyExceptionHandler = new ExceptionLabel(codeStream, null);", "-\t\t\t//'null' denotes any kind of exception", "+\t\t\tthis.enterAnyExceptionHandler(codeStream);", "-\t\t\tanyExceptionHandler.placeEnd();", "-\t\t\tanyExceptionHandler.place();", "+\t\t\tthis.exitAnyExceptionHandler();", "+\t\t\tthis.placeAllAnyExceptionHandlers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed1abf15f6c17d90a48435397d8bb52f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif (this.anyExceptionLabelsCount > 0) {", "-\t\t\tthis.anyExceptionLabels = NO_EXCEPTION_HANDLER;", "-\t\t\tthis.anyExceptionLabelsCount = 0;", "-\t\t}", "+\t\tthis.anyExceptionLabel = null;", "+", "-\t\t\tLabel endLabel = new Label(codeStream);", "+\t\t\tBranchLabel endLabel = new BranchLabel(codeStream);", "-\t\t\tthis.placeAllAnyExceptionHandlers();", "+\t\t\tthis.placeAllAnyExceptionHandler();"]}], "num": 45548}