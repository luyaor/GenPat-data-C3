{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c69e32f81e8aa39da7692470bf9dc71", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00dc4da0bcb7210706b3713f60ff2d1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " \tpublic void test253()", "signatureAfterChange": " \tpublic void test253()", "diff": ["-\t\t\t\"Unsafe type operation: The cast from List<? extends Number> to parameterized type List<Number> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from List<? extends Number> to List<Number> will not check conformance of type arguments at runtime\\n\" + ", "-\t\t\t\"Unnecessary cast to type List<? extends Number> for expression of type List<? extends Number>\\n\" + ", "+\t\t\t\"Unnecessary cast from List<? extends Number> to List<? extends Number>\\n\" + ", "-\t\t\t\"Unnecessary cast to type List<? extends Number> for expression of type List<Integer>\\n\" + ", "+\t\t\t\"Unnecessary cast from List<Integer> to List<? extends Number>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "873afb46939d944c3603d201341b6419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 267, "signatureBeforeChange": "\t\t \tpublic void test265()", "signatureAfterChange": "\t\t \tpublic void test265()", "diff": ["-\t\t\t\"Type safety: The cast from X<E> to XC<U> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from X<E> to XC<U> is actually checking against the erased type XC\\n\" + ", "-\t\t\t\"Type safety: The cast from X<E> to XC<? extends X> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from X<E> to XC<? extends X> is actually checking against the erased type XC\\n\" + "]}], "num": 37634}