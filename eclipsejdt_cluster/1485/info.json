{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39713f75c7687592a9d7c6ae6a7daabf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514cd13aa3321d30e4d4ff80e2fe8c7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "c30613b3c1eac52834666cb07a38e3f9077e1829", "commitAfterChange": "cbaf155d59bae1aee7ec473c177014431f794c16", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void complainIfUnusedExceptionHandlers( \t\tBlockScope scope, \t\tTryStatement tryStatement)", "signatureAfterChange": "  public void complainIfUnusedExceptionHandlers(BlockScope scope,TryStatement tryStatement)", "diff": ["-\t", "-\tpublic void complainIfUnusedExceptionHandlers(", "-\t\tBlockScope scope,", "-\t\tTryStatement tryStatement) {", "-\t\t// report errors for unreachable exception handlers", "-\t\tfor (int i = 0, count = handledExceptions.length; i < count; i++) {", "-\t\t\tint index = indexes.get(handledExceptions[i]);", "-\t\t\tint cacheIndex = index / BitCacheSize;", "-\t\t\tint bitMask = 1 << (index % BitCacheSize);", "-\t\t\tif ((isReached[cacheIndex] & bitMask) == 0) {", "-\t\t\t\tscope.problemReporter().unreachableCatchBlock(", "-\t\t\t\t\thandledExceptions[index],", "+", "+public void complainIfUnusedExceptionHandlers(BlockScope scope,TryStatement tryStatement) {", "+\t// report errors for unreachable exception handlers", "+\tfor (int i = 0, count = this.handledExceptions.length; i < count; i++) {", "+\t\tint index = this.indexes.get(this.handledExceptions[i]);", "+\t\tint cacheIndex = index / ExceptionHandlingFlowContext.BitCacheSize;", "+\t\tint bitMask = 1 << (index % ExceptionHandlingFlowContext.BitCacheSize);", "+\t\tif ((this.isReached[cacheIndex] & bitMask) == 0) {", "+\t\t\tscope.problemReporter().unreachableCatchBlock(", "+\t\t\t\tthis.handledExceptions[index],", "+\t\t\t\ttryStatement.catchArguments[index].type);", "+\t\t} else {", "+\t\t\tif ((this.isNeeded[cacheIndex] & bitMask) == 0) {", "+\t\t\t\tscope.problemReporter().hiddenCatchBlock(", "+\t\t\t\t\tthis.handledExceptions[index],", "-\t\t\t} else {", "-\t\t\t\tif ((isNeeded[cacheIndex] & bitMask) == 0) {", "-\t\t\t\t\tscope.problemReporter().hiddenCatchBlock(", "-\t\t\t\t\t\thandledExceptions[index],", "-\t\t\t\t\t\ttryStatement.catchArguments[index].type);", "-\t\t\t\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6446d1fef4e94b0cfe75f8269febd281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "a40cb3ef59ebbd67185c7faac7fb4434fed79ef4", "commitAfterChange": "ee62bf9b530a584a4251f975aa510ac6ec2f5d0f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic RewriteEvent getEvent(ASTNode parent, StructuralPropertyDescriptor property)", "signatureAfterChange": " \t \tpublic RewriteEvent getEvent(ASTNode parent, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (fLastEvent != null && fLastEvent.parent == parent && fLastEvent.childProperty == property) {", "-\t\t\treturn fLastEvent.event;", "+\t\tif (this.lastEvent != null && this.lastEvent.parent == parent && this.lastEvent.childProperty == property) {", "+\t\t\treturn this.lastEvent.event;", "-\t\tfor (int i= 0; i < fEvents.size(); i++) {", "-\t\t\tEventHolder holder= (EventHolder) fEvents.get(i);", "+\t\tfor (int i= 0; i < this.events.size(); i++) {", "+\t\t\tEventHolder holder= (EventHolder) this.events.get(i);", "-\t\t\t\tfLastEvent= holder;", "+\t\t\t\tthis.lastEvent= holder;"]}], "num": 1485}