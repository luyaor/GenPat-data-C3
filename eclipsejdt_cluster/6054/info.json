{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f067ec69243684262e2560b4ff7236d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9a5a3c3fe6e3a20507bb0f8a81540a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/comment/MultiCommentLine.java", "commitBeforeChange": "68525b84595448677be090c87606421a9f80c7ac", "commitAfterChange": "7af5dc6adcf6a26075d080ec37c4dad42d3059c6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void tokenizeLine(int line)", "signatureAfterChange": " \tprotected void tokenizeLine(int line)", "diff": ["-\t\t\t\t\t\twhile (index < length && !ScannerHelper.isWhitespace(content.charAt(index)) && content.charAt(index) != HTML_TAG_PREFIX && !content.startsWith(LINK_TAG_PREFIX, index))", "+\t\t\t\t\t\twhile (index < length", "+\t\t\t\t\t\t\t\t&& !ScannerHelper.isWhitespace(content.charAt(index))", "+\t\t\t\t\t\t\t\t&& content.charAt(index) != HTML_TAG_PREFIX ", "+\t\t\t\t\t\t\t\t&& !content.startsWith(LINK_TAG_PREFIX_STRING, index))", "-\t\t\t\t} else if (content.startsWith(LINK_TAG_PREFIX, index)) {", "+\t\t\t\t} else if (content.startsWith(LINK_TAG_PREFIX_STRING, index)) {", "-\t\t\t\t\twhile (index < length && !ScannerHelper.isWhitespace(content.charAt(index)) && content.charAt(index) != HTML_TAG_PREFIX && !content.startsWith(LINK_TAG_PREFIX, index))", "+\t\t\t\t\twhile (index < length", "+\t\t\t\t\t\t\t&& !ScannerHelper.isWhitespace(content.charAt(index))", "+\t\t\t\t\t\t\t&& content.charAt(index) != HTML_TAG_PREFIX", "+\t\t\t\t\t\t\t&& !content.startsWith(LINK_TAG_PREFIX_STRING, index))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fed9a2c696644dc587e8e39f1bb4964e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/comment/MultiCommentLine.java", "commitBeforeChange": "5e70a582e36fd39d7629b8f556b66f50a1050058", "commitAfterChange": "5ca447c521262374b5199c22b8bb8d32a007f444", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void tokenizeLine(int line)", "signatureAfterChange": " \tprotected void tokenizeLine(int line)", "diff": ["-\t\twhile (offset < length && Character.isWhitespace(content.charAt(offset)))", "+\t\twhile (offset < length && ScannerHelper.isWhitespace(content.charAt(offset)))", "-\t\t\twhile (offset < length && Character.isWhitespace(content.charAt(offset))) {", "+\t\t\twhile (offset < length && ScannerHelper.isWhitespace(content.charAt(offset))) {", "-\t\t\t\t\t\twhile (index < length && !Character.isWhitespace(content.charAt(index)) && content.charAt(index) != HTML_TAG_PREFIX && !content.startsWith(LINK_TAG_PREFIX, index))", "+\t\t\t\t\t\twhile (index < length && !ScannerHelper.isWhitespace(content.charAt(index)) && content.charAt(index) != HTML_TAG_PREFIX && !content.startsWith(LINK_TAG_PREFIX, index))", "-\t\t\t\t\twhile (index < length && !Character.isWhitespace(content.charAt(index)) && content.charAt(index) != HTML_TAG_PREFIX && !content.startsWith(LINK_TAG_PREFIX, index))", "+\t\t\t\t\twhile (index < length && !ScannerHelper.isWhitespace(content.charAt(index)) && content.charAt(index) != HTML_TAG_PREFIX && !content.startsWith(LINK_TAG_PREFIX, index))"]}], "num": 6054}