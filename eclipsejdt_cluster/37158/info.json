{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd03bb73cfbe579d9b686271566a76dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7193652fd9776fb2d65c40412c81d755", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibrary.java", "commitBeforeChange": "6d532e3e6bb5f869c4cf89800d8c25d215a96667", "commitAfterChange": "cea94298f193240b6230178dfa939e55ae1ab853", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static UserLibrary createFromString(Reader reader) throws IOException", "signatureAfterChange": "  \tpublic static UserLibrary createFromString(Reader reader) throws IOException", "diff": ["-\t\t// String version= cpElement.getAttribute(TAG_VERSION);", "-\t\t// in case we update the format: add code to read older versions", "-", "+\t\tString version= cpElement.getAttribute(TAG_VERSION);", "-\t\t\t\t\tString path = element.getAttribute(TAG_PATH);", "-\t\t\t\t\tIPath sourceAttach= element.hasAttribute(TAG_SOURCEATTACHMENT) ? new Path(element.getAttribute(TAG_SOURCEATTACHMENT)) : null;", "-\t\t\t\t\tIPath sourceAttachRoot= element.hasAttribute(TAG_SOURCEATTACHMENTROOT) ? new Path(element.getAttribute(TAG_SOURCEATTACHMENTROOT)) : null;", "+\t\t\t\t\tString pathString = element.getAttribute(TAG_PATH);", "+\t\t\t\t\tString sourceAttachString = element.hasAttribute(TAG_SOURCEATTACHMENT) ? element.getAttribute(TAG_SOURCEATTACHMENT) : null;", "+\t\t\t\t\tString sourceAttachRootString = element.hasAttribute(TAG_SOURCEATTACHMENTROOT) ? element.getAttribute(TAG_SOURCEATTACHMENTROOT) : null;", "+\t\t\t\t\tIPath entryPath = null; ", "+\t\t\t\t\tIPath sourceAttachPath = null;", "+\t\t\t\t\tIPath sourceAttachRootPath = null;", "+\t\t\t\t\tif (version.equals(VERSION_ONE)) {", "+\t\t\t\t\t\tentryPath = Path.fromOSString(pathString);", "+\t\t\t\t\t\tif (sourceAttachString != null) sourceAttachPath = Path.fromOSString(sourceAttachString);", "+\t\t\t\t\t\tif (sourceAttachRootString != null) sourceAttachRootPath = Path.fromOSString(sourceAttachRootString);", "+\t\t\t\t\t}", "+\t\t\t\t\telse {", "+\t\t\t\t\t\tentryPath = Path.fromPortableString(pathString);", "+\t\t\t\t\t\tif (sourceAttachString != null) sourceAttachPath = Path.fromPortableString(sourceAttachString);", "+\t\t\t\t\t\tif (sourceAttachRootString != null) sourceAttachRootPath = Path.fromPortableString(sourceAttachRootString);", "+\t\t\t\t\t}", "+", "-\t\t\t\t\tIClasspathEntry entry = JavaCore.newLibraryEntry(new Path(path), sourceAttach, sourceAttachRoot, accessRules, extraAttributes, false/*not exported*/);", "+\t\t\t\t\tIClasspathEntry entry = JavaCore.newLibraryEntry(entryPath, sourceAttachPath, sourceAttachRootPath, accessRules, extraAttributes, false/*not exported*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b144867ae46964c36e83c7a651f70781", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \tprotected IClasspathEntry[] readPaths(String xmlClasspath) throws IOException", "signatureAfterChange": "\r \tprotected IClasspathEntry[] readPaths(String xmlClasspath) throws IOException", "diff": ["-\t\t\tthrow new IOException(\"bad format\");\r", "+\t\t\tthrow new IOException(Util.bind(\"file.badFormat\"/*nonNLS*/));\r", "-\t\t\tthrow new IOException(\"bad format\");\r", "+\t\t\tthrow new IOException(Util.bind(\"file.badFormat\"/*nonNLS*/));\r", "-\t\tif (!cpElement.getNodeName().equalsIgnoreCase(\"classpath\")) {\r", "-\t\t\tthrow new IOException(\"bad format\");\r", "+\t\tif (!cpElement.getNodeName().equalsIgnoreCase(\"classpath\"/*nonNLS*/)) {\r", "+\t\t\tthrow new IOException(Util.bind(\"file.badFormat\"/*nonNLS*/));\r", "-\t\t\t\tif (cpeElement.getNodeName().equalsIgnoreCase(\"classpathentry\")) {\r", "-\t\t\t\t\tString cpeElementKind = cpeElement.getAttribute(\"kind\");\r", "-\t\t\t\t\tString pathStr = cpeElement.getAttribute(\"path\");\r", "+\t\t\t\tif (cpeElement.getNodeName().equalsIgnoreCase(\"classpathentry\"/*nonNLS*/)) {\r", "+\t\t\t\t\tString cpeElementKind = cpeElement.getAttribute(\"kind\"/*nonNLS*/);\r", "+\t\t\t\t\tString pathStr = cpeElement.getAttribute(\"path\"/*nonNLS*/);\r", "-\t\t\t\t\tString sourceAttachmentPathStr = cpeElement.getAttribute(\"sourcepath\");\r", "-\t\t\t\t\tIPath sourceAttachmentPath = sourceAttachmentPathStr.equals(\"\") ? null : new Path(sourceAttachmentPathStr);\r", "-\t\t\t\t\tString sourceAttachmentRootPathStr = cpeElement.getAttribute(\"rootpath\");\r", "-\t\t\t\t\tIPath sourceAttachmentRootPath = sourceAttachmentRootPathStr.equals(\"\") ? null : new Path(sourceAttachmentRootPathStr);\r", "+\t\t\t\t\tString sourceAttachmentPathStr = cpeElement.getAttribute(\"sourcepath\"/*nonNLS*/);\r", "+\t\t\t\t\tIPath sourceAttachmentPath = sourceAttachmentPathStr.equals(\"\"/*nonNLS*/) ? null : new Path(sourceAttachmentPathStr);\r", "+\t\t\t\t\tString sourceAttachmentRootPathStr = cpeElement.getAttribute(\"rootpath\"/*nonNLS*/);\r", "+\t\t\t\t\tIPath sourceAttachmentRootPath = sourceAttachmentRootPathStr.equals(\"\"/*nonNLS*/) ? null : new Path(sourceAttachmentRootPathStr);\r"]}], "num": 37158}