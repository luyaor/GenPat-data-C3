{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bdcae2e66b0f365950b57b03b6b67d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ccc9372e7f5fd9411b18e90b8e63c81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tprotected void codeComplete(\r \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit cu,\r \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip,\r \t\tint position,\r \t\tICodeCompletionRequestor requestor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "diff": ["+ */\r", "+protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException {\r", "+\tif (requestor == null) {\r", "+\t\tthrow new IllegalArgumentException(Util.bind(\"codeAssist.nullRequestor\"/*nonNLS*/));\r", "+\t}\r", "+\tif (position < -1 || position > getBuffer().getLength()) {\r", "+\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INDEX_OUT_OF_BOUNDS));\r", "+\t}\r", "+\tSearchableEnvironment environment = (SearchableEnvironment) ((JavaProject) getJavaProject()).getSearchableNameEnvironment();\r", "+\tenvironment.unitToSkip = unitToSkip;\r", "+\r", "+\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor), JavaModelManager.convertConfigurableOptions(JavaCore.getOptions()));\r", "+\tengine.complete(cu, position);\r", "+\tenvironment.unitToSkip = null;\r", "+}\r", "-\t */\r", "-\tprotected void codeComplete(\r", "-\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit cu,\r", "-\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip,\r", "-\t\tint position,\r", "-\t\tICodeCompletionRequestor requestor)\r", "-\t\tthrows JavaModelException {\r", "-\t\tif (requestor == null) {\r", "-\t\t\tthrow new IllegalArgumentException(\"requestor cannot be null\");\r", "-\t\t}\r", "-\t\tif (position < -1 || position > getBuffer().getLength()) {\r", "-\t\t\tthrow new JavaModelException(\r", "-\t\t\t\tnew JavaModelStatus(IJavaModelStatusConstants.INDEX_OUT_OF_BOUNDS));\r", "-\t\t}\r", "-\t\tSearchableEnvironment environment =\r", "-\t\t\t(SearchableEnvironment) ((JavaProject) getJavaProject())\r", "-\t\t\t\t.getSearchableNameEnvironment();\r", "-\t\tenvironment.unitToSkip = unitToSkip;\r", "-\r", "-\t\tCompletionEngine engine =\r", "-\t\t\tnew CompletionEngine(\r", "-\t\t\t\tenvironment,\r", "-\t\t\t\tnew CompletionRequestorWrapper(requestor),\r", "-\t\t\t\tJavaModelManager.convertConfigurableOptions(JavaCore.getOptions()));\r", "-\t\tengine.complete(cu, position);\r", "-\t\tenvironment.unitToSkip = null;\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1fab35f01e47b59c56f1307ce87b1d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "266ddb07da0dd2618bcfbec3256d70ddf353d13c", "commitAfterChange": "0f0f6cf807937b95cd594ad18f819e710f9be563", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["- */", "-protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor) throws JavaModelException {", "+protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException {", "-\tSearchableEnvironment environment = (SearchableEnvironment) project.getSearchableNameEnvironment();", "-\tNameLookup nameLookup = project.getNameLookup();", "-\tenvironment.unitToSkip = unitToSkip;", "-", "-\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), project.getOptions(true), project);", "-\tengine.complete(cu, position, 0);", "-\tenvironment.unitToSkip = null;", "-}", "+\tSearchableEnvironment environment = null;", "+\tNameLookup nameLookup = null;", "+\ttry {", "+\t\t// set unit to skip", "+\t\tenvironment = (SearchableEnvironment) project.getSearchableNameEnvironment();", "+\t\tenvironment.unitToSkip = unitToSkip;", "+\t\t// set the units to look inside", "+\t\tnameLookup = project.getNameLookup();", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "+\t\tnameLookup.setUnitsToLookInside(workingCopies);", "+", "+\t\t// code complete", "+\t\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), project.getOptions(true), project);", "+\t\tengine.complete(cu, position, 0);", "+\t} finally {", "+\t\tif (environment != null) {", "+\t\t\tenvironment.unitToSkip = null;", "+\t\t}", "+\t\tif (nameLookup != null) {", "+\t\t\tnameLookup.setUnitsToLookInside(null);", "+\t\t}", "+\t}", "+}"]}], "num": 10677}