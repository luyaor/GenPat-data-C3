{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f4180ba00839b10198ed4e9c08c3b72", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7723a92951448b3429c941638f0c878b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tReferenceBinding typeBinding = null;", "-\tif (binding instanceof ReferenceBinding)", "-\t\ttypeBinding = (ReferenceBinding) binding;", "-", "-\tchar[][] typeTokens = importRef.tokens;", "-\tint lastIndex = typeTokens.length-1;", "-\tchar[][] tokens = null;", "-\t// try to match all enclosing types for which the token matches as well.", "-\twhile (typeBinding != null && lastIndex >= 0) {", "-\t\tif (matchesName(this.pattern.simpleName, typeTokens[lastIndex--])) {", "-\t\t\tint level = resolveLevelForType(this.pattern.simpleName, this.pattern.qualification, typeBinding);", "-\t\t\tif (level != IMPOSSIBLE_MATCH) {", "-\t\t\t\ttokens = new char[lastIndex+2][];", "-\t\t\t\tSystem.arraycopy(typeTokens, 0, tokens, 0, lastIndex+2);", "-\t\t\t\tbreak;", "+\tif (binding instanceof ReferenceBinding) {", "+\t\tint lastIndex = importRef.tokens.length - 1;", "+\t\tReferenceBinding typeBinding = (ReferenceBinding) binding;", "+\t\tif (typeBinding instanceof ProblemReferenceBinding) {", "+\t\t\tProblemReferenceBinding pbBinding = (ProblemReferenceBinding) typeBinding;", "+\t\t\ttypeBinding = pbBinding.original;", "+\t\t\tlastIndex = pbBinding.compoundName.length - 1;", "+\t\t}", "+\t\t// try to match all enclosing types for which the token matches as well.", "+\t\twhile (typeBinding != null && lastIndex >= 0) {", "+\t\t\tif (resolveLevelForType(this.pattern.simpleName, this.pattern.qualification, typeBinding) == ACCURATE_MATCH) {", "+\t\t\t\tlong[] positions = importRef.sourcePositions;", "+\t\t\t\tlocator.report(positions[this.pattern.qualification == null ? lastIndex : 0], positions[lastIndex], element, accuracy);", "+\t\t\t\treturn;", "-\t\t}", "-\t\ttypeBinding = typeBinding.enclosingType();", "-\t}", "-\tif (tokens == null) {", "-\t\ttokens = typeBinding == null || typeBinding instanceof ProblemReferenceBinding", "-\t\t\t? new char[][] {this.pattern.simpleName}", "-\t\t\t: importRef.tokens;", "-\t\tif (!this.isCaseSensitive) {", "-\t\t\tint length = tokens.length;", "-\t\t\tchar[][] lowerCaseTokens = new char[length][];", "-\t\t\tfor (int i = 0; i < length; i++)", "-\t\t\t\tlowerCaseTokens[i] = CharOperation.toLowerCase(tokens[i]);", "-\t\t\ttokens = lowerCaseTokens;", "+\t\t\tlastIndex--;", "+\t\t\ttypeBinding = typeBinding.enclosingType();", "-\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, tokens, element, accuracy);", "+\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, this.pattern.simpleName, element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ff904ba57c11cec253a0a61c8acbc72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tchar[][] tokens = null;", "+\tint lastIndex = qTypeRef.tokens.length - 1;", "-\tchar[][] typeTokens = qTypeRef.tokens;", "-\tint lastIndex = typeTokens.length-1;", "-\t// try to match all enclosing types for which the token matches as well.", "-\twhile (typeBinding != null && lastIndex >= 0) {", "-\t\tif (matchesName(this.pattern.simpleName, typeTokens[lastIndex--])) {", "-\t\t\tint level = resolveLevelForType(this.pattern.simpleName, this.pattern.qualification, typeBinding);", "-\t\t\tif (level != IMPOSSIBLE_MATCH) {", "-\t\t\t\ttokens = new char[lastIndex+2][];", "-\t\t\t\tSystem.arraycopy(typeTokens, 0, tokens, 0, lastIndex+2);", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t\tif (typeBinding instanceof ReferenceBinding)", "-\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();", "-\t\telse", "-\t\t\ttypeBinding = null;", "+\tif (typeBinding instanceof ProblemReferenceBinding) {", "+\t\tProblemReferenceBinding pbBinding = (ProblemReferenceBinding) typeBinding;", "+\t\ttypeBinding = pbBinding.original;", "+\t\tlastIndex = pbBinding.compoundName.length - 1;", "-\tif (tokens == null) {", "-\t\tif (typeBinding == null || typeBinding instanceof ProblemReferenceBinding)", "-\t\t\ttokens = new char[][] {this.pattern.simpleName};", "-\t\telse", "-\t\t\ttokens = qTypeRef.tokens;", "-\t\tif (!this.isCaseSensitive) {", "-\t\t\tint length = tokens.length;", "-\t\t\tchar[][] lowerCaseTokens = new char[length][];", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tchar[] token = tokens[i];", "-\t\t\t\tlowerCaseTokens[i] = CharOperation.toLowerCase(token);", "+\t// try to match all enclosing types for which the token matches as well", "+\tif (typeBinding instanceof ReferenceBinding) {", "+\t\tReferenceBinding refBinding = (ReferenceBinding) typeBinding; ", "+\t\twhile (refBinding != null && lastIndex >= 0) {", "+\t\t\tif (resolveLevelForType(this.pattern.simpleName, this.pattern.qualification, refBinding) == ACCURATE_MATCH) {", "+\t\t\t\tlong[] positions = qTypeRef.sourcePositions;", "+\t\t\t\tlocator.report(positions[this.pattern.qualification == null ? lastIndex : 0], positions[lastIndex], element, accuracy);", "+\t\t\t\treturn;", "-\t\t\ttokens = lowerCaseTokens;", "+\t\t\tlastIndex--;", "+\t\t\trefBinding = refBinding.enclosingType();", "-\tlocator.reportAccurateReference(qTypeRef.sourceStart, qTypeRef.sourceEnd, tokens, element, accuracy);", "+\tlocator.reportAccurateReference(qTypeRef.sourceStart, qTypeRef.sourceEnd, this.pattern.simpleName, element, accuracy);"]}], "num": 23632}