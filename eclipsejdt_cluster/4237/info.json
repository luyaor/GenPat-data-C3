{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32c5ef92cb50d1d383766df6b89799c7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28d42d2bb509aa73780f01ca26bbb814", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "signatureAfterChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "diff": ["-\t\t\t\t? typeRef.resolveType((BlockScope)this, false/*no bound check*/)", "-\t\t\t\t: typeRef.resolveType((ClassScope)this);", "+\t\t\t\t? typeRef.resolveType((BlockScope)this, false/*no bound check*/, Binding.DefaultLocationTypeBound)", "+\t\t\t\t: typeRef.resolveType((ClassScope)this, Binding.DefaultLocationTypeBound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32963c26b964528fee60290744b64dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "signatureAfterChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "diff": ["-\t\t\t\t? (ReferenceBinding) typeRef.resolveType((BlockScope)this)", "+\t\t\t\t? (ReferenceBinding) typeRef.resolveType((BlockScope)this, false/*no bound check*/)", "-\t\t\t\t\t\t? (ReferenceBinding) typeRef.resolveType((BlockScope)this)", "+\t\t\t\t\t\t? (ReferenceBinding) typeRef.resolveType((BlockScope)this, false)"]}], "num": 4237}