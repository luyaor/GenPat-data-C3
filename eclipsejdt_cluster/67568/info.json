{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4be05df38370b64886ee2c2025e2ee7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c2ba3c19a925181182cceb69f2da65a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "93ae272625cf7aea539e03a762b5190105386996", "commitAfterChange": "c6f78f890c1ca00b0157b632da091fae2c781833", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 44, "signatureBeforeChange": "   \tprivate void printIndentationIfNecessary(StringBuffer buffer)", "signatureAfterChange": "  \tprivate void printIndentationIfNecessary(StringBuffer buffer)", "diff": ["-", "-\t\tint indentationColumn = (this.useTab ? this.indentationLevel * this.tabSize : this.indentationLevel)+1;", "-\t\tif (this.column < indentationColumn) {", "-\t\t\tfor (int i = getColumnIndentationLevel(), max = this.indentationLevel; i < max; i++) { ", "-\t\t\t\tif (this.useTab) {", "-\t\t\t\t\tthis.tab(buffer);", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.column++;", "-\t\t\t\t\tbuffer.append(this.fillingSpace);", "+\t\tswitch(this.tabChar) {", "+\t\t\tcase DefaultCodeFormatterOptions.TAB :", "+\t\t\t\twhile (this.column <= this.indentationLevel) {", "+\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\tthis.lastNumberOfNewLines = 0;", "+\t\t\t\t\tint complement = this.tabLength - ((this.column - 1) % this.tabLength); // amount of space", "+\t\t\t\t\tthis.column += complement;", "-\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase DefaultCodeFormatterOptions.SPACE :", "+\t\t\t\twhile (this.column <= this.indentationLevel) {", "+\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\tthis.column++;", "+\t\t\t\t\tthis.needSpace = false;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase DefaultCodeFormatterOptions.MIXED :", "+\t\t\t\twhile (this.column <= this.indentationLevel) {", "+\t\t\t\t\tif ((this.column - 1 + this.tabLength) <= this.indentationLevel) {", "+\t\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\t\tthis.column += this.tabLength;", "+\t\t\t\t\t} else if ((this.column - 1 + this.indentationSize) <= this.indentationLevel) {", "+\t\t\t\t\t\t// print one indentation", "+\t\t\t\t\t\tfor (int i = 0, max = this.indentationSize; i < max; i++) {", "+\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.needSpace = false;", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1c82785f152090e567243972a67fa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0d4f9e0363343abbe044f1cc941ee90b174da15b", "commitAfterChange": "ea8f033a781dd5f0a1e97c822e75c336e56f5f2e", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": "\r protected void consumeToken(int type)", "signatureAfterChange": "\r protected void consumeToken(int type)", "diff": ["-\r", "+\t// clear the commentPtr of the scanner in case we read something different from a modifier\r", "+\tswitch(type) {\r", "+\t\tcase TokenNameabstract :\r", "+\t\tcase TokenNamestrictfp :\r", "+\t\tcase TokenNamefinal :\r", "+\t\tcase TokenNamenative :\r", "+\t\tcase TokenNameprivate :\r", "+\t\tcase TokenNameprotected :\r", "+\t\tcase TokenNamepublic :\r", "+\t\tcase TokenNametransient :\r", "+\t\tcase TokenNamevolatile :\r", "+\t\tcase TokenNamestatic :\r", "+\t\tcase TokenNamesynchronized :\r", "+\t\t\tbreak;\r", "+\t\tdefault:\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t}\r", "-\r", "+\t\t\tscanner.commentPtr = -1;\r", "-\r", "+\t\t\tscanner.commentPtr = -1;\r", "-\r", "-\r", "-\r", "+\t\t\tscanner.commentPtr = -1;\r", "-\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "-\r", "-\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "+\t\t\tscanner.commentPtr = -1;\r", "-\r", "-\r"]}], "num": 67568}