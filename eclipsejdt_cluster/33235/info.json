{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7974beaaa61d513f9703fc3478e2ba6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "789ea30d3d3aafdb40063fe40cbb9d79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "d6c2a90130be430285c5f6a000090d250c310afd", "commitAfterChange": "51e1f00f8d474f0b209b47afa85e44328a517f92", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tVariableBinding local = variableBinding(scope);", "-\tif (local != null &&", "-\t\t\t(local.type.tagBits & TagBits.IsBaseType) == 0) {", "+\tVariableBinding var = variableBinding(scope);", "+\tif (var != null &&", "+\t\t\t(var.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\t\tflowContext.recordUsingNullReference(scope, local, this,", "+\t\t\tflowContext.recordUsingNullReference(scope, var, this,", "-\t\tflowInfo.markAsComparedEqualToNonNull(local );", "+\t\tflowInfo.markAsComparedEqualToNonNull(var );", "-\t\t\tflowInfo.markedAsNullOrNonNullInAssertExpression(local);", "+\t\t\tflowInfo.markedAsNullOrNonNullInAssertExpression(var);", "-\t\t\tflowContext.initsOnFinally.markAsComparedEqualToNonNull(local);", "+\t\t\tflowContext.initsOnFinally.markAsComparedEqualToNonNull(var);", "-\t\t\t\tflowContext.initsOnFinally.markedAsNullOrNonNullInAssertExpression(local);", "+\t\t\t\tflowContext.initsOnFinally.markedAsNullOrNonNullInAssertExpression(var);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d5372e7bcf9f38a713286f61469733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "448d62b2ff66cd7ed3c1bda65bd5259a6d0971b0", "commitAfterChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tVariableBinding var = variableBinding(scope);", "-\tif (var != null &&", "-\t\t\t(var.type.tagBits & TagBits.IsBaseType) == 0) {", "+\tVariableBinding local = variableBinding(scope);", "+\tif (local != null &&", "+\t\t\t(local.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\t\tflowContext.recordUsingNullReference(scope, var, this,", "+\t\t\tflowContext.recordUsingNullReference(scope, local, this,", "-\t\tflowInfo.markAsComparedEqualToNonNull(var );", "+\t\tflowInfo.markAsComparedEqualToNonNull(local );", "-\t\t\tflowInfo.markedAsNullOrNonNullInAssertExpression(var);", "+\t\t\tflowInfo.markedAsNullOrNonNullInAssertExpression(local);", "-\t\t\tflowContext.initsOnFinally.markAsComparedEqualToNonNull(var);", "+\t\t\tflowContext.initsOnFinally.markAsComparedEqualToNonNull(local);", "-\t\t\t\tflowContext.initsOnFinally.markedAsNullOrNonNullInAssertExpression(var);", "+\t\t\t\tflowContext.initsOnFinally.markedAsNullOrNonNullInAssertExpression(local);"]}], "num": 33235}