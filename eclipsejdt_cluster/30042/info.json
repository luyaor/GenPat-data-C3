{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c8a99f76862479b986ad6866586074a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "520a4f9c2b1f1109110f59178f0e05d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "f700051affab74804180d3a8bb296f6cabd751a0", "commitAfterChange": "745840be480d4e43f22d0c4f40c198cdee6926a4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tpublic TypeBinding[] lowerBounds(boolean onlyProper, LookupEnvironment environment)", "signatureAfterChange": " \t\tpublic TypeBinding[] lowerBounds(boolean onlyProper, LookupEnvironment environment)", "diff": ["+\t\t\tlong nullHints = 0;", "-\t\t\t\tif (!onlyProper || boundType.isProperType(true))", "+\t\t\t\tif (!onlyProper || boundType.isProperType(true)) {", "+\t\t\t\t\tnullHints |= current.nullHints;", "+\t\t\t\t}", "+\t\t\tuseNullHints(nullHints, boundTypes, environment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f24df084de37245b20ca98548dcc51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "9fd78e48eab6bcdf5d18fc102f8f6374923c9c96", "commitAfterChange": "a8001f94dedfcf0ea807d46ff48ed3d0c7a3c2ef", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tboolean incorporate(InferenceContext18 context, TypeBound [] first, TypeBound [] next) throws InferenceFailureException", "signatureAfterChange": " \tboolean incorporate(InferenceContext18 context, TypeBound [] first, TypeBound [] next) throws InferenceFailureException", "diff": ["-\t\t\t\t\t\t\tboundI.nullHints |= nullHints;", "-\t\t\t\t\t\t\tboundJ.nullHints |= nullHints;", "+\t\t\t\t\t\t\tif (nullHints != 0 && TypeBinding.equalsEquals(boundI.left, boundJ.left)) {", "+\t\t\t\t\t\t\t\tboundI.nullHints |= nullHints;", "+\t\t\t\t\t\t\t\tboundJ.nullHints |= nullHints;", "+\t\t\t\t\t\t\t}"]}], "num": 30042}