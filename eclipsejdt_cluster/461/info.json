{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dfdfbde2c3c2d630dbe94b7a1ea548e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f6772e27ee6de4ad76c7d5835157a24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "a7c5187c6ea153e4e6af2a4ed6f7c74a522ea592", "commitAfterChange": "98e531fe23e8e46b312122b584ccbcfce40dfc68", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 275, "signatureBeforeChange": " public void test124()", "signatureAfterChange": " public void test124()", "diff": ["-\t\t\t\"    System.out.println(choose(\\\"a\\\", \\\"b\\\"));\\n\" +", "+\t\t\t\"    try {\\n\" +", "+\t\t\t\"        System.out.println(choose(\\\"a\\\", \\\"b\\\"));\\n\" +", "+\t\t\t\"    } catch (StackOverflowError e) {\\n\" +", "+\t\t\t\"        System.out.println(\\\"Stack Overflow\\\");\\n\" +", "+\t\t\t\"    }\\n\" +", "-\t\t\"ab\");", "+\t\t\tthis.complianceLevel <= ClassFileConstants.JDK1_6 ? \"ab\" : \"Stack Overflow\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57ea4a032d55b5bef3c571b7b36cc52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "66a271485e53960fadcfb4122ab242646dfbc65c", "commitAfterChange": "b9cade79e7bd9be5791a332a60b747e1e3ce5346", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void test0086_shortcut_boolean_expression()", "signatureAfterChange": " public void test0086_shortcut_boolean_expression()", "diff": ["-\t\t\t\"      return 1; // throw new NullPointerException();\\n\" + ", "+\t\t\t\"      return 1;\\n\" + ", "-\t\t\t\"      return j.intValue();\\n\" + // protected by returning if both i and j are null above", "+\t\t\t\"      return j.intValue();\\n\" +", "-\t\t\t\"      return i.intValue();\\n\" + // protected by returning if i == null above", "+\t\t\t\"      return i.intValue();\\n\" +"]}], "num": 461}