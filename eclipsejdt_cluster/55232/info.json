{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecf464950ac7fd3f4eb6f4d3dbb83562", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6842036531fe748dfb1469ab99a9c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "9cd8ac9158e8cf65a77f69d8bfcd62dc9418f984", "commitAfterChange": "c8ff3cbc92fbc03cd36a58b694b93e2376e6a266", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void printComment()", "signatureAfterChange": " \tpublic void printComment()", "diff": ["-\t\t\t\t\t\t\taddDeleteEdit(this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition());", "-\t\t\t\t\t\t\tpreserveEmptyLines(count - 1, this.scanner.getCurrentTokenEndPosition() + 1);", "+\t\t\t\t\t\t\taddReplaceEdit(this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition(), this.getPreserveEmptyLines(count - 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325dcfe13689cb16aabb79a388ef9e26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tvoid parseReturn()", "signatureAfterChange": " \t \tprivate void parseReturn()", "diff": ["-\tvoid parseReturn() {", "-\t\t// to be continued", "+\tprivate void parseReturn() {", "+\t\tif (this.annotation.returnStatement == null) {", "+\t\t\tthis.annotation.returnStatement =", "+\t\t\t\tnew AnnotationReturnStatement(", "+\t\t\t\t\tscanner.getCurrentTokenStartPosition(),", "+\t\t\t\t\tscanner.getCurrentTokenEndPosition(),", "+\t\t\t\t\tscanner.getRawTokenSourceEnd());", "+\t\t}", "+\t\telse {", "+\t\t\tthis.sourceParser.problemReporter().annotationInvalidReturnTag(", "+\t\t\t\tscanner.getCurrentTokenStartPosition(),", "+\t\t\t\tscanner.getCurrentTokenEndPosition(),", "+\t\t\t\tfalse);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3abd2657f605341dc96a9394ec758720", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate boolean parseReturn()", "signatureAfterChange": " \tprotected abstract boolean parseReturn();", "diff": ["-\tprivate boolean parseReturn() {", "-\t\tif (this.returnStatement == null) {", "-\t\t\tthis.returnStatement = createReturnStatement();", "-\t\t\treturn true;", "-\t\t} else {", "-\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocDuplicatedReturnTag(", "-\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "-\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "-\t\t\treturn false;", "-\t\t}", "-\t}", "+\tprotected abstract boolean parseReturn();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "502362710f0fe1608b4b573f57ec4aea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "4f48830884ee6a89ef511f38d2067ccf03cfa452", "commitAfterChange": "1c3577f5abe07ca9a1f5e8ed95ec7cecb20f5290", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected boolean parseReference(boolean plain) throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference(boolean plain) throws InvalidInputException", "diff": ["-\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMissingHashCharacter(typeRefStartPosition, this.lineEnd, String.valueOf(this.source, typeRefStartPosition, this.lineEnd-typeRefStartPosition));", "+\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMissingHashCharacter(typeRefStartPosition, this.lineEnd, String.valueOf(this.source, typeRefStartPosition, this.lineEnd-typeRefStartPosition+1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ad1fc6ed87c1164273794525f712ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate int getEndPosition()", "signatureAfterChange": "  \tprivate int getTokenEndPosition()", "diff": ["-\tprivate int getEndPosition() {", "-\t\tif (this.scanner.getCurrentTokenEndPosition() > this.lineEnd) {", "-\t\t\treturn this.scanner.getCurrentTokenEndPosition();", "+\tprivate int getTokenEndPosition() {", "+\t\tif (this.scanner.getCurrentTokenEndPosition() > this.lineEnd) {", "+\t\t\treturn this.lineEnd;", "+\t\t} else {", "+\t\t\treturn this.scanner.getCurrentTokenEndPosition();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5afdd3cfe354b0d4e038579899ba39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d7e050c27656f3c655cbceb92a53dfdd3a265d24", "commitAfterChange": "36dbe4a61ccd2e283322ec353cff1f83cf809e44", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public boolean checkAndReportBracketAnomalies(ProblemReporter problemReporter)", "signatureAfterChange": " public boolean checkAndReportBracketAnomalies(ProblemReporter problemReporter)", "diff": ["+\t\t\t\t\t\t\t\t\t\tif (this.scanner.taskTags != null) {", "+\t\t\t\t\t\t\t\t\t\t\tthis.scanner.checkTaskTag(this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition());", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (this.scanner.taskTags != null) {", "+\t\t\t\t\t\t\t\t\tthis.scanner.checkTaskTag(this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition());", "+\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "953c6e35e7ff66e9993b0e5b4bf36c0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected boolean parseReturn()", "signatureAfterChange": " \tprotected boolean parseReturn()", "diff": ["-\t\t} else {", "-\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocDuplicatedReturnTag(", "-\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "-\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "-\t\t\treturn false;", "+\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocDuplicatedReturnTag(", "+\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "+\t\treturn false;"]}], "num": 55232}