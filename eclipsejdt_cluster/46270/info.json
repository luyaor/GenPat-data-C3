{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43c09ee1cdb5d278846190697a3e4ef9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b200e4be1eefb8eb1c4dc36223dbf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "c06e07ca77c0b109ce7d4e6c3f60180a3777bc7d", "commitAfterChange": "a1d61f4860d08002c8a193d70dccc7a85c870208", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t} else if (this.receiver instanceof QualifiedSuperReference){ // qualified super", "-", "+\t} else if (this.receiver instanceof QualifiedSuperReference) { \t// qualified super", "+\t\tif (this.actualReceiverType.isInterface()) ", "+\t\t\treturn; // invoking an overridden default method, which is accessible/public by definition"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee0d1a7e10d466de7c21dfbd1d3bcd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5f85e7ad56b4ff0557c2bf2c999084f9107f0617", "commitAfterChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r \tpublic void reportReference(\r \t\tAstNode reference,\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tchar[][] definingTypeNames,\r \t\tint accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportReference(\r \t\tAstNode reference,\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tchar[][] definingTypeNames,\r \t\tint accuracy)\r \t\tthrows CoreException", "diff": ["-\t\t\t|| reference instanceof QualifiedTypeReference) {\r", "-\t\t\tthis.pattern.matchReportReference((AstNode) reference, method, accuracy, this);\r", "+\t\t\t|| reference instanceof QualifiedTypeReference\r", "+\t\t\t|| reference instanceof ArrayTypeReference) {\r", "+\t\t\tthis.pattern.matchReportReference(reference, method, accuracy, this);\r"]}], "num": 46270}