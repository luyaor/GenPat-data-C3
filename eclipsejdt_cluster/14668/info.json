{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b4ed4267d06897258c4939eabfa1795", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035c733069b070a16b0b147d6e3b5e66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "2aafd163940041eceef8b780ff91e2b7a2e51bfb", "commitAfterChange": "1748a55668f189f632b3b49793f54d9718d62af3", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  \tpublic void testArrayType()", "signatureAfterChange": "  \tpublic void testArrayType()", "diff": ["+\t\tfinal ArrayType x3 = this.ast.newArrayType(x, 2);", "+\t\tassertTrue(x3.getDimensions() == 7);", "+\t\t", "+\t\ttry {", "+\t\t\tthis.ast.newArrayType(null, 2);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// ignore - expected", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.ast.newArrayType(x, 0);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// ignore - expected", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.ast.newArrayType(x, 100000);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// ignore - expected", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355850c85dcb62791d1ac723b9aa65be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "commitAfterChange": "7109b1b8695adc90efc89b381fbef11f66adc5d7", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 242, "signatureBeforeChange": " \tpublic void testMethodDeclaration()", "signatureAfterChange": " \tpublic void testMethodDeclaration()", "diff": ["+\t\t\ttry {", "+\t\t\t\tx.typeParameters();", "+\t\t\t\tassertTrue(\"Should have failed\", false);", "+\t\t\t} catch(UnsupportedOperationException e) {", "+\t\t\t\t// pass", "+\t\t\t}", "+\t\t\ttry {", "+\t\t\t\tx.isVarargs();", "+\t\t\t\tassertTrue(\"Should have failed\", false);", "+\t\t\t} catch(UnsupportedOperationException e) {", "+\t\t\t\t// pass", "+\t\t\t}", "+\t\ttry {", "+\t\t\tx.setExtraDimensions(-1);", "+\t\t\tassertTrue(\"Should fail\", false);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// pass", "+\t\t}"]}], "num": 14668}