{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a788c9b36cca36c57295cb9df7d8b0cc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662488c85dba37870fea1b11a9954737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "29fd5c339634157c3a46bf2c80db8e6f9d9b60e5", "commitAfterChange": "d3bee7a6e680032a04efee0140f4fd7a408a0f76", "methodNumberBeforeChange": 358, "methodNumberAfterChange": 357, "signatureBeforeChange": " public void unnecessaryCast(CastExpression castExpression)", "signatureAfterChange": " public void unnecessaryCast(CastExpression castExpression)", "diff": ["+\tint severity = computeSeverity(IProblem.UnnecessaryCast);", "+\tif (severity == ProblemSeverities.Ignore) return;", "+\t\tseverity,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef12942c451b749c1897ece2758547c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "29fd5c339634157c3a46bf2c80db8e6f9d9b60e5", "commitAfterChange": "d3bee7a6e680032a04efee0140f4fd7a408a0f76", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 371, "signatureBeforeChange": " public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, SourceTypeBinding type)", "signatureAfterChange": " public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, SourceTypeBinding type)", "diff": ["+\tint severity = computeSeverity(IProblem.UnsafeReturnTypeOverride);", "+\tif (severity == ProblemSeverities.Ignore) return;", "+\t\t\tseverity,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5c9cace34430f6c258cc2a87be4609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "29fd5c339634157c3a46bf2c80db8e6f9d9b60e5", "commitAfterChange": "d3bee7a6e680032a04efee0140f4fd7a408a0f76", "methodNumberBeforeChange": 361, "methodNumberAfterChange": 360, "signatureBeforeChange": " public void unnecessaryInstanceof(InstanceOfExpression instanceofExpression, TypeBinding checkType)", "signatureAfterChange": " public void unnecessaryInstanceof(InstanceOfExpression instanceofExpression, TypeBinding checkType)", "diff": ["+\tint severity = computeSeverity(IProblem.UnnecessaryInstanceof);", "+\tif (severity == ProblemSeverities.Ignore) return;", "+\t\tseverity,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1b363b6ed6a2cdac46a20aa90e2749", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "29fd5c339634157c3a46bf2c80db8e6f9d9b60e5", "commitAfterChange": "d3bee7a6e680032a04efee0140f4fd7a408a0f76", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 372, "signatureBeforeChange": " public void unsafeTypeConversion(Expression expression, TypeBinding expressionType, TypeBinding expectedType)", "signatureAfterChange": " public void unsafeTypeConversion(Expression expression, TypeBinding expressionType, TypeBinding expectedType)", "diff": ["+\tint severity = computeSeverity(IProblem.UnsafeTypeConversion);", "+\tif (severity == ProblemSeverities.Ignore) return;", "+\t\tseverity,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c8dfa85b7c6dbae4b52e405fd71067", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "29fd5c339634157c3a46bf2c80db8e6f9d9b60e5", "commitAfterChange": "d3bee7a6e680032a04efee0140f4fd7a408a0f76", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 366, "signatureBeforeChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "signatureAfterChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "diff": ["+\tint severity = computeSeverity(IProblem.UnsafeGenericCast);", "+\tif (severity == ProblemSeverities.Ignore) return;", "+\t\tseverity,"]}], "num": 57877}