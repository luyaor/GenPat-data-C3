{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62328c2085f3e7f7ed9732af174fe8fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27879784d9433978777be763946ed32d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "commitAfterChange": "369ffd3db09511488e039ba2575df2eeea055320", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private boolean updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType)", "diff": ["-private boolean updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta) {\r", "+private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType) {\r", "+\tOpenable element;\r", "+\t\t\telement = this.createElement(delta.getResource(), elementType);\r", "+\t\t\tif (element == null) return false;\r", "-\t\t\tif (element instanceof IPackageFragmentRoot) {\r", "-\t\t\t\telement = (Openable)((IPackageFragmentRoot)element).getPackageFragment(\"\");//$NON-NLS-1$\r", "-\t\t\t}\r", "-\t\t\tif (element instanceof IPackageFragment) {\r", "-\t\t\t\t// add subpackages\r", "-\t\t\t\tPackageFragmentRoot root = element.getPackageFragmentRoot();\r", "-\t\t\t\tString name = element.getElementName();\r", "-\t\t\t\tIResourceDelta[] children = delta.getAffectedChildren();\r", "-\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "-\t\t\t\t\tIResourceDelta child = children[i];\r", "-\t\t\t\t\tIResource resource = child.getResource();\r", "-\t\t\t\t\tif (resource instanceof IFolder) {", "-\t\t\t\t\t\tString subpkgName = \r", "-\t\t\t\t\t\t\tname.length() == 0 ? \r", "-\t\t\t\t\t\t\t\tresource.getName() : \r", "-\t\t\t\t\t\t\t\tname + \".\" + resource.getName(); //$NON-NLS-1$\r", "-\t\t\t\t\t\tOpenable subpkg = (Openable)root.getPackageFragment(subpkgName);\r", "-\t\t\t\t\t\tthis.updateCurrentDeltaAndIndex(subpkg, child);\r", "-\t\t\t\t\t}", "-\t\t\t\t}\r", "-\t\t\t}\r", "+\t\t\telement = this.createElement(delta.getResource(), elementType);\r", "+\t\t\tif (element == null) return false;\r", "-\t\t\tif (element instanceof IPackageFragmentRoot) {\r", "-\t\t\t\telement = (Openable)((IPackageFragmentRoot)element).getPackageFragment(\"\");//$NON-NLS-1$\r", "-\t\t\t}\r", "-\t\t\tif (element instanceof IPackageFragment) {\r", "-\t\t\t\t// remove subpackages\r", "-\t\t\t\tPackageFragmentRoot root = element.getPackageFragmentRoot();\r", "-\t\t\t\tString name = element.getElementName();\r", "-\t\t\t\tIResourceDelta[] children = delta.getAffectedChildren();\r", "-\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "-\t\t\t\t\tIResourceDelta child = children[i];\r", "-\t\t\t\t\tIResource resource = child.getResource();\r", "-\t\t\t\t\tif (resource instanceof IFolder) {\r", "-\t\t\t\t\t\tString subpkgName = \r", "-\t\t\t\t\t\t\tname.length() == 0 ? \r", "-\t\t\t\t\t\t\t\tresource.getName() : \r", "-\t\t\t\t\t\t\t\tname + \".\" + resource.getName(); //$NON-NLS-1$\r", "-\t\t\t\t\t\tOpenable subpkg = (Openable)root.getPackageFragment(subpkgName);\r", "-\t\t\t\t\t\tthis.updateCurrentDeltaAndIndex(subpkg, child);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "+\t\t\t\telement = this.createElement(delta.getResource(), elementType);\r", "+\t\t\t\tif (element == null) return false;\r", "+\t\t\t\telement = this.createElement(delta.getResource(), elementType);\r", "+\t\t\t\tif (element == null) return false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6173c990f03483293402069c3206be7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "1a18ae0a7f87984c327278bf2097db1fc176b8aa", "commitAfterChange": "16639d06fb7d968f56130bc74dcaf6bcb3941b64", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \t\r private void updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta)", "diff": ["-private void updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta) {\r", "+ */\r", "+private boolean updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta) {\r", "-\t\t\tbreak;\r", "+\t\t\tif (element instanceof IPackageFragmentRoot) {\r", "+\t\t\t\telement = (Openable)((IPackageFragmentRoot)element).getPackageFragment(\"\");\r", "+\t\t\t}\r", "+\t\t\tif (element instanceof IPackageFragment) {\r", "+\t\t\t\t// add subpackages\r", "+\t\t\t\tPackageFragmentRoot root = element.getPackageFragmentRoot();\r", "+\t\t\t\tString name = element.getElementName();\r", "+\t\t\t\tIResourceDelta[] children = delta.getAffectedChildren();\r", "+\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "+\t\t\t\t\tIResourceDelta child = children[i];\r", "+\t\t\t\t\tIResource resource = child.getResource();\r", "+\t\t\t\t\tif (resource instanceof IFolder) {", "+\t\t\t\t\t\tString subpkgName = \r", "+\t\t\t\t\t\t\tname.length() == 0 ? \r", "+\t\t\t\t\t\t\t\tresource.getName() : \r", "+\t\t\t\t\t\t\t\tname + \".\" + resource.getName(); //$NON-NLS-1$\r", "+\t\t\t\t\t\tOpenable subpkg = (Openable)root.getPackageFragment(subpkgName);\r", "+\t\t\t\t\t\tthis.updateCurrentDeltaAndIndex(subpkg, child);\r", "+\t\t\t\t\t}", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "-\t\t\tbreak;\r", "+\t\t\tif (element instanceof IPackageFragmentRoot) {\r", "+\t\t\t\telement = (Openable)((IPackageFragmentRoot)element).getPackageFragment(\"\");\r", "+\t\t\t}\r", "+\t\t\tif (element instanceof IPackageFragment) {\r", "+\t\t\t\t// remove subpackages\r", "+\t\t\t\tPackageFragmentRoot root = element.getPackageFragmentRoot();\r", "+\t\t\t\tString name = element.getElementName();\r", "+\t\t\t\tIResourceDelta[] children = delta.getAffectedChildren();\r", "+\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "+\t\t\t\t\tIResourceDelta child = children[i];\r", "+\t\t\t\t\tIResource resource = child.getResource();\r", "+\t\t\t\t\tif (resource instanceof IFolder) {\r", "+\t\t\t\t\t\tString subpkgName = \r", "+\t\t\t\t\t\t\tname.length() == 0 ? \r", "+\t\t\t\t\t\t\t\tresource.getName() : \r", "+\t\t\t\t\t\t\t\tname + \".\" + resource.getName(); //$NON-NLS-1$\r", "+\t\t\t\t\t\tOpenable subpkg = (Openable)root.getPackageFragment(subpkgName);\r", "+\t\t\t\t\t\tthis.updateCurrentDeltaAndIndex(subpkg, child);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "+\t\t\t\treturn false; // when a project is open/closed don't process children\r", "-\t\t\tbreak;\r", "+\t\t\treturn true;\r", "+\treturn true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a521f57503136b170be01da2ac3c2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "1a18ae0a7f87984c327278bf2097db1fc176b8aa", "commitAfterChange": "16639d06fb7d968f56130bc74dcaf6bcb3941b64", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \r \tprotected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\tprotected void updateIndex(Openable element, IResourceDelta delta) {\r", "+protected void updateIndex(Openable element, IResourceDelta delta) {\r", "+\ttry {\t\t\r", "-\t\t\t\t\t\tindexManager.indexAll((IProject) delta.getResource());\r", "+\t\t\t\t\t\tindexManager.indexAll(element.getJavaProject().getProject());\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "+\t\t\t\tswitch (delta.getKind()) {\r", "+\t\t\t\t\tcase IResourceDelta.ADDED:\r", "+\t\t\t\t\tcase IResourceDelta.CHANGED:\r", "+\t\t\t\t\t\tif (element instanceof JarPackageFragmentRoot) {\r", "+\t\t\t\t\t\t\tJarPackageFragmentRoot root = (JarPackageFragmentRoot)element;\r", "+\t\t\t\t\t\t\t// index jar file only once (if the root is in its declaring project)\r", "+\t\t\t\t\t\t\tif (root.getJavaProject().getProject().getFullPath().isPrefixOf(root.getPath())) {\r", "+\t\t\t\t\t\t\t\tindexManager.indexJarFile(root.getPath(), root.getJavaProject().getElementName());\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IResourceDelta.REMOVED:\r", "+\t\t\t\t\t\t// keep index in case it is added back later in this session\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t\t// don't break as packages of the package fragment root can be indexed below\r", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "+\t\t\t\tswitch (delta.getKind()) {", "+\t\t\t\t\tcase IResourceDelta.ADDED:\r", "+\t\t\t\t\tcase IResourceDelta.REMOVED:\r", "+\t\t\t\t\t\tIPackageFragment pkg = null;\r", "+\t\t\t\t\t\tif (element instanceof IPackageFragmentRoot) {\r", "+\t\t\t\t\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot)element;\r", "+\t\t\t\t\t\t\tpkg = root.getPackageFragment(\"\");\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tpkg = (IPackageFragment)element;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tString name = pkg.getElementName();\r", "+\t\t\t\t\t\tIResourceDelta[] children = delta.getAffectedChildren();\r", "+\t\t\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "+\t\t\t\t\t\t\tIResourceDelta child = children[i];\r", "+\t\t\t\t\t\t\tIResource resource = child.getResource();\r", "+\t\t\t\t\t\t\tif (resource instanceof IFile) {\r", "+\t\t\t\t\t\t\t\tString extension = resource.getFileExtension();\r", "+\t\t\t\t\t\t\t\tif (\"java\".equalsIgnoreCase(extension)) { //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\tOpenable cu = (Openable)pkg.getCompilationUnit(resource.getName());\r", "+\t\t\t\t\t\t\t\t\tthis.updateIndex(cu, child);\r", "+\t\t\t\t\t\t\t\t} else if (\"class\".equalsIgnoreCase(extension)) { //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\tOpenable classFile = (Openable)pkg.getClassFile(resource.getName());\r", "+\t\t\t\t\t\t\t\t\tthis.updateIndex(classFile, child);\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "-\t\t\t\tIFile file = (IFile) delta.getResource();\r", "+\t\t\t\tIFile file = (IFile) element.getUnderlyingResource();\r", "+\t} catch (CoreException e) {\r", "+\t\t// ignore: index won't be updated\r", "+}\r"]}], "num": 67740}