{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a600c486f389faa6467c8b8f58811812", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d3820a96b2963bb76764f8e53e27d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDeltaBuilder.java", "commitBeforeChange": "54bfec2a779f774d0ec94918b11965f709f8eea7", "commitAfterChange": "07b0f1c60d56e715370df7f24af276bdb1cfa324", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private void initialize()", "signatureAfterChange": " private void initialize()", "diff": ["-\tthis.putNewPosition(this.javaElement, new ListItem(null, null));", "-\tthis.delta = new JavaElementDelta(javaElement);", "-\t", "-\t// if building a delta on a compilation unit or below, ", "-\t// it's a fine grained delta", "-\tif (javaElement.getElementType() >= IJavaElement.COMPILATION_UNIT) {", "-\t\tthis.delta.fineGrained();", "-\t}", "-\t", "+\tthis.putNewPosition(this.javaElement, new ListItem(null, null));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89bc8f0b57da8d22960e7e1384af6612", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "f98ff60ea4aadb5ad960a35b0293f0998e35fc18", "commitAfterChange": "e9dab03249c4cb99686aef75ce88b855ecbdceb7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": "\r protected void addAffectedChild(JavaElementDelta child)", "diff": ["+\r", "+\t// if a child delta is added to a compilation unit delta or below, \r", "+\t// it's a fine grained delta\r", "+\tif (fChangedElement.getElementType() >= IJavaElement.COMPILATION_UNIT) {\r", "+\t\tthis.fineGrained();\r", "+\t}\r", "+\t\t\tdefault: \r", "+\t\t\t\t// unknown -> existing child becomes the child with the existing child's flags\r", "+\t\t\t\tint flags = existingChild.getFlags();\r", "+\t\t\t\tfAffectedChildren[existingChildIndex] = child;\r", "+\t\t\t\tchild.fChangeFlags |= flags;\r"]}], "num": 17096}