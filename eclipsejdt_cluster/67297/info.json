{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceab1bf7c814f808c0dc10d13106e764", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "195fe6548b3a2ff4958fbe22c6cb636b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "582314aebaa81c30307377892044ded507af1f74", "commitAfterChange": "c0ecc47cac9e40a73cc3ed5a5be93bbace7cb891", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \t \tprivate void parseFullyQualifiedName()", "signatureAfterChange": " \t \tprivate void parseFullyQualifiedName()", "diff": ["-\t \t\tcase Scanner.WILDCARD:", "-\t\t\t \tchar[] source = this.scanner.getTokenSource();", "-\t\t\t \tif (source.length == 0) {", "-\t\t\t \t\tmalformedKey();", "-\t\t\t \t\treturn;", "-\t\t\t \t}", "-\t\t\t \tint kind = -1;", "-\t\t\t \tswitch (source[0]) {", "-\t\t\t\t \tcase '*':", "-\t\t\t\t \t\tkind = Wildcard.UNBOUND;", "-\t\t\t\t \t\tbreak;", "-\t\t\t\t \tcase '+':", "-\t\t\t\t \t\tkind = Wildcard.EXTENDS;", "-\t\t\t\t \t\tbreak;", "-\t\t\t\t \tcase '-':", "-\t\t\t\t \t\tkind = Wildcard.SUPER;", "-\t\t\t\t \t\tbreak;", "-\t\t\t \t}", "-\t\t\t \tif (kind == -1) {", "-\t\t\t \t\tmalformedKey();", "-\t\t\t \t\treturn;", "-\t\t\t \t}", "-\t\t\t \tif (kind != Wildcard.UNBOUND)", "-\t\t\t \t\tparseWildcardBound();", "-\t\t\t \tconsumeWildCard(kind);", "-\t\t\t \tthis.hasTypeName = false;", "-\t \t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f5a266e0e7a262546387f0c8d73269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tprivate void parseFullyQualifiedName()", "signatureAfterChange": " \t \tprivate void parseFullyQualifiedName()", "diff": ["+\t\t\t\tthis.hasTypeName = false;", "+\t \t\tcase Scanner.WILDCARD:", "+\t\t\t \tchar[] source = this.scanner.getTokenSource();", "+\t\t\t \tif (source.length == 0) {", "+\t\t\t \t\tmalformedKey();", "+\t\t\t \t\treturn;", "+\t\t\t \t}", "+\t\t\t \tint kind = -1;", "+\t\t\t \tswitch (source[0]) {", "+\t\t\t\t \tcase '*':", "+\t\t\t\t \t\tkind = Wildcard.UNBOUND;", "+\t\t\t\t \t\tbreak;", "+\t\t\t\t \tcase '+':", "+\t\t\t\t \t\tkind = Wildcard.EXTENDS;", "+\t\t\t\t \t\tbreak;", "+\t\t\t\t \tcase '-':", "+\t\t\t\t \t\tkind = Wildcard.SUPER;", "+\t\t\t\t \t\tbreak;", "+\t\t\t \t}", "+\t\t\t \tif (kind == -1) {", "+\t\t\t \t\tmalformedKey();", "+\t\t\t \t\treturn;", "+\t\t\t \t}", "+\t\t\t \tconsumeWildCard(kind);", "+\t\t\t \tif (kind == Wildcard.UNBOUND) {", "+\t\t\t \t\tthis.hasTypeName = false;", "+\t\t\t \t\treturn;", "+\t\t\t \t}", "+\t\t\t \tparseFullyQualifiedName();", "+\t \t\t\tbreak;", "+\t \t\tcase Scanner.CAPTURE:", "+\t \t\t\tconsumeCapture();", "+\t \t\t\tparseFullyQualifiedName();", "+\t \t\t\tbreak;"]}], "num": 67297}