{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccdb61d063eaa31fce2ab7110ff2ed98", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c88d6c474824918c3a0682ffb6937b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void enterInterface(TypeInfo typeInfo)", "signatureAfterChange": " public void enterInterface(TypeInfo typeInfo)", "diff": ["- */", "-", "-\tif (currentType == null) {", "-\t\t// top level type", "-\t\tcurrentType = ", "-\t\t\tnew SourceType(", "-\t\t\t\tnull, ", "-\t\t\t\ttypeInfo.declarationStart, ", "-\t\t\t\ttypeInfo.modifiers, ", "-\t\t\t\ttypeInfo.name, ", "-\t\t\t\ttypeInfo.nameSourceStart, ", "-\t\t\t\ttypeInfo.nameSourceEnd, ", "-\t\t\t\tnull, ", "-\t\t\t\ttypeInfo.superinterfaces, ", "-\t\t\t\tsource); ", "-\t\tcurrentType.setPackage(currentPackage);", "-\t\tsetImports();", "-\t} else {", "-\t\t// member type", "-\t\tSourceType memberType;", "-\t\tcurrentType.addMemberType(", "-\t\t\tmemberType = ", "-\t\t\t\tnew SourceType(", "-\t\t\t\t\tcurrentType.getName(), ", "-\t\t\t\t\ttypeInfo.declarationStart, ", "-\t\t\t\t\ttypeInfo.modifiers, ", "-\t\t\t\t\ttypeInfo.name, ", "-\t\t\t\t\ttypeInfo.nameSourceStart, ", "-\t\t\t\t\ttypeInfo.nameSourceEnd, ", "-\t\t\t\t\tnull, ", "-\t\t\t\t\ttypeInfo.superinterfaces, ", "-\t\t\t\t\tsource)); ", "-\t\tmemberType.parent = currentType;", "-\t\tcurrentType = memberType;", "-\t}", "-\tif (typeInfo.typeParameters != null) {", "-\t\tfor (int i = 0, length = typeInfo.typeParameters.length; i < length; i++) {", "-\t\t\tTypeParameterInfo typeParameterInfo = typeInfo.typeParameters[i];", "-\t\t\taddTypeParameter(typeParameterInfo);", "-\t\t}", "-\t}", "+\tenterType(typeInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e152a8defc511d9e126f31ece052bf80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "9c1e2e3de87cdd04985b57918d50a3f3fc191472", "commitAfterChange": "de85d73a10e0280a45c9d9fcbbd2b35068e06127", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void createArgumentBindings()", "signatureAfterChange": " \tpublic void createArgumentBindings()", "diff": ["-\t\tif (this.arguments != null && this.binding != null) {", "-\t\t\tfor (int i = 0, length = this.arguments.length; i < length; i++) {", "-\t\t\t\tArgument argument = this.arguments[i];", "-\t\t\t\targument.createBinding(this.scope, this.binding.parameters[i]);", "+\t\tcreateArgumentBindings(this.arguments, this.binding, this.scope);", "+\t}", "-\t\t\t\t\tif (this.binding.parameterNonNullness == null) {", "-\t\t\t\t\t\tthis.binding.parameterNonNullness = new Boolean[this.arguments.length];", "-\t\t\t\t\t\tthis.binding.tagBits |= TagBits.IsNullnessKnown;", "-\t\t\t\t\tthis.binding.parameterNonNullness[i] = Boolean.valueOf(argTypeTagBits == TagBits.AnnotationNonNull);"]}], "num": 53798}