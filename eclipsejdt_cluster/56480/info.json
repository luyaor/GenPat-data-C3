{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b29045af284930b66a3be578c05d81aa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a936d4e35ad0b1befe02de88f3fb6eca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected StringBuffer print(StringBuffer output)", "signatureAfterChange": "  \tprotected StringBuffer print(StringBuffer output)", "diff": ["-\t\tif (this.isCamelCase) {", "-\t\t\toutput.append(\"camel case + \"); //$NON-NLS-1$", "-\t\t}", "+\t\t\tcase R_CAMELCASE_MATCH :", "+\t\t\t\toutput.append(\"camel case match, \"); //$NON-NLS-1$", "+\t\t\t\tbreak;", "+\t\t\tcase R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\t\toutput.append(\"camel case same part count match, \"); //$NON-NLS-1$", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b13f1cf400f8df511b32f5de3c0764e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "f74cac509deaf512c7535f38357f0bf074e0e26d", "commitAfterChange": "4f8754b531ef7a0f61f91d095d8127db2debc51a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tprivate String getArguments(int[] arguments)", "signatureAfterChange": "  \tprivate String getArguments(int[] arguments, String[] argumentsName)", "diff": ["-\tprivate String getArguments(int[] arguments) {", "+\tprivate String getArguments(int[] arguments, String[] argumentsName) {", "-\t\tbuffer.append('{');", "-\t\t\tif (i != 0) {", "-\t\t\t\tbuffer.append(Messages.disassembler_comma);", "-\t\t\t}", "+\t\t\t\t\t\targumentsName[i]", "+\t\t\tif (i != arguments.length - 1)", "+\t\t\t\tbuffer.append(\"\\n\\t\\t\"); //$NON-NLS-1$", "-\t\tbuffer.append('}');"]}], "num": 56480}