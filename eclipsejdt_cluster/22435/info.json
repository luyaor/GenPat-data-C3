{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7968d5b07f6d329aef46b4e825751ec7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3289bd8b9f52127562c53616f87cb737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e67c77fc5e097eac99c8909bb016eff7011eb0ce", "commitAfterChange": "5d677f26e6a9dfca4bbd2cd8a965c43c4f46ed94", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " private int indexOf(String relativePath, String containerPath)", "signatureAfterChange": " private int indexOf(String containerPath, String relativePath)", "diff": ["-private int indexOf(String relativePath, String containerPath) {", "-\tif (containerPath != null) {", "-\t\t// if container path is known, use the hash to get faster comparison", "-\t\tint index = (containerPath.hashCode()& 0x7FFFFFFF) % this.paths.length;", "-\t\tString currentContainerPath;", "-\t\twhile ((currentContainerPath = this.containerPaths[index]) != null) {", "-\t\t\tif (currentContainerPath.equals(containerPath)) {", "-\t\t\t\tString scopePath = this.paths[index];", "-\t\t\t\tif (encloses(scopePath, relativePath, index))", "-\t\t\t\t\treturn index;", "-\t\t\t}", "-\t\t\tindex = (index + 1) % this.paths.length;", "-\t\t}", "-\t\treturn -1;", "-\t}", "-\t", "-\tfor (int i = 0, length = this.paths.length; i < length; i++) {", "-\t\tString scopePath = this.paths[i];", "-\t\tif (scopePath == null) continue;", "-\t\tif (encloses(this.containerPaths[i] + '/' + scopePath, relativePath, i))", "+ */", "+private int indexOf(String containerPath, String relativePath) {", "+\t// use the hash to get faster comparison", "+\tint index = (containerPath.hashCode()& 0x7FFFFFFF) % this.containerPaths.length;", "+\tString currentContainerPath;", "+\twhile ((currentContainerPath = this.containerPaths[index]) != null) {", "+\t\tif (currentContainerPath.equals(containerPath)) {", "+\t\t\tString currentRelativePath = this.relativePaths[index];", "+\t\t\tif (encloses(currentRelativePath, relativePath, index))", "+\t\t\t\treturn index;", "+\t\tindex = (index + 1) % this.relativePaths.length;", "+\t}", "+\treturn -1;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53281d882b064b0787163c12bfa16847", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "2483ac09a8125d318f0d65ce74d17599684aee53", "commitAfterChange": "7145bdca11a91565ab60b6927646ef17342a693f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected INameEnvironment[] getClassLibs()", "signatureAfterChange": " protected INameEnvironment[] getClassLibs()", "diff": ["-\tint length = this.classpaths.length;", "-\tINameEnvironment[] classLibs = new INameEnvironment[length];", "-\tfor (int i = 0; i < length; i++) {", "-\t\tString classpath = this.classpaths[i];", "-\t\tif (classpath.equals(JAVA_CLASS_LIB_PATH)) {", "-\t\t\tif (this.javaClassLib == null) {", "-\t\t\t\tthis.javaClassLib =", "-\t\t\t\t\tnew FileSystem(", "-\t\t\t\t\t\tnew String[] {classpath}, ", "-\t\t\t\t\t\tnew String[] {}, // ignore initial file names", "-\t\t\t\t\t\tencoding // default encoding", "-\t\t\t\t);", "-\t\t\t}", "-\t\t\tclassLibs[i] = this.javaClassLib;", "-\t\t} else {", "-\t\t\tclassLibs[i] =", "-\t\t\t\tnew FileSystem(", "-\t\t\t\t\tnew String[] {classpath}, ", "-\t\t\t\t\tnew String[] {}, // ignore initial file names", "-\t\t\t\t\tencoding // default encoding\t\t\t", "-\t\t\t\t);", "-\t\t}", "-\t}", "+\tINameEnvironment[] classLibs = new INameEnvironment[1];", "+\tclassLibs[0] =", "+\t\tnew FileSystem(", "+\t\t\tclasspaths, ", "+\t\t\tnew String[] {}, // ignore initial file names", "+\t\t\tencoding // default encoding\t\t\t", "+\t\t);"]}], "num": 22435}