{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "324dd4de8b3b70f74b4be56d25164523", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6057a29a3a4e0c3d131add9f0ed947b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "0bb8dba3efca9a5500b67c37770710de86a06c2e", "commitAfterChange": "6726a5eb1723cea7dfdb4d1905ca215391f75d8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tif (local != null) {", "+\t\tLocalVariableBinding previousTrackerBinding = null;", "+\t\tif (local.closeTracker != null) {", "+\t\t\t// Assigning to a variable already holding an AutoCloseable, has it been closed before?", "+\t\t\tpreviousTrackerBinding = local.closeTracker.binding;", "+\t\t\tif (!flowInfo.isDefinitelyNull(local)) // only if previous value may be non-null", "+\t\t\t\tlocal.closeTracker.recordErrorLocation(this, flowInfo.nullStatus(previousTrackerBinding));", "+\t\t}", "+\t\tFakedTrackingVariable.handleResourceAssignment(flowInfo, this, this.expression, local, previousTrackerBinding);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64b832a53730b00479cfc2f7f1a9dfd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "054ef716f5c2a57e4e4c8e790ba134b6404d4f2a", "commitAfterChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tif (local != null) {", "+\t\tLocalVariableBinding previousTrackerBinding = null;", "+\t\tif (local.closeTracker != null) {", "+\t\t\t// Assigning to a variable already holding an AutoCloseable, has it been closed before?", "+\t\t\tpreviousTrackerBinding = local.closeTracker.binding;", "+\t\t\tif (!flowInfo.isDefinitelyNull(local)) // only if previous value may be non-null", "+\t\t\t\tlocal.closeTracker.recordErrorLocation(this, flowInfo.nullStatus(previousTrackerBinding));", "+\t\t}", "+\t\tFakedTrackingVariable.handleResourceAssignment(flowInfo, this, this.expression, local, previousTrackerBinding);", "+\t}"]}], "num": 22362}