{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd953e61a0d0a054fe2246d58a5f613b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e5124e4fc5cc64d42b25605bdd1d09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "34e1323714720fac6c0469cd7d4221981cde60ef", "commitAfterChange": "cd0ef371d41af41215f5d9573eaf8b0116d8b98f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "signatureAfterChange": "  \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\tthrow new IllegalStateException();", "+\t\t\t\t\t\t\tStringWriter stringWriter = new StringWriter();", "+\t\t\t\t\t\t\tPrintWriter writer = null;", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\twriter = new PrintWriter(stringWriter);", "+\t\t\t\t\t\t\t\te.printStackTrace(writer);", "+\t\t\t\t\t\t\t} finally {", "+\t\t\t\t\t\t\t\tif (writer != null) writer.close();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthrow new IllegalStateException(String.valueOf(stringWriter.getBuffer()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7227becc48de5e7772ac50479182bef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "e123314543857cb1b8ec56c51064c6ca3f238374", "commitAfterChange": "ba3f3515e414cf41bff76ad382644021240dc399", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String disassemble(byte[] classFileBytes, String lineSeparator) throws ClassFormatException", "signatureAfterChange": " \tpublic String disassemble(byte[] classFileBytes, String lineSeparator) throws ClassFormatException", "diff": ["-\t\t\tStringWriter stringWriter = new StringWriter();", "-\t\t\tPrintWriter writer = new PrintWriter(stringWriter);", "-\t\t\te.printStackTrace(writer);", "-\t\t\twriter.flush();", "-\t\t\twriter.close();", "-\t\t\tthrow new ClassFormatException(String.valueOf(stringWriter.getBuffer()));", "+\t\t\tthrow new ClassFormatException(e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e768385d1833325cb1197d12082a149d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "e123314543857cb1b8ec56c51064c6ca3f238374", "commitAfterChange": "ba3f3515e414cf41bff76ad382644021240dc399", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic String disassemble(byte[] classFileBytes, String lineSeparator, int mode) throws ClassFormatException", "signatureAfterChange": " \tpublic String disassemble(byte[] classFileBytes, String lineSeparator, int mode) throws ClassFormatException", "diff": ["-\t\t\tStringWriter stringWriter = new StringWriter();", "-\t\t\tPrintWriter writer = new PrintWriter(stringWriter);", "-\t\t\te.printStackTrace(writer);", "-\t\t\twriter.flush();", "-\t\t\twriter.close();", "-\t\t\tthrow new ClassFormatException(String.valueOf(stringWriter.getBuffer()));", "+\t\t\tthrow new ClassFormatException(e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1afcf855ba6495a2a7d193d8ad83f09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DualParseSyntaxErrorTest.java", "commitBeforeChange": "738e086e894bacdbfae0e65ffe73d6cdfbe7d90c", "commitAfterChange": "9af380edbebe260c532550e38eabb05a50b6fe99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "signatureAfterChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "diff": ["-\t\t\tcomputedUnit.types[i].binding = new SourceTypeBinding(){};", "+\t\t\t\t\tStringWriter stringWriter = new StringWriter();", "+\t\t\t\t\te.printStackTrace(new PrintWriter(stringWriter));", "+\t\t\t\t\tbuffer.append(stringWriter.getBuffer());"]}], "num": 30679}