{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6487c62e4bab1a965225c01637d81cf0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06058baebef7d4ebd26f039a17eb0488", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "4334ae3c3edbbd7f696f2ecb0b69bc310c6a9029", "commitAfterChange": "5bbbd2a6cca56e147177ee2f5e5f3e4b4f043dee", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic static IPath getClasspathVariable(String variableName)", "signatureAfterChange": "\r \tpublic static IPath getClasspathVariable(final String variableName)", "diff": ["-\tpublic static IPath getClasspathVariable(String variableName) {\r", "+\tpublic static IPath getClasspathVariable(final String variableName) {\r", "-\t\t\tClasspathVariableInitializer initializer = getClasspathVariableInitializer(variableName);\r", "+\t\t\tfinal ClasspathVariableInitializer initializer = getClasspathVariableInitializer(variableName);\r", "-\t\t\t\tinitializer.initialize(variableName);\r", "+\t\t\t\t// wrap initializer call with Safe runnable in case initializer would be causing some grief\r", "+\t\t\t\tPlatform.run(new ISafeRunnable() {\r", "+\t\t\t\t\tpublic void handleException(Throwable exception) {\r", "+\t\t\t\t\t\tUtil.log(exception, \"Exception occurred in classpath variable initializer: \"+initializer); //$NON-NLS-1$\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tpublic void run() throws Exception {\r", "+\t\t\t\t\t\tinitializer.initialize(variableName);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t});\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132659a0a9efcab27063ed6b95f3d8fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryManager.java", "commitBeforeChange": "bd1b1f9ce5ec45bdc4cd7ce492b05067509fd6df", "commitAfterChange": "241d64f631bbf77014d4fbfc8f74f781b65e5c36", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate static void rebindClasspathEntries(String name, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tprivate static void rebindClasspathEntries(String name, boolean remove, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tprivate static void rebindClasspathEntries(String name, IProgressMonitor monitor) throws JavaModelException {", "+\tprivate static void rebindClasspathEntries(String name, boolean remove, IProgressMonitor monitor) throws JavaModelException {", "-\t\t\t", "+\t\t\tif (!remove) {", "+\t\t\t\t// Previously, containers array only contained a null value. Then, user library classpath entry was first removed", "+\t\t\t\t// and then added a while after when post change delta event on .classpath file was fired...", "+\t\t\t\t// Unfortunately, in some cases, this event was fired a little bit too late and missed the refresh of Package Explorer", "+\t\t\t\t// (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=61872)", "+\t\t\t\t// So now, instanciate a new user library classpath container instead which allow to refresh its content immediately", "+\t\t\t\t// as there's no classpath entry removal...", "+\t\t\t\t// Note that it works because equals(Object) method is not overridden for UserLibraryClasspathContainer.", "+\t\t\t\t// If it was, the update wouldn't happen while setting classpath container", "+\t\t\t\t// @see javaCore.setClasspathContainer(IPath, IJavaProject[], IClasspathContainer[], IProgressMonitor)", "+\t\t\t\tUserLibraryClasspathContainer container= new UserLibraryClasspathContainer(name);", "+\t\t\t\tcontainers[0] = container;", "+\t\t\t}"]}], "num": 225}