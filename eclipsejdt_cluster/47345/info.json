{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b26a8cdc7a8d83ca6446bdc3b11c73fa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cbeab0616c919ae9e49c88ffb1c5874", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b3259a85709d3572dbc66af8429669a5ffb6c93e", "commitAfterChange": "127659b0b65559785b17f6e9cd9932dd029d7d5a", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "\r public void parseError(\r \tint startPosition, \r \tint endPosition, \r \tchar[] currentTokenSource, \r \tString errorTokenName, \r \tString[] possibleTokens,\r \tReferenceContext context,\r \tCompilationResult compilationResult)", "signatureAfterChange": "\r public void parseError(\r \tint startPosition, \r \tint endPosition, \r \tchar[] currentTokenSource, \r \tString errorTokenName, \r \tString[] possibleTokens,\r \tReferenceContext context,\r \tCompilationResult compilationResult)", "diff": ["-\t\tthis.handle(\r", "-\t\t\tParsingErrorNoSuggestion,\r", "-\t\t\tnew String[] {errorTokenName},\r", "-\t\t\t// this is the current -invalid- token position\r", "-\t\t\tstartPosition,\r", "-\t\t\tendPosition,\r", "-\t\t\tcontext, \r", "-\t\t\tcompilationResult);\r", "-\t\treturn;\r", "+\t\tif (isKeyword(currentTokenSource)) {\r", "+\t\t\tthis.handle(\r", "+\t\t\t\tParsingErrorOnKeywordNoSuggestion,\r", "+\t\t\t\tnew String[] {new String(currentTokenSource)},\r", "+\t\t\t\t// this is the current -invalid- token position\r", "+\t\t\t\tstartPosition,\r", "+\t\t\t\tendPosition,\r", "+\t\t\t\tcontext,\r", "+\t\t\t\tcompilationResult);\r", "+\t\t\treturn;\r", "+\t\t} else {\r", "+\t\t\tthis.handle(\r", "+\t\t\t\tParsingErrorNoSuggestion,\r", "+\t\t\t\tnew String[] {errorTokenName},\r", "+\t\t\t\t// this is the current -invalid- token position\r", "+\t\t\t\tstartPosition,\r", "+\t\t\t\tendPosition,\r", "+\t\t\t\tcontext, \r", "+\t\t\t\tcompilationResult);\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\tif (isKeyword(currentTokenSource)) {\r", "+\t\tthis.handle(\r", "+\t\t\tParsingErrorOnKeyword,\r", "+\t\t\tnew String[] {new String(currentTokenSource), list.toString()},\r", "+\t\t\t// this is the current -invalid- token position\r", "+\t\t\tstartPosition,\r", "+\t\t\tendPosition,\r", "+\t\t\tcontext,\r", "+\t\t\tcompilationResult);\r", "+\t\treturn;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6a2f4dfd67879e3dad4e5b8ea49f69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "signatureAfterChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "diff": ["-\tthis.handle(", "-\t\tIProblem.IncorrectSwitchType,", "-\t\tnew String[] {new String(testType.readableName())},", "-\t\tnew String[] {new String(testType.shortReadableName())},", "-\t\texpression.sourceStart,", "-\t\texpression.sourceEnd);", "+\tif (this.options.sourceLevel < ClassFileConstants.JDK1_7) {", "+\t\tif (testType.id == TypeIds.T_JavaLangString) {", "+\t\t\tthis.handle(", "+\t\t\t\t\tIProblem.SwitchOnStringsNotBelow17,", "+\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\texpression.sourceEnd);", "+\t\t} else {", "+\t\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t\t}", "+\t} else {", "+\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType17,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t}"]}], "num": 47345}