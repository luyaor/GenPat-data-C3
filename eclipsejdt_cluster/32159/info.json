{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e87948e359d4b5971a8daaab6d191126", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287bee4c0835a59bea5c0556ca4e3ffb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void _testInterfaceDeleting() throws JavaModelException", "signatureAfterChange": " \tpublic void testInterfaceDeleting() throws JavaModelException", "diff": ["-\t// TODO (kent) dependency problem - need to record supertypes", "-\tpublic void _testInterfaceDeleting() throws JavaModelException {", "+\tpublic void testInterfaceDeleting() throws JavaModelException {", "-//\t\t\t\"public class Test { public Vehicle createVehicle() { return new CarImpl(); } }\\n\" //$NON-NLS-1$", "-\t\t\t\"public class Test { public Vehicle createVehicle(CarImpl c) { return c; } }\\n\" //$NON-NLS-1$", "+\t\t\t\"public class Test { public Vehicle createVehicle() { return new CarImpl(); } }\\n\" //$NON-NLS-1$", "-\t\texpectingSpecificProblemFor(testPath, new Problem(\"Test\", \"The type p1.A is not visible\", testPath)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(testPath, new Problem(\"Test\", \"Type mismatch: cannot convert from CarImpl to Vehicle\", testPath)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"public interface Car {}\\n\" //$NON-NLS-1$", "+\t\t\t\"public interface Car extends Vehicle {}\\n\" //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba7dbec1966c684833b52a74573e358", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 266, "methodNumberAfterChange": 265, "signatureBeforeChange": " public void testBug305518_wksp2_02()", "signatureAfterChange": " public void testBug305518_wksp2_02()", "diff": ["-\t\t\"\t * <pre>\\n\" + ", "-\t\t\"\t * e.g.\\n\" + ", "+\t\t\"\t * <pre>e.g.\\n\" + ", "-\t\t\"\t * MyNamespace; MyProject\\\\Sub\\\\Level; namespace\\\\MyProject\\\\Sub\\\\Level;\\n\" + ", "+\t\t\"\t * MyNamespace;\\n\" + ", "+\t\t\"\t * MyProject\\\\Sub\\\\Level;\\n\" + ", "+\t\t\"\t * namespace\\\\MyProject\\\\Sub\\\\Level;\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f291693600295fe048e50d0f0aedd87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "34d5d4354d36d817350ef899f3a15103448aa302", "commitAfterChange": "88090982bc7841972aaf7a02c388b452bc9c09ac", "methodNumberBeforeChange": 823, "methodNumberAfterChange": 823, "signatureBeforeChange": " public void test817()", "signatureAfterChange": " public void test817()", "diff": ["-\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"The expression of type X<?>.Inner is already an instance of type X<?>.Inner\\n\" + ", "+\t\t\"Incompatible conditional operand types X<?>.Inner[] and X<?>.Inner\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a108ce41d98c4b5730513c0348d7a89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3f665dc08ffa02e27b74efb0940c16f2120a11f8", "commitAfterChange": "307e2de84d078daed3099015a7ac89d980746b6b", "methodNumberBeforeChange": 606, "methodNumberAfterChange": 606, "signatureBeforeChange": " \tpublic void test0588()", "signatureAfterChange": " \tpublic void test0588()", "diff": ["-\t\t\t\t\"public class X<S extends Comparable<S>> {\\n\" + ", "-\t\t\t\t\"    public void f() {\\n\" + ", "-\t\t\t\t\"        Class<S> currentClass = null;\\n\" + ", "-\t\t\t\t\"        boolean b = currentClass == Long.class;\\n\" + // not provably distinct types", "-\t\t\t\t\"\t\t\\n\" + ", "-\t\t\t\t\"\t\tboolean c = X.class == Long.class;\\n\" + // provably distinct types", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"}\\n\",", "+    \t\t\t\"public class X<S extends Comparable<S>> {\\n\" + ", "+    \t\t\t\"\tpublic void f() {\\n\" + ", "+    \t\t\t\"\t\tClass<? extends Comparable<?>> cc = Long.class;\\n\" + ", "+    \t\t\t\"\t\tClass<S> currentClass = null;\\n\" + ", "+    \t\t\t\"\t\tboolean b = currentClass == Long.class;\\n\" + ", "+    \t\t\t\"\t\tboolean c = X.class == Long.class;\\n\" + ", "+    \t\t\t\"    }\\n\" + ", "+    \t\t\t\"}\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82393ec338876c4ecba77d3f2b755b83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "0fdabed7d03d0f0d08fda0e7f845381fd7c643ef", "commitAfterChange": "b31cd8ccd51413655d3e805905e8dd7d1404f391", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void testBug399781()", "signatureAfterChange": " public void testBug399781()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c08d23d64b8712a9c26f0efa754ad76e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "25be17e24d113dbd94082ea092a27701e47ebd01", "commitAfterChange": "f82e0ad3dab46b5bd0c06a2add2ddb5dc79f6a28", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-        \"    -encoding <enc>    specify custom encoding for all sources. If multiple \\n\" + ", "-        \"                       encodings are specified, the last one will be used. Each\\n\" + ", "+        \"    -encoding <enc>    specify default encoding for all source files. Each\\n\" + ", "+        \"                       If multiple default encodings are specified, the last\\n\" + ", "+        \"                       one will be used.\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc18e21bccba243ca9b218650db0f757", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "34b4972480c62fc99b17d4728db2648e98460b52", "commitAfterChange": "a234173ab4d645c8990c97cafa00ec82ce0a909f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation\\\" value=\\\"ignore\\\"/>\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nonnullisdefault\\\" value=\\\"disabled\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf9cfbcb8ef951a3e9f381a92c0fe02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testBug059891_wksp1_08() throws JavaModelException", "signatureAfterChange": " public void testBug059891_wksp1_08() throws JavaModelException", "diff": ["-\t\t\"\t\t\tIStatus status = new Status(IStatus.ERROR, AntCorePlugin.PI_ANTCORE,\\n\" + ", "+\t\t\"\t\t\tIStatus status = new Status(\\n\" + ", "+\t\t\"\t\t\t\t\tIStatus.ERROR,\\n\" + ", "+\t\t\"\t\t\t\t\tAntCorePlugin.PI_ANTCORE,\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t.getString(\\\"AntRunner.Already_in_progess\\\"), //$NON-NLS-1$\\n\" + ", "-\t\t\"\t\t\t\t\t\t\tnew String[] { buildFileLocation }),\\n\" + ", "-\t\t\"\t\t\t\t\tnull);\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t.getString(\\\"AntRunner.Already_in_progess\\\"), new String[] { buildFileLocation }), null); //$NON-NLS-1$\\n\" + "]}], "num": 32159}