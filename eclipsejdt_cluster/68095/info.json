{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74fed28ed46d065d62a81e660284c9e7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16bd71885771360b144d0aeaecd3a2a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "988db3ec863dadeb2db80ab85efafc59fca27d63", "commitAfterChange": "bba7694c48471620eaabd1cb9ca1daab01462bcd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private boolean checkBuffers(String outputString, String errorString, \t\tString sourceFileName, String expectedOutputString, String expectedErrorStringStart)", "signatureAfterChange": " private boolean checkBuffers(String outputString, String errorString, \t\tString sourceFileName, String expectedOutputString, String expectedErrorStringStart)", "diff": ["+\tString trimmedErrorString = errorString.trim();", "-\t\tplatformIndependantString = Util.convertToIndependantLineDelimiter(errorString.trim());", "+\t\tplatformIndependantString = Util.convertToIndependantLineDelimiter(trimmedErrorString);", "+\t} else if (trimmedErrorString.length() != 0){", "+\t\tplatformIndependantString = Util.convertToIndependantLineDelimiter(trimmedErrorString);", "+\t\tSystem.out.println(Util.displayString(platformIndependantString, 2));", "+\t\tthis.failureReason =", "+\t\t\t\"Unexpected error running resulting class file for \"", "+\t\t\t\t+ sourceFileName", "+\t\t\t\t+ \":\\n\"", "+\t\t\t\t+ \"--[START]--\\n\"", "+\t\t\t\t+ errorString", "+\t\t\t\t+ \"---[END]---\\n\";", "+\t\tdidMatchExpectation = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d7496d9229e2dc6afcb8bb9907405c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "14b04aca0687b5f8551cdaaf886e1e9facd536a5", "commitAfterChange": "95b635335f954be09a6ac3430d9fe2fcff03ff9f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \tpublic void fire(JavaElementDelta customDelta, int originalEventType)", "signatureAfterChange": "\r \tpublic void fire(JavaElementDelta customDelta, int originalEventType)", "diff": ["-\t\t\tif (DeltaProcessor.VERBOSE){\r", "-\t\t\t\tSystem.out.println(\"FIRING Delta [\"+Thread.currentThread()+\"]:\\n\" + deltaToNotify);//$NON-NLS-1$//$NON-NLS-2$\r", "-\t\t\t}\r", "+\t\t\t\tif (DeltaProcessor.VERBOSE){\r", "+\t\t\t\t\tSystem.out.println(\"FIRING PRE_AUTO_BUILD Delta [\"+Thread.currentThread()+\"]:\\n\" + deltaToNotify);//$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t\t}\r", "+\t\t\tif (DeltaProcessor.VERBOSE){\r", "+\t\t\t\tString type = \"\";\r", "+\t\t\t\tswitch (eventType) {\r", "+\t\t\t\t\tcase ElementChangedEvent.POST_CHANGE:\r", "+\t\t\t\t\t\ttype = \"POST_CHANGE\"; //$NON-NLS-2$\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase ElementChangedEvent.PRE_AUTO_BUILD:\r", "+\t\t\t\t\t\ttype = \"PRE_AUTO_BUILD\"; //$NON-NLS-2$\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase ElementChangedEvent.POST_RECONCILE:\r", "+\t\t\t\t\t\ttype = \"POST_RECONCILE\"; //$NON-NLS-2$\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t\tSystem.out.println(\"FIRING \" + type + \" Delta [\"+Thread.currentThread()+\"]:\\n\" + deltaToNotify);//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6614afae0b07f3a9d276458bea649c42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "d70772944bf425e2b3eca30529487a518758536c", "commitAfterChange": "76097c7811a80c4f8a439f21e9c70befef38173c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence)", "signatureAfterChange": "\r public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence)", "diff": ["+\tString extension;\r", "+\tif (JavaModelManager.ZIP_ACCESS_VERBOSE && (extension = path.getFileExtension()) != null \r", "+\t\t&& (extension.toLowerCase().equals(\"zip\") || extension.toLowerCase().equals(\"jar\"))) { //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\t\r", "+\t\tSystem.out.println(\"Getting target for \" + path.toString() + \" checkResourceExistence=\" + checkResourceExistence); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t}\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac7141ce4c73d78b1a1f8a971c871c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "3fea0bd3d01827a0628763911bb538bc75a5f8bd", "commitAfterChange": "267a82506dfcd2b4938ade544a2160c1561cce40", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void compileAndDeploy(String compliance, String source, String className)", "signatureAfterChange": " \t \tpublic void compileAndDeploy(String compliance, String source, String directoryName, String className)", "diff": ["-\tpublic void compileAndDeploy(String compliance, String source, String className) {", "+\tpublic void compileAndDeploy(String compliance, String source, String directoryName, String className) {", "-\t\tString fileName = SOURCE_DIRECTORY + File.separator + className + \".java\";", "+\t\tif (directoryName != null && directoryName.length() != 0) {", "+\t\t\tdirectory = new File(SOURCE_DIRECTORY, directoryName);", "+\t\t\tif (!directory.exists()) {", "+\t\t\t\tif (!directory.mkdirs()) {", "+\t\t\t\t\tSystem.out.println(\"Could not create \" + directory);", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tString fileName = directory.getAbsolutePath() + File.separator + className + \".java\";"]}], "num": 68095}