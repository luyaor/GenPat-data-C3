{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1a09891f3d7e3fa472b293d4e9117a2", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "488e6003e07cb4e1694c62a59edc45ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matches((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d2326762b9165d5a62693ee310a704e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matches((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80e9bef6ab09f27a71fb8370c4f725e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "60e138d2828b37f2615e0cced57acea3adb47644", "commitAfterChange": "3c340a30d5ee47c28968789969de0fd1189f5b30", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matches((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a7414a1c5b145e4ab16d12b926f14b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matches((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d29c68941615dfa390a702052e33dd33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matches((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "+}\r"]}], "num": 41285}