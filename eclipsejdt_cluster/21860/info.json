{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46a5c456390c5d00e086ef232979cf27", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21bb811bdc769d183f03f387ecdec76d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 973, "methodNumberAfterChange": 973, "signatureBeforeChange": " public void test0949()", "signatureAfterChange": " public void test0949()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\"Type safety : A generic array of Iterable<Integer> is created for a varargs parameter\\n\" +", "+\t\t\"Type safety: A generic array of Iterable<Integer> is created for a varargs parameter\\n\" +", "-\t\t\"Type safety : A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "+\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "-\t\t\"Type safety : A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "+\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" : ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic <T> Iterable<T> m(T... ts) {\\n\" + ", "+\t\t\t\"\t                              ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tpublic <T> void m3(Iterable<T>... ts) {\\n\" + ", "+\t\t\t\"\t                                  ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tm3(m(3, 3, 3));\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: A generic array of Iterable<Integer> is created for a varargs parameter\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tm3(m());\\n\" + ", "+\t\t\t\"\t^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tm3(m(new Object[]{}));\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ca1cd9fadf94c99f50b06dbefaf8b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 974, "methodNumberAfterChange": 974, "signatureBeforeChange": " public void test0950()", "signatureAfterChange": " public void test0950()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\"Type safety : A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "+\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "-\t\t\"Type safety : A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "+\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "-\t\t\"Type safety : A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "+\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" : ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic <T> Iterable<T> m(T[]... ts) {\\n\" + ", "+\t\t\t\"\t                                ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tpublic <T> void m3(Iterable<T>... ts) {\\n\" + ", "+\t\t\t\"\t                                  ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tm3(m(new Integer[]{3, 3, 3}));\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tm3(m());\\n\" + ", "+\t\t\t\"\t^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tm3(m(new Object[][]{}));\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: A generic array of Iterable<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 21860}