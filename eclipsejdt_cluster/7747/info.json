{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d021f4e09f1e784f3b870b19fa5d4e3f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69069061448324d720f7273c4237613c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "27b04348f6378e421a1a2788716e3b7fc8643774", "commitAfterChange": "f91a77f7dbbae615b9ce90f64f6be8f6d8a36ad5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \r \tprivate void findVariableNames(char[] name, TypeReference type , char[][] excludeNames)", "signatureAfterChange": "\r \r \tprivate void findVariableNames(char[] name, TypeReference type , char[][] excludeNames)", "diff": ["-\t\tif(\r", "-\t\t\ttype != null &&\r", "+\r", "+\t\tif(type != null &&\r", "-\t\t\t\ttb.qualifiedPackageName(),\r", "-\t\t\t\ttb.qualifiedSourceName(),\r", "-\t\t\t\ttb.sourceName(),\r", "+\t\t\t\ttb.leafComponentType().qualifiedPackageName(),\r", "+\t\t\t\ttb.leafComponentType().qualifiedSourceName(),\r", "+\t\t\t\ttb.leafComponentType().sourceName(),\r", "-\t\t\t\ttype.dimensions() != 0);\r", "-\t\t} else {\r", "+\t\t\t\ttype.dimensions());\r", "+\t\t}/*\telse {\r", "-\t\t\t\ttype.dimensions() != 0);\r", "-\t\t}\r", "+\t\t\t\ttype.dimensions());\r", "+\t\t}*/\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efca803b8b28692de2c562ed624b969f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1f911d51d5f7aed075946732ed8e3d1eec231ff5", "commitAfterChange": "994909f27ab64cbff8a4b8b71b6f8d78e265bc42", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["-\t\t\t\tchar[] returnTypeName = CharOperation.concat(returnPackageName,method.returnType.qualifiedSourceName(),'.') ;\r", "-\t\t\t\tif(mustQualifyType(CharOperation.splitOn('.', returnPackageName), returnTypeName)) {\r", "-\t\t\t\t\tcompletion.append(returnTypeName);\r", "+\t\t\t\tchar[] returnTypeName = method.returnType.qualifiedSourceName();\r", "+\t\t\t\tif(mustQualifyType(returnPackageName, returnTypeName)) {\r", "+\t\t\t\t\tcompletion.append(CharOperation.concat(returnPackageName, returnTypeName,'.'));\r", "-\t\t\t\t\tchar[] completeParameterTypeName = CharOperation.concat(parameterPackageNames[i], parameterTypeNames[i], '.');\r", "-\t\t\t\t\tif(mustQualifyType(CharOperation.splitOn('.',parameterPackageNames[i]), completeParameterTypeName)){\r", "-\t\t\t\t\t\tcompletion.append(completeParameterTypeName);\r", "+\t\t\t\t\tif(mustQualifyType(parameterPackageNames[i], parameterTypeNames[i])){\r", "+\t\t\t\t\t\tcompletion.append(CharOperation.concat(parameterPackageNames[i], parameterTypeNames[i], '.'));\r", "-\t\t\t\t\t\tchar[] exceptionTypeName = CharOperation.concat(exceptionPackageName, exception.qualifiedSourceName());\r", "+\t\t\t\t\t\tchar[] exceptionTypeName = exception.qualifiedSourceName();\r", "-\t\t\t\t\t\tif(mustQualifyType(CharOperation.splitOn('.',exceptionPackageName), exceptionTypeName)){\r", "-\t\t\t\t\t\t\tcompletion.append(exceptionTypeName);\r", "+\t\t\t\t\t\tif(mustQualifyType(exceptionPackageName, exceptionTypeName)){\r", "+\t\t\t\t\t\t\tcompletion.append(CharOperation.concat(exceptionPackageName, exceptionTypeName));\r"]}], "num": 7747}