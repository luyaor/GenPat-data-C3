{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c4600ee5170cceaec3e3131a16162db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403379e11926af24641c0e8e71623820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 449, "signatureBeforeChange": " \tpublic void test447()", "signatureAfterChange": " \tpublic void test447()", "diff": ["-\t\t\t\"Type safety: The expression of type X.Inner is converted to X<String>.Inner<Integer> using a raw conversion. References to generic type X<A>.Inner<B> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type X.Inner needs unchecked conversion to conform to X<String>.Inner<Integer>\\n\" + ", "-\t\t\t\"Type safety: The expression of type X.Inner<Integer> is converted to X<String>.Inner<Integer> using a raw conversion. References to generic type X<A>.Inner<B> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type X.Inner<Integer> needs unchecked conversion to conform to X<String>.Inner<Integer>\\n\" + ", "-\t\t\t\"Type safety: The expression of type X.Inner is converted to X.Inner<Integer> using a raw conversion. References to generic type X<A>.Inner<B> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type X.Inner needs unchecked conversion to conform to X.Inner<Integer>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2f63088593d6f10d7ddeb44fe28574", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "\t \tpublic void test078()", "signatureAfterChange": "\t \tpublic void test078()", "diff": ["-\t\t\t\"Type safety: The expression of type A is converted to A<String> using a raw conversion. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type A needs unchecked conversion to conform to A<String>\\n\" + ", "-\t\t\t\"Type safety: The expression of type A is converted to A<String> using a raw conversion. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type A needs unchecked conversion to conform to A<String>\\n\" + ", "-\t\t\t\"Type safety: The expression of type A is converted to A<String> using a raw conversion. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type A needs unchecked conversion to conform to A<String>\\n\" + "]}], "num": 37468}