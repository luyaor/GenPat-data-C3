{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d16d116bffdda7aa9864b4d689238bc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b5b7ba4a99d342fa63a9dbdce1e05f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "55e84c50cd008972a10ffc78185164e8a53def4f", "commitAfterChange": "9485b94fdcfe614c14bea8b532c58213d01bbc20", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " \tprotected String[] getJCL15PlusLibraryIfNeeded(String compliance) throws JavaModelException, IOException", "signatureAfterChange": " \tprotected String[] getJCL15PlusLibraryIfNeeded(String compliance) throws JavaModelException, IOException", "diff": ["-\t\tif (compliance.charAt(compliance.length()-1) >= '8' && (AbstractCompilerTest.getPossibleComplianceLevels() & AbstractCompilerTest.F_1_8) == 0) {", "+\t\tif (compliance.charAt(compliance.length()-1) >= '8' && (AbstractCompilerTest.getPossibleComplianceLevels() & AbstractCompilerTest.F_1_8) != 0) {", "-\t\tif (compliance.charAt(compliance.length()-1) >= '5' && (AbstractCompilerTest.getPossibleComplianceLevels() & AbstractCompilerTest.F_1_5) == 0) {", "+\t\tif (compliance.charAt(compliance.length()-1) >= '5' && (AbstractCompilerTest.getPossibleComplianceLevels() & AbstractCompilerTest.F_1_5) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfff93761d68f85e817573a4098aa83e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "5ecdad70bb6e2e1bbd5c5ec539acc885a5698c4e", "commitAfterChange": "7f8c41fdd4e487762406a2cb6aaa3aa1d260201c", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " \tprotected String[] get15LibraryIfNeeded(String compliance) throws JavaModelException, IOException", "signatureAfterChange": " \tprotected String[] getJCL15PlusLibraryIfNeeded(String compliance) throws JavaModelException, IOException", "diff": ["-\tprotected String[] get15LibraryIfNeeded(String compliance) throws JavaModelException, IOException {", "+\tprotected String[] getJCL15PlusLibraryIfNeeded(String compliance) throws JavaModelException, IOException {", "+\t\tif (compliance.charAt(compliance.length()-1) >= '8' && (AbstractCompilerTest.getPossibleComplianceLevels() & AbstractCompilerTest.F_1_8) == 0) {", "+\t\t\t// ensure that the JCL 18 lib is setup (i.e. that the jclMin18.jar is copied)", "+\t\t\tsetUpJCLClasspathVariables(\"1.8\");", "+\t\t\treturn new String[] {getExternalJCLPathString(\"1.8\")};", "+\t\t}"]}], "num": 54965}