{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b90731f853d7036a0be6b774d08f50f7", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eb363d955867dc85f56174923b1362a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "signatureAfterChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "diff": ["-\r", "+\tuseAssertAsAnIndentifier = false;\r", "-\t\tcase 'a' : //abstract\r", "-\t\t\tif (length == 8) {\r", "-\t\t\t\tif ((data[++index] == 'b')\r", "-\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t&& (data[++index] == 't')\r", "-\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t&& (data[++index] == 'a')\r", "-\t\t\t\t\t&& (data[++index] == 'c')\r", "-\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\treturn TokenNameabstract;\r", "-\t\t\t\t}\r", "+\t\tcase 'a' : \r", "+\t\t\tswitch(length) {\r", "+\t\t\t\tcase 8: //abstract\r", "+\t\t\t\t\tif ((data[++index] == 'b')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 'a')\r", "+\t\t\t\t\t\t&& (data[++index] == 'c')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\treturn TokenNameabstract;\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tcase 6: // assert\r", "+\t\t\t\t\tif ((data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 'e')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\tif (assertMode) {\r", "+\t\t\t\t\t\t\t\tcontainsAssertKeyword = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameassert;\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tuseAssertAsAnIndentifier = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameIdentifier;\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tdefault: \r", "+\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\treturn TokenNameIdentifier;\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "648a9d076e835d9e43a3335c077c5a4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "signatureAfterChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "diff": ["-\r", "+\tuseAssertAsAnIndentifier = false;\r", "-\t\tcase 'a' : //abstract\r", "-\t\t\tif (length == 8) {\r", "-\t\t\t\tif ((data[++index] == 'b')\r", "-\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t&& (data[++index] == 't')\r", "-\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t&& (data[++index] == 'a')\r", "-\t\t\t\t\t&& (data[++index] == 'c')\r", "-\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\treturn TokenNameabstract;\r", "-\t\t\t\t}\r", "+\t\tcase 'a' : \r", "+\t\t\tswitch(length) {\r", "+\t\t\t\tcase 8: //abstract\r", "+\t\t\t\t\tif ((data[++index] == 'b')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 'a')\r", "+\t\t\t\t\t\t&& (data[++index] == 'c')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\treturn TokenNameabstract;\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tcase 6: // assert\r", "+\t\t\t\t\tif ((data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 'e')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\tif (assertMode) {\r", "+\t\t\t\t\t\t\t\tcontainsAssertKeyword = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameassert;\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tuseAssertAsAnIndentifier = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameIdentifier;\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tdefault: \r", "+\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\treturn TokenNameIdentifier;\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734edf6d90c8d08289a58c0d4e1dab06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "signatureAfterChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "diff": ["-\r", "+\tuseAssertAsAnIndentifier = false;\r", "-\t\tcase 'a' : //abstract\r", "-\t\t\tif (length == 8) {\r", "-\t\t\t\tif ((data[++index] == 'b')\r", "-\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t&& (data[++index] == 't')\r", "-\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t&& (data[++index] == 'a')\r", "-\t\t\t\t\t&& (data[++index] == 'c')\r", "-\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\treturn TokenNameabstract;\r", "-\t\t\t\t}\r", "+\t\tcase 'a' : \r", "+\t\t\tswitch(length) {\r", "+\t\t\t\tcase 8: //abstract\r", "+\t\t\t\t\tif ((data[++index] == 'b')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 'a')\r", "+\t\t\t\t\t\t&& (data[++index] == 'c')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\treturn TokenNameabstract;\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tcase 6: // assert\r", "+\t\t\t\t\tif ((data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 'e')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\tif (assertMode) {\r", "+\t\t\t\t\t\t\t\tcontainsAssertKeyword = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameassert;\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tuseAssertAsAnIndentifier = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameIdentifier;\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tdefault: \r", "+\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\treturn TokenNameIdentifier;\r", "-\r"]}], "num": 27417}