{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7e850dbccb51188a62af669674dce97", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c1939eac9be6063a1c828409e5a00ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "d81e6de27221b2caec858658787abf55d91a925e", "commitAfterChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate Object reduceTypeEquality(TypeBinding object)", "signatureAfterChange": "  \tprivate Object reduceTypeEquality(TypeBinding object)", "diff": ["-\t\t\t\t\treturn new ConstraintTypeFormula(object, rightWC.bound, SAME, this.isSoft);", "+\t\t\t\t\treturn ConstraintTypeFormula.create(object, rightWC.bound, SAME, this.isSoft);", "-\t\t\t\t\treturn new ConstraintTypeFormula(leftWC.bound, object, SAME, this.isSoft);", "+\t\t\t\t\treturn ConstraintTypeFormula.create(leftWC.bound, object, SAME, this.isSoft);", "-\t\t\t\t\treturn new ConstraintTypeFormula(leftWC.bound, rightWC.bound, SAME, this.isSoft);", "+\t\t\t\t\treturn ConstraintTypeFormula.create(leftWC.bound, rightWC.bound, SAME, this.isSoft);", "-\t\t\t\t\t\tconstraints[i] = new ConstraintTypeFormula(leftParams[i], rightParams[i], SAME, this.isSoft);", "+\t\t\t\t\t\tconstraints[i] = ConstraintTypeFormula.create(leftParams[i], rightParams[i], SAME, this.isSoft);", "-\t\t\t\t\treturn new ConstraintTypeFormula(this.left.leafComponentType(), this.right.leafComponentType(), SAME, this.isSoft);", "+\t\t\t\t\treturn ConstraintTypeFormula.create(this.left.leafComponentType(), this.right.leafComponentType(), SAME, this.isSoft);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e84ac92c715b075d966290050097d16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "d81e6de27221b2caec858658787abf55d91a925e", "commitAfterChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tprivate ConstraintTypeFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": " \t \tprivate ConstraintTypeFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT)", "diff": ["-\t\t\treturn new ConstraintTypeFormula(s, boundT.right, boundT.relation, boundT.isSoft||boundS.isSoft);", "+\t\t\treturn ConstraintTypeFormula.create(s, boundT.right, boundT.relation, boundT.isSoft||boundS.isSoft);", "-\t\t\treturn new ConstraintTypeFormula(boundT.right, s, boundT.relation, boundT.isSoft||boundS.isSoft);", "+\t\t\treturn ConstraintTypeFormula.create(boundT.right, s, boundT.relation, boundT.isSoft||boundS.isSoft);", "-\t\t\t\treturn new ConstraintTypeFormula(s, boundT.right, boundT.relation, boundT.isSoft||boundS.isSoft);", "+\t\t\t\treturn ConstraintTypeFormula.create(s, boundT.right, boundT.relation, boundT.isSoft||boundS.isSoft);", "-\t\t\t\treturn new ConstraintTypeFormula(boundT.right, s, boundT.relation, boundT.isSoft||boundS.isSoft);\t\t\t", "+\t\t\t\treturn ConstraintTypeFormula.create(boundT.right, s, boundT.relation, boundT.isSoft||boundS.isSoft);\t\t\t", "-\t\t\treturn new ConstraintTypeFormula(left, right, boundT.relation, boundT.isSoft||boundS.isSoft);", "+\t\t\treturn ConstraintTypeFormula.create(left, right, boundT.relation, boundT.isSoft||boundS.isSoft);"]}], "num": 973}