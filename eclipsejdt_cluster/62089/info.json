{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13088ca2f301d003db7463180615171c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057a6bf86d06c49f9d8a4cc9f6992189", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "5c654dd7dd9bc98526f6c419699195d84517b84b", "commitAfterChange": "99aa173e65435610dfe4b542988d65ff8c2f55f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static String buildAllDirectoriesInto( \t\tString outputPath, \t\tString relativeFileName) \t\tthrows IOException", "signatureAfterChange": " \tpublic static String buildAllDirectoriesInto( \t\tString outputPath, \t\tString relativeFileName) \t\tthrows IOException", "diff": ["-\t\t\t\tSystem.out.println(Messages.bind(Messages.output_isFile, f.getAbsolutePath()));", "-\t\t\t\tthrow new IOException(Messages.output_isFileNotDirectory);", "+\t\t\t\tfinal String message = Messages.bind(Messages.output_isFile, f.getAbsolutePath());", "+\t\t\t\tSystem.out.println(message);", "+\t\t\t\tthrow new IOException(message);", "-\t\t\t\tSystem.out.println(Messages.bind(Messages.output_dirName, f.getAbsolutePath()));", "-\t\t\t\tthrow new IOException(Messages.output_notValidAll);", "+\t\t\t\tfinal String message = Messages.bind(Messages.output_notValidAll, f.getAbsolutePath());", "+\t\t\t\tSystem.out.println(message);", "+\t\t\t\tthrow new IOException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa38bcf1614ee3f33529d21178624c28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ErrorsTests.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void test0105() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void test0105() throws JavaModelException, CoreException, IOException", "diff": ["+\t\t\tProcess process = null;", "-\t\t\t\tRuntime.getRuntime().exec(\"chmod -R a+w \" + outputFolder.getAbsolutePath()).waitFor();", "+\t\t\t\tprocess = Runtime.getRuntime().exec(\"chmod -R a+w \" + outputFolder.getAbsolutePath());", "+\t\t\t\tprocess.waitFor();", "+\t\t\t} finally {", "+\t\t\t\tif (process != null) {", "+\t\t\t\t\tprocess.destroy();", "+\t\t\t\t}", "+\t\t\tProcess process = null;", "-\t\t\t\tRuntime.getRuntime().exec(\"chmod -R a+w \" + outputFolder.getAbsolutePath()).waitFor();", "+\t\t\t\tprocess = Runtime.getRuntime().exec(\"chmod -R a+w \" + outputFolder.getAbsolutePath());", "+\t\t\t\tprocess.waitFor();", "+\t\t\t} finally {", "+\t\t\t\tif (process != null) {", "+\t\t\t\t\tprocess.destroy();", "+\t\t\t\t}"]}], "num": 62089}