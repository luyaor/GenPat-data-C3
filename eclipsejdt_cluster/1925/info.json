{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08a0d2ef8cf62daa5074d39c44be319f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160b9b46c7712668e14fff4b0459890e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic void optimizedBooleanConstant(int leftId, int operator, int rightId)", "signatureAfterChange": " \t \tpublic void optimizedBooleanConstant(int leftId, int operator, int rightId)", "diff": ["-\t\t\t\tif ((cst = left.conditionalConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = left.optimizedBooleanConstant()) != NotAConstant) {", "-\t\t\t\t\t\tif ((cst = right.conditionalConstant()) != NotAConstant) {", "+\t\t\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {", "-\t\t\t\tif ((cst = right.conditionalConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {", "-\t\t\t\tif ((cst = left.conditionalConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = left.optimizedBooleanConstant()) != NotAConstant) {", "-\t\t\t\t\t\tif ((cst = right.conditionalConstant()) != NotAConstant) {", "+\t\t\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {", "-\t\t\t\tif ((cst = right.conditionalConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c20f7af622d9d0d7b06fe7614acc55d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic void optimizedBooleanConstant(int leftId, int operator, int rightId)", "signatureAfterChange": " \t \tpublic void optimizedBooleanConstant(int leftId, int operator, int rightId)", "diff": ["-\t\t\t\tif ((cst = left.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = left.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\t\tif ((cst = left.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = left.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\t\tif ((cst = right.optimizedBooleanConstant()) != Constant.NotAConstant) {"]}], "num": 1925}