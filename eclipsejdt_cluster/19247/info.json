{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1df9c31f2ef369c8cc5060e1d74937d4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4c8e2835034acb51ffe8e8ba78b81f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 229, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"Unsafe type operation: The cast from List to parameterized type List<X> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from List to List<X> will not check conformance of type arguments at runtime\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not convert expression of raw type List to type List<X>. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type List is converted to List<X>. References to generic type List<E> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not convert expression of raw type Iterator to type Iterator<X>. References to generic type Iterator<E> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type Iterator is converted to Iterator<X>. References to generic type Iterator<E> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: The cast from Collection to parameterized type List<X> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from Collection to List<X> will not check conformance of type arguments at runtime\\n\" + ", "-\t\t\t\"Unsafe type operation: The cast from List to parameterized type Collection<X> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from List to Collection<X> will not check conformance of type arguments at runtime\\n\" + ", "-\t\t\t\"Unnecessary cast to type Collection<?> for expression of type List\\n\" + ", "+\t\t\t\"Unnecessary cast from List to Collection<?>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e586c043f1ca01658c733c22c9cdb230", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a2cfaf33b626413a70eea1530c77695e81ac081f", "commitAfterChange": "89847a0c1a06590b3bbeee9528d77f57e2f8453c", "methodNumberBeforeChange": 1090, "methodNumberAfterChange": 1090, "signatureBeforeChange": " public void test1078()", "signatureAfterChange": " public void test1078()", "diff": ["-\t\t\"Type safety: The cast from Object to List<Object> is actually checking against the erased type List\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to List<Object>\\n\" + ", "-\t\t\"Type safety: The cast from Object to List<? extends Object> is actually checking against the erased type List\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to List<? extends Object>\\n\" + ", "-\t\t\"Type safety: The cast from Object to Map<Object,?> is actually checking against the erased type Map\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to Map<Object,?>\\n\" + ", "-\t\t\"Type safety: The cast from Object to Map<?,Object> is actually checking against the erased type Map\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to Map<?,Object>\\n\" + ", "-\t\t\"Type safety: The cast from Object to Map<Object,Object> is actually checking against the erased type Map\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to Map<Object,Object>\\n\" + ", "-\t\t\"Type safety: The cast from Object to Map<? extends Object,Object> is actually checking against the erased type Map\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to Map<? extends Object,Object>\\n\" + ", "-\t\t\"Type safety: The cast from Object to Map<? extends Object,? extends Object> is actually checking against the erased type Map\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to Map<? extends Object,? extends Object>\\n\" + "]}], "num": 19247}