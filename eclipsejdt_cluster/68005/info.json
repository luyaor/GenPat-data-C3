{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba5891fdc87a4733f56c24e81cbc4b21", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31f65c9a2917e552a1a367380af34356", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "06ec71655d120a9da6bc4412bfa1ea407c2dba83", "commitAfterChange": "d5b2ac5401873d9ac8c29459b4b232eae34c07db", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveType(Type type)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveType(Type type)", "diff": ["+\t\t\t\tif (type.isArrayType()) {", "+\t\t\t\t\tif (this.scope == null) {", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t\tArrayType arrayType = (ArrayType) type;", "+\t\t\t\t\tif (typeBinding.isArrayType()) {", "+\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding) typeBinding;", "+\t\t\t\t\t\treturn getTypeBinding(this.scope.createArrayType(arrayBinding.leafComponentType, arrayType.getDimensions()));", "+\t\t\t\t\t}", "+\t\t\t\t\treturn getTypeBinding(this.scope.createArrayType(binding, arrayType.getDimensions()));", "+\t\t\t\t}", "+\t\t\t\tif (typeBinding.isArrayType()) {", "+\t\t\t\t\ttypeBinding = ((ArrayBinding) typeBinding).leafComponentType;", "+\t\t\t\t}", "-\t\t\t\t\tif (this.scope == null) return null;", "+\t\t\t\t\tif (this.scope == null) {", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn getTypeBinding(this.scope.createArrayType(binding, arrayType.getDimensions()));", "-\t\t\t\t} else {", "-\t\t\t\t\tif (binding.isArrayType()) {", "-\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding) binding;", "-\t\t\t\t\t\treturn getTypeBinding(arrayBinding.leafComponentType);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn getTypeBinding(binding);", "-\t\t\t\t\t}", "+\t\t\t\t\treturn getTypeBinding(this.scope.createArrayType(binding, arrayType.getDimensions()));", "+\t\t\t\t} else if (binding.isArrayType()) {", "+\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding) binding;", "+\t\t\t\t\treturn getTypeBinding(arrayBinding.leafComponentType);", "+\t\t\t\treturn getTypeBinding(binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959f706ec4c0b786309be949a77e3a82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "fc25b1b826e7fad7f1da04ab9d452bc350b24919", "commitAfterChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\t// compare actual null-status against parameter annotations of the called method:", "+\t\t\tint nullStatus = this.arguments[i].nullStatus(flowInfo);", "+\t\t\tif (nullStatus != FlowInfo.NON_NULL ", "+\t\t\t\t\t&& this.binding.parameterNonNullness != null", "+\t\t\t\t\t&& this.binding.parameterNonNullness[i].booleanValue()) // if @NonNull is required", "+\t\t\t{", "+\t\t\t\tchar[][] annotationName = currentScope.environment().globalOptions.nonNullAnnotationName;", "+\t\t\t\tcurrentScope.problemReporter().possiblyNullToNonNullParameter(this.arguments[i], nullStatus, annotationName[annotationName.length-1]);", "+\t\t\t}"]}], "num": 68005}