{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9fde5b0e4d928e36dbaae9e54a131e2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95f07d5f3226ed783ac43732a45c4c4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "581702d71a138ac97fe73cfd2b06cc855f39a496", "commitAfterChange": "d47f7e16ee9a06ebea0c1bfa73440fda6af0235f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " protected void buildStructure(OpenableElementInfo info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException", "diff": ["-protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException {", "+protected void buildStructure(OpenableElementInfo info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException {", "-\t// remove existing (old) infos", "-\tremoveInfo();", "-\tHashMap newElements = new HashMap(11);", "-\tinfo.setIsStructureKnown(generateInfos(info, monitor, newElements, getResource()));", "+\tnewElements.put(this, info);", "+\t", "+\tboolean isStructureKnown = generateInfos(info, monitor, newElements, getResource());", "+\tinfo.setIsStructureKnown(isStructureKnown);", "+\t", "-\tfor (Iterator iter = newElements.keySet().iterator(); iter.hasNext();) {", "-\t\tIJavaElement key = (IJavaElement) iter.next();", "-\t\tObject value = newElements.get(key);", "-\t\tJavaModelManager.getJavaModelManager().putInfo(key, value);", "-\t}", "-\t\t", "-\t// add the info for this at the end, to ensure that a getInfo cannot reply null in case the LRU cache needs", "-\t// to be flushed. Might lead to performance issues.", "-\t// see PR 1G2K5S7: ITPJCORE:ALL - NPE when accessing source for a binary type", "-\tJavaModelManager.getJavaModelManager().putInfo(this, info);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c17d6281b209f532a9521d3c2a63c3e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "581702d71a138ac97fe73cfd2b06cc855f39a496", "commitAfterChange": "d47f7e16ee9a06ebea0c1bfa73440fda6af0235f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void readBinaryChildren()", "signatureAfterChange": " protected void readBinaryChildren(HashMap newElements, IBinaryType typeInfo)", "diff": ["-private void readBinaryChildren() {", "+protected void readBinaryChildren(HashMap newElements, IBinaryType typeInfo) {", "-\tHashMap newElements = new HashMap();", "-\tIBinaryType typeInfo = null;", "-\tJavaModelManager manager = (JavaModelManager) JavaModelManager.getJavaModelManager();", "-\t\ttype = (BinaryType) fClassFile.getType();", "-\t\ttypeInfo = (IBinaryType) manager.getInfo(type);", "+\t\ttype = (BinaryType) this.classFile.getType();", "+\t\tif (typeInfo == null) {", "+\t\t\ttypeInfo = (IBinaryType) newElements.get(type);", "+\t\t}", "-\tfor (Iterator iter = newElements.entrySet().iterator(); iter.hasNext();) {", "-\t\tMap.Entry entry = (Map.Entry) iter.next();", "-\t\tmanager.putInfo(", "-\t\t\t(IJavaElement) entry.getKey(), ", "-\t\t\tentry.getValue());", "-\t}", "-\tfBinaryChildren = new IJavaElement[children.size()];", "-\tchildren.toArray(fBinaryChildren);", "+\tthis.binaryChildren = new JavaElement[children.size()];", "+\tchildren.toArray(this.binaryChildren);"]}], "num": 4493}