{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efac0231a240bf84f3cc48a4079ff7b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "620f03f8ea4ec10ab3d74cd76396aabf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "701b9f3a2a6ad66de33a42c0675cad82bdb44626", "commitAfterChange": "ed32ce010cb6b771c8064ab8d69b715c1bc9347a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding, AccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding, AccessRestriction accessRestriction)", "diff": ["+\t\t", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=305259, build the compilation unit in its own sand box.", "+\t\tfinal long savedComplianceLevel = this.options.complianceLevel;", "+\t\tfinal long savedSourceLevel = this.options.sourceLevel;", "+\t\t", "+\t\ttry {", "+\t\t\tIJavaProject project = ((SourceTypeElementInfo) sourceTypes[0]).getHandle().getJavaProject();", "+\t\t\tthis.options.complianceLevel = CompilerOptions.versionToJdkLevel(project.getOption(JavaCore.COMPILER_COMPLIANCE, true));", "+\t\t\tthis.options.sourceLevel = CompilerOptions.versionToJdkLevel(project.getOption(JavaCore.COMPILER_SOURCE, true));", "-\t\t// need to hold onto this", "-\t\tCompilationUnitDeclaration unit =", "-\t\t\tSourceTypeConverter.buildCompilationUnit(", "-\t\t\t\tsourceTypes,//sourceTypes[0] is always toplevel here", "-\t\t\t\tSourceTypeConverter.FIELD_AND_METHOD // need field and methods", "-\t\t\t\t| SourceTypeConverter.MEMBER_TYPE // need member types", "-\t\t\t\t| SourceTypeConverter.FIELD_INITIALIZATION, // need field initialization", "-\t\t\t\tthis.lookupEnvironment.problemReporter,", "-\t\t\t\tresult);", "+\t\t\t// need to hold onto this", "+\t\t\tCompilationUnitDeclaration unit =", "+\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\t\t\t\tsourceTypes,//sourceTypes[0] is always toplevel here", "+\t\t\t\t\t\tSourceTypeConverter.FIELD_AND_METHOD // need field and methods", "+\t\t\t\t\t\t| SourceTypeConverter.MEMBER_TYPE // need member types", "+\t\t\t\t\t\t| SourceTypeConverter.FIELD_INITIALIZATION, // need field initialization", "+\t\t\t\t\t\tthis.lookupEnvironment.problemReporter,", "+\t\t\t\t\t\tresult);", "-\t\tif (unit != null) {", "-\t\t\tthis.lookupEnvironment.buildTypeBindings(unit, accessRestriction);", "-\t\t\tthis.lookupEnvironment.completeTypeBindings(unit);", "+\t\t\tif (unit != null) {", "+\t\t\t\tthis.lookupEnvironment.buildTypeBindings(unit, accessRestriction);", "+\t\t\t\tthis.lookupEnvironment.completeTypeBindings(unit);", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tthis.options.complianceLevel = savedComplianceLevel;", "+\t\t\tthis.options.sourceLevel = savedSourceLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4dacb6c03c155c27784e2c96fa88ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "fe024fd7797ce73b0a83969f685073606863b79e", "commitAfterChange": "124641ac651bbea2bd062a9605817d39b473bf0e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding, AccessRestriction accessRestriction)", "signatureAfterChange": "  \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding, AccessRestriction accessRestriction)", "diff": ["-\t\t// ensure to jump back to toplevel type for first one (could be a member)", "-\t\twhile (sourceTypes[0].getEnclosingType() != null) {", "-\t\t\tsourceTypes[0] = sourceTypes[0].getEnclosingType();", "-\t\t}", "-", "-\t\tCompilationResult result =", "-\t\t\tnew CompilationResult(sourceTypes[0].getFileName(), 1, 1, this.options.maxProblemsPerUnit);", "-\t\t", "-\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=305259, build the compilation unit in its own sand box.", "-\t\tfinal long savedComplianceLevel = this.options.complianceLevel;", "-\t\tfinal long savedSourceLevel = this.options.sourceLevel;", "-\t\t", "-\t\ttry {", "-\t\t\tIJavaProject project = ((SourceTypeElementInfo) sourceTypes[0]).getHandle().getJavaProject();", "-\t\t\tthis.options.complianceLevel = CompilerOptions.versionToJdkLevel(project.getOption(JavaCore.COMPILER_COMPLIANCE, true));", "-\t\t\tthis.options.sourceLevel = CompilerOptions.versionToJdkLevel(project.getOption(JavaCore.COMPILER_SOURCE, true));", "-", "-\t\t\t// need to hold onto this", "-\t\t\tCompilationUnitDeclaration unit =", "-\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "-\t\t\t\t\t\tsourceTypes,//sourceTypes[0] is always toplevel here", "-\t\t\t\t\t\tSourceTypeConverter.FIELD_AND_METHOD // need field and methods", "-\t\t\t\t\t\t| SourceTypeConverter.MEMBER_TYPE // need member types", "-\t\t\t\t\t\t| SourceTypeConverter.FIELD_INITIALIZATION // need field initialization", "-\t\t\t\t\t\t| SourceTypeConverter.LOCAL_TYPE, // need local type", "-\t\t\t\t\t\tthis.lookupEnvironment.problemReporter,", "-\t\t\t\t\t\tresult);", "-", "-\t\t\tif (unit != null) {", "-\t\t\t\tthis.lookupEnvironment.buildTypeBindings(unit, accessRestriction);", "-\t\t\t\tthis.lookupEnvironment.completeTypeBindings(unit);", "-\t\t\t}", "-\t\t} finally {", "-\t\t\tthis.options.complianceLevel = savedComplianceLevel;", "-\t\t\tthis.options.sourceLevel = savedSourceLevel;", "-\t\t}", "+\t\tISourceType sourceType = sourceTypes[0];", "+\t\twhile (sourceType.getEnclosingType() != null)", "+\t\t\tsourceType = sourceType.getEnclosingType();", "+\t\tSourceTypeElementInfo elementInfo = (SourceTypeElementInfo) sourceType;", "+\t\tIType type = elementInfo.getHandle();", "+\t\tICompilationUnit sourceUnit = (ICompilationUnit) type.getCompilationUnit();", "+\t\taccept(sourceUnit, accessRestriction);\t\t"]}], "num": 52201}