{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec71f341972792ff370019a8fecfcd29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4be3f9c70dcad7f0f6223942b4e78618", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingExpressionsTest.java", "commitBeforeChange": "933d7ac89005a6db0ba2e9aa90dfe242d592e5e5", "commitAfterChange": "42a9a4cb841336faccb205e658313c3d0fc8eea9", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testBug404251() throws Exception", "signatureAfterChange": " \tpublic void testBug404251() throws Exception", "diff": ["-\t\t// FIXME: currently broken, see https://bugs.eclipse.org/405038 :", "-//\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "-//\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "-//\t\t", "-//\t\tpreview= evaluateRewrite(cu, rewrite);", "-//", "-//\t\tbuf= new StringBuffer();", "-//\t\tbuf.append(\"package test1;\\n\");", "-//\t\tbuf.append(\"public class E {\\n\");", "-//\t\tbuf.append(\"    public void foo(int a, int b, int c) {\\n\");", "-//\t\tbuf.append(\"       total = a+b+ ++c;\\n\");", "-//\t\tbuf.append(\"    }\\n\");", "-//\t\tbuf.append(\"}\\n\");", "-//\t\tassertEqualString(preview, buf.toString());", "+\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "+\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "+\t\t", "+\t\tpreview= evaluateRewrite(cu, rewrite);", "+", "+\t\tbuf= new StringBuffer();", "+\t\tbuf.append(\"package test1;\\n\");", "+\t\tbuf.append(\"public class E {\\n\");", "+\t\tbuf.append(\"    public void foo(int a, int b, int c) {\\n\");", "+\t\tbuf.append(\"       total = a+b+ ++c;\\n\");", "+\t\tbuf.append(\"    }\\n\");", "+\t\tbuf.append(\"}\\n\");", "+\t\tassertEqualString(preview, buf.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1d53668d695c102ebda658b56d14c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingExpressionsTest.java", "commitBeforeChange": "b6effce92f2016bd6463646b18f417214714aa52", "commitAfterChange": "90e0c31f61fe8011c719b8c9263ccba647bab244", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testBug404251() throws Exception", "signatureAfterChange": " \tpublic void testBug404251() throws Exception", "diff": ["-\t\t// FIXME: currently broken, see https://bugs.eclipse.org/405038 :", "-//\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "-//\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "-//\t\t", "-//\t\tpreview= evaluateRewrite(cu, rewrite);", "-//", "-//\t\tbuf= new StringBuffer();", "-//\t\tbuf.append(\"package test1;\\n\");", "-//\t\tbuf.append(\"public class E {\\n\");", "-//\t\tbuf.append(\"    public void foo(int a, int b, int c) {\\n\");", "-//\t\tbuf.append(\"       total = a+b+ ++c;\\n\");", "-//\t\tbuf.append(\"    }\\n\");", "-//\t\tbuf.append(\"}\\n\");", "-//\t\tassertEqualString(preview, buf.toString());", "+\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "+\t\tthis.project1.setOption(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_BINARY_OPERATOR, JavaCore.DO_NOT_INSERT);", "+\t\t", "+\t\tpreview= evaluateRewrite(cu, rewrite);", "+", "+\t\tbuf= new StringBuffer();", "+\t\tbuf.append(\"package test1;\\n\");", "+\t\tbuf.append(\"public class E {\\n\");", "+\t\tbuf.append(\"    public void foo(int a, int b, int c) {\\n\");", "+\t\tbuf.append(\"       total = a+b+ ++c;\\n\");", "+\t\tbuf.append(\"    }\\n\");", "+\t\tbuf.append(\"}\\n\");", "+\t\tassertEqualString(preview, buf.toString());"]}], "num": 35948}