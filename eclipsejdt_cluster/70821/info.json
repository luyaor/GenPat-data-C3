{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57abdb92a6e8576f5033b110df1ab9d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6b2728dc9caf95d4b9f46fe8bb11b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 558, "methodNumberAfterChange": 558, "signatureBeforeChange": " public void testCompletionStaticMethodDeclaration2() throws JavaModelException", "signatureAfterChange": " public void testCompletionStaticMethodDeclaration2() throws JavaModelException", "diff": ["-\tthis.wc = getWorkingCopy(", "-            \"/Completion/src/CompletionStaticMethodDeclaration2.java\",", "-            \"public class CompletionStaticMethodDeclaration2 {\\n\" +", "-            \"\tclass Inner1 extends TypeWithAMethodAndAStaticMethod {\\n\" +", "-            \"\t\tfoo\\n\" +", "-            \"\t}\\n\" +", "-            \"}\");", "-    ", "-    ", "-    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-    String str = this.wc.getSource();", "-    String completeBehind = \"foo\";", "-    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-", "-\tassertResults(", "-\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionStaticMethodDeclaration2$Inner1;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"foo0[METHOD_DECLARATION]{public void foo0(), LTypeWithAMethodAndAStaticMethod;, ()V, foo0, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED) + \"}\",", "-\t\t\trequestor.getResults());", "+\tICompilationUnit aType = null;", "+\ttry {", "+\t\taType = getWorkingCopy(", "+\t            \"/Completion/src/TypeWithAMethodAndAStaticMethod .java\",", "+\t            \"public class TypeWithAMethodAndAStaticMethod {\\n\"+", "+\t            \"\tpublic static void foo(){}\\n\"+", "+\t            \"\tpublic void foo0(){}\\n\"+", "+\t            \"}\");", "+\t\t\t", "+\t\tthis.wc = getWorkingCopy(", "+\t            \"/Completion/src/CompletionStaticMethodDeclaration2.java\",", "+\t            \"public class CompletionStaticMethodDeclaration2 {\\n\" +", "+\t            \"\tclass Inner1 extends TypeWithAMethodAndAStaticMethod {\\n\" +", "+\t            \"\t\tfoo\\n\" +", "+\t            \"\t}\\n\" +", "+\t            \"}\");", "+\t    ", "+\t    ", "+\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t    String str = this.wc.getSource();", "+\t    String completeBehind = \"foo\";", "+\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t\tassertResults(", "+\t\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionStaticMethodDeclaration2$Inner1;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"foo0[METHOD_DECLARATION]{public void foo0(), LTypeWithAMethodAndAStaticMethod;, ()V, foo0, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tif(aType != null) {", "+\t\t\taType.discardWorkingCopy();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e446e875d920dd808fa9b9ae43f5fff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 559, "methodNumberAfterChange": 559, "signatureBeforeChange": " public void testCompletionStaticMethodDeclaration3() throws JavaModelException", "signatureAfterChange": " public void testCompletionStaticMethodDeclaration3() throws JavaModelException", "diff": ["-\tthis.wc = getWorkingCopy(", "-            \"/Completion/src/CompletionStaticMethodDeclaration3.java\",", "-            \"public class CompletionStaticMethodDeclaration3 {\\n\" +", "-            \"\tstatic class Inner1 extends TypeWithAMethodAndAStaticMethod {\\n\" +", "-            \"\t\tfoo\\n\" +", "-            \"\t}\\n\" +", "-            \"}\");", "-    ", "-    ", "-    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-    String str = this.wc.getSource();", "-    String completeBehind = \"foo\";", "-    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-", "-\tassertResults(", "-\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionStaticMethodDeclaration3$Inner1;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"foo0[METHOD_DECLARATION]{public void foo0(), LTypeWithAMethodAndAStaticMethod;, ()V, foo0, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"foo[METHOD_DECLARATION]{public static void foo(), LTypeWithAMethodAndAStaticMethod;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\",", "-\t\t\trequestor.getResults());", "+\tICompilationUnit aType = null;", "+\ttry {", "+\t\taType = getWorkingCopy(", "+\t            \"/Completion/src/TypeWithAMethodAndAStaticMethod .java\",", "+\t            \"public class TypeWithAMethodAndAStaticMethod {\\n\"+", "+\t            \"\tpublic static void foo(){}\\n\"+", "+\t            \"\tpublic void foo0(){}\\n\"+", "+\t            \"}\");", "+\t\t\t", "+\t\tthis.wc = getWorkingCopy(", "+\t            \"/Completion/src/CompletionStaticMethodDeclaration3.java\",", "+\t            \"public class CompletionStaticMethodDeclaration3 {\\n\" +", "+\t            \"\tstatic class Inner1 extends TypeWithAMethodAndAStaticMethod {\\n\" +", "+\t            \"\t\tfoo\\n\" +", "+\t            \"\t}\\n\" +", "+\t            \"}\");", "+\t    ", "+\t    ", "+\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t    String str = this.wc.getSource();", "+\t    String completeBehind = \"foo\";", "+\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t\tassertResults(", "+\t\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionStaticMethodDeclaration3$Inner1;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"foo0[METHOD_DECLARATION]{public void foo0(), LTypeWithAMethodAndAStaticMethod;, ()V, foo0, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tif(aType != null) {", "+\t\t\taType.discardWorkingCopy();", "+\t\t}", "+\t}"]}], "num": 70821}