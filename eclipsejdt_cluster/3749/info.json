{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e935eb4747de66208a7118d58242060b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b55d9bfdf6c2aaf37e26d1c42468a38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "a56d2afc8ddb8dcda8f74b90d2b39898295865d2", "commitAfterChange": "fc69abbb26faa5011e1c3f5f4862367455008505", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void testClasspathCreateLocalJarLibraryEntry() throws CoreException", "signatureAfterChange": " public void testClasspathCreateLocalJarLibraryEntry() throws CoreException", "diff": ["-\tIPackageFragmentRoot root = getPackageFragmentRoot(\"P\", \"\");", "-\tIPackageFragmentRoot newRoot= proj.getPackageFragmentRoot(getExternalJCLPathString());", "-\t\tassertTrue(", "-\t\t\t\"should be one delta with 2 grand-children - removed & added\",", "-\t\t\tthis.deltaListener.deltas.length == 1 &&", "-\t\t\tthis.deltaListener.deltas[0].getAffectedChildren().length == 1 &&", "-\t\t\tthis.deltaListener.deltas[0].getAffectedChildren()[0].getAffectedChildren().length == 2);", "-\t\tIJavaElementDelta d= null;", "-\t\tassertTrue(\"root should be removed from classpath\",(d= getDeltaFor(root, true)) != null &&", "-\t\t\t\t(d.getFlags() & IJavaElementDelta.F_REMOVED_FROM_CLASSPATH) > 0);", "-", "-", "-\t\tassertTrue(\"root should be added to classpath\", (d= getDeltaFor(newRoot, true)) != null &&", "-\t\t\t\t(d.getFlags() & IJavaElementDelta.F_ADDED_TO_CLASSPATH) > 0);", "+\t\tassertDeltas(", "+\t\t\t\"Unexpected delta\", ", "+\t\t\t\"P[*]: {CHILDREN | CONTENT | RAW CLASSPATH CHANGED | RESOLVED CLASSPATH CHANGED}\\n\" + ", "+\t\t\t\"\t<project root>[*]: {REMOVED FROM CLASSPATH}\\n\" + ", "+\t\t\t\"\t\"+ getExternalJCLPathString() + \"[*]: {ADDED TO CLASSPATH}\\n\" + ", "+\t\t\t\"\tResourceDelta(/P/.classpath)[*]\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37aa071a72a7821821388adad065203f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "f6b98e81e084c7fc5756b6873d78549cc1ce9d4c", "commitAfterChange": "334acc099e45b6ce9ec3bc9c1d31c4c1fb234636", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public String getTypeQualifiedName(char enclosingTypeSeparator)", "signatureAfterChange": " public String getTypeQualifiedName(char enclosingTypeSeparator)", "diff": ["-\tswitch (this.parent.getElementType()) {", "-\t\tcase IJavaElement.COMPILATION_UNIT:", "-\t\t\treturn this.name;", "-\t\tcase IJavaElement.TYPE:", "-\t\t\tString simpleName = this.name.length() == 0 ? Integer.toString(this.occurrenceCount) : this.name;", "-\t\t\treturn ((IType) this.parent).getTypeQualifiedName(enclosingTypeSeparator) + enclosingTypeSeparator + simpleName;", "-\t\tcase IJavaElement.FIELD:", "-\t\tcase IJavaElement.INITIALIZER:", "-\t\tcase IJavaElement.METHOD:", "-\t\t\tsimpleName = this.name.length() == 0 ? Integer.toString(this.occurrenceCount) : this.name;", "-\t\t\treturn ", "-\t\t\t\t((IMember) this.parent).getDeclaringType().getTypeQualifiedName(enclosingTypeSeparator) ", "-\t\t\t\t+ enclosingTypeSeparator + simpleName;", "+\ttry {", "+\t\treturn getTypeQualifiedName(enclosingTypeSeparator, false/*don't show parameters*/);", "+\t} catch (JavaModelException e) {", "+\t\t// exception thrown only when showing parameters", "+\t\treturn null;", "-\treturn null;"]}], "num": 3749}