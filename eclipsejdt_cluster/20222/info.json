{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba9c0dc245a2bc951d47fb7a5a91eac4", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b85e6dc99059b79122107a3a19c72ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "c6d4125101bf5167c8111f17bf85f3fddd64ca03", "commitAfterChange": "42809a61ef9e5b72c9cffca62cbb33391fa05b96", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["+}", "+protected void toStringName(StringBuffer buffer, int flags) {", "-\tString[] parameters = this.getParameterTypes();", "+\tString[] parameters = getParameterTypes();", "+\t\tboolean isVarargs = Flags.isVarargs(flags);", "-\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t} else if (isVarargs) {", "+\t\t\t\t// remove array from signature", "+\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f8bf4519f33ed05bf9b0b67463a6ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "46f0bf33fc17707f84a4651387bf3026d6bae545", "commitAfterChange": "4d6296b6ebb5111ab8825f79519da9de471cce30", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void append(IMethod method) throws JavaModelException", "signatureAfterChange": " \tprivate void append(IMethod method) throws JavaModelException", "diff": ["-\t\tString[] parameters = method.getParameterTypes();\t\t\t", "-\t\tfor (int i = 0; i < parameters.length; i++) {", "-\t\t\tresults.append(Signature.toString(parameters[i]));", "-\t\t\tif (i < parameters.length-1) {", "-\t\t\t\tresults.append(\", \");", "+\t\tString[] parameters = method.getParameterTypes();", "+\t\tboolean varargs = Flags.isVarargs(method.getFlags());", "+\t\tfor (int i = 0, length=parameters.length; i<length; i++) {", "+\t\t\tif (i < length - 1) {", "+\t\t\t\tresults.append(Signature.toString(parameters[i]));", "+\t\t\t\tresults.append(\", \"); //$NON-NLS-1$", "+\t\t\t} else if (varargs) {", "+\t\t\t\t// remove array from signature", "+\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\tresults.append(Signature.toString(parameter));", "+\t\t\t\tresults.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tresults.append(Signature.toString(parameters[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de379096b48ce4818a5734fb3b8bf207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "c6d4125101bf5167c8111f17bf85f3fddd64ca03", "commitAfterChange": "42809a61ef9e5b72c9cffca62cbb33391fa05b96", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["+}", "+protected void toStringName(StringBuffer buffer, int flags) {", "-\tString[] parameters = this.getParameterTypes();", "+\tString[] parameters = getParameterTypes();", "+\t\tboolean isVarargs = Flags.isVarargs(flags);", "-\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t} else if (isVarargs) {", "+\t\t\t\t// remove array from signature", "+\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));"]}], "num": 20222}