{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5498619bbb7091bb3fbd82df6c29eb0e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "181f26af82b4ee24c6044ac2af703b82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "commitAfterChange": "8715eeccf865a33f86687c2ed1edfa7db42faeec", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate synchronized boolean checkIntegrity() throws IllegalStateException", "signatureAfterChange": " \tprivate synchronized boolean checkIntegrity() throws IllegalStateException", "diff": ["-\t\tList<IFile> extraFiles = new ArrayList<IFile>(); ", "+\t\tList<IFile> extraFiles = new ArrayList<>();", "-\t\tList<IFile> extraClearDuringReconcileFiles = new ArrayList<IFile>();", "+\t\tList<IFile> extraClearDuringReconcileFiles = new ArrayList<>();", "-\t\tList<IFile> extraHiddenTypes = new ArrayList<IFile>();", "+\t\tList<IFile> extraHiddenTypes = new ArrayList<>();", "-\t\tMap<IFile, IFile> reconcileOverlaps = new HashMap<IFile, IFile>();", "+\t\tMap<IFile, IFile> reconcileOverlaps = new HashMap<>();", "-\t\tMap<IFile, IFile> extraNonDeps = new HashMap<IFile, IFile>();", "+\t\tMap<IFile, IFile> extraNonDeps = new HashMap<>();", "-\t\tList<IFile> nullHiddenTypes = new ArrayList<IFile>();", "+\t\tList<IFile> nullHiddenTypes = new ArrayList<>();", "-\t\tList<IFile> nullReconcileTypes = new ArrayList<IFile>();", "+\t\tList<IFile> nullReconcileTypes = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93deb0b4538ee73636b74bbf94733015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "4e130c9d5bb20bb7b53d05cfcbc0214ae1f6f2b8", "commitAfterChange": "e18e2062279631b50cbdb527a42eeb74dde9b023", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Override \tpublic List<? extends Element> getAllMembers(TypeElement type)", "signatureAfterChange": " \t@Override \tpublic List<? extends Element> getAllMembers(TypeElement type)", "diff": ["-\t\tMap<String, ReferenceBinding> types = new HashMap<String, ReferenceBinding>();", "+\t\tMap<String, ReferenceBinding> types = new HashMap<>();", "-\t\tList<FieldBinding> fields = new ArrayList<FieldBinding>();", "+\t\tList<FieldBinding> fields = new ArrayList<>();", "-\t\tMap<String, Set<MethodBinding>> methods = new HashMap<String, Set<MethodBinding>>();", "-\t\tSet<ReferenceBinding> superinterfaces = new LinkedHashSet<ReferenceBinding>();", "+\t\tMap<String, Set<MethodBinding>> methods = new HashMap<>();", "+\t\tSet<ReferenceBinding> superinterfaces = new LinkedHashSet<>();", "-\t\t\tSet<ReferenceBinding> newfound = new LinkedHashSet<ReferenceBinding>();", "+\t\t\tSet<ReferenceBinding> newfound = new LinkedHashSet<>();", "-\t\tList<Element> allMembers = new ArrayList<Element>();", "+\t\tList<Element> allMembers = new ArrayList<>();"]}], "num": 21969}