{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18ead35967629c429388a3b9b4dbc5d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b299448004330d02a88c0496f9d40d0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c16162b1194f3110eda140f5ccdd35c2ba36455d", "commitAfterChange": "8d1ff9b80d2587df4aa2d0a1ee1f5a75472a5feb", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "\r \tprotected void setRawClasspath0(IClasspathEntry[] rawEntries)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tprotected void setRawClasspath0(IClasspathEntry[] rawEntries)\r \t\tthrows JavaModelException", "diff": ["-\t\t\t\r", "-\t\t\t// only trigger indexing of immediate libraries\r", "-\t\t\tIndexManager indexManager =\r", "-\t\t\t\t((JavaModelManager) JavaModelManager.getJavaModelManager()).getIndexManager();\r", "-\t\t\tIPackageFragmentRoot[] immediateRoots = getPackageFragmentRoots();\t\t\t\t\t\t\r", "-\t\t\tfor(int i = 0, length = immediateRoots.length; i < length; i++){\r", "-\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot)immediateRoots[i];\r", "-\t\t\t\tif (root.getKind() == IPackageFragmentRoot.K_BINARY) {\r", "-\t\t\t\t\tif (root.isArchive()) {\r", "-\t\t\t\t\t\tindexManager.indexJarFile(root.getPath(), getUnderlyingResource().getName());\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\tindexManager.indexBinaryFolder(\r", "-\t\t\t\t\t\t\t(IFolder) root.getUnderlyingResource(),\r", "-\t\t\t\t\t\t\t(IProject) this.getUnderlyingResource());\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd29d48fa1d83fc5ff5c6c24fb7a3e23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "15354ef30ff1d65c0145e0a7585cb94774313c51", "commitAfterChange": "f49cf7529ae8b80cdf3f120143dad37a4f24e498", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprotected void assertBindingsEqual(String expected, IBinding[] actualBindings)", "signatureAfterChange": " \t \tprotected void assertBindingsEqual(String expected, IBinding[] actualBindings)", "diff": ["+\t\tassertBindingsEqual(\"Unexpected bindings\", expected, actualBindings);", "+\t}", "-\t\tassertEquals(", "-\t\t\t\"Unexpected bindings\",", "-\t\t\texpected,", "-\t\t\tactual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faeb2b6dbd6d722cd43275b4d34ca3ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "927e71dd0053e44570431bb963abcb6762c4f72e", "commitAfterChange": "b85551d73960d4ac924c265aea72986d6bf6d1fa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void assertMarkers(String message, String expectedMarkers, IJavaProject project) throws CoreException", "signatureAfterChange": " protected void assertMarkers(String message, String expectedMarkers, IJavaProject project) throws CoreException", "diff": ["-\tStringBuffer buffer = new StringBuffer();", "-\tfor (int i = 0, length = markers.length; i < length; i++) {", "-\t\tIMarker marker = markers[i];", "-\t\tbuffer.append(marker.getAttribute(IMarker.MESSAGE));", "-\t\tif (i != length-1) {", "-\t\t\tbuffer.append(\"\\n\");", "-\t\t}", "-\t}", "-\tString actual = buffer.toString();", "-\tif (!expectedMarkers.equals(actual)) {", "-\t \tSystem.out.println(Util.displayString(actual, 2));", "-\t}", "-\tassertEquals(message, expectedMarkers, actual);", "+\tassertMarkers(message, expectedMarkers, markers);"]}], "num": 63192}