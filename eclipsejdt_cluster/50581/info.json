{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e12b5a997316a16ec0f38d62e7ce8809", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "109b150c1ece081aa052217e1d77f2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "signatureAfterChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "diff": ["-\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "-\t\t\t\t(method.isPrivate() || method.declaringClass.isLocalType()) && !scope.isDefinedInMethod(method)) {", "-\t\t\t// ignore cases where method is used from within inside itself (e.g. direct recursions)", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 && method.isOrEnclosedByPrivateType() && !scope.isDefinedInMethod(method)) {", "+\t\t\t// ignore cases where method is used from inside itself (e.g. direct recursions)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeed052c8a0ce5aac2f4b189074dde6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "8c257f407da3168f528da10142cc5a6786c803d6", "commitAfterChange": "1505d6b4655f1428d6059c29c9d919c21116a2ec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "signatureAfterChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "diff": ["-", "-\t\tif (!isStrictlyAssigned && (field.isPrivate() || (field.declaringClass != null && field.declaringClass.isLocalType())) && !scope.isDefinedInField(field)) {", "+\t\t// ignore references insing Javadoc comments", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "+\t\t\t\t!isStrictlyAssigned && ", "+\t\t\t\t(field.isPrivate() || (field.declaringClass != null && field.declaringClass.isLocalType())) && !scope.isDefinedInField(field)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2aa595dde068f535a6ce070f4280f79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 &&", "-\t\t\t\t(refType.isPrivate() || refType.isLocalType()) && !scope.isDefinedInType(refType)) {", "-\t\t\t// ignore cases where type is used from within inside itself", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 && refType.isOrEnclosedByPrivateType() && !scope.isDefinedInType(refType)) {", "+\t\t\t// ignore cases where type is used from inside itself"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ed1e4a1a2d28903f2f28ce7af9708b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "signatureAfterChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "diff": ["-\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "-\t\t\t\t!isStrictlyAssigned &&", "-\t\t\t\t(field.isPrivate() || (field.declaringClass != null && field.declaringClass.isLocalType())) && !scope.isDefinedInField(field)) {", "-\t\t\t// ignore cases where field is used from within inside itself", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 && !isStrictlyAssigned && field.isOrEnclosedByPrivateType() && !scope.isDefinedInField(field)) {", "+\t\t\t// ignore cases where field is used from inside itself"]}], "num": 50581}