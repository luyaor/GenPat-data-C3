{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3001e3300d021dd6dc40e96747cd4453", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9daedf0404c12ec8d26e8c4d1cfa2547", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "signatureAfterChange": "  \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "diff": ["+\t\t\t\tif((this.uninterestingBindingsFilter & SUBTYPE) != 0) {", "+\t\t\t\t\tif (binding instanceof TypeBinding &&", "+\t\t\t\t\t\t\tthis.uninterestingBindings[i] instanceof TypeBinding &&", "+\t\t\t\t\t\t\t((TypeBinding)binding).isCompatibleWith((TypeBinding)this.uninterestingBindings[i])) {", "+\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif ((this.uninterestingBindingsFilter & SUPERTYPE) != 0) {", "+\t\t\t\t\tif (binding instanceof TypeBinding &&", "+\t\t\t\t\t\t\tthis.uninterestingBindings[i] instanceof TypeBinding &&", "+\t\t\t\t\t\t\t((TypeBinding)this.uninterestingBindings[i]).isCompatibleWith((TypeBinding)binding)) {", "+\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn R_INTERESTING;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db246afc8e7f87584fe7166a90801978", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "8bffc680730baeb75a0764c02d5d9479eee4502e", "commitAfterChange": "a29a64421d33da260a7d362b9f95ba50806929de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\t\tinferenceContext.leavePolyInvocation(prevInvocation);", "+\t\t\t\t\tinferenceContext.resumeSuspendedInference(prevInvocation);", "-\t\t\t\tScope scope = inferenceContext.scope;", "-\t\t\t\tTypeBinding t = this.right;", "-\t\t\t\tif (!t.isFunctionalInterface(scope))", "+\t\t\t\tBlockScope scope = lambda.enclosingScope;", "+\t\t\t\tif (!this.right.isFunctionalInterface(scope))", "+\t\t\t\t\treturn FALSE;", "+\t\t\t\t", "+\t\t\t\tReferenceBinding t = (ReferenceBinding) this.right;", "+\t\t\t\tParameterizedTypeBinding withWildCards = InferenceContext18.parameterizedWithWildcard(t);", "+\t\t\t\tif (withWildCards != null) {", "+\t\t\t\t\tt = findGroundTargetType(inferenceContext, scope, lambda, withWildCards);", "+\t\t\t\t}", "+\t\t\t\tif (t == null)", "+\t}"]}], "num": 16437}