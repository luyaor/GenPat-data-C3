{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3d200b347a13bb44c8bf79f0427a6b0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28bbd5946fb635acf6d467f4f3e1b836", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "signatureAfterChange": "      \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operators) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operator) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fdd0772eedaa320af8ff273006f13f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\tif (!(assignment.expression instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operators) {", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\tif (!(assignment.expression instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operator) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc28e267bf50a148bdaa5ba866b4747f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operators) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operator) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0542615743e5bc803ea345d56e2e22a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\t\t\tthis.preferences.multiple_fields_alignment,", "+\t\t\t\tthis.preferences.alignment_for_multiple_fields,", "-\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\t\t\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operators) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t\t\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operator) {"]}], "num": 61516}