{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "950560159c824d117ec0e08c1ec090c7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6640bf3a9de8ae240dd2434302893cbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/APIDocumentationTests.java", "commitBeforeChange": "e6318e91d47d996a26fddc5c2b231b9a9ef774b2", "commitAfterChange": "f2edf9ba686cfe4ee8301f7995d717a549acb9e1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test001() throws CoreException, IllegalArgumentException, IllegalAccessException, IOException", "signatureAfterChange": " public void test001() throws CoreException, IllegalArgumentException, IllegalAccessException, IOException", "diff": ["-System.err.println(\"JavaCore.java = \"+javaCoreSourceFile+\" exists?\"+javaCoreSourceFile.exists());", "+System.err.println(\"JavaCore.java = \"+javaCoreSourceFile+\" exists? \"+javaCoreSourceFile.exists());", "+\tchar[] sourceChars = null;", "+\t\tsourceChars = org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(javaCoreSourceFile, null);", "+\t} else {", "+\t\t// experimental Q&D tweak: try to find the source bundle by manipulating the file name of the regular bundle's location:", "+\t\t@SuppressWarnings(\"deprecation\")Bundle[] sourceBundles = org.eclipse.jdt.core.tests.Activator.getPackageAdmin().getBundles(\"org.eclipse.jdt.core\", null);", "+\t\tif (sourceBundles != null && sourceBundles.length > 0) {", "+\t\t\tbundle = sourceBundles[0];", "+System.err.println(\"Source Bundle = \"+bundle);", "+\t\t\tstringPath = bundle.getLocation();", "+System.err.println(\"Bundle Location = \"+stringPath);", "+\t\t\tif (stringPath.startsWith(\"reference:file:\"))", "+\t\t\t\tstringPath = stringPath.substring(\"reference:file:\".length());", "+\t\t\tstringPath = stringPath.replace(\"org.eclipse.jdt.core\", \"org.eclipse.jdt.core.source\");", "+System.err.println(\"Source Bundle Location = \"+stringPath);", "+\t\t\tif (stringPath.endsWith(\".jar\")) {", "+\t\t\t\tFile jarFile = new File(stringPath);", "+System.err.println(\"Jar File = \"+jarFile+\" exists? \"+jarFile.exists());", "+\t\t\t\ttry (ZipFile zipFile = new ZipFile(jarFile)) {", "+\t\t\t\t\tZipEntry entry = zipFile.getEntry(\"org/eclipse/jdt/core/JavaCore.java\");", "+System.err.println(\"Zip Entry = \"+entry);", "+System.err.println(\"Zip Entry Size = \"+entry.getSize());", "+\t\t\t\t\ttry (InputStream inputStream = zipFile.getInputStream(entry)) {", "+\t\t\t\t\t\tsourceChars = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(inputStream, (int)entry.getSize(), null);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (sourceChars != null) {", "-\t\tparser.setSource(org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(javaCoreSourceFile, null));", "+\t\tparser.setSource(sourceChars);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5abdc60d34863c386f0796a52c2e8a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "1518d3ade03d9d9dfb08bcae5ab3261eea2b095b", "commitAfterChange": "4f8ce9c44083e58564232003d59f7f12a74c51b9", "methodNumberBeforeChange": 613, "methodNumberAfterChange": 613, "signatureBeforeChange": " public void testBug286379c() throws CoreException", "signatureAfterChange": " public void testBug286379c() throws CoreException", "diff": ["+\tJavaModelManager.DEBUG_302850 = true;", "+\tSystem.out.println(\"\t- Default Options at test start:\");", "+\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getDefaultOptions()).toString(), 1));", "+\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "+\t\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "+\t\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "+\t\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "+\t\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "-\t\tSystem.out.println(\"================================================================================\");", "+\t\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "+\t\tSystem.out.println(\"\t- Default Options at test end:\");", "+\t\tSystem.out.println(Util.indentString(new CompilerOptions(JavaCore.getDefaultOptions()).toString(), 2));"]}], "num": 28816}