{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caa1fe515524a020144e2be40d0f9f43", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20ae9cf475965af4070944f61d1bb0f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "a889669f3b6092488da28cece9e17491e979e98b", "commitAfterChange": "169461b0108d10746346c25bcb496c53ad944705", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tIClasspathEntry[] rawClasspath = affectedProject.getRawClasspath();\r", "-\t\t\tfor (int j = 0, cpLength = rawClasspath.length; j <cpLength; j++) {", "-\t\t\t\tIClasspathEntry entry = rawClasspath[j];\r", "-\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER && entry.getPath().equals(containerPath)){\r", "-\t\t\t\t\tfound = true;\r", "-\t\t\t\t\tbreak;\r", "+\t\t\tif (affectedProject.getProject().exists()){\r", "+\t\t\t\tIClasspathEntry[] rawClasspath = affectedProject.getRawClasspath();\r", "+\t\t\t\tfor (int j = 0, cpLength = rawClasspath.length; j <cpLength; j++) {", "+\t\t\t\t\tIClasspathEntry entry = rawClasspath[j];\r", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER && entry.getPath().equals(containerPath)){\r", "+\t\t\t\t\t\tfound = true;\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3306247d2b2b16d5d3b2d55f7c71bbe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath)", "signatureAfterChange": " public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath)", "diff": ["-\t\t\tIClasspathEntry[] entries = otherProject.getResolvedClasspath();", "-\t\t\tfor (int j = 0, length2 = entries.length; j < length2; j++) {", "-\t\t\t\tIClasspathEntry entry = entries[j];", "-\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY && entry.getPath().equals(projectOrJarPath))", "-\t\t\t\t\tif (canSeeFocus(focus, otherProject, focusEntries))", "-\t\t\t\t\t\treturn true;", "-\t\t\t}", "+\t\t\tIClasspathEntry entry = otherProject.getClasspathEntryFor(projectOrJarPath);", "+\t\t\tif (entry != null ", "+\t\t\t\t\t&& entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY ", "+\t\t\t\t\t&& canSeeFocus(focus, otherProject, focusEntries))", "+\t\t\t\treturn true;"]}], "num": 49321}