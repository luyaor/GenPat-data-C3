{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f4d764e76086419fe52f12d004666b0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3195af79abf84701d046434af06a9ae1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "commitAfterChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["-", "-\t\t// handle the case of redefining root types up front", "-\t\tswitch (sourceType.id) {", "+\t\tswitch (sourceType.id) { //handle the case of redefining root types up front", "-\t\t\tsourceType.superclass = null;", "-\t\t\tsourceType.superInterfaces = NoSuperInterfaces;", "-\t\t\tif (!sourceType.isClass())", "-\t\t\t\tproblemReporter().objectMustBeClass(sourceType);", "-\t\t\tif (referenceContext.superclass != null || referenceContext.superInterfaces != null)", "-\t\t\t\tproblemReporter().objectCannotHaveSuperTypes(sourceType);", "-\t\t\treturn true; // do not propagate Object's hierarchy problems down to every subtype", "-", "+\t\t\t\tsourceType.superclass = null;", "+\t\t\t\tsourceType.superInterfaces = NoSuperInterfaces;", "+\t\t\t\tif (!sourceType.isClass())", "+\t\t\t\t\tproblemReporter().objectMustBeClass(sourceType);", "+\t\t\t\tif (referenceContext.superclass != null || referenceContext.superInterfaces != null)", "+\t\t\t\t\tproblemReporter().objectCannotHaveSuperTypes(sourceType);", "+\t\t\t\treturn true; // do not propagate Object's hierarchy problems down to every subtype", "-\t\t\tif (sourceType.isEnum()) {", "+\t\t\tif (sourceType.isEnum())", "-\t\t\t} else {", "-\t\t\t\tsourceType.superclass = getJavaLangObject();", "-\t\t\t\treturn !detectCycle(sourceType, sourceType.superclass, null);\t\t\t\t", "-\t\t\t}", "+\t\t\tsourceType.superclass = getJavaLangObject();", "+\t\t\treturn !detectCycle(sourceType, sourceType.superclass, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd3483d4da0310f6ca0a5c4cd7fea18e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "01b9296a9ea93c38acbcfd0ee226b1f00d5fc41b", "commitAfterChange": "33cf2c285ddb9d801a508bfb1e7446c0a204b2e0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["-\t\tswitch (sourceType.id) { //handle the case of redefining root types up front", "-\t\t\tcase T_JavaLangObject :", "-\t\t\t\tsourceType.superclass = null;", "-\t\t\t\tsourceType.superInterfaces = NoSuperInterfaces;", "-\t\t\t\tif (!sourceType.isClass())", "-\t\t\t\t\tproblemReporter().objectMustBeClass(sourceType);", "-\t\t\t\tif (referenceContext.superclass != null || referenceContext.superInterfaces != null)", "-\t\t\t\t\tproblemReporter().objectCannotHaveSuperTypes(sourceType);", "-\t\t\t\treturn true; // do not propagate Object's hierarchy problems down to every subtype", "-\t\t\tcase T_JavaLangEnum :", "-\t\t\t\t// TODO (kent) need to check is generic class with exactly one unbound parameter, and defines constructor Enum(String,int)", "+\t\tif (sourceType.id == T_JavaLangObject) { // handle the case of redefining java.lang.Object up front", "+\t\t\tsourceType.superclass = null;", "+\t\t\tsourceType.superInterfaces = NoSuperInterfaces;", "+\t\t\tif (!sourceType.isClass())", "+\t\t\t\tproblemReporter().objectMustBeClass(sourceType);", "+\t\t\tif (referenceContext.superclass != null || referenceContext.superInterfaces != null)", "+\t\t\t\tproblemReporter().objectCannotHaveSuperTypes(sourceType);", "+\t\t\treturn true; // do not propagate Object's hierarchy problems down to every subtype"]}], "num": 63428}