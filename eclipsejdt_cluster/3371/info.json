{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "415bd4acd0ce3a77bdc9ac55b2a2e281", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6228171e67c9c54987bf730a6b7bec90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a9f38be699fe70d2da9042c7930f602b1245fb8d", "commitAfterChange": "c58f46702a3cd6fb013870c57db58066e2c73fbe", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\tint startIndent= getIndent(node.getStartPosition()) + 1;", "-\t\tRewriteEvent event= getEvent(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY);", "-\t\tRewriteEvent[] events= event.getChildren();", "-", "-\t\tpos= getPosAfterLeftBrace(pos);", "-\t\t", "-\t\tif (isAllOfKind(events, RewriteEvent.INSERTED)) {", "-\t\t\tint lead= 1;", "-\t\t\tfor (int i= 0; i < lead; i++) {", "-\t\t\t\tleadString.append(getLineDelimiter());", "+\t\tRewriteEvent constEvent= getEvent(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY);", "+\t\tif (constEvent != null && constEvent.getChangeKind() != RewriteEvent.UNCHANGED) {", "+\t\t\tRewriteEvent[] events= constEvent.getChildren();", "+\t", "+\t\t\tpos= getPosAfterLeftBrace(pos);", "+\t\t\tif (isAllOfKind(events, RewriteEvent.INSERTED)) {", "+\t\t\t\tint lead= 1;", "+\t\t\t\tint startIndent= getIndent(node.getStartPosition()) + 1;", "+\t\t\t\tfor (int i= 0; i < lead; i++) {", "+\t\t\t\t\tleadString.append(getLineDelimiter());", "+\t\t\t\t}", "+\t\t\t\tleadString.append(createIndentString(startIndent));", "-\t\t\tleadString.append(createIndentString(startIndent));", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5dacbb605746d70de20d9c7e1892bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "02030da0528a8fcbd0cf47635fdec2fbb50668ef", "commitAfterChange": "8ceb000c7fbb649bb64dc31d912e59b394f3fb60", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["+", "+\t\tpos= getPosAfterLeftBrace(pos);", "-\t\tStringBuffer leadString= new StringBuffer();", "+\t\tString leadString= \"\"; //$NON-NLS-1$", "+", "-\t", "-\t\t\tpos= getPosAfterLeftBrace(pos);", "-\t\t\t\tint lead= 1;", "-\t\t\t\tint startIndent= getIndent(node.getStartPosition()) + 1;", "-\t\t\t\tfor (int i= 0; i < lead; i++) {", "-\t\t\t\t\tleadString.append(getLineDelimiter());", "-\t\t\t\t}", "-\t\t\t\tleadString.append(createIndentString(startIndent));", "+\t\t\t\tleadString= this.formatter.FIRST_ENUM_CONST.getPrefix(getIndent(node.getStartPosition()), getLineDelimiter());", "-\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, leadString.toString(), \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, leadString, \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tboolean hasConstants= !((List) getNewValue(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY)).isEmpty();", "+\t\t\t", "+\t\t\t\tif (hasConstants) {", "+\t\t\t\t\tindent= getIndent(pos);", "+\t\t\t\t} else {", "+\t\t\t\t\tindent= getIndent(node.getStartPosition()) + 1;", "+\t\t\t\t}", "+\t\t\t\t\tif (!hasConstants) {", "+\t\t\t\t\t\tString str= this.formatter.FIRST_ENUM_CONST.getPrefix(indent - 1, getLineDelimiter());", "+\t\t\t\t\t\tdoTextInsert(pos, str, getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\tindent= getIndent(pos);"]}], "num": 3371}