{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb244a885ea10f90228d820134136760", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d7d8b535cead992c7fd7925b6c35ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "9646bff900e2e9b1dd1cb75694904ea3176cb9e3", "commitAfterChange": "d9899f9c096b7c410ee09d2b3a3fb8442b999bdb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public final Binding getBinding(char[][] compoundName, InvocationSite invocationSite)", "signatureAfterChange": " public final Binding getBinding(char[][] compoundName, InvocationSite invocationSite)", "diff": ["-\t\t\t\tif (!binding.isValidBinding())", "+\t\t\t\tif (!binding.isValidBinding()) {", "-\t\t\t\t\t\tCharOperation.subarray(compoundName, 0, currentIndex),", "+\t\t\t\t\t\t((FieldBinding) binding).declaringClass,", "+\t\t\t\t\t\tCharOperation.concatWith(CharOperation.subarray(compoundName, 0, currentIndex), '.'),", "+\t\t\t\t}", "-\t\t\t\t\t\tCharOperation.subarray(compoundName, 0, currentIndex),", "+\t\t\t\t\t\t((FieldBinding) binding).declaringClass,", "+\t\t\t\t\t\tCharOperation.concatWith(CharOperation.subarray(compoundName, 0, currentIndex), '.'),", "-\t\tif (typeBinding == null)", "+\t\tif (typeBinding == null) {", "-\t\t\t\tCharOperation.subarray(compoundName, 0, currentIndex + 1),", "+\t\t\t\tnull,", "+\t\t\t\tCharOperation.concatWith(CharOperation.subarray(compoundName, 0, currentIndex), '.'),", "-\t\tvariableBinding =", "-\t\t\tfindField(typeBinding, compoundName[currentIndex++], invocationSite, true /*resolve*/);", "-\t\tif (variableBinding == null)", "+\t\t}", "+\t\tvariableBinding = findField(typeBinding, compoundName[currentIndex++], invocationSite, true /*resolve*/);", "+\t\tif (variableBinding == null) {", "-\t\t\t\tCharOperation.subarray(compoundName, 0, currentIndex),", "+\t\t\t\tnull,", "+\t\t\t\tCharOperation.concatWith(CharOperation.subarray(compoundName, 0, currentIndex), '.'),", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4806273fee1690c7d5842cea9aea1d95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyPackageFragmentRootOperation.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected IClasspathEntry copy(IClasspathEntry entry) throws JavaModelException", "signatureAfterChange": " \tprotected IClasspathEntry copy(IClasspathEntry entry) throws JavaModelException", "diff": ["-\t\t\t\treturn JavaCore.newContainerEntry(entry.getPath(), entry.isExported());", "+\t\t\t\treturn JavaCore.newContainerEntry(entry.getPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(this.destination, entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.isExported());", "+\t\t\t\t\treturn JavaCore.newLibraryEntry(this.destination, entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "-\t\t\t\treturn JavaCore.newProjectEntry(entry.getPath(), entry.isExported());", "+\t\t\t\treturn JavaCore.newProjectEntry(entry.getPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "-\t\t\t\t\treturn JavaCore.newVariableEntry(entry.getPath(), entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.isExported());", "+\t\t\t\t\treturn JavaCore.newVariableEntry(entry.getPath(), entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64009791e8cdf20e0d7aaf1fa84b64ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "4f8b41427e5710e37012dc18560acc142566864b", "commitAfterChange": "474e0db6559546cf5ac1476d3c4eb203e5f714e7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["-\t\tdeclaringLevel = resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, methodReceiverType, method.selector, method.parameters);", "+\t\tdeclaringLevel = resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, methodReceiverType, method.selector, method.parameters, methodReceiverType.qualifiedPackageName(), method.isDefault());", "-\t\t\t\tif (resolveLevelAsSuperInvocation(methodReceiverType, method.parameters, true)) {", "-\t\t\t\t\tdeclaringLevel = methodLevel // since this is an ACCURATE_MATCH so return the possibly weaker match", "-\t\t\t\t\t\t| SUPER_INVOCATION_FLAVOR; // this is an overridden method => add flavor to returned level", "+\t\t\t\tchar[][][] superTypeNames = (method.isDefault() && this.pattern.focus == null) ? this.samePkgSuperDeclaringTypeNames: this.allSuperDeclaringTypeNames;", "+\t\t\t\tif (superTypeNames != null && resolveLevelAsSuperInvocation(methodReceiverType, method.parameters, superTypeNames, true)) {", "+\t\t\t\t\t\tdeclaringLevel = methodLevel // since this is an ACCURATE_MATCH so return the possibly weaker match", "+\t\t\t\t\t\t\t| SUPER_INVOCATION_FLAVOR; // this is an overridden method => add flavor to returned level"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbeaa51027569cc9f7fea8b4488591dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "37d67ed9fa27dc85b6112e216c3af6d687e12530", "commitAfterChange": "8924c9453af0fcfcdde960b7165abadc76ad272e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": " \t \tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags)", "signatureAfterChange": " \t \tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags)", "diff": ["-\t\t\t\tint startingIndex = (accessFlags & IModifierConstants.ACC_STATIC) != 0 ? 0 : 1;", "+\t\t\t\tfinal int startingIndex = (accessFlags & IModifierConstants.ACC_STATIC) != 0 ? 0 : 1;", "-\t\t\t\t\tILocalVariableTableEntry searchedEntry = getEntryFor(startingIndex + i, entries);", "+\t\t\t\t\tILocalVariableTableEntry searchedEntry = getEntryFor(getLocalIndex(startingIndex, i, methodDescriptor), entries);", "-\t\t\t\t\t\tparameterNames[i] = Messages.disassembler_parametername.toCharArray(); ", "+\t\t\t\t\t\tparameterNames[i] = CharOperation.concat(Messages.disassembler_parametername.toCharArray(), Integer.toString(i).toCharArray()); ", "-\t\t\t\t\tparameterNames[i] = Messages.disassembler_parametername.toCharArray(); ", "+\t\t\t\t\tparameterNames[i] = CharOperation.concat(Messages.disassembler_parametername.toCharArray(), Integer.toString(i).toCharArray()); ", "-\t\t\t\tparameterNames[i] = Messages.disassembler_parametername.toCharArray(); ", "+\t\t\t\tparameterNames[i] = CharOperation.concat(Messages.disassembler_parametername.toCharArray(), Integer.toString(i).toCharArray()); "]}], "num": 69879}