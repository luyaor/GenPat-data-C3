{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8688f2096b9a44db1816dc2806766b61", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3935c4fe99624fbba9826d9e49929a0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["-\t\t\t\t\t\tnew FieldDeclarationPattern(", "+\t\t\t\t\t\tnew FieldPattern(", "+\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\tnew FieldReferencePattern(", "+\t\t\t\t\t\tnew FieldPattern(", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\ttrue, // read access", "+\t\t\t\t\t\t\ttrue, // write access", "-\t\t\t\t\t\t\ttypeSimpleName,", "-\t\t\t\t\t\t\ttrue,  // read access", "-\t\t\t\t\t\t\ttrue); // write access", "+\t\t\t\t\t\t\ttypeSimpleName);", "-\t\t\t\t\t\tnew FieldReferencePattern(", "+\t\t\t\t\t\tnew FieldPattern(", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\ttrue, // read access only", "+\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\ttypeSimpleName,", "-\t\t\t\t\t\t\ttrue,  // read access only", "-\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\ttypeSimpleName);", "-\t\t\t\t\t\tnew FieldReferencePattern(", "+\t\t\t\t\t\tnew FieldPattern(", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\ttrue, // write access only", "-\t\t\t\t\t\t\ttypeSimpleName,", "-\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\ttrue); // write access only", "+\t\t\t\t\t\t\ttypeSimpleName);", "-\t\t\t\t\tsearchPattern = new OrPattern(", "-\t\t\t\t\t\tnew FieldDeclarationPattern(", "+\t\t\t\t\tsearchPattern =", "+\t\t\t\t\t\tnew FieldPattern(", "+\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\ttrue, // read access", "+\t\t\t\t\t\t\ttrue, // write access", "-\t\t\t\t\t\t\ttypeSimpleName), ", "-\t\t\t\t\t\tnew FieldReferencePattern(", "-\t\t\t\t\t\t\tname, ", "-\t\t\t\t\t\t\tEXACT_MATCH, ", "-\t\t\t\t\t\t\tCASE_SENSITIVE, ", "-\t\t\t\t\t\t\tdeclaringQualification, ", "-\t\t\t\t\t\t\tdeclaringSimpleName, ", "-\t\t\t\t\t\t\ttypeQualification, ", "-\t\t\t\t\t\t\ttypeSimpleName,", "-\t\t\t\t\t\t\ttrue,  // read access", "-\t\t\t\t\t\t\ttrue)); // write access", "+\t\t\t\t\t\t\ttypeSimpleName);", "-\t\t\t\t\t\t\tnew ConstructorDeclarationPattern(", "+\t\t\t\t\t\t\tnew ConstructorPattern(", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\tparameterSimpleNames);", "+\t\t\t\t\t\t\t\tparameterSimpleNames,", "+\t\t\t\t\t\t\t\tnull);", "-\t\t\t\t\t\t\tnew MethodDeclarationPattern(", "+\t\t\t\t\t\t\tnew MethodPattern(", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\tparameterSimpleNames);", "+\t\t\t\t\t\t\t\tparameterSimpleNames,", "+\t\t\t\t\t\t\t\tnull);", "-\t\t\t\t\t\t\tnew ConstructorReferencePattern(", "+\t\t\t\t\t\t\tnew ConstructorPattern(", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\tnew MethodReferencePattern(", "+\t\t\t\t\t\t\tnew MethodPattern(", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\tsearchPattern = new OrPattern(", "-\t\t\t\t\t\t\tnew ConstructorDeclarationPattern(", "-\t\t\t\t\t\t\t\tdeclaringSimpleName, ", "-\t\t\t\t\t\t\t\tEXACT_MATCH, ", "-\t\t\t\t\t\t\t\tCASE_SENSITIVE, ", "-\t\t\t\t\t\t\t\tdeclaringQualification, ", "-\t\t\t\t\t\t\t\tparameterQualifications, ", "-\t\t\t\t\t\t\t\tparameterSimpleNames), ", "-\t\t\t\t\t\t\tnew ConstructorReferencePattern(", "+\t\t\t\t\t\tsearchPattern =", "+\t\t\t\t\t\t\tnew ConstructorPattern(", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\tmethod.getDeclaringType()));", "+\t\t\t\t\t\t\t\tmethod.getDeclaringType());", "-\t\t\t\t\t\tsearchPattern = new OrPattern(", "-\t\t\t\t\t\t\tnew MethodDeclarationPattern(", "-\t\t\t\t\t\t\t\tselector, ", "-\t\t\t\t\t\t\t\tEXACT_MATCH, ", "-\t\t\t\t\t\t\t\tCASE_SENSITIVE, ", "-\t\t\t\t\t\t\t\tdeclaringQualification, ", "-\t\t\t\t\t\t\t\tdeclaringSimpleName, ", "-\t\t\t\t\t\t\t\treturnQualification, ", "-\t\t\t\t\t\t\t\treturnSimpleName, ", "-\t\t\t\t\t\t\t\tparameterQualifications, ", "-\t\t\t\t\t\t\t\tparameterSimpleNames), ", "-\t\t\t\t\t\t\tnew MethodReferencePattern(", "+\t\t\t\t\t\tsearchPattern =", "+\t\t\t\t\t\t\tnew MethodPattern(", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\tmethod.getDeclaringType()));", "+\t\t\t\t\t\t\t\tmethod.getDeclaringType());", "-\tif (searchPattern != null) {", "+\tif (searchPattern != null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff61c0101760847fbf6ac299a48997e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "f5bc1120f0fcf28d11610e258b1d706aac57c4e4", "commitAfterChange": "bd55e21e5b140501fd9b3488335aff5722719eed", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project, Map unknownElements)", "signatureAfterChange": "  \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project, Map unknownElements)", "diff": ["-\t\t\tpath = projectPath.append(path);", "+\t\t\tif (!(path.segmentCount() > 0 && path.segment(0).equals(ClasspathEntry.DOT_DOT))) {", "+\t\t\t\tpath = projectPath.append(path);", "+\t\t\t}", "-\t\t\t\tIPackageFragmentRoot.K_SOURCE,", "-\t\t\t\tIClasspathEntry.CPE_PROJECT,", "-\t\t\t\tpath,", "-\t\t\t\tClasspathEntry.INCLUDE_ALL, // inclusion patterns", "-\t\t\t\tClasspathEntry.EXCLUDE_NONE, // exclusion patterns", "-\t\t\t\tnull, // source attachment", "-\t\t\t\tnull, // source attachment root", "-\t\t\t\tnull, // specific output folder", "-\t\t\t\tisExported,", "-\t\t\t\taccessRules,", "-\t\t\t\tcombineAccessRestrictions,", "-\t\t\t\textraAttributes);", "+\t\t\t\t\t\t\t\t\t\t\t\tIPackageFragmentRoot.K_SOURCE,", "+\t\t\t\t\t\t\t\t\t\t\t\tIClasspathEntry.CPE_PROJECT,", "+\t\t\t\t\t\t\t\t\t\t\t\tpath,", "+\t\t\t\t\t\t\t\t\t\t\t\tClasspathEntry.INCLUDE_ALL, // inclusion patterns", "+\t\t\t\t\t\t\t\t\t\t\t\tClasspathEntry.EXCLUDE_NONE, // exclusion patterns", "+\t\t\t\t\t\t\t\t\t\t\t\tnull, // source attachment", "+\t\t\t\t\t\t\t\t\t\t\t\tnull, // source attachment root", "+\t\t\t\t\t\t\t\t\t\t\t\tnull, // specific output folder", "+\t\t\t\t\t\t\t\t\t\t\t\tisExported,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessRules,", "+\t\t\t\t\t\t\t\t\t\t\t\tcombineAccessRestrictions,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes);", "-\t\t\t\t\tentry = JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation, extraAttributes);", "+\t\t\t\t\tentry = JavaCore.newSourceEntry(", "+\t\t\t\t\t\t\t\t\t\t\t\tpath, ", "+\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns, ", "+\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns, ", "+\t\t\t\t\t\t\t\t\t\t\t\toutputLocation, ", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes);", "-\t\t\t\t\t\tentry = JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation, extraAttributes);", "+\t\t\t\t\t\tentry = JavaCore.newSourceEntry(", "+\t\t\t\t\t\t\t\t\t\t\t\tpath, ", "+\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns, ", "+\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns, ", "+\t\t\t\t\t\t\t\t\t\t\t\toutputLocation, ", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes);", "-\t\t\t\t\t\tpath,", "-\t\t\t\t\t\tsourceAttachmentPath,", "-\t\t\t\t\t\tsourceAttachmentRootPath,", "-\t\t\t\t\t\taccessRules,", "-\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\tisExported);", "+\t\t\t\t\t\t\t\t\t\t\t\tpath,", "+\t\t\t\t\t\t\t\t\t\t\t\tsourceAttachmentPath,", "+\t\t\t\t\t\t\t\t\t\t\t\tsourceAttachmentRootPath,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessRules,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "+\t\t\t\t\t\t\t\t\t\t\t\tisExported);", "-\t\t\t\t\t\tpath,", "-\t\t\t\t\t\taccessRules,", "-\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\tisExported);", "+\t\t\t\t\t\t\t\t\t\t\t\tpath,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessRules,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "+\t\t\t\t\t\t\t\t\t\t\t\tisExported);", "-\t\t\t\t\t\tClasspathEntry.K_OUTPUT,", "-\t\t\t\t\t\tIClasspathEntry.CPE_LIBRARY,", "-\t\t\t\t\t\tpath,", "-\t\t\t\t\t\tINCLUDE_ALL,", "-\t\t\t\t\t\tEXCLUDE_NONE,", "-\t\t\t\t\t\tnull, // source attachment", "-\t\t\t\t\t\tnull, // source attachment root", "-\t\t\t\t\t\tnull, // custom output location", "-\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\tnull, // no access rules", "-\t\t\t\t\t\tfalse, // no accessible files to combine", "-\t\t\t\t\t\tNO_EXTRA_ATTRIBUTES);", "+\t\t\t\t\t\t\t\t\t\t\t\tClasspathEntry.K_OUTPUT,", "+\t\t\t\t\t\t\t\t\t\t\t\tIClasspathEntry.CPE_LIBRARY,", "+\t\t\t\t\t\t\t\t\t\t\t\tpath,", "+\t\t\t\t\t\t\t\t\t\t\t\tINCLUDE_ALL,", "+\t\t\t\t\t\t\t\t\t\t\t\tEXCLUDE_NONE,", "+\t\t\t\t\t\t\t\t\t\t\t\tnull, // source attachment", "+\t\t\t\t\t\t\t\t\t\t\t\tnull, // source attachment root", "+\t\t\t\t\t\t\t\t\t\t\t\tnull, // custom output location", "+\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\t\tnull, // no access rules", "+\t\t\t\t\t\t\t\t\t\t\t\tfalse, // no accessible files to combine", "+\t\t\t\t\t\t\t\t\t\t\t\tNO_EXTRA_ATTRIBUTES);", "+\t}"]}], "num": 65879}