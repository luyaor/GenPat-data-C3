{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "253cb530ed69af94316b64a16c8e62cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211f37e2e7663627b04931c740598540", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\tif (methodDeclaration.modifiers != NO_MODIFIERS) {", "-\t\t\tthis.scribe.printModifiers();", "-\t\t\tthis.scribe.space();", "-\t\t}", "+\t\tthis.scribe.printModifiers();", "+\t\tthis.scribe.space();", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true); ", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); ", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACKET);", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b81761b84f6c1227017c658ed549978", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\tif (constructorDeclaration.modifiers != NO_MODIFIERS) {", "-\t\t\tthis.scribe.printModifiers();", "-\t\t} else {", "-\t\t\tthis.scribe.printComment();", "-\t\t}\t\t\t", "+\t\tthis.scribe.printModifiers();", "+\t\tthis.scribe.space();", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true); ", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); ", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a10a9859c76821d4d60571e24a0b7f18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "signatureAfterChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, IAbstractSyntaxTreeVisitor visitor, MethodScope scope, boolean isChunkStart)", "diff": ["-\t\tif (fieldDeclaration.modifiers != NO_MODIFIERS) {", "-\t\t\tthis.scribe.printModifiers();", "-\t\t}", "+\t\tthis.scribe.printModifiers();", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACKET);", "-\t\t\t \tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}], "num": 63399}