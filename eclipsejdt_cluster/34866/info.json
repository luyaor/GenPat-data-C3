{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ea320cf30abb16280ca3dacd115fb17", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780dac1fdf8000146bb07462c84b823b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "78c62e3a4157070f714848f4de312a55f14f5144", "commitAfterChange": "fb48e11da0ebe84c63fab7b3cb5afd39c0ba6101", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "diff": ["-\t            return argumentType.isCompatibleWith(this.bound);", "+\t            if (argumentType.isCompatibleWith(this.bound)) return true;", "+\t            // check other bounds (lub scenario)", "+            \tfor (int i = 0, length = this.otherBounds == null ? 0 : this.otherBounds.length; i < length; i++) {", "+            \t\tif (argumentType.isCompatibleWith(this.otherBounds[i])) return true;", "+            \t}", "+            \treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb73ae39b05de203bd7bdc7c04ce73d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "8d1d658761d5e634e1f9986cdb54c46ecd8cbc2e", "commitAfterChange": "f4d9deb41a71301595419326392826169e31b674", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "diff": ["-\t            if (argumentType.isCompatibleWith(this.bound)) return true;", "+\t            if (!argumentType.isCompatibleWith(this.bound)) return false;", "-            \t\tif (argumentType.isCompatibleWith(this.otherBounds[i])) return true;", "+            \t\tif (!argumentType.isCompatibleWith(this.otherBounds[i])) return false;", "-            \treturn false;", "+            \treturn true;"]}], "num": 34866}