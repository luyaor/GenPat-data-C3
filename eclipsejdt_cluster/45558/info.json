{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbd6193fd44ec21b44e54d0f58620d17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aef02049693f7d340d93bd3493e492f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "44d8236dd4abb494fc297db79d6ea2ed8f0d620e", "commitAfterChange": "da2dbc8ee1c4e3f2d651fde4a074689a00f209fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " boolean areReturnTypesEqual(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean areReturnTypesEqual(MethodBinding one, MethodBinding substituteTwo)", "diff": ["-\t// check for methods from Object", "-\tif (one.declaringClass.id == TypeIds.T_JavaLangObject)", "-\t\treturn substituteTwo.returnType.isCompatibleWith(one.returnType);", "+\tif (one.declaringClass.isClass()) {", "+\t\tif (one.declaringClass.id == TypeIds.T_JavaLangObject)", "+\t\t\treturn substituteTwo.returnType.isCompatibleWith(one.returnType); // interface methods inherit from Object", "+\t\treturn one.returnType.isCompatibleWith(substituteTwo.returnType);", "+\t}", "-\t// methods from classes are always before methods from interfaces", "-\tif (one.declaringClass.isClass() || one.declaringClass.implementsInterface(substituteTwo.declaringClass, true))", "+\t// check for methods from Object, every interface inherits from Object", "+\tif (substituteTwo.declaringClass.id == TypeIds.T_JavaLangObject)", "+\t// both are interfaces, see if they're related", "+\tif (one.declaringClass.implementsInterface(substituteTwo.declaringClass, true))", "+\t\treturn one.returnType.isCompatibleWith(substituteTwo.returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6599e5b1d0346f41d4ed6a554a80c49d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/UnresolvedReferenceNameFinder.java", "commitBeforeChange": "1fe69d52230e67687b32b072c6843ac0b930c0b8", "commitAfterChange": "6b2eaccbd1d9579997548e9877abcafa55f36650", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope classScope)", "signatureAfterChange": " \t \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope classScope)", "diff": ["+\t\tif (!constructorDeclaration.isDefaultConstructor && !constructorDeclaration.isClinit()) {", "+\t\t\tremoveLocals(", "+\t\t\t\t\tconstructorDeclaration.arguments,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceStart,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceEnd);", "+\t\t\tremoveLocals(", "+\t\t\t\t\tconstructorDeclaration.statements,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceStart,", "+\t\t\t\t\tconstructorDeclaration.declarationSourceEnd);", "+\t\t}"]}], "num": 45558}