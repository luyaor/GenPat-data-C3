{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93977f362701a23bd03188fe6916c3e2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3412daf70535f24b26cfd96b5a52b5cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "ab8ca59a5dd4b7954a1bf4f4ac6d29a32841c241", "commitAfterChange": "49af69eca21582a1a27bbb8fe6279e798e4dbf09", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element, int eventType)", "signatureAfterChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element, int eventType)", "diff": ["+\t\tICompilationUnit focusCU = ", "+\t\t\tthis.focusType != null ? this.focusType.getCompilationUnit() : null;", "+\t\tif (focusCU != null && focusCU.getOwner() != cu.getOwner())", "+\t\t\treturn false;", "+\t\t//ADDED delta arising from getWorkingCopy() should be ignored", "+\t\tif (eventType != ElementChangedEvent.POST_RECONCILE && !cu.isPrimary() &&", "+\t\t\t\tdelta.getKind() == IJavaElementDelta.ADDED)", "+\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7dd7dd3be09d2cf72101ce99a8d446c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredElement.java", "commitBeforeChange": "4aad5ecac35ca209670b9451440a1afdf2df9be9", "commitAfterChange": "8b5de8ec91e61f4a356d85095c8fc08ae222fe3a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public RecoveredElement add(Statement statement, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(Statement statement, int bracketBalanceValue)", "diff": ["+\tif (this instanceof RecoveredType) {", "+\t\tTypeDeclaration typeDeclaration = ((RecoveredType) this).typeDeclaration;", "+\t\tif (typeDeclaration != null && (typeDeclaration.bits & ASTNode.IsAnonymousType) != 0) { ", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=291040, new X(<SelectOnMessageSend:zoo()>) { ???", "+\t\t\tif (statement.sourceStart > typeDeclaration.sourceStart && statement.sourceEnd < typeDeclaration.sourceEnd) {", "+\t\t\t\treturn this;", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 18105}