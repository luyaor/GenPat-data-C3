{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "322445260d52228fb08f9e1dfba1e9d9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "156d48582791d94fbc63c7eb72130ef8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic boolean match(DoStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(CreationReference node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(CreationReference node, Object other) {", "+\t\tif (!(other instanceof CreationReference)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tCreationReference o = (CreationReference) other;", "+\t\treturn (", "+\t\t\tsafeSubtreeMatch(node.getExpression(), o.getExpression())", "+\t\t\t\t&& safeSubtreeListMatch(node.typeArguments(), o.typeArguments()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2743e3ecd3b67891ea3f92c7828a9a1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic boolean match(StringLiteral node, Object other)", "signatureAfterChange": " \tpublic boolean match(ParameterizedType node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(ParameterizedType node, Object other) {", "+\t\tif (!(other instanceof ParameterizedType)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tParameterizedType o = (ParameterizedType) other;", "+\t\treturn safeSubtreeMatch(node.getName(), o.getName())", "+\t\t\t\t&& safeSubtreeListMatch(node.typeArguments(), o.typeArguments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d75e8bd44af2c3ba9d0c701558686c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean match(TypeLiteral node, Object other)", "signatureAfterChange": " \tpublic boolean match(TagElement node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(TagElement node, Object other) {", "+\t\tif (!(other instanceof TagElement)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tTagElement o = (TagElement) other;", "+\t\treturn (", "+\t\t\t\tsafeEquals(node.getTagName(), o.getTagName())", "+\t\t\t\t&& safeSubtreeListMatch(node.fragments(), o.fragments()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e49f3ae47f63c39a0caf4e6f9bf266", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic boolean match(PackageDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(MethodRefParameter node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(MethodRefParameter node, Object other) {", "+\t\tif (!(other instanceof MethodRefParameter)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tMethodRefParameter o = (MethodRefParameter) other;", "+\t\treturn (", "+\t\t\t\tsafeSubtreeMatch(node.getType(), o.getType())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b3509fa5d9c1ccd9c55146033038ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic boolean match(NullLiteral node, Object other)", "signatureAfterChange": " \tpublic boolean match(MemberRef node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(MemberRef node, Object other) {", "+\t\tif (!(other instanceof MemberRef)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tMemberRef o = (MemberRef) other;", "+\t\treturn (", "+\t\t\t\tsafeSubtreeMatch(node.getQualifier(), o.getQualifier())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f8de2d6845ee69ec611d7aa083283c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic boolean match(SynchronizedStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(QualifiedType node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(QualifiedType node, Object other) {", "+\t\tif (!(other instanceof QualifiedType)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tQualifiedType o = (QualifiedType) other;", "+\t\treturn (", "+\t\t\tsafeSubtreeMatch(node.getQualifier(), o.getQualifier())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eec390e4825f64894ca0e96f9489eabe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic boolean match(PackageDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(MemberValuePair node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(MemberValuePair node, Object other) {", "+\t\tif (!(other instanceof MemberValuePair)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tMemberValuePair o = (MemberValuePair) other;", "+\t\treturn (safeSubtreeMatch(node.getName(), o.getName())", "+\t\t\t\t&& safeSubtreeMatch(node.getValue(), o.getValue()));", "+\t}"]}], "num": 64578}