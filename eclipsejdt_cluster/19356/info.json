{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2274e1ac2c2bba9d52dd680dad1ec881", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2c89325467653765a3e339adb1f5d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/Indents.java", "commitBeforeChange": "115aa955b9babd8a2ed6e802830c5035a2e2a28f", "commitAfterChange": "c555269f6d77af957f827daf14cfb9a3af0c01ad", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static int computeIndentLength(String line, int numberOfIndents, int tabWidth, int indentWidth)", "signatureAfterChange": " \tpublic static int computeIndentLength(String line, int numberOfIndents, int tabWidth)", "diff": ["-\tpublic static int computeIndentLength(String line, int numberOfIndents, int tabWidth, int indentWidth) {", "+\tpublic static int computeIndentLength(String line, int numberOfIndents, int tabWidth) {", "-\t\tAssert.isTrue(indentWidth >= 0);", "-\t\t", "-\t\tint spaceEquivalents= numberOfIndents * indentWidth;", "-\t\t", "+\t\tint indents= 0;", "-\t\tfor (int i= 0; i < size && blanks < spaceEquivalents; i++) {", "+\t\tfor (int i= 0; i < size && indents < numberOfIndents; i++) {", "-\t\t\t\tint remainder= blanks % tabWidth;", "-\t\t\t\tblanks += tabWidth - remainder;", "+\t\t\t\tindents++;", "+\t\t\t\tresult= i;", "+\t\t\t\tblanks= 0;", "+\t\t\t\tif (blanks == tabWidth) {", "+\t\t\t\t\tresult= i;", "+\t\t\t\t\tindents++;", "+\t\t\t\t\tblanks= 0;", "+\t\t\t\t}", "-\t\t\tresult= i;", "-\t\tif (blanks < spaceEquivalents)", "+\t\tif (indents < numberOfIndents)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d3815cd9a06f37ef4e761f8c1dfccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/Indents.java", "commitBeforeChange": "115aa955b9babd8a2ed6e802830c5035a2e2a28f", "commitAfterChange": "c555269f6d77af957f827daf14cfb9a3af0c01ad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static String getIndentString(String line, int tabWidth, int indentWidth)", "signatureAfterChange": "  \t \tpublic static String getIndentString(String line, int tabWidth)", "diff": ["-\t */", "-\tpublic static String getIndentString(String line, int tabWidth, int indentWidth) {", "+\tpublic static String getIndentString(String line, int tabWidth) {", "-\t\t", "-\t\tint spaceEquivs= 0;", "-\t\tint characters= 0;", "+\t\tint blanks= 0;", "-\t\t\t\tint remainder= spaceEquivs % tabWidth;", "-\t\t\t\tspaceEquivs += tabWidth - remainder;", "-\t\t\t\tcharacters++;", "+\t\t\t\tend= i + 1;", "+\t\t\t\tblanks= 0;", "-\t\t\t\tspaceEquivs++;", "-\t\t\t\tcharacters++;", "+\t\t\t\tblanks++;", "+\t\t\t\tif (blanks == tabWidth) {", "+\t\t\t\t\tend= i + 1;", "+\t\t\t\t\tblanks= 0;", "+\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (spaceEquivs >= indentWidth) {", "-\t\t\t\tend += characters;", "-\t\t\t\tcharacters= 0;", "-\t\t\t\tspaceEquivs= spaceEquivs % indentWidth;"]}], "num": 19356}