{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "766be03210ed2d0ed841b19162fc7469", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f9754af8d65d4956b977813c7f4281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/imports/ImportEditor.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate static Collection<TextEdit> deleteRemainingText(IRegion importRegion, Collection<TextEdit> edits)", "signatureAfterChange": " \tprivate static Collection<TextEdit> deleteRemainingText(IRegion importRegion, Collection<TextEdit> edits)", "diff": ["-\t\tList<TextEdit> sortedEdits = new ArrayList<TextEdit>(edits);", "+\t\tList<TextEdit> sortedEdits = new ArrayList<>(edits);", "-\t\tCollection<TextEdit> deleteRemainingTextEdits = new ArrayList<TextEdit>();", "+\t\tCollection<TextEdit> deleteRemainingTextEdits = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1809e5bf7e16c5edbfb056a54b9d6d22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/ManyToMany.java", "commitBeforeChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "commitAfterChange": "8715eeccf865a33f86687c2ed1edfa7db42faeec", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic synchronized boolean put(T1 key, T2 value)", "signatureAfterChange": " \tpublic synchronized boolean put(T1 key, T2 value)", "diff": ["-\t\t\tvalues = new HashSet<T2>();", "+\t\t\tvalues = new HashSet<>();", "-\t\t\tkeys = new HashSet<T1>();", "+\t\t\tkeys = new HashSet<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c9e6854c9946d2c8dcd83f9bac8b777", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/imports/ImportEditor.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate Collection<TextEdit> determineEditsForImports( \t\t\tIRegion importsRegion, \t\t\tCollection<ImportEntry> resultantImports)", "signatureAfterChange": "  \tprivate Collection<TextEdit> determineEditsForImports( \t\t\tIRegion importsRegion, \t\t\tCollection<ImportEntry> resultantImports)", "diff": ["-\t\tCollection<TextEdit> edits = new ArrayList<TextEdit>();", "+\t\tCollection<TextEdit> edits = new ArrayList<>();", "-\t\tCollection<TextEdit> editsWithoutRangeMarkers = new ArrayList<TextEdit>(edits.size());", "+\t\tCollection<TextEdit> editsWithoutRangeMarkers = new ArrayList<>(edits.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc619fec31bbd747ca103721adbc9a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/imports/ConflictIdentifier.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tConflicts(Set<String> typeConflicts, Set<String> staticConflicts)", "signatureAfterChange": "  \t\tConflicts(Set<String> typeConflicts, Set<String> staticConflicts)", "diff": ["-\t\t\tthis.typeConflicts = Collections.unmodifiableSet(new HashSet<String>(typeConflicts));", "-\t\t\tthis.staticConflicts = Collections.unmodifiableSet(new HashSet<String>(staticConflicts));", "+\t\t\tthis.typeConflicts = Collections.unmodifiableSet(new HashSet<>(typeConflicts));", "+\t\t\tthis.staticConflicts = Collections.unmodifiableSet(new HashSet<>(staticConflicts));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db0bd43b23f7a64023be1e4a437c6aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/imports/ConflictIdentifier.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tConflicts identifyConflicts( \t\t\tSet<ImportName> imports, \t\t\tSet<ImportName> addedImports, \t\t\tSet<String> typeExplicitSimpleNames, \t\t\tSet<String> staticExplicitSimpleNames, \t\t\tIProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tConflicts identifyConflicts( \t\t\tSet<ImportName> imports, \t\t\tSet<ImportName> addedImports, \t\t\tSet<String> typeExplicitSimpleNames, \t\t\tSet<String> staticExplicitSimpleNames, \t\t\tIProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\t\tSet<String> typeOnDemandContainers = new HashSet<String>(extractContainerNames(onDemandCandidates, false));", "-\t\tSet<String> staticOnDemandContainers = new HashSet<String>(extractContainerNames(onDemandCandidates, true));", "+\t\tSet<String> typeOnDemandContainers = new HashSet<>(extractContainerNames(onDemandCandidates, false));", "+\t\tSet<String> staticOnDemandContainers = new HashSet<>(extractContainerNames(onDemandCandidates, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba293a7d73ea756141fb43f59bfd15dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/ManyToMany.java", "commitBeforeChange": "4e130c9d5bb20bb7b53d05cfcbc0214ae1f6f2b8", "commitAfterChange": "e18e2062279631b50cbdb527a42eeb74dde9b023", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic synchronized boolean put(T1 key, T2 value)", "signatureAfterChange": " \tpublic synchronized boolean put(T1 key, T2 value)", "diff": ["-\t\t\tvalues = new HashSet<T2>();", "+\t\t\tvalues = new HashSet<>();", "-\t\t\tkeys = new HashSet<T1>();", "+\t\t\tkeys = new HashSet<>();"]}], "num": 12006}