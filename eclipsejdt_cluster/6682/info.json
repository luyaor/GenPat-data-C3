{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bce9b542bd03a898710f02b97a342a62", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a5ca321747bd4aa2a8970d9b6e4a4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewriter.java", "commitBeforeChange": "f5b5b884f036b9e618a06dde165cd3edcb93e386", "commitAfterChange": "c01c58991465c08e9a09aa1864f2ccc8c3d7c124", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void insertAt(ASTNode nodeToInsert, int index, TextEditGroup editGroup)", "signatureAfterChange": " \tpublic void insertAt(ASTNode node, int index, TextEditGroup editGroup)", "diff": ["-\tpublic void insertAt(ASTNode nodeToInsert, int index, TextEditGroup editGroup) {", "-\t\tRewriteEvent event= getEvent().insert(nodeToInsert, index);", "-\t\tif (isInsertBoundToPreviousByDefault(nodeToInsert)) {", "-\t\t\tgetRewriteStore().setInsertBoundToPrevious(nodeToInsert);", "+\tpublic void insertAt(ASTNode node, int index, TextEditGroup editGroup) {", "+\t\tif (node == null) { ", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tRewriteEvent event= getEvent().insert(node, index);", "+\t\tif (isInsertBoundToPreviousByDefault(node)) {", "+\t\t\tgetRewriteStore().setInsertBoundToPrevious(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ef9b4040103f2bdb65ecd1fe7e207d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewriter.java", "commitBeforeChange": "f5b5b884f036b9e618a06dde165cd3edcb93e386", "commitAfterChange": "c01c58991465c08e9a09aa1864f2ccc8c3d7c124", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void remove(ASTNode nodeToRemove, TextEditGroup editGroup)", "signatureAfterChange": " \tpublic void remove(ASTNode node, TextEditGroup editGroup)", "diff": ["-\tpublic void remove(ASTNode nodeToRemove, TextEditGroup editGroup) {", "-\t\tRewriteEvent event= getEvent().removeEntry(nodeToRemove);", "+\tpublic void remove(ASTNode node, TextEditGroup editGroup) {", "+\t\tif (node == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tRewriteEvent event= getEvent().removeEntry(node);"]}], "num": 6682}