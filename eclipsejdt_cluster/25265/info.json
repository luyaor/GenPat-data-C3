{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c39cb0d0d70f89d7a9dea3cd38b2c8eb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5889e3250d5abacab4d696ccfc82c309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected int matchLevel(ImportReference importRef)", "signatureAfterChange": "  protected int matchLevel(ImportReference importRef)", "diff": ["-\t\t\t\tif (CharOperation.prefixEquals(patternName, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "+\t\t\t\tif (CharOperation.prefixEquals(patternName, qualifiedTypeName, this.isCaseSensitive)) return POSSIBLE_MATCH;", "-\t\t\t\tif (CharOperation.match(patternName, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "+\t\t\t\tif (CharOperation.match(patternName, qualifiedTypeName, this.isCaseSensitive)) return POSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0d19bb5cc9873339c14a07df55da58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "commitAfterChange": "57e404e2daf7d7238f36a94c96ffb7a2def97b98", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected int matchLevel(ImportReference importRef)", "signatureAfterChange": "  protected int matchLevel(ImportReference importRef)", "diff": ["-\t\tchar[] pattern = this.pattern.simpleName == null", "+\t\tchar[] patternName = this.pattern.simpleName == null", "-\t\t\t\tif (CharOperation.prefixEquals(pattern, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "+\t\t\t\tif (CharOperation.prefixEquals(patternName, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "-\t\t\t\tif (CharOperation.match(pattern, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "+\t\t\t\tif (CharOperation.match(patternName, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;"]}], "num": 25265}