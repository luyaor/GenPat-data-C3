{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed65e823e8ce8999b6ea2c82edd1517d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035ae21ec45d1b9d69e6c775fad7c1a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "7935d7046a5948ba0caaa49b731ab944081ed079", "commitAfterChange": "867dd152ebfa0e20933236e2a9ac1203eb8cefb2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public int nullStatus(FlowInfo flowInfo, FlowContext flowContext)", "signatureAfterChange": "  public int nullStatus(FlowInfo flowInfo, FlowContext flowContext)", "diff": ["-\t\tif ((this.resolvedType.tagBits & TagBits.AnnotationNonNull) != 0)", "-\t\t\treturn FlowInfo.NON_NULL;", "-\t\telse if ((this.resolvedType.tagBits & TagBits.AnnotationNullable) != 0)", "-\t\t\treturn FlowInfo.POTENTIALLY_NULL;", "+\t\treturn FlowInfo.tagBitsToNullStatus(this.resolvedType.tagBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba40be2ed5a125a6040aa27d1b6515d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "9c5c069c4ddd977815302e00ff7a4760365b1a17", "commitAfterChange": "2070676b1e20c45846e614809eff55257373d539", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate static int computeNullProblemSeverity(long requiredBits, long providedBits, int nullStatus)", "signatureAfterChange": "  \tprivate static int computeNullProblemSeverity(long requiredBits, long providedBits, int nullStatus)", "diff": ["+\t\t\tif (requiredBits == TagBits.AnnotationNonNull && nullStatus == FlowInfo.NON_NULL) {", "+\t\t\t\treturn 0; // OK by flow analysis", "+\t\t\t}", "-\t\t\t\tif (requiredBits == TagBits.AnnotationNonNull && nullStatus == FlowInfo.NON_NULL) {", "-\t\t\t\t\treturn 0; // OK by flow analysis", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e2c0abf49e3b4665212bc25ee8c1c2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "dc04cc3af6415e31629b43b683998ef4771a1c6c", "commitAfterChange": "b8f31731e75965ced53a2b2bb7747f2f3f0bdc77", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-        \tif ((this.descriptor.returnType.tagBits & TagBits.AnnotationNonNull) != 0) {", "+        \tif (!this.binding.isConstructor() && (this.descriptor.returnType.tagBits & TagBits.AnnotationNonNull) != 0) {", "+        \t\t// since constructors never return null we don't have to check those anyway."]}], "num": 44690}