{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e9c89c09f1f1eefa7dbe1c595f4a58e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ada338e665aa1b572684f76dc8322a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 1153, "methodNumberAfterChange": 1153, "signatureBeforeChange": " public void test1124()", "signatureAfterChange": " public void test1124()", "diff": ["-\t\t\"1. WARNING in X.java (at line 7)\\n\" +", "-\t\t\"\tprivate final T theGenericThing;\\n\" +", "-\t\t\"\t                ^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"The field X<T>.theGenericThing is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 13)\\n\" +", "+\t\t\"1. WARNING in X.java (at line 13)\\n\" +", "-\t\t\"3. WARNING in X.java (at line 15)\\n\" +", "+\t\t\"2. WARNING in X.java (at line 15)\\n\" +", "-\t\t\"4. WARNING in X.java (at line 15)\\n\" +", "+\t\t\"3. WARNING in X.java (at line 15)\\n\" +", "-\t\t\"5. ERROR in X.java (at line 19)\\n\" +", "+\t\t\"4. ERROR in X.java (at line 19)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a814480b36f1e49f48222ab4b854cf3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "16dca0cdbe17832dfb29f0072e09feca8f8a7af6", "commitAfterChange": "eb9694e0519c131ba8708de11ae2ad1c0157552f", "methodNumberBeforeChange": 549, "methodNumberAfterChange": 549, "signatureBeforeChange": " \tpublic void test0545()", "signatureAfterChange": " \tpublic void test0545()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tm3((X2) m());  // A<Object>.m() --> X<? extends Object> - cannot cast to X2\\n\" + ", "-\t\t\t\"\t   ^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The cast from X<capture-of ? extends Object> to X2 is actually checking against the erased type X2\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 21)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 29)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 29)\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 30)\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 30)\\n\" + "]}], "num": 48769}