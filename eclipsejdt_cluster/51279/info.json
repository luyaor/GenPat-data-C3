{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5903e43f4bd52be9e68d931fa24f609a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4868129188047816b42006989f5b6233", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " protected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\tFormatJavadocReference reference = receiver == null", "-\t\t? new FormatJavadocReference(this.memberStart, this.scanner.getCurrentTokenEndPosition())", "-\t\t: new FormatJavadocReference(((FormatJavadocReference) receiver).sourceStart, this.scanner.getCurrentTokenEndPosition());", "+\tint start = receiver == null ? this.memberStart : ((FormatJavadocReference) receiver).sourceStart;", "+\tint lineStart = this.scanner.getLineNumber(start);", "+\tFormatJavadocReference reference = new FormatJavadocReference(start, this.scanner.getCurrentTokenEndPosition(), lineStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ef205cb762ce5f2c72877905e9706f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "49c7e567a30e3d9cc1c4880ba35031661d2a5415", "commitAfterChange": "c9d2c7d4276b8b0f65a3b8bbfa4009e8632940f9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " protected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-", "-\t// Get intermediate arguments positions", "-\tlong[] positions = null;", "-\tif (arguments != null) {", "-\t\tint size = arguments.size();", "-\t\tpositions = new long[size];", "-\t\tfor (int i=0; i<size; i++) {", "-\t\t\tFormatJavadocReference reference = (FormatJavadocReference) arguments.get(i);", "-\t\t\tpositions[i] = (((long) reference.sourceStart) << 32) + reference.sourceEnd;", "-\t\t}", "-\t}", "-", "-\t// Build the node", "-\tFormatJavadocReference reference = new FormatJavadocReference(start, this.scanner.getCurrentTokenEndPosition(), lineStart);", "-\treference.positions = positions;", "-\treturn reference;", "+\treturn new FormatJavadocReference(start, this.scanner.getCurrentTokenEndPosition(), lineStart);"]}], "num": 51279}