{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b26c7c481b02259020e115d0e1b29d7f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d5bb9b07f4e5c446220c59f70b9bd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "5333a8d6e234b4d5bbcbee365cfa39aafade1032", "commitAfterChange": "9d00e6aaf0f2f4598b676da2bb31ba68b6d40cc8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location)", "signatureAfterChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location, BlockScope locationScope)", "diff": ["-public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location) {", "+public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location, BlockScope locationScope) {", "-\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, location);", "+\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, location, locationScope);", "+\t\t// try to improve info if a close() inside finally was observed:", "+\t\tif (locationScope != null) // only check at method exit points", "+\t\t\tstatus = locationScope.mergeCloseStatus(status, trackingVar.binding, this);", "-\t\t\tif (location == null) {", "-\t\t\t\t// definitely done with this trackingVar, remove it", "-\t\t\t\tthis.trackingVariables.remove(trackingVar);", "-\t\t\t\ti--; // ... but don't disturb the enclosing loop.", "-\t\t\t}", "+\tif (location == null) {", "+\t\t// when leaving this block dispose off all tracking variables:", "+\t\tfor (int i=0; i<this.localIndex; i++)", "+\t\t\tthis.locals[i].closeTracker = null;\t\t", "+\t\tthis.trackingVariables = null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c59fc541defef5b00de9f0b059a2fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location, BlockScope locationScope)", "signatureAfterChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location, BlockScope locationScope)", "diff": ["-public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location, BlockScope locationScope) {", "+public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location, BlockScope locationScope) {", "-\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, location, locationScope);", "+\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, flowContext, location, locationScope);", "-\t\tif (location != null && trackingVar.originalBinding != null && flowInfo.isDefinitelyNull(trackingVar.originalBinding))", "-\t\t\tcontinue; // reporting against a specific location, resource is null at this flow, don't complain", "-\t\t", "+\t\tif (location != null && trackingVar.hasDefinitelyNoResource(flowInfo)) {", "+\t\t\tcontinue; // reporting against a specific location, there is no resource at this flow, don't complain", "+\t\t}", "+", "+\t\tif (location != null && flowContext != null && flowContext.recordExitAgainstResource(this, flowInfo, trackingVar, location)) {", "+\t\t\tcontinue; // handled by the flow context", "+\t\t}", "+"]}], "num": 42139}