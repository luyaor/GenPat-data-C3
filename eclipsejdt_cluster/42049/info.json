{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fce0dac0cdff42b92231d4903199c7bf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14324bb27833dbd6c10fab9a66c832da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "be6a57f9d676bfd0ccdc79963ab2c8b8c692c4c8", "commitAfterChange": "bae8ac2b0f4b4d5d0db46dde8468bb2c22e17edf", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tMap previousContainerValues = (Map)JavaModelManager.getJavaModelManager().previousSessionContainers.get(affectedProject);", "-\t\t\t\tif (previousContainerValues != null){", "-\t\t\t\t\tIClasspathContainer previousContainer = (IClasspathContainer)previousContainerValues.get(containerPath);", "-\t\t\t\t\tif (previousContainer != null) {", "-\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "-\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\t\t\t\tbuffer.append(\"CPContainer INIT - reentering access to project container during its initialization, will see previous value\\n\"); //$NON-NLS-1$ ", "-\t\t\t\t\t\t\tbuffer.append(\"\tproject: \" + affectedProject.getElementName() + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\t\t\tbuffer.append(\"\tcontainer path: \" + containerPath + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\t\t\tbuffer.append(\"\tprevious value: \"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tbuffer.append(previousContainer.getDescription());", "-\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tIClasspathEntry[] entries = previousContainer.getClasspathEntries();", "-\t\t\t\t\t\t\tif (entries != null){", "-\t\t\t\t\t\t\t\tfor (int j = 0; j < entries.length; j++){", "-\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\tbuffer.append(entries[j]); ", "-\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbuffer.append(\" \t}\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(buffer.toString());", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(affectedProject, containerPath, previousContainer); ", "-\t\t\t\t\t}", "-\t\t\t\t\toldContainer = null; //33695 - cannot filter out restored container, must update affected project to reset cached CP", "-\t\t\t\t} else {", "+//\t\t\t\tMap previousContainerValues = (Map)JavaModelManager.getJavaModelManager().previousSessionContainers.get(affectedProject);", "+//\t\t\t\tif (previousContainerValues != null){", "+//\t\t\t\t\tIClasspathContainer previousContainer = (IClasspathContainer)previousContainerValues.get(containerPath);", "+//\t\t\t\t\tif (previousContainer != null) {", "+//\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+//\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+//\t\t\t\t\t\t\tbuffer.append(\"CPContainer INIT - reentering access to project container during its initialization, will see previous value\\n\"); //$NON-NLS-1$ ", "+//\t\t\t\t\t\t\tbuffer.append(\"\tproject: \" + affectedProject.getElementName() + '\\n'); //$NON-NLS-1$", "+//\t\t\t\t\t\t\tbuffer.append(\"\tcontainer path: \" + containerPath + '\\n'); //$NON-NLS-1$", "+//\t\t\t\t\t\t\tbuffer.append(\"\tprevious value: \"); //$NON-NLS-1$", "+//\t\t\t\t\t\t\tbuffer.append(previousContainer.getDescription());", "+//\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "+//\t\t\t\t\t\t\tIClasspathEntry[] entries = previousContainer.getClasspathEntries();", "+//\t\t\t\t\t\t\tif (entries != null){", "+//\t\t\t\t\t\t\t\tfor (int j = 0; j < entries.length; j++){", "+//\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\"); //$NON-NLS-1$", "+//\t\t\t\t\t\t\t\t\tbuffer.append(entries[j]); ", "+//\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "+//\t\t\t\t\t\t\t\t}", "+//\t\t\t\t\t\t\t}", "+//\t\t\t\t\t\t\tbuffer.append(\" \t}\"); //$NON-NLS-1$", "+//\t\t\t\t\t\t\tUtil.verbose(buffer.toString());", "+//\t\t\t\t\t\t}", "+//\t\t\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(affectedProject, containerPath, previousContainer); ", "+//\t\t\t\t\t}", "+//\t\t\t\t\toldContainer = null; //33695 - cannot filter out restored container, must update affected project to reset cached CP", "+//\t\t\t\t} else {", "-\t\t\t\t}", "+//\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eea9d109a2632fd7cb8f898eba8b64f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "81760d211469bf12100fd76e7231799f80190c5f", "commitAfterChange": "d3721d56cc1a3428241d332af8c31ddc07515e58", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void acceptMatch(String relativePath, String containerPath, char separator, SearchPattern pattern, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope)", "signatureAfterChange": " public void acceptMatch(String relativePath, String containerPath, char separator, SearchPattern pattern, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope)", "diff": ["+\tacceptMatch(relativePath, containerPath, separator, pattern, requestor, participant, scope, null);", "+}", "-\t\tif (scope.encloses(documentPath))"]}], "num": 42049}