{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bfa54c223f24257b5c1c838a4ca93b6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4589609d5cd394fe04a391d8358092d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/DefaultJavaElementComparator.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate String buildSignature(Name name)", "signatureAfterChange": " \t \tprivate String buildSignature(Name name)", "diff": ["-\t\t} else {", "-\t\t\tQualifiedName qualifiedName = (QualifiedName) name;", "-\t\t\treturn buildSignature(qualifiedName.getQualifier()) + \".\" + buildSignature(qualifiedName.getName()); //$NON-NLS-1$", "+\t\tQualifiedName qualifiedName = (QualifiedName) name;", "+\t\treturn buildSignature(qualifiedName.getQualifier()) + \".\" + buildSignature(qualifiedName.getName()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00f3cb17fcfe6e56ef5070fbe44eb12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tprivate String getTypeNameFrom(Type type)", "signatureAfterChange": "  \tprivate String getTypeNameFrom(Type type)", "diff": ["-\t\t\tcase ASTNode.PACKAGE_QUALIFIED_TYPE :", "-\t\t\t\tPackageQualifiedType packageQualifiedType = (PackageQualifiedType) type;", "-\t\t\t\treturn packageQualifiedType.getName().getIdentifier();", "+\t\t\tcase ASTNode.NAME_QUALIFIED_TYPE :", "+\t\t\t\tNameQualifiedType nameQualifiedType = (NameQualifiedType) type;", "+\t\t\t\treturn nameQualifiedType.getName().getIdentifier();"]}], "num": 351}