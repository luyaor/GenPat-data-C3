{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "424519d36cf80c61faa4fc1d69f077d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3695f6f1c7fa62f158c4e81ea8ff7213", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "e1a4dd76a1096e4a9ca316a8229a1b7d5fbaaa3a", "commitAfterChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "signatureAfterChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "diff": ["-", "-\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_VARIABLE)", "-\t\t\treturn entry;", "-", "-\t\tIPath resolvedPath = JavaCore.getResolvedVariablePath(entry.getPath());", "-\t\tif (resolvedPath == null)", "-\t\t\treturn null;", "-", "-\t\tObject target = JavaModel.getTarget(resolvedPath, false);", "-\t\tif (target == null)", "-\t\t\treturn null;", "-", "-\t\t// inside the workspace", "-\t\tif (target instanceof IResource) {", "-\t\t\tIResource resolvedResource = (IResource) target;", "-\t\t\tswitch (resolvedResource.getType()) {", "-", "-\t\t\t\tcase IResource.PROJECT :", "-\t\t\t\t\t// internal project", "-\t\t\t\t\treturn JavaCore.newProjectEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.combineAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t\tcase IResource.FILE :", "-\t\t\t\t\t// internal binary archive", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t\tcase IResource.FOLDER :", "-\t\t\t\t\t// internal binary folder", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t}", "-\t\t}", "-\t\tif (target instanceof File) {", "-\t\t\tFile externalFile = JavaModel.getFile(target);", "-\t\t\tif (externalFile != null) {", "-\t\t\t\t// external binary archive", "-\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\tentry.isExported());", "-\t\t\t} else { ", "-\t\t\t\t// non-existing file", "-\t\t\t\tif (resolvedPath.isAbsolute()){", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} ", "-\t\treturn null;", "+\t\treturn JavaModelManager.getJavaModelManager().getResolvedClasspathEntry(entry, false/*don't use previous session value*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "605c7bff71514bcba2ad04c557ebb29c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "fbf0909c10f2ace01461d4ca2e7f7ef5d34ed6fa", "commitAfterChange": "34f79b507663962f5a8b34c6546e7cf80423bb0b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "signatureAfterChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "diff": ["-", "-\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_VARIABLE)", "-\t\t\treturn entry;", "-", "-\t\tIPath resolvedPath = JavaCore.getResolvedVariablePath(entry.getPath());", "-\t\tif (resolvedPath == null)", "-\t\t\treturn null;", "-", "-\t\tObject target = JavaModel.getTarget(resolvedPath, false);", "-\t\tif (target == null)", "-\t\t\treturn null;", "-", "-\t\t// inside the workspace", "-\t\tif (target instanceof IResource) {", "-\t\t\tIResource resolvedResource = (IResource) target;", "-\t\t\tswitch (resolvedResource.getType()) {", "-", "-\t\t\t\tcase IResource.PROJECT :", "-\t\t\t\t\t// internal project", "-\t\t\t\t\treturn JavaCore.newProjectEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.combineAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t\tcase IResource.FILE :", "-\t\t\t\t\t// internal binary archive", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t\tcase IResource.FOLDER :", "-\t\t\t\t\t// internal binary folder", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t}", "-\t\t}", "-\t\tif (target instanceof File) {", "-\t\t\tFile externalFile = JavaModel.getFile(target);", "-\t\t\tif (externalFile != null) {", "-\t\t\t\t// external binary archive", "-\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\tentry.isExported());", "-\t\t\t} else { ", "-\t\t\t\t// non-existing file", "-\t\t\t\tif (resolvedPath.isAbsolute()){", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\tresolvedPath,", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "-\t\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\t\tentry.getExtraAttributes(),", "-\t\t\t\t\t\t\tentry.isExported());", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} ", "-\t\treturn null;", "+\t\treturn JavaModelManager.getJavaModelManager().getResolvedClasspathEntry(entry, false/*don't use previous session value*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d03566893ea678e52a0d9412029a35b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "34f79b507663962f5a8b34c6546e7cf80423bb0b", "commitAfterChange": "0b3c372cd8063a26d1eaf5c9a3c9657a40eb4a99", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "signatureAfterChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "diff": ["-\t\treturn JavaModelManager.getJavaModelManager().getResolvedClasspathEntry(entry, false/*don't use previous session value*/);", "+", "+\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_VARIABLE)", "+\t\t\treturn entry;", "+", "+\t\tIPath resolvedPath = JavaCore.getResolvedVariablePath(entry.getPath());", "+\t\tif (resolvedPath == null)", "+\t\t\treturn null;", "+", "+\t\tObject target = JavaModel.getTarget(resolvedPath, false);", "+\t\tif (target == null)", "+\t\t\treturn null;", "+", "+\t\t// inside the workspace", "+\t\tif (target instanceof IResource) {", "+\t\t\tIResource resolvedResource = (IResource) target;", "+\t\t\tswitch (resolvedResource.getType()) {", "+", "+\t\t\t\tcase IResource.PROJECT :", "+\t\t\t\t\t// internal project", "+\t\t\t\t\treturn JavaCore.newProjectEntry(", "+\t\t\t\t\t\t\tresolvedPath,", "+\t\t\t\t\t\t\tentry.getAccessRules(),", "+\t\t\t\t\t\t\tentry.combineAccessRules(),", "+\t\t\t\t\t\t\tentry.getExtraAttributes(),", "+\t\t\t\t\t\t\tentry.isExported());", "+\t\t\t\tcase IResource.FILE :", "+\t\t\t\t\t// internal binary archive", "+\t\t\t\t\treturn JavaCore.newLibraryEntry(", "+\t\t\t\t\t\t\tresolvedPath,", "+\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "+\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "+\t\t\t\t\t\t\tentry.getAccessRules(),", "+\t\t\t\t\t\t\tentry.getExtraAttributes(),", "+\t\t\t\t\t\t\tentry.isExported());", "+\t\t\t\tcase IResource.FOLDER :", "+\t\t\t\t\t// internal binary folder", "+\t\t\t\t\treturn JavaCore.newLibraryEntry(", "+\t\t\t\t\t\t\tresolvedPath,", "+\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "+\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "+\t\t\t\t\t\t\tentry.getAccessRules(),", "+\t\t\t\t\t\t\tentry.getExtraAttributes(),", "+\t\t\t\t\t\t\tentry.isExported());", "+\t\t\t}", "+\t\t}", "+\t\tif (target instanceof File) {", "+\t\t\tFile externalFile = JavaModel.getFile(target);", "+\t\t\tif (externalFile != null) {", "+\t\t\t\t// external binary archive", "+\t\t\t\treturn JavaCore.newLibraryEntry(", "+\t\t\t\t\t\tresolvedPath,", "+\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "+\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "+\t\t\t\t\t\tentry.getAccessRules(),", "+\t\t\t\t\t\tentry.getExtraAttributes(),", "+\t\t\t\t\t\tentry.isExported());", "+\t\t\t} else { ", "+\t\t\t\t// non-existing file", "+\t\t\t\tif (resolvedPath.isAbsolute()){", "+\t\t\t\t\treturn JavaCore.newLibraryEntry(", "+\t\t\t\t\t\t\tresolvedPath,", "+\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),", "+\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()),", "+\t\t\t\t\t\t\tentry.getAccessRules(),", "+\t\t\t\t\t\t\tentry.getExtraAttributes(),", "+\t\t\t\t\t\t\tentry.isExported());", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} ", "+\t\treturn null;"]}], "num": 15596}