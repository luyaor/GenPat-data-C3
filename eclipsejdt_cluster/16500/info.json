{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14d9f1370baa1776728d423ef85655be", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "052a974c47ebc936b1d542af4bab81ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void completeCodeAttributeForSyntheticMethod( \t\tboolean hasExceptionHandlers, \t\tSyntheticMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "signatureAfterChange": " \tpublic void completeCodeAttributeForSyntheticMethod( \t\tboolean hasExceptionHandlers, \t\tSyntheticMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "diff": ["-\t\tif (codeStream.generateLocalVariableTableAttributes) {", "+\t\tif ((this.produceDebugAttributes & CompilerOptions.Vars) != 0) {", "+\t\t", "+\t\tif (this.generateStackMapTable) {", "+\t\t\tint numberOfFrames = ((StackMapFrameCodeStream) codeStream).framesCounter;", "+\t\t\tif (numberOfFrames >=2) {", "+\t\t\t\t// add the stack map table attribute", "+\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\t\tresizeContents(8);", "+\t\t\t\t}", "+\t\t\t\tint stackMapTableAttributeNameIndex =", "+\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.StackMapTableName);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (stackMapTableAttributeNameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) stackMapTableAttributeNameIndex;", "+\t\t\t\t", "+\t\t\t\tint stackMapTableAttributeLengthOffset = localContentsOffset;", "+\t\t\t\t// generate the attribute", "+\t\t\t\tlocalContentsOffset += 4;", "+\t\t\t\tnumberOfFrames = 0;", "+\t\t\t\tint numberOfFramesOffset = localContentsOffset;", "+\t\t\t\tlocalContentsOffset += 2;", "+\t\t\t\t// generate all frames", "+\t\t\t\tStackMapFrame currentFrame = ((StackMapFrameCodeStream) codeStream).frames;", "+\t\t\t\twhile (currentFrame.prevFrame != null) {", "+\t\t\t\t\tcurrentFrame = currentFrame.prevFrame;", "+\t\t\t\t}", "+\t\t\t\tcurrentFrame = currentFrame.nextFrame;", "+\t\t\t\twhile (currentFrame != null && currentFrame.pc < code_length) {", "+\t\t\t\t\t// generate current frame", "+\t\t\t\t\t// need to find differences between the current frame and the previous frame", "+\t\t\t\t\tnumberOfFrames++;", "+\t\t\t\t\tint offsetDelta = currentFrame.getOffsetDelta();", "+\t\t\t\t\tswitch (currentFrame.getFrameType()) {", "+\t\t\t\t\t\tcase StackMapFrame.APPEND_FRAME :", "+\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tint numberOfDifferentLocals = currentFrame.numberOfDifferentLocals();", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 + numberOfDifferentLocals);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tint index = currentFrame.getIndexOfDifferentLocals(numberOfDifferentLocals);", "+\t\t\t\t\t\t\tint numberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\tfor (int i = index; i < currentFrame.locals.length && numberOfDifferentLocals > 0; i++) {", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(6);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tnumberOfDifferentLocals--;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME :", "+\t\t\t\t\t\t\tif (localContentsOffset + 1 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(1);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME_EXTENDED :", "+\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 251;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.CHOP_FRAME :", "+\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tnumberOfDifferentLocals = -currentFrame.numberOfDifferentLocals();", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 - numberOfDifferentLocals);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS :", "+\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta + 64);", "+\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "+\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS_EXTENDED :", "+\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(6);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 247;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "+\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t// FULL_FRAME", "+\t\t\t\t\t\t\tif (localContentsOffset + 5 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(5);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 255;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tint numberOfLocalOffset = localContentsOffset;", "+\t\t\t\t\t\t\tlocalContentsOffset += 2; // leave two spots for number of locals", "+\t\t\t\t\t\t\tint numberOfLocalEntries = 0;", "+\t\t\t\t\t\t\tnumberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\tint numberOfEntries = 0;", "+\t\t\t\t\t\t\tint localsLength = currentFrame.locals == null ? 0 : currentFrame.locals.length;", "+\t\t\t\t\t\t\tfor (int i = 0; i < localsLength && numberOfLocalEntries < numberOfLocals; i++) {", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tnumberOfLocalEntries++;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tnumberOfEntries++;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset] = (byte) numberOfEntries;", "+\t\t\t\t\t\t\tint numberOfStackItems = currentFrame.numberOfStackItems;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (numberOfStackItems >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) numberOfStackItems;", "+\t\t\t\t\t\t\tfor (int i = 0; i < numberOfStackItems; i++) {", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[i];", "+\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tcurrentFrame = currentFrame.nextFrame;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tthis.contents[numberOfFramesOffset++] = (byte) (numberOfFrames >> 8);", "+\t\t\t\tthis.contents[numberOfFramesOffset] = (byte) numberOfFrames;", "+", "+\t\t\t\tint attributeLength = localContentsOffset - stackMapTableAttributeLengthOffset - 4;", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 24);", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 16);", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 8);", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset] = (byte) attributeLength;", "+\t\t\t\tattributeNumber++;", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0831456faec3c59c59d92a7b4180b193", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "diff": ["-\t\tif (codeStream.generateLocalVariableTableAttributes) {", "+\t\tif ((this.produceDebugAttributes & CompilerOptions.Vars) != 0) {", "+\t\t", "+\t\tif (this.generateStackMapTable) {", "+\t\t\tint numberOfFrames = ((StackMapFrameCodeStream) codeStream).framesCounter;", "+\t\t\tif (numberOfFrames >=2) {", "+\t\t\t\t// add the stack map table attribute", "+\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\t\tresizeContents(8);", "+\t\t\t\t}", "+\t\t\t\tint stackMapTableAttributeNameIndex =", "+\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.StackMapTableName);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (stackMapTableAttributeNameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) stackMapTableAttributeNameIndex;", "+\t\t\t\t", "+\t\t\t\tint stackMapTableAttributeLengthOffset = localContentsOffset;", "+\t\t\t\t// generate the attribute", "+\t\t\t\tlocalContentsOffset += 4;", "+\t\t\t\tnumberOfFrames = 0;", "+\t\t\t\tint numberOfFramesOffset = localContentsOffset;", "+\t\t\t\tlocalContentsOffset += 2;", "+\t\t\t\t// generate all frames", "+\t\t\t\tStackMapFrame currentFrame = ((StackMapFrameCodeStream) codeStream).frames;", "+\t\t\t\twhile (currentFrame.prevFrame != null) {", "+\t\t\t\t\tcurrentFrame = currentFrame.prevFrame;", "+\t\t\t\t}", "+\t\t\t\tcurrentFrame = currentFrame.nextFrame;", "+\t\t\t\twhile (currentFrame != null && currentFrame.pc < code_length) {", "+\t\t\t\t\t// generate current frame", "+\t\t\t\t\t// need to find differences between the current frame and the previous frame", "+\t\t\t\t\tnumberOfFrames++;", "+\t\t\t\t\tint offsetDelta = currentFrame.getOffsetDelta();", "+\t\t\t\t\tswitch (currentFrame.getFrameType()) {", "+\t\t\t\t\t\tcase StackMapFrame.APPEND_FRAME :", "+\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tint numberOfDifferentLocals = currentFrame.numberOfDifferentLocals();", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 + numberOfDifferentLocals);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tint index = currentFrame.getIndexOfDifferentLocals(numberOfDifferentLocals);", "+\t\t\t\t\t\t\tint numberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\tfor (int i = index; i < currentFrame.locals.length && numberOfDifferentLocals > 0; i++) {", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(6);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tnumberOfDifferentLocals--;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME :", "+\t\t\t\t\t\t\tif (localContentsOffset + 1 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(1);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME_EXTENDED :", "+\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 251;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.CHOP_FRAME :", "+\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tnumberOfDifferentLocals = -currentFrame.numberOfDifferentLocals();", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 - numberOfDifferentLocals);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS :", "+\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta + 64);", "+\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "+\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS_EXTENDED :", "+\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(6);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 247;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "+\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t// FULL_FRAME", "+\t\t\t\t\t\t\tif (localContentsOffset + 5 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(5);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 255;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\tint numberOfLocalOffset = localContentsOffset;", "+\t\t\t\t\t\t\tlocalContentsOffset += 2; // leave two spots for number of locals", "+\t\t\t\t\t\t\tint numberOfLocalEntries = 0;", "+\t\t\t\t\t\t\tnumberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\tint numberOfEntries = 0;", "+\t\t\t\t\t\t\tint localsLength = currentFrame.locals == null ? 0 : currentFrame.locals.length;", "+\t\t\t\t\t\t\tfor (int i = 0; i < localsLength && numberOfLocalEntries < numberOfLocals; i++) {", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tnumberOfLocalEntries++;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tnumberOfEntries++;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset] = (byte) numberOfEntries;", "+\t\t\t\t\t\t\tint numberOfStackItems = currentFrame.numberOfStackItems;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (numberOfStackItems >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) numberOfStackItems;", "+\t\t\t\t\t\t\tfor (int i = 0; i < numberOfStackItems; i++) {", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[i];", "+\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tcurrentFrame = currentFrame.nextFrame;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tthis.contents[numberOfFramesOffset++] = (byte) (numberOfFrames >> 8);", "+\t\t\t\tthis.contents[numberOfFramesOffset] = (byte) numberOfFrames;", "+", "+\t\t\t\tint attributeLength = localContentsOffset - stackMapTableAttributeLengthOffset - 4;", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 24);", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 16);", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 8);", "+\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset] = (byte) attributeLength;", "+\t\t\t\tattributeNumber++;", "+\t\t\t}", "+\t\t}", "+\t\t"]}], "num": 16500}