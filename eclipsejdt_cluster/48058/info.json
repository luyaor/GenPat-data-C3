{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4d4e602bc258e51b2196486c4962e7c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b37ebcdf9e3a1ca22e2978e5f282a7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "9a8c0b7f51c1a0b9d37b7d38acb4d0261e31390a", "commitAfterChange": "278bd24e5aaae65022c9b0e7c10b22e5ffa034b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": " \tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, IRegion[] regions)", "diff": ["-\tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, int offset, int length) {", "+\tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, IRegion[] regions) {", "-\t\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length, null);", "+\t\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, null);", "+\t\t\t", "+\t\t\tIRegion coveredRegion = getCoveredRegion(regions);", "+\t\t\tint offset = coveredRegion.getOffset();", "+\t\t\tint length = coveredRegion.getLength();", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8fbb7e455c136d835d6860f2517b191", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "9a8c0b7f51c1a0b9d37b7d38acb4d0261e31390a", "commitAfterChange": "278bd24e5aaae65022c9b0e7c10b22e5ffa034b6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, IRegion[] regions)", "diff": ["-\tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length) {", "+\tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, IRegion[] regions) {", "+\t\t", "+\t\tIRegion coveredRegion = getCoveredRegion(regions);", "+\t\tint offset = coveredRegion.getOffset();", "+\t\tint length = coveredRegion.getLength();", "+\t\t", "-\t\t\t\t\t\treturn formatComment(K_MULTI_LINE_COMMENT, source, indentationLevel, lineSeparator, offset, length);", "+\t\t\t\t\t\treturn formatComment(K_MULTI_LINE_COMMENT, source, indentationLevel, lineSeparator, regions);", "-\t\t\t\t\t\treturn formatComment(K_SINGLE_LINE_COMMENT, source, indentationLevel, lineSeparator, offset, length);", "+\t\t\t\t\t\treturn formatComment(K_SINGLE_LINE_COMMENT, source, indentationLevel, lineSeparator, regions);", "-\t\t\t\t\t\treturn formatComment(K_JAVA_DOC, source, indentationLevel, lineSeparator, offset, length);", "+\t\t\t\t\t\treturn formatComment(K_JAVA_DOC, source, indentationLevel, lineSeparator, regions);", "-\t\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, offset, length);", "+\t\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, regions);", "-\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, offset, length);", "+\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, regions);", "-\t\t\treturn internalFormatStatements(source, indentationLevel, lineSeparator, constructorDeclaration, offset, length);", "+\t\t\treturn internalFormatStatements(source, indentationLevel, lineSeparator, constructorDeclaration, regions);", "-\t\treturn formatCompilationUnit(source, indentationLevel, lineSeparator, offset, length);", "+\t\treturn formatCompilationUnit(source, indentationLevel, lineSeparator, regions);", "+\t}"]}], "num": 48058}