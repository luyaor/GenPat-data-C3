{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a954ca3e98452c3dd7967c641d6d5611", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58219903c916a7b72350196c5d50e282", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": " protected void pushOnExpressionStack(Expression expr)", "signatureAfterChange": " protected void pushOnExpressionStack(Expression expr)", "diff": ["-\t\texpressionStack[++expressionPtr] = expr;", "+\t\tthis.expressionStack[++this.expressionPtr] = expr;", "-\t\t//expressionPtr is correct ", "-\t\tint oldStackLength = expressionStack.length;", "-\t\tExpression[] oldStack = expressionStack;", "-\t\texpressionStack = new Expression[oldStackLength + ExpressionStackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, expressionStack, 0, oldStackLength);", "-\t\texpressionStack[expressionPtr] = expr;", "+\t\t//this.expressionPtr is correct ", "+\t\tint oldStackLength = this.expressionStack.length;", "+\t\tExpression[] oldStack = this.expressionStack;", "+\t\tthis.expressionStack = new Expression[oldStackLength + ExpressionStackIncrement];", "+\t\tSystem.arraycopy(oldStack, 0, this.expressionStack, 0, oldStackLength);", "+\t\tthis.expressionStack[this.expressionPtr] = expr;", "-\t\texpressionLengthStack[++expressionLengthPtr] = 1;", "+\t\tthis.expressionLengthStack[++this.expressionLengthPtr] = 1;", "-\t\tint oldStackLength = expressionLengthStack.length;", "-\t\tint[] oldPos = expressionLengthStack;", "-\t\texpressionLengthStack = new int[oldStackLength + ExpressionStackIncrement];", "-\t\tSystem.arraycopy(oldPos, 0, expressionLengthStack, 0, oldStackLength);", "-\t\texpressionLengthStack[expressionLengthPtr] = 1;", "+\t\tint oldStackLength = this.expressionLengthStack.length;", "+\t\tint[] oldPos = this.expressionLengthStack;", "+\t\tthis.expressionLengthStack = new int[oldStackLength + ExpressionStackIncrement];", "+\t\tSystem.arraycopy(oldPos, 0, this.expressionLengthStack, 0, oldStackLength);", "+\t\tthis.expressionLengthStack[this.expressionLengthPtr] = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c7b45be82336dc812ed1553103d7f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "commitAfterChange": "74ba53ab0437265c5342ec723f72d2aea81fd661", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " public final void recordComment(boolean isJavadoc)", "signatureAfterChange": " public final void recordComment(boolean isJavadoc)", "diff": ["-\t\tcommentStops[++commentPtr] = isJavadoc ? currentPosition : -currentPosition;", "+\t\tthis.commentStops[++this.commentPtr] = isJavadoc ? this.currentPosition : -this.currentPosition;", "-\t\tint oldStackLength = commentStops.length;", "-\t\tint[] oldStack = commentStops;", "-\t\tcommentStops = new int[oldStackLength + 30];", "-\t\tSystem.arraycopy(oldStack, 0, commentStops, 0, oldStackLength);", "-\t\tcommentStops[commentPtr] = isJavadoc ? currentPosition : -currentPosition;", "+\t\tint oldStackLength = this.commentStops.length;", "+\t\tint[] oldStack = this.commentStops;", "+\t\tthis.commentStops = new int[oldStackLength + 30];", "+\t\tSystem.arraycopy(oldStack, 0, this.commentStops, 0, oldStackLength);", "+\t\tthis.commentStops[this.commentPtr] = isJavadoc ? this.currentPosition : -this.currentPosition;", "-\t\tint[] old = commentStarts;", "-\t\tcommentStarts = new int[oldStackLength + 30];", "-\t\tSystem.arraycopy(old, 0, commentStarts, 0, oldStackLength);", "+\t\tint[] old = this.commentStarts;", "+\t\tthis.commentStarts = new int[oldStackLength + 30];", "+\t\tSystem.arraycopy(old, 0, this.commentStarts, 0, oldStackLength);", "-\tcommentStarts[commentPtr] = startPosition;", "+\tthis.commentStarts[this.commentPtr] = this.startPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f0627fa073dffbf87b4e997f4c70ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " protected void pushOnAstStack(ASTNode node)", "signatureAfterChange": " protected void pushOnAstStack(ASTNode node)", "diff": ["-\t\tastStack[++astPtr] = node;", "+\t\tthis.astStack[++this.astPtr] = node;", "-\t\tint oldStackLength = astStack.length;", "-\t\tASTNode[] oldStack = astStack;", "-\t\tastStack = new ASTNode[oldStackLength + AstStackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, astStack, 0, oldStackLength);", "-\t\tastPtr = oldStackLength;", "-\t\tastStack[astPtr] = node;", "+\t\tint oldStackLength = this.astStack.length;", "+\t\tASTNode[] oldStack = this.astStack;", "+\t\tthis.astStack = new ASTNode[oldStackLength + AstStackIncrement];", "+\t\tSystem.arraycopy(oldStack, 0, this.astStack, 0, oldStackLength);", "+\t\tthis.astPtr = oldStackLength;", "+\t\tthis.astStack[this.astPtr] = node;", "-\t\tastLengthStack[++astLengthPtr] = 1;", "+\t\tthis.astLengthStack[++this.astLengthPtr] = 1;", "-\t\tint oldStackLength = astLengthStack.length;", "-\t\tint[] oldPos = astLengthStack;", "-\t\tastLengthStack = new int[oldStackLength + AstStackIncrement];", "-\t\tSystem.arraycopy(oldPos, 0, astLengthStack, 0, oldStackLength);", "-\t\tastLengthStack[astLengthPtr] = 1;", "+\t\tint oldStackLength = this.astLengthStack.length;", "+\t\tint[] oldPos = this.astLengthStack;", "+\t\tthis.astLengthStack = new int[oldStackLength + AstStackIncrement];", "+\t\tSystem.arraycopy(oldPos, 0, this.astLengthStack, 0, oldStackLength);", "+\t\tthis.astLengthStack[this.astLengthPtr] = 1;"]}], "num": 38048}