{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7d5107656d6e3ad9725900151d4f08e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24152eae73f24c7e714a9751b3d530ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "90bd41abb04ddc0b62ccb0ab7de7fce3bd0144f4", "commitAfterChange": "53697a294b54e063a30982cc46502c67f3f098a5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean execute() throws BuildException", "signatureAfterChange": " \tpublic boolean execute() throws BuildException", "diff": ["-\t\t\tConstructor batchCompilerConstructor = c.getConstructor(new Class[] { PrintWriter.class, Boolean.TYPE});", "-\t\t\tObject batchCompilerInstance = batchCompilerConstructor.newInstance(new Object[] {new PrintWriter(System.out), new Boolean(true)});", "+\t\t\tConstructor batchCompilerConstructor = c.getConstructor(new Class[] { PrintWriter.class, PrintWriter.class, Boolean.TYPE});", "+\t\t\tObject batchCompilerInstance = batchCompilerConstructor.newInstance(new Object[] {new PrintWriter(System.out), new PrintWriter(System.err), new Boolean(true)});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60637a70e05af8fe8c2ad8528243a91f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "09c3ccccb89d804a9183abefd56185d0d7837bc3", "commitAfterChange": "6c8a21e16cbda0092cdd37cfe45b5e7adb8a3039", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean execute() throws BuildException", "signatureAfterChange": " \tpublic boolean execute() throws BuildException", "diff": ["-\t\t\tConstructor batchCompilerConstructor = c.getConstructor(new Class[] { PrintWriter.class, PrintWriter.class, Boolean.TYPE});", "-\t\t\tObject batchCompilerInstance = batchCompilerConstructor.newInstance(new Object[] {new PrintWriter(System.out), new PrintWriter(System.err), Boolean.valueOf(true)});", "+\t\t\tConstructor batchCompilerConstructor = c.getConstructor(new Class[] { PrintWriter.class, PrintWriter.class, Boolean.TYPE, Map.class});", "+\t\t\tObject batchCompilerInstance = batchCompilerConstructor.newInstance(new Object[] {new PrintWriter(System.out), new PrintWriter(System.err), Boolean.valueOf(true), this.customDefaultOptions});"]}], "num": 61341}