{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0d0826588739b28d4cb6ccf23f0baed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1905c3cdb9a622fd192445e705bb7f85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["+ */\r", "+protected void executeOperation() throws JavaModelException {\r", "+\tbeginTask(Util.bind(\"classpath.settingOutputLocationProgress\"/*nonNLS*/), 2);\r", "+\tJavaProject project= ((JavaProject) getElementsToProcess()[0]);\r", "+\t\r", "+\tIPath oldLocation= project.getOutputLocation();\r", "+\tIPath newLocation= fOutputLocation;\r", "+\r", "+\t// see if this will cause any package fragments to be added\r", "+\tboolean deltaToFire= false;\r", "+\tJavaElementDelta delta = newJavaElementDelta();\r", "+\tVector added= determineAffectedPackageFragments(oldLocation);\r", "+\tEnumeration pkgs= added.elements();\r", "+\twhile (pkgs.hasMoreElements()) {\r", "+\t\tIPackageFragment frag= (IPackageFragment)pkgs.nextElement();\r", "+\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "+\t\tdelta.added(frag);\r", "+\t\tdeltaToFire = true;\r", "-\t */\r", "-\tprotected void executeOperation() throws JavaModelException {\r", "-\t\tbeginTask(\"Setting output location...\", 2);\r", "-\t\tJavaProject project = ((JavaProject) getElementsToProcess()[0]);\r", "-\r", "-\t\tIPath oldLocation = project.getOutputLocation();\r", "-\t\tIPath newLocation = fOutputLocation;\r", "-\r", "-\t\t// see if this will cause any package fragments to be added\r", "-\t\tboolean deltaToFire = false;\r", "-\t\tJavaElementDelta delta = newJavaElementDelta();\r", "-\t\tVector added = determineAffectedPackageFragments(oldLocation);\r", "-\t\tEnumeration pkgs = added.elements();\r", "-\t\twhile (pkgs.hasMoreElements()) {\r", "-\t\t\tIPackageFragment frag = (IPackageFragment) pkgs.nextElement();\r", "-\t\t\t((IPackageFragmentRoot) frag.getParent()).close();\r", "-\t\t\tdelta.added(frag);\r", "-\t\t\tdeltaToFire = true;\r", "-\t\t}\r", "-\r", "-\t\t// see if this will cause any package fragments to be removed\r", "-\t\tVector removed = determineAffectedPackageFragments(newLocation);\r", "-\t\tpkgs = removed.elements();\r", "-\t\twhile (pkgs.hasMoreElements()) {\r", "-\t\t\tIPackageFragment frag = (IPackageFragment) pkgs.nextElement();\r", "-\t\t\t((IPackageFragmentRoot) frag.getParent()).close();\r", "-\t\t\tdelta.removed(frag);\r", "-\t\t\tdeltaToFire = true;\r", "-\t\t}\r", "-\r", "-\t\tproject.setOutputLocation0(fOutputLocation);\r", "-\t\tif (deltaToFire) {\r", "-\t\t\taddDelta(delta);\r", "-\t\t}\r", "-\t\tworked(1);\r", "-\t\tproject.saveClasspath();\r", "-\t\tworked(1);\r", "-\r", "-\t\t// loose all built state - next build will be a full one\r", "-\t\tJavaModelManager.getJavaModelManager().setLastBuiltState(\r", "-\t\t\tproject.getProject(),\r", "-\t\t\tnull);\r", "-\t\tdone();\r", "+\t// see if this will cause any package fragments to be removed\r", "+\tVector removed= determineAffectedPackageFragments(newLocation);\r", "+\tpkgs= removed.elements();\r", "+\twhile (pkgs.hasMoreElements()) {\r", "+\t\tIPackageFragment frag= (IPackageFragment)pkgs.nextElement();\r", "+\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "+\t\tdelta.removed(frag);\r", "+\t\tdeltaToFire = true;\r", "+\t\r", "+\tproject.setOutputLocation0(fOutputLocation);\r", "+\tif (deltaToFire) {\r", "+\t\taddDelta(delta);\t\r", "+\tworked(1);\r", "+\tproject.saveClasspath();\r", "+\tworked(1);\r", "+\t// loose all built state - next build will be a full one\r", "+\tJavaModelManager.getJavaModelManager().setLastBuiltState(project.getProject(), null);\r", "+\tdone();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32212b58b4697ca3443c09171912dbf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "bbf01bd45c20dcf892a1672b9d9c504b05790a01", "commitAfterChange": "64f2a5b8a78095fa170a97cceb8e661d31b0ae71", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \tprotected void updateOutputLocation() throws JavaModelException", "signatureAfterChange": "\r \tprotected void updateOutputLocation() throws JavaModelException", "diff": ["-\t */\r", "-\tprotected void updateOutputLocation() throws JavaModelException {\r", "-\t\t\r", "-\t\tJavaProject project= ((JavaProject) getElementsToProcess()[0]);\r", "-\r", "-\t\tbeginTask(Util.bind(\"classpath.settingOutputLocationProgress\", project.getElementName()), 2); //$NON-NLS-1$\r", "-\t\t\r", "-\t\tIPath oldLocation= project.getOutputLocation();\r", "-\t\r", "-\t\t// see if this will cause any package fragments to be added\r", "-\t\tboolean deltaToFire= false;\r", "-\t\tJavaElementDelta delta = newJavaElementDelta();\r", "-\t\tArrayList added= determineAffectedPackageFragments(oldLocation);\r", "-\t\tIterator iter = added.iterator();\r", "-\t\twhile (iter.hasNext()){\r", "-\t\t\tIPackageFragment frag= (IPackageFragment)iter.next();\r", "-\t\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "-\t\t\tdelta.added(frag);\r", "-\t\t\tdeltaToFire = true;\r", "-\t\t}\r", "-\t\r", "-\t\t// see if this will cause any package fragments to be removed\r", "-\t\tArrayList removed= determineAffectedPackageFragments(this.newOutputLocation);\r", "-\t\titer = removed.iterator();\r", "-\t\twhile (iter.hasNext()){\r", "-\t\t\tIPackageFragment frag= (IPackageFragment)iter.next();\r", "-\t\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "-\t\t\tdelta.removed(frag);\r", "-\t\t\tdeltaToFire = true;\r", "-\t\t}\r", "-\t\t\r", "-\t\tproject.getJavaProjectElementInfo().setOutputLocation(this.newOutputLocation);\r", "-\t\tif (deltaToFire) {\r", "-\t\t\taddDelta(delta);\t\r", "-\t\t}\r", "-\t\tworked(1);\r", "-\t\t// .classpath file may already have been updated in #updateClasspath\r", "-\t\tthis.hasModifiedResource |= project.saveClasspath(false);\r", "-\t\tworked(1);\r", "-\t}\r", "+\tprotected void updateOutputLocation() throws JavaModelException {\r", "+\t\t\r", "+\t\tJavaProject project= ((JavaProject) getElementsToProcess()[0]);\r", "+\t\tbeginTask(Util.bind(\"classpath.settingOutputLocationProgress\", project.getElementName()), 2); //$NON-NLS-1$\r", "+\t\t\r", "+\t\tIPath oldLocation= project.getOutputLocation();\r", "+\t\r", "+\t\t// see if this will cause any package fragments to be added\r", "+\t\tboolean deltaToFire= false;\r", "+\t\tJavaElementDelta delta = newJavaElementDelta();\r", "+\t\tArrayList added= determineAffectedPackageFragments(oldLocation);\r", "+\t\tIterator iter = added.iterator();\r", "+\t\twhile (iter.hasNext()){\r", "+\t\t\tIPackageFragment frag= (IPackageFragment)iter.next();\r", "+\t\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "+\t\t\tdelta.added(frag);\r", "+\t\t\tdeltaToFire = true;\r", "+\t\t}\r", "+\t\r", "+\t\t// see if this will cause any package fragments to be removed\r", "+\t\tArrayList removed= determineAffectedPackageFragments(this.newOutputLocation);\r", "+\t\titer = removed.iterator();\r", "+\t\twhile (iter.hasNext()){\r", "+\t\t\tIPackageFragment frag= (IPackageFragment)iter.next();\r", "+\t\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "+\t\t\tdelta.removed(frag);\r", "+\t\t\tdeltaToFire = true;\r", "+\t\tproject.getJavaProjectElementInfo().setOutputLocation(this.newOutputLocation);\r", "+\t\tif (deltaToFire) {\r", "+\t\t\taddDelta(delta);\t\r", "+\t\t}\r", "+\t\tworked(1);\r"]}], "num": 9154}