{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceb86c781cbe933661af8f8d1322863a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ffd77e13005ed2a13a24f19a4cfd9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/helloworld/HelloWorldAnnotationProcessor.java", "commitBeforeChange": "f2e69392c2b77f78381f44504717309f40a69302", "commitAfterChange": "cfc6d63918bb7d5d29292fed4468743597d36bdc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void process()", "signatureAfterChange": "  \tpublic void process()", "diff": ["-\t\ttry", "-\t\t{", "-\t\t\tFiler f = _env.getFiler();", "-\t\t\tPrintWriter pw = f", "-\t\t\t\t.createSourceFile( getPackageName() + \".\" + getTypeName() ); //$NON-NLS-1$", "-\t\t\tpw.print( getCode() );", "-\t\t\tpw.close();", "+\t\tFiler f = _env.getFiler();", "+\t\tAnnotationTypeDeclaration annoDecl = (AnnotationTypeDeclaration) _env.getTypeDeclaration(HelloWorldAnnotation.class.getName());", "+\t\tCollection<Declaration> annotatedDecls = _env.getDeclarationsAnnotatedWith(annoDecl);", "+\t\ttry {", "+\t\t\tfor (Declaration annotatedDecl : annotatedDecls) {", "+\t\t\t\tString typeName = getTypeName(annotatedDecl);", "+\t\t\t\tPrintWriter writer = f.createSourceFile(", "+\t\t\t\t\t\tPACKAGENAME + \".\" + typeName);", "+\t\t\t\twriter.print(getCode(typeName));", "+\t\t\t\twriter.close();", "+\t\t\t}", "+\t\t\treportSuccess(this.getClass());", "-\t\tcatch( IOException ioe )", "-\t\t{", "-\t\t\tioe.printStackTrace();", "+\t\tcatch (NullPointerException npe) {", "+\t\t\treportError(this.getClass(), \"Could not read annotation in order to generate text file\");", "+\t\t}", "+\t\tcatch (IOException ioe) {", "+\t\t\treportError(this.getClass(), \"Could not generate text file due to IOException\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9d90c1a3f04408deedad8480ad18e93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/filegen/TextGenAnnotationProcessor.java", "commitBeforeChange": "f2e69392c2b77f78381f44504717309f40a69302", "commitAfterChange": "cfc6d63918bb7d5d29292fed4468743597d36bdc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void process()", "signatureAfterChange": " \t \tpublic void process()", "diff": ["+\t\tAnnotationTypeDeclaration annoDecl = (AnnotationTypeDeclaration) _env.getTypeDeclaration(TextGenAnnotation.class.getName());", "+\t\tCollection<Declaration> annotatedDecls = _env.getDeclarationsAnnotatedWith(annoDecl);", "-\t\t\tPrintWriter writer = f.createTextFile(", "-\t\t\t\t\tFiler.Location.CLASS_TREE, ", "-\t\t\t\t\t\"\", ", "-\t\t\t\t\tnew File(FILE_NAME), ", "-\t\t\t\t\tnull);", "-\t\t\twriter.print(TEXT);", "-\t\t\twriter.close();", "-\t\t\t", "+\t\t\tfor (Declaration annotatedDecl : annotatedDecls) {", "+\t\t\t\tTextGenAnnotation tganno = annotatedDecl.getAnnotation(TextGenAnnotation.class);", "+\t\t\t\tString fileName = tganno.value();", "+\t\t\t\tPrintWriter writer = f.createTextFile(", "+\t\t\t\t\t\tFiler.Location.CLASS_TREE, ", "+\t\t\t\t\t\t\"\", ", "+\t\t\t\t\t\tnew File(fileName), ", "+\t\t\t\t\t\tnull);", "+\t\t\t\twriter.print(TEXT);", "+\t\t\t\twriter.close();", "+\t\t\t}", "+\t\t\treportSuccess(this.getClass());", "+\t\t}", "+\t\tcatch (NullPointerException npe) {", "+\t\t\treportError(this.getClass(), \"Could not read annotation in order to generate text file\");", "-\t\t\tthrow new RuntimeException(\"Could not generate text file\",ioe);", "+\t\t\treportError(this.getClass(), \"Could not generate text file due to IOException\");"]}], "num": 16241}