{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8c16d4d4409efb0184bcca6e12e7624", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16292f74f81963faab7c639fe417b5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "1dbf45ade1eaa8473579771e92825a7887776253", "commitAfterChange": "0fb8e6d8cd5771230b88c7189dc0d95f3a5da0e3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["-\t\tASTNode previousFragment = null;", "+//\t\tASTNode previousFragment = null;", "-\t\t\t\t\t\tassertTrue(\"Reference in '\"+previousFragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassertFalse(\"Unknown reference in'\"+previousFragment+\"' should NOT be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassertFalse(this.prefix+\"Unknown reference in '\"+tagElement+\"' should NOT be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t} else if (fragment.getNodeType() == ASTNode.SIMPLE_NAME || fragment.getNodeType() == ASTNode.QUALIFIED_NAME) {", "+\t\t\t\t} else if (fragment.getNodeType() == ASTNode.QUALIFIED_NAME) {", "-\t\t\t\t\tverifyNameBindings(name.getQualifier());", "+//\t\t\t\t\tverifyNameBindings(name.getQualifier());", "+\t\t\t\t\tverifyNameBindings(name);", "-\t\t\t\t\tpreviousFragment = fragment;", "+//\t\t\t\t\tpreviousFragment = fragment;", "-\t\t\t\t\t\tassertNotNull(memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "+\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "-\t\t\t\t\t\tassertNotNull(methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "+\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "-\t\t\t\t\t\t\tassertNotNull(param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "-\t\t\t\tpreviousFragment = fragment;", "+//\t\t\t\tpreviousFragment = fragment;", "-\t\tassertTrue(\"Reference in '\"+previousFragment+\"' should be bound!\", (!resolvedBinding || previousBinding != null));", "+\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f2050e4e7085de8210bde71b1cb0d06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["+\t\tint tagElementStart = tagElement.getStartPosition();", "-//\t\tASTNode previousFragment = null;", "+\t\t\tint fragmentStart = fragment.getStartPosition();", "-\t\t\t\t\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassertFalse(this.prefix+\"Unknown reference in '\"+tagElement+\"' should NOT be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Unknown reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "-//\t\t\t\t\tverifyNameBindings(name.getQualifier());", "-//\t\t\t\t\tpreviousFragment = fragment;", "-\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+memberRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", memberRef.getName().resolveBinding());", "-\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", methodRef.getName().resolveBinding());", "-\t\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+param.getType()+\" binding at <\"+fragmentStart+\"> was not found!\", param.getType().resolveBinding());", "-//\t\t\t\tpreviousFragment = fragment;", "-\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));", "+\t\tassumeTrue(this.prefix+\"Reference at <\"+tagElementStart+\"> in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8a5546985c3f47c17e1d2adab29df4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "241d64f631bbf77014d4fbfc8f74f781b65e5c36", "commitAfterChange": "42e53b3c82f631cac5341438af4d88461f281652", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["+\t\tASTNode previousFragment = null;", "-\t\t\t\t\t\tassumeTrue(this.prefix+\"Reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Reference '\"+previousFragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassumeTrue(this.prefix+\"Unknown reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Unknown reference '\"+previousFragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+memberRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", memberRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", methodRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "-\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+param.getType()+\" binding at <\"+fragmentStart+\"> was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\tpreviousFragment = fragment;", "-\t\tassumeTrue(this.prefix+\"Reference at <\"+tagElementStart+\"> in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));", "+\t\tassumeTrue(this.prefix+\"Reference '\"+(previousFragment==null?tagElement:previousFragment)+\"' should be bound!\", (!resolvedBinding || previousBinding != null));"]}], "num": 34973}