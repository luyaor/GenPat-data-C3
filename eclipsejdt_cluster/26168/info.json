{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e136243013a2303f8fa58ed6243a2a77", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33132eaeb894631a95cc61f55fb61941", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "71ca7b096c04e123348cb13b19efbd2de402f9f2", "commitAfterChange": "6872e25fe154a5852fcd3ac0c49b686e5e81ec7b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private NameEnvironmentAnswer findClass(char[] name, char[][] packageName)", "signatureAfterChange": "\r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-private NameEnvironmentAnswer findClass(char[] name, char[][] packageName) {\r", "-\tString fullName = assembleName(name, packageName, File.separatorChar);\r", "+private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName){\r", "-\t\tif (fullName.equals(knownFileNames[i]))\r", "+\t\tif (qualifiedTypeName.equals(knownFileNames[i]))\r", "-\tString filename = new String(name);\r", "-\tString binaryFilename = filename + \".class\"; //$NON-NLS-1$\r", "-\tString sourceFilename = filename + \".java\"; //$NON-NLS-1$\r", "-\tfor (int i = 0, length = classpaths.length; i < length; i++) {\r", "-\t\tClasspath classpath = classpaths[i];\r", "-\t\tboolean binaryExists = classpath.exists(binaryFilename, packageName);\r", "-\t\tboolean sourceExists = classpath.exists(sourceFilename, packageName);\r", "-\t\tif (binaryExists == sourceExists) {\r", "-\t\t\tif (binaryExists) { // so both are true\r", "-\t\t\t\tlong binaryModified = classpath.lastModified(binaryFilename, packageName);\r", "-\t\t\t\tlong sourceModified = classpath.lastModified(sourceFilename, packageName);\r", "-\t\t\t\tif (binaryModified > sourceModified)\r", "-\t\t\t\t\treturn classpath.readClassFile(binaryFilename, packageName);\r", "-\t\t\t\tif (sourceModified > 0)\r", "-\t\t\t\t\treturn classpath.readJavaFile(sourceFilename, packageName);\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\tif (binaryExists)\r", "-\t\t\t\treturn classpath.readClassFile(binaryFilename, packageName);\r", "-\t\t\telse\r", "-\t\t\t\treturn classpath.readJavaFile(sourceFilename, packageName);\r", "+\tString qualifiedBinaryFileName = qualifiedTypeName + \".class\"; //$NON-NLS-1$\r", "+\tString qualifiedPackageName =\r", "+\t\tqualifiedTypeName.length() == typeName.length\r", "+\t\t\t? \"\" //$NON-NLS-1$\r", "+\t\t\t: qualifiedBinaryFileName.substring(0, qualifiedTypeName.length() - typeName.length - 1);\r", "+\tString qp2 = File.separatorChar == '/' ? qualifiedPackageName : qualifiedPackageName.replace('/', File.separatorChar);\r", "+\tif (qualifiedPackageName == qp2) {\r", "+\t\tfor (int i = 0, length = classpaths.length; i < length; i++) {\r", "+\t\t\tNameEnvironmentAnswer answer = classpaths[i].findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName);\r", "+\t\t\tif (answer != null) return answer;\r", "+\t\t}\r", "+\t} else {\r", "+\t\tString qb2 = qualifiedBinaryFileName.replace('/', File.separatorChar);\r", "+\t\tfor (int i = 0, length = classpaths.length; i < length; i++) {\r", "+\t\t\tClasspath p = classpaths[i];\r", "+\t\t\tNameEnvironmentAnswer answer = (p instanceof ClasspathJar)\r", "+\t\t\t\t? p.findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName)\r", "+\t\t\t\t: p.findClass(typeName, qp2, qb2);\r", "+\t\t\tif (answer != null) return answer;\r", "-\treturn null; \r", "+\treturn null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5781b6f46be4b6b8ea5c03f64c87119c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "26246adf380e69c31de951eed4c0173edaa96dd1", "commitAfterChange": "2c076bc353a2d83c198fbf8764d9fb723677890e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private NameEnvironmentAnswer findClass(char[] name, char[][] packageName)", "signatureAfterChange": "\r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-private NameEnvironmentAnswer findClass(char[] name, char[][] packageName) {\r", "-\tString fullName = assembleName(name, packageName, File.separatorChar);\r", "+private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName){\r", "-\t\tif (fullName.equals(knownFileNames[i]))\r", "+\t\tif (qualifiedTypeName.equals(knownFileNames[i]))\r", "-\tString filename = new String(name);\r", "-\tString binaryFilename = filename + \".class\"; //$NON-NLS-1$\r", "-\tString sourceFilename = filename + \".java\"; //$NON-NLS-1$\r", "+\tString qualifiedBinaryFileName = qualifiedTypeName + \".class\"; //$NON-NLS-1$\r", "+\tString qualifiedPackageName =\r", "+\t\tqualifiedTypeName.length() == typeName.length\r", "+\t\t\t? \"\" //$NON-NLS-1$\r", "+\t\t\t: qualifiedBinaryFileName.substring(0, qualifiedTypeName.length() - typeName.length - 1);\r", "-\t\tClasspath classpath = classpaths[i];\r", "-\t\tboolean binaryExists = classpath.exists(binaryFilename, packageName);\r", "-\t\tboolean sourceExists = classpath.exists(sourceFilename, packageName);\r", "-\t\tif (binaryExists == sourceExists) {\r", "-\t\t\tif (binaryExists) { // so both are true\r", "-\t\t\t\tlong binaryModified = classpath.lastModified(binaryFilename, packageName);\r", "-\t\t\t\tlong sourceModified = classpath.lastModified(sourceFilename, packageName);\r", "-\t\t\t\tif (binaryModified > sourceModified)\r", "-\t\t\t\t\treturn classpath.readClassFile(binaryFilename, packageName);\r", "-\t\t\t\tif (sourceModified > 0)\r", "-\t\t\t\t\treturn classpath.readJavaFile(sourceFilename, packageName);\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\tif (binaryExists)\r", "-\t\t\t\treturn classpath.readClassFile(binaryFilename, packageName);\r", "-\t\t\telse\r", "-\t\t\t\treturn classpath.readJavaFile(sourceFilename, packageName);\r", "-\t\t}\r", "+\t\tNameEnvironmentAnswer answer = classpaths[i].findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName);\r", "+\t\tif (answer != null) return answer;\r", "-\treturn null; \r", "+\treturn null;\r"]}], "num": 26168}