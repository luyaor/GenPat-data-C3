{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3f07cf24eeaedad6907fcf7fb6b7025", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5516043743ec6063d0d931147e060c04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "1df126b77b08d354ebfd5eda6a44830d9266b61e", "commitAfterChange": "e5f01975d99954b1483781c8c9c08a016b294102", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public boolean isProvablyDistinct(TypeBinding otherType)", "signatureAfterChange": " public boolean isProvablyDistinct(TypeBinding otherType)", "diff": ["-\t\t            SourceTypeBinding otherGenericType = (SourceTypeBinding) otherType;", "-\t\t            if (paramType.genericType() != otherGenericType)", "+\t\t            if (paramType.genericType() != otherType)", "-\t\t            \t\tReferenceBinding otherEnclosing = otherGenericType.enclosingType();", "+\t\t            \t\tReferenceBinding otherEnclosing = otherType.enclosingType();", "-\t\t            \t\t\tif (!enclosing.isEquivalentTo(otherGenericType.enclosingType())) return true;", "+\t\t            \t\t\tif (!enclosing.isEquivalentTo(otherType.enclosingType())) return true;", "-\t\t            otherArguments = otherGenericType.typeVariables();", "+\t\t            otherArguments = otherType.typeVariables();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6add6f7bb7571a4567cb5aa2c002482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "commitAfterChange": "1bf6db68524b43c8e140351de0b8d9940aee5925", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t\t            ReferenceBinding enclosing = enclosingType();", "-\t\t            if (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "-\t\t                return false;", "+\t            \tReferenceBinding enclosing = enclosingType();", "+\t            \tif (enclosing != null) {", "+\t            \t\tReferenceBinding otherEnclosing = otherParamType.enclosingType();", "+\t            \t\tif (otherEnclosing == null) return false;", "+\t            \t\tif ((otherEnclosing.tagBits & HasDirectWildcard) == 0) {", "+\t\t\t\t\t\t\tif (enclosing != otherEnclosing) return false;", "+\t            \t\t} else {", "+\t            \t\t\tif (!enclosing.isEquivalentTo(otherParamType.enclosingType())) return false;", "+\t            \t\t}", "+\t            \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac65f8a8e1440f97c312ade5c55c923", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "commitAfterChange": "1bf6db68524b43c8e140351de0b8d9940aee5925", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t\t\t\tReferenceBinding enclosing = enclosingType();", "-\t\t\t\tif (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "-\t\t\t\t\treturn false;", "+            \tReferenceBinding enclosing = enclosingType();", "+            \tif (enclosing != null) {", "+            \t\tReferenceBinding otherEnclosing = otherParamType.enclosingType();", "+            \t\tif (otherEnclosing == null) return false;", "+            \t\tif ((otherEnclosing.tagBits & HasDirectWildcard) == 0) {", "+\t\t\t\t\t\tif (enclosing != otherEnclosing) return false;", "+            \t\t} else {", "+            \t\t\tif (!enclosing.isEquivalentTo(otherParamType.enclosingType())) return false;", "+            \t\t}", "+            \t}\t\t\t\t"]}], "num": 1096}