{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe8c058dbf482e4e2ffbb0be273b57c2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4039bb97fd419024e7d1bbedc839263f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void testCommit() throws CoreException", "signatureAfterChange": "  public void testCommitWorkingCopy() throws CoreException", "diff": ["-public void testCommit() throws CoreException {", "-\tICompilationUnit original = (ICompilationUnit)this.workingCopy.getOriginalElement();", "-\tassertTrue(\"Original element should not be null\", original != null);", "+public void testCommitWorkingCopy() throws CoreException {", "+\tICompilationUnit primary = this.workingCopy.getPrimary();", "+\tassertTrue(\"Primary element should not be null\", primary != null);", "-\tthis.workingCopy.commit(false, null);", "+\tthis.workingCopy.commitWorkingCopy(false, null);", "-\tIFile originalFile = (IFile)original.getResource();", "+\tIFile originalFile = (IFile)primary.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21180b0e9c3537c0ceec5a1f38d9eb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testOriginalExistence()", "signatureAfterChange": " public void testPrimaryExistence()", "diff": ["-public void testOriginalExistence() {", "-\tICompilationUnit original = (ICompilationUnit)this.workingCopy.getOriginalElement();", "+public void testPrimaryExistence() {", "+\tICompilationUnit primary = this.workingCopy.getPrimary();", "-\t\t\"Original compilation unit should not exist\", ", "-\t\t!original.exists());", "+\t\t\"Primary compilation unit should not exist\", ", "+\t\t!primary.exists());"]}], "num": 7378}