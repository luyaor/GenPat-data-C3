{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf417f319f7d1b0f4424a096513daed4", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f81de3b23ec1528d9515bd75aeb122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "b2f2db5aca4b5592810cb876316dc430449c50f8", "commitAfterChange": "423363127bfe75baf23fa282b4893f61b836a936", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public TypeBinding resolveType(ClassScope classScope)", "signatureAfterChange": " public TypeBinding resolveType(ClassScope classScope)", "diff": ["-\tTypeBinding type;", "-\tif ((type = this.resolvedType) != null) { // is a shared type reference which was already resolved", "-\t\tif (!type.isValidBinding())", "-\t\t\treturn null; // already reported error", "-\t} else {", "-\t\ttype = this.resolvedType = getTypeBinding(classScope);", "-\t\tif (type == null)", "-\t\t\treturn null; // detected cycle while resolving hierarchy\t", "-\t\tif (!type.isValidBinding()) {", "-\t\t\treportInvalidType(classScope);", "-\t\t\treturn null;", "-\t\t}", "-\t\tif (isTypeUseDeprecated(type, classScope)) {", "-\t\t\treportDeprecatedType(classScope);", "-\t\t}", "-\t\t// check raw type", "-\t\tif (type.isArrayType()) {", "-\t\t    TypeBinding leafComponentType = type.leafComponentType();", "-\t\t    if (leafComponentType.isGenericType()) { // raw type", "-\t\t        return this.resolvedType = classScope.createArrayType(classScope.environment().createRawType((ReferenceBinding)leafComponentType, null), type.dimensions());", "-\t\t    }", "-\t\t} else if (type.isGenericType()) {", "-\t        return this.resolvedType = classScope.environment().createRawType((ReferenceBinding)type, null); // raw type", "-\t\t}", "+\tif (this.resolvedType != null) // is a shared type reference which was already resolved", "+\t\treturn this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error", "+", "+\tthis.resolvedType = getTypeBinding(classScope);", "+\tif (this.resolvedType == null)", "+\t\treturn null; // detected cycle while resolving hierarchy\t", "+\tif (!this.resolvedType.isValidBinding()) {", "+\t\treportInvalidType(classScope);", "+\t\treturn null;", "-\treturn this.resolvedType;", "+\tif (isTypeUseDeprecated(this.resolvedType, classScope))", "+\t\treportDeprecatedType(classScope);", "+\treturn this.resolvedType = convertToRawType(this.resolvedType, classScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4df5079d63bbb04a06cda03c774f739", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "b2f2db5aca4b5592810cb876316dc430449c50f8", "commitAfterChange": "423363127bfe75baf23fa282b4893f61b836a936", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\tTypeBinding type;", "-\tif ((type = this.resolvedType) != null) { // is a shared type reference which was already resolved", "-\t\tif (!type.isValidBinding())", "-\t\t\treturn null; // already reported error", "-\t} else {", "-\t\ttype = this.resolvedType = getTypeBinding(blockScope);", "-\t\tif (type == null)", "-\t\t\treturn null; // detected cycle while resolving hierarchy\t", "-\t\tif (!type.isValidBinding()) {", "-\t\t\treportInvalidType(blockScope);", "-\t\t\treturn null;", "-\t\t}", "-\t\tif (isTypeUseDeprecated(type, blockScope)) {", "-\t\t\treportDeprecatedType(blockScope);", "-\t\t}", "-\t\t// check raw type", "-\t\tif (type.isArrayType()) {", "-\t\t    TypeBinding leafComponentType = type.leafComponentType();", "-\t\t    if (leafComponentType.isGenericType()) { // raw type", "-\t\t        return this.resolvedType = blockScope.createArrayType(blockScope.environment().createRawType((ReferenceBinding)leafComponentType, null), type.dimensions());", "-\t\t    }", "-\t\t} else if (type.isGenericType()) {", "-\t        return this.resolvedType = blockScope.environment().createRawType((ReferenceBinding)type, null); // raw type", "-\t\t}", "+\tif (this.resolvedType != null) // is a shared type reference which was already resolved", "+\t\treturn this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error", "+", "+\tthis.resolvedType = getTypeBinding(blockScope);", "+\tif (this.resolvedType == null)", "+\t\treturn null; // detected cycle while resolving hierarchy\t", "+\tif (!this.resolvedType.isValidBinding()) {", "+\t\treportInvalidType(blockScope);", "+\t\treturn null;", "-\treturn this.resolvedType;", "+\tif (isTypeUseDeprecated(this.resolvedType, blockScope))", "+\t\treportDeprecatedType(blockScope);", "+\treturn this.resolvedType = convertToRawType(this.resolvedType, blockScope);"]}], "num": 8224}