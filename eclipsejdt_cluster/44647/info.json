{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b686e39e52d5a2c888cb978c1dec212f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b10f79fa3f68ff75caf8ceb4e3a6d91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "d18d748d27f9a5a2b0700c50117c5b71b5a69a2c", "commitAfterChange": "23d2c7d5ecd0932e580dd57beaa6827dafdaddc8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] classpath, IPath outputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] classpath, IPath outputLocation)", "diff": ["+\t\tboolean hasLibFolder = false;", "+\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:", "+\t\t\t\t\tif (!org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(rawEntry.getPath().lastSegment())) {", "+\t\t\t\t\t\thasLibFolder = true;", "+\t\t\t\t\t}", "-\t\tif (!hasSource) allowNestingInOutput = true; // if no source, then allowed", "+\t\tif (!hasSource && !hasLibFolder) allowNestingInOutput = true; // if no source and no lib folder, then allowed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec47294826a4e2f178190e1ca77ab1e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "e0a465676c8bf52f6a68296e739df7add44fe957", "commitAfterChange": "b37375a93ebc2cf6aa7a7ddfbf79766d2db89b53", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension)", "signatureAfterChange": "   public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension)", "diff": ["+\tString sourceFolderPath = this.sourceFolder.getFullPath().toString() + IPath.SEPARATOR;", "+\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isExcluded((sourceFolderPath + qualifiedSourceFileName).toCharArray(), this.fulInclusionPatternChars, this.fullExclusionPatternChars, false/*not a folder path*/))", "+\t\t\tcontinue;"]}], "num": 44647}