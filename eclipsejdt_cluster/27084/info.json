{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d103f7e682f4d75c4dc5fa6365e588ff", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4defb33357c59ea66ad81c49e08edb35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "34fbb786c10acdde7ba1d8e5a54a9b85be33e113", "commitAfterChange": "ef93c53035cb54a0c91071e910579fce97f095de", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tSourceTypeBinding sourceType =", "-\t\t\tcurrentScope.outerMostMethodScope().enclosingSourceType();", "-\t\tif ((!(sourceType.isInterface()", "-\t\t\t\t// no field generated in interface case (would'nt verify) see 1FHHEZL", "-\t\t\t\t|| sourceType.isBaseType()))", "+\t\tSourceTypeBinding sourceType = currentScope.outerMostClassScope().enclosingSourceType();", "+\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=22334", "+\t\tif (!sourceType.isInterface()", "+\t\t\t\t&& !sourceType.isBaseType()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64eefa11a0e65ed28b33327e8263f228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "34fbb786c10acdde7ba1d8e5a54a9b85be33e113", "commitAfterChange": "ef93c53035cb54a0c91071e910579fce97f095de", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "signatureAfterChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "diff": ["-\t\t\t\tthis.scope.outerMostMethodScope().enclosingSourceType();", "-\t\t\tthis.classLiteralSyntheticField =", "-\t\t\t\tsourceType.addSyntheticFieldForClassLiteral(sourceType, scope);", "+\t\t\t\tthis.scope.outerMostClassScope().enclosingSourceType();", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=22334", "+\t\t\tif (!sourceType.isInterface() && !sourceType.isBaseType()) {\t\t\t", "+\t\t\t\tthis.classLiteralSyntheticField = sourceType.addSyntheticFieldForClassLiteral(sourceType, scope);", "+\t\t\t}"]}], "num": 27084}