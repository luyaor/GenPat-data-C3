{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97f16089aa4595011c3903d91d310bf3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f26aa0cf84d0058d7ec2fb311df1ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "3388256fa80bf40daffa9f485d2674986c875b82", "commitAfterChange": "7a73f29da5ea73cce41fc54b0fc3ad302149f476", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " \tpublic void testMethodDeclaration()", "signatureAfterChange": " \tpublic void testMethodDeclaration()", "diff": ["-\t\tx1.thrownExceptions().add(this.N2);", "-\t\tx1.thrownExceptions().add(this.N3);", "+\t\tif (this.ast.apiLevel() < AST.JLS8) {", "+\t\t\tx1.thrownExceptions().add(this.N2);", "+\t\t\tx1.thrownExceptions().add(this.N3);\t\t\t", "+\t\t} else {", "+\t\t\tx1.thrownExceptionTypes().add(this.T3);", "+\t\t\tx1.thrownExceptionTypes().add(this.T4);\t\t\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e576a7917ff71a8045636984b6b188c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "bfe1e5f410410e285c8a77b5130cabdbc82cde90", "commitAfterChange": "4eeaf0d0e03ab922557bc9369f948328bc88b0fc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": "  \tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\t\t\t\tthrownException = convert(thrownExceptions[i++]);", "+\t\t\t\t\tTypeReference typeRef = thrownExceptions[i++];", "+\t\t\t\t\tthrownException = convert(typeRef);", "+\t\t\t\t\tif (typeRef.annotations != null && typeRef.annotations.length > 0) {", "+\t\t\t\t\t\tthrownException.setFlags(thrownException.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t}"]}], "num": 9180}