{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4754e32af692268ff2a28b8404f0e98a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2819e159cac2cfdd787e9bb8b1f1c08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\") \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\") \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "diff": ["-\t\treturn _env == null ? (A[]) Factory.EMPTY_ANNOTATIONS : ", "-\t\t\t\t\t\t\t\t_env.getFactory().getAnnotationsByType(getAnnotationBindings(), annotationType);", "+\t\t", "+\t\tif (_env == null)", "+\t\t\treturn (A[]) Factory.EMPTY_ANNOTATIONS;", "+\t\t", "+\t\tA [] result1 = _env.getFactory().getAnnotationsByType(getPackedAnnotationBindings(), annotationType);", "+\t\tA [] result2 = _env.getFactory().getAnnotationsByType(getOnlyUnpackedAnnotationBindings(), annotationType);", "+\t\t", "+\t\tif (result1.length == 0)", "+\t\t\treturn result2;", "+\t\tif (result2.length == 0)", "+\t\t\treturn result1;", "+\t\t", "+\t\tA [] result = (A[]) Array.newInstance(result1[0].getClass(), result1.length + result2.length);", "+\t\t", "+\t\tSystem.arraycopy(result1, 0, result, 0, result1.length);", "+\t\tSystem.arraycopy(result2, 0, result, result1.length, result2.length);", "+\t\t", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5cede24c7cbfd6edfe06fb80f62c891", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "signatureAfterChange": "  \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "diff": ["-\t\treturn _env.getFactory().getAnnotationsByType(getAnnotationBindings(), annotationType);\t", "+\t\t", "+\t\tA [] result1 = _env.getFactory().getAnnotationsByType(getPackedAnnotationBindings(), annotationType);", "+\t\tA [] result2 = _env.getFactory().getAnnotationsByType(getOnlyUnpackedAnnotationBindings(), annotationType);", "+\t\t", "+\t\tif (result1.length == 0)", "+\t\t\treturn result2;", "+\t\tif (result2.length == 0)", "+\t\t\treturn result1;", "+\t\t", "+\t\t@SuppressWarnings(\"unchecked\")", "+\t\tA [] result = (A[]) Array.newInstance(result1[0].getClass(), result1.length + result2.length);", "+\t\t", "+\t\tSystem.arraycopy(result1, 0, result, 0, result1.length);", "+\t\tSystem.arraycopy(result2, 0, result, result1.length, result2.length);", "+\t\t", "+\t\treturn result;"]}], "num": 69508}