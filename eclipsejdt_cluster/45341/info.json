{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc5728f6cbdba1072594383d8c07edde", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6ba05ac1c86f82e0594c8d07ddda18e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "4758255b8284af577e4f7f81a9ecd60704ccc85c", "commitAfterChange": "eeb0d779ca54bfa774f6270ba7624121d1e2d305", "methodNumberBeforeChange": 647, "methodNumberAfterChange": 647, "signatureBeforeChange": " \tpublic void test0628()", "signatureAfterChange": " \tpublic void test0628()", "diff": ["-\t    \t\t\t\"\t                        ^^^^^^^^^^^\\n\" + ", "-\t    \t\t\t\"Type mismatch: cannot convert from List<capture#2-of ? extends Number&Comparable<?>> to String\\n\" + ", "-\t    \t\t\t\"----------\\n\" + ", "-\t    \t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "-\t    \t\t\t\"\tString s = l1 != null ? foo(l1, l2) : l3;\\n\" + ", "-\t    \t\t\t\"\t                                      ^^\\n\" + ", "-\t    \t\t\t\"Type mismatch: cannot convert from List<capture#3-of ?> to String\\n\" + ", "+\t\t    \t\t\"\t                        ^^^^^^^^^^^\\n\" +", "+\t\t    \t\t\"Type mismatch: cannot convert from List<? extends Number&Comparable<?>> to String\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcca74e506ce37638db919b212500b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "593a2bfc58d2fd5243ade8b5af13c44714cac2ea", "commitAfterChange": "7b2f5f6178a06612a97483ad1acce7a04ca7dd08", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void test088()", "signatureAfterChange": " public void testONLY_088()", "diff": ["-public void test088() {", "+public void testONLY_088() {", "-\t\t\"----------\\n\" + ", "-\t\t\"8. WARNING in p\\\\X.java (at line 39)\\n\" + ", "-\t\t\"\tMethod _getMethod = c.getMethod(\\\"d\\\",null);\\n\" + ", "-\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type safety: The method getMethod(String, Class...) belongs to the raw type Class. References to generic type Class<T> should be parameterized\\n\" + "]}], "num": 45341}