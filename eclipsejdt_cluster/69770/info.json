{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b178dada7cbf6d338ae33fb12a0561ec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b93d821c544ab73fe0fd8a6b51440d80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "06cedbd8bd184e3f34c939385e2cbddd9e3aedca", "commitAfterChange": "0d09a2966f3cebfb8d6601000e2b64259fed7dd8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void indexResolvedDocument()", "signatureAfterChange": "  \tpublic void indexResolvedDocument()", "diff": ["-\t\t\tif (DEBUG) {", "-\t\t\t\tSystem.out.println(new String(this.cud.compilationResult.fileName) + ':');", "-\t\t\t}", "-\t\t\tfinal ASTVisitor visitor = new ASTVisitor() {", "-\t\t\t\tpublic boolean visit(LambdaExpression lambdaExpression, BlockScope blockScope) {", "+\t\t\tif (DEBUG) System.out.println(new String(this.cud.compilationResult.fileName) + ':');", "+\t\t\tfor (int i = 0, length = this.cud.functionalExpressionsCount; i < length; i++) {", "+\t\t\t\tFunctionalExpression expression = this.cud.functionalExpressions[i];", "+\t\t\t\tif (expression instanceof LambdaExpression) {", "+\t\t\t\t\tLambdaExpression lambdaExpression = (LambdaExpression) expression;", "+\t\t\t\t\t\tfinal char[] superinterface = lambdaExpression.descriptor.declaringClass.sourceName();", "-\t\t\t\t\t\t\tSystem.out.println('\\t' + new String(lambdaExpression.descriptor.declaringClass.sourceName()) + '.' + ", "+\t\t\t\t\t\t\tSystem.out.println('\\t' + new String(superinterface) + '.' + ", "+\t\t\t\t\t", "+\t\t\t\t\t\taddClassDeclaration(0,  // most entries are blank, that is fine, since lambda type/method cannot be searched.", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR, // package name", "+\t\t\t\t\t\t\t\tlambdaExpression.binding.selector,", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR, // enclosing types.", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR, // super class", "+\t\t\t\t\t\t\t\tnew char[][] { superinterface },", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\ttrue); // not primary.", "+", "-\t\t\t\t\t\tif (DEBUG) {", "-\t\t\t\t\t\t\tSystem.out.println(\"\\tnull/bad binding in lambda\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (DEBUG) System.out.println(\"\\tnull/bad binding in lambda\"); //$NON-NLS-1$", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "-\t\t\t\tpublic boolean visit(ReferenceExpression referenceExpression, BlockScope blockScope) {", "+\t\t\t\t} else {", "+\t\t\t\t\tReferenceExpression referenceExpression = (ReferenceExpression) expression;", "-\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t\tif (DEBUG) {", "-\t\t\t\t\t\t\tSystem.out.println(\"\\tnull/bad binding in reference expression\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (DEBUG) System.out.println(\"\\tnull/bad binding in reference expression\"); //$NON-NLS-1$", "-\t\t\t\t\treturn true;", "-\t\t\t};", "-\t\t\tthis.cud.traverse(visitor , this.cud.scope, false);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec4e27506a53dc3cd5bddf0022f159a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "b57e7c981fa856dab0b4c4311954db8941eed35a", "commitAfterChange": "511760debb72b546c64ecd1cd34ab8f6595aeb12", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "  \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\t\tthis.newResolvedPath = ", "-\t\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResource);", "+\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResource);", "+\t\t", "+\t\t// remember the timestamps of external libraries", "+\t\tif (this.newResolvedPath != null) {\t\t\t\t\t", "+\t\t\tfor (int i = 0, length = this.newResolvedPath.length; i < length; i++) {", "+\t\t\t\tIClasspathEntry entry = this.newResolvedPath[i];", "+\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\tIPath path = entry.getPath();", "+\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);", "+\t\t\t\t\tif (target instanceof java.io.File) {", "+\t\t\t\t\t\tlong timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);", "+\t\t\t\t\t\tJavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps.put(path, new Long(timestamp));\t\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}\t\t\t\t\t\t\t", "+\t\t}", "+\t\t"]}], "num": 69770}