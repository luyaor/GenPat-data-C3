{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66c85cc4e7b9202684929a05bf90c622", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "070a972e2a6cce6fc09d353a191ed6f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "3e14c1e6b04fd7441ae4d8fe6b6dfc8cf45536c4", "commitAfterChange": "f3a04ea8babd5b93a1cc3d8aa4d6595dd52e6a80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding expectedReceiverType = receiverType.erasure().isCompatibleWith(binding.declaringClass.erasure())", "-\t\t\t? receiverType", "-\t\t\t: binding.declaringClass;", "-\t\treceiver.computeConversion(scope, expectedReceiverType, receiverType);", "-\t\tif (expectedReceiverType != this.qualifyingType) this.qualifyingType = expectedReceiverType;", "+\t\tTypeBinding expectedQualifyingType = this.qualifyingType.erasure().isCompatibleWith(this.binding.declaringClass.erasure())", "+\t\t\t? this.qualifyingType", "+\t\t\t: this.binding.declaringClass;", "+\t\treceiver.computeConversion(scope, expectedQualifyingType, receiverType);", "+\t\tif (expectedQualifyingType != this.qualifyingType) this.qualifyingType = expectedQualifyingType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ebba9eb0beec23caf674464f877d0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "d6baee173fab87cec38e2d53f527709865586d3e", "commitAfterChange": "e945be9572deb0e6312998e6924bb86e3cded80b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t} else {", "+\t\t\t// compute generic cast if necessary", "+\t\t\tTypeBinding expectedReceiverType = this.actualReceiverType.erasure().isCompatibleWith(this.binding.declaringClass.erasure())", "+\t\t\t\t? this.actualReceiverType", "+\t\t\t\t: this.binding.declaringClass;", "+\t\t\treceiver.computeConversion(scope, expectedReceiverType, actualReceiverType);", "+\t\t\tif (expectedReceiverType != this.actualReceiverType) this.actualReceiverType = expectedReceiverType;", "-\t\t// compute generic cast if necessary", "-\t\tTypeBinding expectedReceiverType = this.actualReceiverType.erasure().isCompatibleWith(this.binding.declaringClass.erasure())", "-\t\t\t? this.actualReceiverType", "-\t\t\t: this.binding.declaringClass;", "-\t\treceiver.computeConversion(scope, expectedReceiverType, actualReceiverType);", "-\t\tif (expectedReceiverType != this.actualReceiverType) this.actualReceiverType = expectedReceiverType;"]}], "num": 56543}