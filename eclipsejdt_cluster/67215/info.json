{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63fbb764e3cd30c814111e79ce6fc33e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1cf7367de21026d2a99d2ebe150fb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "commitAfterChange": "02a355dfd5d36ce03dbd8b4f266e2425493b04cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-", "+\t\t\t", "+\t\t\tSourceElementParser parser = this.manager.getSourceElementParser(javaProject, null/*requestor will be set by indexer*/);", "-\t\t\t\t\t\t\tthis.manager.addSource((IFile) value, this.containerPath);", "+\t\t\t\t\t\t\tthis.manager.addSource((IFile) value, this.containerPath, parser);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7bde9d3ed4a7e8914c291365fffd5fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "d4ec64e0d461fdc6da51e02de67ee976a6d0bfdc", "commitAfterChange": "350ec9d3d00701824225ae0739da6cd8ecc1be80", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r \t\r \tpublic ClassInstanceCreation convert(AnonymousLocalTypeDeclaration expression)", "signatureAfterChange": "\r \t\r \tpublic ClassInstanceCreation convert(AnonymousLocalTypeDeclaration expression)", "diff": ["-\t\tif (this.resolveBindings) {\r", "-\t\t\trecordNodes(classInstanceCreation, expression);\r", "-\t\t\tclassInstanceCreation.resolveTypeBinding();\r", "-\t\t}\r", "-\t\tbuildBodyDeclarations(expression, classInstanceCreation);\r", "-\t\tclassInstanceCreation.setAnonymousClassDeclaration(true);\r", "+\t\tAnonymousClassDeclaration anonymousClassDeclaration = this.ast.newAnonymousClassDeclaration();\r", "+\t\tclassInstanceCreation.setAnonymousClassDeclaration(anonymousClassDeclaration);\r", "+\t\tbuildBodyDeclarations(expression, anonymousClassDeclaration);\r", "+\t\tif (this.resolveBindings) {\r", "+\t\t\trecordNodes(classInstanceCreation, expression);\r", "+\t\t\trecordNodes(anonymousClassDeclaration, expression);\r", "+\t\t\tclassInstanceCreation.resolveTypeBinding();\r", "+\t\t}\r"]}], "num": 67215}