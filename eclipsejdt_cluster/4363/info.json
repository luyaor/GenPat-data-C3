{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c59b2a592cb3dfcb1f5ce646259d503", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e0b0d7522274a745299727691a59fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void test023() throws JavaModelException", "signatureAfterChange": "  public void test023() throws JavaModelException", "diff": ["-\t\t\"\\n\" + ", "-\t\t\"\t * Completion after: @see BasicTestTextIns\\n\" + ", "+\t\t\"\t * Completion after: @link BasicTestTextIns\\n\" + ", "-\t\t\"\tpublic void foo() {\\n\" + ", "-\t\t\"\t}\\n\" + ", "+\t\t\"\tpublic void foo() throws BasicTestTextInsException {}\\n\" + ", "+\t\t\"}\\n\" + ", "+\t\t\"class BasicTestTextInsException extends Exception{\\n\" + ", "-\tcompleteInJavadoc(\"/Completion/src/javadoc/text/BasicTestTextIns.java\", source, true, \"BasicTestTextIns\", 2); // 2nd occurence", "+\tcompleteInJavadoc(\"/Completion/src/javadoc/text/BasicTestTextIns.java\", source, true, \"BasicTestTextIns\", 2); // 2nd occurrence", "-\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns }, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+(25+R_INLINE_TAG)+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+\"25}\"", "+\t\t\"BasicTestTextInsException[JAVADOC_TYPE_REF]{{@link BasicTestTextInsException }, javadoc.text, Ljavadoc.text.BasicTestTextInsException;, null, null, \"+this.positions+R_DICUNREETIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns }, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNRIT+\"}\\n\" +", "+\t\t\"BasicTestTextInsException[TYPE_REF]{BasicTestTextInsException, javadoc.text, Ljavadoc.text.BasicTestTextInsException;, null, null, \"+this.positions+R_DICUNREET+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfe86ef15c077e5683e2ddc2e964daae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testSingleWildcardExtendsStringPattern06() throws CoreException", "signatureAfterChange": " \tpublic void testSinglePatternSimpleName08() throws CoreException", "diff": ["+\t}", "+\tpublic void testSinglePatternSimpleName08() throws CoreException {", "+\t\tIJavaSearchScope scope = getJavaSearchScope15(\"g1.t\", true /* add all subpackages */);", "+\t\tsearch(\"NonGeneric.GenericMember\", TYPE, REFERENCES, scope, resultCollector);", "+\t\tassertSearchResults(", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.gen [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.gen_obj [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.gen_exc [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.gen_wld [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.gen_thr [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.gen_run [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_obj [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_exc [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_wld [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_thr [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_run [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.gen [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.gen_obj [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.gen_exc [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.gen_wld [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.gen_thr [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.gen_run [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_obj [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_exc [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_wld [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_thr [NonGeneric.GenericMember] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_run [NonGeneric.GenericMember] EXACT_MATCH\",", "+\t\t\tresultCollector);", "+\t}", "-\t// TODO [search] try to have a better match selection", "-\tpublic void testSingleWildcardExtendsStringPattern06() throws CoreException {", "-\t\tIJavaSearchScope scope = getJavaSearchScope15(\"g1.t\", true /* add all subpackages */);", "-\t\tsearch(\"Generic.MemberGeneric<? extends Exception>\", TYPE, REFERENCES, scope, resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.gen [Generic.MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.qgen [g1.t.m.def.Generic.MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen [Generic.MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_exc [MemberGeneric<Exception>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_wld [MemberGeneric<?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_thr [MemberGeneric<? super RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen [g1.t.s.def.Generic.MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_exc [MemberGeneric<Exception>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_wld [MemberGeneric<?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_thr [MemberGeneric<? super RuntimeException>] EXACT_MATCH\",", "-\t\t\tresultCollector);", "-\t}"]}], "num": 4363}