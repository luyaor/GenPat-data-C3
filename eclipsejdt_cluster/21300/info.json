{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74bf9ddfb0588264aee120603f1c300f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22b8800b51543e98333385418d79c9bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "2923ed68c1f82d0e305a158b4c5d393b708481eb", "commitAfterChange": "78fb30efd0199bf293193efc0adbb492172aafcc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic static long warningTokenToIrritants(String warningToken)", "signatureAfterChange": "  \tpublic static IrritantSet warningTokenToIrritants(String warningToken)", "diff": ["+\tpublic static IrritantSet warningTokenToIrritants(String warningToken) {", "+\t\t// keep in sync with warningTokens and warningTokenFromIrritant", "+\t\tif (warningToken == null || warningToken.length() == 0) return null;", "+\t\tswitch (warningToken.charAt(0)) {", "+\t\t\tcase 'a' :", "+\t\t\t\tif (\"all\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.ALL;", "+\t\t\t\tbreak;", "+\t\t\tcase 'b' :", "+\t\t\t\tif (\"boxing\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.BOXING;", "+\t\t\t\tbreak;", "+\t\t\tcase 'c' :", "+\t\t\t\tif (\"cast\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.CAST;", "+\t\t\t\tbreak;", "+\t\t\tcase 'd' :", "+\t\t\t\tif (\"deprecation\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.DEPRECATION;", "+\t\t\t\tif (\"dep-ann\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.DEP_ANN;", "+\t\t\t\tbreak;", "+\t\t\tcase 'f' :", "+\t\t\t\tif (\"fallthrough\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.FALLTHROUGH;", "+\t\t\t\tif (\"finally\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.FINALLY;", "+\t\t\t\tbreak;", "+\t\t\tcase 'h' :", "+\t\t\t\tif (\"hiding\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.HIDING;", "+\t\t\tcase 'i' :", "+\t\t\t\tif (\"incomplete-switch\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.INCOMPLETE_SWITCH;", "+\t\t\t\tbreak;", "+\t\t\tcase 'n' :", "+\t\t\t\tif (\"nls\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.NLS;", "+\t\t\t\tif (\"null\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.NULL;", "+\t\t\t\tbreak;", "+\t\t\tcase 'r' :", "+\t\t\t\tif (\"restriction\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.RESTRICTION;", "+\t\t\t\tbreak;", "+\t\t\tcase 's' :", "+\t\t\t\tif (\"serial\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.SERIAL;", "+\t\t\t\tif (\"static-access\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.STATIC_ACCESS;", "+\t\t\t\tif (\"synthetic-access\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.SYNTHETIC_ACCESS;", "+\t\t\t\tif (\"super\".equals(warningToken)) { //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.SUPER;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase 'u' :", "+\t\t\t\tif (\"unused\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.UNUSED;", "+\t\t\t\tif (\"unchecked\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.UNCHECKED;", "+\t\t\t\tif (\"unqualified-field-access\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IrritantSet.UNQUALIFIED_FIELD_ACCESS;", "+\t\t\t\tbreak;", "+\t\t}", "+\t\treturn null;", "+\t}", "-\tpublic static long warningTokenToIrritants(String warningToken) {", "-\t\t// keep in sync with warningTokens and warningTokenFromIrritant", "-\t\tif (warningToken == null || warningToken.length() == 0) return 0;", "-\t\tswitch (warningToken.charAt(0)) {", "-\t\t\tcase 'a' :", "-\t\t\t\tif (\"all\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn 0xFFFFFFFFFFFFFFFFl; // suppress all warnings", "-\t\t\t\tbreak;", "-\t\t\tcase 'b' :", "-\t\t\t\tif (\"boxing\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn AutoBoxing;", "-\t\t\t\tbreak;", "-\t\t\tcase 'c' :", "-\t\t\t\tif (\"cast\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn UnnecessaryTypeCheck;", "-\t\t\t\tbreak;", "-\t\t\tcase 'd' :", "-\t\t\t\tif (\"deprecation\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn UsingDeprecatedAPI;", "-\t\t\t\tif (\"dep-ann\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn MissingDeprecatedAnnotation;", "-\t\t\t\tbreak;", "-\t\t\tcase 'f' :", "-\t\t\t\tif (\"fallthrough\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn FallthroughCase;", "-\t\t\t\tif (\"finally\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn FinallyBlockNotCompleting;", "-\t\t\t\tbreak;", "-\t\t\tcase 'h' :", "-\t\t\t\tif (\"hiding\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn FieldHiding | LocalVariableHiding | MaskedCatchBlock | TypeHiding;", "-\t\t\tcase 'i' :", "-\t\t\t\tif (\"incomplete-switch\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn IncompleteEnumSwitch;", "-\t\t\t\tbreak;", "-\t\t\tcase 'n' :", "-\t\t\t\tif (\"nls\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn NonExternalizedString;", "-\t\t\t\tif (\"null\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn NullReference | PotentialNullReference | RedundantNullCheck;", "-\t\t\t\tbreak;", "-\t\t\tcase 'r' :", "-\t\t\t\tif (\"restriction\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn DiscouragedReference | ForbiddenReference;", "-\t\t\t\tbreak;", "-\t\t\tcase 's' :", "-\t\t\t\tif (\"serial\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn MissingSerialVersion;", "-\t\t\t\tif (\"static-access\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn IndirectStaticAccess | NonStaticAccessToStatic;", "-\t\t\t\tif (\"synthetic-access\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn AccessEmulation;", "-\t\t\t\tif (\"super\".equals(warningToken)) { //$NON-NLS-1$", "-\t\t\t\t\treturn OverridingMethodWithoutSuperInvocation;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase 'u' :", "-\t\t\t\tif (\"unused\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn UnusedLocalVariable | UnusedArgument | UnusedPrivateMember | UnusedDeclaredThrownException | UnusedLabel | UnusedImport | UnusedTypeArguments | RedundantSuperinterface;", "-\t\t\t\tif (\"unchecked\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn UncheckedTypeOperation | RawTypeReference;", "-\t\t\t\tif (\"unqualified-field-access\".equals(warningToken)) //$NON-NLS-1$", "-\t\t\t\t\treturn UnqualifiedFieldAccess;", "-\t\t\t\tbreak;", "-\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec483f997943155fbed8e5a864ec12c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "a184055df3953fc7636d02b495d8ddad60f03a7d", "commitAfterChange": "6ec8b600d2528691e914df35d7ab6d321bfc7cb2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void manageSyntheticAccessIfNecessary( \t\t\tBlockScope currentScope, \t\t\tFieldBinding fieldBinding, \t\t\tTypeBinding lastReceiverType, \t\t\tint index, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic void manageSyntheticAccessIfNecessary( \t\t\tBlockScope currentScope, \t\t\tFieldBinding fieldBinding, \t\t\tTypeBinding lastReceiverType, \t\t\tint index, \t\t\tFlowInfo flowInfo)", "diff": ["-\t\tif (fieldBinding instanceof ParameterizedFieldBinding) {", "-\t\t    ParameterizedFieldBinding parameterizedField = (ParameterizedFieldBinding) fieldBinding;", "-\t\t    FieldBinding originalField = parameterizedField.originalField;", "-\t\t    TypeBinding requiredGenericCast = null;", "-\t\t    // extra cast needed if field type was type variable", "-\t\t    if ((originalField.type.tagBits & TagBits.HasTypeVariable) != 0) {", "-\t\t        requiredGenericCast = originalField.type.genericCast(parameterizedField.type);", "-\t\t    }\t\t    ", "-\t\t    setCodegenBinding(fieldBinding, index, originalField, requiredGenericCast);", "+\t\tFieldBinding originalField = fieldBinding.original();", "+\t\tif (originalField != fieldBinding) {", "+\t\t\tsetCodegenBinding(index < 0 ? (this.otherBindings == null ? 0 : this.otherBindings.length) : index, originalField);", "-\t\t    FieldBinding someCodegenBinding = getCodegenBinding(fieldBinding, index);", "+\t\t    FieldBinding someCodegenBinding = getCodegenBinding(index < 0 ? (this.otherBindings == null ? 0 : this.otherBindings.length) : index);", "-\t\t\t    FieldBinding someCodegenBinding = getCodegenBinding(fieldBinding, index);", "+\t\t\t    FieldBinding someCodegenBinding = getCodegenBinding(index < 0 ? (this.otherBindings == null ? 0 : this.otherBindings.length) : index);", "-\t\t            fieldBinding, ", "-\t\t            index, ", "+\t\t            index < 0 ? (this.otherBindings == null ? 0 : this.otherBindings.length) : index, ", "-\t\t                    getCodegenBinding(fieldBinding, index), ", "-\t\t                    (ReferenceBinding)lastReceiverType.erasure()), ", "-\t\t         \tnull/*reuse existing*/);", "+\t\t                    getCodegenBinding(index < 0 ? (this.otherBindings == null ? 0 : this.otherBindings.length) : index), ", "+\t\t                    (ReferenceBinding)lastReceiverType.erasure()));"]}], "num": 21300}