{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b33ab54c82979f558ebb4b6cd3fbe000", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b7ce6ccc0095c1796b30b72871541e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "5dcefdb7b6dc4ca118d352248744f6f6f0cfd53e", "commitAfterChange": "6568a2476b22c2b9915b48b3eb9ea4ea62f741d4", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "     public void _test114()", "signatureAfterChange": "     public void test114()", "diff": ["-    public void _test114() {", "+    public void test114() {", "-\t\t\t\"M undefined\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t@Annot( foo = M.class )\\n\" + ", "+\t\t\t\"\t              ^\\n\" + ", "+\t\t\t\"M cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb54616bc6f1d85cc75c8cb12fbb7e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b1909bb0c4bbb70fecea5345c2e954fa4204b1dd", "commitAfterChange": "1ef42230a28632657bfac5df1d197b6d35dcc83d", "methodNumberBeforeChange": 416, "methodNumberAfterChange": 416, "signatureBeforeChange": " \tpublic void _test0412()", "signatureAfterChange": " \tpublic void testONLY_0412()", "diff": ["-\tpublic void _test0412() {", "+\tpublic void testONLY_0412() {", "-\t\t\t\"should warn about unchecked array conversion for T[]\");\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd4c4f0a447b44ec0487b16408978b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "e6009de9b4d4a2d7c4c60a3948647861fa518186", "commitAfterChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void _test004()", "signatureAfterChange": " \tpublic void test004()", "diff": ["-\t// TODO (philippe) reenable once addressed", "-\tpublic void _test004() {", "+\tpublic void test004() {", "-\t\t\t\"invalid self reference to annotation\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Foo.java (at line 2)\\n\" + ", "+\t\t\t\"\tFoo value();\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"Cycle detected: the annotation type Foo cannot contain members of the same type\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8133de0148d44c30730bacee351c39f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void _test049()", "signatureAfterChange": " \tpublic void test049()", "diff": ["-\tpublic void _test049() {", "+\tpublic void test049() {", "-\t\t\t\"ERROR\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\tpublic abstract enum X {}\\n\" + ", "+\t\t\"\t                     ^\\n\" + ", "+\t\t\"Illegal modifier for the enum X; only public is permitted\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81e7439e8cd0c2341e9fbd10e1e80e74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "commitAfterChange": "c92d7fd949bb43d639ffe5ab43f47d34f0714b93", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void _test002()", "signatureAfterChange": " \tpublic void test002()", "diff": ["-\t// TODO (olivier) reenable once addressed", "-\tpublic void _test002() {", "+\tpublic void test002() {", "-\t\t\t\"invalid annotation - missing value\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic @Foo class X {\\n\" + ", "+\t\t\t\"\t       ^^^^\\n\" + ", "+\t\t\t\"The annotation @Foo must define the member value\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e852dfb57652ebe21d7e0719a5a8b32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 1392, "methodNumberAfterChange": 1392, "signatureBeforeChange": " public void _test1358()", "signatureAfterChange": " public void test1358()", "diff": ["-public void _test1358() {", "+public void test1358() {", "-\t\t\t\"done\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic abstract class X implements List<X.Inter.Private> {\\n\" + ", "+\t\t\t\"\t                                        ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The type X.Inter.Private is not visible\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c526fe721f9111dccc64194d37f667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "d9cbfd6f811edb92fc809248f3faf5313070d684", "commitAfterChange": "cdaab2bab93686ddb22cddbf86b514844fa4d1bb", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 200, "signatureBeforeChange": " public void _test0561_try_catch_unchecked_exception()", "signatureAfterChange": " public void test0561_try_catch_unchecked_exception()", "diff": ["-public void _test0561_try_catch_unchecked_exception() {", "+public void test0561_try_catch_unchecked_exception() {", "-\t\t\"ERR may be null only\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c42abb7e255447a82e743c64652c8c6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void _test100()", "signatureAfterChange": " \tpublic void test100()", "diff": ["-\tpublic void _test100() {", "+\tpublic void test100() {", "-\t\t\t\t\"\t\tString getMessage() {\\n\" + ", "+\t\t\t\t\"\t\t@Override String getMessage() {\\n\" + ", "-\t\t\t\"should reject as invalid ref to non-constant\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tprivate final X thisOne = anEnumValue;\\n\" + ", "+\t\t\t\"\t                          ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Cannot refer to the static enum field X.anEnumValue within an initializer\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ec690218d854111781194754f8b605", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "71bba81717c7a1fbd86b1422cf134703931a54cb", "commitAfterChange": "94e87775403a1be90933921189758fda2ba4fb6c", "methodNumberBeforeChange": 893, "methodNumberAfterChange": 893, "signatureBeforeChange": " public void _test887()", "signatureAfterChange": " public void test887()", "diff": ["-public void _test887() {", "+public void test887() {", "-\t\t\"unspecified\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in Bar.java (at line 4)\\n\" + ", "+\t\t\"\tFoo<? super X> f = x;\\n\" + ", "+\t\t\"\t                   ^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from X to Foo<? super X>\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6109c46750c62ee5f132c4adb12b8ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 490, "methodNumberAfterChange": 490, "signatureBeforeChange": "\t\t \tpublic void _test488()", "signatureAfterChange": " \tpublic void test488()", "diff": ["-\t}\t\t", "-\tpublic void _test488() {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=84496", "+\tpublic void test488() {", "-\t\t\t\"should report type mismatch\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tf1.bar = f2.bar;\\n\" + ", "+\t\t\t\"\t         ^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X.Bar<capture-of ?> to X.Bar<capture-of ?>\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0658b81f9ab3ecb7001c07f9fdbf47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "5dcefdb7b6dc4ca118d352248744f6f6f0cfd53e", "commitAfterChange": "6568a2476b22c2b9915b48b3eb9ea4ea62f741d4", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "     public void _test112()", "signatureAfterChange": "     public void test112()", "diff": ["-    public void _test112() {", "+    public void test112() {", "-\t\t\t\"zzz undefined\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t@Annot(foo1=zzz)\\n\" + ", "+\t\t\t\"\t            ^^^\\n\" + ", "+\t\t\t\"zzz cannot be resolved\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc614596b487793f5bd26eb5f498363e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "4434d475460f18964b445e0bfcf8b7616e1cbfeb", "commitAfterChange": "2dff73769579b6ebd6a0d5ba6efcaa4bf4c2b6ae", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void _test047()", "signatureAfterChange": " \tpublic void test047()", "diff": ["-\tpublic void _test047() {", "+\tpublic void test047() {", "-\t\t\t\"ERROR\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tsuper();\\n\" + ", "+\t\t\t\"\t^^^^^^^\\n\" + ", "+\t\t\t\"Cannot invoke super constructor from enum constructor X()\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2c5e8d8998da90c3570fd98e5d454d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 491, "signatureBeforeChange": "\t\t \tpublic void _test489()", "signatureAfterChange": " \tpublic void test489()", "diff": ["-\tpublic void _test489() {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=84496", "+\tpublic void test489() {", "-\t\t\t\"should report type mismatch?!\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tf1.bar = f1.bar;\\n\" + ", "+\t\t\t\"\t         ^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X.Bar<capture-of ?> to X.Bar<capture-of ?>\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 22185}