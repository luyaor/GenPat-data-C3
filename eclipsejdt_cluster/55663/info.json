{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a04c1ea8d0930b2b9825fb8fde9f2f9c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc89d5c3e93e4a82bd354f821325241", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void compile(String[] argv)", "signatureAfterChange": "\r protected void compile(String[] argv)", "diff": ["-\t\tif (showProgress) System.out.print(Main.bind(\"progress.compiling\"/*nonNLS*/));\r", "-\t\tfor (int i = 0; i < repetitions; i++){\r", "-\t\t\tglobalProblemsCount = 0;\r", "-\t\t\tglobalErrorsCount = 0;\r", "-\t\t\tglobalWarningsCount = 0;\t\t\r", "-\t\t\tlineCount = 0;\r", "-\t\t\tif (repetitions > 1){\r", "-\t\t\t\tout.flush();\r", "-\t\t\t\tout.println(Main.bind(\"compile.repetition\"/*nonNLS*/,String.valueOf(i+1),String.valueOf(repetitions)));\r", "-\t\t\t}\r", "-\t\t\tlong startTime = System.currentTimeMillis();\r", "-\r", "-\t\t\t// request compilation\r", "-\t\t\tperformCompilation();\r", "-\t\t\tif (timer) {\r", "-\t\t\t\ttime = System.currentTimeMillis() - startTime;\r", "-\t\t\t\tif (lineCount != 0){\r", "-\t\t\t\t\tout.println(Main.bind(\"compile.instantTime\"/*nonNLS*/,new String[]{String.valueOf(lineCount),String.valueOf(time),String.valueOf((((int)((lineCount*10000.0)/time))/10.0))}));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.println(Main.bind(\"compile.totalTime\"/*nonNLS*/,String.valueOf(time)));\r", "-\t\t\t\t\t\r", "+\t\tif(proceed){\r", "+\t\t\tif (showProgress) out.print(Main.bind(\"progress.compiling\")); //$NON-NLS-1$\r", "+\t\t\tfor (int i = 0; i < repetitions; i++){\r", "+\t\t\t\tglobalProblemsCount = 0;\r", "+\t\t\t\tglobalErrorsCount = 0;\r", "+\t\t\t\tglobalWarningsCount = 0;\t\t\r", "+\t\t\t\tlineCount = 0;\r", "+\t\r", "+\t\t\t\tif (repetitions > 1){\r", "+\t\t\t\t\tout.flush();\r", "+\t\t\t\t\tout.println(Main.bind(\"compile.repetition\",String.valueOf(i+1),String.valueOf(repetitions))); //$NON-NLS-1$\r", "-\t\t\t}\r", "-\t\t\tif (globalProblemsCount > 0) {\r", "-\t\t\t\tif (globalProblemsCount == 1) {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.oneProblem\"/*nonNLS*/));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.severalProblems\"/*nonNLS*/,String.valueOf(globalProblemsCount)));\r", "-\t\t\t\t}\r", "-\t\t\t\tout.print(\" (\"/*nonNLS*/);\r", "-\t\t\t\tif (globalErrorsCount > 0) {\r", "-\t\t\t\t\tif (globalErrorsCount == 1) {\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.oneError\"/*nonNLS*/));\r", "+\t\t\t\tlong startTime = System.currentTimeMillis();\r", "+\t\t\t\t// request compilation\r", "+\t\t\t\tperformCompilation();\r", "+\t\t\t\tif (timer) {\r", "+\t\r", "+\t\t\t\t\ttime = System.currentTimeMillis() - startTime;\r", "+\t\t\t\t\tif (lineCount != 0){\r", "+\t\t\t\t\t\tout.println(Main.bind(\"compile.instantTime\",new String[]{String.valueOf(lineCount),String.valueOf(time),String.valueOf((((int)((lineCount*10000.0)/time))/10.0))})); //$NON-NLS-1$\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.severalErrors\"/*nonNLS*/,String.valueOf(globalErrorsCount)));\r", "+\t\t\t\t\t\tout.println(Main.bind(\"compile.totalTime\",String.valueOf(time)));\t\t\t\t //$NON-NLS-1$\r", "-\t\t\t\tif (globalWarningsCount > 0) {\r", "+\t\t\t\tif (globalProblemsCount > 0) {\r", "+\t\t\t\t\tif (globalProblemsCount == 1) {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.severalProblems\",String.valueOf(globalProblemsCount))); //$NON-NLS-1$\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tout.print(\" (\"); //$NON-NLS-1$\r", "-\t\t\t\t\t\tout.print(\", \"/*nonNLS*/);\r", "+\t\t\t\t\t\tif (globalErrorsCount == 1) {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneError\")); //$NON-NLS-1$\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.severalErrors\",String.valueOf(globalErrorsCount))); //$NON-NLS-1$\r", "+\t\t\t\t\t\t}\r", "-\t\t\t\t\tif (globalWarningsCount == 1) {\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.oneWarning\"/*nonNLS*/));\r", "+\t\t\t\t\tif (globalWarningsCount > 0) {\r", "+\t\t\t\t\t\tif (globalErrorsCount > 0) {\r", "+\t\t\t\t\t\t\tout.print(\", \"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (globalWarningsCount == 1) {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.severalWarnings\",String.valueOf(globalWarningsCount))); //$NON-NLS-1$\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tout.println(\")\"); //$NON-NLS-1$\r", "+\t\t\t\t}\r", "+\t\t\t\tif (exportedClassFilesCounter != 0 && (this.showProgress || this.timer || this.verbose)) {\r", "+\t\t\t\t\tif (exportedClassFilesCounter == 1) {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.severalWarnings\"/*nonNLS*/,String.valueOf(globalWarningsCount)));\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.severalClassFilesGenerated\",String.valueOf(exportedClassFilesCounter))); //$NON-NLS-1$\r", "-\t\t\t\tout.println(\")\"/*nonNLS*/);\r", "-\t\t\tif (exportedClassFilesCounter != 0 && (this.showProgress || this.timer || this.verbose)) {\r", "-\t\t\t\tif (exportedClassFilesCounter == 1) {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.oneClassFileGenerated\"/*nonNLS*/));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.severalClassFilesGenerated\"/*nonNLS*/,String.valueOf(exportedClassFilesCounter)));\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "+\t\t\tif (showProgress) System.out.println();\r", "-\t\tif (showProgress) System.out.println();\r", "-\t\tout.println(\"------------------------\"/*nonNLS*/);\r", "+\t\tout.println(\"------------------------\"); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d947c82f6d6042761fe3e6fe57427e5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void compile(String[] argv)", "signatureAfterChange": "\r protected void compile(String[] argv)", "diff": ["-\t\tif (showProgress) System.out.print(Main.bind(\"progress.compiling\"/*nonNLS*/));\r", "-\t\tfor (int i = 0; i < repetitions; i++){\r", "-\t\t\tglobalProblemsCount = 0;\r", "-\t\t\tglobalErrorsCount = 0;\r", "-\t\t\tglobalWarningsCount = 0;\t\t\r", "-\t\t\tlineCount = 0;\r", "-\t\t\tif (repetitions > 1){\r", "-\t\t\t\tout.flush();\r", "-\t\t\t\tout.println(Main.bind(\"compile.repetition\"/*nonNLS*/,String.valueOf(i+1),String.valueOf(repetitions)));\r", "-\t\t\t}\r", "-\t\t\tlong startTime = System.currentTimeMillis();\r", "-\r", "-\t\t\t// request compilation\r", "-\t\t\tperformCompilation();\r", "-\t\t\tif (timer) {\r", "-\t\t\t\ttime = System.currentTimeMillis() - startTime;\r", "-\t\t\t\tif (lineCount != 0){\r", "-\t\t\t\t\tout.println(Main.bind(\"compile.instantTime\"/*nonNLS*/,new String[]{String.valueOf(lineCount),String.valueOf(time),String.valueOf((((int)((lineCount*10000.0)/time))/10.0))}));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.println(Main.bind(\"compile.totalTime\"/*nonNLS*/,String.valueOf(time)));\r", "-\t\t\t\t\t\r", "+\t\tif(proceed){\r", "+\t\t\tif (showProgress) out.print(Main.bind(\"progress.compiling\")); //$NON-NLS-1$\r", "+\t\t\tfor (int i = 0; i < repetitions; i++){\r", "+\t\t\t\tglobalProblemsCount = 0;\r", "+\t\t\t\tglobalErrorsCount = 0;\r", "+\t\t\t\tglobalWarningsCount = 0;\t\t\r", "+\t\t\t\tlineCount = 0;\r", "+\t\r", "+\t\t\t\tif (repetitions > 1){\r", "+\t\t\t\t\tout.flush();\r", "+\t\t\t\t\tout.println(Main.bind(\"compile.repetition\",String.valueOf(i+1),String.valueOf(repetitions))); //$NON-NLS-1$\r", "-\t\t\t}\r", "-\t\t\tif (globalProblemsCount > 0) {\r", "-\t\t\t\tif (globalProblemsCount == 1) {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.oneProblem\"/*nonNLS*/));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.severalProblems\"/*nonNLS*/,String.valueOf(globalProblemsCount)));\r", "-\t\t\t\t}\r", "-\t\t\t\tout.print(\" (\"/*nonNLS*/);\r", "-\t\t\t\tif (globalErrorsCount > 0) {\r", "-\t\t\t\t\tif (globalErrorsCount == 1) {\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.oneError\"/*nonNLS*/));\r", "+\t\t\t\tlong startTime = System.currentTimeMillis();\r", "+\t\t\t\t// request compilation\r", "+\t\t\t\tperformCompilation();\r", "+\t\t\t\tif (timer) {\r", "+\t\r", "+\t\t\t\t\ttime = System.currentTimeMillis() - startTime;\r", "+\t\t\t\t\tif (lineCount != 0){\r", "+\t\t\t\t\t\tout.println(Main.bind(\"compile.instantTime\",new String[]{String.valueOf(lineCount),String.valueOf(time),String.valueOf((((int)((lineCount*10000.0)/time))/10.0))})); //$NON-NLS-1$\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.severalErrors\"/*nonNLS*/,String.valueOf(globalErrorsCount)));\r", "+\t\t\t\t\t\tout.println(Main.bind(\"compile.totalTime\",String.valueOf(time)));\t\t\t\t //$NON-NLS-1$\r", "-\t\t\t\tif (globalWarningsCount > 0) {\r", "+\t\t\t\tif (globalProblemsCount > 0) {\r", "+\t\t\t\t\tif (globalProblemsCount == 1) {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.severalProblems\",String.valueOf(globalProblemsCount))); //$NON-NLS-1$\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tout.print(\" (\"); //$NON-NLS-1$\r", "-\t\t\t\t\t\tout.print(\", \"/*nonNLS*/);\r", "+\t\t\t\t\t\tif (globalErrorsCount == 1) {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneError\")); //$NON-NLS-1$\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.severalErrors\",String.valueOf(globalErrorsCount))); //$NON-NLS-1$\r", "+\t\t\t\t\t\t}\r", "-\t\t\t\t\tif (globalWarningsCount == 1) {\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.oneWarning\"/*nonNLS*/));\r", "+\t\t\t\t\tif (globalWarningsCount > 0) {\r", "+\t\t\t\t\t\tif (globalErrorsCount > 0) {\r", "+\t\t\t\t\t\t\tout.print(\", \"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (globalWarningsCount == 1) {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.severalWarnings\",String.valueOf(globalWarningsCount))); //$NON-NLS-1$\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tout.println(\")\"); //$NON-NLS-1$\r", "+\t\t\t\t}\r", "+\t\t\t\tif (exportedClassFilesCounter != 0 && (this.showProgress || this.timer || this.verbose)) {\r", "+\t\t\t\t\tif (exportedClassFilesCounter == 1) {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.severalWarnings\"/*nonNLS*/,String.valueOf(globalWarningsCount)));\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.severalClassFilesGenerated\",String.valueOf(exportedClassFilesCounter))); //$NON-NLS-1$\r", "-\t\t\t\tout.println(\")\"/*nonNLS*/);\r", "-\t\t\tif (exportedClassFilesCounter != 0 && (this.showProgress || this.timer || this.verbose)) {\r", "-\t\t\t\tif (exportedClassFilesCounter == 1) {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.oneClassFileGenerated\"/*nonNLS*/));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.severalClassFilesGenerated\"/*nonNLS*/,String.valueOf(exportedClassFilesCounter)));\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "+\t\t\tif (showProgress) System.out.println();\r", "-\t\tif (showProgress) System.out.println();\r", "-\t\tout.println(\"------------------------\"/*nonNLS*/);\r", "+\t\tout.println(\"------------------------\"); //$NON-NLS-1$\r"]}], "num": 55663}