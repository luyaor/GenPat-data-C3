{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41dbd8d3b492984ce6c422f5e1c49ab8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3615ad026a017b35c5c8b0fa6f79a36e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "c53fb291a849342748306e59b6959038f8ec1321", "commitAfterChange": "d5a32e245b27c645dcf70347396d7253765682d3", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public void test097()", "signatureAfterChange": " public void test097()", "diff": ["+\t\t\t\"\t\t\tdefault: // nop\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93efdf521cc6b9616629ae347ed665b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void test417935() throws JavaModelException", "signatureAfterChange": " public void test417935() throws JavaModelException", "diff": ["-public void test417935() throws JavaModelException {", "+public void test417935() throws JavaModelException {  // JCL_MIN does not have the relevant classes - these are needed to handle lambda. Use local versions.", "-\t\t\t\"import java.util.ArrayList;\\n\" +", "-\t\t\t\"import java.util.Arrays;\\n\" +", "-\t\t\t\"import java.util.Collections;\\n\" +", "-\t\t\t\"import java.util.Comparator;\\n\" +", "-\t\t\t\"public class X {\\n\" +", "-\t\t\t\"   int compareTo(X x) { return 0; }\\n\" +", "-\t\t\t\"\tvoid foo() {\\n\" +", "-\t\t\t\"\t\tCollections.sort(new ArrayList<X>(Arrays.asList(new X(), new X(), new X())),\\n\" +", "-\t\t\t\"\t\t\t\t(X o1, X o2) -> o1.compareTo(o2)); //[2]\\n\" +", "+\t\t\t\"class Collections {\\n\" +", "+\t\t\t\"\tpublic static void sort(ArrayList list, Comparator c) {\\n\" +", "-\t\t\t\"\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"interface Comparator {\\n\" +", "+\t\t\t\"\tint compareTo(X t, X s);\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"class ArrayList {\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tint compareTo(X x) { return 0; }\\n\" +", "+\t\t\t\"\tvoid foo() {\\n\" +", "+\t\t\t\"\t\tCollections.sort(new ArrayList(), (X o1, X o2) -> o1.compareTo(o2));\\n\" +"]}], "num": 71177}