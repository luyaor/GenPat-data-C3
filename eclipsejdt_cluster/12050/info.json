{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94277201e3f9dcd1eaa98ccedda94b35", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1703a116dbf624fbc0324e3108e4f949", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\tif (this.codegenBinding.isPrivate()", "-\t\t\t&& (currentScope.enclosingSourceType() != this.codegenBinding.declaringClass)) {", "+\t\tReferenceBinding declaringClass;", "+\t\tif (this.codegenBinding.isPrivate() && currentScope.enclosingSourceType() != (declaringClass = this.codegenBinding.declaringClass)) {", "-\t\t\tif (currentScope.compilerOptions().isPrivateConstructorAccessChangingVisibility) {", "-\t\t\t\tthis.codegenBinding.tagForClearingPrivateModifier();", "+\t\t\t// optionally, local type constructor can lose their private flag to ease emulation", "+\t\t\tif ((declaringClass.tagBits & (TagBits.IsAnonymousType|TagBits.IsLocalType)) != 0", "+\t\t\t\t\t&& currentScope.compilerOptions().isPrivateConstructorAccessChangingVisibility) {", "+\t\t\t\tthis.codegenBinding.modifiers |= ExtraCompilerModifiers.AccClearPrivateModifier;", "-\t\t\t\tsyntheticAccessor =", "-\t\t\t\t\t((SourceTypeBinding) this.codegenBinding.declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());", "+\t\t\t\tsyntheticAccessor = ((SourceTypeBinding) declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c749f0501aa8e7ce37358811c8d154cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-", "-\t\t\tif (currentScope.compilerOptions().isPrivateConstructorAccessChangingVisibility) {", "-\t\t\t\tthis.codegenBinding.tagForClearingPrivateModifier();", "+\t\t\tReferenceBinding declaringClass = this.codegenBinding.declaringClass;", "+\t\t\t// optionally, local type constructor can lose their private flag to ease emulation", "+\t\t\tif ((declaringClass.tagBits & (TagBits.IsAnonymousType|TagBits.IsLocalType)) != 0", "+\t\t\t\t\t&& currentScope.compilerOptions().isPrivateConstructorAccessChangingVisibility) {", "+\t\t\t\tthis.codegenBinding.modifiers |= ExtraCompilerModifiers.AccClearPrivateModifier;", "-\t\t\t\tsyntheticAccessor =", "-\t\t\t\t\t((SourceTypeBinding) this.codegenBinding.declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());", "+\t\t\t\tsyntheticAccessor = ((SourceTypeBinding) declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());"]}], "num": 12050}