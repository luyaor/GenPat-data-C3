{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13cdee7a249f0efe3807280bfb3386aa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb41c059e33b080d3ac9fcba447ab5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "5ada635301ad663e7db915614d828bbc7aa46d61", "commitAfterChange": "cbc8f5f3c738236c6871b4d17c1d26523e945ba7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-", "+\t\t", "+\t\tMethodScope methodScope = scope.namedMethodScope();", "+\t\tif (methodScope != null) {", "+\t\t\tMethodBinding method = methodScope.referenceMethodBinding();", "+\t\t\tif (method != null) {", "+\t\t\t\tTypeBinding receiver = method.receiver;", "+\t\t\t\twhile (receiver != null) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(receiver, this.resolvedType))", "+\t\t\t\t\t\treturn this.resolvedType = receiver;", "+\t\t\t\t\treceiver = receiver.enclosingType();\t", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5a2c512fd378ecc7ffd6e568fc59345", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThisReference.java", "commitBeforeChange": "5ada635301ad663e7db915614d828bbc7aa46d61", "commitAfterChange": "cbc8f5f3c738236c6871b4d17c1d26523e945ba7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treturn this.resolvedType = enclosingReceiverType;", "+\t\tthis.resolvedType = enclosingReceiverType;", "+\t\tMethodScope methodScope = scope.namedMethodScope();", "+\t\tif (methodScope != null) {", "+\t\t\tMethodBinding method = methodScope.referenceMethodBinding();", "+\t\t\tif (method != null && method.receiver != null && TypeBinding.equalsEquals(method.receiver, this.resolvedType))", "+\t\t\t\tthis.resolvedType = method.receiver;", "+\t\t}", "+\t\treturn this.resolvedType;"]}], "num": 2409}