{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caffc7dfcb85a02a068a266224f8e94e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02589f1d25397349855bc56e0bf2d8ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "7e90cfc843b0651b2df6811a5c412b5db3d07d3e", "commitAfterChange": "5aa22ef02c63418c06be6cd6a1ebf3ebbd649c6f", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void explitAnnotationTargetRequired(Annotation annotation)", "signatureAfterChange": " public void explitAnnotationTargetRequired(Annotation annotation)", "diff": ["-\tint kind = annotation.recipient.kind();", "-\tif (kind == Binding.TYPE_USE) {", "-\t\tthis.handle(IProblem.ExplicitAnnotationTargetRequired,", "-\t\t\tnew String[] {new String(annotation.resolvedType.readableName())},", "-\t\t\tnew String[]{new String(TypeConstants.TYPE_USE_TARGET)},", "+\tthis.handle(IProblem.ExplicitAnnotationTargetRequired,", "+\t\t\tNoArgument,", "+\t\t\tNoArgument,", "-\t}", "-\telse if (kind == Binding.TYPE_PARAMETER) {", "-\t\tthis.handle(IProblem.ExplicitAnnotationTargetRequired,", "-\t\t\t\tnew String[] {new String(annotation.resolvedType.readableName())},", "-\t\t\t\tnew String[]{new String(TypeConstants.TYPE_PARAMETER_TARGET)},", "-\t\t\t\tannotation.sourceStart,", "-\t\t\t\tannotation.sourceEnd);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "512efaf6ce1b0bfebd2e8c2e13787834", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "45342f8bb4f6d2ee4110ba3a5733c6f91b36b60e", "commitAfterChange": "ab8ca59a5dd4b7954a1bf4f4ac6d29a32841c241", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " public void deprecatedType(TypeBinding type, ASTNode location)", "signatureAfterChange": " public void deprecatedType(TypeBinding type, ASTNode location)", "diff": ["+\tdeprecatedType(type, location, Integer.MAX_VALUE);", "+}", "-\t\tnodeSourceEnd(null, location));"]}], "num": 12306}