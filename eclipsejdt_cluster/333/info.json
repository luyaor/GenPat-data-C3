{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b39c5f7e2a6264eec257706dbd6723b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7afbb75166cf12439fed5321f20526ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ProblemFieldBinding.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public ProblemFieldBinding(ReferenceBinding declaringClass, char[][] compoundName, int problemId)", "signatureAfterChange": "  public ProblemFieldBinding(FieldBinding closestMatch, char[][] compoundName, int problemId)", "diff": ["-public ProblemFieldBinding(ReferenceBinding declaringClass, char[][] compoundName, int problemId) {", "-\tthis(null, declaringClass, CharOperation.concatWith(compoundName, '.'), problemId);", "+public ProblemFieldBinding(FieldBinding closestMatch, char[][] compoundName, int problemId) {", "+\tthis(closestMatch, closestMatch == null ? null : closestMatch.declaringClass, CharOperation.concatWith(compoundName, '.'), problemId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa034598bb3c313ce061ed274f5e9e8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "60532165038664c30ff2432e43f4dc89f46bcdd4", "commitAfterChange": "612e1dcd06a54486bd7faaa14cb4eb34e1293251", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "diff": ["-\t\t\ttypeInfo.declarationStart = typeDeclaration.declarationSourceStart;", "+\t\t\ttypeInfo.declarationStart = typeDeclaration.allocation == null ? typeDeclaration.declarationSourceStart : typeDeclaration.allocation.sourceStart;"]}], "num": 333}