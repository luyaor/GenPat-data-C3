{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7f51872ed3cf4e82d25f2126037ae53", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da74ac27451d9bf503c9cb80914590c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "1209010fd2d01b73be2d5ddcc68dee954a4dfb12", "commitAfterChange": "e2d64401ee163038583789c4f8e64653502b280a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public void manageSyntheticWriteAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\r public void manageSyntheticWriteAccessIfNecessary(BlockScope currentScope)", "diff": ["+\t\t\treturn;\r", "-\r", "+\t\treturn;\r", "+\t\t\r", "+\t\t\treturn;\r", "+\t// if the binding declaring class is not visible, need special action\r", "+\t// for runtime compatibility on 1.2 VMs : change the declaring class of the binding\r", "+\t// NOTE: from 1.4 on, field's declaring class is touched if any different from receiver type\r", "+\tif (binding.declaringClass != this.receiverType\r", "+\t\t&& !this.receiverType.isArrayType()\r", "+\t\t&& binding.declaringClass != null // array.length\r", "+\t\t&& binding.constant == NotAConstant\r", "+\t\t&& ((currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t&& binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r", "+\t\t\t|| !binding.declaringClass.canBeSeenBy(currentScope))){\r", "+\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(binding, (ReferenceBinding) this.receiverType);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bed7d8e9b06dfcefe6dea608e30ca750", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "1209010fd2d01b73be2d5ddcc68dee954a4dfb12", "commitAfterChange": "e2d64401ee163038583789c4f8e64653502b280a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tbinding = scope.getField(this.receiverType, token, this);\r", "+\tthis.codegenBinding = this.binding = scope.getField(this.receiverType, token, this);\r", "-\t// if the binding declaring class is not visible, need special action\r", "-\t// for runtime compatibility on 1.2 VMs : change the declaring class of the binding\r", "-\t// NOTE: from 1.4 on, field's declaring class is touched if any different from receiver type\r", "-\tif (binding.declaringClass != this.receiverType\r", "-\t\t&& !this.receiverType.isArrayType()\r", "-\t\t&& binding.declaringClass != null // array.length\r", "-\t\t&& binding.constant == NotAConstant\r", "-\t\t&& ((scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "-\t\t\t\t&& binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r", "-\t\t\t|| !binding.declaringClass.canBeSeenBy(scope))){\r", "-\t\t\tbinding = new FieldBinding(binding, (ReferenceBinding) this.receiverType);\r", "-\t}\r"]}], "num": 62184}