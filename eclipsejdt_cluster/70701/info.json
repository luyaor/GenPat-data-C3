{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20a38fead52ec4b27ef72eec3a820860", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1187aedfc2592b827fc8ebff8c23aa4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "d25d8e2aefb1fe7881a3b669cacd403afc528b1a", "commitAfterChange": "c768bb705d25a055607160ce11d239f196ca5653", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void compile(SourceFile[] units)", "signatureAfterChange": " protected void compile(SourceFile[] units)", "diff": ["-\tint unitsLength = units.length;", "+\tif (this.filesDeclaringAnnotation != null && this.filesDeclaringAnnotation.elementSize > 0)", "+\t\t// will add files that declare annotations in acceptResult() & then processAnnotations() before exitting this method", "+\t\tthis.filesDeclaringAnnotation.clear();", "+\t// notify CompilationParticipants (that !isAnnotationProcessor()) which source files are about to be compiled", "+\tCompilationParticipantResult[] participantResults = notifyParticipants(units);", "+\tif (participantResults != null)", "+\t\tunits = processParticipantResults(participantResults, units);", "+", "+\tint unitsLength = units.length;", "+", "+\tif (participantResults != null)", "+\t\tfor (int i = participantResults.length; --i >= 0;)", "+\t\t\tif (participantResults[i] != null)", "+\t\t\t\trecordParticipantResult(participantResults[i]);", "+", "+\tif (this.filesDeclaringAnnotation != null)", "+\t\tprocessAnnotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa6fb7d8d536b622208fa13412321b97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void compile(SourceFile[] units)", "signatureAfterChange": " protected void compile(SourceFile[] units)", "diff": ["-\tif (this.filesDeclaringAnnotation != null && this.filesDeclaringAnnotation.elementSize > 0)", "-\t\t// will add files that declare annotations in acceptResult() & then processAnnotations() before exitting this method", "-\t\tthis.filesDeclaringAnnotation.clear();", "+\tif (this.filesWithAnnotations != null && this.filesWithAnnotations.elementSize > 0)", "+\t\t// will add files that have annotations in acceptResult() & then processAnnotations() before exitting this method", "+\t\tthis.filesWithAnnotations.clear();", "-\t// notify CompilationParticipants (that !isAnnotationProcessor()) which source files are about to be compiled", "-\tCompilationParticipantResult[] participantResults = notifyParticipants(units);", "-\tif (participantResults != null)", "-\t\tunits = processParticipantResults(participantResults, units);", "+\t// notify CompilationParticipants which source files are about to be compiled", "+\tCompilationParticipantResult[] participantResults = this.javaBuilder.participants == null ? null : notifyParticipants(units);", "+\tif (participantResults != null && participantResults.length > units.length) {", "+\t\tunits = new SourceFile[participantResults.length];", "+\t\tfor (int i = participantResults.length; --i >= 0;)", "+\t\t\tunits[i] = participantResults[i].sourceFile;", "+\t}", "-\tif (participantResults != null)", "+\tif (participantResults != null) {", "-\tif (this.filesDeclaringAnnotation != null)", "-\t\tprocessAnnotations();", "+\t\tprocessAnnotations(participantResults);", "+\t}"]}], "num": 70701}