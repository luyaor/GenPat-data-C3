{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be4851c4b823475e2d8da43a2a3159b3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a796f41960c0b611bcdc9e3842b2c8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "commitAfterChange": "c60de4437b4d035451e0f92e32cb7ffd4a65170d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private void fixSupertypeBindings()", "signatureAfterChange": " private void fixSupertypeBindings()", "diff": ["-\t\t\t\tif (superclass instanceof ProblemReferenceBinding) {", "-\t\t\t\t\tsuperclass = ((ProblemReferenceBinding) superclass).closestMatch();", "-\t\t\t\t}", "+\t\t\t\t\tsuperclass = superclass.closestMatch();", "+\t\t\t\t}", "+\t\t\t\tif (superclass instanceof ReferenceBinding) {", "-\t\t\t\t\t\tReferenceBinding superInterface = (ReferenceBinding) superInterfaces[i].resolvedType;", "+\t\t\t\t\t\tTypeBinding superInterface = superInterfaces[i].resolvedType;", "-\t\t\t\t\t\t\tif (!superInterface.isValidBinding()) {", "-\t\t\t\t\t\t\t\tTypeBinding closestMatch = superInterface.closestMatch();", "-\t\t\t\t\t\t\t\tif (closestMatch instanceof ReferenceBinding) {", "-\t\t\t\t\t\t\t\t\tsuperInterface = (ReferenceBinding) closestMatch;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tsuperInterface = null;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (superInterface != null) {", "-\t\t\t\t\t\t\t\t// ensure we are not creating a cycle (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=215681 )", "-\t\t\t\t\t\t\t\tif (!(subTypeOfType(superInterface, typeBinding))) {", "-\t\t\t\t\t\t\t\t\tinterfaceBindings[index++] = superInterface;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tsuperInterface = superInterface.closestMatch();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (superInterface instanceof ReferenceBinding) {", "+\t\t\t\t\t\t\t// ensure we are not creating a cycle (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=215681 )", "+\t\t\t\t\t\t\tif (!(subTypeOfType((ReferenceBinding) superInterface, typeBinding))) {", "+\t\t\t\t\t\t\t\tinterfaceBindings[index++] = (ReferenceBinding) superInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c05f715adb3e720aee2b2419449e9bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "727d8ca46d64642ad4f629f81ba37e76e7ae8c85", "commitAfterChange": "3bf739514a83473db763d6e900f7cc23c49722a4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\tnext : for (int i = 0, l = superInterfaces.length; i < l; i++) {", "+\tSimpleSet redundantInterfaces = null;  // bark but once.", "+\tfor (int i = 0, l = superInterfaces.length; i < l; i++) {", "-\t\t\tif (i != j && toCheck.implementsInterface(superInterfaces[j], true)) {", "+\t\t\tReferenceBinding implementedInterface = superInterfaces[j];", "+\t\t\tif (i != j && toCheck.implementsInterface(implementedInterface, true)) {", "+\t\t\t\tif (redundantInterfaces == null) {", "+\t\t\t\t\tredundantInterfaces = new SimpleSet(3);", "+\t\t\t\t} else if (redundantInterfaces.includes(implementedInterface)) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tredundantInterfaces.add(implementedInterface);", "-\t\t\t\t\t\tproblemReporter().redundantSuperInterface(this.type, refs[j], superInterfaces[j], toCheck);", "-\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\tproblemReporter().redundantSuperInterface(this.type, refs[j], implementedInterface, toCheck);", "+\t\t\t\t\t\tbreak; // https://bugs.eclipse.org/bugs/show_bug.cgi?id=320911", "+\t\t\t\t\t\tif (redundantInterfaces == null) {", "+\t\t\t\t\t\t\tredundantInterfaces = new SimpleSet(3);", "+\t\t\t\t\t\t} else if (redundantInterfaces.includes(inheritedInterface)) {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tredundantInterfaces.add(inheritedInterface);", "+\t\t\t\t\t\tif (redundantInterfaces == null) {", "+\t\t\t\t\t\t\tredundantInterfaces = new SimpleSet(3);", "+\t\t\t\t\t\t} else if (redundantInterfaces.includes(inheritedInterface)) {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tredundantInterfaces.add(inheritedInterface);"]}], "num": 59715}