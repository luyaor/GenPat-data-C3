{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e614bf54a9ee791378fb2d1803f0d7b2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a21a9580bdd588319ba5bbcc51a7c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public static int getParameterCount(String methodSignature) throws IllegalArgumentException", "signatureAfterChange": "\r public static int getParameterCount(char[] methodSignature) throws IllegalArgumentException", "diff": ["-public static int getParameterCount(String methodSignature) throws IllegalArgumentException {\r", "+public static int getParameterCount(char[] methodSignature) throws IllegalArgumentException {\r", "-\t\tint i = methodSignature.indexOf(C_PARAM_START) + 1;\r", "+\t\tint i = CharOperation.indexOf(C_PARAM_START, methodSignature) + 1;\r", "-\t\t\tchar c = methodSignature.charAt(i++);\r", "+\t\t\tchar c = methodSignature[i++];\r", "-\t\t\t\t\ti = methodSignature.indexOf(C_SEMICOLON, i) + 1;\r", "+\t\t\t\t\ti = CharOperation.indexOf(C_SEMICOLON, methodSignature, i) + 1;\r", "-\t} catch (StringIndexOutOfBoundsException e) {\r", "+\t} catch (ArrayIndexOutOfBoundsException e) {\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc5e6a21ef67a8359d0c96ccc2cc3ff1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "8873795d3456fd4eb978570ebf0c2587e004407c", "commitAfterChange": "811f4b05d58ca33710b13af0352652814cf9e788", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate int[] computeChildRange(int anchorEndStart, String anchor, int indexOfBottom)", "signatureAfterChange": " \t \tprivate int[] computeChildRange(int anchorEndStart, char[] anchor, int indexOfBottom)", "diff": ["-\tprivate int[] computeChildRange(int anchorEndStart, String anchor, int indexOfBottom) {", "+\tprivate int[] computeChildRange(int anchorEndStart, char[] anchor, int indexOfBottom) {", "-\t\t\tint indexOfEndLink = this.content.indexOf(JavadocConstants.ANCHOR_SUFFIX, anchorEndStart + anchor.length());", "+\t\t\tint indexOfEndLink = CharOperation.indexOf(JavadocConstants.ANCHOR_SUFFIX, this.content, false, anchorEndStart + anchor.length);", "-\t\t\t\tint indexOfNextElement = this.content.indexOf(JavadocConstants.ANCHOR_PREFIX_START, indexOfEndLink);", "+\t\t\t\tint indexOfNextElement = CharOperation.indexOf(JavadocConstants.ANCHOR_PREFIX_START, this.content, false, indexOfEndLink);"]}], "num": 40286}