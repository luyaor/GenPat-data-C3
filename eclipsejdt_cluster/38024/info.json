{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a7e1454b5907fb8d59950648ce6220f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d73aa88bfc9e66e1582554f6d37ef84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "551b0235ed10e5d5f4d3b002cdf8b4334747504f", "commitAfterChange": "6c1edb564d07834166fc74b2c0a63633a50ccf36", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic void test086()", "signatureAfterChange": " \tpublic void _test086()", "diff": ["-\tpublic void test086() {", "+\tpublic void _test086() {", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static void checkConversions(byte _byte) {\\n\" + ", "-\t\t\t\t\"\t\tShort s = (short) _byte; // cast reported is necessary\\n\" + ", "-\t\t\t\t\"\t\tShort s2 = _byte; // ko\\n\" + ", "-\t\t\t\t\"\t} \\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"    public static void main(String args[]) {\\n\" + ", "-\t\t\t\t\"        byte _byte = 2;\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"        checkConversions(_byte);\\n\" + ", "-\t\t\t\t\"        System.out.println(\\\"OK\\\");\\n\" + ", "-\t\t\t\t\"      }\\n\" + ", "+\t\t\t\t\"  private static void checkConversions(byte _byte) {\\n\" + ", "+\t\t\t\t\"    Short s = (short) _byte; // cast is necessary\\n\" + ", "+\t\t\t\t\"    Short s2 = _byte; // ko\\n\" + ", "+\t\t\t\t\"  } \\n\" + ", "+\t\t\t\t\"  public static void main(String args[]) {\\n\" + ", "+\t\t\t\t\"    byte _byte = 2;\\n\" + ", "+\t\t\t\t\"    checkConversions(_byte);\\n\" + ", "+\t\t\t\t\"    System.out.println(\\\"OK\\\");\\n\" + ", "+\t\t\t\t\"  }\\n\" + ", "-            \"----------\\n\" + ", "-            \"1. WARNING in X.java (at line 4)\\n\" + ", "-            \"   Short s = (short) _byte; // cast reported is necessary\\n\" + ", "-            \"             ^^^^^^^^^^^^^\\n\" + ", "-            \"The expression of type short is boxed into Short\\n\" + ", "-            \"----------\\n\" + ", "-            \"2. ERROR in X.java (at line 5)\\n\" + ", "-            \"   Short s2 = _byte; // ko\\n\" + ", "-            \"         ^^\\n\" + ", "-            \"Type mismatch: cannot convert from byte to Short\\n\" + ", "-            \"----------\\n\");", "+        \"----------\\n\" + ", "+        \"1. WARNING in X.java (at line 3)\\n\" + ", "+        \"   Short s = (short) _byte; // cast is necessary\\n\" + ", "+        \"             ^^^^^^^^^^^^^\\n\" + ", "+        \"The expression of type short is boxed into Short\\n\" + ", "+        \"----------\\n\" + ", "+        \"2. ERROR in X.java (at line 4)\\n\" + ", "+        \"   Short s2 = _byte; // ko\\n\" + ", "+        \"         ^^\\n\" + ", "+        \"Type mismatch: cannot convert from byte to Short\\n\" + ", "+        \"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86f2861831b67de2c59dfab08c26f69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test001()", "signatureAfterChange": " \tpublic void test001()", "diff": ["+\t\t\t\"  // Method descriptor  #19 ()I\\n\" + ", "+\t\t\t\"  // Stack: 3, Locals: 1\\n\" + ", "-\t\t\t\"    /* Stack: 3, Locals: 1 */\\n\" + ", "-\t\t\t\"    Code attribute:\\n\" + ", "-\t\t\t\"       0  new #21 A001$1$A\\n\" + ", "-\t\t\t\"       3  dup\\n\" + ", "-\t\t\t\"       4  aload_0\\n\" + ", "-\t\t\t\"       5  invokespecial #24 <Constructor A001$1$A(A001 arg)>\\n\" + ", "-\t\t\t\"       8  invokevirtual #27 <Method A001$1$A#get() int>\\n\" + ", "-\t\t\t\"      11  ireturn\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"    Line number attribute:\\n\" + ", "-\t\t\t\"      [pc: 0, line: 9]\\n\" + ", "-\t\t\t\"    Local variable table attribute:\\n\" + ", "-\t\t\t\"      [pc: 0, pc: 12] local: this index: 0 type: A001\\n\";", "+\t\t\t\"     0  new #21 A001$1$A\\n\" + ", "+\t\t\t\"     3  dup\\n\" + ", "+\t\t\t\"     4  aload_0\\n\" + ", "+\t\t\t\"     5  invokespecial #24 <Method A001$1$A.<init>(LA001;)V>\\n\" + ", "+\t\t\t\"     8  invokevirtual #27 <Method A001$1$A.get()I>\\n\" + ", "+\t\t\t\"    11  ireturn\\n\" + ", "+\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\"        [pc: 0, line: 9]\\n\" + ", "+\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: LA001;\\n\"; "]}], "num": 38024}