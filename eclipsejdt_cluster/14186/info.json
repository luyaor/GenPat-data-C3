{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "219d81a538c416b8b1e11f5ed8308fb3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e9f99980e24d320cbaa9751268c19b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "890f12769080ec7e336b8a6c7a5ccafda55e441c", "commitAfterChange": "59c21df7bbb3eb9f4d564c252a3eb81338b6548b", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " protected void consumeEnumConstantHeader()", "signatureAfterChange": " protected void consumeEnumConstantHeader()", "diff": ["-      enumConstant.declarationSourceEnd = flushCommentsDefinedPriorTo(rParenPos);", "+//      enumConstant.declarationSourceEnd = flushCommentsDefinedPriorTo(rParenPos);", "-   if (this.currentToken == TokenNameLBRACE){", "+   boolean foundOpeningBrace = this.currentToken == TokenNameLBRACE;", "+   if (foundOpeningBrace){", "+\t  if(this.currentToken == TokenNameSEMICOLON) {", "+\t  \tthis.isInsideEnumConstantPart = false;", "+\t  }", "-      this.lastCheckPoint = enumConstant.sourceEnd + 1;", "+      this.lastCheckPoint = enumConstant.declarationEnd + 1;", "+//      this.currentElement.foundOpeningBrace = foundOpeningBrace;", "+      this.restartRecovery = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541bbfd0cfbdd316c54d9c8f61aa1ea5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "890f12769080ec7e336b8a6c7a5ccafda55e441c", "commitAfterChange": "59c21df7bbb3eb9f4d564c252a3eb81338b6548b", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " protected void consumeEnumHeader()", "signatureAfterChange": " protected void consumeEnumHeader()", "diff": ["-\t// EnumHeader ::= Modifiersopt 'enum' Identifier", "+\tTypeDeclaration typeDecl = (TypeDeclaration) this.astStack[this.astPtr];\t", "+\tif (this.currentToken == TokenNameLBRACE) { ", "+\t\ttypeDecl.bodyStart = this.scanner.currentPosition;", "+\t}", "+", "+\tif (this.currentElement != null) {", "+\t\tthis.isInsideEnumConstantPart = true;", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "+\t}", "+\t", "+\t// flush the comments related to the enum header", "+\tthis.scanner.commentPtr = -1;", "+}", "-\tif (this.currentToken == TokenNameLBRACE) { ", "-\t\tenumDeclaration.bodyStart = this.scanner.currentPosition;", "-\t}"]}], "num": 14186}