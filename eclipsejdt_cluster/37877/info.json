{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77a3796524b44627e8c8ec4de407e235", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "844b4a33b912ff76d67249250f8649c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "eae9b6d133d1e0c7d2c9c5eea34b3530b0d87bc7", "commitAfterChange": "f3b2714ce76600cbff47416c089b334d95e8398e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo addInitializationsFrom(FlowInfo inits)", "signatureAfterChange": "  public FlowInfo addInitializationsFrom(FlowInfo inits)", "diff": ["+\treturn addInfoFrom(inits, true);", "+}", "-\t// union of definitely assigned variables,", "-\tthis.definiteInits |= otherInits.definiteInits;", "-\t// union of potentially set ones", "-\tthis.potentialInits |= otherInits.potentialInits;", "-\t\t// manage definite assignment info", "-\t\tfor (i = 0; i < mergeLimit; i++) {", "-\t\t\tthis.extra[0][i] |= otherInits.extra[0][i];", "-\t\t\tthis.extra[1][i] |= otherInits.extra[1][i];", "-\t\t}", "-\t\tfor (; i < copyLimit; i++) {", "-\t\t\tthis.extra[0][i] = otherInits.extra[0][i];", "-\t\t\tthis.extra[1][i] = otherInits.extra[1][i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3eaa335ad5392dad3ef5ddf3b1674d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "commitAfterChange": "23872cdac6fbbd78479a7f309cf6a923f8b64047", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "signatureAfterChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "diff": ["+\t\tthis.iNBit = otherInits.iNBit;", "+\t\tthis.iNNBit = otherInits.iNNBit;", "+    \tthis.iNBit |= otherInits.iNBit;", "+    \tthis.iNNBit |= otherInits.iNNBit;", "+  \t\tthis.iNBit |= otherInits.iNBit;", "+  \t\tthis.iNNBit |= otherInits.iNNBit;", "+\t\t\tSystem.arraycopy(otherInits.extra[IN], 0, this.extra[IN], 0, otherLength);", "+\t\t\tSystem.arraycopy(otherInits.extra[INN], 0, this.extra[INN], 0, otherLength);", "+    \t\tthis.extra[IN][i] |= otherInits.extra[IN][i];", "+    \t\tthis.extra[INN][i] |= otherInits.extra[INN][i];", "+    \t\tthis.extra[IN][i] |= otherInits.extra[IN][i];", "+    \t\tthis.extra[INN][i] |= otherInits.extra[INN][i];"]}], "num": 37877}