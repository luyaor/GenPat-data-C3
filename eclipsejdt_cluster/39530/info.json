{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2189e862729a919aa78e11e23c166a55", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23f9d28884ba8639582a7253670623e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "0c46c5213b09d0da0f69c7b26f904c0f9c4b8264", "commitAfterChange": "5bd4bb71a504f8c91120347898b17a55db5d46e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r protected void buildStructure(OpenableElementInfo info, IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException", "diff": ["-protected void buildStructure(OpenableElementInfo info, IProgressMonitor pm) throws JavaModelException {\r", "+protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException {\r", "+\tif (monitor != null && monitor.isCanceled()) return;\r", "+\t\r", "-\tinfo.setIsStructureKnown(generateInfos(info, pm, newElements, getUnderlyingResource()));\r", "+\tinfo.setIsStructureKnown(generateInfos(info, monitor, newElements, getUnderlyingResource()));\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f2a5b6a149a4126abd5406facdb2988", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "3d9dfcf2d4683f81f20b400a02d628c05183bbef", "commitAfterChange": "10f53ffde4fd2f21862aebc4c2818dc05c3ec342", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void finalizeProblems()", "signatureAfterChange": "  public void finalizeProblems()", "diff": ["+\t\tint irritant = ProblemReporter.getIrritant(problemID);", "-\t\t\t// tolerate unused warning tokens which were promoted as errors", "+\t\t\t\t// tolerate unused warning tokens which were promoted as errors", "-\t\t\tcontinue;", "+\t\t\tif (irritant == 0 || !options.suppressOptionalErrors) {", "+\t\t\t\tcontinue;", "+\t\t\t}", "-\t\tint irritant = ProblemReporter.getIrritant(problemID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "493e027e2a85e50549e632b2b32438c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "69f933755a85c0dc1d0776a555a1e8e0ec4d3c84", "commitAfterChange": "0be5d06687e970925fd56f686bb007a501207716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": "  \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "diff": ["-\t\t\t\t\t\t&& !constructor.canBeSeenBy(invocationSite, scope)) continue next;", "+\t\t\t\t\t\t&& !constructor.canBeSeenBy(invocationSite, scope)) {", "+\t\t\t\t\t\tif(!forAnonymousType || !constructor.isProtected())", "+\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7226c8d59601339c3d040d7a03e897", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "c74124c71dc16aadffc9c127481cf29440dd03c8", "commitAfterChange": "2d053de9651cebac3cf0a82f4012b7196ccb5c83", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-    \t\tthis.exactMethodBinding = isMethodReference() ? scope.getExactMethod(lhsType, this.selector, this) : scope.getExactConstructor(lhsType, this);", "+    \t\tif (lhsType != null && !lhsType.isRawType()) // RawType::m and RawType::new are not exact method references", "+    \t\t\tthis.exactMethodBinding = isMethodReference() ? scope.getExactMethod(lhsType, this.selector, this) : scope.getExactConstructor(lhsType, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5622a3a2e5684bf0b8ed6d863fd3cd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/XMLWriter.java", "commitBeforeChange": "52122b3855e6f0a9596ec4f8fb56fcf44094c219", "commitAfterChange": "79c00ebc09dd86d77f7afcfde083ecfe86e6c03b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void printTag(String name, HashMap parameters, boolean insertTab, boolean insertNewLine, boolean closeTag)", "signatureAfterChange": " \tpublic void printTag(String name, HashMap parameters, boolean insertTab, boolean insertNewLine, boolean closeTag)", "diff": ["-\t\t} else {", "-\t\t\ttab++;", "+\t\tif (parameters != null && !closeTag)", "+\t\t\tthis.tab++;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9085b5f46b7d3c46ef1c1ff6f1ae89f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "582eb93dfcda39c268d1ac3d9713da9a75209c41", "commitAfterChange": "b2f784dfd59e9b7c6e126b5461541c8c7c43391b", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tprivate void addExpectedType(TypeBinding type)", "signatureAfterChange": " \tprivate void addExpectedType(TypeBinding type)", "diff": ["+\t\tif(type == null || !type.isValidBinding()) return;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6c9513d22e0a3087a8c5e5a463c8d2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "202607fb9919877e62cf5fdadc3a57e2841d86fd", "commitAfterChange": "0ac030bdfe933c642b7372a2bd2d95a0102341ed", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "diff": ["+", "+\t\tif (monitor != null && monitor.isCanceled()) return;"]}], "num": 39530}