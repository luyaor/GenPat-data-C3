{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "219b7a2b39e14d52f278f1f8fb725896", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f48d758da82a8417fac99b5699802f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "130cb4765fd3f636bbf53ed159d4905dec0a5fd5", "commitAfterChange": "938f4b2ad6ef3c12e60db3be23aed731979677d7", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void test_nonnull_parameter_015()", "signatureAfterChange": " public void test_nonnull_parameter_015()", "diff": ["-\t\t\t\"The argument of type null should explicitly be cast to Object[] for the invocation of the varargs method foo2(int, Object...) from type X. It could alternatively be cast to Object for a varargs invocation\\n\" + ", "+\t\t\t\"Type null of the last argument to method foo2(int, Object...) doesn't exactly match the vararg parameter type. Cast to Object[] to confirm the non-varargs invocation, or pass individual arguments of type Object for a varargs invocation.\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6aaa08981a6eb27bc67505b45e5aa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "8c77956bb14bf31d316463be9556a2204834682b", "commitAfterChange": "366617dbc4fc1d9363db17217a7ae199f0f005ea", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void test_nonnull_parameter_015()", "signatureAfterChange": " public void test_nonnull_parameter_015()", "diff": ["-\t\t\t\"The argument of type null should explicitly be cast to Object[] for the invocation of the varargs method foo2(int, Object...) from type X. It could alternatively be cast to Object for a varargs invocation\\n\" + ", "+\t\t\t\"Type null of the last argument to method foo2(int, Object...) doesn't exactly match the vararg parameter type. Cast to Object[] to confirm the non-varargs invocation, or pass individual arguments of type Object for a varargs invocation.\\n\" + "]}], "num": 26426}