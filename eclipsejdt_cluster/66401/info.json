{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a2ca90bae762acfc1df1e2e2b258f62", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71081ee1755bb69b52e7f156f3e0d174", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionJavadoc.java", "commitBeforeChange": "1283becde4269d4bd1b131ede84504f893ae6981", "commitAfterChange": "24071af935ae982264becd6377e49aeb82ae6605", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void internalResolve(Scope scope)", "signatureAfterChange": " \tprivate void internalResolve(Scope scope)", "diff": ["+\t\t} else if (this.inheritDocSelected) {", "+\t\t\t// no selection node when inheritDoc tag is selected", "+\t\t\t// But we need to detect it to enable code select on inheritDoc", "+\t\t\tReferenceContext referenceContext = scope.referenceContext();", "+\t\t\tif (referenceContext instanceof MethodDeclaration) {", "+\t\t\t\tthrow new SelectionNodeFound(((MethodDeclaration) referenceContext).binding);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b9bde96e785952c4191a7f9d0ec55d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "4eeaf0d0e03ab922557bc9369f948328bc88b0fc", "commitAfterChange": "f47e75c1503f87b47cf6ca8478e948925811cd42", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  \tpublic boolean isInsideDeprecatedCode()", "signatureAfterChange": "  \tpublic boolean isInsideDeprecatedCode()", "diff": ["-\t\t\t\t\tMethodBinding context = ((AbstractMethodDeclaration)methodScope.referenceContext).binding;", "+\t\t\t\t\tReferenceContext referenceContext = methodScope.referenceContext;", "+\t\t\t\t\tMethodBinding context = referenceContext instanceof AbstractMethodDeclaration ?", "+\t\t\t\t\t\t\t((AbstractMethodDeclaration)referenceContext).binding : ((LambdaExpression)referenceContext).binding;"]}], "num": 66401}