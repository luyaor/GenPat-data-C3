{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bf93a2f6e944e689ef2e45f940d9cf1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160b0e5231bd9b3d3213cecd19f41b97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalAnnotations18Test.java", "commitBeforeChange": "48a2d2499344bebca223a2f8c964ed5900cd0012", "commitAfterChange": "6c085192f8ca1a30dcc3f8eecf0c1b2085d19f7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test2() throws CoreException, InterruptedException", "signatureAfterChange": " \tpublic void test2() throws Exception", "diff": ["-\t/** Reconcile an individual CU. */ // FIXME: needs more capability in SearchableNameEnvironment", "-\tpublic void test2() throws CoreException, InterruptedException {", "-\t\tassertEquals(\"Number of problems\", 0, problems.length);", "+\t/** Project with real JRE8. */", "+\tpublic void test2() throws Exception {", "+\t\tHashtable options = JavaCore.getOptions();", "+\t\ttry {", "+\t\t\tsetupJavaProject(\"Test2\");", "+\t\t\tthis.project.getProject().build(IncrementalProjectBuilder.FULL_BUILD, null);", "+\t\t\tIMarker[] markers = this.project.getProject().findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);", "+\t\t\tassertNoMarkers(markers);", "+\t\t} finally {", "+\t\t\t// project using a full JRE container initializes global options to 1.8 -- must reset now:", "+\t\t\tJavaCore.setOptions(options);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b1379aede8e4d1aa0bb63a7e6c35c6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalAnnotations18Test.java", "commitBeforeChange": "48a2d2499344bebca223a2f8c964ed5900cd0012", "commitAfterChange": "6c085192f8ca1a30dcc3f8eecf0c1b2085d19f7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test1() throws CoreException, InterruptedException", "signatureAfterChange": " \tpublic void test1FullBuild() throws Exception", "diff": ["-\t/** Perform full build. */", "-\tpublic void test1() throws CoreException, InterruptedException {", "-\t\tthis.project.getProject().build(IncrementalProjectBuilder.FULL_BUILD, null);", "-\t\tIMarker[] markers = this.project.getProject().findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);", "+\t/** Perform full build. */", "+\tpublic void test1FullBuild() throws Exception {", "+\t\tsetupJavaProject(\"Test1\");", "+\t\tthis.project.getProject().build(IncrementalProjectBuilder.FULL_BUILD, null);", "+\t\tIMarker[] markers = this.project.getProject().findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);", "+\t\tassertNoMarkers(markers);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4cc103caed33f655c667349b5c6fb17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprotected void build(final IJavaProject javaProject, Hashtable options, boolean noWarning) throws IOException, CoreException", "signatureAfterChange": " \tprotected void build(final IJavaProject javaProject, Hashtable options, boolean noWarning) throws IOException, CoreException", "diff": ["-\t\tif (PRINT) System.out.println(\"Options: \"+options);", "+\t\tif (PRINT) System.out.println(\"JavaCore options: \"+options);", "+\t\t\tif (PRINT) System.out.println(\"Project options: \"+javaProject.getOptions(false));", "-\t\tIMarker[] markers = ResourcesPlugin.getWorkspace().getRoot().findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();", "+\t\tIMarker[] markers = workspaceRoot.findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "-\t\t", "+\t\tworkspaceRoot.deleteMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "+"]}], "num": 19583}