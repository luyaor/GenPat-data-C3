{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f309ee3ce39490b69d0e650bcfe404c3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04008eef7f212c661552e88c6f958a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "aa46ed677ee85f03d71a5e403b6a2449b883ffe1", "commitAfterChange": "c0de86876da4886baced9b3782c3e678b86d856e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNull(LocalVariableBinding local)", "diff": ["-\t\tthis.tagBits |= NULL_FLAG_MASK;", "-\t\tint position;", "-\t\tlong mask;", "-\t\t// position is zero-based", "-\t\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {\t\t// use bits", "-\t\t\tthis.nullAssignmentStatusBit1 |= (mask = 1L << position);", "-\t\t\tthis.nullAssignmentValueBit2 |= mask; // set non null", "-\t\t\tthis.nullAssignmentStatusBit2 &= ~mask; // clear protection", "-\t\t\tthis.nullAssignmentValueBit1 &= ~mask; // clear null", "-\t\t\tif (coverageTestFlag && coverageTestId == 29) {", "-\t\t\t\tthis.nullAssignmentStatusBit1 = 0;", "-\t\t\t}", "-\t\t} ", "-\t\telse {", "-\t\t\t// use extra vector", "-\t\t\tint vectorIndex = (position / BitCacheSize) - 1;", "-\t\t\tthis.extra[2][vectorIndex] |= ", "-\t\t\t\t(mask = 1L << (position % BitCacheSize));", "-\t\t\tthis.extra[5][vectorIndex] |= mask;", "-\t\t\tthis.extra[3][vectorIndex] &= ~mask;", "-\t\t\tthis.extra[4][vectorIndex] &= ~mask;", "-\t\t\tif (coverageTestFlag && coverageTestId == 30) {", "-\t\t\t\tthis.extra[5][vectorIndex] = ~0;", "-\t\t\t}", "-\t\t}", "+    \tthis.tagBits |= NULL_FLAG_MASK;", "+    \tlong mask;", "+    \tint position;", "+    \t// position is zero-based", "+    \tif ((position = local.id + this.maxFieldCount) < BitCacheSize) { // use bits", "+    \t\t// mark assigned null", "+    \t\tthis.nullBit1 |= (mask = 1L << position);", "+    \t\tthis.nullBit2 |= mask;", "+    \t\t// clear others", "+    \t\tthis.nullBit3 &= (mask = ~mask);", "+    \t\tthis.nullBit4 &= mask;", "+    \t\tif (coverageTestFlag && coverageTestId == 24) {", "+    \t\t  \tthis.nullBit4 = ~0;", "+    \t\t}", "+    \t} ", "+    \telse {", "+    \t\t// use extra vector", "+    \t\tint vectorIndex ;", "+    \t\tthis.extra[2][vectorIndex = (position / BitCacheSize) - 1] ", "+    \t\t    |= (mask = 1L << (position % BitCacheSize));", "+    \t\tthis.extra[3][vectorIndex] |= mask;", "+    \t\tthis.extra[4][vectorIndex] &= (mask = ~mask);", "+    \t\tthis.extra[5][vectorIndex] &= mask;", "+    \t\tif (coverageTestFlag && coverageTestId == 25) {", "+    \t\t\tthis.extra[5][vectorIndex] = ~0;", "+    \t\t}", "+    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe39ee14ad5cd16ac65a2a668202df12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "b306054099bda54eae0b3cd5e5d4001721ca022c", "commitAfterChange": "12b1e5875f7cb2a3f64b814e5e7b2c6c8563e988", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " final private void markAsDefinitelyNonNull(int position)", "signatureAfterChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "diff": ["- */", "-final private void markAsDefinitelyNonNull(int position) {", "-\t// DEAD_END guarded above", "-\tthis.tagBits |= NULL_FLAG_MASK;", "-\tlong mask;", "-\t// position is zero-based", "-\tif (position < BitCacheSize) {", "-\t\t// use bits", "-\t\tthis.nullAssignmentStatusBit1 |= (mask = 1L << position);", "-\t\tthis.nullAssignmentValueBit2 |= mask; // set non null", "-\t\tthis.nullAssignmentStatusBit2 &= ~mask; // clear protection", "-\t\tthis.nullAssignmentValueBit1 &= ~mask; // clear null", "-\t\tif (coverageTestFlag && coverageTestId == 29) {", "-\t\t\tthis.nullAssignmentStatusBit1 = 0;", "-\t\t}", "-\t} ", "-\telse {", "-\t\t// use extra vector", "-\t\tint vectorIndex = (position / BitCacheSize) - 1;", "-\t\tthis.extra[2][vectorIndex] |= ", "-\t\t\t(mask = 1L << (position % BitCacheSize));", "-\t\tthis.extra[5][vectorIndex] |= mask;", "-\t\tthis.extra[3][vectorIndex] &= ~mask;", "-\t\tthis.extra[4][vectorIndex] &= ~mask;", "-\t\tif (coverageTestFlag && coverageTestId == 30) {", "-\t\t\tthis.extra[5][vectorIndex] = ~0;", "-\t\t}", "-\t}", "-}", "+\t\tthis.tagBits |= NULL_FLAG_MASK;", "+\t\tint position;", "+\t\tlong mask;", "+\t\t// position is zero-based", "+\t\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {\t\t// use bits", "+\t\t\tthis.nullAssignmentStatusBit1 |= (mask = 1L << position);", "+\t\t\tthis.nullAssignmentValueBit2 |= mask; // set non null", "+\t\t\tthis.nullAssignmentStatusBit2 &= ~mask; // clear protection", "+\t\t\tthis.nullAssignmentValueBit1 &= ~mask; // clear null", "+\t\t\tif (coverageTestFlag && coverageTestId == 29) {", "+\t\t\t\tthis.nullAssignmentStatusBit1 = 0;", "+\t\t\t}", "+\t\t} ", "+\t\telse {", "+\t\t\t// use extra vector", "+\t\t\tint vectorIndex = (position / BitCacheSize) - 1;", "+\t\t\tthis.extra[2][vectorIndex] |= ", "+\t\t\t\t(mask = 1L << (position % BitCacheSize));", "+\t\t\tthis.extra[5][vectorIndex] |= mask;", "+\t\t\tthis.extra[3][vectorIndex] &= ~mask;", "+\t\t\tthis.extra[4][vectorIndex] &= ~mask;", "+\t\t\tif (coverageTestFlag && coverageTestId == 30) {", "+\t\t\t\tthis.extra[5][vectorIndex] = ~0;", "+\t\t\t}"]}], "num": 38091}