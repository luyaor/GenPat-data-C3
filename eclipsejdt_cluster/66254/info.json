{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31212062712c45d62e117a2ccb5fd1cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4212679ac2b022547d01c90a2455f7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/PackageElementImpl.java", "commitBeforeChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "commitAfterChange": "ed6404d1b00fb0c4d7b0edc065f94f5cf30ee47f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": "  \t@Override \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "diff": ["-\t\tthrow new UnsupportedOperationException(\"NYI: PackageElementImpl.getAnnotationMirrors()\"); //$NON-NLS-1$", "+\t\tPackageBinding packageBinding = (PackageBinding) this._binding;", "+\t\tchar[][] compoundName = CharOperation.arrayConcat(packageBinding.compoundName, TypeConstants.PACKAGE_INFO_NAME);", "+\t\tReferenceBinding type = this._env.getLookupEnvironment().getType(compoundName);", "+\t\tAnnotationBinding[] annotations = null;", "+\t\tif (type != null && type.isValidBinding()) {", "+\t\t\tannotations = type.getAnnotations();", "+\t\t}", "+\t\treturn _env.getFactory().getAnnotationMirrors(annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecff8138ccacf638c697f5096ad6fcfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "commitAfterChange": "ed6404d1b00fb0c4d7b0edc065f94f5cf30ee47f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate char[] getUnparsedDocComment(Element e)", "signatureAfterChange": " \tprivate char[] getUnparsedDocComment(Element e)", "diff": ["-\t\t\t\treturn null;", "+\t\t\t\tPackageElementImpl packageElementImpl = (PackageElementImpl) e;", "+\t\t\t\tPackageBinding packageBinding = (PackageBinding) packageElementImpl._binding;", "+\t\t\t\tchar[][] compoundName = CharOperation.arrayConcat(packageBinding.compoundName, TypeConstants.PACKAGE_INFO_NAME);", "+\t\t\t\tReferenceBinding type = this._env.getLookupEnvironment().getType(compoundName);", "+\t\t\t\tif (type != null && type.isValidBinding() && (type instanceof SourceTypeBinding)) {", "+\t\t\t\t\tSourceTypeBinding sourceTypeBinding = (SourceTypeBinding) type;", "+\t\t\t\t\treferenceContext = sourceTypeBinding.scope.referenceContext;", "+\t\t\t\t\tjavadoc = ((TypeDeclaration) referenceContext).javadoc;", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}], "num": 66254}