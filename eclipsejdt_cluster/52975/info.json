{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7cf70e70ccbe7443fb6f3113d4a22269", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6bfb8678271963497c898547eb335f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "2e56c16c054ee89ad0380a5a606694122f7187a1", "commitAfterChange": "9120b6c49a4b36e25b20147789ffde03aca85f97", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate void handleLoopBody(Statement body)", "signatureAfterChange": "  \tprivate void handleLoopBody(Statement body)", "diff": ["-\t\tif (!(body instanceof Block)", "-\t\t\t\t&& !(body instanceof EmptyStatement && !this.options.put_empty_statement_on_new_line)) {", "-\t\t\tbreakLineBefore(body);", "-\t\t\tindent(body);", "-\t\t}", "+\t\tif (body instanceof Block)", "+\t\t\treturn;", "+\t\tif (body instanceof EmptyStatement && !this.options.put_empty_statement_on_new_line", "+\t\t\t\t&& !(body.getParent() instanceof IfStatement))", "+\t\t\treturn;", "+\t\tbreakLineBefore(body);", "+\t\taddEmptyLineTokenAfter(this.tm.lastIndexIn(body, -1));", "+\t\tindent(body);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4308d0b541349de85a72eceb59b6fdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "af231babcc36b45e2ff3d4a97422d9f5a34150b7", "commitAfterChange": "38c895fd64a92567249832dd2a8d427fc1bcacc2", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "diff": ["-\t\t\t} else if (action instanceof EmptyStatement && !this.preferences.put_empty_statement_on_new_line) {", "-\t\t\t\taction.traverse(this, scope);", "+\t\t\t} else if (action instanceof EmptyStatement) {", "+\t\t\t\t/*", "+\t\t\t\t * This is an empty statement", "+\t\t\t\t */", "+\t\t\t\tformatNecessaryEmptyStatement();", "-\t\t\tthis.scribe.indent();", "-\t\t\tformatEmptyStatement(); ", "-\t\t\tthis.scribe.unIndent();", "+\t\t\tformatNecessaryEmptyStatement(); "]}], "num": 52975}