{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d8571f7a364da53aa60e2e3a72890ec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1976cfb1567fd6ed8be22ba80b631284", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "972c7f1c4d5a8249e6cf0bbf33078118344b368a", "commitAfterChange": "9dd546ec0d84bb4ff147ae28c2586a5ed0820cc6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": "  public int getNextToken() throws InvalidInputException", "diff": ["+", "+\tint token;", "+\tif (this.nextToken != TokenNameNotAToken) {", "+\t\ttoken = this.nextToken;", "+\t\tthis.nextToken = TokenNameNotAToken;", "+\t} else {", "+\t\ttoken = getNextToken0();", "+\t}", "+\tif (this.scanningJava8Plus && this.shouldDisambiguate) {", "+\t\tif (token == TokenNameLPAREN) {", "+\t\t\tif(atLambdaParameterList()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginLambda;", "+\t\t\t}", "+\t\t} else if (token == TokenNameLESS) {", "+\t\t\tif (atReferenceExpression()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginTypeArguments;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn token;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf08a97752b73a44bf1d23ecb0ad257b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "c53e368d261f2341743baa1024157841e94f1882", "commitAfterChange": "c0fbf538c56e049473d6298631299cfef92195c1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": "  public int getNextToken() throws InvalidInputException", "diff": ["+", "+\tint token;", "+\tif (this.nextToken != TokenNameNotAToken) {", "+\t\ttoken = this.nextToken;", "+\t\tthis.nextToken = TokenNameNotAToken;", "+\t} else {", "+\t\ttoken = getNextToken0();", "+\t}", "+\tif (this.scanningJava8Plus && this.shouldDisambiguate) {", "+\t\tif (token == TokenNameLPAREN) {", "+\t\t\tif(atLambdaParameterList()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginLambda;", "+\t\t\t}", "+\t\t} else if (token == TokenNameLESS) {", "+\t\t\tif (atReferenceExpression()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginTypeArguments;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn token;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f28309e9ba280040627effdeb63ac3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "da9e0d747989149b2294ed35e495d24e9b87d1b6", "commitAfterChange": "af6229e1f4eaf7439cdd509f508e69eff4ec6844", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \t \tpublic int getNextToken() throws InvalidInputException", "signatureAfterChange": " \t \tpublic int getNextToken() throws InvalidInputException", "diff": ["-\t\tint token = getNextToken0();", "+\t\tint token;", "+\t\tif (this.nextToken != TokenNameNotAToken) {", "+\t\t\ttoken = this.nextToken;", "+\t\t\tthis.nextToken = TokenNameNotAToken;", "+\t\t\treturn token; // presumed to be unambiguous.", "+\t\t}", "+\t\ttoken = getNextToken0();", "-\t\t\ttoken = TokenNameAT308;", "+\t\t\tif (((VanguardParser) this.activeParser).currentGoal == Goal.LambdaParameterListGoal) {", "+\t\t\t\ttoken = disambiguatedToken(token);", "+\t\t\t} else {", "+\t\t\t\ttoken = TokenNameAT308;", "+\t\t\t}"]}], "num": 59453}