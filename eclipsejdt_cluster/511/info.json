{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb77affb2580d7bb6d4b81d34e80caf4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2633e1c1ba2b98577bc8c0f7da65bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObjectToIntArray.java", "commitBeforeChange": "69f7860162afcfc8030db1b89728ef29dad30425", "commitAfterChange": "12f67d7a75389e2a993321c57a8e613bfbfd0a38", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tString s = \"\"; //$NON-NLS-1$", "+\t\tStringBuffer buffer = new StringBuffer();", "-\t\tfor (int i = 0, length = this.keyTable.length; i < length; i++)", "-\t\t\tif ((key = this.keyTable[i]) != null)", "-\t\t\t\ts += key + \" -> \" + this.valueTable[i] + \"\\n\"; \t//$NON-NLS-2$ //$NON-NLS-1$", "-\t\treturn s;", "+\t\tfor (int i = 0, length = this.keyTable.length; i < length; i++) {", "+\t\t\tif ((key = this.keyTable[i]) != null) {", "+\t\t\t\tbuffer.append(key).append(\" -> \"); //$NON-NLS-1$", "+\t\t\t\tint[] ints = this.valueTable[i];", "+\t\t\t\tbuffer.append('[');", "+\t\t\t\tif (ints != null) {", "+\t\t\t\t\tfor (int j = 0, max = ints.length; j < max; j++) {", "+\t\t\t\t\t\tif (j > 0) {", "+\t\t\t\t\t\t\tbuffer.append(',');", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbuffer.append(ints[j]);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbuffer.append(\"]\\n\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\treturn String.valueOf(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc85dcd9f5a08de9ddf38b3c0abec851", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "9384d44d51fc135ab261a46a0c5c6cf06b8a4075", "commitAfterChange": "641e4134a5f663294c87ac80c963d690a90319bc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate void expectingCompiling(String[] actual, String[] expected, String message)", "signatureAfterChange": "  \tprivate void expectingCompiling(String[] actual, String[] expected, String message)", "diff": ["-\t", "-\tprivate void expectingCompiling(String[] actual, String[] expected, String message){", "-\t\tif(DEBUG) {", "-\t\t\tfor (int i = 0; i < actual.length; i++) {", "+", "+\tprivate void expectingCompiling(String[] actual, String[] expected, String message) {", "+\t\tif (DEBUG)", "+\t\t\tfor (int i = 0; i < actual.length; i++)", "-\t\t\t}", "-\t\t}\t", "-\t\t", "+", "-\t\tfor (int i = 0; i < actual.length; i++){", "-\t\t\tif (i > 0) actualBuffer.append(\",\"); //$NON-NLS-1$", "+\t\tfor (int i = 0; i < actual.length; i++) {", "+\t\t\tif (i > 0)", "+\t\t\t\tactualBuffer.append(\",\"); //$NON-NLS-1$", "-\t\tfor (int i = 0; i < expected.length; i++){", "-\t\t\tif (i > 0) expectedBuffer.append(\",\"); //$NON-NLS-1$", "+\t\tfor (int i = 0; i < expected.length; i++) {", "+\t\t\tif (i > 0)", "+\t\t\t\texpectedBuffer.append(\",\"); //$NON-NLS-1$", "-\t\texpectedBuffer.append('}');\t\t", "+\t\texpectedBuffer.append('}');"]}], "num": 511}