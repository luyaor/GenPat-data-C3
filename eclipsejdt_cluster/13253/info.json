{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69a2e9f47256ad0288aeec1e403e8eb9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94c9b130c03c6563f01c1c73aefd41a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic String toStringStatements(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+", "+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+", "+\t\tprintIndent(indent, output);", "+\t\toutput.append(\"{\\n\"); //$NON-NLS-1$", "+\t\tprintBody(indent, output);", "+\t\treturn printIndent(indent, output).append('}');", "+\t}", "-", "-\tpublic String toStringStatements(int tab) {", "-", "-\t\tif (this.statements == null)", "-\t\t\treturn \"\"; //$NON-NLS-1$", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tfor (int i = 0; i < statements.length; i++) {", "-\t\t\tbuffer.append(statements[i].toString(tab + 1));", "-\t\t\tif (statements[i] instanceof Block || statements[i] instanceof EmptyStatement) {", "-\t\t\t\tbuffer.append(\"\\n\"); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tbuffer.append(\";\\n\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t};", "-\t\treturn buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "966e82dd6cb84ef2255a164bbcca5f8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "9c0097e084b2c48ccca0e818ba9c1c1a50818167", "commitAfterChange": "ed04e9efb45ff73e01fac12a6ae0aba550054536", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void assertSearchResults(String message, String expected, Object collector)", "signatureAfterChange": " IJavaSearchScope getJavaSearchCUScope(String projectName, String packageName, String cuName) throws JavaModelException", "diff": ["+IJavaSearchScope getJavaSearchCUScope(String projectName, String packageName, String cuName) throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(projectName, \"src\", packageName, cuName);", "+\treturn SearchEngine.createJavaSearchScope(new ICompilationUnit[] { cu });", "+}", "-}", "-protected void assertSearchResults(String message, String expected, Object collector) {", "-\tString actual = collector.toString();", "-\tif (!expected.equals(actual)) {", "-\t\tSystem.out.println(getName()+\" expected result is:\");", "-\t\tSystem.out.print(displayString(actual, 2));", "-\t\tSystem.out.println(\",\");", "-\t}", "-\tassertEquals(", "-\t\tmessage,", "-\t\texpected,", "-\t\tactual", "-\t);"]}], "num": 13253}