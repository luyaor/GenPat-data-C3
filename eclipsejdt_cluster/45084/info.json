{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "973855352d1b22a8dcd025b436cc9aac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc38b0fb6b2134bb4be09f3c09d88ac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "e40a14518c878498ad39595017fa5c41fd3a84fd", "commitAfterChange": "0db36dd259a6320ea4c536f5dd076aa73d4d8836", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, IFile file,  \t\t\tICompilationUnit compilationUnit )", "signatureAfterChange": " \t\t \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, IFile file,  \t\t\tICompilationUnit compilationUnit )", "diff": ["+\t\tISchedulingRule schedulingRule;", "+\t\t{", "+\t\t\t schedulingRule = javaProj.getResource();", "+\t\t}", "+\t\t{", "+\t\t\tschedulingRule = null;", "+\t\t}", "-\t\tIWorkspace w = ResourcesPlugin.getWorkspace();", "-\t\t{\t", "-\t\t\t// TODO: need to do something here to avoid the \"Invalid Begin Rule...\" errors.  Not sure what is correct.", "-\t\t\tIResource r;", "-\t\t\tr = w.getRoot();", "-\t\t\t", "-\t\t\tw.run( runnable, r, IWorkspace.AVOID_UPDATE, null );", "+\t\t{", "+\t\t\tIWorkspace w = ResourcesPlugin.getWorkspace();", "+\t\t\tw.run( runnable, schedulingRule, IWorkspace.AVOID_UPDATE, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4470bda495b1ef5792a15c99ec824a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "2a24da854cab81b3e14f5a439f9a6b762b3ebc0a", "commitAfterChange": "60e097c0e5cf4a2c998f74536cf889c93554ea9d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, IFile file,  \t\t\tICompilationUnit compilationUnit )", "signatureAfterChange": " \t\t \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, IFile file,  \t\t\tICompilationUnit compilationUnit )", "diff": ["-\t\t{\t\t\t", "-\t\t\tw.run(runnable, w.getRoot(), IWorkspace.AVOID_UPDATE, null);", "+\t\t{\t", "+\t\t\t// need to do something here to avoid the \"Invalid Begin Rule...\" errors.  Not sure what is correct.", "+\t\t\tIResource r;", "+\t\t\tr = w.getRoot();", "+\t\t\t", "+\t\t\tw.run( runnable, r, IWorkspace.AVOID_UPDATE, null );"]}], "num": 45084}