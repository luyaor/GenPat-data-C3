{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f1e4d033dc7dbd19b08cd92e1d87244", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05e962704d2ae49efe6191f6fd75d980", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "7548eaaea6e1259875e63eaf19dcd9a6bb7fd118", "commitAfterChange": "3d5aa7d7eabaf3445aad76f168f1c9da2ba34591", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor)", "signatureAfterChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor)", "diff": ["-\t\tAccessRuleSet access = javaSearchScope.getAccessRuleSet(path);", "-\t\tif (JavaSearchScope.NOT_INITIALIZED_RESTRICTION != access) { // scope encloses the path", "+\t\tAccessRuleSet access = javaSearchScope.getAccessRuleSet(path, index.containerPath);", "+\t\tif (access != JavaSearchScope.NOT_ENCLOSED) { // scope encloses the path"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f07a92208c5258798fef5b4d88606171", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeParameterPattern.java", "commitBeforeChange": "7548eaaea6e1259875e63eaf19dcd9a6bb7fd118", "commitAfterChange": "3d5aa7d7eabaf3445aad76f168f1c9da2ba34591", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor)", "diff": ["-\t\t\tAccessRuleSet access = javaSearchScope.getAccessRuleSet(path);", "-\t\t\tif (JavaSearchScope.NOT_INITIALIZED_RESTRICTION != access) { // scope encloses the path", "+\t\t\tAccessRuleSet access = javaSearchScope.getAccessRuleSet(path, index.containerPath);", "+\t\t\tif (access != JavaSearchScope.NOT_ENCLOSED) { // scope encloses the path"]}], "num": 12672}