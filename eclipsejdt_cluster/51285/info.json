{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f884eff746bc91943c89f7d7f3a52d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06af34742c0ff988b3f5465d08507118", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ExceptionLabel.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void place()", "signatureAfterChange": "  public void place()", "diff": ["+", "+public void place() {", "+", "+\t// register the handler inside the codeStream then normal place", "+\tcodeStream.registerExceptionHandler(this);", "+\tif (CodeStream.DEBUG) System.out.println(\"\\t\\t\\t\\t<place at: \"+codeStream.position+\" - \"+ this); //$NON-NLS-1$ //$NON-NLS-2$", "+\tthis.position = codeStream.position;", "+}", "-\tpublic void place() {", "-", "-\t\t// register the handler inside the codeStream then normal place", "-\t\tcodeStream.registerExceptionHandler(this);", "-\t\tsuper.place();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b08702d3aba9c7555e2d009bd2a032", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "1989a0271fdbbc2e283cb16feff75882cb9f530f", "commitAfterChange": "f9b469ddd794802b03d6c8ec2569c992634467b3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void stopMeasuring()", "signatureAfterChange": " \tpublic void stopMeasuring()", "diff": ["-\t\tthis.testDuration += System.currentTimeMillis() - this.startMeasuring;", "+\t\tthis.nbMeasures++;", "+\t\tlong duration = System.currentTimeMillis() - this.startMeasuring;", "+\t\tif (PRINT) System.out.println(\"\t\t- n\ufffd \"+this.nbMeasures+\": \"+duration+\"ms\");", "+\t\tthis.testDuration += duration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a685c14904ce2918baa1bd5d8cc4b1bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "d5bf24a5adf23d2657a6e779176b2c9b14138ec2", "commitAfterChange": "fe650c9f34b5f46aea24c9c914c82b1f8d0ec026", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\t\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\t\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["+\t\t\t\t\tif (this.isCancelled) {\r", "+\t\t\t\t\t\tif (JobManager.VERBOSE) {\r", "+\t\t\t\t\t\t\tSystem.out.println(\"INDEX : \" //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t+zip.getName() + \" CANCELLED\"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\treturn FAILED;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7306c58f2f097fa0fd119be1417a60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/AllPerformanceTests.java", "commitBeforeChange": "629004dd1fa0335eeaa747d8bb649dbf5acafd51", "commitAfterChange": "bb4e6bac07124b460a049d2b185093478c4f0c72", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\t// Reset subsets of tests (after having test classes loaded", "-\t\tTestCase.TESTS_NAMES = null;", "-\t\tTestCase.TESTS_PREFIX = null;", "-\t\tTestCase.TESTS_NUMBERS = null;", "-\t\tTestCase.TESTS_RANGE = null;", "+\t\t// Cannot run performance tests if one of subset static fields is not null", "+\t\t// (this may modify tests run order and make stored results invalid)", "+\t\tif (TestCase.TESTS_NAMES != null ||", "+\t\t\tTestCase.TESTS_PREFIX != null ||", "+\t\t\tTestCase.TESTS_NUMBERS != null ||", "+\t\t\tTestCase.TESTS_RANGE != null) {", "+\t\t\tSystem.err.println(\"Cannot run performance tests as there are defined subsets which may alter tests order!\");", "+\t\t\treturn perfSuite;", "+\t\t}"]}], "num": 51285}