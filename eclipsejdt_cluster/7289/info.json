{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "156f2e8e20519cd45aab902ef0920fd5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ee0830608bc7cab74539ed1bc69819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "2a2935d5ba546500d563cc08921b53e5b286cdf8", "commitAfterChange": "2d9dc5098273e0e95832d81d735d2d77249738ef", "methodNumberBeforeChange": 357, "methodNumberAfterChange": 357, "signatureBeforeChange": " \tpublic void test0356() throws JavaModelException", "signatureAfterChange": " \tpublic void test0356() throws JavaModelException", "diff": ["-\t\tassertEquals(\"errors found\", 2, compilationUnit.getMessages().length); //$NON-NLS-1$", "+\t\tassertEquals(\"errors found\", 1, compilationUnit.getMessages().length); //$NON-NLS-1$", "-\t\tassertNull(binding);", "+\t\tassertNotNull(\"Binding should NOT be null for type: \"+type, binding);", "+", "+\t\t// Verify that class instance creation has a null binding", "+\t\tList fragments = variableDeclarationStatement.fragments();", "+\t\tassertEquals(\"Expect only one fragment for VariableDeclarationStatement: \"+variableDeclarationStatement, 1, fragments.size());", "+\t\tnode = (ASTNode) fragments.get(0);", "+\t\tassertEquals(\"Not a variable declaration fragment\", ASTNode.VARIABLE_DECLARATION_FRAGMENT, node.getNodeType()); //$NON-NLS-1$", "+\t\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) node;", "+\t\tExpression initializer = fragment.getInitializer();", "+\t\tassertEquals(\"Expect a class instance creation for initializer: \"+initializer, ASTNode.CLASS_INSTANCE_CREATION, initializer.getNodeType()); //$NON-NLS-1$", "+\t\tClassInstanceCreation instanceCreation = (ClassInstanceCreation) initializer;", "+\t\ttype = instanceCreation.getType();", "+\t\tbinding = type.resolveBinding();", "+\t\tassertNull(\"Binding should BE null for type: \"+type, binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f43931d83631c40a44fa4145dec6511a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0b12d287970a543efa74b3f16f5eaa0f1a0fc0f9", "commitAfterChange": "6e0407bfb74a28f835049dc8c47aa0d5efd146ea", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void test0037() throws JavaModelException", "signatureAfterChange": " \tpublic void test0037() throws JavaModelException", "diff": ["+\t\tSimpleName simpleName = typeParameter.getName();", "+\t\tassertEquals(\"Wrong name\", \"Y\", simpleName.getIdentifier());", "+\t\tIBinding binding2 = simpleName.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding2);", "+\t\tassertEquals(\"Wrong type\", IBinding.TYPE, binding2.getKind());", "+\t\tITypeBinding typeBinding2 = (ITypeBinding) binding2;", "+\t\tassertEquals(\"Wrong name\", \"Y\", typeBinding2.getName());", "+\t\tITypeBinding typeBinding3 = simpleName.resolveTypeBinding();", "+\t\tassertNotNull(\"No binding\", typeBinding3);", "+\t\tassertEquals(\"Wrong type\", IBinding.TYPE, typeBinding3.getKind());", "+\t\tassertEquals(\"Wrong name\", \"Y\", typeBinding3.getName());"]}], "num": 7289}