{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae35be9e0abe45ad9c3850d0b2e4008a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41fea69f4e6384f7225a7f2125876a3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "75871e5cf780d193f3aa131d6533bfb3e88085a3", "commitAfterChange": "262c2d405c84f8f17d09d055f013ac895aa0dc67", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint[] accuracies,\r \t\tboolean accuracyStartsOnFirstToken)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint accuracy)\r \t\tthrows CoreException", "diff": ["-\t */\r", "-\tpublic void reportAccurateReference(\r", "-\t\tint sourceStart,\r", "-\t\tint sourceEnd,\r", "-\t\tchar[][] qualifiedName,\r", "-\t\tIJavaElement element,\r", "-\t\tint[] accuracies,\r", "-\t\tboolean accuracyStartsOnFirstToken)\r", "-\t\tthrows CoreException {\r", "+\r", "+\t\tif (accuracy == -1) return;\r", "-\t\tint accuracyIndex = 0;\r", "-\t\t\t\tif (accuracies[accuracyIndex] != -1) {\r", "-\t\t\t\t\t// accept reference\r", "-\t\t\t\t\tif (refSourceStart != -1) {\r", "-\t\t\t\t\t\tthis.report(refSourceStart, refSourceEnd, element, accuracies[accuracyIndex]);\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\tthis.report(sourceStart, sourceEnd, element, accuracies[accuracyIndex]);\r", "+\t\t\t\t// accept reference\r", "+\t\t\t\tif (refSourceStart != -1) {\r", "+\t\t\t\t\tthis.report(refSourceStart, refSourceEnd, element, accuracy);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tthis.report(sourceStart, sourceEnd, element, accuracy);\r", "+\t\t\t\t}\r", "+\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t} while (token != TerminalSymbols.TokenNameEOF);\r", "+\r", "+\t}\r", "-\t\t\t\t\tif (!accuracyStartsOnFirstToken) {\r", "-\t\t\t\t\t\taccuracyIndex++;\r", "-\t\t\t\t\t}\t\t\t\r", "-\t\t\tif (accuracyStartsOnFirstToken) {\r", "-\t\t} while (token != TerminalSymbols.TokenNameEOF && accuracyIndex < accuracies.length);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c071de6edd933380cf1335d0f6adc661", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "948661c4cb198af70b598b9954e5159cb73d7234", "commitAfterChange": "b1348e3d0230a581c7eb25acd6ec072853b12bb0", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint[] accuracies,\r \t\tboolean accuracyStartsOnFirstToken)\r \t\tthrows CoreException", "diff": ["+\t */\r", "+\tpublic void reportAccurateReference(\r", "+\t\tint sourceStart,\r", "+\t\tint sourceEnd,\r", "+\t\tchar[][] qualifiedName,\r", "+\t\tIJavaElement element,\r", "+\t\tint[] accuracies,\r", "+\t\tboolean accuracyStartsOnFirstToken)\r", "+\t\tint accuracyIndex = 0;\r", "+\t\t\t\tboolean equals = false;\r", "-\t\t\t\t\t&& !CharOperation.equals(currentTokenSource, qualifiedName[i++])) {\r", "+\t\t\t\t\t&& !(equals = this.pattern.matchesName(qualifiedName[i++], currentTokenSource))) {\r", "-\t\t\t\tif (CharOperation.equals(currentTokenSource, qualifiedName[i - 1])\r", "-\t\t\t\t\t&& (previousValid == -1 || previousValid == i - 2)) {\r", "+\t\t\t\tif (equals && (previousValid == -1 || previousValid == i - 2)) {\r", "-\t\t}\r", "-\t\twhile (token != TerminalSymbols.TokenNameEOF && i < tokenNumber);\r", "+\t\t\tif (i == tokenNumber) {\r", "+\t\t\t\tif (accuracies[accuracyIndex] != -1) {\r", "+\t\t\t\t\t// accept reference\r", "+\t\t\t\t\tif (refSourceStart != -1) {\r", "+\t\t\t\t\t\tthis.report(refSourceStart, refSourceEnd, element, accuracies[accuracyIndex]);\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tthis.report(sourceStart, sourceEnd, element, accuracies[accuracyIndex]);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\ti = 0;\r", "+\t\t\t\t\trefSourceStart = -1;\r", "+\t\t\t\t\tpreviousValid = -1;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tif (accuracyStartsOnFirstToken) {\r", "+\t\t\t\taccuracyIndex++;\r", "+\t\t\t}\r", "+\t\t} while (token != TerminalSymbols.TokenNameEOF && accuracyIndex < accuracies.length);\r", "-\t\t// accept reference\r", "-\t\tif (refSourceStart != -1) {\r", "-\t\t\tthis.report(refSourceStart, refSourceEnd, element, accuracy);\r", "-\t\t} else {\r", "-\t\t\tthis.report(sourceStart, sourceEnd, element, accuracy);\r", "-\t\t}\r"]}], "num": 63036}