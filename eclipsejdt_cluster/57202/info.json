{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9cc01eb3c33cee2b9edf1c1251d0875", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b85e6dc99059b79122107a3a19c72ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "c6d4125101bf5167c8111f17bf85f3fddd64ca03", "commitAfterChange": "42809a61ef9e5b72c9cffca62cbb33391fa05b96", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["+}", "+protected void toStringName(StringBuffer buffer, int flags) {", "-\tString[] parameters = this.getParameterTypes();", "+\tString[] parameters = getParameterTypes();", "+\t\tboolean isVarargs = Flags.isVarargs(flags);", "-\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t} else if (isVarargs) {", "+\t\t\t\t// remove array from signature", "+\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de379096b48ce4818a5734fb3b8bf207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "c6d4125101bf5167c8111f17bf85f3fddd64ca03", "commitAfterChange": "42809a61ef9e5b72c9cffca62cbb33391fa05b96", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["+}", "+protected void toStringName(StringBuffer buffer, int flags) {", "-\tString[] parameters = this.getParameterTypes();", "+\tString[] parameters = getParameterTypes();", "+\t\tboolean isVarargs = Flags.isVarargs(flags);", "-\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t} else if (isVarargs) {", "+\t\t\t\t// remove array from signature", "+\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));"]}], "num": 57202}