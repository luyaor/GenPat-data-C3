{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd2dfd12bf26a73b695988aa09fbf5fe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b88cc2d036bccec105d311a18384c2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "1ce14f7d38953baa0407a7c04bf1e650dc1a4ab4", "commitAfterChange": "188c9c7dc3851a0a188854f7875a3d0a8c55cb71", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath)", "signatureAfterChange": " public static boolean canSeeFocus(SearchPattern pattern, IPath projectOrJarPath)", "diff": ["-public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath) {", "+public static boolean canSeeFocus(SearchPattern pattern, IPath projectOrJarPath) {", "-\t\tIClasspathEntry[] focusEntries = null;", "-\t\tif (isPolymorphicSearch) {", "-\t\t\tJavaProject focusProject = focus instanceof JarPackageFragmentRoot ? (JavaProject) focus.getParent() : (JavaProject) focus;", "-\t\t\tfocusEntries = focusProject.getExpandedClasspath();", "-\t\t}", "-\t\tIJavaModel model = focus.getJavaModel();", "+\t\tIJavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();", "-\t\tif (project != null)", "-\t\t\treturn canSeeFocus(focus, (JavaProject) project, focusEntries);", "+\t\tIJavaElement[] focuses = getFocusedElements(pattern, project);", "+\t\tif (project != null) {", "+\t\t\treturn canSeeFocus(focuses, (JavaProject) project);", "+\t\t}", "-\t\t\tif (entry != null", "-\t\t\t\t\t&& entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY", "-\t\t\t\t\t&& canSeeFocus(focus, otherProject, focusEntries))", "-\t\t\t\treturn true;", "+\t\t\tif (entry != null && entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\tif (canSeeFocus(focuses, otherProject)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab139e0761affcdc7402f54d89c5bfac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "db331d5badcb0b35069c87387ccad89f9c226a52", "commitAfterChange": "30b862416cba759ca39b029e0f535018291e11dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private static boolean canSeeFocus(IJavaElement focus, JavaProject javaProject)", "signatureAfterChange": " private static boolean canSeeFocus(IJavaElement focus, JavaProject javaProject, char[][] focusQualifiedName)", "diff": ["-private static boolean canSeeFocus(IJavaElement focus, JavaProject javaProject) {", "+private static boolean canSeeFocus(IJavaElement focus, JavaProject javaProject, char[][] focusQualifiedName) {", "-\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT && entry.getPath().equals(focusPath))", "+\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT && entry.getPath().equals(focusPath)) {", "+\t\t\t\tif (focusQualifiedName != null) { // builder state is usable, hence use it to try to reduce project which can see the focus...", "+\t\t\t\t\tState projectState = (State) JavaModelManager.getJavaModelManager().getLastBuiltState(javaProject.getProject(), null);", "+\t\t\t\t\tif (projectState != null) {", "+\t\t\t\t\t\tObject[] values = projectState.getReferences().valueTable;", "+\t\t\t\t\t\tint vLength = values.length;", "+\t\t\t\t\t\tfor (int j=0; j<vLength; j++)  {", "+\t\t\t\t\t\t\tif (values[j] == null) continue;", "+\t\t\t\t\t\t\tReferenceCollection references = (ReferenceCollection) values[j];", "+\t\t\t\t\t\t\tif (references.includes(focusQualifiedName)) {", "+\t\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 61490}