{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48ebd7a549f2d390fce0bb4fa11e8cbd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602b099953774d638887d975319992ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 749, "methodNumberAfterChange": 749, "signatureBeforeChange": " public void test743()", "signatureAfterChange": " public void test743()", "diff": ["-\t\t\"1. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\"\t@Override public Nested<B> getNested3() { // sub\\n\" + ", "-\t\t\"\t                           ^^^^^^^^^^^^\\n\" + ", "-\t\t\"The return type is incompatible with TestGeneric3<B>.getNested3()\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"\treturn this;//3\\n\" + ", "+\t\t\"\t       ^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from TestGeneric3<A>.Nested<B> to TestGeneric3<B>.Nested<B>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fbecd3593023f30c3b8616da1f1f293", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "commitAfterChange": "40efcac62f74a525f36207bf04469af4d555a161", "methodNumberBeforeChange": 695, "methodNumberAfterChange": 695, "signatureBeforeChange": " public void testCompletionVariableName14() throws JavaModelException", "signatureAfterChange": " public void testCompletionVariableName14() throws JavaModelException", "diff": ["+\t            \"\t\tFooBar pretheFo\\n\"+", "+\t            \"\t}\\n\"+", "+\t            \"}\");", "+\t    ", "+\t    ", "+\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t    String str = this.wc.getSource();", "+\t    String completeBehind = \"pretheFo\";", "+\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t    this.wc.codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\t    assertResults(", "+\t\t\t\t\"preTheFoBar[VARIABLE_DECLARATION]{preTheFoBar, null, LFooBar;, preTheFoBar, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"preTheFoBarsuf[VARIABLE_DECLARATION]{preTheFoBarsuf, null, LFooBar;, preTheFoBarsuf, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"preTheFooBar[VARIABLE_DECLARATION]{preTheFooBar, null, LFooBar;, preTheFooBar, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"preTheFooBarsuf[VARIABLE_DECLARATION]{preTheFooBarsuf, null, LFooBar;, preTheFooBarsuf, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,argumentPrefixPreviousValue);", "+\t\toptions.put(JavaCore.CODEASSIST_LOCAL_SUFFIXES,localPrefixPreviousValue);", "+\t\tJavaCore.setOptions(options);", "+\t}", "+}", "-\t\t\t\t\"preTheFooBar[VARIABLE_DECLARATION]{preTheFooBar, null, LFooBar;, preTheFooBar, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\\n\"+", "-\t\t\t\t\"preTheFooBarsuf[VARIABLE_DECLARATION]{preTheFooBarsuf, null, LFooBar;, preTheFooBarsuf, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\","]}], "num": 15976}