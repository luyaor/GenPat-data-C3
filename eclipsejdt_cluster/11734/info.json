{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9507ba73586f25906e5ec3c8970ccdd1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159dae473f0db17995d32887d7268328", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "21f559feffbf2460bdd3a9d1e827cbd3c01012af", "commitAfterChange": "686f3b257f4d32050f06213668cbddf17fedbfcf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tlong complianceLevel = compilerOptions().complianceLevel;", "-\t\tboolean isCompliant14 = compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\tlong complianceLevel = compilerOptions().complianceLevel;", "+\t\tboolean isCompliant14 = complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\tboolean isCompliant15 = complianceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\t\t\t\t\tif (complianceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\t\t\t\t\tif (isCompliant15) {", "-\t\tif (complianceLevel >= ClassFileConstants.JDK1_5", "+\t\tif (isCompliant15"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cf3ada526110bc2ef52b5324265564b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "ab867ad16c11ffaeeab6b25d79b9af55a3b631d1", "commitAfterChange": "32f757dfe8da946b3f43d9a2940c80a3241b7487", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t \tpublic static boolean isJRELevel(String level)", "signatureAfterChange": "  \t \tpublic static boolean isJRELevel(int compliance)", "diff": ["-\tpublic static boolean isJRELevel(String level) {", "-\t\tint compliance = AbstractCompilerTest.F_1_3;", "-\t\tfinal long versionToJdkLevel = CompilerOptions.versionToJdkLevel(level);", "-\t\tif (versionToJdkLevel == ClassFileConstants.JDK1_4) {", "-\t\t\tcompliance = AbstractCompilerTest.F_1_4;", "-\t\t} else if (versionToJdkLevel == ClassFileConstants.JDK1_5) {", "-\t\t\tcompliance = AbstractCompilerTest.F_1_5;", "-\t\t} else if (versionToJdkLevel == ClassFileConstants.JDK1_6) {", "-\t\t\tcompliance = AbstractCompilerTest.F_1_6;", "-\t\t}", "+\tpublic static boolean isJRELevel(int compliance) {"]}], "num": 11734}