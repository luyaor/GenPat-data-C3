{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99aff1a8d091dfb8bb0d48711027342d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561b5ef74d3e553f79762b18e3af0008", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "062668d56ec736d8048bddfbb9f460f0f1d04b11", "commitAfterChange": "3716c54055d7a4beea6cb3963f6df24a75c62bb6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \r public static void searchAllPossibleSubTypes(\r \tIWorkspace workbench,\r \tIType type,\r \tIJavaSearchScope scope,\r \tfinal Map binariesFromIndexMatches,\r \tfinal IPathRequestor pathRequestor,\r \tint waitingPolicy,\r \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "signatureAfterChange": "\r \r public static void searchAllPossibleSubTypes(\r \tIWorkspace workbench,\r \tIType type,\r \tIJavaSearchScope scope,\r \tfinal Map binariesFromIndexMatches,\r \tfinal IPathRequestor pathRequestor,\r \tint waitingPolicy,\r \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "diff": ["+\tint ticks = 50;\r", "-\t\tindexManager.performConcurrentJob(job, waitingPolicy, progressMonitor);\r", "+\t\tindexManager.performConcurrentJob(\r", "+\t\t\tjob, \r", "+\t\t\twaitingPolicy, \r", "+\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, ticks));\r", "+\t\tticks = ticks / 2;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d3ead3662b4e7b5b8d8ed721c71247", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "0e353f705bb9830cc1fd109d5dc51c65ea6af7fc", "commitAfterChange": "5bb0a260de6355c81b467c30181276237e1f1b45", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public static void searchAllPossibleSubTypes( \tIWorkspace workbench, \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "signatureAfterChange": "  public static void searchAllPossibleSubTypes( \tIWorkspace workbench, \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "diff": ["-\t\t\t(progressMonitor == null || ++ticks > MAXTICKS) ? null : new SubProgressMonitor(progressMonitor, 1));", "+\t\t\tnull); // don't pass a sub progress monitor as this is too costly for deep hierarchies", "+\t\tif (progressMonitor != null && ++ticks <= MAXTICKS) {", "+\t\t\tprogressMonitor.worked(1);", "+\t\t}"]}], "num": 30239}