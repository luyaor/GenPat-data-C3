{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1740e478c2b5d9badb857d0cde83383c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a6ce5212a2295c1832edd29e109776", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "5a12a220bc147ceb34370c89306997df47624c96", "commitAfterChange": "2a31afdf467fbea6343929950855b2cce0d4c7fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void resolve(BlockScope upperScope)", "signatureAfterChange": "\r public void resolve(BlockScope upperScope)", "diff": ["+\t\tMethodScope methodScope = scope.methodScope();\r", "+\t\t\r", "-\t\tscope.methodScope().addLocalVariable(returnAddressVariable);\r", "+\t\tmethodScope.addLocalVariable(returnAddressVariable);\r", "-\t\tanyExceptionVariable = new LocalVariableBinding(SecretAnyHandlerName, scope.getJavaLangThrowable(), 0);\r", "-\t\tfinallyScope.addLocalVariable(anyExceptionVariable);\r", "-\t\tanyExceptionVariable.constant = NotAConstant; // not inlinable\r", "+\t\tthis.anyExceptionVariable = new LocalVariableBinding(SecretAnyHandlerName, scope.getJavaLangThrowable(), 0);\r", "+\t\tfinallyScope.addLocalVariable(this.anyExceptionVariable);\r", "+\t\tthis.anyExceptionVariable.constant = NotAConstant; // not inlinable\r", "+\r", "+\t\tthis.secretReturnValue = new LocalVariableBinding(\r", "+\t\t\tSecretLocalDeclarationName, \r", "+\t\t\t((AbstractMethodDeclaration)methodScope.referenceContext).binding.returnType, \r", "+\t\t\tAccDefault);\r", "+\t\tfinallyScope.addLocalVariable(this.secretReturnValue);\r", "+\t\tthis.secretReturnValue.constant = NotAConstant; // not inlinable\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4eb44c6b6e5ecb37174fdf55e56da28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "27b04348f6378e421a1a2788716e3b7fc8643774", "commitAfterChange": "f91a77f7dbbae615b9ce90f64f6be8f6d8a36ad5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void resolve(BlockScope upperScope)", "signatureAfterChange": "\r public void resolve(BlockScope upperScope)", "diff": ["-\t\t\tTypeBinding methodReturnType = ((AbstractMethodDeclaration)methodScope.referenceContext).binding.returnType;\r", "-\t\t\tif (methodReturnType.id != T_void){\r", "-\t\t\t\tthis.secretReturnValue = new LocalVariableBinding(SecretLocalDeclarationName, methodReturnType, AccDefault);\r", "-\t\t\t\tfinallyScope.addLocalVariable(this.secretReturnValue);\r", "-\t\t\t\tthis.secretReturnValue.constant = NotAConstant; // not inlinable\r", "+\t\t\tMethodBinding methodBinding = ((AbstractMethodDeclaration)methodScope.referenceContext).binding;\r", "+\t\t\tif (methodBinding != null){\r", "+\t\t\t\tTypeBinding methodReturnType = methodBinding.returnType;\r", "+\t\t\t\tif (methodReturnType.id != T_void){\r", "+\t\t\t\t\tthis.secretReturnValue = new LocalVariableBinding(SecretLocalDeclarationName, methodReturnType, AccDefault);\r", "+\t\t\t\t\tfinallyScope.addLocalVariable(this.secretReturnValue);\r", "+\t\t\t\t\tthis.secretReturnValue.constant = NotAConstant; // not inlinable\r", "+\t\t\t\t}\r"]}], "num": 10083}