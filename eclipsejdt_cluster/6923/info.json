{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a5c675099e6e8ce461daea2ad642f0e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee4f43fb542531b77d66c6dfd04a0b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a4cf6d98376463fc983f22769fc9f745756e00b2", "commitAfterChange": "bea3c4ba333ddbbf907b34991106e5d28c4161bc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "diff": ["-\tif (accessMethod.parameters.length > 0xFF && targetMethod.isStatic()) {", "-\t\tthis.scope.problemReporter().tooManyParametersForSyntheticMethod(targetMethod.sourceMethod());", "-\t} else if (accessMethod.parameters.length >= 0xFF && targetMethod.isConstructor()) {", "+\tif (targetMethod.declaringClass.isStatic()) {", "+\t\tif ((targetMethod.isConstructor() && targetMethod.parameters.length >= 0xFE)", "+\t\t\t\t|| targetMethod.parameters.length >= 0xFF) {", "+\t\t\tthis.scope.problemReporter().tooManyParametersForSyntheticMethod(targetMethod.sourceMethod());", "+\t\t}", "+\t} else if ((targetMethod.isConstructor() && targetMethod.parameters.length >= 0xFD)", "+\t\t\t|| targetMethod.parameters.length >= 0xFE) {", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82adce26439ad195ff9fa98cdd6c615c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "9d652ce7c89dd14104c16f2c1f66d223a8b82d5f", "commitAfterChange": "88bd9c51ebfccd9b68ad18488d485e1a7c491cf8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": "\r public TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\t\t\t\t\t&& (indexOfFirstFieldBinding > 1 || !fieldBinding.isStatic()))\r", "+\t\t\t\t\t\t&& (indexOfFirstFieldBinding > 1 || !fieldBinding.isStatic())\r", "+\t\t\t\t\t\t&& fieldBinding.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r", "-\t\t\t\t\t\t&& (indexOfFirstFieldBinding > 1 || !fieldBinding.isStatic()))\r", "+\t\t\t\t\t\t&& (indexOfFirstFieldBinding > 1 || !fieldBinding.isStatic())\r", "+\t\t\t\t\t\t&& fieldBinding.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r", "-\t\t\t\t\t&& (scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\t\t\t\t\t\r", "+\t\t\t\t\t&& ((scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\t\t\t\t\t\r", "+\t\t\t\t\t\t\t&& field.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r", "-\t\t\t\t\t&& (scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t\t&& ((scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t\t\t\t&& field.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r"]}], "num": 6923}