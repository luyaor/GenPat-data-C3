{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5653ab0175aff30d7574f3b4718ea34", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e75d18626fdd3691e808c72786b5e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "3a7eebe0921eeefbdbf1fe4891891b6335310197", "commitAfterChange": "e8aa72d0e85424c76c1185b7518db6803dde6255", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-", "-public FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "-\tif (this.resolvedType.id == T_JavaLangString) {", "-\t\treturn right.analyseCode(currentScope, flowContext, ", "-\t\t\t\tleft.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits()).", "-\t\t\tunconditionalInits();", "-\t}", "-\telse {", "-\t\tleft.checkNPE(currentScope, flowContext, flowInfo);", "-\t\tflowInfo = left.analyseCode(currentScope, flowContext, flowInfo).", "-\t\t\tunconditionalInits();", "-\t\tright.checkNPE(currentScope, flowContext, flowInfo);", "-\t\treturn right.analyseCode(currentScope, flowContext, flowInfo).", "-\t\t\tunconditionalInits();", "+public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "+\tif (this.resolvedType.id == TypeIds.T_JavaLangString) {", "+\t\treturn this.right.analyseCode(", "+\t\t\t\t\t\t\tcurrentScope, flowContext, ", "+\t\t\t\t\t\t\tthis.left.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits())", "+\t\t\t\t\t\t.unconditionalInits();", "+\t} else {", "+\t\tthis.left.checkNPE(currentScope, flowContext, flowInfo);", "+\t\tflowInfo = this.left.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();", "+\t\tthis.right.checkNPE(currentScope, flowContext, flowInfo);", "+\t\treturn this.right.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d7f25e06ba40bc7db57c6f46b04e0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": " public int[] getJavaDocPositions()", "signatureAfterChange": " public int[] getJavaDocPositions()", "diff": ["-\tfor (int i = 0, max = scanner.commentPtr; i <= max; i++){", "+\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\tif (scanner.commentStops[i] > 0){", "+\t\tif (this.scanner.commentStops[i] > 0){", "-\tfor (int i = 0, max = scanner.commentPtr; i <= max; i++){", "+\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\tif (scanner.commentStops[i] > 0){", "-\t\t\tpositions[index++] = scanner.commentStarts[i];", "-\t\t\tpositions[index++] = scanner.commentStops[i]-1; //stop is one over\t\t\t", "+\t\tif (this.scanner.commentStops[i] > 0){", "+\t\t\tpositions[index++] = this.scanner.commentStarts[i];", "+\t\t\tpositions[index++] = this.scanner.commentStops[i]-1; //stop is one over\t\t\t"]}], "num": 17422}