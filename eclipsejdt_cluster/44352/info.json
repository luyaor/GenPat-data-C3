{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed22552539ef978789888d08d7c934ad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e72a8322509d7caa1764c2b6ea38e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a82f005c3f6667f7d776fc1acd5a8f1ad4427b1c", "commitAfterChange": "b46f2262356d5a409fc4ad506ea6e420190ab04d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public char[] genericTypeSignature()", "signatureAfterChange": " public char[] genericTypeSignature()", "diff": ["-        if (this.typeVariables == NoTypeVariables) {", "-\t        this.genericReferenceTypeSignature = this.signature();", "-        } else {", "-\t\t    char[] typeSig = this.signature();", "-\t\t    StringBuffer sig = new StringBuffer(10);", "-\t\t    for (int i = 0; i < typeSig.length-1; i++) { // copy all but trailing semicolon", "-\t\t    \tsig.append(typeSig[i]);", "-\t\t    }", "-\t\t    sig.append('<');", "-\t\t    for (int i = 0, length = this.typeVariables.length; i < length; i++) {", "-\t\t        sig.append(this.typeVariables[i].genericTypeSignature());", "-\t\t    }", "-\t\t    sig.append(\">;\"); //$NON-NLS-1$", "-\t\t\tint sigLength = sig.length();", "-\t\t\tthis.genericReferenceTypeSignature = new char[sigLength];", "-\t\t\tsig.getChars(0, sigLength, this.genericReferenceTypeSignature, 0);\t\t    ", "-\t    }", "+    \tthis.genericReferenceTypeSignature = computeGenericTypeSignature(this.typeVariables);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59707410e8e18e03387ea50d06923025", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "445862b3ac94af052eb272bc07b8bce2907ade1f", "commitAfterChange": "3695268f3d47cb88012e58d6baed589f7f62bb31", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected ASTNode buildAST(String contents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "signatureAfterChange": " \tprotected ASTNode buildAST(String contents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "diff": ["-\t\tMarkerInfo markerInfo = new MarkerInfo(contents);", "-\t\tcontents = markerInfo.source;", "+\t\tASTNode[] nodes = buildASTs(contents, cu, reportErrors);", "+\t\tif (nodes.length == 0) return null;", "+\t\treturn nodes[0];", "+\t}", "-\t\treturn findNode(unit, markerInfo);", "-\t}"]}], "num": 44352}