{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d3dfa2cea9a8359eecba9a6984552f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e321d3023ac0ea418c997fbe1674add", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "faddcb079bee5b548a6f2f972d8258d3ff3dc5d3", "commitAfterChange": "7596807cbc20be2267cc443bfe387f40df0774fb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["+\t\t\tMethodBinding[] existingMethods = receiverType.methods();\r", "+\t\t\tfor(int i =0 ; i < existingMethods.length ; i++){\r", "+\t\t\t\tMethodBinding existingMethod = existingMethods[i];\r", "+\t\t\t\tif (CharOperation.equals(method.selector, existingMethod.selector, true)\r", "+\t\t\t\t\t&& method.areParametersEqual(existingMethod)){\r", "+\t\t\t\t\tcontinue next;\t\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6988cc34e1746ef66386ec62d4d349ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "86284f2db6c7ac41b63c1766c9b7b3a016d95a9a", "commitAfterChange": "c8d8bdad35a9dc8d924116cabb6dd00986cff218", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic MethodBinding getSingleAbstractMethod(final Scope scope)", "signatureAfterChange": " \tpublic MethodBinding getSingleAbstractMethod(final Scope scope)", "diff": ["-\t\treturn this.singleAbstractMethod = new ParameterizedMethodBinding(parameterizedType, theAbstractMethod);", "+\t\tMethodBinding [] choices = parameterizedType.getMethods(theAbstractMethod.selector);", "+\t\tfor (int i = 0, length = choices.length; i < length; i++) {", "+\t\t\tMethodBinding method = choices[i];", "+\t\t\tif (!method.isAbstract() || method.redeclaresPublicObjectMethod(scope)) continue; // (re)skip statics, defaults, public object methods ...", "+\t\t\tthis.singleAbstractMethod = method;", "+\t\t\tbreak;", "+\t\t}", "+\t\treturn this.singleAbstractMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9e6e4e845b56231fafef0ae94c3495", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e76466b5729fd993ef3dcc80ae6ab76bd33e5dcd", "commitAfterChange": "e0c80c2b16b54e5a1c86d6779d617fb326a5c618", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 321, "signatureBeforeChange": " protected void writeWidePosition(int offset)", "signatureAfterChange": " protected void writeWidePosition(BranchLabel label)", "diff": ["-protected void writeWidePosition(int offset) {", "+protected void writeWidePosition(BranchLabel label) {", "+\tint labelPos = label.position;", "+\tint offset = labelPos - this.position + 1;", "-}", "+\tfor (int i = 0, max = label.forwardReferenceCount; i < max; i++) {", "+\t\tint forward = label.forwardReferences[i];", "+\t\toffset = labelPos - forward + 1;", "+\t\tthis.writeSignedWord(forward, offset);", "+\t}\t"]}], "num": 15575}