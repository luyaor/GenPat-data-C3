{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9f777249028ee2038d3a380533d258e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40980adea15e96242650b016ca306843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": " \tpublic void test0183()", "signatureAfterChange": " \tpublic void test0183()", "diff": ["-\t\t\t\"3. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tObject a2 = (Hashtable) o;\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^\\n\" + ", "+\t\t\t\"Hashtable is a raw type. References to generic type Hashtable<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 18)\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 22)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 22)\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 24)\\n\" + ", "-\t\t\t\"10. WARNING in X.java (at line 27)\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 27)\\n\" + ", "-\t\t\t\"11. WARNING in X.java (at line 27)\\n\" + ", "+\t\t\t\"12. WARNING in X.java (at line 27)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77ccfae96d3a4e9e9c4a8190a0ed37c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void test117()", "signatureAfterChange": " public void test117()", "diff": ["-\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tX x = BLEU.BLANC; // ko\\n\" + ", "+\t\t\"\t           ^^^^^\\n\" + ", "+\t\t\"Cannot refer to the static enum field X.BLANC within an initializer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\"6. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"7. ERROR in X.java (at line 16)\\n\" + ", "-\t\t\"7. WARNING in X.java (at line 16)\\n\" + ", "+\t\t\"8. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"\tX x = BLEU.BLANC; // ko\\n\" + ", "+\t\t\"\t           ^^^^^\\n\" + ", "+\t\t\"Cannot refer to the static enum field X.BLANC within an initializer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"9. WARNING in X.java (at line 16)\\n\" + ", "-\t\t\"8. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\"10. ERROR in X.java (at line 17)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1f11bc06eb2503f77b07e014dd3b10d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "2a23c62d5a3b74783613a638cca640e487db040a", "commitAfterChange": "79c4ba61903262b42e2a1f500afb283891f6e429", "methodNumberBeforeChange": 328, "methodNumberAfterChange": 328, "signatureBeforeChange": " public void test177()", "signatureAfterChange": " public void test177()", "diff": ["+// JDK7 (7b100) behavior. (earlier we would issue an extra name clash)", "-\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tclass X extends A implements I {\\n\" + ", "-\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\"Name clash: The method foo(Collection<?>) of type I has the same erasure as foo(Collection) of type A but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tclass X extends A implements I {\\n\" + ", "-\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\"Name clash: The method foo(Collection<?>) of type I has the same erasure as foo(Collection) of type A but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + "]}], "num": 55803}