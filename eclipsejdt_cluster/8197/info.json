{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f55189794c1197df785239360161a85e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132467a2d6baf35e9f5ac942f6c3a0cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "signatureAfterChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "diff": ["-\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, codeSnippetStart, codeSnippetEnd);\r", "+\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.getAssertMode(), codeSnippetStart, codeSnippetEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f676475e8994fb78554d92312647e94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "signatureAfterChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "diff": ["-\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, codeSnippetStart, codeSnippetEnd);\r", "+\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.getAssertMode(), codeSnippetStart, codeSnippetEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db307dfbde933ce6cb1b5174ac8e752", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "signatureAfterChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "diff": ["-\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, codeSnippetStart, codeSnippetEnd);\r", "+\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.getAssertMode(), codeSnippetStart, codeSnippetEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3aaee5c43ad28af20e9aa6a250d8153", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "signatureAfterChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "diff": ["-\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, codeSnippetStart, codeSnippetEnd);\r", "+\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.getAssertMode(), codeSnippetStart, codeSnippetEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c65038aff4949fe2278d8d3abbb0e700", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "154d679909f0ce3cd5b9fcad62e24c017766cf78", "commitAfterChange": "2aa51948b1d182868074055df3bd1567fc296c80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "signatureAfterChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tConfigurableOption[] settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "diff": ["-\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, codeSnippetStart, codeSnippetEnd);\r", "+\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.getAssertMode(), codeSnippetStart, codeSnippetEnd);\r"]}], "num": 8197}