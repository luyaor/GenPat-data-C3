{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c706b5b2b5a681b186081a2284d227c8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2266249c70b8a32f515e967b91e43782", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": "  \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\tif (options.checkVisibility", "+\t\t\t\t\tif (this.options.checkVisibility", "-\t\t\t\t\tif (source != null", "-\t\t\t\t\t\t&& source.length > endPosition", "-\t\t\t\t\t\t&& source[endPosition] == '(')", "+\t\t\t\t\tif (this.source != null", "+\t\t\t\t\t\t&& this.source.length > this.endPosition", "+\t\t\t\t\t\t&& this.source[this.endPosition] == '(')", "-\t\t\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, name);", "+\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, name);", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptMethod(", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27632806fb2fcde8f55325d49fc70c0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody()", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody()", "diff": ["-\talloc.sourceEnd = rParenPos; //the position has been stored explicitly", "+\talloc.sourceEnd = this.rParenPos; //the position has been stored explicitly", "-\tif ((argumentLength = expressionLengthStack[expressionLengthPtr--]) != 0) {", "-\t\texpressionPtr -= argumentLength;", "+\tif ((argumentLength = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {", "+\t\tthis.expressionPtr -= argumentLength;", "-\t\t\texpressionStack, ", "-\t\t\texpressionPtr + 1, ", "+\t\t\tthis.expressionStack, ", "+\t\t\tthis.expressionPtr + 1, ", "-\talloc.sourceStart = intStack[intPtr--];", "+\talloc.sourceStart = this.intStack[this.intPtr--];", "-\tanonymousType.bodyStart = scanner.currentPosition;\t", "-\tlistLength = 0; // will be updated when reading super-interfaces", "+\tanonymousType.bodyStart = this.scanner.currentPosition;\t", "+\tthis.listLength = 0; // will be updated when reading super-interfaces", "-\tif (currentElement != null){ ", "-\t\tlastCheckPoint = anonymousType.bodyStart;\t\t", "-\t\tcurrentElement = currentElement.add(anonymousType, 0);", "-\t\tcurrentToken = 0; // opening brace already taken into account", "-\t\tlastIgnoredToken = -1;", "+\tif (this.currentElement != null){ ", "+\t\tthis.lastCheckPoint = anonymousType.bodyStart;\t\t", "+\t\tthis.currentElement = this.currentElement.add(anonymousType, 0);", "+\t\tthis.currentToken = 0; // opening brace already taken into account", "+\t\tthis.lastIgnoredToken = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d0f7b669ee719237cf69516059d2a35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " protected void consumeBlock()", "signatureAfterChange": " protected void consumeBlock()", "diff": ["-\tint statementsLength = astLengthStack[astLengthPtr--];", "+\tint statementsLength = this.astLengthStack[this.astLengthPtr--];", "-\t\tblock.sourceStart = intStack[intPtr--];", "-\t\tblock.sourceEnd = endStatementPosition;", "+\t\tblock.sourceStart = this.intStack[this.intPtr--];", "+\t\tblock.sourceEnd = this.endStatementPosition;", "-\t\trealBlockPtr--; // still need to pop the block variable counter", "+\t\tthis.realBlockPtr--; // still need to pop the block variable counter", "-\t\tblock = new Block(realBlockStack[realBlockPtr--]);", "-\t\tastPtr -= statementsLength;", "+\t\tblock = new Block(this.realBlockStack[this.realBlockPtr--]);", "+\t\tthis.astPtr -= statementsLength;", "-\t\t\tastStack, ", "-\t\t\tastPtr + 1, ", "+\t\t\tthis.astStack, ", "+\t\t\tthis.astPtr + 1, ", "-\t\tblock.sourceStart = intStack[intPtr--];", "-\t\tblock.sourceEnd = endStatementPosition;", "+\t\tblock.sourceStart = this.intStack[this.intPtr--];", "+\t\tblock.sourceEnd = this.endStatementPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66dc338390af3380ac10c3f16b4b6a69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " protected void consumeStatementSwitch()", "signatureAfterChange": " protected void consumeStatementSwitch()", "diff": ["-\texpressionLengthPtr--;", "-\tswitchStatement.expression = expressionStack[expressionPtr--];", "-\tif ((length = astLengthStack[astLengthPtr--]) != 0) {", "-\t\tastPtr -= length;", "+\tthis.expressionLengthPtr--;", "+\tswitchStatement.expression = this.expressionStack[this.expressionPtr--];", "+\tif ((length = this.astLengthStack[this.astLengthPtr--]) != 0) {", "+\t\tthis.astPtr -= length;", "-\t\t\tastStack, ", "-\t\t\tastPtr + 1, ", "+\t\t\tthis.astStack, ", "+\t\t\tthis.astPtr + 1, ", "-\tswitchStatement.explicitDeclarations = realBlockStack[realBlockPtr--];", "+\tswitchStatement.explicitDeclarations = this.realBlockStack[this.realBlockPtr--];", "-\tswitchStatement.blockStart = intStack[intPtr--];", "-\tswitchStatement.sourceStart = intStack[intPtr--];", "-\tswitchStatement.sourceEnd = endStatementPosition;", "+\tswitchStatement.blockStart = this.intStack[this.intPtr--];", "+\tswitchStatement.sourceStart = this.intStack[this.intPtr--];", "+\tswitchStatement.sourceEnd = this.endStatementPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "719cfb0e9aac99f6fe02dd8ed4c9caa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " protected void consumePackageDeclarationName()", "signatureAfterChange": " protected void consumePackageDeclarationName()", "diff": ["-\t\tnew char[length = identifierLengthStack[identifierLengthPtr--]][]; ", "-\tidentifierPtr -= length;", "+\t\tnew char[length = this.identifierLengthStack[this.identifierLengthPtr--]][]; ", "+\tthis.identifierPtr -= length;", "-\tSystem.arraycopy(identifierStack, ++identifierPtr, tokens, 0, length);", "+\tSystem.arraycopy(this.identifierStack, ++this.identifierPtr, tokens, 0, length);", "-\t\tidentifierPositionStack, ", "-\t\tidentifierPtr--, ", "+\t\tthis.identifierPositionStack, ", "+\t\tthis.identifierPtr--, ", "-\tcompilationUnit.currentPackage = ", "+\tthis.compilationUnit.currentPackage = ", "-\tif (currentToken == TokenNameSEMICOLON){", "-\t\timpt.declarationSourceEnd = scanner.currentPosition - 1;", "+\tif (this.currentToken == TokenNameSEMICOLON){", "+\t\timpt.declarationSourceEnd = this.scanner.currentPosition - 1;", "-\timpt.declarationSourceStart = intStack[intPtr--];", "+\timpt.declarationSourceStart = this.intStack[this.intPtr--];", "-\tif (currentElement != null){", "-\t\tlastCheckPoint = impt.declarationSourceEnd+1;", "-\t\trestartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "+\tif (this.currentElement != null){", "+\t\tthis.lastCheckPoint = impt.declarationSourceEnd+1;", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c9694b818bf309ea8e677f8149f081f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " protected void consumeStaticOnly()", "signatureAfterChange": " protected void consumeStaticOnly()", "diff": ["-\tint savedModifiersSourceStart = modifiersSourceStart;", "+\tint savedModifiersSourceStart = this.modifiersSourceStart;", "-\tif (modifiersSourceStart >= savedModifiersSourceStart) {", "-\t\tmodifiersSourceStart = savedModifiersSourceStart;", "+\tif (this.modifiersSourceStart >= savedModifiersSourceStart) {", "+\t\tthis.modifiersSourceStart = savedModifiersSourceStart;", "-\tpushOnIntStack(scanner.currentPosition);", "+\tpushOnIntStack(this.scanner.currentPosition);", "-\t\tmodifiersSourceStart >= 0 ? modifiersSourceStart : scanner.startPosition);", "+\t\tthis.modifiersSourceStart >= 0 ? this.modifiersSourceStart : this.scanner.startPosition);", "-\tnestedMethod[nestedType]++;", "+\tthis.nestedMethod[this.nestedType]++;", "-\tif (currentElement != null){", "-\t\trecoveredStaticInitializerStart = intStack[intPtr]; // remember start position only for static initializers", "+\tif (this.currentElement != null){", "+\t\tthis.recoveredStaticInitializerStart = this.intStack[this.intPtr]; // remember start position only for static initializers"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "895c83dd8190a251d57a81371a2e9b0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate Expression parseArguments(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Expression parseArguments(TypeReference receiver) throws InvalidInputException", "diff": ["-\t\tint ptr = astPtr;", "-\t\tint lptr = astLengthPtr;", "+\t\tint ptr = this.astPtr;", "+\t\tint lptr = this.astLengthPtr;", "-\t\t\tchar[] memberName = identifierStack[0];", "+\t\t\tchar[] memberName = this.identifierStack[0];", "-\t\t\t\t\t\tJavadocAllocationExpression expr = new JavadocAllocationExpression(identifierPositionStack[0]);", "+\t\t\t\t\t\tJavadocAllocationExpression expr = new JavadocAllocationExpression(this.identifierPositionStack[0]);", "-\t\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(identifierStack[0], identifierPositionStack[0]);", "+\t\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(this.identifierStack[0], this.identifierPositionStack[0]);", "-\t\t\t\tint size = astLengthStack[astLengthPtr--];", "+\t\t\t\tint size = this.astLengthStack[this.astLengthPtr--];", "-\t\t\t\t\targuments[i] = (JavadocArgumentExpression) astStack[astPtr--];", "+\t\t\t\t\targuments[i] = (JavadocArgumentExpression) this.astStack[this.astPtr--];", "-\t\t\t\t\tJavadocAllocationExpression alloc = new JavadocAllocationExpression(identifierPositionStack[0]);", "+\t\t\t\t\tJavadocAllocationExpression alloc = new JavadocAllocationExpression(this.identifierPositionStack[0]);", "-\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(identifierStack[0], identifierPositionStack[0], arguments);", "+\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(this.identifierStack[0], this.identifierPositionStack[0], arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b866061a9e197f3c0c10765a5f0bdd17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  protected void consumeMethodInvocationName()", "signatureAfterChange": "  protected void consumeMethodInvocationName()", "diff": ["-\tif (scanner.startPosition >= this.codeSnippetStart", "-\t\t&& scanner.startPosition <= this.codeSnippetEnd + 1 + Util.LINE_SEPARATOR_CHARS.length // 14838", "+\tif (this.scanner.startPosition >= this.codeSnippetStart", "+\t\t&& this.scanner.startPosition <= this.codeSnippetEnd + 1 + Util.LINE_SEPARATOR_CHARS.length // 14838", "-\t\tm.sourceEnd = rParenPos;", "+\t\tm.sourceEnd = this.rParenPos;", "-\t\t\t(int) ((m.nameSourcePosition = identifierPositionStack[identifierPtr]) >>> 32); ", "-\t\tm.selector = identifierStack[identifierPtr--];", "-\t\tif (identifierLengthStack[identifierLengthPtr] == 1) {", "-\t\t\tm.receiver = new CodeSnippetThisReference(0,0,evaluationContext, true);", "-\t\t\tidentifierLengthPtr--;", "+\t\t\t(int) ((m.nameSourcePosition = this.identifierPositionStack[this.identifierPtr]) >>> 32); ", "+\t\tm.selector = this.identifierStack[this.identifierPtr--];", "+\t\tif (this.identifierLengthStack[this.identifierLengthPtr] == 1) {", "+\t\t\tm.receiver = new CodeSnippetThisReference(0,0,this.evaluationContext, true);", "+\t\t\tthis.identifierLengthPtr--;", "-\t\t\tidentifierLengthStack[identifierLengthPtr]--;", "+\t\t\tthis.identifierLengthStack[this.identifierLengthPtr]--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21926282cf3265895bcad1252d2769e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "signatureAfterChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "diff": ["-\t\t\texpressionStack[expressionPtr] = ", "+\t\t\tthis.expressionStack[this.expressionPtr] = ", "-\t\t\t\t\texpressionStack[expressionPtr]);", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr]);", "-\t\texpressionPtr--;", "-\t\texpressionLengthPtr--;", "+\t\tthis.expressionPtr--;", "+\t\tthis.expressionLengthPtr--;", "-\t\t\texpressionStack[expressionPtr] = ", "+\t\t\tthis.expressionStack[this.expressionPtr] = ", "-\t\t\t\t\texpressionStack[expressionPtr],", "-\t\t\t\t\texpressionStack[expressionPtr + 1]);", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr],", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr + 1]);", "-\texp.sourceEnd = endPosition;", "+\texp.sourceEnd = this.endPosition;"]}], "num": 55608}