{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3ca40285f084f5e0ee05e011c0ca408", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b9b69046b1ee8bab8a22b459b74aa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/WorkingCopyCleanupListener.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate void processElementDelta( IJavaElementDelta delta )", "signatureAfterChange": " \t \tprivate void processElementDelta( IJavaElementDelta delta )", "diff": ["-\t\t\t// is noopen, then the compilation unit's isWorkingCopy() will return false.", "+\t\t\t// is not open, then the compilation unit's isWorkingCopy() will return false.", "-\t\t\t\tIFile f = (IFile)cu.getResource();", "-\t\t\t\tif ( gfm.isParentFile( f ) )", "-\t\t\t\t{", "-\t\t\t\t\ttry ", "-\t\t\t\t\t{", "-\t\t\t\t\t\tgfm.parentWorkingCopyDiscarded( f );", "-\t\t\t\t\t} ", "-\t\t\t\t\tcatch (JavaModelException e) ", "-\t\t\t\t\t{", "-\t\t\t\t\t\tAptPlugin.log(e, \"Failure processing delta: \" + delta); //$NON-NLS-1$", "-\t\t\t\t\t}\t\t", "+\t\t\t\ttry {", "+\t\t\t\t\tgfm.workingCopyDiscarded( cu );", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\tAptPlugin.log(e, \"Failure processing delta: \" + delta); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff6378fa33211e82170d4d300b87e0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarClassLoader.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic synchronized void open()", "signatureAfterChange": " \t \tprivate void open()", "diff": ["-\tpublic synchronized void open() {", "-\t\t_openCounter++;", "-\t\tif (_openCounter == 1) {", "-\t\t\t// Create all jar files", "-\t\t\t_jars = new ArrayList<JarFile>(_files.size());", "-\t\t\tfor (File f : _files) {", "-\t\t\t\ttry {", "-\t\t\t\t\tJarFile jar = new JarFile(f);", "-\t\t\t\t\t_jars.add(jar);", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException ioe) {", "-\t\t\t\t\tAptPlugin.log(ioe, \"Unable to create JarFile for file: \" + f); //$NON-NLS-1$", "-\t\t\t\t}", "+\tprivate void open() {", "+\t\t// Create all jar files", "+\t\t_jars = new ArrayList<JarFile>(_files.size());", "+\t\tfor (File f : _files) {", "+\t\t\ttry {", "+\t\t\t\tJarFile jar = new JarFile(f);", "+\t\t\t\t_jars.add(jar);", "+\t\t\t}", "+\t\t\tcatch (IOException ioe) {", "+\t\t\t\tAptPlugin.log(ioe, \"Unable to create JarFile for file: \" + f); //$NON-NLS-1$"]}], "num": 60656}