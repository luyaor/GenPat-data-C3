{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a756f96fa4d0a75d25ac7db4eb5571b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b4d87f6855d16a2e9d9f5cdcf5dbb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testBug79803() throws CoreException", "signatureAfterChange": " \tpublic void testBug79803() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79803/A.java\",", "-\t\t\t\t\"package b79803;\\n\" + ", "-\t\t\t\t\"class A<A> {\\n\" + ", "-\t\t\t\t\"    A a;\\n\" + ", "-\t\t\t\t\"    b79803.A pa= new b79803.A();\\n\" + ", "-\t\t\t\t\"}\\n\"\t);", "-\t\t\t// search for first and second method should both return 2 inaccurate matches", "-\t\t\tIType type = workingCopy.getType(\"A\");", "-\t\t\tsearch(type,", "-\t\t\t\tREFERENCES,", "-\t\t\t\tSearchPattern.R_CASE_SENSITIVE|SearchPattern.R_ERASURE_MATCH,", "-\t\t\t\tgetJavaSearchScopeBugs(\"b79803\", false),", "-\t\t\t\tthis.resultCollector);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\"", "-\t\t\t);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b79803/A.java\",", "+\t\t\t\"package b79803;\\n\" + ", "+\t\t\t\"class A<A> {\\n\" + ", "+\t\t\t\"    A a;\\n\" + ", "+\t\t\t\"    b79803.A pa= new b79803.A();\\n\" + ", "+\t\t\t\"}\\n\"\t);", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+\t\tsearch(type, REFERENCES, ERASURE_RULE);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\"", "+\t\t);", "+\t\t// keep working copies for next test", "+\t\tdiscard = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f716be45e979257c5c94c55e3b0dccf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void testTypeReferenceBug79803() throws CoreException", "signatureAfterChange": " \tpublic void testBug79803() throws CoreException", "diff": ["+\t */", "+\tpublic void testBug79803() throws CoreException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79803/A.java\",", "+\t\t\t\t\"package b79803;\\n\" + ", "+\t\t\t\t\"class A<A> {\\n\" + ", "+\t\t\t\t\"    A a;\\n\" + ", "+\t\t\t\t\"    b79803.A pa= new b79803.A();\\n\" + ", "+\t\t\t\t\"}\\n\"\t);", "+\t\t\t// search for first and second method should both return 2 inaccurate matches", "+\t\t\tIType type = workingCopy.getType(\"A\");", "+\t\t\tsearch(type,", "+\t\t\t\tREFERENCES,", "+\t\t\t\tSearchPattern.R_CASE_SENSITIVE|SearchPattern.R_ERASURE_MATCH,", "+\t\t\t\tgetJavaSearchScopeBugs(\"b79803\", false),", "+\t\t\t\tthis.resultCollector);", "+\t\t\tassertSearchResults(", "+\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\"", "+\t\t\t);", "+\t\t}", "+\t\tfinally {", "+\t\t\tif (workingCopy != null)", "+\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}", "-\t */", "-\tpublic void testTypeReferenceBug79803() throws CoreException {", "-\t\tIType type = getCompilationUnit(\"JavaSearchBugs\", \"src\", \"b79803\", \"A.java\").getType(\"A\");", "-\t\tsearch(type, REFERENCES, SearchPattern.R_CASE_SENSITIVE|SearchPattern.R_ERASURE_MATCH, getJavaSearchScopeBugs(\"b79803\", false), this.resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\",", "-\t\t\tthis.resultCollector);", "-\t}"]}], "num": 45789}