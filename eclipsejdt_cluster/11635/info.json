{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f5cecb7a01c730297f959035427502a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "582a5d6967244dee0888088de3871d76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "11ed38e74464eb2e7d149f52bb984520286f9a3a", "commitAfterChange": "ad8b3feb3cd31efef290116a3645f74aac42c9f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void test001() throws JavaModelException", "signatureAfterChange": " \tpublic void test001() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the argument x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the parameter x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a39f4fbe000afe0c1fe40f663e614da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "11ed38e74464eb2e7d149f52bb984520286f9a3a", "commitAfterChange": "ad8b3feb3cd31efef290116a3645f74aac42c9f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test002() throws JavaModelException", "signatureAfterChange": " \tpublic void test002() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the argument x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the parameter x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 11635}