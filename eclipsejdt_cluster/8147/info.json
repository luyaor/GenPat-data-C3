{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "172e4dc923af8b3bf085735b01968a80", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3306247d2b2b16d5d3b2d55f7c71bbe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath)", "signatureAfterChange": " public static boolean canSeeFocus(IJavaElement focus, boolean isPolymorphicSearch, IPath projectOrJarPath)", "diff": ["-\t\t\tIClasspathEntry[] entries = otherProject.getResolvedClasspath();", "-\t\t\tfor (int j = 0, length2 = entries.length; j < length2; j++) {", "-\t\t\t\tIClasspathEntry entry = entries[j];", "-\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY && entry.getPath().equals(projectOrJarPath))", "-\t\t\t\t\tif (canSeeFocus(focus, otherProject, focusEntries))", "-\t\t\t\t\t\treturn true;", "-\t\t\t}", "+\t\t\tIClasspathEntry entry = otherProject.getClasspathEntryFor(projectOrJarPath);", "+\t\t\tif (entry != null ", "+\t\t\t\t\t&& entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY ", "+\t\t\t\t\t&& canSeeFocus(focus, otherProject, focusEntries))", "+\t\t\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b72b8ad7035c6afc9aae1256d2ab98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\tIClasspathEntry[] classpath = null;", "-\t\t\tclasspath = project.getResolvedClasspath();", "-\t\t\tfor (int i = 0; i < classpath.length; i++) {", "-\t\t\t\tIClasspathEntry entry = classpath[i];", "-\t\t\t\tif (projectPath.equals(entry.getPath())) {", "-\t\t\t\t\tsrcIsProject = true;", "-\t\t\t\t\tinclusionPatterns = ((ClasspathEntry)entry).fullInclusionPatternChars();", "-\t\t\t\t\texclusionPatterns = ((ClasspathEntry)entry).fullExclusionPatternChars();", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "+\t\t\tIClasspathEntry entry = project.getClasspathEntryFor(projectPath);", "+\t\t\tif (entry != null) {", "+\t\t\t\tsrcIsProject = true;", "+\t\t\t\tinclusionPatterns = ((ClasspathEntry)entry).fullInclusionPatternChars();", "+\t\t\t\texclusionPatterns = ((ClasspathEntry)entry).fullExclusionPatternChars();", "+\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f141981da84108c6ebd8569ecbea21d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file, IJavaProject project)", "signatureAfterChange": " \tpublic static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file, IJavaProject project)", "diff": ["-\t\t\tIClasspathEntry[] entries = ((JavaProject)project).getResolvedClasspath();", "-\t\t\tfor (int i = 0, length = entries.length; i < length; i++) {", "-\t\t\t\tIClasspathEntry entry = entries[i];", "-\t\t\t\tIPath rootPath = entry.getPath();", "-\t\t\t\tif (rootPath.equals(resourcePath)) {", "-\t\t\t\t\treturn project.getPackageFragmentRoot(file);", "-\t\t\t\t}", "+\t\t\tIClasspathEntry entry = ((JavaProject)project).getClasspathEntryFor(resourcePath);", "+\t\t\tif (entry != null) {", "+\t\t\t\treturn project.getPackageFragmentRoot(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa25c8a93674e846c2a896ea9bbb9e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected IStatus validateOnClasspath()", "signatureAfterChange": " protected IStatus validateOnClasspath()", "diff": ["-\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();\t", "-\t\tfor (int i = 0, length = classpath.length; i < length; i++) {", "-\t\t\tIClasspathEntry entry = classpath[i];", "-\t\t\tif (entry.getPath().equals(path)) {", "-\t\t\t\treturn Status.OK_STATUS;", "-\t\t\t}", "+\t\tIClasspathEntry entry = project.getClasspathEntryFor(path);\t", "+\t\tif (entry != null) {", "+\t\t\treturn Status.OK_STATUS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f5ea5f6238f85b73204bfea72951cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected int determineKind(IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected int determineKind(IResource underlyingResource) throws JavaModelException", "diff": ["-\tIClasspathEntry[] entries= ((JavaProject)getJavaProject()).getResolvedClasspath();", "-\tfor (int i= 0; i < entries.length; i++) {", "-\t\tIClasspathEntry entry= entries[i];", "-\t\tif (entry.getPath().equals(underlyingResource.getFullPath())) {", "-\t\t\treturn entry.getContentKind();", "-\t\t}", "+\tIClasspathEntry entry = ((JavaProject)getJavaProject()).getClasspathEntryFor(underlyingResource.getFullPath());", "+\tif (entry != null) {", "+\t\treturn entry.getContentKind();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ede344caf26dfc84333e448b38afde9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " private boolean isAffectedByPackageFragmentRoot(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " private boolean isAffectedByPackageFragmentRoot(IJavaElementDelta delta, IJavaElement element)", "diff": ["-\t\t\t\t\t\t\tIClasspathEntry[] classpath = javaProject.getResolvedClasspath();", "-\t\t\t\t\t\t\tfor (int j = 0; j < classpath.length; j++) {", "-\t\t\t\t\t\t\t\tIClasspathEntry entry = classpath[j];", "-\t\t\t\t\t\t\t\tif (entry.getPath().equals(rootPath)) {", "-\t\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tIClasspathEntry entry = javaProject.getClasspathEntryFor(rootPath);", "+\t\t\t\t\t\t\tif (entry != null) {", "+\t\t\t\t\t\t\t\treturn true;"]}], "num": 8147}