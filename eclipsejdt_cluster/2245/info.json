{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cde9d17b8e7bd6021a2f682b89314a7f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f18dab480e1d4b937c4763f1b61a2ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void addToResourcesMap(String key, IJavaProject jproj)", "signatureAfterChange": " \tprivate void addToResourcesMap(String key, IJavaProject jproj)", "diff": ["-\t\tSet<IJavaProject> s = _container2Project.get(key);", "-\t\tif (s == null) {", "-\t\t\ts = new HashSet<IJavaProject>();", "-\t\t\t_container2Project.put(key, s);", "+\t\tsynchronized (cacheMutex) {", "+\t\t\tSet<IJavaProject> s = _container2Project.get(key);", "+\t\t\tif (s == null) {", "+\t\t\t\ts = new HashSet<IJavaProject>();", "+\t\t\t\t_container2Project.put(key, s);", "+\t\t\t}", "+\t\t\ts.add(jproj);", "-\t\ts.add(jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538483b09bca91afc3cdcef37c35091e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void removeProjectFromResourceMap(IJavaProject jproj)", "signatureAfterChange": " \tprivate void removeProjectFromResourceMap(IJavaProject jproj)", "diff": ["-\t\tIterator<Entry<String, Set<IJavaProject>>> i = _container2Project.entrySet().iterator();", "-\t\twhile (i.hasNext()) {", "-\t\t\tEntry<String, Set<IJavaProject>> e = i.next();", "-\t\t\tSet<IJavaProject> s = e.getValue();", "-\t\t\ts.remove(jproj);", "-\t\t\t// Remove any resulting orphaned resources.", "-\t\t\tif (s.isEmpty()) {", "-\t\t\t\ti.remove();", "+\t\tsynchronized (cacheMutex) {", "+\t\t\tIterator<Entry<String, Set<IJavaProject>>> i = _container2Project.entrySet().iterator();", "+\t\t\twhile (i.hasNext()) {", "+\t\t\t\tEntry<String, Set<IJavaProject>> e = i.next();", "+\t\t\t\tSet<IJavaProject> s = e.getValue();", "+\t\t\t\ts.remove(jproj);", "+\t\t\t\t// Remove any resulting orphaned resources.", "+\t\t\t\tif (s.isEmpty()) {", "+\t\t\t\t\ti.remove();", "+\t\t\t\t}"]}], "num": 2245}