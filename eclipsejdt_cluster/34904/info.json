{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afe508b5e84b8afd999270b7f4af0ba0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c07c4e44ff7281cc4921e1d90939cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "1965f5fe535fd5838f926aded2b10032f8850771", "commitAfterChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tif (forceProblemDetection) {", "+\t\t\t\tif (this.forceProblemDetection) {", "-\t\t\t\t\tif (problemRequestor != null && problemRequestor.isActive()) {", "+\t\t\t\t\tboolean computeProblems = JavaProject.hasJavaNature(workingCopy.getJavaProject().getProject()) && problemRequestor != null && problemRequestor.isActive();", "+\t\t\t\t\tif (computeProblems) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cd3aae25eb7d4b25fc0cef11f2c8b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "61c42f8b534ab4d093a587806abc001c702b4ad9", "commitAfterChange": "57fb8bc78f14cc84bf68e87eb82868a844365c90", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "signatureAfterChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "diff": ["+\t\t} catch (RuntimeException e) {", "+\t\t\tif (file.exists())", "+\t\t\t\tUtil.log(e, \"Unable to read variable and containers file (file is corrupt)\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e9c3579d8688f03685522ec244ee1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options) throws IllegalArgumentException", "signatureAfterChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options) throws IllegalArgumentException", "diff": ["-\t\t\tgetRewriteEventStore().markMovedNodesRemoved();", "+\t\t\tTargetSourceRangeComputer sourceRangeComputer= getExtendedSourceRangeComputer();", "+\t\t\t", "+\t\t\tthis.eventStore.prepareMovedNodes(sourceRangeComputer);", "-\t\t\tASTRewriteAnalyzer visitor= new ASTRewriteAnalyzer(document, result, this.eventStore, this.nodeStore, options, getExtendedSourceRangeComputer());", "+\t\t\tASTRewriteAnalyzer visitor= new ASTRewriteAnalyzer(document, result, this.eventStore, this.nodeStore, options, sourceRangeComputer);", "+\t\t\t", "+\t\t\tthis.eventStore.revertMovedNodes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e86f48b43e137683882c53175181c02c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "6700083354b893930a425843fb7de84c2bf92a0b", "commitAfterChange": "16d2f227c83166edb0478b06ddca92e3871fed38", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["+\t\t\t    } catch (JavaModelException e) {", "+\t\t\t    \tif (JavaProject.hasJavaNature(workingCopy.getJavaProject().getProject()))", "+\t\t\t    \t\tthrow e;", "+\t\t\t    \t// else JavaProject has lost its nature (or most likely was closed/deleted) while reconciling -> ignore", "+\t\t\t    \t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=100919)"]}], "num": 34904}