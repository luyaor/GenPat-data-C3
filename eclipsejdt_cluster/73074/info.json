{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7963c792bb2bad5adbf1d04e60cc917", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298dcbe9d8594e93ac6b00d984b25d4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "91fa1193d94791da378cb4a46bb3a0d15b00da63", "commitAfterChange": "ff5563556cdf78b5668b5f72d3e5a6710ffc5471", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public JavaModelCache()", "signatureAfterChange": " \t public JavaModelCache()", "diff": ["-\tlong maxMemory = Runtime.getRuntime().maxMemory();", "-\t// if max memory is infinite, set the ratio to 4d which corresponds to the 256MB that Eclipse defaults to", "-\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=111299)", "-\tdouble ratio = maxMemory == Long.MAX_VALUE ? 4d : maxMemory / 64000000; // 64000000 is the base memory for most JVM", "+\tdouble ratio = getMemoryRatio();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd15267974422055786e6412b488e728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "b9853bf41cff827b9d9db35c185e2e1a189aee4a", "commitAfterChange": "35e826e1adf840e339aa800d2a004ceb418099b6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r public static ClassFileReader read(File file) throws ClassFormatException, IOException", "signatureAfterChange": "\r public static ClassFileReader read(File file) throws ClassFormatException, IOException", "diff": ["-\tbyte classFileBytes[] = Util.getFileByteContent(file);\r", "-\treturn new ClassFileReader(classFileBytes, file.getAbsolutePath().toCharArray());\r", "+\treturn read(file, false);\r"]}], "num": 73074}