{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b331c109026fe26c18cb91521a29a07", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36fdce19927fd5379c43f7f4bfdc9f5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tfinal private void markAsDefinitelyNull(int position)", "signatureAfterChange": " final private void markAsDefinitelyNull(int position)", "diff": ["-\t */", "-\tfinal private void markAsDefinitelyNull(int position) {", "-\t\t", "-\t\tif (this != DEAD_END) {", "-\t", "-\t\t\t// position is zero-based", "-\t\t\tif (position < BitCacheSize) {", "-\t\t\t\t// use bits", "-\t\t\t\tlong mask;", "-\t\t\t\tdefiniteNulls |= (mask = 1L << position);", "-\t\t\t\tdefiniteNonNulls &= ~mask;", "-\t\t\t} else {", "-\t\t\t\t// use extra vector", "-\t\t\t\tint vectorIndex = (position / BitCacheSize) - 1;", "-\t\t\t\tlong mask;", "-\t\t\t\textraDefiniteNulls[vectorIndex] |= (mask = 1L << (position % BitCacheSize));", "-\t\t\t\textraDefiniteNonNulls[vectorIndex] &= ~mask;", "-\t\t\t}", "-\t\t}", "-\t}", "+ */", "+final private void markAsDefinitelyNull(int position) {", "+\t// DEAD_END guarded above", "+\tthis.tagBits |= NULL_FLAG_MASK;", "+\tlong mask;", "+\tif (position < BitCacheSize) {", "+\t\t// use bits", "+\t\tthis.nullAssignmentStatusBit1 |= (mask = 1L << position); // set assignment", "+\t\tthis.nullAssignmentStatusBit2 &= ~mask; // clear protection", "+\t\tthis.nullAssignmentValueBit1 |= mask; // set null", "+\t\tthis.nullAssignmentValueBit2 &= ~mask; // clear non null", "+\t\tif (coverageTestFlag && coverageTestId == 31) {", "+\t\t\tthis.nullAssignmentValueBit2 = ~0;", "+\t\t}", "+\t} ", "+\telse {", "+\t\t// use extra vector", "+\t\tint vectorIndex = (position / BitCacheSize) - 1;", "+\t\t// REVIEW seems to be guarded", "+\t\tthis.extra[2][vectorIndex] |= ", "+\t\t\t(mask = 1L << (position % BitCacheSize));", "+\t\tthis.extra[3][vectorIndex] &= ~mask;", "+\t\tthis.extra[4][vectorIndex] |= mask;", "+\t\tthis.extra[5][vectorIndex] &= ~mask;", "+\t\tif (coverageTestFlag && coverageTestId == 32) {", "+\t\t\tthis.extra[5][vectorIndex] = ~0;", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64749c4cd4ddadebcb7f3a45609b6996", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tfinal private void markAsDefinitelyNonNull(int position)", "signatureAfterChange": " final private void markAsDefinitelyNonNull(int position)", "diff": ["-\t */", "-\tfinal private void markAsDefinitelyNonNull(int position) {", "-\t\t", "-\t\tif (this != DEAD_END) {", "-\t", "-\t\t\t// position is zero-based", "-\t\t\tif (position < BitCacheSize) {", "-\t\t\t\t// use bits", "-\t\t\t\tlong mask;", "-\t\t\t\tdefiniteNonNulls |= (mask = 1L << position);", "-\t\t\t\tdefiniteNulls &= ~mask;", "-\t\t\t} else {", "-\t\t\t\t// use extra vector", "-\t\t\t\tint vectorIndex = (position / BitCacheSize) - 1;", "-\t\t\t\tlong mask;", "-\t\t\t\textraDefiniteNonNulls[vectorIndex] |= (mask = 1L << (position % BitCacheSize));", "-\t\t\t\textraDefiniteNulls[vectorIndex] &= ~mask;", "-\t\t\t}", "-\t\t}", "-\t}", "+ */", "+final private void markAsDefinitelyNonNull(int position) {", "+\t// DEAD_END guarded above", "+\tthis.tagBits |= NULL_FLAG_MASK;", "+\tlong mask;", "+\t// position is zero-based", "+\tif (position < BitCacheSize) {", "+\t\t// use bits", "+\t\tthis.nullAssignmentStatusBit1 |= (mask = 1L << position);", "+\t\tthis.nullAssignmentValueBit2 |= mask; // set non null", "+\t\tthis.nullAssignmentStatusBit2 &= ~mask; // clear protection", "+\t\tthis.nullAssignmentValueBit1 &= ~mask; // clear null", "+\t\tif (coverageTestFlag && coverageTestId == 29) {", "+\t\t\tthis.nullAssignmentStatusBit1 = 0;", "+\t\t}", "+\t} ", "+\telse {", "+\t\t// use extra vector", "+\t\tint vectorIndex = (position / BitCacheSize) - 1;", "+\t\t// REVIEW seems to be guarded", "+\t\tthis.extra[2][vectorIndex] |= ", "+\t\t\t(mask = 1L << (position % BitCacheSize));", "+\t\tthis.extra[5][vectorIndex] |= mask;", "+\t\tthis.extra[3][vectorIndex] &= ~mask;", "+\t\tthis.extra[4][vectorIndex] &= ~mask;", "+\t\tif (coverageTestFlag && coverageTestId == 30) {", "+\t\t\tthis.extra[5][vectorIndex] = ~0;", "+\t\t}", "+\t}", "+}"]}], "num": 72395}