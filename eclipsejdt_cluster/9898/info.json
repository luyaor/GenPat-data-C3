{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a87a1f4ddd118e67524daf79204772e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00fe60225858239a4abf9c816b0124e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "54632eb8b3fc718083fd85b7fed41bcce1a85dc7", "commitAfterChange": "bfb03069bc857fa6dbdefe509f7d5cec8610c33c", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 104, "signatureBeforeChange": "  \tpublic Hashtable getOptions()", "signatureAfterChange": "  \tpublic Hashtable getOptions()", "diff": ["-\t\t// set deprecated options using preferences service lookup", "-\t\tIterator deprecatedEntries = this.deprecatedOptions.entrySet().iterator();", "-\t\twhile (deprecatedEntries.hasNext()) {", "-\t\t\tEntry entry = (Entry) deprecatedEntries.next();", "-\t\t\tString propertyName = (String) entry.getKey();", "-\t\t\tString propertyValue = service.get(propertyName, null, this.preferencesLookup);", "-\t\t\tif (propertyValue != null) {", "-\t\t\t\toptions.put(propertyName, propertyValue);", "-\t\t\t\tString[] compatibleOptions = (String[]) entry.getValue();", "-\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "-\t\t\t\t\toptions.put(compatibleOptions[co], propertyValue);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-", "+\t\ttry {", "+\t\t\tfinal IEclipsePreferences eclipsePreferences = this.preferencesLookup[PREF_INSTANCE];", "+\t\t\tString[] instanceKeys = eclipsePreferences.keys();", "+\t\t\tfor (int i=0, length=instanceKeys.length; i<length; i++) {", "+\t\t\t\tString optionName = instanceKeys[i];", "+\t\t\t\tmigrateObsoleteOption(options, optionName, eclipsePreferences.get(optionName, null));", "+\t\t\t}", "+\t\t} catch (BackingStoreException e) {", "+\t\t\t// skip", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29fe863a94fbc17a51a147c90078b835", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "commitAfterChange": "6a32dca50f918bfeb1714bff0c2eb2686d8d482e", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 107, "signatureBeforeChange": "  \tpublic Hashtable getOptions()", "signatureAfterChange": "  \tpublic Hashtable getOptions()", "diff": ["+\t\t// set deprecated options using preferences service lookup", "+\t\tIterator deprecatedEntries = this.deprecatedOptions.entrySet().iterator();", "+\t\twhile (deprecatedEntries.hasNext()) {", "+\t\t\tEntry entry = (Entry) deprecatedEntries.next();", "+\t\t\tString propertyName = (String) entry.getKey();", "+\t\t\tString propertyValue = service.get(propertyName, null, this.preferencesLookup);", "+\t\t\tif (propertyValue != null) {", "+\t\t\t\toptions.put(propertyName, propertyValue);", "+\t\t\t\tString[] compatibleOptions = (String[]) entry.getValue();", "+\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "+\t\t\t\t\toptions.put(compatibleOptions[co], propertyValue);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+", "-\t\ttry {", "-\t\t\tfinal IEclipsePreferences eclipsePreferences = this.preferencesLookup[PREF_INSTANCE];", "-\t\t\tString[] instanceKeys = eclipsePreferences.keys();", "-\t\t\tfor (int i=0, length=instanceKeys.length; i<length; i++) {", "-\t\t\t\tString optionName = instanceKeys[i];", "-\t\t\t\tmigrateObsoleteOption(options, optionName, eclipsePreferences.get(optionName, null));", "-\t\t\t}", "-\t\t} catch (BackingStoreException e) {", "-\t\t\t// skip", "-\t\t}", "-\t}"]}], "num": 9898}