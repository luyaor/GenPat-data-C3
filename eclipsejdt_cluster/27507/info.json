{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f5032c463469d37a5cd83154fcc5d0f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bed3f9a75f489549ce60dc934750a1a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "9c622a725bd1781235642601f30ea554da5b3d83", "commitAfterChange": "03a380bfa1976c7afb0666b83988f9c0efd1b83c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void notifySourceElementRequestor(FieldDeclaration fieldDeclaration, TypeDeclaration declaringType)", "signatureAfterChange": " public void notifySourceElementRequestor(FieldDeclaration fieldDeclaration, TypeDeclaration declaringType)", "diff": ["-\t\t\t\tchar[] typeName = ", "-\t\t\t\t\tfieldDeclaration.type == null ? // case of enum", "-\t\t\t\t\t\t\tdeclaringType.name: ", "-\t\t\t\t\t\t\tCharOperation.concatWith(fieldDeclaration.type.getParameterizedTypeName(), '.');", "+\t\t\t\tchar[] typeName = null;", "+\t\t\t\tif (fieldDeclaration.type == null) {", "+\t\t\t\t\t// enum constant", "+\t\t\t\t\ttypeName = declaringType.name;", "+\t\t\t\t\tcurrentModifiers |= AccEnum;", "+\t\t\t\t} else {", "+\t\t\t\t\t// regular field", "+\t\t\t\t\ttypeName = CharOperation.concatWith(fieldDeclaration.type.getParameterizedTypeName(), '.');", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1acc7c5136a4e73e0d15c66e3796648", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Util.java", "commitBeforeChange": "91221983c955b9d0c8db212c3f9bfad0ff63717a", "commitAfterChange": "fb3648d5daf5dd036e13dd7df13755e136f238e8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static Boolean valueOf(boolean b)", "signatureAfterChange": " \tpublic static Boolean toBoolean(boolean bool)", "diff": ["-\tpublic static Boolean valueOf(boolean b) {", "-\t\treturn (b ? Boolean.TRUE : Boolean.FALSE);", "+\tpublic static Boolean toBoolean(boolean bool) {", "+\t\tif (bool) {", "+\t\t\treturn Boolean.TRUE;", "+\t\t} else {", "+\t\t\treturn Boolean.FALSE;", "+\t\t}"]}], "num": 27507}