{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e68bf8569cc80beb271255b22ce78a4c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06e65730d25a2e38fc6f6f404a323cce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "69c59f0267102692d57da5d57d379c16633b234c", "commitAfterChange": "a7da40a1a62439fc4b1ece4f5221022e1778c205", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void refreshReferences(IProject source, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void refreshReferences(final IProject[] sourceProjects, IProgressMonitor monitor)", "diff": ["+\tpublic void refreshReferences(final IProject[] sourceProjects, IProgressMonitor monitor) {", "+\t\tIProject externalProject = getExternalFoldersProject();", "+\t\ttry {", "+\t\t\tHashSet externalFolders = null;", "+\t\t\tfor (int index = 0; index < sourceProjects.length; index++) {", "+\t\t\t\tif (sourceProjects[index].equals(externalProject))", "+\t\t\t\t\tcontinue;", "+\t\t\t\tif (!JavaProject.hasJavaNature(sourceProjects[index]))", "+\t\t\t\t\tcontinue;", "+", "+\t\t\t\tHashSet foldersInProject = getExternalFolders(((JavaProject) JavaCore.create(sourceProjects[index])).getResolvedClasspath());", "+\t\t\t\t", "+\t\t\t\tif (foldersInProject == null || foldersInProject.size() == 0)", "+\t\t\t\t\tcontinue;", "+\t\t\t\tif (externalFolders == null)", "+\t\t\t\t\texternalFolders = new HashSet();", "+\t\t\t\t", "+\t\t\t\texternalFolders.addAll(foldersInProject);", "+\t\t\t}", "+\t\t\tif (externalFolders == null) ", "+\t\t\t\treturn;", "+", "+\t\t\tIterator iterator = externalFolders.iterator();", "+\t\t\tJob refreshJob = new RefreshJob(iterator);", "+\t\t\trefreshJob.schedule();", "+\t\t} catch (CoreException e) {", "+\t\t\tUtil.log(e, \"Exception while refreshing external project\"); //$NON-NLS-1$", "+\t\t}", "+\t\treturn;", "+\t}", "-\t\t\tfinal Iterator iterator = externalFolders.iterator();", "-\t\t\tJob refreshJob = new Job(Messages.refreshing_external_folders) {", "-\t\t\t\tpublic boolean belongsTo(Object family) {", "-\t\t\t\t\treturn family == ResourcesPlugin.FAMILY_MANUAL_REFRESH;", "-\t\t\t\t}", "-\t\t\t\tprotected IStatus run(IProgressMonitor pm) {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\t\t\tIPath externalPath = (IPath) iterator.next();", "-\t\t\t\t\t\t\tIFolder folder = getFolder(externalPath);", "-\t\t\t\t\t\t\tif (folder != null)", "-\t\t\t\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, pm);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\treturn e.getStatus();", "-\t\t\t\t\t}", "-\t\t\t\t\treturn Status.OK_STATUS;", "-\t\t\t\t}", "-\t\t\t};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff2bbcf1a8f9af1efe5534b65d4da0fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "e6a94071ba1347cd79bc7467e3bac32c94398042", "commitAfterChange": "6eb70a41e0be0423bb1f7fafc15cb4df8d80eaea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void refreshReferences(IProject source, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void refreshReferences(IProject source, IProgressMonitor monitor)", "diff": ["-\t\t\tIterator iterator = externalFolders.iterator();", "-\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\tIPath externalPath = (IPath) iterator.next();", "-\t\t\t\tIFolder folder = getFolder(externalPath);", "-\t\t\t\tif (folder != null)", "-\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, monitor);", "-\t\t\t}", "+\t\t\tfinal Iterator iterator = externalFolders.iterator();", "+\t\t\tJob refreshJob = new Job(Messages.refreshing_external_folders) { ", "+\t\t\t\tpublic boolean belongsTo(Object family) {", "+\t\t\t\t\treturn family == ResourcesPlugin.FAMILY_MANUAL_REFRESH;", "+\t\t\t\t}", "+\t\t\t\tprotected IStatus run(IProgressMonitor pm) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\twhile (iterator.hasNext()) {", "+\t\t\t\t\t\t\tIPath externalPath = (IPath) iterator.next();", "+\t\t\t\t\t\t\tIFolder folder = getFolder(externalPath);", "+\t\t\t\t\t\t\tif (folder != null)", "+\t\t\t\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, pm);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\treturn e.getStatus();", "+\t\t\t\t\t}", "+\t\t\t\t\treturn Status.OK_STATUS;", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\trefreshJob.schedule();"]}], "num": 3278}