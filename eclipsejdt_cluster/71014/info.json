{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0d16b681cfe56ebcccfd1486192f6aa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3425cdcd6d495ff691a7ccbd09ba587f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "e10de2c4a1110dda4676cb780e20b994bb7f5186", "commitAfterChange": "a2e726822a302fb831672b3e360423f88e9f5a4d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic ITypeBinding[] getTypeParameters()", "signatureAfterChange": " \tpublic ITypeBinding[] getTypeParameters()", "diff": ["-\t\t// TODO (olivier) missing implementation of J2SE 1.5 language feature", "-\t\treturn NO_TYPE_BINDINGS;", "+\t\tif (this.typeParameters != null) {", "+\t\t\treturn this.typeParameters;", "+\t\t}", "+\t\tTypeVariableBinding[] typeVariableBindings = this.binding.typeVariables();", "+\t\tif (typeVariableBindings != null) {", "+\t\t\tint typeVariableBindingsLength = typeVariableBindings.length;", "+\t\t\tif (typeVariableBindingsLength != 0) {", "+\t\t\t\tthis.typeParameters = new ITypeBinding[typeVariableBindingsLength];", "+\t\t\t\tfor (int i = 0; i < typeVariableBindingsLength; i++) {", "+\t\t\t\t\ttypeParameters[i] = this.resolver.getTypeBinding(typeVariableBindings[i]);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tthis.typeParameters = NO_TYPE_BINDINGS;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tthis.typeParameters = NO_TYPE_BINDINGS;", "+\t\t}", "+\t\treturn this.typeParameters;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f71bab59cc376428d3ed46f89e95f70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "ac56f2b73d9b33e4b9a6e4d4cb10ee0f16401ca0", "commitAfterChange": "075f0337e26b45d6db80c1a335ec63cbf2bb29bc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic void recordStringLiteral(StringLiteral literal)", "signatureAfterChange": "  \tpublic void recordStringLiteral(StringLiteral literal, boolean fromRecovery)", "diff": ["-\tpublic void recordStringLiteral(StringLiteral literal) {", "+\tpublic void recordStringLiteral(StringLiteral literal, boolean fromRecovery) {", "+\t\tif (this.stringLiteralsStart != null) {", "+\t\t\tif (this.stringLiteralsStart.contains(literal.sourceStart)) return;", "+\t\t\tthis.stringLiteralsStart.add(literal.sourceStart);", "+\t\t} else if (fromRecovery) {", "+\t\t\tthis.stringLiteralsStart = new HashSetOfInt(stringLiteralsPtr + STRING_LITERALS_INCREMENT);", "+\t\t\tfor (int i = 0; i < this.stringLiteralsPtr; i++) {", "+\t\t\t\tthis.stringLiteralsStart.add(this.stringLiterals[i].sourceStart);", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (this.stringLiteralsStart.contains(literal.sourceStart)) return;", "+\t\t\tthis.stringLiteralsStart.add(literal.sourceStart);", "+\t\t}", "+\t\t"]}], "num": 71014}