{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e229950f6b947cfec91b37b5b6524948", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae00c071423e164b68cd1c2e1c03d03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "5292e21f94372deace5f16b5dfc6aac2c22faf52", "commitAfterChange": "2215b5c020d05490fe1ddb8fe56785e7c3280d1b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tArrayBinding arrayBinding;", "-\t\tif ((this.resolvedType.isArrayType())", "-\t\t\t&& ((arrayBinding = (ArrayBinding) this.resolvedType).dimensions == 1)) {", "+\t\tif (this.resolvedType.dimensions() == 1) {", "-\t\t\tcodeStream.newArray(currentScope, arrayBinding);", "+\t\t\tcodeStream.newArray(currentScope, (ArrayBinding)this.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95fe53770aeb83980a864e485d6c964a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "2a3cfde3c43eda7373112848bd26e889dafe74d6", "commitAfterChange": "c775c1d0f23881553fb0e260a70314c10cea2026", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\t\t\t\tboolean currentViewedAsDeprecated = currentMethod.isViewedAsDeprecated();", "-\t\t\t\tif (options.reportDeprecationInNonDeprecatedCode && !currentViewedAsDeprecated ||", "-\t\t\t\t\t\toptions.reportDeprecationInsideDeprecatedCode && currentViewedAsDeprecated) {", "+\t\t\t\tif (!currentMethod.isViewedAsDeprecated() || options.reportDeprecationInsideDeprecatedCode) {"]}], "num": 48467}