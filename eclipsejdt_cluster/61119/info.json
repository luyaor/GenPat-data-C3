{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b12b979df80ecc41931d4a3dd651da14", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a2c2cd1ccd7d1ab4fe60df00f9f3b33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "1c3298c6e059e091058be85e5c193be4f3e2bb5c", "commitAfterChange": "1604c4cb884aee860a1cc5ef654a628a5e36afd0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate boolean ensureGeneratedSourceFolder( IJavaProject javaProject, IProgressMonitor progressMonitor ) \t\tthrows CoreException", "signatureAfterChange": " \tpublic boolean ensureGeneratedSourceFolder( IProgressMonitor progressMonitor ) \t\tthrows CoreException", "diff": ["-\tprivate boolean ensureGeneratedSourceFolder( IJavaProject javaProject, IProgressMonitor progressMonitor )", "+\tpublic boolean ensureGeneratedSourceFolder( IProgressMonitor progressMonitor )", "-\t\tboolean addedToSourcePath = updateProjectClasspath( javaProject, srcFolder, progressMonitor );", "+\t\tboolean addedToSourcePath = updateProjectClasspath( _javaProject, srcFolder, progressMonitor );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3004d9655087274ef01d604d2fc4ab65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f2f45b09c61cdc4a3bb7702f92f8e4fdcb969052", "commitAfterChange": "f33fe27819e8270eb24d0e5a64c8fba3d823b0e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprivate GeneratedFileManager(final IProject project)", "signatureAfterChange": " \tprivate GeneratedFileManager(final IProject project)", "diff": ["+\t\t// properly initialize the GeneratedFileManager if project path is up-to-date and the generated ", "+\t\t// source folder is there.", "+\t\tfinal IFolder folder = project.getFolder(_generatedSourceFolderName);", "+\t\tif(folder.exists()){", "+\t\t\tboolean uptodate = false;", "+\t\t\ttry{", "+\t\t\t\tuptodate = isProjectClassPathUpToDate(_javaProject, folder.getFullPath(), null);", "+\t\t\t}catch(JavaModelException e){", "+\t\t\t\te.printStackTrace();", "+\t\t\t}", "+\t\t\tif( uptodate )", "+\t\t\t\t_generatedSourceFolder = folder;", "+\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3abe29909a04d4a49c6275e037f7f493", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void aboutToBuild(IJavaProject project)", "signatureAfterChange": " \t \tpublic int aboutToBuild(IJavaProject project)", "diff": ["-\tpublic void aboutToBuild(IJavaProject project) {", "-\t\tif (!AptConfig.isEnabled(project)) {", "-\t\t\treturn;", "-\t\t}\t\t", "-\t\t// setup the classpath and make sure the generated source folder is on disk.", "+\tpublic int aboutToBuild(IJavaProject project) {", "+\t\tif (AptConfig.isEnabled(project)) {", "+\t\t\t// setup the classpath and make sure the generated source folder is on disk.", "+\t\t}\t\t", "+\t\t_buildRound = 0; // reset", "+\t\t// TODO: (wharley) if the factory path is different we need a full build", "+\t\treturn CompilationParticipant.READY_FOR_BUILD;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc9b02330834bed4a57cb5c924174b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "fa5043035008baa87658a861702929b4e6cc6033", "commitAfterChange": "1f110c3776a429c5c16a660065de0c3ffe5e4639", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate IFolder ensureGeneratedSourceFolder( IJavaProject javaProject, IProgressMonitor progressMonitor ) \t\tthrows CoreException", "signatureAfterChange": " \tprivate boolean ensureGeneratedSourceFolder( IJavaProject javaProject, IProgressMonitor progressMonitor ) \t\tthrows CoreException", "diff": ["-\tprivate IFolder ensureGeneratedSourceFolder( IJavaProject javaProject, IProgressMonitor progressMonitor )", "+\tprivate boolean ensureGeneratedSourceFolder( IJavaProject javaProject, IProgressMonitor progressMonitor )", "-\t\t\t\treturn _generatedSourceFolder;", "+\t\t\t\treturn false;", "-\t\tupdateProjectClasspath( javaProject, srcFolder, progressMonitor );", "+\t\tboolean addedToSourcePath = updateProjectClasspath( javaProject, srcFolder, progressMonitor );", "-\t\t\treturn _generatedSourceFolder;", "+\t\t\treturn addedToSourcePath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8db4170497c4def1aeabdc31e6843a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/AptPlugin.java", "commitBeforeChange": "21b06b1f77b7fda7b2358e6e2d335e77a6ac8125", "commitAfterChange": "b397fbf1ef2684ee73e7617091ec4c7be38fc011", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic static AptProject getAptProject(IJavaProject javaProject)", "signatureAfterChange": " \t \tprivate static AptProject getAptProject(IJavaProject javaProject, boolean create)", "diff": ["-\tpublic static AptProject getAptProject(IJavaProject javaProject) {", "-\t\tsynchronized (PROJECT_MAP) {", "+\t", "+\tprivate static AptProject getAptProject(IJavaProject javaProject, boolean create){", "+\t\tsynchronized(PROJECT_MAP){", "-\t\t\telse {", "-\t\t\t\taptProject = new AptProject(javaProject);", "-\t\t\t\tPROJECT_MAP.put(javaProject, aptProject);", "-\t\t\t\treturn aptProject;", "+\t\t\telse{", "+\t\t\t\tif( create ){", "+\t\t\t\t\taptProject = new AptProject(javaProject);", "+\t\t\t\t\tPROJECT_MAP.put(javaProject, aptProject);", "+\t\t\t\t\treturn aptProject;", "+\t\t\t\t}", "+\t\t\t\telse", "+\t\t\t\t\treturn null;"]}], "num": 61119}