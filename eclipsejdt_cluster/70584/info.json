{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21324444158f1a5891813373fe08f25c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc2355ba7ddc7c84d1c9641d2a1ffb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "4b32d121b565ecfeaf118da32c5cfa472e80a4a9", "commitAfterChange": "54f479c4cedb5c06849fe533ad9496b9446738f8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;", "+\t\t\tif (!memento.hasMoreTokens()) return this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9bf70e78b919801047b8ce558ec8cf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " public void invalidType(ASTNode location, TypeBinding type)", "signatureAfterChange": " public void invalidType(ASTNode location, TypeBinding type)", "diff": ["+\t\tif(ref.tokens[ref.tokens.length - 1].length == 0) return;", "+\t\tif(arrayQualifiedTypeReference.tokens[arrayQualifiedTypeReference.tokens.length - 1].length == 0) return;", "+\t\tif(ref.tokens[ref.tokens.length - 1].length == 0) return;", "+\t\tif (ref.tokens[ref.tokens.length - 1].length == 0) return;", "+\t\tif (arrayTypeReference.token.length == 0) return;"]}], "num": 70584}