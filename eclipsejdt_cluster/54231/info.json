{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79e011060e581b1836b75cb840437a12", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "483d47af0bf7f6c4880bef396057ebed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "bf1ba1c1732b0be00fbd03cfd8ae394b6a169e63", "commitAfterChange": "debb51f61b0b4a5b1a6926f67a451ba72125546c", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot)", "signatureAfterChange": " \tpublic void updateCycleParticipants( \t\t\tIClasspathEntry[] preferredClasspath,  \t\t\tArrayList visited,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet alreadyTraversed)", "diff": ["-\tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot){", "+\tpublic void updateCycleParticipants(", "+\t\t\tIClasspathEntry[] preferredClasspath, ", "+\t\t\tArrayList visited, ", "+\t\t\tHashSet cycleParticipants, ", "+\t\t\tIWorkspaceRoot workspaceRoot,", "+\t\t\tHashSet alreadyTraversed){", "+\t\t\t\t", "-\t\t\t\t\t\t\tproject.updateCycleParticipants(null, visited, cycleParticipants, workspaceRoot);", "+\t\t\t\t\t\t\tif (!alreadyTraversed.contains(project)) {", "+\t\t\t\t\t\t\t\tproject.updateCycleParticipants(null, visited, cycleParticipants, workspaceRoot, alreadyTraversed);", "+\t\t\t\t\t\t\t}", "+\t\talreadyTraversed.add(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53db208b668ac3047e3b0c6421e859b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c2ffe8ad8d598fb546a580542eaede433f8f8195", "commitAfterChange": "997cc1d41c2226e34baef319ef2ec522841d939f", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "\r \tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, HashSet visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot)", "signatureAfterChange": "\r \tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot)", "diff": ["-\tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, HashSet visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot){\r", "+\tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot){\r", "-\t\tif (!visited.add(this)) {\r", "-\t\t\tcycleParticipants.addAll(visited);\r", "+\t\tint index = visited.indexOf(this);\r", "+\t\tif (index >= 0){\r", "+\t\t\t// only consider direct participants inside the cycle\r", "+\t\t\tfor (int i = index, size = visited.size(); i < size; i++){\r", "+\t\t\t\tcycleParticipants.add(visited.get(i)); \r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tvisited.add(this);\r"]}], "num": 54231}