{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f758aca76e9dac35faf6ad9dc40d3971", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55745df266fdf476b8f7a451fa432127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " public MethodBinding[] availableMethods()", "signatureAfterChange": " public SyntheticAccessMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod)", "diff": ["+ */", "+public SyntheticAccessMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod) {", "+    ", "+\tif (synthetics == null) {", "+\t\tsynthetics = new HashMap[4];", "+\t}", "+\tif (synthetics[METHOD_EMUL] == null) {", "+\t\tsynthetics[METHOD_EMUL] = new HashMap(5);", "+\t}", "-}", "-public MethodBinding[] availableMethods() {", "-\treturn methods();", "+\tSyntheticAccessMethodBinding accessMethod = null;", "+\tSyntheticAccessMethodBinding[] accessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(inheritedMethodToBridge);", "+\tif (accessors == null) {", "+\t\taccessMethod = new SyntheticAccessMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\tsynthetics[METHOD_EMUL].put(inheritedMethodToBridge, accessors = new SyntheticAccessMethodBinding[2]);", "+\t\taccessors[1] = accessMethod;\t\t", "+\t} else {", "+\t\tif ((accessMethod = accessors[1]) == null) {", "+\t\t\taccessMethod = new SyntheticAccessMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\t\taccessors[1] = accessMethod;", "+\t\t}", "+\t}", "+\treturn accessMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3657220aca5f8b9164041801c6dbe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "diff": ["-public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod) {", "-\tif (!isClass()) return null; // only classes get bridge methods", "-\tif (inheritedMethodToBridge.returnType.erasure() == localTargetMethod.returnType.erasure()", "-\t\t&& inheritedMethodToBridge.areParameterErasuresEqual(localTargetMethod)) {", "+public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod) {", "+\tif (isInterface()) return null; // only classes & enums get bridge methods", "+\t// targetMethod may be inherited", "+\tif (inheritedMethodToBridge.returnType.erasure() == targetMethod.returnType.erasure()", "+\t\t&& inheritedMethodToBridge.areParameterErasuresEqual(targetMethod)) {", "-\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, targetMethod, this);", "-\t\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, targetMethod, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba6cead593e778d09c3fde652e7759b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticAccessMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod)", "diff": ["-public SyntheticAccessMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod) {", "+public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod) {", "-\tSyntheticAccessMethodBinding accessMethod = null;", "-\tSyntheticAccessMethodBinding[] accessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(inheritedMethodToBridge);", "+\tSyntheticMethodBinding accessMethod = null;", "+\tSyntheticMethodBinding[] accessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(inheritedMethodToBridge);", "-\t\taccessMethod = new SyntheticAccessMethodBinding(inheritedMethodToBridge, localTargetMethod);", "-\t\tsynthetics[METHOD_EMUL].put(inheritedMethodToBridge, accessors = new SyntheticAccessMethodBinding[2]);", "+\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\tsynthetics[METHOD_EMUL].put(inheritedMethodToBridge, accessors = new SyntheticMethodBinding[2]);", "-\t\t\taccessMethod = new SyntheticAccessMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);"]}], "num": 27717}