{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fed78b7829bd050ce409df3d7574ef2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023ee822851421bc70fd6bbc9ba3a238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "55a7556711dc91579fb591d318cd652e79ebf6a7", "commitAfterChange": "65b4e15798189e35310112aac16988bcdf7eef0b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprotected void assertClasspathEquals(IClasspathEntry[] classpath, String expected)", "signatureAfterChange": " \tprotected void assertClasspathEquals(IClasspathEntry[] classpath, String expected)", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tint length = classpath == null ? 0 : classpath.length;", "-\t\tfor (int i=0; i<length; i++) {", "-\t\t\tbuffer.append(classpath[i]);", "-\t\t\tif (i < length-1)", "-\t\t\t\tbuffer.append('\\n');", "+\t\tString actual;", "+\t\tif (classpath == null) {", "+\t\t\tactual = \"<null>\";", "+\t\t} else {", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tint length = classpath.length;", "+\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\tbuffer.append(classpath[i]);", "+\t\t\t\tif (i < length-1)", "+\t\t\t\t\tbuffer.append('\\n');", "+\t\t\t}", "+\t\t\tactual = buffer.toString();", "-\t\tString actual = buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d5e2d4895e00b473e1eaec989016fbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\t    StringBuffer buffer = new StringBuffer();", "+\t    if (text.depth >= this.javadocHtmlTagBuffers.length) {", "+\t    \tint length = this.javadocHtmlTagBuffers.length;", "+\t    \tSystem.arraycopy(this.javadocHtmlTagBuffers, 0, this.javadocHtmlTagBuffers = new StringBuffer[text.depth+6], 0, length);", "+\t    }", "+\t    StringBuffer buffer = this.javadocHtmlTagBuffers[text.depth];", "+\t    if (buffer == null) {", "+\t    \tbuffer = new StringBuffer();", "+\t    \tthis.javadocHtmlTagBuffers[text.depth] = buffer;", "+\t    } else {", "+\t    \tbuffer.setLength(0);", "+\t    }", "-\t\t\t\tbuffer = new StringBuffer();", "+\t\t\t\tbuffer.setLength(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "656471422090151b27e12504f4016652", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "1fa0b970f57a68665cdfde955081db2621c42276", "commitAfterChange": "be945f896dfe94a8d4114819ea1c2afbe987ee6b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\t\t\tthis.key = this.getElementType().getKey() + this.getDimensions();", "+\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(this.getElementType().getKey());", "+\t\t\t\t\t\tint dimensions = this.getDimensions();", "+\t\t\t\t\t\tfor (int j = 0; j < dimensions; j++) {", "+\t\t\t\t\t\t\tbuffer.append('[').append(']');", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.key = String.valueOf(buffer);", "-\t\t\t\t\t\tthis.key = Integer.toString(this.getDimensions());", "+\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\t\tint dimensions = this.getDimensions();", "+\t\t\t\t\t\tfor (int j = 0; j < dimensions; j++) {", "+\t\t\t\t\t\t\tbuffer.append('[').append(']');", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.key = String.valueOf(buffer);"]}], "num": 56221}