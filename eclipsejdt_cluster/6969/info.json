{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f4279ac7dd1d5006d852af518f8c720", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "433760307d4cbb7c20428a1a23af383d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 983, "methodNumberAfterChange": 983, "signatureBeforeChange": " public void test0960()", "signatureAfterChange": " public void test0960()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 7)\\n\" +", "-\t\t\"\tX x = newInstance();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"X is a raw type. References to generic type X<A> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 8)\\n\" +", "-\t\t\"\treturn new X[] { x };\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type X[] needs unchecked conversion to conform to X<String>[]\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 10)\\n\" +", "-\t\t\"\tZork z;\\n\" +", "-\t\t\"\t^^^^\\n\" +", "-\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tX x = newInstance();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"X is a raw type. References to generic type X<A> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tX x = newInstance();\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method newInstance() of type X<A> is not applicable for the arguments (). The inferred type Comparable<Comparable<B>> is not a valid substitute for the bounded parameter <B extends Comparable<B>>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\"\treturn new X[] { x };\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type X[] needs unchecked conversion to conform to X<String>[]\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"\tZork z;\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b440f334becce48662f3091cf38a04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 515, "methodNumberAfterChange": 515, "signatureBeforeChange": " \tpublic void test0497()", "signatureAfterChange": " \tpublic void test0497()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 8)\\n\" +", "-\t\t\t\"\ttake(new A());\\n\" +", "-\t\t\t\"\t     ^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Super.A needs unchecked conversion to conform to Super<Double>.A<Double>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 8)\\n\" +", "-\t\t\t\"\ttake(new A());\\n\" +", "-\t\t\t\"\t         ^\\n\" +", "-\t\t\t\"Super.A is a raw type. References to generic type Super<S>.A<E> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in X.java (at line 14)\\n\" +", "-\t\t\t\"\tZork z;\\n\" +", "-\t\t\t\"\t^^^^\\n\" +", "-\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\ttake(new A());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation take(Super.A) of the generic method take(Super<S>.A<S>) of type Super<Double>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\ttake(new A());\\n\" + ", "+\t\t\t\"\t     ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Super.A needs unchecked conversion to conform to Super<Double>.A<Double>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\ttake(new A());\\n\" + ", "+\t\t\t\"\t         ^\\n\" + ", "+\t\t\t\"Super.A is a raw type. References to generic type Super<S>.A<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + "]}], "num": 6969}