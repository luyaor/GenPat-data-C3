{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d95dc484afbe09b254fbc1828f41d591", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e5124e4fc5cc64d42b25605bdd1d09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "34e1323714720fac6c0469cd7d4221981cde60ef", "commitAfterChange": "cd0ef371d41af41215f5d9573eaf8b0116d8b98f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "signatureAfterChange": "  \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\tthrow new IllegalStateException();", "+\t\t\t\t\t\t\tStringWriter stringWriter = new StringWriter();", "+\t\t\t\t\t\t\tPrintWriter writer = null;", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\twriter = new PrintWriter(stringWriter);", "+\t\t\t\t\t\t\t\te.printStackTrace(writer);", "+\t\t\t\t\t\t\t} finally {", "+\t\t\t\t\t\t\t\tif (writer != null) writer.close();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthrow new IllegalStateException(String.valueOf(stringWriter.getBuffer()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22936249dbc8ab0814188e7a57999b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "ab20fccfe10c557b2eadd05f353546a2c1937b1d", "commitAfterChange": "30f4f00f119897159bc44be7bed4fd917933e44b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void run()", "signatureAfterChange": " \tpublic void run()", "diff": ["+\t\t\tclass ProgressJob extends Job {", "+\t\t\t\tProgressJob(String name) {", "+\t\t\t\t\tsuper(name);", "+\t\t\t\t}", "+\t\t\t\tprotected IStatus run(IProgressMonitor monitor) {", "+\t\t\t\t\tint awaitingJobsCount;", "+\t\t\t\t\twhile ((awaitingJobsCount = awaitingJobsCount()) > 0) {", "+\t\t\t\t\t\tmonitor.subTask(Util.bind(\"manager.filesToIndex\", Integer.toString(awaitingJobsCount))); //$NON-NLS-1$", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tThread.sleep(500);", "+\t\t\t\t\t\t} catch (InterruptedException e) {", "+\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\treturn Status.OK_STATUS;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tProgressJob progressJob = null;", "+\t\t\t\t\t\t\tif (progressJob != null) progressJob = null;", "+\t\t\t\t\t\tif (progressJob == null) {", "+\t\t\t\t\t\t\tprogressJob = new ProgressJob(Util.bind(\"manager.indexingInProgress\")); //$NON-NLS-1$", "+\t\t\t\t\t\t\tprogressJob.setPriority(Job.LONG);", "+\t\t\t\t\t\t\tprogressJob.setSystem(true);", "+\t\t\t\t\t\t\tprogressJob.schedule();", "+\t\t\t\t\t\t}"]}], "num": 28740}