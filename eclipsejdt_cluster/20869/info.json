{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b381965ec68f2360acac1a112bec5da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19766c0b24431a69f76c3d9c8373311b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "c691caa0dc4c5d86bd6e9b8bfd831e689219e521", "commitAfterChange": "6fd0d5bd85626ed08708c51c45423c25bdf8bf17", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean isSecret()", "signatureAfterChange": " \tpublic boolean isSecret()", "diff": ["-\t\treturn declaration == null && !isArgument;", "+\t\treturn declaration == null && (this.tagBits & TagBits.IsArgument) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a5ac9b380a1fcd44a2677a1322fd0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Flags.java", "commitBeforeChange": "fc721b0d05a1b41882a9e789b6c18dcfadfbf732", "commitAfterChange": "69458def708eedff53dace674666304d76a16916", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static boolean isDefault(int flags)", "signatureAfterChange": " \tpublic static boolean isPackageDefault(int flags)", "diff": ["-\t */", "-\tpublic static boolean isDefault(int flags) {", "-\t\treturn flags == AccDefault;", "-\t}", "+\t */", "+\tpublic static boolean isPackageDefault(int flags) {", "+\t\treturn (flags & (AccPublic | AccPrivate | AccProtected)) == 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "505695ed9a17ec2238769c079e24fa7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "59ccdbf9540bdb894570a3ebe1e5cfa637624073", "commitAfterChange": "29911619e9eb038f230f09e2190cd9ca1e9cfd72", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\tif (!thenExit) {", "+\t\t\t\tif ((this.bits & ASTNode.ThenExit) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "553f89a6f08e307f5075615302c22fd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic Element newElement(Binding binding, ElementKind kindHint)", "signatureAfterChange": " \tpublic Element newElement(Binding binding, ElementKind kindHint)", "diff": ["-\t\tif (binding == null) {", "-\t\t\treturn new ErrorTypeElement(this._env);", "-\t\t}", "+\t\t\tif ((referenceBinding.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\treturn new ErrorTypeElement(this._env, referenceBinding);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58680255d521bc59c333e100b09fc21e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "646aa5ecb536b7e9ff4fed634622c7786b50bf41", "commitAfterChange": "25e24dc0b5df8ee9c07cfac971fa5e561f586699", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\t  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": "\t  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\t\tif (checkForParenthesis(expression)) {", "+\t\tif ((expression.bits & AstNode.ParenthesizedMASK) != 0) {"]}], "num": 20869}