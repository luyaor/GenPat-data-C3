{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1068e1e363ee55c70e0f193c18e0cd1e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f50903d55fbeb3d5dce8f16d9e88c84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "790aac30bd6ce816d617cb5a88f2ad25d5ac804c", "commitAfterChange": "2de52c15a156e7b5856add0dc9ffb53a5657312f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["+\t\t\t\t// reposition the endPC", "+\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t// reposition the endPC", "+\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae33f96a681cff37f120ab36292cfa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "1cce623392dc2abad468b342ade5233f38d20f6c", "commitAfterChange": "790aac30bd6ce816d617cb5a88f2ad25d5ac804c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\tint pc = codeStream.position;", "-\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t// reposition the endPC", "+\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);", "-\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t// reposition the endPC", "+\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);"]}], "num": 42375}