{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09a53b32c7e6448f31f4f576050af8ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd7360257a7b2d608bae530fe8f4c2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException {", "+protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException {", "-\t\t\t\tBinding binding = qNameRef.binding;", "-\t\t\t\tif (binding instanceof FieldBinding)", "-\t\t\t\t\treportDeclaration((FieldBinding)binding, locator, declPattern.knownFields);", "+\t\t\t\tBinding nameBinding = qNameRef.binding;", "+\t\t\t\tif (nameBinding instanceof FieldBinding)", "+\t\t\t\t\treportDeclaration((FieldBinding)nameBinding, locator, declPattern.knownFields);", "-\t\tmatch = locator.newFieldReferenceMatch(element, accuracy, start, end-start+1, importRef);", "+\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, importRef);", "-\t\tmatch = locator.newFieldReferenceMatch(element, accuracy, start, end-start+1, fieldReference);", "+\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, fieldReference);", "-\t\tmatch = locator.newFieldReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "+\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\tBinding binding = qNameRef.binding;", "+\t\tBinding nameBinding = qNameRef.binding;", "-\t\tif (matchesName(this.pattern.name, qNameRef.tokens[indexOfFirstFieldBinding]) && !(binding instanceof LocalVariableBinding)) {", "-\t\t\tFieldBinding fieldBinding = binding instanceof FieldBinding ? (FieldBinding) binding : null;", "+\t\tif (matchesName(this.pattern.name, qNameRef.tokens[indexOfFirstFieldBinding]) && !(nameBinding instanceof LocalVariableBinding)) {", "+\t\t\tFieldBinding fieldBinding = nameBinding instanceof FieldBinding ? (FieldBinding) nameBinding : null;", "-\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, accuracy, -1, -1, reference);", "+\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, SearchMatch.A_ACCURATE, -1, -1, reference);", "+\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, SearchMatch.A_INACCURATE, -1, -1, reference);", "+\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "-\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, accuracy, -1, -1, reference);", "+\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, SearchMatch.A_ACCURATE, -1, -1, reference);", "+\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, SearchMatch.A_INACCURATE, -1, -1, reference);", "+\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80443253d36bef29cb94e06d32775b05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements,Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+}", "+protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements,Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException {", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, importRef);", "+\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, start, end-start+1, importRef);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, fieldReference);", "+\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, start, end-start+1, fieldReference);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "+\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "+\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "+\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "+\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "-\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "+\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "+\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "+\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);"]}], "num": 26450}