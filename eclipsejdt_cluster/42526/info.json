{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4dfecc724341478b4840ff7b2f400be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487022d7e5c226911f1e837df826f028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "fe228284fc27f2126f4ffab1f41e7aadc13051c1", "commitAfterChange": "fa632e87587c69f11b6e90d1ed0b778dff40b23c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate IStatus validateProcessorOptions(String newValue)", "signatureAfterChange": " \tprivate IStatus validateProcessorOptions()", "diff": ["-\tprivate IStatus validateProcessorOptions(String newValue) {", "-\t\tif (newValue != null && (newValue.contains(\"-Aclasspath\") || newValue.contains(\"-Asourcepath\"))) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\treturn new StatusInfo(IStatus.WARNING, Messages.AptConfigurationBlock_warningIgnoredOptions);", "+\tprivate IStatus validateProcessorOptions() {", "+\t\tList<ProcessorOption> elements = getListElements();", "+\t\tfor (ProcessorOption o : elements) {", "+\t\t\tif (AptConfig.isAutomaticProcessorOption(o.key)) {", "+\t\t\t\treturn new StatusInfo(IStatus.WARNING, ", "+\t\t\t\t\t\tMessages.AptConfigurationBlock_warningIgnoredOptions + \": \" + o.key); //$NON-NLS-1$", "+\t\t\t}", "-\t\telse {", "-\t\t\treturn new StatusInfo();", "-\t\t}", "+\t\treturn new StatusInfo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d8363de3035965aacb593d37bc87be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "fea48c1ab8bc004e73a7488c630798836bc78025", "commitAfterChange": "62174cb60f573d7f957b7c7e696b97cad27f7ffe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "signatureAfterChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "diff": ["-    \tMap<String,String> options;", "-    \toptions = getRawProcessorOptions(jproj);", "+    \tMap<String,String> rawOptions = getRawProcessorOptions(jproj);", "+    \t// map is large enough to also include the programmatically generated options", "+    \tMap<String, String> options = new HashMap<String, String>(rawOptions.size() + 6);", "+    \t", "+    \t// Resolve path metavariables like %ROOT%", "+    \tfor (Map.Entry<String, String> entry : rawOptions.entrySet()) {", "+    \t\tString resolvedValue = resolveVarPath(jproj, entry.getValue());", "+    \t\tString value = (resolvedValue == null) ? entry.getValue() : resolvedValue;", "+    \t\toptions.put(entry.getKey(), value);", "+    \t}", "+    \t"]}], "num": 42526}