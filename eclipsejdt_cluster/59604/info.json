{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11817c9fbb2ccad6c4877fd87055188b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f5e34f33e7fcabeeae6af53167c49da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7dd8cc67681fb88e7736dfbb73821e5e5138853c", "commitAfterChange": "c8d3c4ac56333345ab3b304f1c10283b7f7ae237", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public TypeBinding resolveType(ClassScope scope)", "signatureAfterChange": " public TypeBinding resolveType(ClassScope scope)", "diff": ["-\tif (this.resolvedType == null)", "+\tif (type == null)", "-\tif (!this.resolvedType.isValidBinding()) {", "+\tif (!type.isValidBinding()) {", "+\tif (type.isArrayType() && ((ArrayBinding) type).leafComponentType == TypeBinding.VOID) {", "+\t\tscope.problemReporter().cannotAllocateVoidArray(this);", "+\t\treturn null;", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f37756b625fb2390da72826fdf522f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7dd8cc67681fb88e7736dfbb73821e5e5138853c", "commitAfterChange": "c8d3c4ac56333345ab3b304f1c10283b7f7ae237", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "diff": ["-\tif (this.resolvedType == null)", "+\tif (type == null)", "-\tif (!this.resolvedType.isValidBinding()) {", "+\tif (!type.isValidBinding()) {", "+\tif (type.isArrayType() && ((ArrayBinding) type).leafComponentType == TypeBinding.VOID) {", "+\t\tscope.problemReporter().cannotAllocateVoidArray(this);", "+\t\treturn null;", "+\t}", "+"]}], "num": 59604}