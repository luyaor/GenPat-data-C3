{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86089d0b0079a186a7883091ae2d4bfb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad5c4bff1d62276653dbeb2417354d02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a2b4555c72745b195a5db2cb0624ba6878ccc93", "commitAfterChange": "0e8a2b3bc15c38e29faaa2105eb6e0bbf7b15cd5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected IJavaElement createHandle(Annotation annotation, IAnnotatable parent)", "signatureAfterChange": " protected IJavaElement createHandle(Annotation annotation, IAnnotatable parent)", "diff": ["+\t\tif (parent instanceof LocalVariable) {", "+\t\t\tLocalVariable localVariable = (LocalVariable) parent;", "+\t\t\tIAnnotation[][] annotationsOnDimensions = localVariable.annotationsOnDimensions;", "+\t\t\tint noOfDimensions = annotationsOnDimensions == null ? 0 : annotationsOnDimensions.length;", "+\t\t\tfor (int i = 0; i < noOfDimensions; ++i) {", "+\t\t\t\tIAnnotation[] dimAnnotations = annotationsOnDimensions[i];", "+\t\t\t\tint noOfAnnotations = dimAnnotations.length;", "+\t\t\t\tfor (int j = 0; j < noOfAnnotations; ++j) {", "+\t\t\t\t\tif (dimAnnotations[j].getElementName().equals(name))", "+\t\t\t\t\t\treturn dimAnnotations[j];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff4e9cf4d66edef6a12084798c036cc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "5f25db2c9c02bf799108bff292447ab679c3c3b7", "commitAfterChange": "dcf93fb34d4ce9325841c9302bc217b02f49501a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveType(Type type)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveType(Type type)", "diff": ["-\t\t\tif (node instanceof TypeReference) {", "+            if (node instanceof ParameterizedQualifiedTypeReference) {", "+ \t\t\t\tParameterizedQualifiedTypeReference typeReference = (ParameterizedQualifiedTypeReference) node;", "+ \t\t\t\torg.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding = typeReference.resolvedType;", "+ \t\t\t\tint index;", "+ \t\t\t\tif (type.isQualifiedType()) {", "+ \t\t\t\t\tindex = ((QualifiedType) type).index;", "+ \t\t\t\t} else if (type.isParameterizedType()) {", "+ \t\t\t\t\tindex = ((ParameterizedType) type).index;", "+ \t\t\t\t} else {", "+ \t\t\t\t\tindex = 1;", "+ \t\t\t\t}", "+ \t\t\t\tfinal int numberOfTypeArgumentsNotNull = getTypeArguments(typeReference);", "+ \t\t\t\tif (index != numberOfTypeArgumentsNotNull) {", "+\t \t\t\t\tint  i = numberOfTypeArgumentsNotNull;", "+\t \t\t\t\twhile (i != index) {", "+\t \t\t\t\t\ttypeBinding = typeBinding.enclosingType();", "+\t \t\t\t\t\ti --;", "+\t \t\t\t\t}", "+\t \t\t\t\tbinding = typeBinding;", "+ \t\t\t\t} else {", "+\t\t\t\t\tbinding = typeBinding;", "+ \t\t\t\t}", "+            } else if (node instanceof TypeReference) {"]}], "num": 34621}