{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53c5dc45cb7559d99e82af6ba555728e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03378fbdf72bbdf339b1fa30442dd48d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b8b67e3602501314f6e55c65c68eed3746bd4bbd", "commitAfterChange": "a6f66e49349e26b26fb61a65a047cdceca7cf10d", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " protected void consumeStatementDo()", "signatureAfterChange": " protected void consumeStatementDo()", "diff": ["-\t//optimize the push/pop", "-\tif (astLengthStack[astLengthPtr] == 0) { // silent empty statement", "-\t\tastLengthStack[astLengthPtr] = 1;", "-\t\texpressionLengthPtr--;", "-\t\tastStack[++astPtr] = ", "-\t\t\tnew DoStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tnull, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendPosition); ", "-\t} else {", "-\t\tStatement statement = (Statement) astStack[astPtr];", "-\t\texpressionLengthPtr--;", "-\t\tastStack[astPtr] = ", "-\t\t\tnew DoStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tstatement, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendPosition); ", "-\t}", "+\tStatement statement = (Statement) astStack[astPtr];", "+\texpressionLengthPtr--;", "+\tastStack[astPtr] = ", "+\t\tnew DoStatement(", "+\t\t\texpressionStack[expressionPtr--], ", "+\t\t\tstatement, ", "+\t\t\tintStack[intPtr--], ", "+\t\t\tendPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d0762d46c7aac2ceb5d11c72199224", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "3993129c9cc3c526d942f2fbc0cfa76b24291a94", "commitAfterChange": "130a55997b08af356a22f13721ef702eb35b7557", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": "\r protected void consumeStatementLabel()", "signatureAfterChange": "\r protected void consumeStatementLabel()", "diff": ["-\tif (astLengthStack[astLengthPtr] == 0) {\r", "-\t\tastLengthStack[astLengthPtr] = 1;\r", "-\t\tastStack[++astPtr] = \r", "-\t\t\tnew LabeledStatement(identifierStack[identifierPtr], Block.None, (int) \r", "-\t\t\t\t(identifierPositionStack[identifierPtr--] >>> 32), \r", "+\tStatement stmt = (Statement) astStack[astPtr];\r", "+\tif (stmt instanceof EmptyStatement) {\r", "+\t\tastStack[astPtr] = \r", "+\t\t\tnew LabeledStatement(\r", "+\t\t\t\tidentifierStack[identifierPtr], \r", "+\t\t\t\tBlock.None, \r", "+\t\t\t\t(int) (identifierPositionStack[identifierPtr--] >>> 32), \r", "-\t\t\t\t(Statement) astStack[astPtr], \r", "-\t\t\t\t(int)\r", "-\t\t\t\t(identifierPositionStack[identifierPtr--] >>> 32), \r", "+\t\t\t\tstmt, \r", "+\t\t\t\t(int) (identifierPositionStack[identifierPtr--] >>> 32), \r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f833d7fb3b9099690554031bf2a426", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b8b67e3602501314f6e55c65c68eed3746bd4bbd", "commitAfterChange": "a6f66e49349e26b26fb61a65a047cdceca7cf10d", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " protected void consumeStatementWhile()", "signatureAfterChange": " protected void consumeStatementWhile()", "diff": ["-\tif (astLengthStack[astLengthPtr] == 0) { // silent empty statement", "-\t\tastLengthStack[astLengthPtr] = 1;", "-\t\tastStack[++astPtr] = ", "-\t\t\tnew WhileStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tnull,", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendPosition); ", "-\t} else {", "-\t\tStatement statement = (Statement) astStack[astPtr];", "-\t\tastStack[astPtr] = ", "-\t\t\tnew WhileStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tstatement, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendStatementPosition); ", "-\t}", "+\tStatement statement = (Statement) astStack[astPtr];", "+\tastStack[astPtr] = ", "+\t\tnew WhileStatement(", "+\t\t\texpressionStack[expressionPtr--], ", "+\t\t\tstatement, ", "+\t\t\tintStack[intPtr--], ", "+\t\t\tstatement instanceof Block // TODO (olivier) why isn't it all the time 'endStatementPosition' ? (similar to FOR loop)", "+\t\t\t\t? endStatementPosition", "+\t\t\t\t: endPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e9a12c98b70c77170a749f8f065081", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "82743b33822fbb1e8747641a56800f2dd66cbc54", "commitAfterChange": "ab734870d680bdde73d51371df0336cce36fb2b0", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " protected void consumeStatementWhile()", "signatureAfterChange": " protected void consumeStatementWhile()", "diff": ["-\tStatement statement = (Statement) astStack[astPtr];", "-\tif (statement instanceof Block) {", "+\tif (astLengthStack[astLengthPtr] == 0) { // silent empty statement", "+\t\tastLengthStack[astLengthPtr] = 1;", "+\t\tastStack[++astPtr] = ", "+\t\t\tnew WhileStatement(", "+\t\t\t\texpressionStack[expressionPtr--], ", "+\t\t\t\tnull,", "+\t\t\t\tintStack[intPtr--], ", "+\t\t\t\tendPosition); ", "+\t} else {", "+\t\tStatement statement = (Statement) astStack[astPtr];", "-\t} else {", "-\t\tif (statement instanceof EmptyStatement", "-\t\t\t&& problemReporter.options.complianceLevel <= CompilerOptions.JDK1_3) {", "-\t\t\tastStack[astPtr] = ", "-\t\t\t\tnew WhileStatement(", "-\t\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\t\tnull, ", "-\t\t\t\t\tintStack[intPtr--], ", "-\t\t\t\t\tendPosition); ", "-\t\t} else {", "-\t\t\tastStack[astPtr] = ", "-\t\t\t\tnew WhileStatement(", "-\t\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\t\tstatement, ", "-\t\t\t\t\tintStack[intPtr--], ", "-\t\t\t\t\tendPosition); ", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32357b7442c929ac230cc5c3b069b83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b8b67e3602501314f6e55c65c68eed3746bd4bbd", "commitAfterChange": "a6f66e49349e26b26fb61a65a047cdceca7cf10d", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": " protected void consumeStatementIfNoElse()", "signatureAfterChange": " protected void consumeStatementIfNoElse()", "diff": ["-\tif (astLengthStack[astLengthPtr] == 0) { // silent empty statement", "-\t\tastLengthStack[astLengthPtr] = 1;", "-\t\tastStack[++astPtr] = ", "-\t\t\tnew IfStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tnull, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendStatementPosition); ", "-\t} else {", "-\t\tStatement thenStatement = (Statement) astStack[astPtr];", "-\t\tastStack[astPtr] = ", "-\t\t\tnew IfStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tthenStatement, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendStatementPosition); ", "-\t}", "+\tStatement thenStatement = (Statement) astStack[astPtr];", "+\tastStack[astPtr] = ", "+\t\tnew IfStatement(", "+\t\t\texpressionStack[expressionPtr--], ", "+\t\t\tthenStatement, ", "+\t\t\tintStack[intPtr--], ", "+\t\t\tendStatementPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7974782e4801d9146fd4f59555ff2fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b8b67e3602501314f6e55c65c68eed3746bd4bbd", "commitAfterChange": "a6f66e49349e26b26fb61a65a047cdceca7cf10d", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " protected void consumeStatementLabel()", "signatureAfterChange": " protected void consumeStatementLabel()", "diff": ["-\tif (astLengthStack[astLengthPtr] == 0) { // silent empty statement", "-\t\tastLengthStack[astLengthPtr] = 1;", "-\t\tastStack[++astPtr] = ", "-\t\t\tnew LabeledStatement(", "-\t\t\t\tidentifierStack[identifierPtr], ", "-\t\t\t\tnull, ", "-\t\t\t\t(int) (identifierPositionStack[identifierPtr--] >>> 32), ", "-\t\t\t\tendStatementPosition); ", "-\t} else {", "-\t\tStatement stmt = (Statement) astStack[astPtr];", "-\t\tastStack[astPtr] = ", "-\t\t\tnew LabeledStatement(", "-\t\t\t\tidentifierStack[identifierPtr], ", "-\t\t\t\tstmt, ", "-\t\t\t\t(int) (identifierPositionStack[identifierPtr--] >>> 32), ", "-\t\t\t\tendStatementPosition); ", "-\t}", "+\tStatement stmt = (Statement) astStack[astPtr];", "+\tastStack[astPtr] = ", "+\t\tnew LabeledStatement(", "+\t\t\tidentifierStack[identifierPtr], ", "+\t\t\tstmt, ", "+\t\t\t(int) (identifierPositionStack[identifierPtr--] >>> 32), ", "+\t\t\tendStatementPosition); "]}], "num": 55785}