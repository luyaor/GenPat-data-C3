{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf0311e531f89103f5e9cbc9f425f6f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd06cfe8cdd9390f36e7e9ebeb5b809b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "c9d6ebaa0d13be6fc2e748dee3cae777e5c9d89a", "commitAfterChange": "0011958a7781b8e34a2680d48e8c358ce935fb15", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public RecoveredElement updateOnClosingBrace(int braceStart, int braceEnd)", "signatureAfterChange": "\r public RecoveredElement updateOnClosingBrace(int braceStart, int braceEnd)", "diff": ["+\t\tRecoveredInitializer initializer = enclosingInitializer();\r", "+\t\tif (initializer != null && initializer.initializerBody == this){\r", "+\t\t\treturn parent.updateOnClosingBrace(braceStart, braceEnd);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb1ad9da84a52bbb57b44e855ee63e94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "f6b4fd201225783143c8aa7d615f417f01e17763", "commitAfterChange": "99dc83c87acb33ba34a918de9dea75beba3da624", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex, int bodyIndex, int statementIndex)", "signatureAfterChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex, int bodyIndex, int statementIndex)", "diff": ["+\t\t} else if (bodyDeclaration instanceof Initializer) {", "+\t\t\tInitializer initializer = (Initializer) bodyDeclaration;", "+\t\t\tBlock block = initializer.getBody();", "+\t\t\treturn (ASTNode) block.statements().get(statementIndex);"]}], "num": 72856}