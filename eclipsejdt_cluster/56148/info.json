{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1191e04fbe85cfb9e2d4e71f803173c3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52e8adc98884dc4568664c563440a7a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "0243628c08ab4b4900a7554ddbc8a451c6a47550", "commitAfterChange": "047584befb8673c45fb37a5eec1f22e3adb791d0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "signatureAfterChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "diff": ["-\t\t\t\tres = new ResolvedBinaryMethod(", "+\t\t\t\tResolvedBinaryMethod resolvedRes = new ResolvedBinaryMethod(", "+\t\t\t\tresolvedRes.occurrenceCount = method.getOccurrenceCount();", "+\t\t\t\tres = resolvedRes;", "-\t\t\t\tres = new ResolvedSourceMethod(", "+\t\t\t\tResolvedSourceMethod resolvedRes = new ResolvedSourceMethod(", "+\t\t\t\tresolvedRes.occurrenceCount = method.getOccurrenceCount();", "+\t\t\t\tres = resolvedRes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71c8f65620e514ba43e577c5b0a67dc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "7b0bea69584248f2e93748bb180ed48f6c7ea0f8", "commitAfterChange": "8144f6bdc1d7b4c0f8568d1825064d1e42353926", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles)", "signatureAfterChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles)", "diff": ["-\t\tIMethod method = new BinaryMethod((JavaElement)type, selector, pNames);", "+\t\tBinaryMethod method = new BinaryMethod((JavaElement)type, selector, pNames);", "+\t\t", "+\t\t// ensure that 2 binary methods with the same signature but with different return types have different occurence counts.", "+\t\t// (case of bridge methods in 1.5)", "+\t\twhile (newElements.containsKey(method))", "+\t\t\tmethod.occurrenceCount++;", "+\t\t"]}], "num": 56148}