{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44ee0bbe229fcc0f902d6d8a41350b2c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35430e927129db622183908ea5f5c16e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "26d507f9337456ca82e52ed896177b679ad9ed51", "commitAfterChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate boolean examineGetAllAnnotations()", "signatureAfterChange": " \tprivate boolean examineGetAllAnnotations()", "diff": ["-\t\t\treportError(\"getAllAnnotationMirrors(_elementH) returned null\");", "+\t\t\treportError(\"examineGetAllAnnotations: getAllAnnotationMirrors(_elementH) returned null\");", "-\t\t\t\t\treportError(\"unexpected value for annotation AnnoY\");", "+\t\t\t\t\treportError(\"examineGetAllAnnotations: unexpected value for annotation AnnoY\");", "-\t\t\t\t\t\treportError(\"unexpected value for annotation AnnoX\");", "+\t\t\t\t\t\treportError(\"examineGetAllAnnotations: unexpected value for annotation AnnoX\");", "-\t\t\t\t\treportError(\"getAllAnnotationMirrors(_elementH) returned a mirror with no value()\");", "+\t\t\t\t\treportError(\"examineGetAllAnnotations: getAllAnnotationMirrors(_elementH) returned a mirror with no value()\");", "-\t\t\treportError(\"getAllAnnotationMirrors() found wrong number of annotations on H\");", "+\t\t\treportError(\"examineGetAllAnnotations: getAllAnnotationMirrors() found wrong number of annotations on H\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd9082607c501c2d92e983034d12437", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0dc7155c5e6d95f70a9aded517c1b54b5c1563f1", "commitAfterChange": "f6b4d99cbdd9c3e7eddd18da23b2ebc6b500e5e0", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "\t  \tprotected boolean hasErasedCandidatesCollisions(TypeBinding one, TypeBinding two, Map invocations, ReferenceBinding type, ASTNode typeRef)", "signatureAfterChange": "\t  \tprotected boolean hasErasedCandidatesCollisions(TypeBinding one, TypeBinding two, Map invocations, ReferenceBinding type, ASTNode typeRef)", "diff": ["-\t\t\t\tSet invalidInvocations = (Set) invocations.get(mec);", "-\t\t\t\tint invalidSize = invalidInvocations.size();", "-\t\t\t\tif (invalidSize > 1) {", "-\t\t\t\t\tTypeBinding[] collisions;", "-\t\t\t\t\tinvalidInvocations.toArray(collisions = new TypeBinding[invalidSize]);", "-\t\t\t\t\tproblemReporter().superinterfacesCollide(collisions[0].erasure(), typeRef, collisions[0], collisions[1]);", "+\t\t\t\tObject value = invocations.get(mec);", "+\t\t\t\tif (value instanceof TypeBinding[]) {", "+\t\t\t\t\tTypeBinding[] invalidInvocations = (TypeBinding[]) value;", "+\t\t\t\t\tproblemReporter().superinterfacesCollide(invalidInvocations[0].erasure(), typeRef, invalidInvocations[0], invalidInvocations[1]);"]}], "num": 10294}