{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fd71c53fcc3378668d93d828ad7bf36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e6c7d82fa652c70b987ee27cff574cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "f7d1bb5ee90e0a0f57325e9e031435c92eedb8fb", "commitAfterChange": "a72edc01c485c4064e3d57e37fb2a83dee49bcbb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testPackageFragmentNonJavaResources() throws JavaModelException", "signatureAfterChange": " public void testPackageFragmentNonJavaResources4() throws JavaModelException", "diff": ["-public void testPackageFragmentNonJavaResources() throws JavaModelException {", "-\tassertEquals(\"incorrect number of non java resources (test case 1)\", 2, resources.length);", "-\t// regular source package without resources", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"\", \"x.y\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 2)\", 0, resources.length);", "-\t// source default package with potentialy resources", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"\", \"\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 3)\", 0, resources.length);", "-\t// regular zip package with resources", "-\t// TO DO", "+ */", "+public void testPackageFragmentNonJavaResources4() throws JavaModelException {\t", "+\tIPackageFragment pkg = getPackageFragment(\"JavaProjectTests\", \"lib.jar\", \"p\");", "+\tObject[] resources = pkg.getNonJavaResources();", "+\tassertResourcesEqual(", "+\t\t\"Unexpected resources\", ", "+\t\t\"\",", "+\t\tresources);", "+}", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"lib.jar\", \"p\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 5)\", 0, resources.length);", "-", "-\t// zip default package with potentialy resources", "-\t// TO DO", "-\t", "-\t// zip default package with potentialy no resources", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"lib.jar\", \"\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 7)\", 0, resources.length);", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bada2e3da3718566ba3192577e28540", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "commitAfterChange": "ccb364c95f1fe1767a1c8ae16307a4464fc49b1b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testGetTypeParameters()", "signatureAfterChange": " public void testGetTypeParameters1()", "diff": ["-public void testGetTypeParameters() {", "+public void testGetTypeParameters1() {", "-\tassertEquals(\"Signature#getTypeParameters 1\", 2,", "-\t\t\tSignature.getTypeParameters(sig).length);", "-\tassertEquals(\"Signature#getTypeParameters 2\", \"X:TF;\",", "-\t\t\tSignature.getTypeParameters(sig)[0]);", "-\tassertEquals(\"Signature#getTypeParameters 3\", \"Y::Ljava.lang.Cloneable;\",", "-\t\t\tSignature.getTypeParameters(sig)[1]);", "-\tsig = \"<X:TF;Y::Ljava.lang.Cloneable;>()V\";", "-\tassertEquals(\"Signature#getTypeParameters 4\", 2,", "-\t\t\tSignature.getTypeParameters(sig).length);", "-\tassertEquals(\"Signature#getTypeParameters 5\", \"X:TF;\",", "-\t\t\tSignature.getTypeParameters(sig)[0]);", "-\tassertEquals(\"Signature#getTypeParameters 6\", \"Y::Ljava.lang.Cloneable;\",", "-\t\t\tSignature.getTypeParameters(sig)[1]);\t", "+\tassertStringsEqual(", "+\t\t\t\"Unexpected type parameters\", ", "+\t\t\t\"X:TF;\\n\" + ", "+\t\t\t\"Y::Ljava.lang.Cloneable;\\n\",", "+\t\t\tSignature.getTypeParameters(sig));", "+}"]}], "num": 4145}