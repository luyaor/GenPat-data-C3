{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2e32408e041e6df861ad5a88fb596dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305d63772ff3ecd8d9c4b2485e5615ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "e46b33e3ec4773e86ecd50db1d6ae3ec644c0ac6", "commitAfterChange": "293a2feda0e1362ec063f3b01e3ad998fb23fb36", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test023() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test023() throws JavaModelException, CoreException", "diff": ["-", "-\t\t// Set file encoding", "-\t\tString encoding = \"UTF-8\".equals(vmEncoding) ? \"Cp1252\" : \"UTF-8\";", "-\t\tassertNotNull(\"Cannot find class file!\", zipFile);", "-\t\tzipFile.setCharset(encoding, null);", "+\t\ttry {", "+\t\t\t// Set file encoding", "+\t\t\tString encoding = \"UTF-8\".equals(vmEncoding) ? \"Cp1252\" : \"UTF-8\";", "+\t\t\tassertNotNull(\"Cannot find class file!\", zipFile);", "+\t\t\tzipFile.setCharset(vmEncoding, null);", "-\t\t// Get class file and compare source (should not be the same as modify charset on zip file has no effect...)", "-\t\tIPackageFragmentRoot root = getPackageFragmentRoot(\"Encoding\", \"testUTF8.jar\");", "-\t\tthis.utf8Source = root.getPackageFragment(\"testUTF8\").getClassFile(\"Test.class\");", "-\t\tassertNotNull(this.utf8Source);", "-\t\tString source = this.utf8Source.getSource();", "-\t\tassertNotNull(source);", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "-\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "-", "-\t\t// Reset zip file encoding", "-\t\tzipFile.setCharset(null, null);", "+\t\t\t// Get class file and compare source (should not be the same as modify charset on zip file has no effect...)", "+\t\t\tIPackageFragmentRoot root = getPackageFragmentRoot(\"Encoding\", \"testUTF8.jar\");", "+\t\t\tthis.utf8Source = root.getPackageFragment(\"testUTF8\").getClassFile(\"Test.class\");", "+\t\t\tassertNotNull(this.utf8Source);", "+\t\t\tString source = this.utf8Source.getSource();", "+\t\t\tassertNotNull(source);", "+\t\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "+\t\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "+\t\t}", "+\t\tfinally {", "+\t\t\t// Reset zip file encoding", "+\t\t\tzipFile.setCharset(null, null);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497aa09ab2bf618d849285e05a04a0f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "e46b33e3ec4773e86ecd50db1d6ae3ec644c0ac6", "commitAfterChange": "293a2feda0e1362ec063f3b01e3ad998fb23fb36", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test022() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test022() throws JavaModelException, CoreException", "diff": ["+\t\tString oldEncoding = this.encodingProject.getDefaultCharset();", "+\t\ttry{", "+\t\t\t// Set project encoding", "+\t\t\tString encoding = \"UTF-8\".equals(vmEncoding) ? \"Cp1252\" : \"UTF-8\";", "+\t\t\tthis.encodingProject.setDefaultCharset(vmEncoding, null);", "-\t\t// Set project encoding", "-\t\tString encoding = \"UTF-8\".equals(vmEncoding) ? \"Cp1252\" : \"UTF-8\";", "-\t\tthis.encodingProject.setDefaultCharset(encoding, null);", "-", "-\t\t// Get class file and compare source (should not be the same as modify charset on zip file has no effect...)", "-\t\tIPackageFragmentRoot root = getPackageFragmentRoot(\"Encoding\", \"testUTF8.jar\");", "-\t\tthis.utf8Source = root.getPackageFragment(\"testUTF8\").getClassFile(\"Test.class\");", "-\t\tassertNotNull(this.utf8Source);", "-\t\tString source = this.utf8Source.getSource();", "-\t\tassertNotNull(source);", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "-\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "+\t\t\t// Get class file and compare source (should not be the same as modify charset on zip file has no effect...)", "+\t\t\tIPackageFragmentRoot root = getPackageFragmentRoot(\"Encoding\", \"testUTF8.jar\");", "+\t\t\tthis.utf8Source = root.getPackageFragment(\"testUTF8\").getClassFile(\"Test.class\");", "+\t\t\tassertNotNull(this.utf8Source);", "+\t\t\tString source = this.utf8Source.getSource();", "+\t\t\tassertNotNull(source);", "+\t\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "+\t\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "+\t\t}", "+\t\tfinally{", "+\t\t\tthis.encodingProject.setDefaultCharset(oldEncoding, null);\t\t\t", "+\t\t}"]}], "num": 41495}