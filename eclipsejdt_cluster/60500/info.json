{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89e79a085a8f8f9d5244ff06a2d85e45", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b42aa882661e5e63d3ced38454a745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void test053()", "signatureAfterChange": " public void test053()", "diff": ["-\t\t\"No .class file created for file X.class in ---OUTPUT_DIR_PLACEHOLDER---/X.java because of an IOException: The output directory is a file : ---OUTPUT_DIR_PLACEHOLDER---/X.java\\n\",", "-        true);", "+\t\t\"No .class file created for file X.class in ---OUTPUT_DIR_PLACEHOLDER\" +", "+\t\t\t\"---/X.java because of an IOException: Regular file \" +", "+\t\t\t\"---OUTPUT_DIR_PLACEHOLDER---/X.java cannot be used \" +", "+\t\t\t\"as output directory\\n\",", "+\t\ttrue);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3d71d1f6f84c957b72fe043304c0c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 512, "methodNumberAfterChange": 535, "signatureBeforeChange": " public void testBug201064b() throws CoreException", "signatureAfterChange": " public void testBug201064b_CamelCase() throws CoreException", "diff": ["-}", "-public void testBug201064b() throws CoreException {", "-\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "-\tsearchAllTypeNames(\"CaCase\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(", "-\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "-\t\tcollector", "-\t);", "-}", "+public void testBug201064b_CamelCase() throws CoreException {", "+\tsearchAllTypeNames(\"CaCase\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2745831eceb68d9e291e05f9edbae58c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "598af0e6827857674121fca8a2bf3b4d237fcc0c", "commitAfterChange": "161fa8170f54ac05fe741bfd4320bed612f3336b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy2() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy2() throws CoreException", "diff": ["-\t\t\t\t\"Y[*]: {CHILDREN | FINE GRAINED}\\n\" + ", "-\t\t\t\t\"\tfoo()[+]: {}\"", "+\t\t\t\t\"P[*]: {CHILDREN}\\n\" + ", "+\t\t\t\t\"\t<project root>[*]: {CHILDREN}\\n\" + ", "+\t\t\t\t\"\t\t<default>[*]: {CHILDREN}\\n\" + ", "+\t\t\t\t\"\t\t\t[Working copy] Y.java[*]: {CHILDREN | FINE GRAINED | PRIMARY RESOURCE}\\n\" + ", "+\t\t\t\t\"\t\t\t\tY[*]: {CHILDREN | FINE GRAINED}\\n\" + ", "+\t\t\t\t\"\t\t\t\t\tfoo()[+]: {}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a72b60e7daf879733a2f54db78012c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "e4f990948db7128fd7d7d97f9a98b8766a65b4cc", "commitAfterChange": "350b02047cd9693bad8f368aad78539d79e48626", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testSuggestFieldName007() throws CoreException", "signatureAfterChange": " public void testSuggestFieldName007() throws CoreException", "diff": ["+\t\t\"i\\n\" + //$NON-NLS-1$", "+\t\t\"isuf\\n\" + //$NON-NLS-1$", "+\t\t\"preI\\n\" + //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ddc643ed7afc35f4b3661e9aa9d18ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "81eace213b90c109c77c777c78d15ddb8008a371", "commitAfterChange": "b8b907ea5f26b006c6f4def7b71e1ef512b2b5c3", "methodNumberBeforeChange": 295, "methodNumberAfterChange": 295, "signatureBeforeChange": "  public void testBug110060_MethodPattern08() throws CoreException", "signatureAfterChange": "  public void testBug110060_MethodPattern08() throws CoreException", "diff": ["-\tassertSearchResults(\"\");", "+\tassertSearchResults(", "+\t\t\"src/b110060/Test.java void b110060.Test.aMethodWith1Digit() [aMethodWith1Digit] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java void b110060.Test.aMethodWith1DigitAnd_AnUnderscore() [aMethodWith1DigitAnd_AnUnderscore] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java void b110060.Test.testReferences() [aMethodWith1Digit()] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java void b110060.Test.testReferences() [aMethodWith1DigitAnd_AnUnderscore()] EXACT_MATCH\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55eb91361734ccea2e53423bcd9dc196", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 516, "methodNumberAfterChange": 539, "signatureBeforeChange": " public void testBug201064f() throws CoreException", "signatureAfterChange": " public void testBug201064f_CamelCase() throws CoreException", "diff": ["+}", "+public void testBug201064f_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CamelC\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}", "-public void testBug201064f() throws CoreException {", "-\tsearchAllTypeNames(\"CamelC\", SearchPattern.R_CAMEL_CASE_MATCH, collector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b89ba0ae8c8ad0499a04c361ea43943", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 518, "methodNumberAfterChange": 541, "signatureBeforeChange": " public void testBug201064h() throws CoreException", "signatureAfterChange": " public void testBug201064h_CamelCase() throws CoreException", "diff": ["+}", "+public void testBug201064h_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CaCa\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}", "-public void testBug201064h() throws CoreException {", "-\tsearchAllTypeNames(\"CaCa\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(\"\", collector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e469d1c22fa20820e1523a50356682f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchScopeTests.java", "commitBeforeChange": "e569ccbcfbcb74e518eafb76280b234f1f261194", "commitAfterChange": "2f320253f72e97c287894f0303a7d3fb710470ca", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void _testBug215841() throws CoreException", "signatureAfterChange": " public void testApplicationLibrairiesNonExistingJarAndClassFolder() throws CoreException", "diff": ["+}", "+public void testApplicationLibrairiesNonExistingJarAndClassFolder() throws CoreException {", "+\ttry {", "+\t\tIJavaProject project = createJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"/P/internal.jar\", \"/P/classfolder\"}, \"bin\");", "+\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project}, IJavaSearchScope.APPLICATION_LIBRARIES);", "+\t\tassertScopeEquals(", "+\t\t\t\"JavaSearchScope on [\\n\" + ", "+\t\t\t\"\t/P/internal.jar\\n\" + ", "+\t\t\t\"\t/.org.eclipse.jdt.core.external.folders/.link0\\n\" + ", "-// see #testApplicationLibrairiesJarAndClassFolder()", "-public void _testBug215841() throws CoreException {", "-\ttry {", "-\t\tIJavaProject project = createJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"/P/internal.jar\", \"/P/classfolder\"}, \"bin\");", "-\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project}, IJavaSearchScope.APPLICATION_LIBRARIES);", "-\t\tassertScopeEquals(", "-\t\t\t\"JavaSearchScope on [empty scope]\",", "-\t\t\tscope);", "-\t} finally {", "-\t\tdeleteProject(\"P\");", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "778b6e1b766776cda6c20e473be295d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "99c2e25ae0d73d23014ede292757d62545eec1b5", "commitAfterChange": "ee3e92a740c438d4455b4c3423c42bacaa4600fe", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testAddCommentAndCommit() throws CoreException", "signatureAfterChange": " public void testAddCommentAndCommit() throws CoreException", "diff": ["-\t\t\t\"X.java[*]: {CONTENT | FINE GRAINED}\",", "+\t\t\t\"P[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"\t<project root>[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"\t\t<default>[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"\t\t\tX.java[*]: {CONTENT | FINE GRAINED | PRIMARY RESOURCE}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a0b8df4b7a55f40fab6b1973415597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "35063ce5d9a09463d0cd8cba0e3ead1e4b545071", "commitAfterChange": "bd6ca77171fabf4da2f366e7f152e0ef38feca91", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testBug400899g18() throws CoreException", "signatureAfterChange": " public void testBug400899g18() throws CoreException", "diff": ["-\t\t\"public class X<T extends Object & Comparable<? super @Marker String>> {}\\n\" +", "+\t\t\"public class X<T extends @Marker Object & @Marker Comparable<@Marker ? super @Marker String>> {}\\n\" +", "-\t\t\"<TODO : ADD THE EXPECTED RESULT HERE>\"", "-);\t", "-}", "+\t\t\"src/b400899/X.java b400899.X [Marker] EXACT_MATCH\\n\" + ", "+\t\t\"src/b400899/X.java b400899.X [Marker] EXACT_MATCH\\n\" + ", "+\t\t\"src/b400899/X.java b400899.X [Marker] EXACT_MATCH\\n\" + ", "+\t\t\"src/b400899/X.java b400899.X [Marker] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec0444ebb4cee11f970f4ed91f4512d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest18.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0004()", "signatureAfterChange": " public void test0004()", "diff": ["-\tString expectedParentNodeToString = \"<NONE>\";", "+\tString expectedParentNodeToString = \"static Foo f = (<no type> x5, <no type> x6) -> {\\n\" +", "+\t\t\t\t\t\t\t\t\t\t\"  <CompleteOnName:x>;\\n\" +", "+\t\t\t\t\t\t\t\t\t\t\"};\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "914476af7a6c083158fde42677b88087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "4e65c4119dadcaa4c5efef86f1373d469b137c02", "commitAfterChange": "028fabba816eeb0fd840dacac7e8e60f3c3758c8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testContainerInitializer6() throws CoreException", "signatureAfterChange": " public void testContainerInitializer6() throws CoreException", "diff": ["-\t\t\t\"\"", "+\t\t\t\"P2[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"\tsrc[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"\t\t<default>[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"\t\t\t[Working copy] X.java[+]: {PRIMARY WORKING COPY}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95b21a7b2a59a93c84bbcf938db950bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "be3b8398abdd134469cb25f74becb573498bac14", "commitAfterChange": "5c654dd7dd9bc98526f6c419699195d84517b84b", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 225, "signatureBeforeChange": "  public void testCamelCaseTypePattern08() throws CoreException", "signatureAfterChange": "  public void testCamelCaseTypePattern08() throws CoreException", "diff": ["-\t\t\"\",", "+\t\t\"AA\\n\" + ", "+\t\t\"d8.AA\\n\" + ", "+\t\t\"p6.AA\\n\" + ", "+\t\t\"q1.AA\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fbd018ed3632fefe32f9197c0092f25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchScopeTests.java", "commitBeforeChange": "e569ccbcfbcb74e518eafb76280b234f1f261194", "commitAfterChange": "2f320253f72e97c287894f0303a7d3fb710470ca", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void _testBug215841b() throws CoreException", "signatureAfterChange": " public void testApplicationLibrairiesNonExistingClasspathVariable() throws CoreException", "diff": ["+}", "+public void testApplicationLibrairiesNonExistingClasspathVariable() throws CoreException {", "+\ttry {", "+\t\tVariablesInitializer.setInitializer(new ClasspathInitializerTests.DefaultVariableInitializer(new String[] {\"TEST_LIB\", \"/P/lib.jar\"}));", "+\t\tIJavaProject project = createJavaProject(\"P\", new String[] {}, new String[] {\"TEST_LIB\"}, \"\");", "-// see #testApplicationLibrairiesClasspathContainer()", "-public void _testBug215841b() throws CoreException {", "-\ttry {", "-\t\tVariablesInitializer.setInitializer(new ClasspathInitializerTests.DefaultVariableInitializer(new String[] {\"TEST_LIB\", \"/P/lib.jar\"}));", "-\t\tIJavaProject project = createJavaProject(\"P\", new String[] {}, new String[] {\"TEST_LIB\"}, \"\");", "-\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project}, IJavaSearchScope.APPLICATION_LIBRARIES);", "-\t\tassertScopeEquals(", "-\t\t\t\"JavaSearchScope on [empty scope]\",", "-\t\t\tscope);", "-\t} finally {", "-\t\tdeleteProject(\"P\");", "-\t\tVariablesInitializer.reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0a313a803e9c11824cc9f0be60c7279", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "598af0e6827857674121fca8a2bf3b4d237fcc0c", "commitAfterChange": "161fa8170f54ac05fe741bfd4320bed612f3336b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy1() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy1() throws CoreException", "diff": ["-\t\t\t\t\"\"", "+\t\t\t\t\"P[*]: {CHILDREN}\\n\" + ", "+\t\t\t\t\"\t<project root>[*]: {CHILDREN}\\n\" + ", "+\t\t\t\t\"\t\t<default>[*]: {CHILDREN}\\n\" + ", "+\t\t\t\t\"\t\t\t[Working copy] Y.java[*]: {PRIMARY RESOURCE}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2510b0e2b5a17ee27d3ac7595d28102", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": " public void testBug110060_TypePattern07() throws CoreException", "signatureAfterChange": " public void testBug110060_TypePattern07() throws CoreException", "diff": ["-/** @deprecated As using a depreciated constant */", "-\tsearch(\"aa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "-\tassertSearchResults(", "-\t\t\"\" // no result because it's an invalid camel case pattern which is replaced with ", "-\t\t\t// prefix case sensitive match bu SearchPatter.validateMatchRule(...) (old behavior)", "-\t);", "-}", "+\tsearch(\"aaa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\t// Invalid camel case pattern => replace the camel case flag by prefix match one (case insensitive)", "+\t\t\"src/b110060/Test.java b110060.Test.a3 [AaAaAa] EXACT_MATCH\"", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5719942191deddb116fbc42d0a07929", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "35063ce5d9a09463d0cd8cba0e3ead1e4b545071", "commitAfterChange": "bd6ca77171fabf4da2f366e7f152e0ef38feca91", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testBug400899g22() throws CoreException", "signatureAfterChange": " public void testBug400899g22() throws CoreException", "diff": ["-\t\t\"TODO - ADD THE RESULT HERE\"", "+\t\t\"src/b400899/X.java b400899.CI [Marker] EXACT_MATCH\\n\" + ", "+\t\t\"src/b400899/X.java b400899.CI [Marker] EXACT_MATCH\\n\" + ", "+\t\t\"src/b400899/X.java b400899.CI [Marker] EXACT_MATCH\\n\" + ", "+\t\t\"src/b400899/X.java b400899.CJ [Marker] EXACT_MATCH\\n\" + ", "+\t\t\"src/b400899/X.java b400899.CJ [Marker] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7447cb56823d0f2db6cc919c2a3ba1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 292, "methodNumberAfterChange": 299, "signatureBeforeChange": " public void testBug110060_ConstructorPattern04() throws CoreException", "signatureAfterChange": " public void testBug110060_ConstructorPattern04() throws CoreException", "diff": ["-\tsearch(\"Axx\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMEL_CASE_MATCH);", "+\tsearch(\"AxA\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "-\t\t\"\" // no match as prefix is not set", "+\t\t\"src/b110060/AxAyAz.java b110060.AxAyAz() [AxAyAz] EXACT_MATCH\\n\" +", "+\t\t\"src/b110060/AxxAyy.java b110060.AxxAyy() [AxxAyy] EXACT_MATCH\\n\" +", "+\t\t\"src/b110060/Test.java b110060.Test.axayaz [new AxAyAz()] EXACT_MATCH\\n\" +", "+\t\t\"src/b110060/Test.java b110060.Test.axxayy [new AxxAyy()] EXACT_MATCH\"", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad2a80313d79f920bf33bee727faee6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "11fe35f9c407ba8445270c225d007172a716d5dc", "commitAfterChange": "1dd7ed98be54465df7d1314f9e833c4bc5e5728c", "methodNumberBeforeChange": 289, "methodNumberAfterChange": 289, "signatureBeforeChange": " public void _testBug124469k() throws CoreException", "signatureAfterChange": " public void testBug124469k() throws CoreException", "diff": ["-// TODO (frederic) enable when bug 130xxx will be fixed", "-public void _testBug124469k() throws CoreException {", "+public void testBug124469k() throws CoreException {", "-\t\t\"???\"", "+\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.F.field EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1113e7dbaa11f9f29eb2672bf16767a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "a430dcf4a558e1c36680a36ef4af1ace851e14d2", "commitAfterChange": "dce0303da6d0cbf1d565391873636c507bd68d3f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["+\t\t\"null\\n\" + ", "+\t\t\"null\\n\" + ", "+\t\t\"#inner-finally ->334\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4d413ec33f96c3dcf028a9d96fd993f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "df9c3a401cd78995716c690f400af3a4d95f0187", "commitAfterChange": "d81e6de27221b2caec858658787abf55d91a925e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void _testBug400899g25() throws CoreException", "signatureAfterChange": " public void testBug400899g25() throws CoreException", "diff": ["-public void _testBug400899g25() throws CoreException {", "+public void testBug400899g25() throws CoreException {", "-\t\t\"TODO: ADD THE EXPECTED RESULT HERE\"", "+\t\t\"src/b400899/X.java b400899.X$X [Marker] POTENTIAL_MATCH\\n\" +", "+\t\t\"src/b400899/X.java b400899.X$X [Marker] POTENTIAL_MATCH\\n\" +", "+\t\t\"src/b400899/X.java b400899.X$X [Marker] POTENTIAL_MATCH\\n\" +", "+\t\t\"src/b400899/X.java b400899.X$X [Marker] POTENTIAL_MATCH\\n\" +", "+\t\t\"src/b400899/X.java b400899.X$X [Marker] POTENTIAL_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7bca93e4c31cfcaf1a0279b48ed1b32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 517, "methodNumberAfterChange": 536, "signatureBeforeChange": " public void testBug201064g() throws CoreException", "signatureAfterChange": " public void testBug201064c_CamelCase() throws CoreException", "diff": ["+}", "+public void testBug201064c_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CamelCase\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}", "-public void testBug201064g() throws CoreException {", "-\tsearchAllTypeNames(\"CCa\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(\"\", collector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99bea9913424d1a10ce06e968199fcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "d3213172d29e4c1010f79436308b94172cea83cc", "commitAfterChange": "2daf63d08a96c2ed6e0e08ccfe89195f55d9f8ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType)", "signatureAfterChange": "  \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType)", "diff": ["-\t\tthrow new UnsupportedOperationException(\"NYI: ElementImpl.getAnnotation(...)\"); //$NON-NLS-1$", "+\t\tthrow new UnsupportedOperationException(\"NYI: \" + this + \".getAnnotation(\" + annotationType + \")\"); //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce94b5aed5f808c2ef431647138bb3b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "2f320253f72e97c287894f0303a7d3fb710470ca", "commitAfterChange": "2ae8f4992e9f754d002b3a408b57e7f8a2d8a8be", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testChangeExternalLibFolder4() throws CoreException", "signatureAfterChange": " public void testChangeExternalLibFolder4() throws CoreException", "diff": ["+\t\tcreateExternalFolder(\"externalLib\");", "+\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalFolderPath(\"externalLib\")}, \"\");", "+\t\tstartDeltas();", "+\t\tcreateExternalFile(\"externalLib/test.txt\", \"test\");", "+\t\trefresh(p);", "+\t\tassertDeltas(", "+\t\t\t\"Unexpected delta\", ", "+\t\t\t\"P[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"\t\"+ getExternalPath() + \"externalLib[*]: {CONTENT}\"", "+\t\t);", "+\t} finally {", "+\t\tstopDeltas();", "+\t\tdeleteExternalFolder(\"externalLib\");", "+\t\tdeleteProject(\"P\");", "+\t}", "+}", "-\t\t\t\"\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0948efde86f64fb0c76ef5e053ad319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a81ccfc0bc8694879e3dd29554f4e34087f49572", "commitAfterChange": "090ebdc0744610fb4e5ac8b5b4731d3eafdb24fe", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test017()", "signatureAfterChange": " \tpublic void test017()", "diff": ["-\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\"\", ", "+\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "-\t        \"\",", "+\t        \"incorrect classpath: dummmy_dir\\r\\n\" + ", "+\t        \"incorrect classpath: dummy.jar\\r\\n\" + ", "+\t        \"incorrect classpath: dummy.jar\\r\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24041ea2ab06b21b7d124e221feab2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "11fe35f9c407ba8445270c225d007172a716d5dc", "commitAfterChange": "1dd7ed98be54465df7d1314f9e833c4bc5e5728c", "methodNumberBeforeChange": 290, "methodNumberAfterChange": 290, "signatureBeforeChange": " public void _testBug124469l() throws CoreException", "signatureAfterChange": " public void testBug124469l() throws CoreException", "diff": ["-// TODO (frederic) enable when bug 130xxx will be fixed", "-public void _testBug124469l() throws CoreException {", "+public void testBug124469l() throws CoreException {", "-\t\t\"???\"", "+\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar void test.M.foo() EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a4725161f22b3de608b30df1122f08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 519, "methodNumberAfterChange": 542, "signatureBeforeChange": " public void testBug201064i() throws CoreException", "signatureAfterChange": " public void testBug201064i_CamelCase() throws CoreException", "diff": ["+}", "+public void testBug201064i_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CamelCa\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}", "-public void testBug201064i() throws CoreException {", "-\tsearchAllTypeNames(\"CamelCa\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(\"\", collector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbbe11aae066cf5acebea3d5de2782a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "11fe35f9c407ba8445270c225d007172a716d5dc", "commitAfterChange": "1dd7ed98be54465df7d1314f9e833c4bc5e5728c", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 288, "signatureBeforeChange": " public void _testBug124469j() throws CoreException", "signatureAfterChange": " public void testBug124469j() throws CoreException", "diff": ["-// TODO (frederic) enable when bug 130xxx will be fixed", "-public void _testBug124469j() throws CoreException {", "+public void testBug124469j() throws CoreException {", "-\t\t\"???\"", "+\t\t\"lib/b124469.jar test.C EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.C EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.C EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.C EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.C EXACT_MATCH\\n\" + ", "+\t\t\"lib/b124469.jar test.C EXACT_MATCH\""]}], "num": 60500}