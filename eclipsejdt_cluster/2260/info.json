{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a057567edcc8f75a9e951ba93289dac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00639d2daf7e10b85f35d7a69724e7da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9b8497af1cbd77526a4fa45b99ed631f29570c0f", "commitAfterChange": "e2827e126b55e7ef1923fa3efec0a2ea0aba2477", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\t \t\tprivate int sortParticipants(HashMap group, CompilationParticipant[] participants, int index)", "signatureAfterChange": " \t\t \t\tprivate int sortParticipants(ArrayList group, IConfigurationElement[] configElements, int index)", "diff": ["-\t\tprivate int sortParticipants(HashMap group, CompilationParticipant[] participants, int index) {", "+\t\t", "+\t\tprivate int sortParticipants(ArrayList group, IConfigurationElement[] configElements, int index) {", "-\t\t\tObject[] elements = group.keySet().toArray();", "+\t\t\tObject[] elements = group.toArray();", "-\t\t\t\tparticipants[index+i] = (CompilationParticipant) group.get(elements[i]);", "+\t\t\t\tconfigElements[index+i] = (IConfigurationElement) elements[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f9bf5a303fbc034d54ab264c7c6e6d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean match(DimensionInfo node, Object other)", "signatureAfterChange": " \tpublic boolean match(ExtraDimension node, Object other)", "diff": ["-\tpublic boolean match(DimensionInfo node, Object other) {", "-\t\tif (!(other instanceof DimensionInfo))", "+\tpublic boolean match(ExtraDimension node, Object other) {", "+\t\tif (!(other instanceof ExtraDimension))", "-\t\tDimensionInfo o = (DimensionInfo) other;", "-\t\treturn safeSubtreeListMatch(node.annotations(), o.annotations())", "-\t\t\t\t&& safeSubtreeMatch(node.expression(), o.expression());", "+\t\tExtraDimension o = (ExtraDimension) other;", "+\t\treturn safeSubtreeListMatch(node.annotations(), o.annotations());"]}], "num": 2260}