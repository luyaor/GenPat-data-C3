{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ee06c7cb1e1733ed917e6749e187755", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15bf6fa025e1c5204cbd086f063066cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "e9b8570c48a3adcf8ca596d7d5d3cb77e7107b24", "commitAfterChange": "d9f86abd22aa02e46b78f3fcafe4e36317129341", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": "\r protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "diff": ["+\t\tif(SelectionEngine.DEBUG){\r", "+\t\t\tSystem.out.print(\"SELECTION - accept type(\"); //$NON-NLS-1$\r", "+\t\t\tSystem.out.print(type.toString());\r", "+\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tif(SelectionEngine.DEBUG){\r", "+\t\t\tSystem.out.print(\"SELECTION - accept method(\"); //$NON-NLS-1$\r", "+\t\t\tSystem.out.print(matches[0].toString());\r", "+\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\t\tif(SelectionEngine.DEBUG){\r", "+\t\t\t\tSystem.out.print(\"SELECTION - accept method(\"); //$NON-NLS-1$\r", "+\t\t\t\tSystem.out.print(method.toString());\r", "+\t\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "389bec0c7de7fddb342054540408f201", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "990424c900c7463d4257bff26a1ccc6812106204", "commitAfterChange": "c8d00cbf2814182ef1ce07d7254dc4a8d85157bc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "signatureAfterChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "diff": ["-\tif(res != null && res.getElementType() == IJavaElement.METHOD) {", "-\t\tIMethod method = (IMethod) res;", "-\t\t", "-\t\tchar[] uniqueKey = methodBinding.computeUniqueKey();", "-\t\tif(method.isBinary()) {", "-\t\t\tres = new ResolvedBinaryMethod(", "-\t\t\t\t\t(JavaElement)res.getParent(),", "-\t\t\t\t\tmethod.getElementName(),", "-\t\t\t\t\tmethod.getParameterTypes(), ", "-\t\t\t\t\tnew String(uniqueKey));", "-\t\t} else {", "-\t\t\tres = new ResolvedSourceMethod(", "-\t\t\t\t\t(JavaElement)res.getParent(),", "-\t\t\t\t\tmethod.getElementName(),", "-\t\t\t\t\tmethod.getParameterTypes(), ", "-\t\t\t\t\tnew String(uniqueKey));", "-\t\t}", "-\t\taddElement(res);", "-\t\tif(SelectionEngine.DEBUG){", "-\t\t\tSystem.out.print(\"SELECTION - accept method(\"); //$NON-NLS-1$", "-\t\t\tSystem.out.print(res.toString());", "-\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$", "+\tif(res != null) {", "+\t\tif(res.getElementType() == IJavaElement.METHOD) {", "+\t\t\tIMethod method = (IMethod) res;", "+\t\t\t", "+\t\t\tchar[] uniqueKey = methodBinding.computeUniqueKey();", "+\t\t\tif(method.isBinary()) {", "+\t\t\t\tres = new ResolvedBinaryMethod(", "+\t\t\t\t\t\t(JavaElement)res.getParent(),", "+\t\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\t\tmethod.getParameterTypes(), ", "+\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t} else {", "+\t\t\t\tres = new ResolvedSourceMethod(", "+\t\t\t\t\t\t(JavaElement)res.getParent(),", "+\t\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\t\tmethod.getParameterTypes(), ", "+\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t}", "+\t\t\taddElement(res);", "+\t\t\tif(SelectionEngine.DEBUG){", "+\t\t\t\tSystem.out.print(\"SELECTION - accept method(\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(res.toString());", "+\t\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t} else if(methodBinding.selector == TypeConstants.INIT && res.getElementType() == IJavaElement.TYPE) {", "+\t\t\t// it's a default constructor", "+\t\t\tres = new ResolvedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(methodBinding.declaringClass.computeUniqueKey()));", "+\t\t\taddElement(res);", "+\t\t\tif(SelectionEngine.DEBUG){", "+\t\t\t\tSystem.out.print(\"SELECTION - accept type(\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(res.toString());", "+\t\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$", "+\t\t\t}"]}], "num": 58790}