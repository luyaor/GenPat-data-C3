{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b387caac4c96935321b368aca192cca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68469b219d61daa8348e8ab812bbc016", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "91305054d24049d6f3c60e6470ac6824b85237d2", "commitAfterChange": "613f49564d3b10ed5b9a9173cbde62537beda2ab", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "signatureAfterChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "diff": ["-\t\t\t\t// TODO (frederic) remove when jdt-ui will change to new values", "-\t\t\t\tif (inheritJavaCoreOptions && JavaCore.COMPILER_PB_INVALID_JAVADOC.equals(propertyName)) {", "-\t\t\t\t\toptions.put(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION, value);", "-\t\t\t\t}", "-\t\t\t\tif (inheritJavaCoreOptions && JavaCore.COMPILER_PB_MISSING_JAVADOC.equals(propertyName)) {", "-\t\t\t\t\toptions.put(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION, value);", "-\t\t\t\t}", "-\t\t\t\t// end to do", "-\t\t\t\t// TODO (frederic) remove when jdt-ui will change to new values", "-\t\t\t\toptions.put(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION, value);", "+\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION);", "+\t\t\t\tpreferences.setValue(JavaCore.COMPILER_PB_INVALID_JAVADOC, value);", "-\t\t\t\t// TODO (frederic) remove when jdt-ui will change to new values", "-\t\t\t\toptions.put(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION, value);", "+\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION);", "+\t\t\t\tpreferences.setValue(JavaCore.COMPILER_PB_MISSING_JAVADOC, value);", "-\t\t// TODO (frederic) remove when jdt-ui will change to new values", "-\t\tif (inheritJavaCoreOptions) {", "-\t\t\tif (!options.containsKey(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION)) {", "-\t\t\t\toptions.put(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION, JavaCore.IGNORE);", "-\t\t\t}", "-\t\t\tif (!options.containsKey(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION)) {", "-\t\t\t\toptions.put(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION, JavaCore.DISABLED);", "-\t\t\t}", "-\t\t}", "-\t\t// end to do", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f436cedb217f60008fc7bed5794475", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "8acc10d4567dfe19e44450e6767e3412557d0ca5", "commitAfterChange": "5cb03c90065b8afa84e6ff1478ae9981fadf030b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\tboolean didSpecifySourceLevel = false;", "-\t\tboolean didSpecifyTarget = false;", "-\t\t\t\tdidSpecifySourceLevel = true;", "-\t\t\t\tdidSpecifyTarget = true;", "-\t\tif (!didSpecifyCompliance){", "-\t\t\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)){", "-\t\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\t\t} else {", "-\t\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "-\t\t\t\t}", "-\t\t}", "-\t\tString compliance = (String)options.get(CompilerOptions.OPTION_Compliance);", "-\t\tif (CompilerOptions.VERSION_1_4.equals(compliance)){", "-\t\t\t", "-\t\t\t// default 1.4 settings", "-\t\t\tif (!didSpecifySourceLevel){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);", "-\t\t\t}", "-\t\t\tif (!didSpecifyTarget){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t}", "-\t\t} else if (CompilerOptions.VERSION_1_3.equals(compliance)){", "-", "-\t\t\t// default 1.4 settings", "-\t\t\tif (!didSpecifySourceLevel){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "-\t\t\t}", "-\t\t\tif (!didSpecifyTarget){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "+\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)){", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "+\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t} else {", "+\t\t\tString javaVMVersion = System.getProperty(\"java.vm.version\"); //$NON-NLS-1$", "+\t\t\tif (javaVMVersion != null && javaVMVersion.startsWith(\"1.4\")) { //$NON-NLS-1$", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "+\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);"]}], "num": 68846}