{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd9dc5b8329f9b37c8e6cab764a69ab3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73953a1c996ceba74acd64a27414e5c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "commitAfterChange": "29d4a1149e392c0b5c052a9202992e800f5506a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tFieldBinding field;", "-\t\t\t\tif ((field = fields[i]).isStatic()", "-\t\t\t\t\t&& field.isFinal()", "-\t\t\t\t\t&& (!flowInfo.isDefinitelyAssigned(fields[i]))) {", "-\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "-\t\t\t\t\t\tfield,", "-\t\t\t\t\t\tthis.scope.referenceType().declarationOf(field.original()));", "-\t\t\t\t\t// can complain against the field decl, since only one <clinit>", "+\t\t\t\tFieldBinding field = fields[i];", "+\t\t\t\tif (field.isStatic()) {", "+\t\t\t\t\tif (!flowInfo.isDefinitelyAssigned(field)) {", "+\t\t\t\t\t\tif (field.isFinal()) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "+\t\t\t\t\t\t\t\t\tfield,", "+\t\t\t\t\t\t\t\t\tthis.scope.referenceType().declarationOf(field.original()));", "+\t\t\t\t\t\t\t// can complain against the field decl, since only one <clinit>", "+\t\t\t\t\t\t} else if (field.isNonNull()) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().uninitializedNonNullField(", "+\t\t\t\t\t\t\t\t\tfield,", "+\t\t\t\t\t\t\t\t\tthis.scope.referenceType().declarationOf(field.original()));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3cdd999692a20a5d49c49b57ed9a5e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "b14a6c4d09a9bece1bab75937908ff44df19fa09", "commitAfterChange": "a846071c58f9098177eef02be0134294158f9c4f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tFieldBinding field;", "-\t\t\t\tif ((field = fields[i]).isStatic()", "-\t\t\t\t\t&& field.isFinal()", "-\t\t\t\t\t&& (!flowInfo.isDefinitelyAssigned(fields[i]))) {", "-\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "-\t\t\t\t\t\tfield,", "-\t\t\t\t\t\tthis.scope.referenceType().declarationOf(field.original()));", "-\t\t\t\t\t// can complain against the field decl, since only one <clinit>", "+\t\t\t\tFieldBinding field = fields[i];", "+\t\t\t\tif (field.isStatic()) {", "+\t\t\t\t\tif (!flowInfo.isDefinitelyAssigned(field)) {", "+\t\t\t\t\t\tif (field.isFinal()) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "+\t\t\t\t\t\t\t\t\tfield,", "+\t\t\t\t\t\t\t\t\tthis.scope.referenceType().declarationOf(field.original()));", "+\t\t\t\t\t\t\t// can complain against the field decl, since only one <clinit>", "+\t\t\t\t\t\t} else if (field.isNonNull()) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().uninitializedNonNullField(", "+\t\t\t\t\t\t\t\t\tfield,", "+\t\t\t\t\t\t\t\t\tthis.scope.referenceType().declarationOf(field.original()));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 25406}