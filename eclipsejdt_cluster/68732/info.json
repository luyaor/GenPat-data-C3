{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a879e6f431f923f71ea22fb1312cc05c", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43facb386aefa3cb0193b7333608e291", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "354ebb443c1299f35a4e7d9feb7df720666960e5", "commitAfterChange": "f5d7f3f14e69a955635d98e0e88aeb491988cae5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public boolean isBoxingCompatibleWith(TypeBinding targetType, Scope scope)", "signatureAfterChange": "  public boolean isBoxingCompatibleWith(TypeBinding targetType, Scope scope)", "diff": ["-\t\tthis.expectedType = targetType;", "-\t\t// No need to tunnel through overload resolution. this.binding is the MSMB.", "-\t\tMethodBinding method = isPolyExpression() ? ParameterizedGenericMethodBinding.computeCompatibleMethod18(this.binding.shallowOriginal(), this.argumentTypes, scope, this) : this.binding;", "+\t\tMethodBinding method = this.solutionsPerTargetType != null ? this.solutionsPerTargetType.get(targetType) : null;", "+\t\tif (method == null) {", "+\t\t\tthis.expectedType = targetType;", "+\t\t\t// No need to tunnel through overload resolution. this.binding is the MSMB.", "+\t\t\tmethod = isPolyExpression() ? ParameterizedGenericMethodBinding.computeCompatibleMethod18(this.binding.shallowOriginal(), this.argumentTypes, scope, this) : this.binding;", "+\t\t\tregisterResult(targetType, method);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e7088b726cef162cc292f1a4c48419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "354ebb443c1299f35a4e7d9feb7df720666960e5", "commitAfterChange": "f5d7f3f14e69a955635d98e0e88aeb491988cae5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public boolean isCompatibleWith(TypeBinding targetType, final Scope scope)", "signatureAfterChange": "  public boolean isCompatibleWith(TypeBinding targetType, final Scope scope)", "diff": ["-\t\tthis.expectedType = targetType;", "-\t\t// No need to tunnel through overload resolution. this.binding is the MSMB.", "-\t\tMethodBinding method = isPolyExpression() ? ParameterizedGenericMethodBinding.computeCompatibleMethod18(this.binding.shallowOriginal(), this.argumentTypes, scope, this) : this.binding;", "+\t\tMethodBinding method = this.solutionsPerTargetType != null ? this.solutionsPerTargetType.get(targetType) : null;", "+\t\tif (method == null) {", "+\t\t\tthis.expectedType = targetType;", "+\t\t\t// No need to tunnel through overload resolution. this.binding is the MSMB.", "+\t\t\tmethod = isPolyExpression() ? ParameterizedGenericMethodBinding.computeCompatibleMethod18(this.binding.shallowOriginal(), this.argumentTypes, scope, this) : this.binding;", "+\t\t\tregisterResult(targetType, method);", "+\t\t}"]}], "num": 68732}