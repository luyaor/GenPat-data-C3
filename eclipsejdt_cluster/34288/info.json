{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a902746aa877e3bd656b50e93a63834a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6caeaaeacaef058d8fead7c8a48b87e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "74dfeda014fee33fdaa059267c3786adb9cde274", "commitAfterChange": "d16bbf1cf5a7b17b66958cee0ca0a316cfbeba8c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected boolean makeSpace(int space)", "signatureAfterChange": " \tprotected boolean makeSpace(int space)", "diff": ["-\t\twhile (fCurrentSpace + spaceNeeded > limit && entry != null) {", "-\t\t\tLRUCacheEntry previous = entry._fPrevious;", "-\t\t\tthis.privateRemoveEntry(entry, false, false);", "-\t\t\tentry = previous;", "+\t\ttry {", "+\t\t\t// disable timestamps update while making space so that the previous and next links are not changed", "+\t\t\t// (by a call to get(Object) for example)", "+\t\t\tfTimestampsOn = false;", "+\t\t\t", "+\t\t\twhile (fCurrentSpace + spaceNeeded > limit && entry != null) {", "+\t\t\t\tthis.privateRemoveEntry(entry, false, false);", "+\t\t\t\tentry = entry._fPrevious;", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tfTimestampsOn = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d637a279a472476a6e5951a79fce79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "6621924c838d49b9a19045d0ca437411ece22424", "commitAfterChange": "ce9c3dc3780579b9d7ca1bf9f8f7982e5e565824", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void printComment()", "signatureAfterChange": " \tpublic void printComment()", "diff": ["-\t\t\t\t\t\t\tthis.preserveEmptyLines(2, this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\t\tthis.preserveEmptyLines(count, this.scanner.getCurrentTokenStartPosition());", "-\t\t\t\t\t\thasLineComment = true;\t\t\t\t\t", "+\t\t\t\t\t\thasLineComment = true;\t\t", "+\t\t\t\t\t\tcount = 0;", "+\t\t\t\t\t\tcount = 0;", "+\t\t\t\t\t\tcount = 0;"]}], "num": 34288}