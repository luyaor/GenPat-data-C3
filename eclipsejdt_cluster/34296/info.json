{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f5063a7ed722803667611951676963c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4049b75ee4fd0db9679f96740433653b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testGetImplementingClasses() throws JavaModelException", "signatureAfterChange": " public void testGetImplementingClasses() throws JavaModelException", "diff": ["-\tITypeHierarchy typeHierarchy = type.newTypeHierarchy(null);", "-\tIType[] types = typeHierarchy.getImplementingClasses(type);", "+\tITypeHierarchy hierarchy = type.newTypeHierarchy(null);", "+\tIType[] types = hierarchy.getImplementingClasses(type);", "-\ttypeHierarchy = type.newTypeHierarchy(null);", "-\ttypes = typeHierarchy.getImplementingClasses(type);", "+\thierarchy = type.newTypeHierarchy(null);", "+\ttypes = hierarchy.getImplementingClasses(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f610c682602be33278bcf14535fd74b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testGetExtendingInterfaces() throws JavaModelException", "signatureAfterChange": " public void testGetExtendingInterfaces() throws JavaModelException", "diff": ["-\tITypeHierarchy typeHierarchy = type.newTypeHierarchy(null);", "-\tIType[] types = typeHierarchy.getExtendingInterfaces(type);", "+\tITypeHierarchy hierarchy = type.newTypeHierarchy(null);", "+\tIType[] types = hierarchy.getExtendingInterfaces(type);", "-\ttypeHierarchy = type.newTypeHierarchy(null);", "-\ttypes = typeHierarchy.getExtendingInterfaces(type);", "+\thierarchy = type.newTypeHierarchy(null);", "+\ttypes = hierarchy.getExtendingInterfaces(type);"]}], "num": 34296}