{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fafda5519760888e47e20b3a7e4baf44", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c13287b7e37f8c3bf125d5558fe7d83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "697c6f52ed873e1d18816e7b9bdd345c15d550cf", "commitAfterChange": "8d866d91b7e6bec6081cd0b0a2b4eec25b579319", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["-\t\t\t\tExpression statement = (Expression) node;", "-\t\t\t\telement = element.add(statement, 0);", "-\t\t\t\tif(statement.statementEnd != -1) {", "-\t\t\t\t\tthis.lastCheckPoint = statement.statementEnd + 1;", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.lastCheckPoint = statement.sourceEnd + 1;", "+\t\t\t\tif(node instanceof Assignment ||", "+\t\t\t\t\t\tnode instanceof PrefixExpression ||", "+\t\t\t\t\t\tnode instanceof PostfixExpression ||", "+\t\t\t\t\t\tnode instanceof MessageSend ||", "+\t\t\t\t\t\tnode instanceof AllocationExpression) {", "+\t\t\t\t\t// recover only specific expressions", "+\t\t\t\t\tExpression statement = (Expression) node;", "+\t\t\t\t\telement = element.add(statement, 0);", "+\t\t\t\t\tif(statement.statementEnd != -1) {", "+\t\t\t\t\t\tthis.lastCheckPoint = statement.statementEnd + 1;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.lastCheckPoint = statement.sourceEnd + 1;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6081ba1db41926dfcc30cee0e31e10f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 31, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["+\t\t\tif(this.statementRecoveryActivated) {", "+\t\t\t\telement = element.add(new Block(0), 0);", "+\t\t\t}", "+\t\t}", "+\t\tif(this.statementRecoveryActivated) {", "+\t\t\tif(node instanceof Block) {", "+\t\t\t\tBlock block = (Block) node;", "+\t\t\t\telement = element.add(block, 0);", "+\t\t\t\tthis.lastCheckPoint = block.sourceEnd + 1;", "+\t\t\t} else if(node instanceof LocalDeclaration) {", "+\t\t\t\tLocalDeclaration statement = (LocalDeclaration) node;", "+\t\t\t\telement = element.add(statement, 0);", "+\t\t\t\tthis.lastCheckPoint = statement.sourceEnd + 1;", "+\t\t\t} else if(node instanceof Expression) {", "+\t\t\t\tExpression statement = (Expression) node;", "+\t\t\t\telement = element.add(statement, 0);", "+\t\t\t\tif(statement.statementEnd != -1) {", "+\t\t\t\t\tthis.lastCheckPoint = statement.statementEnd + 1;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.lastCheckPoint = statement.sourceEnd + 1;", "+\t\t\t\t}", "+\t\t\t} else if(node instanceof Statement) {", "+\t\t\t\tStatement statement = (Statement) node;", "+\t\t\t\telement = element.add(statement, 0);", "+\t\t\t\tthis.lastCheckPoint = statement.sourceEnd + 1;", "+\t\t\t}"]}], "num": 48403}