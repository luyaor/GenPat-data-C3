{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7487bc24fd2bf239ae49353298dfae4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "694c989ead775d3be925ddffe269ac65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tint compileTimeTypeId = this.arrayElementTypeID;", "+\t\t\t\tint compileTimeTypeID = this.arrayElementTypeID;", "-\t\t\t\t\t\tcompileTimeTypeId = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tcompileTimeTypeID = scope.computeBoxingType(collectionElementType).id;", "-\t\t\t\t\t\t\tthis.elementVariableImplicitWidening |= (elementType.id << 4) + compileTimeTypeId;", "+\t\t\t\t\t\t\tthis.elementVariableImplicitWidening |= (elementType.id << 4) + compileTimeTypeID;", "-\t\t\t\t\t\tthis.elementVariableImplicitWidening = (elementType.id << 4) + compileTimeTypeId;", "+\t\t\t\t\t\tthis.elementVariableImplicitWidening = (elementType.id << 4) + compileTimeTypeID;", "-\t\t\t\t\t\tcompileTimeTypeId = scope.computeBoxingType(collectionElementType).id;", "-\t\t\t\t\t\tthis.elementVariableImplicitWidening = BOXING | compileTimeTypeId;", "+\t\t\t\t\t\tint boxedID = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tthis.elementVariableImplicitWidening = BOXING | (compileTimeTypeID << 4) | compileTimeTypeID; // use primitive type in implicit conversion", "+\t\t\t\t\t\tcompileTimeTypeID = boxedID;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee8c619c9d3b57298e425f9d814762d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "commitAfterChange": "bcf6d39cea27ed7bf3bf85709bd7e60dc5605058", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tif (!collectionElementType.isCompatibleWith(elementType)) {", "+\t\t\t\tif (!collectionElementType.isCompatibleWith(elementType)", "+\t\t\t\t\t\t&& !scope.isBoxingCompatibleWith(collectionElementType, elementType)) {", "+\t\t\t\tint compileTimeTypeId = this.arrayElementTypeID;", "-\t\t\t\t\tthis.elementVariableImplicitWidening = (elementType.id << 4) + this.arrayElementTypeID;", "+\t\t\t\t\tif (!collectionElementType.isBaseType()) {", "+\t\t\t\t\t\tcompileTimeTypeId = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tthis.elementVariableImplicitWidening = UNBOXING;", "+\t\t\t\t\t\tif (elementType.isBaseType()) {", "+\t\t\t\t\t\t\tthis.elementVariableImplicitWidening |= (elementType.id << 4) + compileTimeTypeId;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.elementVariableImplicitWidening = (elementType.id << 4) + compileTimeTypeId;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tif (collectionElementType.isBaseType()) {", "+\t\t\t\t\t\tcompileTimeTypeId = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tthis.elementVariableImplicitWidening = BOXING | compileTimeTypeId;", "+\t\t\t\t\t}"]}], "num": 53038}