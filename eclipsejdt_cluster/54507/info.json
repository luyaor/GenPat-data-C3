{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0753131df3a475e67d0d6c5044bb1f4f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95a58aa486797f39814b8eeda5102fe9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "100575b90c81ab462711c22b0b0dfbf38604394e", "commitAfterChange": "2489325e5f5b63b33653727c95d688d06cfa0ebb", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " public void testOutputFolder1() throws CoreException", "signatureAfterChange": " public void testOutputFolder1() throws CoreException, IOException", "diff": ["-public void testOutputFolder1() throws CoreException {", "+public void testOutputFolder1() throws CoreException, IOException {", "-\t\tfinal IProject project = getProject(\"P\");", "-\t\t", "+\t\t// create project using Platform/Resources API", "+\t\tIProject project = getProject(\"P\");", "-\t\ttry {", "-\t\t\tFile pro = project.getLocation().toFile();", "-\t\t\tFile src = ClasspathTests.this.createFolder(pro, \"src\");", "-\t\t\tClasspathTests.this.createFolder(src, \"src2\");", "-\t\t\t", "-\t\t\tClasspathTests.this.createFile(pro, \".project\", ", "-\t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "-\t\t\t\t\"<projectDescription>\\n\" +", "-\t\t\t\t\"\t<name>org.eclipse.jdt.core</name>\\n\" +", "-\t\t\t\t\"\t<comment></comment>\\n\" +", "-\t\t\t\t\"\t<projects>\\n\" +", "-\t\t\t\t\"\t</projects>\\n\" +", "-\t\t\t\t\"\t<buildSpec>\\n\" +", "-\t\t\t\t\"\t\t<buildCommand>\\n\" +", "-\t\t\t\t\"\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\\n\" +", "-\t\t\t\t\"\t\t\t<arguments>\\n\" +", "-\t\t\t\t\"\t\t\t</arguments>\\n\" +", "-\t\t\t\t\"\t\t</buildCommand>\\n\" +", "-\t\t\t\t\"\t</buildSpec>\\n\" +", "-\t\t\t\t\"\t<natures>\\n\" +", "-\t\t\t\t\"\t\t<nature>org.eclipse.jdt.core.javanature</nature>\\n\" +", "-\t\t\t\t\"\t</natures>\\n\" +", "-\t\t\t\t\"</projectDescription>\");", "+\t\t// create folders src and src/src2 using java.io API", "+\t\tFile pro = project.getLocation().toFile();", "+\t\tFile src = createFolder(pro, \"src\");", "+\t\tcreateFolder(src, \"src2\");", "+\t\t", "+\t\t// create .project using java.io API", "+\t\tcreateFile(pro, \".project\", ", "+\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "+\t\t\t\"<projectDescription>\\n\" +", "+\t\t\t\"\t<name>org.eclipse.jdt.core</name>\\n\" +", "+\t\t\t\"\t<comment></comment>\\n\" +", "+\t\t\t\"\t<projects>\\n\" +", "+\t\t\t\"\t</projects>\\n\" +", "+\t\t\t\"\t<buildSpec>\\n\" +", "+\t\t\t\"\t\t<buildCommand>\\n\" +", "+\t\t\t\"\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\\n\" +", "+\t\t\t\"\t\t\t<arguments>\\n\" +", "+\t\t\t\"\t\t\t</arguments>\\n\" +", "+\t\t\t\"\t\t</buildCommand>\\n\" +", "+\t\t\t\"\t</buildSpec>\\n\" +", "+\t\t\t\"\t<natures>\\n\" +", "+\t\t\t\"\t\t<nature>org.eclipse.jdt.core.javanature</nature>\\n\" +", "+\t\t\t\"\t</natures>\\n\" +", "+\t\t\t\"</projectDescription>\");", "+\t\t// create .classpath using java.io API", "+\t\tcreateFile(pro, \".classpath\",", "+\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "+\t\t\t\"<classpath>\\n\" +", "+\t\t\t\"    <classpathentry kind=\\\"src\\\" output=\\\"bin2\\\" path=\\\"src1\\\"/>\\n\" +", "+\t\t\t\"    <classpathentry kind=\\\"src\\\" path=\\\"src2\\\"/>\\n\" +", "+\t\t\t\"    <classpathentry kind=\\\"output\\\" path=\\\"bin\\\"/>\\n\" +", "+\t\t\t\"</classpath>\"", "+\t\t);", "-\t\t\tClasspathTests.this.createFile(pro, \".classpath\",", "-\t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "-\t\t\t\t\"<classpath>\\n\" +", "-\t\t\t\t\"    <classpathentry kind=\\\"src\\\" output=\\\"bin2\\\" path=\\\"src1\\\"/>\\n\" +", "-\t\t\t\t\"    <classpathentry kind=\\\"src\\\" path=\\\"src2\\\"/>\\n\" +", "-\t\t\t\t\"    <classpathentry kind=\\\"output\\\" path=\\\"bin\\\"/>\\n\" +", "-\t\t\t\t\"</classpath>\"", "-\t\t\t);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(e.getMessage(), false);", "-\t\t}", "+\t\t// refresh", "-\t\tthis.assertMarkers(", "+\t\t", "+\t\tassertMarkers(", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa53311229951032962698efeb41386", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "100575b90c81ab462711c22b0b0dfbf38604394e", "commitAfterChange": "2489325e5f5b63b33653727c95d688d06cfa0ebb", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " public void testNestedSourceFolders() throws CoreException", "signatureAfterChange": " public void testNestedSourceFolders() throws CoreException, IOException", "diff": ["-public void testNestedSourceFolders() throws CoreException {", "+public void testNestedSourceFolders() throws CoreException, IOException {", "-\t\tfinal IProject project = getProject(\"P\");", "-\t\t", "+\t\t// create project using Platform/Resources API", "+\t\tIProject project = getProject(\"P\");", "-\t\ttry {", "-\t\t\tFile pro = project.getLocation().toFile();", "-\t\t\tFile src = ClasspathTests.this.createFolder(pro, \"src\");", "-\t\t\tClasspathTests.this.createFolder(src, \"src2\");", "-\t\t\t", "-\t\t\tClasspathTests.this.createFile(pro, \".project\", ", "-\t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "-\t\t\t\t\"<projectDescription>\\n\" +", "-\t\t\t\t\"\t<name>org.eclipse.jdt.core</name>\\n\" +", "-\t\t\t\t\"\t<comment></comment>\\n\" +", "-\t\t\t\t\"\t<projects>\\n\" +", "-\t\t\t\t\"\t</projects>\\n\" +", "-\t\t\t\t\"\t<buildSpec>\\n\" +", "-\t\t\t\t\"\t\t<buildCommand>\\n\" +", "-\t\t\t\t\"\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\\n\" +", "-\t\t\t\t\"\t\t\t<arguments>\\n\" +", "-\t\t\t\t\"\t\t\t</arguments>\\n\" +", "-\t\t\t\t\"\t\t</buildCommand>\\n\" +", "-\t\t\t\t\"\t</buildSpec>\\n\" +", "-\t\t\t\t\"\t<natures>\\n\" +", "-\t\t\t\t\"\t\t<nature>org.eclipse.jdt.core.javanature</nature>\\n\" +", "-\t\t\t\t\"\t</natures>\\n\" +", "-\t\t\t\t\"</projectDescription>\");", "+\t\t// create folders src and src/src2 using java.io API", "+\t\tFile pro = project.getLocation().toFile();", "+\t\tFile src = createFolder(pro, \"src\");", "+\t\tcreateFolder(src, \"src2\");", "+\t\t", "+\t\t// create .project using java.io API", "+\t\tcreateFile(pro, \".project\", ", "+\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "+\t\t\t\"<projectDescription>\\n\" +", "+\t\t\t\"\t<name>org.eclipse.jdt.core</name>\\n\" +", "+\t\t\t\"\t<comment></comment>\\n\" +", "+\t\t\t\"\t<projects>\\n\" +", "+\t\t\t\"\t</projects>\\n\" +", "+\t\t\t\"\t<buildSpec>\\n\" +", "+\t\t\t\"\t\t<buildCommand>\\n\" +", "+\t\t\t\"\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\\n\" +", "+\t\t\t\"\t\t\t<arguments>\\n\" +", "+\t\t\t\"\t\t\t</arguments>\\n\" +", "+\t\t\t\"\t\t</buildCommand>\\n\" +", "+\t\t\t\"\t</buildSpec>\\n\" +", "+\t\t\t\"\t<natures>\\n\" +", "+\t\t\t\"\t\t<nature>org.eclipse.jdt.core.javanature</nature>\\n\" +", "+\t\t\t\"\t</natures>\\n\" +", "+\t\t\t\"</projectDescription>\");", "+\t\t// create .classpath using java.io API", "+\t\tcreateFile(pro, \".classpath\",", "+\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "+\t\t\t\"<classpath>\\n\" +", "+\t\t\t\"    <classpathentry kind=\\\"src\\\" path=\\\"src\\\"/>\\n\" +", "+\t\t\t\"    <classpathentry kind=\\\"src\\\" path=\\\"src/src2\\\"/>\\n\" +", "+\t\t\t\"    <classpathentry kind=\\\"output\\\" path=\\\"bin\\\"/>\\n\" +", "+\t\t\t\"</classpath>\"", "+\t\t);", "-\t\t\tClasspathTests.this.createFile(pro, \".classpath\",", "-\t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "-\t\t\t\t\"<classpath>\\n\" +", "-\t\t\t\t\"    <classpathentry kind=\\\"src\\\" path=\\\"src\\\"/>\\n\" +", "-\t\t\t\t\"    <classpathentry kind=\\\"src\\\" path=\\\"src/src2\\\"/>\\n\" +", "-\t\t\t\t\"    <classpathentry kind=\\\"output\\\" path=\\\"bin\\\"/>\\n\" +", "-\t\t\t\t\"</classpath>\"", "-\t\t\t);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(e.getMessage(), false);", "-\t\t}", "-\t\tproject.refreshLocal(IResource.DEPTH_INFINITE,null);", "-\t\tthis.assertMarkers(", "+\t\t// refresh", "+\t\tproject.refreshLocal(IResource.DEPTH_INFINITE, null);", "+\t\t", "+\t\tassertMarkers(", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}], "num": 54507}