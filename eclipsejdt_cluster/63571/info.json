{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e63b1fcd0a78ec913b8b60c4a9e01f6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17753921c26c13df21b515e8ca75aeee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "e81d6189682d067fcbfe542097b61f61885a288c", "commitAfterChange": "d6b4673c8981b96659c9dcea892ebe1f0abbb00b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "signatureAfterChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "diff": ["-\t\t// still need to capture bound supertype as well so as not to expose wildcards to the outside (111208)", "-\t\tTypeBinding substitutedWildcardBound = originalWildcardBound == null ? null : originalWildcardBound.capture(scope, this.position);", "-\t\tif (substitutedWildcardBound == this) substitutedWildcardBound = originalWildcardBound;", "+\t\t\t\t// still need to capture bound supertype as well so as not to expose wildcards to the outside (111208)", "+\t\t\t\tTypeBinding substitutedWildcardBound = originalWildcardBound.capture(scope, this.position);", "-\t\t\t\t\tthis.superclass = wildcard.bound.isArrayType() ? substitutedVariableSuperclass : (ReferenceBinding)substitutedWildcardBound;", "+\t\t\t\t\tthis.superclass = wildcard.bound.isArrayType() ? substitutedVariableSuperclass : (ReferenceBinding) substitutedWildcardBound;", "-\t\t\t\tif ((originalWildcardBound.tagBits & HasTypeVariable) == 0)", "+\t\t\t\tif ((substitutedWildcardBound.tagBits & HasTypeVariable) == 0)", "-\t\t\t\tif (wildcardVariable.firstBound == substitutedVariableSuperclass || substitutedWildcardBound == substitutedVariableSuperclass) {", "+\t\t\t\tif (wildcardVariable.firstBound == substitutedVariableSuperclass || originalWildcardBound == substitutedVariableSuperclass) {", "-\t\t\t\tthis.lowerBound = substitutedWildcardBound;", "-\t\t\t\tif ((substitutedWildcardBound.tagBits & HasTypeVariable) == 0)", "+\t\t\t\tthis.lowerBound = originalWildcardBound;", "+\t\t\t\tif ((originalWildcardBound.tagBits & HasTypeVariable) == 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7194702123257f2e89b53e0524e420fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "signatureAfterChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "diff": ["-\t\t\t\t\t\tif (capturedWildcardBound.isArrayType() || capturedWildcardBound == this) {", "+\t\t\t\t\t\tif (capturedWildcardBound.isArrayType() || TypeBinding.equalsEquals(capturedWildcardBound, this)) {", "-\t\tif (substitutedVariableSuperclass == this) substitutedVariableSuperclass = originalVariableSuperclass;", "+\t\tif (TypeBinding.equalsEquals(substitutedVariableSuperclass, this)) substitutedVariableSuperclass = originalVariableSuperclass;", "-\t\t\t\tif (substitutedVariableInterfaces[i] == this) substitutedVariableInterfaces[i] = originalVariableInterfaces[i];", "+\t\t\t\tif (TypeBinding.equalsEquals(substitutedVariableInterfaces[i], this)) substitutedVariableInterfaces[i] = originalVariableInterfaces[i];", "-\t\t\t\t\tif (capturedWildcardBound.isArrayType() || capturedWildcardBound == this) {", "+\t\t\t\t\tif (capturedWildcardBound.isArrayType() || TypeBinding.equalsEquals(capturedWildcardBound, this)) {", "-\t\t\t\tif (wildcardVariable.firstBound == substitutedVariableSuperclass || originalWildcardBound == substitutedVariableSuperclass) {", "+\t\t\t\tif (TypeBinding.equalsEquals(wildcardVariable.firstBound, substitutedVariableSuperclass) || TypeBinding.equalsEquals(originalWildcardBound, substitutedVariableSuperclass)) {"]}], "num": 63571}