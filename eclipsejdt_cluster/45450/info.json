{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25d78715a67537f19d6b9e598a1c994f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b171d110d5485abec10d3ee4a609c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "e70a97840585a3ede400b971666912929897851b", "commitAfterChange": "f5104ea8b01f4418b9868445123db4c689077583", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t public void build(boolean computeSubtypes)", "signatureAfterChange": " \t public void build(boolean computeSubtypes)", "diff": ["-\t\t\tArrayList allTypesInRegion = determineTypesInRegion();", "+\t\t\tIProgressMonitor typeInRegionMonitor = ", "+\t\t\t\tthis.hierarchy.progressMonitor == null ? ", "+\t\t\t\t\tnull : ", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 30);", "+\t\t\tArrayList allTypesInRegion = determineTypesInRegion(typeInRegionMonitor);", "-\t\t\tcreateTypeHierarchyBasedOnRegion(allTypesInRegion);", "+\t\t\tIProgressMonitor buildMonitor = ", "+\t\t\t\tthis.hierarchy.progressMonitor == null ? ", "+\t\t\t\t\tnull : ", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 70);", "+\t\t\tcreateTypeHierarchyBasedOnRegion(allTypesInRegion, buildMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf00a401e3c5e4b3079c6200d4818d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "8f40b18693d984d1b3346925dd24dfb773855585", "commitAfterChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t public void build(boolean computeSubtypes)", "signatureAfterChange": " \t public void build(boolean computeSubtypes)", "diff": ["-\t\t\tArrayList allTypesInRegion = determineTypesInRegion(typeInRegionMonitor);", "-\t\t\tthis.hierarchy.initialize(allTypesInRegion.size());", "+\t\t\tArrayList allOpenablesInRegion = determineOpenablesInRegion(typeInRegionMonitor);", "+\t\t\tthis.hierarchy.initialize(allOpenablesInRegion.size());", "-\t\t\tcreateTypeHierarchyBasedOnRegion(allTypesInRegion, buildMonitor);", "+\t\t\tcreateTypeHierarchyBasedOnRegion(allOpenablesInRegion, buildMonitor);"]}], "num": 45450}