{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5440f2c53d76199cbf86c62af6ff5e59", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a45bb8e63382b0e55b42df46976ff6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyType.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public HierarchyType( \tIType typeHandle,  \tboolean isClass,  \tchar[] name,  \tint modifiers,  \tchar[] superclassName, \tchar[][] superInterfaceNames)", "signatureAfterChange": " \t public HierarchyType( \tIType typeHandle,  \tint kind, \tchar[] name,  \tint modifiers,  \tchar[] superclassName, \tchar[][] superInterfaceNames)", "diff": ["-\tboolean isClass, ", "+\tint kind,", "-\tthis.isClass = isClass;", "+\tthis.kind = kind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25b42b4bbd454b90ba4cc999dc544255", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "7882956f959d3c6393e0d8829373f1d0522732ab", "commitAfterChange": "5147f5a5f17d6e4dce9e06801af75e51b27b5773", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public SuperTypeReferencePattern( \tchar[] superQualification, \tchar[] superSimpleName, \tboolean checkOnlySuperinterfaces, \tint matchRule)", "signatureAfterChange": "  public SuperTypeReferencePattern( \tchar[] superQualification, \tchar[] superSimpleName, \tint superRefKind, \tint matchRule)", "diff": ["-\tboolean checkOnlySuperinterfaces,", "+\tint superRefKind,", "-\tthis.checkOnlySuperinterfaces = checkOnlySuperinterfaces; // ie. skip the superclass", "+\tthis.superRefKind = superRefKind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e7736f2088fa168644cb0527d63ff0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "4f833be4365ac5abb1ac0cf3973cd75cbb0d7487", "commitAfterChange": "227e3d5fec0001fbc06115e3f3e6f09f357952e2", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected boolean resumeOnSyntaxError()", "signatureAfterChange": " protected int resumeOnSyntaxError()", "diff": ["-protected boolean resumeOnSyntaxError() {", "-\treturn false;", "+protected int resumeOnSyntaxError() {", "+\treturn HALT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "558334456394948f67fed43308b12588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tint flags, \t\tIProgressMonitor monitor)", "diff": ["-\t\tboolean statementsRecovery,", "+\t\tint flags,", "-\t\t\t}\t", "+\t\t\t}", "-\t\t", "+", "-\t\t", "+", "-\t\tresolve(cus, bindingKeys, requestor, apiLevel, compilerOptions, javaProject, owner, statementsRecovery, monitor);", "+\t\tresolve(cus, bindingKeys, requestor, apiLevel, compilerOptions, javaProject, owner, flags, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ed35c94776a45e5d7b22482935bb4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "fe46c42d584fc9df798276778c11a2ce2f79d8c4", "commitAfterChange": "8904ea4393baa4ec97ffdacde82d6f35bb8add7c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, boolean includeReferencedProjects)", "signatureAfterChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, int includeMask)", "diff": ["+\t */", "+\tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, int includeMask) {", "-\t\t\t\t\t\tscope.add((IJavaProject)element, includeReferencedProjects, visitedProjects);", "+\t\t\t\t\t\tscope.add((IJavaProject)element, includeMask, visitedProjects);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80e55a84258b210f2626d27fbe3f20bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowInfo.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tabstract public FlowInfo markAsFakeReachable(boolean isFakeReachable);", "signatureAfterChange": "  \tabstract public FlowInfo setReachMode(int reachMode);", "diff": ["-\tabstract public FlowInfo markAsFakeReachable(boolean isFakeReachable);", "+", "+\tabstract public FlowInfo setReachMode(int reachMode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "936287e1a4e91f7ea01b550593255bb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "efbaf5f01b1dd1c4f8135936aa48ce411ca71c6c", "commitAfterChange": "226549608701ba73d9d11accd44137bac1a2e12b", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic CompilationUnit reconcile( \t\tboolean createAST, \t\tboolean forceProblemDetection, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic CompilationUnit reconcile( \t\tint astLevel, \t\tboolean forceProblemDetection, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t */", "-\tpublic CompilationUnit reconcile(", "-\t\tboolean createAST,", "-\t\tboolean forceProblemDetection,", "-\t\tWorkingCopyOwner owner,", "-\t\tIProgressMonitor monitor)", "-\t\tthrows JavaModelException {", "-\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.ELEMENT_DOES_NOT_EXIST, this));", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "995b1744cca3ea0018fe3d792c0a5a53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration process( \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration process( \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tint reconcileFlags, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\tboolean statementsRecovery,", "+\t\tint reconcileFlags,", "-\t\treturn process(null/*no CompilationUnitDeclaration*/, unitElement, contents, null/*use default Parser*/, workingCopyOwner, problems, creatingAST, statementsRecovery, monitor);", "+\t\treturn process(null/*no CompilationUnitDeclaration*/, unitElement, contents, null/*use default Parser*/, workingCopyOwner, problems, creatingAST, reconcileFlags, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0bb6d2c9987034f43cf5871326fe70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "c8403236a1da36770c42adade61fff44b4064b9a", "commitAfterChange": "dc8046a1f26c48f37690a73dc98185cd18d7251b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate SourceTypeConverter(boolean needFieldInitialization, ProblemReporter problemReporter)", "signatureAfterChange": " \t \tprivate SourceTypeConverter(int flags, ProblemReporter problemReporter)", "diff": ["-\tprivate SourceTypeConverter(boolean needFieldInitialization, ProblemReporter problemReporter) {", "-\t\tthis.needFieldInitialization = needFieldInitialization;", "+\tprivate SourceTypeConverter(int flags, ProblemReporter problemReporter) {", "+\t\tthis.flags = flags;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df940c4e3bdd1a574d44ca66fed9533c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "4f833be4365ac5abb1ac0cf3973cd75cbb0d7487", "commitAfterChange": "227e3d5fec0001fbc06115e3f3e6f09f357952e2", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " protected boolean resumeOnSyntaxError()", "signatureAfterChange": " protected int resumeOnSyntaxError()", "diff": ["-protected boolean resumeOnSyntaxError() {", "+protected int resumeOnSyntaxError() {", "-\t\treturn false;", "+\t\treturn HALT;", "-\treturn true;", "+\treturn RESTART;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3cdfd0c0eecbe10db60cef6075a36a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " public org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(int astLevel, boolean resolveBindings, boolean statementsRecovery, HashMap problems, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(int astLevel, boolean resolveBindings, int reconcileFlags, HashMap problems, IProgressMonitor monitor) throws JavaModelException", "diff": ["-public org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(int astLevel, boolean resolveBindings, boolean statementsRecovery, HashMap problems, IProgressMonitor monitor) throws JavaModelException {", "+public org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(int astLevel, boolean resolveBindings, int reconcileFlags, HashMap problems, IProgressMonitor monitor) throws JavaModelException {", "-\t\tinfo.statementsRecovery = statementsRecovery;", "+\t\tinfo.reconcileFlags = reconcileFlags;"]}], "num": 22060}