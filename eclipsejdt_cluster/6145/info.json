{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eeaa2e659db1523ba2095eb69b2df976", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5fb4460cdb4144e5909ffa93f6c03c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "signatureAfterChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "diff": ["-\t\t} else if (rhsType.isRawType() && (lhsType.isParameterizedType() || lhsType.isGenericType())) {", "+\t\t} else if (rhsType.isRawType() && (lhsType.isBoundParameterizedType() || lhsType.isGenericType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd2cb225a016bec2321a13e00edeebf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\t\t        && (parameterType.isParameterizedType() || parameterType.isGenericType())) {", "+\t\t\t        && (parameterType.isBoundParameterizedType() || parameterType.isGenericType())) {"]}], "num": 6145}