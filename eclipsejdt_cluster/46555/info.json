{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb74afd4c2d75e287b990cc1c683527d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0427a252ce0198288ca294430b2a0654", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public char[][] getMatchCategories()", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\tif (progressMonitor != null && progressMonitor.isCanceled()) throw new OperationCanceledException();", "-", "-\t// in the new story this will be a single call with a mask", "-\tchar[][] possibleTags =", "-\t\tthis.findReferences", "-\t\t\t? (this.findDeclarations || this.writeAccess ? REF_AND_DECL_TAGS : REF_TAGS)", "-\t\t\t: DECL_TAGS;", "-\tfor (int i = 0, max = possibleTags.length; i < max; i++) {", "-\t\tthis.currentTag = possibleTags[i];", "-\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);", "-\t}", "+public char[][] getMatchCategories() {", "+\treturn this.findReferences", "+\t\t\t? (this.findDeclarations || this.writeAccess ? REF_AND_DECL_CATEGORIES : REF_CATEGORIES)", "+\t\t\t: DECL_CATEGORIES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1211137b68f1c8b67b88e7ac16178cb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public char[][] getMatchCategories()", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-", "-\tif (progressMonitor != null && progressMonitor.isCanceled()) throw new OperationCanceledException();", "-", "-\tchar[][] possibleTags = this.simpleName == null ? REF_TAGS : TAGS;", "-\tfor (int i = 0, max = possibleTags.length; i < max; i++) {", "-\t\tcurrentTag = possibleTags[i];", "-\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);", "-\t}", "+}", "+public char[][] getMatchCategories() {", "+\treturn this.simpleName == null ? REF_CATEGORIES : CATEGORIES;"]}], "num": 46555}