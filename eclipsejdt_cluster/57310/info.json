{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02ba8486fcd43fe3b3f147b351e1a3f5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a4eaa1ae36d9b016c2ac39aa8e5e529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "6e5d8fb1fa59c43c60c58828e1e292aaafa3465f", "commitAfterChange": "108910be72e713e6e104fafacd635988e5383096", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": "  protected void resolveAnnotations(BlockScope scope)", "signatureAfterChange": "  protected void resolveAnnotations(Scope scope)", "diff": ["-protected void resolveAnnotations(BlockScope scope) {", "-\tif (this.annotations != null) {", "-\t\tresolveAnnotations(scope, this.annotations, new Annotation.TypeUseBinding(Binding.TYPE_USE));", "+protected void resolveAnnotations(Scope scope) {", "+\tAnnotation[][] annotationsOnDimensions = getAnnotationsOnDimensions();", "+\tif (this.annotations != null || annotationsOnDimensions != null) {", "+\t\tBlockScope resolutionScope = Scope.typeAnnotationsResolutionScope(scope);", "+\t\tif (resolutionScope != null) {", "+\t\t\tif (this.annotations != null) {", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tif (this.annotations[i] != null) {", "+\t\t\t\t\t\tresolveAnnotations(resolutionScope, this.annotations[i], new Annotation.TypeUseBinding(isWildcard() ? Binding.TYPE_PARAMETER : Binding.TYPE_USE));", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+", "+\t\t\tif (annotationsOnDimensions != null) {", "+\t\t\t\tfor (int i = 0, length = annotationsOnDimensions.length; i < length; i++) {", "+\t\t\t\t\tAnnotation [] dimensionAnnotations = annotationsOnDimensions[i];", "+\t\t\t\t\tif (dimensionAnnotations  != null) {", "+\t\t\t\t\t\tresolveAnnotations(resolutionScope, dimensionAnnotations, new Annotation.TypeUseBinding(Binding.TYPE_USE));", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa6cac3d949d24979735c781c4e136ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "d25d8e2aefb1fe7881a3b669cacd403afc528b1a", "commitAfterChange": "c768bb705d25a055607160ce11d239f196ca5653", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "  protected AbstractImageBuilder(JavaBuilder javaBuilder, boolean buildStarting, State newState)", "diff": ["-protected AbstractImageBuilder(JavaBuilder javaBuilder) {", "-\tthis.javaBuilder = javaBuilder;", "-\tthis.newState = new State(javaBuilder);", "-", "+protected AbstractImageBuilder(JavaBuilder javaBuilder, boolean buildStarting, State newState) {", "+\tthis.javaBuilder = javaBuilder;", "-\tthis.compiler = newCompiler();", "-\tthis.workQueue = new WorkQueue();", "-\tthis.problemSourceFiles = new ArrayList(3);", "+\tif (buildStarting) {", "+\t\tthis.newState = newState == null ? new State(javaBuilder) : newState;", "+\t\tthis.compiler = newCompiler();", "+\t\tthis.workQueue = new WorkQueue();", "+\t\tthis.problemSourceFiles = new ArrayList(3);", "+", "+\t\tif (this.javaBuilder.participants != null) {", "+\t\t\tfor (int i = 0, l = this.javaBuilder.participants.length; i < l; i++) {", "+\t\t\t\tif (this.javaBuilder.participants[i].isAnnotationProcessor()) {", "+\t\t\t\t\t// initialize this set so the builder knows to gather CUs that define Annotation types", "+\t\t\t\t\t// each Annotation processor participant is then asked to process these files AFTER", "+\t\t\t\t\t// the compile loop. The normal dependency loop will then recompile all affected types", "+\t\t\t\t\tthis.filesDeclaringAnnotation = new SimpleSet(1);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 57310}