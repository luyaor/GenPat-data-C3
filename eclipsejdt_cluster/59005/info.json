{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0417a1297905cb0e33076b4636fe6d7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738205aa317141bfdf2f4bf7d3b358fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "82e3492687fb385a8a9ba6c56e1f6d491dc8d79a", "commitAfterChange": "0b30f6ac807cc8aa14a5978d1dd305dd71baedda", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected void refreshInlineTagPosition(int previousPosition)", "signatureAfterChange": " \tprotected void refreshInlineTagPosition(int previousPosition)", "diff": ["+\t\t\t\tif (previousTag.fragments().size() > 0) {", "+\t\t\t\t\tASTNode inlineTag = (ASTNode) previousTag.fragments().get(previousTag.fragments().size()-1);", "+\t\t\t\t\tif (inlineTag.getNodeType() == ASTNode.TAG_ELEMENT) {", "+\t\t\t\t\t\tint inlineStart = inlineTag.getStartPosition();", "+\t\t\t\t\t\tinlineTag.setSourceRange(inlineStart, previousPosition-inlineStart+1);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e401e92b3b75bccc801d842f1f7d1990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 208, "signatureBeforeChange": " \tpublic void testFieldDeclaration()", "signatureAfterChange": " \tpublic void testFieldDeclaration()", "diff": ["+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(FD\"+JD1S+T1S+W1S+W2S+\"FD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(FD\"+JD1S+T1S+W1S+W2S+\"FD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(FD\"+JD1S+MOD1S+MOD2S+T1S+W1S+W2S+\"FD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}], "num": 59005}