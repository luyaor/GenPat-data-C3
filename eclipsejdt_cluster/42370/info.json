{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75abda527da4f60ef2df341ec9923d58", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "195c70ad54796cf0c5f263bce52e57d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "commitAfterChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "methodNumberBeforeChange": 753, "methodNumberAfterChange": 753, "signatureBeforeChange": " public void test747()", "signatureAfterChange": " public void test747()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\"\tclass Y<U extends T & I> {\\r\\n\" + ", "+\t\t\"\t                      ^\\n\" + ", "+\t\t\"Cannot specify any additional bound X.I when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62268c309ce60a8065db2db55bb6c02f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "commitAfterChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "methodNumberBeforeChange": 858, "methodNumberAfterChange": 858, "signatureBeforeChange": " public void test852()", "signatureAfterChange": " public void test852()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");\t", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" + ", "+\t\t\"\t<T extends Runnable, U extends T & Runnable>  T foo() { return null; }\\r\\n\" + ", "+\t\t\"\t                                   ^^^^^^^^\\n\" + ", "+\t\t\"Cannot specify any additional bound Runnable when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0a3857459206568e4979cc1387850b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "commitAfterChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "methodNumberBeforeChange": 787, "methodNumberAfterChange": 787, "signatureBeforeChange": " public void test781()", "signatureAfterChange": " public void test781()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\"\tpublic static <E, T extends E & Comparable<? super T>> Foo<E> doIt(T t) {\\r\\n\" + ", "+\t\t\"\t                                ^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot specify any additional bound Comparable<? super T> when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\");"]}], "num": 42370}