{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3eef9b76136a6b1453a5055eedd1cfa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79696ad8b63737dda857635b3288b471", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e1a4dd76a1096e4a9ca316a8229a1b7d5fbaaa3a", "commitAfterChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void resolveClasspath(PerProjectInfo perProjectInfo) throws JavaModelException", "signatureAfterChange": " \tpublic void resolveClasspath(PerProjectInfo perProjectInfo, boolean usePreviousSession) throws JavaModelException", "diff": ["-\tpublic void resolveClasspath(PerProjectInfo perProjectInfo) throws JavaModelException {", "+\tpublic void resolveClasspath(PerProjectInfo perProjectInfo, boolean usePreviousSession) throws JavaModelException {", "+\t\tif (CP_RESOLUTION_BP_LISTENERS != null)", "+\t\t\tbreakpoint(1, this);", "+\t\tboolean isClasspathBeingResolved = manager.isClasspathBeingResolved(this);", "-\t\t\tmanager.setClasspathBeingResolved(this, true);", "-\t\t\tExternalFoldersManager externalFoldersManager = JavaModelManager.getExternalManager();", "+\t\t\tif (!isClasspathBeingResolved) {", "+\t\t\t\tmanager.setClasspathBeingResolved(this, true);", "+\t\t\t}", "+\t\t\tExternalFoldersManager externalFoldersManager = JavaModelManager.getExternalManager();", "+", "-\t\t\t\t\t\t\tresolvedEntry = JavaCore.getResolvedClasspathEntry(rawEntry);", "+\t\t\t\t\t\t\tresolvedEntry = manager.getResolvedClasspathEntry(rawEntry, usePreviousSession);", "-\t\t\t\t\t\tIClasspathContainer container = JavaCore.getClasspathContainer(rawEntry.getPath(), this);", "+\t\t\t\t\t\tIClasspathContainer container = usePreviousSession ? manager.getPreviousSessionContainer(rawEntry.getPath(), this) : JavaCore.getClasspathContainer(rawEntry.getPath(), this);", "+\t\t\tif (CP_RESOLUTION_BP_LISTENERS != null)", "+\t\t\t\tbreakpoint(2, this);", "+", "-\t\t\tperProjectInfo.setResolvedClasspath(resolvedClasspath, rawReverseMap, rootPathToResolvedEntries, unresolvedEntryStatus, timeStamp);", "+\t\t\tperProjectInfo.setResolvedClasspath(resolvedClasspath, rawReverseMap, rootPathToResolvedEntries, usePreviousSession ? PerProjectInfo.NEED_RESOLUTION : unresolvedEntryStatus, timeStamp);", "-\t\t\tmanager.setClasspathBeingResolved(this, false);", "+\t\t\tif (!isClasspathBeingResolved) {", "+\t\t\t\tmanager.setClasspathBeingResolved(this, false);", "+\t\t\t}", "+\t\t\tif (CP_RESOLUTION_BP_LISTENERS != null)", "+\t\t\t\tbreakpoint(3, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d577e9b240cf19c1928c5591843ec83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5046f0da42323773845d7a3edf39df0b8c6a1944", "commitAfterChange": "80f69cca108e407e297e62382ba04bd29eb1703d", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void resolveClasspath(PerProjectInfo perProjectInfo, boolean usePreviousSession, boolean addClasspathChange) throws JavaModelException", "signatureAfterChange": " \tpublic void resolveClasspath(PerProjectInfo perProjectInfo, boolean usePreviousSession, boolean addClasspathChange) throws JavaModelException", "diff": ["-\t\t\tIClasspathEntry[] rawClasspath;", "+\t\t\tIClasspathEntry[][] classpath = new IClasspathEntry[2][];", "-\t\t\t\trawClasspath= perProjectInfo.rawClasspath;", "-\t\t\t\tif (rawClasspath == null)", "-\t\t\t\t\trawClasspath = perProjectInfo.readAndCacheClasspath(this);", "+\t\t\t\tclasspath[0] = perProjectInfo.rawClasspath;", "+\t\t\t\tclasspath[1] = perProjectInfo.referencedEntries;", "+\t\t\t\t// Checking null only for rawClasspath enough", "+\t\t\t\tif (classpath[0] == null)", "+\t\t\t\t\tclasspath = perProjectInfo.readAndCacheClasspath(this);", "-\t\t\t", "-\t\t\tResolvedClasspath result = resolveClasspath(rawClasspath, usePreviousSession, true/*resolve chained libraries*/);", "+\t\t\tResolvedClasspath result = resolveClasspath(classpath[0], classpath[1], usePreviousSession, true/*resolve chained libraries*/);", "+\t\t\t", "-\t\t\tperProjectInfo.setResolvedClasspath(result.resolvedClasspath, result.rawReverseMap, result.rootPathToResolvedEntries, usePreviousSession ? PerProjectInfo.NEED_RESOLUTION : result.unresolvedEntryStatus, timeStamp, addClasspathChange);", "+\t\t\tperProjectInfo.setResolvedClasspath(result.resolvedClasspath, result.referencedEntries, result.rawReverseMap, result.rootPathToResolvedEntries, usePreviousSession ? PerProjectInfo.NEED_RESOLUTION : result.unresolvedEntryStatus, timeStamp, addClasspathChange);"]}], "num": 8097}