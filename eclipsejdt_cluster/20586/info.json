{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ebdcc46a75c2ae1e96ac448ab3992bc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ffe82b4ca3f56d6f274cefe1b75390", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void testBug208541() throws JavaModelException", "signatureAfterChange": " public void testBug208541() throws JavaModelException", "diff": ["-\t\t\"        if (new String().length() != 0 &&\\n\" +", "-\t\t\"                (i < j && j < k)) {\\n\" +", "+\t\t\"        if (new String().length() != 0 \\n\" +", "+\t\t\"              &&  (i < j && j < k)) {\\n\" +", "-\t\t\"\t\tif (new String().length() != 0 &&\\n\" +", "-\t\t\"\t\t\t\t(i < j && j < k)) {\\n\" +", "+\t\t\"\t\tif (new String().length() != 0\\n\" +", "+\t\t\"\t\t\t\t&& (i < j && j < k)) {\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888980bacd6ddc9badebe4d26f71ebf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void testBug208541() throws JavaModelException", "signatureAfterChange": " public void testBug208541() throws JavaModelException", "diff": ["-\t\t\"        if (new String().length() != 0 &&\\n\" +", "-\t\t\"                (i < j && j < k)) {\\n\" +", "+\t\t\"        if (new String().length() != 0 \\n\" +", "+\t\t\"              &&  (i < j && j < k)) {\\n\" +", "-\t\t\"\t\tif (new String().length() != 0 &&\\n\" +", "-\t\t\"\t\t\t\t(i < j && j < k)) {\\n\" +", "+\t\t\"\t\tif (new String().length() != 0\\n\" +", "+\t\t\"\t\t\t\t&& (i < j && j < k)) {\\n\" +"]}], "num": 20586}