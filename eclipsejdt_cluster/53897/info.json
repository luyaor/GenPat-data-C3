{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a736370aa23e140b4ae66684c00f2479", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca84e5454c6f2bfe4d0cdc899d9804da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/PreferencesTests.java", "commitBeforeChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "commitAfterChange": "bc498b88d907a470b6f3dd533c50f2d8844848a6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testAutomaticOptions() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testAutomaticOptions() throws Exception", "diff": ["-\t\tassertEquals(bindir, \"/org.eclipse.jdt.apt.tests.PreferencesTestsProject/bin\");", "+\t\tassertNotNull(bindir);", "+\t\tassertTrue(bindir.length() > 0);", "-\t\tString gensrcdirSet = AptConfig.getString(jproj, AptPreferenceConstants.APT_GENSRCDIR);", "-\t\tassertEquals(gensrcdirAuto, gensrcdirSet);", "+\t\tassertNotNull(gensrcdirAuto);", "+\t\tassertTrue(gensrcdirAuto.length() > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f857bd66325895bbc8d17ef75769bec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void testBug51226() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug51226() throws JavaModelException", "diff": ["-\t\t\tassertEquals(this.prefix+\"Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$", "-\t\t\tassertEquals(this.prefix+\"Wrong number of comments\", 1, unit.getCommentTable().length);", "-\t\t\tComment comment = unit.getCommentTable()[0];", "-\t\t\tassertTrue(this.prefix+\"Comment should be a Javadoc one\", comment.isDocComment());", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of comments\", 1, unit.getCommentList().size());", "+\t\t\tComment comment = (Comment) unit.getCommentList().get(0);", "+\t\t\tassumeTrue(this.prefix+\"Comment should be a Javadoc one\", comment.isDocComment());", "-\t\t\tassertEquals(this.prefix+\"Wrong number of tags\", 1, docComment.tags().size());", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of tags\", 1, docComment.tags().size());", "-\t\t\tassertNull(this.prefix+\"Wrong type of tag [\"+tagElement+\"]\", tagElement.getTagName());", "-\t\t\tassertEquals(this.prefix+\"Wrong number of fragments in tag [\"+tagElement+\"]\", 1, tagElement.fragments().size());", "+\t\t\tassumeNull(this.prefix+\"Wrong type of tag [\"+tagElement+\"]\", tagElement.getTagName());", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of fragments in tag [\"+tagElement+\"]\", 1, tagElement.fragments().size());", "-\t\t\tassertEquals(this.prefix+\"Invalid type for fragment [\"+fragment+\"]\", ASTNode.TEXT_ELEMENT, fragment.getNodeType());", "+\t\t\tassumeEquals(this.prefix+\"Invalid type for fragment [\"+fragment+\"]\", ASTNode.TEXT_ELEMENT, fragment.getNodeType());", "-\t\t\tassertEquals(this.prefix+\"Invalid content for text element \", \"Test\", textElement.getText());", "+\t\t\tassumeEquals(this.prefix+\"Invalid content for text element \", \"Test\", textElement.getText());"]}], "num": 53897}