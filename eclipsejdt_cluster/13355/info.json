{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b45dce2a44e11e36c037a458e5bc6df9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062fe47e9608d9688677696e8c087e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b2b2f79127ceb81a70f0a7e9c4a14a4c97a6bb69", "commitAfterChange": "68d139bf0c56c6c993907701c5e076e9d3ee773d", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\tif (currentArg.equals(\"-1.5\")) { //$NON-NLS-1$", "+\t\t\tif (currentArg.equals(\"-1.5\") || currentArg.equals(\"-5\") || currentArg.equals(\"-5.0\")) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\")) { //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\")) { //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73412f35dcc1d39f1f5a256e8d9022a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "3e1ac9332051468842a1e12f17167ff5224d13b2", "commitAfterChange": "9b20617e51225c8d5ac488c75961e3c5635f1fde", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "signatureAfterChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "diff": ["-\t\t\t} else if (castType.isClass()) {", "+\t\t\t} else if (castType.isClass() || castType.isEnum()) {", "-\t\tif (expressionType.isClass()) {", "+\t\tif (expressionType.isClass() || expressionType.isEnum()) {", "-\t\t\t} else if (castType.isClass()) { // ----- (castType.isClass) expressionType.isClass ------", "+\t\t\t} else if (castType.isClass() || castType.isEnum()) { // ----- (castType.isClass) expressionType.isClass ------", "-\t\t} else if (castType.isClass()) { // ----- (castType.isClass) expressionType.isInterface --------", "+\t\t} else if (castType.isClass() || castType.isEnum()) { // ----- (castType.isClass) expressionType.isInterface --------"]}], "num": 13355}