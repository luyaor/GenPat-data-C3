{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "579a73d5e6842fb8684dc7add0dcbcb0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34b866cfd80f4e714b3764aae8a964ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "afc1e4846bc636d931af46ddbcc6782cb35abd8f", "commitAfterChange": "f8d97f1a239e4ff69936732a2692bfc6828713da", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate Map getDefaultCompilerOptions()", "signatureAfterChange": "  \tprivate Map getDefaultCompilerOptions()", "diff": ["-\t\t\t", "-\t", "-\t\t\tObject sourceOption = this.options.get(CompilerOptions.OPTION_Source);", "-\t\t\tif (sourceOption != null) {", "-\t\t\t\toptionsMap.put(CompilerOptions.OPTION_Source, sourceOption);", "-\t\t\t} else {", "-\t\t\t\toptionsMap.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "-\t\t\t}", "-\t", "-\t\t\t", "+\t\tObject sourceOption = this.options.get(CompilerOptions.OPTION_Source);", "+\t\tif (sourceOption != null) {", "+\t\t\tthis.defaultCompilerOptions.put(CompilerOptions.OPTION_Source, sourceOption);", "+\t\t} else {", "+\t\t\tthis.defaultCompilerOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f5156072822c4faae8b80d7392c583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e1d20020dbd43260d01432663cbec1b70ba0c4a6", "commitAfterChange": "3e32cedb68e257de58ed115543445fc7d20d99a3", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t} else {", "-\t\tif (compliance.equals(CompilerOptions.VERSION_1_3)) {", "-\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "-\t\t} else if (compliance.equals(CompilerOptions.VERSION_1_4)", "-\t\t\t\t|| compliance.equals(CompilerOptions.VERSION_1_5)", "-\t\t\t\t|| compliance.equals(CompilerOptions.VERSION_1_6)) {", "-\t\t\tif (sourceVersion.equals(CompilerOptions.VERSION_1_3)) {", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t} else {", "-\t\t\t\t// for JDK >= 1.4, target == source", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, sourceVersion);", "-\t\t\t}", "-\t\t}"]}], "num": 36020}