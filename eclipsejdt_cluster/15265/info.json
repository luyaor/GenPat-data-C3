{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "987667279c0da49bccf97c8e92093235", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0660818f36d8a989198aa8535177abcd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "5774c79cdcadb593aea63027083e0fa31184f7a1", "commitAfterChange": "f309a7e1cecc33456fc6d6dfb274995339599c86", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tITypeBinding resolveType(Type type)", "signatureAfterChange": "\r \tITypeBinding resolveType(Type type)", "diff": ["+\t\t\t\tif (typeReference.binding == null) {\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t\t}\r", "+\t\t\t\tif (singleNameReference.binding == null) {\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t\t}\r", "+\t\t\t\t\tif (qualifiedNameReference.binding == null) {\r", "+\t\t\t\t\t\treturn null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tif (arrayBinding == null) {\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc53410b11ba1680bacadc13d304ae4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "a251ec08b0e50e1d36dec00c215d08f4c0a74008", "commitAfterChange": "0b0ac0f29d15040df869099953d90d518e5a8ee8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tprivate void format()", "signatureAfterChange": "\r \tprivate void format()", "diff": ["-\t\t\t\t\t\t\tif (source[i] == '\\n') {\r", "-\t\t\t\t\t\t\t\tnewLinesInWhitespace++;\r", "+\t\t\t\t\t\t\tif (source[i] == '\\r') {\r", "+\t\t\t\t\t\t\t\tif (i < max - 1) {\r", "+\t\t\t\t\t\t\t\t\tif (source[++i] == '\\n') {\r", "+\t\t\t\t\t\t\t\t\t\tnewLinesInWhitespace++;\r", "+\t\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\t\tnewLinesInWhitespace++;\r", "+\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\tnewLinesInWhitespace++;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t} else if (source[i] == '\\n') {\r", "+\t\t\t\t\t\t\t\t\tnewLinesInWhitespace++;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5045abe31c83219851234b7f55587295", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeSignatureTest.java", "commitBeforeChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "commitAfterChange": "c0452100f2ed18d65cf0dd0efb6f9fc0ffa98156", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void test002()", "signatureAfterChange": " \t \tpublic void test002()", "diff": ["-\t\tassertNotNull(thisEntry);", "+\t\tif (thisEntry == null) {", "+\t\t\tassertNotNull(thisEntry);", "+\t\t\treturn;", "+\t\t}", "-\t\tassertNotNull(tEntry);", "+\t\tif (tEntry == null) {", "+\t\t\tassertNotNull(tEntry);", "+\t\t\treturn;", "+\t\t}", "-\t\tassertNotNull(thisEntry);", "+\t\tif (thisEntry == null) {", "+\t\t\tassertNotNull(thisEntry);", "+\t\t\treturn;", "+\t\t}", "-\t\tassertNotNull(tEntry);", "+\t\tif (tEntry == null) {", "+\t\t\tassertNotNull(tEntry);", "+\t\t\treturn;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15fdf9f6da78aa33ecca1fd34f9334a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "commitAfterChange": "aaa066e01ab34ac4b1e524fd85da7d4cc6ffdf4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["+\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47072a3bd9d582de6682a1b704a2e09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "commitAfterChange": "aaa066e01ab34ac4b1e524fd85da7d4cc6ffdf4e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["+\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution"]}], "num": 15265}