{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17449b70f2c86779e390f3cc8ceb1854", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32702b7073f62603411e70997c51e1e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "033b8a638ec057cd464f5964d22a3d23734c8a87", "commitAfterChange": "b53c28e0f23a1d6ae0dfae6485f23db8cf939ea1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected int resolveLevelAsSubtype(char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes)", "signatureAfterChange": " protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes)", "diff": ["-protected int resolveLevelAsSubtype(char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes) {", "+protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes) {", "-\tint level = resolveLevelForType(qualifiedPattern, type);", "+\tint level = resolveLevelForType(simplePattern, qualifiedPattern, type);", "-\t\tlevel = resolveLevelAsSubtype(qualifiedPattern, type.superclass(), argumentTypes);", "+\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, type.superclass(), argumentTypes);", "-\t\tlevel = resolveLevelAsSubtype(qualifiedPattern, interfaces[i], null);", "+\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, interfaces[i], null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d72383ad43811ae3bbd736ca20eae75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " TypeBinding getTypeFromVariantTypeSignature( \tSignatureWrapper wrapper, \tTypeVariableBinding[] staticVariables, \tReferenceBinding enclosingType, \tReferenceBinding genericType, \tint rank)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames)", "diff": ["+", "-\tSignatureWrapper wrapper,", "-\tTypeVariableBinding[] staticVariables,", "-\tReferenceBinding enclosingType,", "-\tReferenceBinding genericType,", "-\tint rank) {", "+\t\tSignatureWrapper wrapper,", "+\t\tTypeVariableBinding[] staticVariables,", "+\t\tReferenceBinding enclosingType,", "+\t\tReferenceBinding genericType,", "+\t\tint rank,", "+\t\tchar[][][] missingTypeNames) {", "-\t\t\tTypeBinding bound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType);", "+\t\t\tTypeBinding bound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames);", "-\t\t\tbound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType);", "+\t\t\tbound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames);", "-\t\t\treturn getTypeFromTypeSignature(wrapper, staticVariables, enclosingType);", "+\t\t\treturn getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9830eacfee62d05366b8da7725bb25d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType)", "signatureAfterChange": "  TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames)", "diff": ["-TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType) {", "+", "+TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames) {", "-", "-\tTypeBinding type = getTypeFromSignature(wrapper.signature, wrapper.start, wrapper.computeEnd(), isParameterized = (wrapper.end == wrapper.bracket), enclosingType);", "+\tTypeBinding type = getTypeFromSignature(wrapper.signature, wrapper.start, wrapper.computeEnd(), isParameterized = (wrapper.end == wrapper.bracket), enclosingType, missingTypeNames);", "-\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, genericType);", "+\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, genericType, missingTypeNames);", "-\t\t\ttypeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, memberType);", "+\t\t\ttypeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, memberType, missingTypeNames);"]}], "num": 7283}