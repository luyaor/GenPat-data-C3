{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f73fd70dce9e1f47f2d37fd99ac4d017", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c0bc0b1014fb7ac355e6c370ba7cc9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.expressionType = type.resolveType(scope);", "+\t\tthis.resolvedType = type.resolveType(scope);", "-\t\t\t\treturn this.expressionType;", "+\t\t\t\treturn this.resolvedType;", "-\t\tif (this.expressionType == null)", "+\t\tif (this.resolvedType == null)", "-\t\tif (!this.expressionType.canBeInstantiated()) {", "-\t\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "-\t\t\treturn this.expressionType;", "+\t\tif (!this.resolvedType.canBeInstantiated()) {", "+\t\t\tscope.problemReporter().cannotInstantiate(type, this.resolvedType);", "+\t\t\treturn this.resolvedType;", "-\t\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "+\t\tReferenceBinding allocatedType = (ReferenceBinding) this.resolvedType;", "-\t\t\treturn this.expressionType;", "+\t\t\treturn this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6374bfb8b5d4ebd3eaef29ed6947e59f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "67766e5b27ea79987add5b8cee1657ec3cbfbedb", "commitAfterChange": "e6c002b5fc187b459093049d56b25a0df58b8d61", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t} else if (((ReferenceBinding) receiverType).isFinal() && this.anonymousType != null) {", "-\t\t\tif (!receiverType.isEnum()) {", "-\t\t\t\tscope.problemReporter().anonymousClassCannotExtendFinalClass(type, receiverType);", "+\t\t} else if (((ReferenceBinding) receiverType).isFinal()) {", "+\t\t\tif (this.anonymousType != null) {", "+\t\t\t\tif (!receiverType.isEnum()) {", "+\t\t\t\t\tscope.problemReporter().anonymousClassCannotExtendFinalClass(type, receiverType);", "+\t\t\t\t\thasError = true;", "+\t\t\t\t}", "+\t\t\t} else if (!receiverType.canBeInstantiated()) {", "+\t\t\t\tscope.problemReporter().cannotInstantiate(type, receiverType);", "+\t\t\t\treturn this.resolvedType = receiverType;", "-\t\t\thasError = true;", "-\t\t\tReferenceBinding allocationType = (ReferenceBinding) receiverType;", "+\t\t\tReferenceBinding allocationType = (ReferenceBinding) receiverType;"]}], "num": 29066}