{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d946b50854ece26eade1b8fb00b7c1d1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e63e680b5f623b6d8af796bdd74a6cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7daed772befc71241cd5718015cdd1d8faa642ca", "commitAfterChange": "bf0f3c0ee6c28cc3716705a3315c5622fc576ce2", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tprivate void locateMatches(JavaProject javaProject, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "diff": ["-\tprivate void locateMatches(JavaProject javaProject, IProgressMonitor progressMonitor) throws JavaModelException {", "+\tprivate void locateMatches(JavaProject javaProject) throws JavaModelException {", "-\t\tboolean compilationAborted = false;", "+\t\tthis.compilationAborted = false;", "-\t\t\t// binding creation", "-\t\t\tfor (int i = 0, length = openables.length; i < length; i++) { ", "-\t\t\t\topenables[i].buildTypeBindings();", "-\t\t\t\tif (progressMonitor != null) {", "-\t\t\t\t\tif (progressMonitor.isCanceled()) {", "-\t\t\t\t\t\tthrow new OperationCanceledException();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tprogressMonitor.worked(6);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t", "-\t\t\t// binding resolution", "-\t\t\ttry {", "-\t\t\t\tthis.lookupEnvironment.completeTypeBindings();", "-\t\t\t} catch (AbortCompilation e) {", "-\t\t\t\t// problem with class path: it could not find base classes", "-\t\t\t\t// continue reporting innacurate matches (since bindings will be null)", "-\t\t\t\tcompilationAborted = true;", "-\t\t\t}", "+\t\t\tthis.createAndResolveBindings(openables);", "-\t\t\t\t\tthis.currentMatchingOpenable.shouldResolve = !compilationAborted;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912115b76e08e60f5edc3de39b0751cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tprivate Set<IContainer> getNewPackageFolders(String pkgName, IFolder parent )", "signatureAfterChange": " \tprivate Set<IFolder> computeNewPackageFolders(String pkgName, IFolder parent)", "diff": ["+\t */", "+\tprivate Set<IFolder> computeNewPackageFolders(String pkgName, IFolder parent)", "+\t{", "+\t\tSet<IFolder> newFolders = new HashSet<IFolder>();", "+\t\tString[] folders = _PACKAGE_DELIMITER.split(pkgName);", "+\t\tfor (String folderName : folders) {", "+\t\t\tfinal IFolder folder = parent.getFolder(folderName);", "+\t\t\tif (!folder.exists()) {", "+\t\t\t\tnewFolders.add(folder);", "+\t\t\t}", "+\t\t\tparent = folder;", "+\t\t}", "+\t\treturn newFolders;", "+\t}", "-\t", "-\tprivate Set<IContainer> getNewPackageFolders(String pkgName, IFolder parent )", "-\t{", "-\t\tStringBuilder buffer = new StringBuilder();", "-\t\tSet<IContainer> newFolders = new HashSet<IContainer>();", "-\t    for( int i=0, len=pkgName.length(); i<len; i++ ){", "-\t    \tfinal char c = pkgName.charAt(i);", "-\t    \tif( c != '.')", "-\t    \t\tbuffer.append(c);", "-\t    \t// create a folder when we see a dot or when we are at the end.", "-\t    \tif( c == '.' || i == len - 1){", "-\t    \t\tif( buffer.length() > 0 ){", "-\t    \t\t\tfinal IFolder folder = parent.getFolder(buffer.toString());", "-\t    \t\t\tif( !folder.exists()){", "-\t    \t\t\t\tnewFolders.add(folder);", "-\t    \t\t\t}", "-\t    \t\t\tparent = folder;", "-\t    \t\t\t// reset the buffer", "-\t    \t\t\tbuffer.setLength(0);", "-\t    \t\t}", "-\t    \t}", "-\t    }", "-\t    return newFolders;", "-\t}"]}], "num": 42560}