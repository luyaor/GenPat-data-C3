{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d16cfca8537388e77248acd6ee87e2d0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7bd45c71de148a765a19b806214d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 250, "signatureBeforeChange": " \tpublic void testTypeDeclaration()", "signatureAfterChange": " \tpublic void testTypeDeclaration()", "diff": ["-\t\tx1.setSuperclass(N2);", "-\t\tx1.superInterfaces().add(N3);", "-\t\tx1.superInterfaces().add(ast.newSimpleName(\"J\")); //$NON-NLS-1$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tx1.setSuperclass(N2);", "+\t\t\tx1.superInterfaces().add(N3);", "+\t\t\tx1.superInterfaces().add(N4);", "+\t\t} else {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t\tx1.typeParameters().add(TP1);", "+\t\t\tx1.setSuperclassType(PT1);", "+\t\t\tx1.superInterfaceTypes().add(T1);", "+\t\t\tx1.superInterfaceTypes().add(T2); //$NON-NLS-1$", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(TD\"+JD1S+N1S+N2S+N3S+\"[(nSJJnS)]\"+FD1S+FD2S+\"TD)]\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(TD\"+JD1S+N1S+N2S+N3S+N4S+FD1S+FD2S+\"TD)]\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(TD\"+JD1S+MOD1S+MOD2S+N1S+TP1S+PT1S+T1S+T2S+FD1S+FD2S+\"TD)]\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eb718fe1e08f7a11b458d92e85fdcde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 220, "signatureBeforeChange": "  \tpublic void testMethodDeclaration()", "signatureAfterChange": "  \tpublic void testMethodDeclaration()", "diff": ["-\t\tx1.setReturnType(T1);", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tx1.setReturnType(T1);", "+\t\t} else {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t\tx1.typeParameters().add(TP1);", "+\t\t\tx1.setReturnType2(T1);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(MD\"+JD1S+T1S+N1S+V1S+V2S+N2S+N3S+B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(MD\"+JD1S+T1S+N1S+V1S+V2S+N2S+N3S+B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(MD\"+JD1S+MOD1S+MOD2S+TP1S+T1S+N1S+V1S+V2S+N2S+N3S+B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}], "num": 44868}