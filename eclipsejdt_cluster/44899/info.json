{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc39e1207163c24811162512d0670e09", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20016dd8a85a2520b5bd8f42e2e3a214", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["-\tint extendedDimension = this.intStack[this.intPtr--];", "+\tint extendedDimensions = this.intStack[this.intPtr--];", "-\tAnnotation [][] annotationsOnExtendedDimensions = extendedDimension == 0 ? null : getAnnotationsOnDimensions(extendedDimension);", "+\tAnnotation [][] annotationsOnExtendedDimensions = extendedDimensions == 0 ? null : getAnnotationsOnDimensions(extendedDimensions);", "-\tint typeDim = 0;", "-\t\t\ttype = getTypeReference(typeDim = this.intStack[this.intPtr--]); // type dimension", "+\t\t\ttype = getTypeReference(this.intStack[this.intPtr--]); // type dimension", "-\t\t\ttype = getTypeReference(typeDim = this.intStack[this.intPtr--]); // type dimension", "+\t\t\ttype = getTypeReference(this.intStack[this.intPtr--]); // type dimension", "-\t\ttypeDim = type.dimensions();", "-\tif (extendedDimension == 0) {", "-\t\tdeclaration.type = type;", "-\t\tdeclaration.bits |= (type.bits & ASTNode.HasTypeAnnotations);", "-\t} else {", "-\t\tint dimension = typeDim + extendedDimension;", "-\t\tAnnotation [][] annotationsOnAllDimensions = null;", "-\t\tAnnotation[][] annotationsOnDimensions = type.getAnnotationsOnDimensions();", "-\t\tif (annotationsOnDimensions != null || annotationsOnExtendedDimensions != null) {", "-\t\t\tannotationsOnAllDimensions = getMergedAnnotationsOnDimensions(typeDim, annotationsOnDimensions, extendedDimension, annotationsOnExtendedDimensions); ", "-//\t\t\tdeclaration.bits |= (type.bits & ASTNode.HasTypeAnnotations);", "-\t\t}", "-\t\tdeclaration.type = copyDims(type, dimension, annotationsOnAllDimensions);", "-\t}", "+\tdeclaration.type = extendedDimensions == 0 ? type : augmentTypeWithAdditionalDimensions(type, extendedDimensions, annotationsOnExtendedDimensions, false);", "+\tdeclaration.bits |= (type.bits & ASTNode.HasTypeAnnotations);", "+\t", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edfa5270e0512556abfbb39c32192627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["-\tint typeDim = 0;", "-\t\t\ttype = getTypeReference(typeDim = this.intStack[this.intPtr--]); // type dimension", "+\t\t\ttype = getTypeReference(this.intStack[this.intPtr--]); // type dimension", "-\t\t\ttype = getTypeReference(typeDim = this.intStack[this.intPtr--]); // type dimension", "+\t\t\ttype = getTypeReference(this.intStack[this.intPtr--]); // type dimension", "-\t\ttypeDim = type.dimensions();", "-\tif (extendedTypeDimension == 0) {", "-\t\tdeclaration.type = type;", "-\t} else {", "-\t\tint dimension = typeDim + extendedTypeDimension;", "-\t\tAnnotation [][] annotationsOnAllDimensions = null;", "-\t\tAnnotation[][] annotationsOnDimensions = type.getAnnotationsOnDimensions();", "-\t\tif (annotationsOnDimensions != null || annotationsOnExtendedDimensions != null) {", "-\t\t\tannotationsOnAllDimensions = getMergedAnnotationsOnDimensions(typeDim, annotationsOnDimensions, extendedTypeDimension, annotationsOnExtendedDimensions); ", "-\t\t}", "-\t\tdeclaration.type = copyDims(type, dimension, annotationsOnAllDimensions);", "-\t}", "+\tdeclaration.type = extendedTypeDimension != 0 ? augmentTypeWithAdditionalDimensions(type, extendedTypeDimension, annotationsOnExtendedDimensions, false) : type;", "+\tdeclaration.bits |= (type.bits & ASTNode.HasTypeAnnotations);", "+\t"]}], "num": 44899}