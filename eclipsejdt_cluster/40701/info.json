{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b20c2a5e7a873df5d6cbcfa3c348ef2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626041d0f3f70d9fc4f7f9325907659c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e67c77fc5e097eac99c8909bb016eff7011eb0ce", "commitAfterChange": "5d677f26e6a9dfca4bbd2cd8a965c43c4f46ed94", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void add(String relativePath, String containerPath, boolean withSubFolders, AccessRuleSet access)", "signatureAfterChange": " private void add(String relativePath, String containerPath, boolean isPackage, AccessRuleSet access)", "diff": ["-private void add(String relativePath, String containerPath, boolean withSubFolders, AccessRuleSet access) {", "-\tint index = (containerPath.hashCode() & 0x7FFFFFFF) % this.paths.length;", "-\tString currentPath, currentContainerPath;", "-\twhile ((currentPath = this.paths[index]) != null && (currentContainerPath = this.containerPaths[index]) != null) {", "-\t\tif (currentPath.equals(relativePath) && currentContainerPath.equals(containerPath))", "+private void add(String relativePath, String containerPath, boolean isPackage, AccessRuleSet access) {", "+\t// normalize containerPath and relativePath", "+\tcontainerPath = normalize(containerPath);", "+\trelativePath = normalize(relativePath);", "+", "+\tint index = (containerPath.hashCode() & 0x7FFFFFFF) % this.containerPaths.length;", "+\tString currentRelativePath, currentContainerPath;", "+\twhile ((currentRelativePath = this.relativePaths[index]) != null && (currentContainerPath = this.containerPaths[index]) != null) {", "+\t\tif (currentRelativePath.equals(relativePath) && currentContainerPath.equals(containerPath))", "-\t\tindex = (index + 1) % this.paths.length;", "+\t\tindex = (index + 1) % this.relativePaths.length;", "-\tthis.paths[index] = relativePath;", "+\tthis.relativePaths[index] = relativePath;", "-\tthis.pathWithSubFolders[index] = withSubFolders;", "+\tthis.isPkgPath[index] = isPackage;", "-\t\tthis.pathRestrictions = new AccessRuleSet[this.paths.length];", "+\t\tthis.pathRestrictions = new AccessRuleSet[this.relativePaths.length];", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e4411f6968edfaa40c2376e5fb5756", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "7548eaaea6e1259875e63eaf19dcd9a6bb7fd118", "commitAfterChange": "3d5aa7d7eabaf3445aad76f168f1c9da2ba34591", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void add(String path, boolean withSubFolders, AccessRuleSet access)", "signatureAfterChange": " private void add(String path, String containerPath, boolean withSubFolders, AccessRuleSet access)", "diff": ["-private void add(String path, boolean withSubFolders, AccessRuleSet access) {", "-\tif (this.paths.length == this.pathsCount) {", "-\t\tSystem.arraycopy(", "-\t\t\tthis.paths,", "-\t\t\t0,", "-\t\t\tthis.paths = new String[this.pathsCount * 2],", "-\t\t\t0,", "-\t\t\tthis.pathsCount);", "-\t\tSystem.arraycopy(", "-\t\t\tthis.pathWithSubFolders,", "-\t\t\t0,", "-\t\t\tthis.pathWithSubFolders = new boolean[this.pathsCount * 2],", "-\t\t\t0,", "-\t\t\tthis.pathsCount);", "-\t\tif (this.pathRestrictions != null)", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tthis.pathRestrictions,", "-\t\t\t\t0,", "-\t\t\t\tthis.pathRestrictions = new AccessRuleSet[this.pathsCount * 2],", "-\t\t\t\t0,", "-\t\t\t\tthis.pathsCount);", "-\t\telse if (access != null)", "-\t\t\tthis.pathRestrictions = new AccessRuleSet[this.pathsCount * 2];", "+private void add(String path, String containerPath, boolean withSubFolders, AccessRuleSet access) {", "+\tint index = (containerPath.hashCode() & 0x7FFFFFFF) % this.paths.length;", "+\tString currentPath, currentContainerPath;", "+\twhile ((currentPath = this.paths[index]) != null && (currentContainerPath = this.containerPaths[index]) != null) {", "+\t\tif (currentPath.equals(path) && currentContainerPath.equals(containerPath))", "+\t\t\treturn;", "+\t\tindex = (index + 1) % this.paths.length;", "-\tthis.paths[this.pathsCount] = path;", "-\tthis.pathWithSubFolders[this.pathsCount] = withSubFolders; ", "+\tthis.paths[index] = path;", "+\tthis.containerPaths[index] = containerPath;", "+\tthis.pathWithSubFolders[index] = withSubFolders;", "-\t\tthis.pathRestrictions[this.pathsCount] = access;", "-\tthis.pathsCount++;", "+\t\tthis.pathRestrictions[index] = access;", "+\telse if (access != null) {", "+\t\tthis.pathRestrictions = new AccessRuleSet[this.paths.length];", "+\t\tthis.pathRestrictions[index] = access;", "+\t}", "+", "+\t// assumes the threshold is never equal to the size of the table", "+\tif (++this.pathsCount > this.threshold)", "+\t\trehash();", "+\t\t"]}], "num": 40701}