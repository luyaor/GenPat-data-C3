{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "917a50dbdef43bc3c860ecc7414a9dc3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244e7f43ae1b075988911051b76cdad9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "9a8c0b7f51c1a0b9d37b7d38acb4d0261e31390a", "commitAfterChange": "278bd24e5aaae65022c9b0e7c10b22e5ffa034b6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, IRegion[] regions)", "diff": ["-\tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length) {", "+\tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, IRegion[] regions) {", "-\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, offset, length);", "+\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, regions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bb3c23acf9dc7cf091a631f0db8482c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "d82ae848a9c4d7b35f614d484418e3b413534446", "commitAfterChange": "c4725a925ff03cde3fc0735f1b7bd65f4e96815b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, IRegion[] regions)", "signatureAfterChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, IRegion[] regions, boolean includeComments)", "diff": ["-\tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, IRegion[] regions) {", "+\tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, IRegion[] regions, boolean includeComments) {", "-\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, regions);", "+\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, regions, includeComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbcade20c45e78fb5c62b8d99cfda9cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "605463bb98397b59c78b7fc56ee33e7e22fd8367", "commitAfterChange": "7428bd3b18a16b1860e6a1a28fbc6cd63967fdc6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic TextEdit format(int kind, String source, int offset, int length, int indentationLevel, String lineSeparator)", "signatureAfterChange": " \tpublic TextEdit format(int kind, String source, int offset, int length, int indentationLevel, String lineSeparator)", "diff": ["-\t\t\t\t} else if (FORCE_NEW_JAVADOC_FORMAT) {", "+\t\t\t\t} else if (FORCE_NEW_COMMENT_FORMAT) {", "+\t\t\t\tif (FORCE_NEW_COMMENT_FORMAT) {", "+\t\t\t\t\t// Skip the javadoc formatting using this constant", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "-\t\t\t\treturn formatComment(kind, source, indentationLevel, lineSeparator, new IRegion[] {new Region(offset, length)});", "+\t\t\t\treturn formatComment(kind, source, indentationLevel, lineSeparator, new IRegion[] {new Region(offset, length)}, false);"]}], "num": 67907}