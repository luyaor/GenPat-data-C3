{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7128c47625c9522d941cfd5966c9612", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44be200681f54ff47e7c2ddb6f34d941", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "signatureAfterChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "diff": ["-\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] internalAnnotations = this.binding.getAnnotations();", "-\t\t// the variable is not an enum constant nor a field nor an argument.", "-\t\tint length = internalAnnotations == null ? 0 : internalAnnotations.length;", "-\t\tIAnnotationBinding[] domInstances =", "-\t\t\tlength == 0 ? AnnotationBinding.NoAnnotations : new AnnotationBinding[length];", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\tfinal IAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(internalAnnotations[i]);", "-\t\t\tif (annotationInstance == null) {// not resolving binding", "-\t\t\t\treturn AnnotationBinding.NoAnnotations;", "-\t\t\t}", "-\t\t\tdomInstances[i] = annotationInstance;", "+\t\tif (this.annotations != null) {", "+\t\t\treturn this.annotations;", "-\t\treturn domInstances;", "+\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] internalAnnotations = this.binding.getAnnotations();", "+\t\tint length = internalAnnotations == null ? 0 : internalAnnotations.length;", "+\t\tif (length != 0) {", "+\t\t\tIAnnotationBinding[] tempAnnotations = new IAnnotationBinding[length];", "+\t\t\tint convertedAnnotationCount = 0;", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding internalAnnotation = internalAnnotations[i];", "+\t\t\t\tfinal IAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(internalAnnotation);", "+\t\t\t\tif (annotationInstance == null) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\ttempAnnotations[convertedAnnotationCount++] = annotationInstance;", "+\t\t\t}", "+\t\t\tif (convertedAnnotationCount != length) {", "+\t\t\t\tif (convertedAnnotationCount == 0) {", "+\t\t\t\t\treturn this.annotations = AnnotationBinding.NoAnnotations;", "+\t\t\t\t}", "+\t\t\t\tSystem.arraycopy(tempAnnotations, 0, (tempAnnotations = new IAnnotationBinding[convertedAnnotationCount]), 0, convertedAnnotationCount);", "+\t\t\t}", "+\t\t\treturn this.annotations = tempAnnotations;", "+\t\t}", "+\t\treturn this.annotations = AnnotationBinding.NoAnnotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4094d30b96aafbcfa09f59669736eb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "signatureAfterChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "diff": ["-\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] annots = this.binding.getAnnotations();", "-\t\tint length = annots == null ? 0 : annots.length;", "-\t\tif (length == 0) {", "-\t\t\treturn this.annotations = AnnotationBinding.NoAnnotations;", "-\t\t}", "-\t\tIAnnotationBinding[] domInstances = new AnnotationBinding[length];", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\tfinal IAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(annots[i]);", "-\t\t\tif (annotationInstance == null) {", "-\t\t\t\treturn this.annotations = AnnotationBinding.NoAnnotations;", "+\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] internalAnnotations = this.binding.getAnnotations();", "+\t\tint length = internalAnnotations == null ? 0 : internalAnnotations.length;", "+\t\tif (length != 0) {", "+\t\t\tIAnnotationBinding[] tempAnnotations = new IAnnotationBinding[length];", "+\t\t\tint convertedAnnotationCount = 0;", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding internalAnnotation = internalAnnotations[i];", "+\t\t\t\tfinal IAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(internalAnnotation);", "+\t\t\t\tif (annotationInstance == null) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\ttempAnnotations[convertedAnnotationCount++] = annotationInstance;", "-\t\t\tdomInstances[i] = annotationInstance;", "+\t\t\tif (convertedAnnotationCount != length) {", "+\t\t\t\tif (convertedAnnotationCount == 0) {", "+\t\t\t\t\treturn this.annotations = AnnotationBinding.NoAnnotations;", "+\t\t\t\t}", "+\t\t\t\tSystem.arraycopy(tempAnnotations, 0, (tempAnnotations = new IAnnotationBinding[convertedAnnotationCount]), 0, convertedAnnotationCount);", "+\t\t\t}", "+\t\t\treturn this.annotations = tempAnnotations;", "-\t\treturn this.annotations = domInstances;", "+\t\treturn this.annotations = AnnotationBinding.NoAnnotations;"]}], "num": 51623}