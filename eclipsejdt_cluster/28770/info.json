{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9dcb92a808214745cb0cf1dbf7f98535", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4538e8714e1115718f96e91230561017", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceField.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected boolean equalsDOMNode(IDOMNode node)", "signatureAfterChange": " public ASTNode findNode(org.eclipse.jdt.core.dom.CompilationUnit ast)", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected boolean equalsDOMNode(IDOMNode node) {", "-\treturn (node.getNodeType() == IDOMNode.FIELD) && super.equalsDOMNode(node);", "+public ASTNode findNode(org.eclipse.jdt.core.dom.CompilationUnit ast) {", "+\t// For field declarations, a variable declaration fragment is returned", "+\t// Return the FieldDeclaration instead", "+\tASTNode node = super.findNode(ast);", "+\tif (node == null) return null;", "+\treturn node.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4e715b0d5c1bb84ec822e83dedd13f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/helloworld/HelloWorldAnnotationProcessor.java", "commitBeforeChange": "f2e69392c2b77f78381f44504717309f40a69302", "commitAfterChange": "cfc6d63918bb7d5d29292fed4468743597d36bdc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String getTypeName()", "signatureAfterChange": "  \tprivate String getTypeName(Declaration annotatedDecl)", "diff": ["-\tpublic String getPackageName() { return \"generatedfilepackage\"; } //$NON-NLS-1$", "-\tpublic String getTypeName() { return \"GeneratedFileTest\"; } //$NON-NLS-1$", "+\tprivate String getTypeName(Declaration annotatedDecl) { ", "+\t\tHelloWorldAnnotation tganno = annotatedDecl.getAnnotation(HelloWorldAnnotation.class);", "+\t\treturn tganno.value();", "+\t}"]}], "num": 28770}