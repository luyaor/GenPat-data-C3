{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d318ecf0a1f49b5b842c23968b766873", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "055bf1b5c145260381d5837b1f221bbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05cbb2667572938fba7ec316c194b86a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b4bb36587b96f03600f24ca7834b5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8d137fb553f6fb2067a681931d3820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2802709631b46520947bf1b0bd8af96e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f950249bd0e9b682331e2450710449f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d78957b2fdd826ade49364ebf476544", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70e4b8fe44782651bc5e0cb77a6197e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayQualifiedTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7567472d0c426128c51fd85fb8c34018", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayQualifiedTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a72861100f4ffe0956bbba71b39a5f77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8931df0b94e20614b34732f0c633da6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad6c5ffc1767eef27ecf287dbc2e17a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayTypeReference.java", "commitBeforeChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "commitAfterChange": "29b2c218438398769d94ba99ef040852b0acf110", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\t\tint annotationsLength = this.annotations.length;", "-\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t\tint annotationsLevels = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLevels; i++) {", "+\t\t\t\t\tint annotationsLength = this.annotations[i] == null ? 0 : this.annotations[i].length;", "+\t\t\t\t\tfor (int j = 0; j < annotationsLength; j++)", "+\t\t\t\t\t\tthis.annotations[i][j].traverse(visitor, scope);", "+\t\t\t\t}"]}], "num": 45136}