{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94e51b156b9ed0742fbdf257d667aac3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311e93e410c7ad4db67a58b558a099a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "19198639bc25484a459cb1c53c953f761d4a6a3d", "commitAfterChange": "f495bb04967a33ceb30ace84eb082a0e7e182ce6", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 216, "signatureBeforeChange": " public void test0206() throws JavaModelException", "signatureAfterChange": " public void test0206() throws JavaModelException", "diff": ["-\t    if(CompletionEngine.PROPOSE_MEMBER_TYPES) {", "-\t\t    assertResults(", "-\t\t            \"ZZType.ZZAnnotation[TYPE_REF]{p.ZZType.ZZAnnotation, p, Lp.ZZType$ZZAnnotation;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_ANNOTATION + R_NON_RESTRICTED) + \"}\",", "-\t\t            result.proposals);", "-\t    } else {", "-\t    \tassertResults(", "-\t\t            \"ZZType[TYPE_REF]{p.ZZType, p, Lp.ZZType;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t            result.proposals);", "-\t    }", "+\t    assertResults(", "+\t            \"ZZType.ZZAnnotation[TYPE_REF]{p.ZZType.ZZAnnotation, p, Lp.ZZType$ZZAnnotation;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_ANNOTATION + R_NON_RESTRICTED) + \"}\",", "+\t            result.proposals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578fda7ca3fbf0a8855b8d939a1f66df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "19198639bc25484a459cb1c53c953f761d4a6a3d", "commitAfterChange": "f495bb04967a33ceb30ace84eb082a0e7e182ce6", "methodNumberBeforeChange": 645, "methodNumberAfterChange": 645, "signatureBeforeChange": " public void testCompletionAllMemberTypes6() throws JavaModelException", "signatureAfterChange": " public void testCompletionAllMemberTypes6() throws JavaModelException", "diff": ["-\t    if(CompletionEngine.PROPOSE_MEMBER_TYPES) {", "-\t    \tassertResults(", "-\t\t            \"AType.Member1[TYPE_REF]{test.AType.Member1, test, Ltest.AType$Member1;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t            requestor.getResults());", "-\t    } else {", "-\t    \tassertResults(", "-\t\t            \"\",", "-\t\t            requestor.getResults());", "-\t    }", "+    \tassertResults(", "+\t            \"AType.Member1[TYPE_REF]{test.AType.Member1, test, Ltest.AType$Member1;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t            requestor.getResults());"]}], "num": 6567}