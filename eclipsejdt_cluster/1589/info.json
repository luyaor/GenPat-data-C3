{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ab19cb5a10cd2b5bb9ec281b9dabbe3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "340e6b5cc08b4d82111cf4ed9d7b2844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic char[] computeUniqueKey()", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-\tpublic char[] computeUniqueKey() {", "+\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "-\t\t\t\tbuffer.append(methodBinding.computeUniqueKey());", "+\t\t\t\tbuffer.append(methodBinding.computeUniqueKey(false/*without access flags*/));", "-\t\t\t\tbuffer.append(typeBinding.computeUniqueKey());", "+\t\t\t\tbuffer.append(typeBinding.computeUniqueKey(false/*without access flags*/));", "+\t\t// flags", "+\t\tif (withAccessFlags) {", "+\t\t\tbuffer.append('^');", "+\t\t\tbuffer.append(this.modifiers & AccJustFlag);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602c75b6c898c78b9e522974ec29c3f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "commitAfterChange": "553b813a23ab25477516582ea0c9fc2d6eaf9fb4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": "     \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "+\tpublic char[] computeUniqueKey(boolean isLeaf) {", "-\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*without access flags*/);", "+\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*not a leaf*/);", "-\t\t     sig.append(this.type.signature()); // erasure", "+\t\t     sig.append(this.type.computeUniqueKey(false/*not a leaf*/));", "-\t\tif (withAccessFlags) {", "+\t\tif (isLeaf) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a79e07cb06eb98fb34f1facdb86999", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey()", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-\tpublic char[] computeUniqueKey() {", "+\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "-\t\t    char[] typeSig = enclosingType().computeUniqueKey();", "+\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*without access flags*/);", "-\t\t        sig.append(this.arguments[i].computeUniqueKey());", "+\t\t        sig.append(this.arguments[i].computeUniqueKey(false/*without access flags*/));", "+\t\tif (withAccessFlags) {", "+\t\t\tsig.append('^');", "+\t\t\tsig.append(getAccessFlags());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2dd31f24d77ec40d58721803952d190", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "commitAfterChange": "553b813a23ab25477516582ea0c9fc2d6eaf9fb4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "+\tpublic char[] computeUniqueKey(boolean isLeaf) {", "-\t\tbuffer.append(this.sourceType.computeUniqueKey(false/*without access flags*/));", "+\t\tbuffer.append(this.sourceType.computeUniqueKey(false/*not a leaf*/));", "-\t\tbuffer.append(this.wildcard.computeUniqueKey(false/*without access flags*/));", "+\t\tbuffer.append(this.wildcard.computeUniqueKey(false/*not a leaf*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d18efa9f17363f1fdab6cadd355e5974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "commitAfterChange": "553b813a23ab25477516582ea0c9fc2d6eaf9fb4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "+\tpublic char[] computeUniqueKey(boolean isLeaf) {", "-\t\t\t\tbuffer.append(methodBinding.computeUniqueKey(false/*without access flags*/));", "+\t\t\t\tbuffer.append(methodBinding.computeUniqueKey(false/*not a leaf*/));", "-\t\t\t\tbuffer.append(typeBinding.computeUniqueKey(false/*without access flags*/));", "+\t\t\t\tbuffer.append(typeBinding.computeUniqueKey(false/*not a leaf*/));", "-\t\tif (withAccessFlags) {", "+\t\tif (isLeaf) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed63451d3c1914a096c37307fe564029", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     \t \tpublic char[] computeUniqueKey()", "signatureAfterChange": "     \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-\tpublic char[] computeUniqueKey() {", "+\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "-\t\t    char[] typeSig = enclosingType().computeUniqueKey();", "+\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*without access flags*/);", "+\t\tif (withAccessFlags) {", "+\t\t\tsig.append('^');", "+\t\t\tsig.append(getAccessFlags());", "+\t\t}"]}], "num": 1589}