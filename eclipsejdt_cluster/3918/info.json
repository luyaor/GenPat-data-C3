{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44b2a7c745a70a50093b5ad2b0689fea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad33cf0deab23aaf5377c15264fe7a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void testTypeReferenceBug80918() throws CoreException", "signatureAfterChange": " \tpublic void testBug81084c() throws CoreException, JavaModelException", "diff": ["+\tpublic void testBug81084c() throws CoreException, JavaModelException {", "+\t\tsearch(\"fList1\", FIELD, REFERENCES, getJavaSearchScopeBugs(), this.resultCollector);", "+\t\tsearch(\"fList2\", FIELD, REFERENCES, getJavaSearchScopeBugs(), this.resultCollector);", "-\t */", "-\tpublic void testTypeReferenceBug80918() throws CoreException {", "-\t\tIType type = getClassFile(\"JavaSearchBugs\", getExternalJCLPathString(\"1.5\"), \"java.lang\", \"Exception.class\").getType();", "-\t\tsearch(type, REFERENCES, SearchPattern.R_CASE_SENSITIVE|SearchPattern.R_ERASURE_MATCH, getJavaSearchScopeBugs(\"b79803\", false), this.resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"\", // do not expect to find anything, just verify that no CCE happens", "+\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList1] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList2] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92e1de3d78a37b5e7df51ae47ce2bbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testBug81084c() throws CoreException, JavaModelException", "signatureAfterChange": " \tpublic void testBug81084string() throws CoreException, JavaModelException", "diff": ["-\t}", "-\tpublic void testBug81084c() throws CoreException, JavaModelException {", "-\t\tsearch(\"fList1\", FIELD, REFERENCES, getJavaSearchScopeBugs(), this.resultCollector);", "-\t\tsearch(\"fList2\", FIELD, REFERENCES, getJavaSearchScopeBugs(), this.resultCollector);", "-\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList2] EXACT_MATCH\",", "-\t\t\tthis.resultCollector);", "+\t}", "+\tpublic void testBug81084string() throws CoreException, JavaModelException {", "+\t\tassertNotNull(\"Problem in tests processing\", workingCopies);", "+\t\tassertEquals(\"Problem in tests processing\", 1, workingCopies.length);", "+\t\tsearch(\"fList1\", FIELD, REFERENCES);", "+\t\tsearch(\"fList2\", FIELD, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList1] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList2] EXACT_MATCH\"", "+\t\t);", "+\t}"]}], "num": 3918}