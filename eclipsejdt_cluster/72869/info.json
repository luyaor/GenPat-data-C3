{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7650ee2e55919f1c789680e464632a3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0777198377528f9038e5ce8f1dfb88ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Statement getThenStatement()", "signatureAfterChange": "  \tpublic Statement getThenStatement()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.thenStatement = new Block(this.ast);", "-\t\t\tpostLazyInit(this.thenStatement, THEN_STATEMENT_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.thenStatement == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.thenStatement = new Block(this.ast);", "+\t\t\t\t\tpostLazyInit(this.thenStatement, THEN_STATEMENT_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1746ccd42e235d3cc2b59ca2e86cac0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic Type getReturnType()", "signatureAfterChange": " \tpublic Type getReturnType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.returnType = this.ast.newPrimitiveType(PrimitiveType.VOID);", "-\t\t\tpostLazyInit(this.returnType, RETURN_TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.returnType == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.returnType = this.ast.newPrimitiveType(PrimitiveType.VOID);", "+\t\t\t\t\tpostLazyInit(this.returnType, RETURN_TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2872d76a00b2e0b49946d1acd376f6da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Expression getLeftHandSide()", "signatureAfterChange": "  \tpublic Expression getLeftHandSide()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.leftHandSide= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.leftHandSide, LEFT_HAND_SIDE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.leftHandSide == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.leftHandSide= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.leftHandSide, LEFT_HAND_SIDE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b87a5aeddf1ce305b02245d684b5d29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CatchClause.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration getException()", "signatureAfterChange": "  \tpublic SingleVariableDeclaration getException()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.exceptionDecl = new SingleVariableDeclaration(this.ast);", "-\t\t\tpostLazyInit(this.exceptionDecl, EXCEPTION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.exceptionDecl == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.exceptionDecl = new SingleVariableDeclaration(this.ast);", "+\t\t\t\t\tpostLazyInit(this.exceptionDecl, EXCEPTION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd8ad72e6384562b71195d9c77ee1ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeParameter.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.typeVariableName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.typeVariableName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.typeVariableName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.typeVariableName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.typeVariableName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c1b9fb302f1abf13390b1b9ee2f2e8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.packageName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.packageName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.packageName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.packageName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.packageName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30476f37a21e007788b9e42a4d60df72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getComponentType()", "signatureAfterChange": "  \tpublic Type getComponentType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.componentType = new SimpleType(this.ast);", "-\t\t\tpostLazyInit(this.componentType, COMPONENT_TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.componentType == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.componentType = new SimpleType(this.ast);", "+\t\t\t\t\tpostLazyInit(this.componentType, COMPONENT_TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d47ff17b83a6314a1d23071dd8bb50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ImportDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.importName =this.ast.newQualifiedName(", "-\t\t\t\t\tnew SimpleName(this.ast), new SimpleName(this.ast));", "-\t\t\tpostLazyInit(this.importName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.importName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.importName =this.ast.newQualifiedName(", "+\t\t\t\t\t\t\tnew SimpleName(this.ast), new SimpleName(this.ast));", "+\t\t\t\t\tpostLazyInit(this.importName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343ac3feda12784d9468074e1984ba41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnumConstantDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.constantName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.constantName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.constantName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.constantName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.constantName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7e5e6647a0000efa366500da38705f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Expression getElseExpression()", "signatureAfterChange": "  \tpublic Expression getElseExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.elseExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.elseExpression, ELSE_EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.elseExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.elseExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.elseExpression, ELSE_EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64f9fbe39f94a7864ce15f71c3fcdcea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/LabeledStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SimpleName getLabel()", "signatureAfterChange": "  \tpublic SimpleName getLabel()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.labelName= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.labelName, LABEL_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.labelName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.labelName= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.labelName, LABEL_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7295330f23b2b8fb3ab6adc60c287187", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationTypeMemberDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.memberType = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.memberType, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.memberType == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.memberType = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.memberType, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c442e40fd1ab012413fdde0fc1bc38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.conditionExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.conditionExpression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.conditionExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.conditionExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.conditionExpression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9191184885ee74a9cffa32c98a90c0c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclarationStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic AbstractTypeDeclaration getDeclaration()", "signatureAfterChange": "  \tpublic AbstractTypeDeclaration getDeclaration()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.typeDecl = new TypeDeclaration(this.ast);", "-\t\t\tpostLazyInit(this.typeDecl, TYPE_DECLARATION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.typeDecl == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.typeDecl = new TypeDeclaration(this.ast);", "+\t\t\t\t\tpostLazyInit(this.typeDecl, TYPE_DECLARATION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e88a5846a12730221ab55669d92b605", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getIndex()", "signatureAfterChange": "  \tpublic Expression getIndex()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.indexExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.indexExpression, INDEX_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.indexExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.indexExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.indexExpression, INDEX_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe74c642c1f4ba4b8542f74950bd640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration getParameter()", "signatureAfterChange": "  \tpublic SingleVariableDeclaration getParameter()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.parameter = this.ast.newSingleVariableDeclaration();", "-\t\t\tpostLazyInit(this.parameter, PARAMETER_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.parameter == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.parameter = this.ast.newSingleVariableDeclaration();", "+\t\t\t\t\tpostLazyInit(this.parameter, PARAMETER_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d589f4c21cc95db75586f60883e948", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic Expression getRightHandSide()", "signatureAfterChange": "  \tpublic Expression getRightHandSide()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.rightHandSide= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.rightHandSide, RIGHT_HAND_SIDE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.rightHandSide == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.rightHandSide= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.rightHandSide, RIGHT_HAND_SIDE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca4907e76bebb68d2ae9be96358fa0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getArray()", "signatureAfterChange": "  \tpublic Expression getArray()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.arrayExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.arrayExpression, ARRAY_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.arrayExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.arrayExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.arrayExpression, ARRAY_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1fb7e472a7467d2f6dc7a9473774e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getThenExpression()", "signatureAfterChange": "  \tpublic Expression getThenExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.thenExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.thenExpression, THEN_EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.thenExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.thenExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.thenExpression, THEN_EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 72869}