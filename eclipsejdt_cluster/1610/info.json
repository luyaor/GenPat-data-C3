{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "910d42710cefc6e9d8bba928a92a0e83", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932d8ac48b9d92fe4bbaf7fdabe7bc41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "40839c8ae241bc3756eb5365b207dfbe748c6775", "commitAfterChange": "5b51a72819d5c60012d8b11dca35a367dee2c02a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate AstNode parseMethod( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "signatureAfterChange": "  \tprivate AstNode parseBlockStatements( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "diff": ["-\tprivate AstNode parseMethod(", "+\tprivate AstNode parseBlockStatements(", "-\t\t\t\t\treturn parseMethod(memberType, unit, position);", "+\t\t\t\t\treturn parseBlockStatements(memberType, unit, position);", "-\t\t\t\tif (!(fields[i] instanceof Initializer))", "+\t\t\t\tFieldDeclaration field = fields[i];", "+\t\t\t\tif (field.sourceStart > position)", "-\t\t\t\tInitializer initializer = (Initializer) fields[i];", "-\t\t\t\tif (initializer.sourceStart > position)", "-\t\t\t\t\tcontinue;", "-\t\t\t\tif (initializer.declarationSourceEnd >= position) {", "-\t\t\t\t\tgetParser().parseBlockStatements(initializer, type, unit);", "-\t\t\t\t\treturn initializer;", "+\t\t\t\tif (field.declarationSourceEnd >= position) {", "+\t\t\t\t\tif (field instanceof Initializer) {", "+\t\t\t\t\t\tgetParser().parseBlockStatements((Initializer)field, type, unit);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn field;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccc36d6557b3127e87b1a1251b80eeec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "420aa82752ec3e926a634ee4daaacddae8a8ab80", "commitAfterChange": "f68c3205ee145ec7c1c029e73701ee13aaf91bec", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "signatureAfterChange": " \tprotected IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "diff": ["-\t\tif (methodBinding != null && !methodBinding.isValidBinding()) {", "-\t\t\t/*", "-\t\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=23597\r\t\t\t */", "-\t\t\tswitch(methodBinding.problemId()) {", "-\t\t\t\tcase ProblemReasons.NotVisible : ", "-\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "-\t\t\t\t\tReferenceBinding declaringClass = methodBinding.declaringClass;", "-\t\t\t\t\tif (declaringClass != null) {", "-\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding exactBinding = declaringClass.getExactMethod(methodBinding.selector, methodBinding.parameters);", "-\t\t\t\t\t\tif (exactBinding != null) {", "-\t\t\t\t\t\t\tIMethodBinding binding = (IMethodBinding) this.compilerBindingsToASTBindings.get(methodBinding);", "-\t\t\t\t\t\t\tif (binding != null) {", "+\t\tif (methodBinding != null) {", "+\t\t\tif (methodBinding.isValidBinding()) {", "+\t\t\t\tIMethodBinding binding = (IMethodBinding) this.compilerBindingsToASTBindings.get(methodBinding);", "+\t\t\t\tif (binding != null) {", "+\t\t\t\t\treturn binding;", "+\t\t\t\t}", "+\t\t\t\tbinding = new MethodBinding(this, methodBinding);", "+\t\t\t\tthis.compilerBindingsToASTBindings.put(methodBinding, binding);", "+\t\t\t\treturn binding;", "+\t\t\t} else {", "+\t\t\t\t/*", "+\t\t\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=23597\r\t\t\t\t */", "+\t\t\t\tswitch(methodBinding.problemId()) {", "+\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\t\tReferenceBinding declaringClass = methodBinding.declaringClass;", "+\t\t\t\t\t\tif (declaringClass != null) {", "+\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding exactBinding = declaringClass.getExactMethod(methodBinding.selector, methodBinding.parameters);", "+\t\t\t\t\t\t\tif (exactBinding != null) {", "+\t\t\t\t\t\t\t\tIMethodBinding binding = (IMethodBinding) this.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\tif (binding != null) {", "+\t\t\t\t\t\t\t\t\treturn binding;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbinding = new MethodBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(exactBinding, binding);", "-\t\t\t\t\t\t\tbinding = new MethodBinding(this, exactBinding);", "-\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(methodBinding, binding);", "-\t\t\t\t\t\t\treturn binding;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\tif (methodBinding == null || !methodBinding.isValidBinding()) {", "-\t\t\treturn null;", "-\t\t}", "-\t\tIMethodBinding binding = (IMethodBinding) this.compilerBindingsToASTBindings.get(methodBinding);", "-\t\tif (binding != null) {", "-\t\t\treturn binding;", "-\t\t}", "-\t\tbinding = new MethodBinding(this, methodBinding);", "-\t\tthis.compilerBindingsToASTBindings.put(methodBinding, binding);", "-\t\treturn binding;", "+\t\treturn null;"]}], "num": 1610}