{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66cc8ae25d242d2ad51d39625f6c5b2b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382557743f4acd1fed8e9eecb1535a44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )     \tthrows IOException", "signatureAfterChange": "     protected IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )     \tthrows IOException", "diff": ["-    private IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )", "+    protected IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )", "-    \tGeneratedSourceFolderManager gsfm = _env.getAptProject().getGeneratedSourceFolderManager();", "+    \tGeneratedSourceFolderManager gsfm = getEnv().getAptProject().getGeneratedSourceFolderManager();", "-        IPath absolutePath = _env.getProject().getLocation().append(path);", "+        IPath absolutePath = getEnv().getProject().getLocation().append(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fd0722b0552d0dafc8420cafbb8524d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "6bea0f6636d15fbdebc7403f71192f16cc7a0c9c", "commitAfterChange": "779b290a6c79f0f2918d9fe1a3ca959140f48502", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t     private IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )     \tthrows IOException", "signatureAfterChange": "     private IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )     \tthrows IOException", "diff": ["+     */", "-    \t\tcatch ( Exception e )", "+    \t\tcatch ( JavaModelException e )", "-    \t\t\t// TODO - stop throwing this exception", "-    \telse if ( loc == Filer.Location.SOURCE_TREE )", "-    \t\tpath = gfm.getGeneratedSourceFolder().getRawLocation();", "+    \telse if ( loc == Filer.Location.SOURCE_TREE ) {", "+    \t\tpath = gfm.getGeneratedSourceFolder().getProjectRelativePath();", "+    \t}", "-        File parentFile = path.toFile().getParentFile();", "+        // Create the parent folder (need an absolute path temporarily)", "+        IPath absolutePath = _env.getProject().getLocation().append(path);", "+        File parentFile = absolutePath.toFile().getParentFile();"]}], "num": 25532}