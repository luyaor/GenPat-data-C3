{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9bddbf4abbd8e3b04f5e2df56b29e5f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a183fc402143b8b35b20a0d0d37c0a3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "commitAfterChange": "0b27e1fc307c28641d0d95f2d81ae5062cecb103", "methodNumberBeforeChange": 824, "methodNumberAfterChange": 824, "signatureBeforeChange": " public void test0803()", "signatureAfterChange": " public void test0803()", "diff": ["-// FIXME: javac8 doesn't find the error", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=101831", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\"\treturn true ? list : list;\\n\" + ", "-\t\t\"\t                     ^^^^\\n\" + ", "-\t\t\"Dead code\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\"\treturn true ? superList : superList;\\n\" + ", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from ArrayList<capture#3-of ? extends Object> to ArrayList<? super A>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. WARNING in X.java (at line 17)\\n\" + ", "-\t\t\"\treturn true ? extendsList : extendsList;\\n\" + ", "-\t\t\"\t                            ^^^^^^^^^^^\\n\" + ", "-\t\t\"Dead code\\n\" + ", "-\t\t\"----------\\n\");", "+\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\treturn true ? list : list;\\n\" + ", "+\t\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\t\"Dead code\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"\treturn true ? superList : superList;\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from ArrayList<capture#3-of ? extends Object> to ArrayList<? super A>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"\treturn true ? extendsList : extendsList;\\n\" + ", "+\t\t\t\"\t                            ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Dead code\\n\" + ", "+\t\t\t\"----------\\n\" : ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\treturn true ? list : list;\\n\" + ", "+\t\t\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\t\t\"Dead code\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\t\"\treturn true ? superList : superList;\\n\" + ", "+\t\t\t\t\"\t                          ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Dead code\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\t\"\treturn true ? extendsList : extendsList;\\n\" + ", "+\t\t\t\t\"\t                            ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Dead code\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2c5b5538ba953c0a6f866d77dc95751", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "commitAfterChange": "a6f21a01110fe95a43760ec08fc8cc1e27e1c4bc", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " public void test124()", "signatureAfterChange": " public void test124()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-\t\t\"\tboolean x = false ? \\\"\\\" : false;\\n\" +", "-\t\t\"\t            ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Object&Serializable&Comparable<?> to boolean\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tboolean x = false ? \\\"\\\" : false;\\n\" +", "-\t\t\"\t                         ^^^^^\\n\" +", "-\t\t\"The expression of type boolean is boxed into Boolean\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tSystem.out.print(\\\"[4:\\\"+ x + \\\",\\\" + x.getClass().getCanonicalName() + \\\"]\\\");\\n\" +", "-\t\t\"\t                                  ^^^^^^^^^^^^\\n\" +", "-\t\t\"Cannot invoke getClass() on the primitive type boolean\\n\" +", "-\t\t\"----------\\n\");", "+\t\tthis.complianceLevel >= ClassFileConstants.JDK1_8 ? ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tboolean x = false ? \\\"\\\" : false;\\n\" + ", "+\t\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from String to boolean\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tSystem.out.print(\\\"[4:\\\"+ x + \\\",\\\" + x.getClass().getCanonicalName() + \\\"]\\\");\\n\" + ", "+\t\t\t\t\"\t                                  ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Cannot invoke getClass() on the primitive type boolean\\n\" + ", "+\t\t\t\t\"----------\\n\" : ", "+\t\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\t\t\t\"\tboolean x = false ? \\\"\\\" : false;\\n\" +", "+\t\t\t\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\t\t\"Type mismatch: cannot convert from Object&Serializable&Comparable<?> to boolean\\n\" +", "+\t\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\t\"2. WARNING in X.java (at line 3)\\n\" +", "+\t\t\t\t\t\t\"\tboolean x = false ? \\\"\\\" : false;\\n\" +", "+\t\t\t\t\t\t\"\t                         ^^^^^\\n\" +", "+\t\t\t\t\t\t\"The expression of type boolean is boxed into Boolean\\n\" +", "+\t\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\t\"3. ERROR in X.java (at line 4)\\n\" +", "+\t\t\t\t\t\t\"\tSystem.out.print(\\\"[4:\\\"+ x + \\\",\\\" + x.getClass().getCanonicalName() + \\\"]\\\");\\n\" +", "+\t\t\t\t\t\t\"\t                                  ^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\t\t\"Cannot invoke getClass() on the primitive type boolean\\n\" +", "+\t\t\t\t\t\t\"----------\\n\");"]}], "num": 55953}