{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be157cf9586244a17ba942e83dfcbd0b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72154944e86d0d72cb4159827e0df470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void completeCodeAttributeForClinit( \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "signatureAfterChange": " \tpublic void completeCodeAttributeForClinit( \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "diff": ["-\t\tbyte[] localContents = contents = codeStream.bCodeStream;", "+\t\tthis.contents = codeStream.bCodeStream;", "-\t\tint contentsLength;", "-\t\tif (localContentsOffset + 20 >= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (localContentsOffset + 20 >= this.contents.length) {", "+\t\t\tresizePoolContents(20);", "-\t\tlocalContents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "-\t\tlocalContents[codeAttributeOffset + 7] = (byte) max_stack;", "+\t\tthis.contents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "+\t\tthis.contents[codeAttributeOffset + 7] = (byte) max_stack;", "-\t\tlocalContents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "-\t\tlocalContents[codeAttributeOffset + 9] = (byte) max_locals;", "-\t\tlocalContents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "-\t\tlocalContents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "-\t\tlocalContents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "-\t\tlocalContents[codeAttributeOffset + 13] = (byte) code_length;", "+\t\tthis.contents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "+\t\tthis.contents[codeAttributeOffset + 9] = (byte) max_locals;", "+\t\tthis.contents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "+\t\tthis.contents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "+\t\tthis.contents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "+\t\tthis.contents[codeAttributeOffset + 13] = (byte) code_length;", "-\t\tlocalContents[localContentsOffset++] = 0;", "-\t\tlocalContents[localContentsOffset++] = 0;", "+\t\tthis.contents[localContentsOffset++] = 0;", "+\t\tthis.contents[localContentsOffset++] = 0;", "-\t\t\tif (localContentsOffset + 20 >= (contentsLength = localContents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (localContentsOffset + 20 >= this.contents.length) {", "+\t\t\t\tresizePoolContents(20);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) lineNumberNameIndex;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 6;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 1;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) lineNumberNameIndex;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 6;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 1;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (problemLine >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) problemLine;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (problemLine >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) problemLine;", "-\t\t\tif (localContentsOffset + 8 >= (contentsLength = localContents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\tresizePoolContents(8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) localVariableNameIndex;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 2;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) localVariableNameIndex;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 2;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "-\t\tif (codeAttributeAttributeOffset + 2", "-\t\t\t>= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (codeAttributeAttributeOffset + 2 >= this.contents.length) {", "+\t\t\tresizePoolContents(2);", "-\t\tlocalContents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "-\t\tlocalContents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "+\t\tthis.contents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tthis.contents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "-\t\tlocalContents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "-\t\tlocalContents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "-\t\tlocalContents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "-\t\tlocalContents[codeAttributeOffset + 5] = (byte) codeAttributeLength;", "+\t\tthis.contents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "+\t\tthis.contents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "+\t\tthis.contents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "+\t\tthis.contents[codeAttributeOffset + 5] = (byte) codeAttributeLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f57fd0f99500b085bc10a78202c1ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void completeCodeAttributeForMissingAbstractProblemMethod( \t\tMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "signatureAfterChange": " \tpublic void completeCodeAttributeForMissingAbstractProblemMethod( \t\tMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "diff": ["-\t\tbyte[] localContents = contents = codeStream.bCodeStream;", "+\t\tthis.contents = codeStream.bCodeStream;", "-\t\tlocalContents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "-\t\tlocalContents[codeAttributeOffset + 7] = (byte) max_stack;", "+\t\tthis.contents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "+\t\tthis.contents[codeAttributeOffset + 7] = (byte) max_stack;", "-\t\tlocalContents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "-\t\tlocalContents[codeAttributeOffset + 9] = (byte) max_locals;", "+\t\tthis.contents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "+\t\tthis.contents[codeAttributeOffset + 9] = (byte) max_locals;", "-\t\tlocalContents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "-\t\tlocalContents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "-\t\tlocalContents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "-\t\tlocalContents[codeAttributeOffset + 13] = (byte) code_length;", "+\t\tthis.contents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "+\t\tthis.contents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "+\t\tthis.contents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "+\t\tthis.contents[codeAttributeOffset + 13] = (byte) code_length;", "-\t\tint contentsLength;", "-\t\tif (localContentsOffset + 50 >= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (localContentsOffset + 50 >= this.contents.length) {", "+\t\t\tresizePoolContents(50);", "-", "-\t\tlocalContents[localContentsOffset++] = 0;", "-\t\tlocalContents[localContentsOffset++] = 0;", "+\t\tthis.contents[localContentsOffset++] = 0;", "+\t\tthis.contents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) lineNumberNameIndex;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 6;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 1;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) lineNumberNameIndex;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 6;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 1;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (problemLine >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) problemLine;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (problemLine >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) problemLine;", "-\t\tif (codeAttributeAttributeOffset + 2", "-\t\t\t>= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (codeAttributeAttributeOffset + 2 >= this.contents.length) {", "+\t\t\tresizePoolContents(2);", "-\t\tlocalContents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "-\t\tlocalContents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "+\t\tthis.contents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tthis.contents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "-\t\tlocalContents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "-\t\tlocalContents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "-\t\tlocalContents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "-\t\tlocalContents[codeAttributeOffset + 5] = (byte) codeAttributeLength;", "+\t\tthis.contents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "+\t\tthis.contents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "+\t\tthis.contents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "+\t\tthis.contents[codeAttributeOffset + 5] = (byte) codeAttributeLength;"]}], "num": 8885}