{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eeeba5f5fd373eec55c5665de51af89c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ed9c5c560b6b8fc5b7c215fd04adbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "d6c2a90130be430285c5f6a000090d250c310afd", "commitAfterChange": "51e1f00f8d474f0b209b47afa85e44328a517f92", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\tVariableBinding local = this.nullVariables[i];", "+\t\t\tVariableBinding var = this.nullVariables[i];", "-\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "+\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(var)) {", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(var, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(var, expression);", "-\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "+\t\t\t\t\tif (flowInfo.isDefinitelyNull(var)) {", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(var, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(var, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(var, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(var, expression);", "-\t\t\t\t\t} else if (flowInfo.isPotentiallyNull(local)) {", "+\t\t\t\t\t} else if (flowInfo.isPotentiallyNull(var)) {", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, expression);", "-\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "-\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "+\t\t\t\t\tif (flowInfo.isDefinitelyNull(var)) {", "+\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, expression);", "-\t\t\t\t\tif (flowInfo.isPotentiallyNull(local)) {", "-\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "+\t\t\t\t\tif (flowInfo.isPotentiallyNull(var)) {", "+\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, expression);", "-\t\t\t\t\tint nullStatus = flowInfo.nullStatus(local);", "+\t\t\t\t\tint nullStatus = flowInfo.nullStatus(var);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c425b13b9ffa68a0adf405677631d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "448d62b2ff66cd7ed3c1bda65bd5259a6d0971b0", "commitAfterChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\tVariableBinding var = this.nullVariables[i];", "+\t\t\tVariableBinding local = this.nullVariables[i];", "-\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(var)) {", "+\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(var, location);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, location);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(var, location);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, location);", "-\t\t\t\t\tif (flowInfo.isDefinitelyNull(var)) {", "+\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(var, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(var, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(var, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(var, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, expression);", "-\t\t\t\t\t} else if (flowInfo.isPotentiallyNull(var)) {", "+\t\t\t\t\t} else if (flowInfo.isPotentiallyNull(local)) {", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "-\t\t\t\t\tif (flowInfo.isDefinitelyNull(var)) {", "-\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, location);", "+\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "+\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, location);", "-\t\t\t\t\tif (flowInfo.isPotentiallyNull(var)) {", "-\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, location);", "+\t\t\t\t\tif (flowInfo.isPotentiallyNull(local)) {", "+\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, location);", "-\t\t\t\t\tint nullStatus = flowInfo.nullStatus(var);", "+\t\t\t\t\tint nullStatus = flowInfo.nullStatus(local);"]}], "num": 72434}