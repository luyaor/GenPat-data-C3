{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d953829748f8ce7208fff78f0c4189f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3d9a65b8631fcc41672ed8b4dab638", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "25a0c02d6979e76d70832f78f8eb60bd371c0ad1", "commitAfterChange": "1b6413921860c74cfa469f859f6fc627d6400adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\tpublic /* @NonNull */ TypeBinding resolveType(BlockScope blockScope) {", "+\tpublic TypeBinding resolveType(BlockScope blockScope) {", "-\t\tthis.singleAbstractMethod = this.expectedType == null ? null : this.expectedType.getSingleAbstractMethod(blockScope);", "-\t\tif (this.singleAbstractMethod == null || !this.singleAbstractMethod.isValidBinding()) {", "+\t\tMethodBinding descriptor = this.expectedType == null ? null : this.expectedType.getSingleAbstractMethod(blockScope);", "+\t\tif (descriptor == null) {", "-\t\t\tchar [][] name = this.expectedType == null ? CharOperation.NO_CHAR_CHAR : CharOperation.splitOn('.', this.expectedType.shortReadableName());", "-\t\t\treturn this.functionalInterfaceType = new ProblemReferenceBinding(name, null, ProblemReasons.NotAFunctionalInterface);", "+\t\t\treturn null;", "-\t\treturn this.functionalInterfaceType = (ReferenceBinding) this.expectedType;", "+\t\tif (!descriptor.isValidBinding()) {", "+\t\t\tswitch (descriptor.problemId()) {", "+\t\t\t\tcase ProblemReasons.NotAFunctionalInterface:", "+\t\t\t\t\tblockScope.problemReporter().targetTypeIsNotAFunctionalInterface(this);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ProblemReasons.NotAWellFormedParameterizedType:", "+\t\t\t\t\tblockScope.problemReporter().illFormedParameterizationOfFunctionalInterface(this);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\treturn null;", "+\t\t}", "+\t\tthis.singleAbstractMethod = descriptor;", "+\t\treturn this.resolvedType = descriptor.declaringClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f07f4186b589c7cde274b13d4d187f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "ea916b0462fec6996e619f84c30f348e2877686a", "commitAfterChange": "558c64a899c0debc518d6eb92e85f37b05902eba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\tpublic TypeBinding resolveType(BlockScope blockScope) {", "+\tpublic /* @NonNull */ TypeBinding resolveType(BlockScope blockScope) {", "-\t\tMethodBinding singleAbstractMethod = this.expectedType == null ? null : this.expectedType.getSingleAbstractMethod();", "-\t\tif (singleAbstractMethod == null || !singleAbstractMethod.isValidBinding()) {", "+\t\tthis.singleAbstractMethod = this.expectedType == null ? null : this.expectedType.getSingleAbstractMethod();", "+\t\tif (this.singleAbstractMethod == null || !this.singleAbstractMethod.isValidBinding()) {", "-\t\t\treturn null;", "+\t\t\tchar [][] name = this.expectedType == null ? CharOperation.NO_CHAR_CHAR : CharOperation.splitOn('.', this.expectedType.shortReadableName());", "+\t\t\treturn this.functionalInterfaceType = new ProblemReferenceBinding(name, null, ProblemReasons.NotAFunctionalInterface);", "-\t\treturn this.expectedType;", "+\t\treturn this.functionalInterfaceType = (ReferenceBinding) this.expectedType;"]}], "num": 19957}