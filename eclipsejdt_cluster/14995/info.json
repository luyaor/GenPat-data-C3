{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df011e64c4ec74e386661da3119f8a14", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b61a258d74da112eac8b329ddf8eac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "fc25b1b826e7fad7f1da04ab9d452bc350b24919", "commitAfterChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\tif (this.expression.nullStatus(flowInfo) != FlowInfo.NON_NULL) {", "+\t\t\t// if we can't prove non-null check against declared null-ness of the enclosing method:", "+\t\t\tAbstractMethodDeclaration referenceMethod = currentScope.methodScope().referenceMethod();", "+\t\t\tif (referenceMethod != null) {", "+\t\t\t\tMethodBinding method = referenceMethod.binding;", "+\t\t\t\tif ((method.tagBits & TagBits.AnnotationNonNull) != 0) {", "+\t\t\t\t\tchar[][] annotationName = currentScope.environment().globalOptions.nonNullAnnotationName;", "+\t\t\t\t\tcurrentScope.problemReporter().possiblyNullFromNonNullMethod(this, this.expression.nullStatus(flowInfo), ", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t annotationName[annotationName.length-1]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959f706ec4c0b786309be949a77e3a82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "fc25b1b826e7fad7f1da04ab9d452bc350b24919", "commitAfterChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\t// compare actual null-status against parameter annotations of the called method:", "+\t\t\tint nullStatus = this.arguments[i].nullStatus(flowInfo);", "+\t\t\tif (nullStatus != FlowInfo.NON_NULL ", "+\t\t\t\t\t&& this.binding.parameterNonNullness != null", "+\t\t\t\t\t&& this.binding.parameterNonNullness[i].booleanValue()) // if @NonNull is required", "+\t\t\t{", "+\t\t\t\tchar[][] annotationName = currentScope.environment().globalOptions.nonNullAnnotationName;", "+\t\t\t\tcurrentScope.problemReporter().possiblyNullToNonNullParameter(this.arguments[i], nullStatus, annotationName[annotationName.length-1]);", "+\t\t\t}"]}], "num": 14995}