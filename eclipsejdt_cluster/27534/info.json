{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d610f07514fb885a087cb45aef62d648", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae619da500e44f15be87ae40b4c5087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void saveIndex(Index index) throws IOException", "signatureAfterChange": " public void saveIndex(Index index) throws IOException", "diff": ["-\tString indexName = index.getIndexFile().getPath();", "+\tString indexLocation = index.getIndexFile().getPath();", "-\t\tObject indexPath = indexNames.keyForValue(indexName);", "-\t\tif (indexPath != null) {", "+\t\tObject containerPath = this.indexLocations.keyForValue(indexLocation);", "+\t\tif (containerPath != null) {", "-\t\t\t\t\tif (((IndexRequest) job).containerPath.equals(indexPath)) return;", "+\t\t\t\t\tif (((IndexRequest) job).containerPath.equals(containerPath)) return;", "-\tupdateIndexState(indexName, SAVED_STATE);", "+\tupdateIndexState(indexLocation, SAVED_STATE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac9db87e431023b000bbbb16ecd4b26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void rebuildIndex(String indexName, IPath path)", "signatureAfterChange": " private void rebuildIndex(String indexLocation, IPath containerPath)", "diff": ["-private void rebuildIndex(String indexName, IPath path) {", "+private void rebuildIndex(String indexLocation, IPath containerPath) {", "-\tObject target = JavaModel.getTarget(workspace.getRoot(), path, true);", "+\tObject target = JavaModel.getTarget(workspace.getRoot(), containerPath, true);", "-\t\tUtil.verbose(\"-> request to rebuild index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tUtil.verbose(\"-> request to rebuild index: \"+indexLocation+\" path: \"+containerPath.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "-\tupdateIndexState(indexName, REBUILDING_STATE);", "+\tupdateIndexState(indexLocation, REBUILDING_STATE);", "-\t\trequest = new AddJarFileToIndex(path, this);", "+\t\trequest = new AddJarFileToIndex(containerPath, this);"]}], "num": 27534}