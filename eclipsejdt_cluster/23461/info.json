{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab19544d7cf26f80a28fd5101477311d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533771f768b6389fff05bb78891878c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "9dcd71cdce634956fd569b61b90ee2930f7dbd24", "commitAfterChange": "4bc132d24d4e8dfc7f8ce3f9ed5b0691926dd1b7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\tpublic void selectType(ISourceType sourceType, char[] typeName, boolean searchInEnvironment) {", "+\tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment) {", "-\t\t\t\t\t\tnew ISourceType[] { outerType },", "+\t\t\t\t\t\ttopLevelTypes,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b56684edbc498b49555ed4cb831e8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "42d39f5c82fbdb19ca1ad24289d26635cc65cd89", "commitAfterChange": "27919c7a1276ee2a29dd946d19519aaa850da3e2", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tfinal ASTVisitor visitor, \t\t\tJavacTestOptions javacTestOptions)", "signatureAfterChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] dependantFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tfinal ASTVisitor visitor, \t\t\tJavacTestOptions javacTestOptions)", "diff": ["+\t\t\tString[] dependantFiles,", "-\t\tINameEnvironment nameEnvironment = getNameEnvironment(new String[]{}, classLibraries);", "+\t\tINameEnvironment nameEnvironment = getNameEnvironment(dependantFiles, classLibraries);"]}], "num": 23461}