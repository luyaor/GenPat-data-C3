{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c25d4a265f4ddcd6745cf7fa6b4e2a3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a347f1bcf04afdaa1bf12fd0757154", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "fde095e0f0a4d97a0e65a7c6307c3d16195d07f7", "commitAfterChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void removeType(IType type)", "signatureAfterChange": " protected void removeType(IType type)", "diff": ["-\tIType superclass = (IType)this.classToSuperclass.remove(type);", "+\tIType superclass = this.classToSuperclass.remove(type);", "-\t\tTypeVector types = (TypeVector)this.typeToSubtypes.get(superclass);", "+\t\tTypeVector types = this.typeToSubtypes.get(superclass);", "-\tIType[] superinterfaces = (IType[])this.typeToSuperInterfaces.remove(type);", "+\tIType[] superinterfaces = this.typeToSuperInterfaces.remove(type);", "-\t\t\tTypeVector types = (TypeVector)this.typeToSubtypes.get(superinterface);", "+\t\t\tTypeVector types = this.typeToSubtypes.get(superinterface);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2676d6e65d7f175248d6ad5098500a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "393d81e7a2750eabcb8c375616d604c7414bb307", "commitAfterChange": "e92eaaa1784a8109263b46f06b6bf18ed41ac1b1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_Compliance)) <= ClassFileConstants.JDK1_3) {", "+\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) <= ClassFileConstants.JDK1_3) {", "-\t\tif (CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_Source)) >= ClassFileConstants.JDK1_4", "-\t\t\t\t&& CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_TargetPlatform)) < ClassFileConstants.JDK1_4", "+\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Source)) >= ClassFileConstants.JDK1_4", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_TargetPlatform)) < ClassFileConstants.JDK1_4", "-\t\tif (CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4", "-\t\t\t\t&& CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_TargetPlatform)) >= ClassFileConstants.JDK1_4", "+\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_TargetPlatform)) >= ClassFileConstants.JDK1_4"]}], "num": 4027}