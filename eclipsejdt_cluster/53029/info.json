{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8134d42c591f445c573e2ada98a1be23", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75005d2711bccb5c4d00a2b9b47f12c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testAbstractMethod() throws JavaModelException", "signatureAfterChange": "  \tpublic void testAbstractMethod() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(collaboratorPath, new Problem(\"Collaborator\", \"Class must implement the inherited abstract method Indicted.foo()\", collaboratorPath)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(collaboratorPath, new Problem(\"Collaborator\", \"The type Collaborator must implement the inherited abstract method Indicted.foo()\", collaboratorPath)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80ed5e94be04e7740f0cb5b8e1869110", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ErrorsTests.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void testErrors() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testErrors() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(collaboratorPath, new Problem(\"Collaborator\", \"Class must implement the inherited abstract method Indicted.foo()\", collaboratorPath)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(collaboratorPath, new Problem(\"Collaborator\", \"The type Collaborator must implement the inherited abstract method Indicted.foo()\", collaboratorPath)); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 53029}