{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62cfa16d977fe4229518a36748005921", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12916af06016fd86ad7b6e7e384e5152", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "a31fc41a761266e1336ef1dbd295debe293f4d81", "commitAfterChange": "4cad3f68ebca407bf91db6d03bc970a0ea223e63", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "signatureAfterChange": "\t \t \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t, Scope scope)", "diff": ["-\tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t) {", "-\t\tif (super.sIsMoreSpecific(s, t))", "+\t", "+\tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t, Scope scope) {", "+\t\tif (super.sIsMoreSpecific(s, t, scope))", "-\t\t\t\tthis.valueIfTrue.sIsMoreSpecific(s, t) && this.valueIfFalse.sIsMoreSpecific(s, t):", "+\t\t\t\tthis.valueIfTrue.sIsMoreSpecific(s, t, scope) && this.valueIfFalse.sIsMoreSpecific(s, t, scope):"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7128eba11a4cb886182027ad09f07a98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "commitAfterChange": "3dca78ae937ad139f018c4ddaaa87c3fe26600ed", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic boolean tIsMoreSpecific(TypeBinding t, TypeBinding s)", "signatureAfterChange": " \t \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "diff": ["-\tpublic boolean tIsMoreSpecific(TypeBinding t, TypeBinding s) {", "+\tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t) {", "-\t\t\t\tthis.valueIfTrue.tIsMoreSpecific(t, s) && this.valueIfFalse.tIsMoreSpecific(t, s):", "-\t\t\t\tsuper.tIsMoreSpecific(t, s);", "+\t\t\t\tthis.valueIfTrue.sIsMoreSpecific(s, t) && this.valueIfFalse.sIsMoreSpecific(s, t):", "+\t\t\t\tsuper.sIsMoreSpecific(s, t);"]}], "num": 69868}