{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e51d9b0e317795422eb35864901cb69", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "587cea6a238ee0ed3eee2c585ab4a372", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void buildTypeVariables()", "signatureAfterChange": "  \tprivate void buildTypeVariables()", "diff": ["-", "-\t    // do not construct type variables if source < 1.5", "-\t\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, If they exist at all, process type parameters irrespective of source level.", "+\t\tif (typeParameters == null || typeParameters.length == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eb58a2c6345c21e4347d8749a340db5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "signatureAfterChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "diff": ["-    // do not construct type variables if source < 1.5", "-\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, If they exist at all, process type parameters irrespective of source level.", "+    if (typeParameters == null || typeParameters.length == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fc1eaf90a2492efca8d5112aff38a97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "701b9f3a2a6ad66de33a42c0675cad82bdb44626", "commitAfterChange": "ed32ce010cb6b771c8064ab8d69b715c1bc9347a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "signatureAfterChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "diff": ["-\t\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) return true;", "+\t\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=305259 - We used to not bother with connecting", "+\t\t   type variables if source level is < 1.5. This creates problems in the reconciler if a 1.4", "+\t\t   project references the generified API of a 1.5 project. The \"current\" project's source", "+\t\t   level cannot decide this question for some other project. Now, if we see type parameters", "+\t\t   at all, we assume that the concerned java element has some legitimate business with them.", "+\t\t */", "+\t\tif (typeParameters == null || typeParameters.length == 0) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35786e615bd6804a288744c8aaf12a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic TypeVariableBinding[] createTypeVariables(TypeParameter[] typeParameters, Binding declaringElement)", "signatureAfterChange": "  \tpublic TypeVariableBinding[] createTypeVariables(TypeParameter[] typeParameters, Binding declaringElement)", "diff": ["-\t\t// do not construct type variables if source < 1.5", "-\t\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5)", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, If they exist at all, process type parameters irrespective of source level.", "+\t\tif (typeParameters == null || typeParameters.length == 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1300393171ed06eda3ec62f110cbdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void buildTypeVariables()", "signatureAfterChange": "  \tprivate void buildTypeVariables()", "diff": ["-", "-\t    // do not construct type variables if source < 1.5", "-\t\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, If they exist at all, process type parameters irrespective of source level.", "+\t\tif (typeParameters == null || typeParameters.length == 0) {"]}], "num": 68149}