{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d524b945694fe85b004d7dffba414bdf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29857f03ca12c5cce2871d31ca6d258c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionWithMissingTypesTests_1_5.java", "commitBeforeChange": "649631b834e755f12bf40b9c916ce9dfc765a8d0", "commitAfterChange": "19a679a95bc1c8afc10cb50ce5a617f6914888ae", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0002() throws JavaModelException", "signatureAfterChange": " public void test0002() throws JavaModelException", "diff": ["+\t\t\t\"   MissingType[TYPE_REF]{missing.MissingType, missing, Lmissing.MissingType;, null, null, [\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\\n\" +", "-\t\t\t\"   MissingType<T>[TYPE_REF]{missing.MissingType, missing, Lmissing.MissingType<TT;>;, null, null, [\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\\n\" +", "-\t\t\t\"   MissingType2[TYPE_REF]{missing.MissingType2, missing, Lmissing.MissingType2;, null, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\\n\" +", "-\t\t\t\"   MissingType<T>[TYPE_REF]{missing.MissingType, missing, Lmissing.MissingType<TT;>;, null, null, [\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\",", "+\t\t\t\"   MissingType[TYPE_REF]{missing.MissingType, missing, Lmissing.MissingType;, null, null, [\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\\n\" +", "+\t\t\t\"   MissingType2[TYPE_REF]{missing.MissingType2, missing, Lmissing.MissingType2;, null, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1e6309aafce223c935960e52de0389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "9f3ab0840d24edcaf3911840a93823998e7f8eff", "commitAfterChange": "2923ed68c1f82d0e305a158b4c5d393b708481eb", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["+        \"      intfRedundant      + find redundant superinterfaces\\n\" + ", "-        \"      redundantSuperinterface                + find redundant superinterfaces\\n\" +", "-        \"      syncOverride     overriding a synchronized method without synchronizing it\\n\" +", "-        \"      synthetic-access     same as syntheticAccess\\n\" +", "+        \"      syncOverride         missing synchronized in synchr. method override\\n\" +", "-        \"      unqualified-field-access same as unqualifiedField\\n\" +"]}], "num": 43446}