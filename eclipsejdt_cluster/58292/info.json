{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61b36c04d61715a279bfb351d8c799c9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533a3f1ff455501dbf36d419960ae6dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected StringBuffer print(StringBuffer output)", "signatureAfterChange": " \tprotected StringBuffer print(StringBuffer output)", "diff": ["-\t\t\t\toutput.append(\"exact match, \"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"exact match,\"); //$NON-NLS-1$", "-\t\t\t\toutput.append(\"prefix match, \"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"prefix match,\"); //$NON-NLS-1$", "-\t\t\t\toutput.append(\"pattern match, \"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"pattern match,\"); //$NON-NLS-1$", "-\t\t\toutput.append(\"case sensitive\"); //$NON-NLS-1$", "+\t\t\toutput.append(\" case sensitive\"); //$NON-NLS-1$", "-\t\t\toutput.append(\"case insensitive\"); //$NON-NLS-1$", "+\t\t\toutput.append(\" case insensitive\"); //$NON-NLS-1$", "+\t\tif (isErasureMatch())", "+\t\t\toutput.append(\", erasure only\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e695c48622b5bb4b74c8c62a6b0a1270", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected StringBuffer print(StringBuffer output)", "signatureAfterChange": "  \tprotected StringBuffer print(StringBuffer output)", "diff": ["-\t\t\t\toutput.append(\"exact match,\"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"exact match, \"); //$NON-NLS-1$", "-\t\t\t\toutput.append(\"prefix match,\"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"prefix match, \"); //$NON-NLS-1$", "-\t\t\t\toutput.append(\"pattern match,\"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"pattern match, \"); //$NON-NLS-1$", "-\t\t\toutput.append(\" case sensitive\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"case sensitive, \"); //$NON-NLS-1$", "-\t\t\toutput.append(\" case insensitive\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"case insensitive, \"); //$NON-NLS-1$", "+\t\tif ((this.matchCompatibility & R_FULL_MATCH) != 0) {", "+\t\t\toutput.append(\"generic full match, \"); //$NON-NLS-1$", "+\t\t}", "-\t\t\toutput.append(\", erasure only\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"generic erasure match, \"); //$NON-NLS-1$", "-\t\t\toutput.append(\", equivalent oronly\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"generic equivalent match, \"); //$NON-NLS-1$", "+\t\toutput.append(\"fine grain: \"); //$NON-NLS-1$", "+\t\toutput.append(getFineGrainFlagString(this.fineGrain));"]}], "num": 58292}