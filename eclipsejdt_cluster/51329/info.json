{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97b107fc0c8b771717620963c3401f31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13998c7f8c3dab367394c45ebc56053f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static void checkNeedForEnclosingInstanceCast(BlockScope scope, Expression enclosingInstance, TypeBinding enclosingInstanceType, TypeBinding memberType)", "signatureAfterChange": " public static void checkNeedForEnclosingInstanceCast(BlockScope scope, Expression enclosingInstance, TypeBinding enclosingInstanceType, TypeBinding memberType)", "diff": ["-\tif (castedExpressionType == enclosingInstanceType) {", "+\tif (TypeBinding.equalsEquals(castedExpressionType, enclosingInstanceType)) {", "-\t\tif (memberType == scope.getMemberType(memberType.sourceName(), (ReferenceBinding) alternateEnclosingInstanceType)) {", "+\t\tif (TypeBinding.equalsEquals(memberType, scope.getMemberType(memberType.sourceName(), (ReferenceBinding) alternateEnclosingInstanceType))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1faea02522da61bd2beee53d4c413c78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "signatureAfterChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "diff": ["-\t\t\t\t\t\tif (one == two.erasure())", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(one, two.erasure()))", "-\t\t\t\t\t\tif (one.erasure() == two)", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(one.erasure(), two))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253ec016005bcc6f6a11cbaded863545", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tReferenceBinding resolve()", "signatureAfterChange": " \tReferenceBinding resolve()", "diff": ["-\t\t\tif (this.firstBound == oldSuperclass) {", "+\t\t\tif (TypeBinding.equalsEquals(this.firstBound, oldSuperclass)) {", "-\t\t\t} else if (this.firstBound == oldFirstInterface) {", "+\t\t\t} else if (TypeBinding.equalsEquals(this.firstBound, oldFirstInterface)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d6c46acb0b98cb6b7bff111bb51032", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": "  \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t            return erasure() == otherType.erasure();", "+\t            return TypeBinding.equalsEquals(erasure(), otherType.erasure());", "-\t    if (erasure() == otherType) {", "+\t    if (TypeBinding.equalsEquals(erasure(), otherType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eefa781ab789e1cf24434a79774c26b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 501, "methodNumberAfterChange": 501, "signatureBeforeChange": " public void varargsConflict(MethodBinding method1, MethodBinding method2, SourceTypeBinding type)", "signatureAfterChange": " public void varargsConflict(MethodBinding method1, MethodBinding method2, SourceTypeBinding type)", "diff": ["-\t\tmethod1.declaringClass == type ? method1.sourceStart() : type.sourceStart(),", "-\t\tmethod1.declaringClass == type ? method1.sourceEnd() : type.sourceEnd());", "+\t\tTypeBinding.equalsEquals(method1.declaringClass, type) ? method1.sourceStart() : type.sourceStart(),", "+\t\tTypeBinding.equalsEquals(method1.declaringClass, type) ? method1.sourceEnd() : type.sourceEnd());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d54aa8c7a4e1ffc8bd70654d0493862", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic boolean isErasureBoundTo(TypeBinding type)", "signatureAfterChange": " \tpublic boolean isErasureBoundTo(TypeBinding type)", "diff": ["-\t\tif (this.superclass.erasure() == type)", "+\t\tif (TypeBinding.equalsEquals(this.superclass.erasure(), type))", "-\t\t\tif (this.superInterfaces[i].erasure() == type)", "+\t\t\tif (TypeBinding.equalsEquals(this.superInterfaces[i].erasure(), type))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73484aaa3ec1a013424859dd1632a179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate void addExpectedType(TypeBinding type, Scope scope)", "signatureAfterChange": " \tprivate void addExpectedType(TypeBinding type, Scope scope)", "diff": ["-\t\t\tif (this.expectedTypes[i] == type) return;", "+\t\t\tif (TypeBinding.equalsEquals(this.expectedTypes[i], type)) return;", "-\t\tif(type == scope.getJavaLangObject()) {", "+\t\tif(TypeBinding.equalsEquals(type, scope.getJavaLangObject())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b13a75ad21274e3e53afe739186ea60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "25ceba4552ce4df8b00117185ea4a4cf292544fd", "commitAfterChange": "e31e89499c545f3404d7787f4d333516631375ec", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " private boolean isCompatibleWith0(TypeBinding otherType, Scope captureScope)", "signatureAfterChange": " private boolean isCompatibleWith0(TypeBinding otherType, Scope captureScope)", "diff": ["-\tif (otherType == this)", "+\tif (TypeBinding.equalsEquals(otherType, this))", "-\t\t\t\t\tif (erasure() == otherType.erasure())", "+\t\t\t\t\tif (TypeBinding.equalsEquals(erasure(), otherType.erasure())) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a26a24a319862b142f9e41338d01d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\tif (this == otherType) return true;", "+\t", "+\tif (TypeBinding.equalsEquals(this, otherType)) return true;", "-\t\t\treturn otherType.erasure() == this;", "+\t\t\treturn TypeBinding.equalsEquals(otherType.erasure(), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9513edea55e22828196d68c3bc531ef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate TypeReference findBound(TypeBinding bound, TypeParameter parameter)", "signatureAfterChange": " \tprivate TypeReference findBound(TypeBinding bound, TypeParameter parameter)", "diff": ["-\t\tif (parameter.type != null && parameter.type.resolvedType == bound)", "+\t\tif (parameter.type != null && TypeBinding.equalsEquals(parameter.type.resolvedType, bound))", "-\t\t\t\tif (bounds[i].resolvedType == bound)", "+\t\t\t\tif (TypeBinding.equalsEquals(bounds[i].resolvedType, bound))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8b77a589069f3e57c26c5f4096e20a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public final boolean canBeSeenByForCodeSnippet(ReferenceBinding referenceBinding, ReferenceBinding receiverType)", "signatureAfterChange": "  public final boolean canBeSeenByForCodeSnippet(ReferenceBinding referenceBinding, ReferenceBinding receiverType)", "diff": ["-\tif (receiverType == referenceBinding) return true;", "+\tif (TypeBinding.equalsEquals(receiverType, referenceBinding)) return true;", "-\t\treturn outerInvocationType == outerDeclaringClass;", "+\t\treturn TypeBinding.equalsEquals(outerInvocationType, outerDeclaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddca86fe1ddf9a9573dfdd7eacc9e617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " private int checkAndRecordImportBinding( \t\tBinding importBinding,  \t\tHashtableOfType typesBySimpleNames,  \t\tImportReference importReference, \t\tchar[][] compoundName)", "signatureAfterChange": " private int checkAndRecordImportBinding( \t\tBinding importBinding,  \t\tHashtableOfType typesBySimpleNames,  \t\tImportReference importReference, \t\tchar[][] compoundName)", "diff": ["-\t\t\tif (existingType == referenceBinding) {", "+\t\t\tif (TypeBinding.equalsEquals(existingType, referenceBinding)) {", "-\t\t\t\t\t\tif (importConflictBinding.conflictingTypeBinding == referenceBinding) {", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(importConflictBinding.conflictingTypeBinding, referenceBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbe298dcfd23ab4c4fef5b7bada2db85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "25ceba4552ce4df8b00117185ea4a4cf292544fd", "commitAfterChange": "e31e89499c545f3404d7787f4d333516631375ec", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "signatureAfterChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "diff": ["-\tif (this == otherType)", "+\tif (TypeBinding.equalsEquals(this, otherType))", "-\t\t\t\t\tif (otherBound == this)", "+\t\t\t\t\tif (TypeBinding.equalsEquals(otherBound, this))"]}], "num": 51329}