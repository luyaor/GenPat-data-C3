{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4e5f0cd2acb8e5dea0759b701ec91a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e9d024088f0453518f6ec05fb15fb06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "530c48877da8402a05b3f0b84990331c9acd9df4", "commitAfterChange": "d5488a3ba93291ed8339edaad64e7cedc13fb558", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r public boolean hasStructuralChanges(byte[] newBytes, boolean orderRequired, boolean excludesSynthetic)", "signatureAfterChange": "\r public boolean hasStructuralChanges(byte[] newBytes, boolean orderRequired, boolean excludesSynthetic)", "diff": ["-\t\tif (orderRequired) {\r", "-\t\t\tif (this.fieldsCount != 0)\r", "-\t\t\t\tArrays.sort(this.fields);\r", "-\t\t\tif (otherFieldInfosLength != 0)\r", "-\t\t\t\tArrays.sort(otherFieldInfos);\r", "+\t\tboolean compareFields = true;\r", "+\t\tif (this.fieldsCount == otherFieldInfosLength) {\r", "+\t\t\tint i = 0;\r", "+\t\t\tfor (; i < this.fieldsCount; i++)\r", "+\t\t\t\tif (hasStructuralFieldChanges(this.fields[i], otherFieldInfos[i])) break;\r", "+\t\t\tif ((compareFields = i != this.fieldsCount) && !orderRequired && !excludesSynthetic)\r", "+\t\t\t\treturn true;\r", "-\t\tif (excludesSynthetic) {\r", "-\t\t\tif (hasNonSyntheticFieldChanges(this.fields, otherFieldInfos))\r", "-\t\t\t\treturn true;\r", "-\t\t} else {\r", "-\t\t\tif (this.fieldsCount != otherFieldInfosLength)\r", "-\t\t\t\treturn true;\r", "-\t\t\tfor (int i = 0; i < this.fieldsCount; i++)\r", "-\t\t\t\tif (hasStructuralFieldChanges(this.fields[i], otherFieldInfos[i]))\r", "+\t\tif (compareFields) {\r", "+\t\t\tif (orderRequired) {\r", "+\t\t\t\tif (this.fieldsCount != 0)\r", "+\t\t\t\t\tArrays.sort(this.fields);\r", "+\t\t\t\tif (otherFieldInfosLength != 0)\r", "+\t\t\t\t\tArrays.sort(otherFieldInfos);\r", "+\t\t\t}\r", "+\t\t\tif (excludesSynthetic) {\r", "+\t\t\t\tif (hasNonSyntheticFieldChanges(this.fields, otherFieldInfos))\r", "+\t\t\t} else {\r", "+\t\t\t\tif (this.fieldsCount != otherFieldInfosLength)\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\tfor (int i = 0; i < this.fieldsCount; i++)\r", "+\t\t\t\t\tif (hasStructuralFieldChanges(this.fields[i], otherFieldInfos[i]))\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t}\r", "-\t\tif (orderRequired) {\r", "-\t\t\tif (this.methodsCount != 0)\r", "-\t\t\t\tArrays.sort(this.methods);\r", "-\t\t\tif (otherMethodInfosLength != 0)\r", "-\t\t\t\tArrays.sort(otherMethodInfos);\t\r", "+\t\tboolean compareMethods = true;\r", "+\t\tif (this.methodsCount == otherMethodInfosLength) {\r", "+\t\t\tint i = 0;\r", "+\t\t\tfor (; i < this.methodsCount; i++)\r", "+\t\t\t\tif (hasStructuralMethodChanges(this.methods[i], otherMethodInfos[i])) break;\r", "+\t\t\tif ((compareMethods = i != this.methodsCount) && !orderRequired && !excludesSynthetic)\r", "+\t\t\t\treturn true;\r", "-\t\tif (excludesSynthetic) {\r", "-\t\t\tif (hasNonSyntheticMethodChanges(this.methods, otherMethodInfos))\r", "-\t\t\t\treturn true;\r", "-\t\t} else {\r", "-\t\t\tif (this.methodsCount != otherMethodInfosLength)\r", "-\t\t\t\treturn true;\r", "-\t\t\tfor (int i = 0; i < this.methodsCount; i++)\r", "-\t\t\t\tif (hasStructuralMethodChanges(this.methods[i], otherMethodInfos[i]))\r", "+\t\tif (compareMethods) {\r", "+\t\t\tif (orderRequired) {\r", "+\t\t\t\tif (this.methodsCount != 0)\r", "+\t\t\t\t\tArrays.sort(this.methods);\r", "+\t\t\t\tif (otherMethodInfosLength != 0)\r", "+\t\t\t\t\tArrays.sort(otherMethodInfos);\t\r", "+\t\t\t}\r", "+\t\t\tif (excludesSynthetic) {\r", "+\t\t\t\tif (hasNonSyntheticMethodChanges(this.methods, otherMethodInfos))\r", "+\t\t\t} else {\r", "+\t\t\t\tif (this.methodsCount != otherMethodInfosLength)\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\tfor (int i = 0; i < this.methodsCount; i++)\r", "+\t\t\t\t\tif (hasStructuralMethodChanges(this.methods[i], otherMethodInfos[i]))\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc7677d3ed76ab6b80fee920dd0c044", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "8e09a020c985a5c59c2f77650ea0c690b64e1566", "commitAfterChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected Object createSingleNameReference()", "signatureAfterChange": " \tprotected boolean pushParamName()", "diff": ["-\t */", "-\tprotected Object createSingleNameReference() {", "-\t\tJavadocSingleNameReference nameRef = new JavadocSingleNameReference(this.scanner.getCurrentIdentifierSource(),", "-\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "-\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "-\t\tnameRef.tagSourceStart = this.tagSourceStart;", "-\t\tnameRef.tagSourceEnd = this.tagSourceEnd;", "-\t\treturn nameRef;", "-\t}", "+\t */", "+\tprotected boolean pushParamName() {", "+\t\t// Create name reference", "+\t\tJavadocSingleNameReference nameRef = new JavadocSingleNameReference(this.scanner.getCurrentIdentifierSource(),", "+\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "+\t\tnameRef.tagSourceStart = this.tagSourceStart;", "+\t\tnameRef.tagSourceEnd = this.tagSourceEnd;", "+\t\t// Push ref on stack", "+\t\tif (this.astLengthPtr == -1) { // First push", "+\t\t\tpushOnAstStack(nameRef, true);", "+\t\t} else {", "+\t\t\t// Verify that no @throws has been declared before", "+\t\t\tfor (int i=THROWS_TAG_EXPECTED_ORDER; i<=this.astLengthPtr; i+=ORDERED_TAGS_NUMBER) {", "+\t\t\t\tif (this.astLengthStack[i] != 0) {", "+\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tswitch (this.astLengthPtr % ORDERED_TAGS_NUMBER) {", "+\t\t\t\tcase PARAM_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @param tag => push another param name", "+\t\t\t\t\tpushOnAstStack(nameRef, false);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SEE_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @see tag => push new param name", "+\t\t\t\t\tpushOnAstStack(nameRef, true);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\treturn true;", "+\t}"]}], "num": 25355}