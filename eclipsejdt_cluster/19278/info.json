{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "270e017e2cb51dca6a047c40dd311ef1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14a10cd3da9294c04651c98012706364", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "045a67be23e966bc4b7f49b2b17d7449e71c3890", "commitAfterChange": "09d26eca94e41cb67a73a9cec71e813ec866fc65", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate String formatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator)", "signatureAfterChange": "  \tprivate String formatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator, Map options)", "diff": ["-\tprivate String formatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator) {", "-\t\tAstNode[] bodyDeclarations = parseClassBodyDeclarations(source.toCharArray(), this.options);", "+\tprivate String formatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator, Map options) {", "+\t\tAstNode[] bodyDeclarations = parseClassBodyDeclarations(source.toCharArray(), options);", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55554d73ec669edafcd1fc40d8ab0ca4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "045a67be23e966bc4b7f49b2b17d7449e71c3890", "commitAfterChange": "09d26eca94e41cb67a73a9cec71e813ec866fc65", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate String formatCompilationUnit(String source, int indentationLevel, int[] positions, String lineSeparator)", "signatureAfterChange": "  \tprivate String formatCompilationUnit(String source, int indentationLevel, int[] positions, String lineSeparator, Map options)", "diff": ["-\tprivate String formatCompilationUnit(String source, int indentationLevel, int[] positions, String lineSeparator) {", "-\t\tCompilationUnitDeclaration compilationUnitDeclaration = parseCompilationUnit(source.toCharArray(), this.options);", "+\tprivate String formatCompilationUnit(String source, int indentationLevel, int[] positions, String lineSeparator, Map options) {", "+\t\tCompilationUnitDeclaration compilationUnitDeclaration = parseCompilationUnit(source.toCharArray(), options);", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "977ef47a58999e373290997f1e8ad782", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "045a67be23e966bc4b7f49b2b17d7449e71c3890", "commitAfterChange": "09d26eca94e41cb67a73a9cec71e813ec866fc65", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator)", "signatureAfterChange": "  \tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options)", "diff": ["-\tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator) {", "-\t\tConstructorDeclaration constructorDeclaration = parseStatements(source.toCharArray(), this.options);", "+\tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options) {", "+\t\tConstructorDeclaration constructorDeclaration = parseStatements(source.toCharArray(), options);", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options);"]}], "num": 19278}