{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dda0f4dd8865a929a6ab1ea1c899363", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d51fec51af13ede2308c0312f4fc0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void test040()", "signatureAfterChange": " public void test040()", "diff": ["-\t\t\"3. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tclass Y extends Homonym {};\t\\n\" + ", "+\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\"The type X.Homonym cannot be the superclass of Y; a superclass must be a class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"\tclass Y extends Homonym {};\t\\n\" + ", "+\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\"The type X.Homonym cannot be the superclass of Y; a superclass must be a class\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dbadf20c4be8fa390c9b67a7748a26f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "commitAfterChange": "ae391996f2ba5153face2dc96f44fbe25cc6cfcf", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic void test032b()", "signatureAfterChange": " \tpublic void test032b()", "diff": ["-\t\t\t\t\"class A { public Object foo() { return null; } }\" +", "-\t\t\t\t\"public class X<T extends A&I> {}\\n\"", "+\t\t\t\t\"class A { public Object foo() { return null; } }\\n\" +", "+\t\t\t\t\"public class X<T extends A&I> {}\\n\" +", "+\t\t\t\t\"interface J extends I { Object foo(); }\\n\" +", "+\t\t\t\t\"class Y<T extends I&J> {}\\n\" +", "+\t\t\t\t\"class Z<T extends J&I> {}\"", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" +", "-\t\t\t\"\tclass A { public Object foo() { return null; } }public class X<T extends A&I> {}\\r\\n\" +", "-\t\t\t\"\t                                                               ^\\n\" +", "-\t\t\t\"The return types are incompatible for the inherited methods I.foo(), A.foo()\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class X<T extends A&I> {}\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"The return types are incompatible for the inherited methods I.foo(), A.foo()\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tinterface J extends I { Object foo(); }\\n\" + ", "+\t\t\t\"\t                        ^^^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with I.foo()\\n\" + "]}], "num": 49668}