{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c644e0d5ad660d1d41bafa00c3d3f78", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6a3afac61e6c541dad519c0c59d2401", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "207683ceeef557e028c3a7026580ffe6ac9e1870", "commitAfterChange": "127cc67511a61e651ab72d6c1a8d166ef0b1ad54", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "diff": ["-\t\t\t// search in static import", "-\t\t\tImportBinding[] importBindings = scope.compilationUnitScope().imports;", "-\t\t\tfor (int i = 0; i < importBindings.length; i++) {", "-\t\t\t\tImportBinding importBinding = importBindings[i];", "-\t\t\t\tif(importBinding.isValidBinding() && importBinding.isStatic()) {", "-\t\t\t\t\tBinding binding = importBinding.resolvedImport;", "-\t\t\t\t\tif(binding != null && binding.isValidBinding()) {", "-\t\t\t\t\t\tif(importBinding.onDemand) {", "-\t\t\t\t\t\t\tif((binding.kind() & Binding.TYPE) != 0) {", "-\t\t\t\t\t\t\t\tif(proposeField) {", "-\t\t\t\t\t\t\t\t\tfindFields(", "-\t\t\t\t\t\t\t\t\t\ttoken,", "-\t\t\t\t\t\t\t\t\t\t(ReferenceBinding)binding,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tfieldsFound,", "-\t\t\t\t\t\t\t\t\t\tlocalsFound,", "-\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t-1,", "-\t\t\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif(proposeMethod && !insideAnnotationAttribute) {", "-\t\t\t\t\t\t\t\t\tfindMethods(", "-\t\t\t\t\t\t\t\t\t\ttoken,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t(ReferenceBinding)binding,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t-1,", "-\t\t\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif ((binding.kind() & Binding.FIELD) != 0) {", "-\t\t\t\t\t\t\t\tif(proposeField) {", "-\t\t\t\t\t\t\t\t\t\tfindFields(", "-\t\t\t\t\t\t\t\t\t\t\t\ttoken,", "-\t\t\t\t\t\t\t\t\t\t\t\tnew FieldBinding[]{(FieldBinding)binding},", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\tfieldsFound,", "-\t\t\t\t\t\t\t\t\t\t\t\tlocalsFound,", "-\t\t\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\t\t\t((FieldBinding)binding).declaringClass,", "-\t\t\t\t\t\t\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\t\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\t\t\t-1,", "-\t\t\t\t\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else if ((binding.kind() & Binding.METHOD) != 0) {", "-\t\t\t\t\t\t\t\tif(proposeMethod && !insideAnnotationAttribute) {", "-\t\t\t\t\t\t\t\t\tMethodBinding methodBinding = (MethodBinding)binding;", "-\t\t\t\t\t\t\t\t\tif(CharOperation.prefixEquals(token, methodBinding.selector))", "-\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\tfindLocalMethodsOfStaticImports(", "-\t\t\t\t\t\t\t\t\t\t\tmethodBinding.selector,", "-\t\t\t\t\t\t\t\t\t\t\tmethodBinding.declaringClass.methods(),", "-\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\t\t\t\t\t\tmethodBinding.declaringClass,", "-\t\t\t\t\t\t\t\t\t\t\tinvocationSite);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tfindFieldsAndMethodsFromStaticImports(", "+\t\t\t\t\ttoken,", "+\t\t\t\t\tscope,", "+\t\t\t\t\tinvocationSite,", "+\t\t\t\t\tinvocationScope,", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tinsideAnnotationAttribute,", "+\t\t\t\t\tlocalsFound,", "+\t\t\t\t\tfieldsFound,", "+\t\t\t\t\tmethodsFound,", "+\t\t\t\t\tproposeField,", "+\t\t\t\t\tproposeMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1de5a78382eabae367089d7c12eea12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, ASTNode enclosingNode, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation) {", "+\tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, ASTNode enclosingNode, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation) {", "-\t\t\t\t\t\tfindMethods(this.completionToken,null,null,enclosingType,scope,new ObjectVector(),false,false,true,null,null,false,false,true,null, null, null, false);", "+\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tenclosingType,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\tfindMethods(this.completionToken,null,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true,null, null, null, false);", "+\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\tnull,null,", "+\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\tfindFieldsAndMethods(this.completionToken, receiverType.capture(scope, ref.sourceEnd), scope, ref, scope,false,false, null, null, null, false);", "+\t\t\t\t\tObjectVector fieldsFound = new ObjectVector();", "+\t\t\t\t\tObjectVector methodsFound = new ObjectVector();", "+\t\t\t\t\t", "+\t\t\t\t\tfindFieldsAndMethods(", "+\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\treceiverType.capture(scope, ref.sourceEnd),", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\tref,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t-1);", "+\t\t\t\t\t", "+\t\t\t\t\tfindFieldsAndMethodsFromCastedReceiver(", "+\t\t\t\t\t\t\tenclosingNode,", "+\t\t\t\t\t\t\tqualifiedBinding,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\tref,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tref);", "+\t\t\t\t\t", "+\t\t\t\t\tObjectVector fieldsFound = new ObjectVector();", "+\t\t\t\t\tObjectVector methodsFound = new ObjectVector();", "+\t\t\t\t\t", "+\t\t\t\t\tboolean superCall = access.receiver instanceof SuperReference;", "+\t\t\t\t\t", "+\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\taccess.receiver instanceof SuperReference,", "+\t\t\t\t\t\tsuperCall,", "-\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t-1);", "+\t\t\t\t\t", "+\t\t\t\t\tif (!superCall) {", "+\t\t\t\t\t\tfindFieldsAndMethodsFromCastedReceiver(", "+\t\t\t\t\t\t\t\tenclosingNode,", "+\t\t\t\t\t\t\t\tqualifiedBinding,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tfieldsFound,", "+\t\t\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\t\t\taccess,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\taccess.receiver);", "+\t\t\t\t\t}", "-\t\t\t\t\tfalse);", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tnull,", "+\t\t\t\t\t-1,", "+\t\t\t\t\t-1);", "-\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\tfindMethods(this.completionToken,", "+\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t\t-1);", "-\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t-1,", "+\t\t\t\t\t\t-1);", "+\t}"]}], "num": 62962}