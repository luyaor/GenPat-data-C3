{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05f48a5346cebba739d4523ed8b4542b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21f16ea093553001cb6e1d2eb792d48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 142, "signatureBeforeChange": " public void invalidType(AstNode location, TypeBinding type)", "signatureAfterChange": " public void invalidType(AstNode location, TypeBinding type)", "diff": ["-\tint flag = IProblem.UndefinedType; // default", "+\tint id = IProblem.UndefinedType; // default", "-\t\t\tflag = IProblem.UndefinedType;", "+\t\t\tid = IProblem.UndefinedType;", "-\t\t\tflag = IProblem.NotVisibleType;", "+\t\t\tid = IProblem.NotVisibleType;", "-\t\t\tflag = IProblem.AmbiguousType;", "+\t\t\tid = IProblem.AmbiguousType;", "-\t\t\tflag = IProblem.InternalTypeNameProvided;", "+\t\t\tid = IProblem.InternalTypeNameProvided;", "-\t\t\tflag = IProblem.InheritedTypeHidesEnclosingName;", "+\t\t\tid = IProblem.InheritedTypeHidesEnclosingName;", "+\tif ((location.bits & AstNode.InsideAnnotation) != 0) {", "+\t\tid |= IProblem.Annotation;", "+\t}", "-\t\tflag,", "+\t\tid,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e17351d6b75a8f1fbe6091cf8c8b4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "848c4ddf1895eb24711ea8c54b1168746cb07972", "commitAfterChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 112, "signatureBeforeChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "signatureAfterChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "diff": ["-\tint flag = IProblem.UndefinedConstructor; //default...", "+\tint id = IProblem.UndefinedConstructor; //default...", "-\t\t\t\tflag = IProblem.UndefinedConstructorInDefaultConstructor;", "+\t\t\t\tid = IProblem.UndefinedConstructorInDefaultConstructor;", "-\t\t\t\tflag = IProblem.UndefinedConstructorInImplicitConstructorCall;", "+\t\t\t\tid = IProblem.UndefinedConstructorInImplicitConstructorCall;", "-\t\t\t\tflag = IProblem.UndefinedConstructor;", "+\t\t\t\tid = IProblem.UndefinedConstructor;", "-\t\t\t\tflag = IProblem.NotVisibleConstructorInDefaultConstructor;", "+\t\t\t\tid = IProblem.NotVisibleConstructorInDefaultConstructor;", "-\t\t\t\tflag = IProblem.NotVisibleConstructorInImplicitConstructorCall;", "+\t\t\t\tid = IProblem.NotVisibleConstructorInImplicitConstructorCall;", "-\t\t\t\tflag = IProblem.NotVisibleConstructor;", "+\t\t\t\tid = IProblem.NotVisibleConstructor;", "-\t\t\t\tflag = IProblem.AmbiguousConstructorInDefaultConstructor;", "+\t\t\t\tid = IProblem.AmbiguousConstructorInDefaultConstructor;", "-\t\t\t\tflag = IProblem.AmbiguousConstructorInImplicitConstructorCall;", "+\t\t\t\tid = IProblem.AmbiguousConstructorInImplicitConstructorCall;", "-\t\t\t\tflag = IProblem.AmbiguousConstructor;", "+\t\t\t\tid = IProblem.AmbiguousConstructor;", "-\t", "+\tif ((statement.bits & AstNode.InsideJavadoc) != 0) {", "+\t\tid |= IProblem.Javadoc;", "+\t}", "-\t\tflag,", "+\t\tid,"]}], "num": 55259}