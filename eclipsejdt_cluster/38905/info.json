{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caa5e1204799a4e689bb7848cc24c923", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3027a6005afe42b9301c6f489d94f8e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "bf0bb24ad2aa11936f786fa3a21e4724052c7919", "commitAfterChange": "3f4c816813820db669d197557cb718b17b2bf721", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference() throws InvalidInputException", "diff": ["-", "-\t\t\t// Verify that line end does not start with an open parenthese (which could be a constructor reference wrongly written...)", "-\t\t\t// See bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=47215", "-\t\t\tchar ch = peekChar();", "-\t\t\tif (ch == '(') {", "-\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocMissingHashCharacter(typeRefStartPosition, this.lineEnd, String.valueOf(this.source, typeRefStartPosition, this.lineEnd-typeRefStartPosition+1));", "-\t\t\t\treturn false;", "+\t\t\t", "+\t\t\tint currentIndex = this.index; // store current index", "+\t\t\tchar ch = readChar();", "+\t\t\tswitch (ch) {", "+\t\t\t\t// Verify that line end does not start with an open parenthese (which could be a constructor reference wrongly written...)", "+\t\t\t\t// See bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=47215\t", "+\t\t\t\tcase '(' :", "+\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocMissingHashCharacter(typeRefStartPosition, this.lineEnd, String.valueOf(this.source, typeRefStartPosition, this.lineEnd-typeRefStartPosition+1));", "+\t\t\t\t\treturn false;", "+\t\t\t\t// Search for the :// URL pattern", "+\t\t\t\t// See bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=168849", "+\t\t\t\tcase ':' :", "+\t\t\t\t\tch = readChar();\t\t\t\t\t", "+\t\t\t\t\tif (ch == '/' && ch == readChar()) {", "+\t\t\t\t\t\tif (this.reportProblems) {", "+\t\t\t\t\t\t\tthis.sourceParser.problemReporter().javadocInvalidSeeUrlReference(typeRefStartPosition, this.lineEnd);", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-", "+\t\t\t// revert to last stored index", "+\t\t\tthis.index = currentIndex;", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b6eb0480ebb8ff46e9ad15e706e4e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c39467a5717299e0743e249af795ac84f7541935", "commitAfterChange": "01fe9b211e794ff01834ebe0e40bd02cb1110d75", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public static char[] getSignatureSimpleName(char[] typeSignature)", "signatureAfterChange": " public static char[] getSignatureSimpleName(char[] typeSignature)", "diff": ["+\t\tint typeStart = 0;", "-\t\t\tif(qualifiedType[i] == '.') {", "-\t\t\t\tdotCount--;", "+\t\t\tswitch (qualifiedType[i]) {", "+\t\t\t\tcase '.':", "+\t\t\t\t\tdotCount--;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ' ':", "+\t\t\t\t\ttypeStart = i+1;", "+\t\t\t\t\tbreak;", "-\t\t\t\treturn CharOperation.subarray(qualifiedType, i + 1, qualifiedType.length);", "+\t\t\t\tchar[] simpleName = CharOperation.subarray(qualifiedType, i + 1, qualifiedType.length);", "+\t\t\t\tif (typeStart > 0 && typeStart < qualifiedType.length)", "+\t\t\t\t\treturn CharOperation.concat(CharOperation.subarray(qualifiedType, 0, typeStart), simpleName);", "+\t\t\t\treturn simpleName;"]}], "num": 38905}