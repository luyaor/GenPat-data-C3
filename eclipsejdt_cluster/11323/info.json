{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71a2f53077476b56aac6e0b98f65b7f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28277298a721599841bfbc06f9cafae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testBug74776() throws CoreException", "signatureAfterChange": " \tpublic void testBug74776() throws CoreException", "diff": ["-\t\tICompilationUnit[] workingCopies = new ICompilationUnit[3];", "-\t\ttry {", "-\t\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\t\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b74776/A.java\",", "-\t\t\t\t\"package b74776;\\n\" + ", "-\t\t\t\t\"public class A {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @deprecated Use {@link #foo(IRegion)} instead\\n\" + ", "-\t\t\t\t\"\t * @param r\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid foo(Region r) {\\n\" + ", "-\t\t\t\t\"\t\tfoo((IRegion)r);\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tvoid foo(IRegion r) {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner", "-\t\t\t\t);", "-\t\t\tworkingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b74776/IRegion.java\",", "-\t\t\t\t\"package b74776;\\n\" + ", "-\t\t\t\t\"public interface IRegion {\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue);", "-\t\t\tworkingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/b74776/Region.java\",", "-\t\t\t\t\"package b74776;\\n\" + ", "-\t\t\t\t\"public class Region implements IRegion {\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue);", "-\t\t\t// search method references", "-\t\t\tIType type = workingCopies[0].getType(\"A\");", "-\t\t\tIMethod method = type.getMethod(\"foo\", new String[] { \"QRegion;\" });", "-\t\t\tsearch(method, REFERENCES);", "-\t\t\tassertSearchResults(\"\");", "-\t\t}", "-\t\tfinally {", "-\t\t\tdiscardWorkingCopies(workingCopies);", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[3];", "+\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b74776/A.java\",", "+\t\t\t\"package b74776;\\n\" + ", "+\t\t\t\"public class A {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @deprecated Use {@link #foo(IRegion)} instead\\n\" + ", "+\t\t\t\"\t * @param r\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tvoid foo(Region r) {\\n\" + ", "+\t\t\t\"\t\tfoo((IRegion)r);\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tvoid foo(IRegion r) {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b74776/IRegion.java\",", "+\t\t\t\"package b74776;\\n\" + ", "+\t\t\t\"public interface IRegion {\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/b74776/Region.java\",", "+\t\t\t\"package b74776;\\n\" + ", "+\t\t\t\"public class Region implements IRegion {\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\t// search method references", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+\t\tIMethod method = type.getMethod(\"foo\", new String[] { \"QRegion;\" });", "+\t\tsearch(method, REFERENCES);", "+\t\tassertSearchResults(\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f38a113396f2937d72242e79066f17e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "fd8b9a432900e078bd3ec0b84289455beeec7157", "commitAfterChange": "727ece7c4e37d8cf0a8a8c9e31dcb1989a9402e6", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 387, "signatureBeforeChange": " public void testBug156491() throws CoreException", "signatureAfterChange": " public void testBug156491() throws CoreException", "diff": ["-\tworkingCopies = new ICompilationUnit[5];", "-\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/pack/I.java\",", "-\t\t\"package pack;\\n\" + ", "-\t\t\"public interface I {}\\n\"", "-\t);", "-\tworkingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/pack/X.java\",", "-\t\t\"package pack;\\n\" + ", "-\t\t\"public class X {\\n\" + ", "-\t\t\"\tpublic String toString() {\\n\" + ", "-\t\t\"\t\treturn \\\"X\\\";\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\"", "-\t);", "-\tworkingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/pack/Sub.java\",", "-\t\t\"package pack;\\n\" + ", "-\t\t\"public class Sub extends X {}\\n\"", "-\t);", "-\tworkingCopies[3] = getWorkingCopy(\"/JavaSearchBugs/src/pack/Y.java\",", "-\t\t\"package pack;\\n\" + ", "-\t\t\"public class Y {\\n\" + ", "-\t\t\"\tpublic String toString() {\\n\" + ", "-\t\t\"\t\treturn \\\"Y\\\";\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\"", "-\t);", "-\tworkingCopies[4] = getWorkingCopy(\"/JavaSearchBugs/src/pack/Test.java\",", "+\tworkingCopies = new ICompilationUnit[1];", "+\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/pack/Test.java\",", "-\t\t\"\tvoid overriddenSuper(Object o) {\\n\" + ", "+\t\t\"\tvoid superInvocationMatches(Object o) {\\n\" + ", "-\t\t\"\tvoid overriddenPotential(I i) {\\n\" + ", "+\t\t\"\tvoid interfaceMatches(I i) {\\n\" + ", "-\t\t\"\tvoid overriddenSub(Sub s) {\\n\" + ", "+\t\t\"\tvoid subtypeMatches(Sub s) {\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\" +", "+\t\t\"interface I {}\\n\" +", "+\t\t\"class X {\\n\" + ", "+\t\t\"\tpublic String toString() {\\n\" + ", "+\t\t\"\t\treturn \\\"X\\\";\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\" +", "+\t\t\"class Sub extends X {}\\n\" +", "+\t\t\"class Y {\\n\" + ", "+\t\t\"\tpublic String toString() {\\n\" + ", "+\t\t\"\t\treturn \\\"Y\\\";\\n\" + ", "-\tIMethod method = workingCopies[1].getType(\"X\").getMethod(\"toString\", new String[0]);", "-\tthis.resultCollector.showFlavors = PatternLocator.OVERRIDDEN_FLAVOR;", "+\tIMethod method = workingCopies[0].getType(\"X\").getMethod(\"toString\", new String[0]);", "+\tthis.resultCollector.showFlavors = PatternLocator.SUPER_INVOCATION_FLAVOR;", "-\t\t\"src/pack/Test.java void pack.Test.overriddenSuper(Object) [toString()] EXACT_MATCH OVERRIDDEN\\n\" + ", "-\t\t\"src/pack/Test.java void pack.Test.overriddenSub(Sub) [toString()] EXACT_MATCH\"", "+\t\t\"src/pack/Test.java void pack.Test.superInvocationMatches(Object) [toString()] EXACT_MATCH SUPER INVOCATION\\n\" + ", "+\t\t\"src/pack/Test.java void pack.Test.subtypeMatches(Sub) [toString()] EXACT_MATCH\"", "+\t);", "+}"]}], "num": 11323}