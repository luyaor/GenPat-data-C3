{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15cae6b9d97793c355b62dbeaf69f69d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36edebf717970e343fded49867361a10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t\tif (this.genericCast != null)", "+\t\t\t\t\tcodeStream.checkcast(this.genericCast);", "+\t\t\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "-\t\t\t\t\tcodeStream.generateConstant(expression.constant, implicitConversion);\t\t\t", "+\t\t\t\t\tcodeStream.generateConstant(expression.constant, this.implicitConversion);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1d3adcbb38a673df1a5d9b4ad73452", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["-\t\tcodeStream.generateImplicitConversion(implicitConversion);\t\t", "+\t\tif (this.genericCast != null)", "+\t\t\tcodeStream.checkcast(this.genericCast);", "+\t\tcodeStream.generateImplicitConversion(this.implicitConversion);\t\t", "-\t\t\timplicitConversion);", "+\t\t\tthis.implicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef963912e1a4f219296bda94e490dd16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);\t\t", "-\t\t\t\tcodeStream.generateConstant(postIncrement.expression.constant, implicitConversion);", "+\t\t\t\tif (this.genericCast != null) ", "+\t\t\t\t\tcodeStream.checkcast(this.genericCast);", "+\t\t\t\tcodeStream.generateImplicitConversion(this.implicitConversion);\t\t", "+\t\t\t\tcodeStream.generateConstant(postIncrement.expression.constant, this.implicitConversion);", "-\t\t\t\tfieldStore(codeStream, fieldBinding, syntheticAccessors == null ? null : syntheticAccessors[WRITE], false);", "+\t\t\t\tfieldStore(codeStream, fieldBinding, this.syntheticAccessors == null ? null : this.syntheticAccessors[WRITE], false);"]}], "num": 16189}