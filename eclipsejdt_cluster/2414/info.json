{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a14f3c5fd5e9d90243af310fd07a9ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03151671f0d1d89a550d6debc808c0ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "c9050a3a9594b7d361850fa9a3880d65c49e6aec", "commitAfterChange": "861f1162953e56602b4d7507e52e1f13733854c4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public void place()", "signatureAfterChange": "\r public void place()", "diff": ["-\t\t\tcodeStream.writeSignedShort(forwardReferences[i], (short) (position - forwardReferences[i] + 1));\r", "+\t\t\tint offset = position - forwardReferences[i] + 1;\r", "+\t\t\tif (offset > 0x7FFF && !this.codeStream.wideMode) {\r", "+\t\t\t\tthrow new AbortMethod(null);\r", "+\t\t\t}\r", "+\t\t\tif (this.codeStream.wideMode) {\r", "+\t\t\t\tif (this.isWide) {\r", "+\t\t\t\t\tcodeStream.writeSignedWord(forwardReferences[i], offset);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], (short) offset);\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], (short) offset);\r", "+\t\t\t}\r", "-\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, (short) (position - forwardPosition + 1));\r", "+\t\t\t\t\t\t\tint offset = position - forwardPosition + 1;\r", "+\t\t\t\t\t\t\tif (offset > 0x7FFF && !this.codeStream.wideMode) {\r", "+\t\t\t\t\t\t\t\tthrow new AbortMethod(null);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tif (this.codeStream.wideMode) {\r", "+\t\t\t\t\t\t\t\tif (this.isWide) {\r", "+\t\t\t\t\t\t\t\t\tcodeStream.writeSignedWord(forwardPosition, offset);\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, (short) offset);\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, (short) offset);\r", "+\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d789801d6eaba57e25501d50b602feed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["+//\tif ((this.tagBits & USED) == 0 && this.forwardReferenceCount == 0) {", "+//\t\treturn;", "+//\t}", "-\t\tposition = codeStream.position;", "+\t\tif ((this.tagBits & USED) != 0 || this.forwardReferenceCount != 0) {", "+\t\t\tthis.position = codeStream.getPosition();", "+\t\t} else {", "+\t\t\tthis.position = codeStream.position;", "+\t\t}", "-\t\t// TURNED OFF since fail on 1F4IRD9", "-\t\t\tint offset = position - forwardReferences[i] + 1;", "-\t\t\tif (Math.abs(offset) > 0x7FFF && !this.codeStream.wideMode) {", "-\t\t\t\tthrow new AbortMethod(CodeStream.RESTART_IN_WIDE_MODE, null);", "-\t\t\t}", "-\t\t\tif (this.codeStream.wideMode) {", "-\t\t\t\tif ((this.tagBits & WIDE) != 0) {", "-\t\t\t\t\tcodeStream.writeSignedWord(forwardReferences[i], offset);", "-\t\t\t\t} else {", "-\t\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], offset);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], offset);", "-\t\t\t}", "+\t\t\tcodeStream.writePosition(this, forwardReferences[i]);", "-\t\t\tfor (int i = 0; i < codeStream.countLabels; i++) {", "-\t\t\t\tLabel label = codeStream.labels[i];", "-\t\t\t\tif (oldPosition == label.position) {", "-\t\t\t\t\tlabel.position = position;", "-\t\t\t\t\tif (label instanceof CaseLabel) {", "-\t\t\t\t\t\tint offset = position - ((CaseLabel) label).instructionPosition;", "-\t\t\t\t\t\tfor (int j = 0; j < label.forwardReferenceCount; j++) {", "-\t\t\t\t\t\t\tint forwardPosition = label.forwardReferences[j];", "-\t\t\t\t\t\t\tcodeStream.writeSignedWord(forwardPosition, offset);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tfor (int j = 0; j < label.forwardReferenceCount; j++) {", "-\t\t\t\t\t\t\tint forwardPosition = label.forwardReferences[j];", "-\t\t\t\t\t\t\tint offset = position - forwardPosition + 1;", "-\t\t\t\t\t\t\tif (Math.abs(offset) > 0x7FFF && !this.codeStream.wideMode) {", "-\t\t\t\t\t\t\t\tthrow new AbortMethod(CodeStream.RESTART_IN_WIDE_MODE, null);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (this.codeStream.wideMode) {", "-\t\t\t\t\t\t\t\tif ((this.tagBits & WIDE) != 0) {", "-\t\t\t\t\t\t\t\t\tcodeStream.writeSignedWord(forwardPosition, offset);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, offset);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, offset);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tthis.codeStream.optimizeBranch(oldPosition, this);"]}], "num": 2414}