{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb6b22db03a4fa4682c474a03e2442df", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18775fe2fe357a6319b036ab38f0b6cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate IFile getIFileForTypeName( String typeName )", "signatureAfterChange": " \tprivate IFile getIFileForTypeName(String typeName)", "diff": ["+\t */", "+\tprivate IFile getIFileForTypeName(String typeName)", "+\t{", "+\t\t// split the type name into its parts", "+\t\tString[] parts = _PACKAGE_DELIMITER.split(typeName);", "+", "+\t\tIFolder folder = _gsfm.getFolder();", "+\t\tfor (int i = 0; i < parts.length - 1; i++)", "+\t\t\tfolder = folder.getFolder(parts[i]);", "+", "+\t\t// the last part of the type name is the file name", "+\t\tString fileName = parts[parts.length - 1] + \".java\"; //$NON-NLS-1$\t\t", "+\t\tIFile file = folder.getFile(fileName);", "+\t\treturn file;", "+\t}", "-\t */", "-\tprivate IFile getIFileForTypeName( String typeName )", "-\t{", "-\t\t// split the type name into its parts", "-\t\tString[] parts = typeName.split( \"\\\\.\"); //$NON-NLS-1$", "-\t\t", "-\t\tIFolder folder = _gsfm.getFolder();", "-\t\tfor ( int i = 0; i < parts.length - 1; i++ )", "-\t\t\tfolder = folder.getFolder( parts[i] );", "-\t\t", "-\t\t// the last part of the type name is the file name", "-\t\tString fileName = parts[parts.length - 1] + \".java\"; //$NON-NLS-1$\t\t", "-\t\tIFile file = folder.getFile( fileName );", "-\t\treturn file;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6bdca9cd57f511947a92f99b9c8f687", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "diff": ["-\t\t\t// create folder for generated source files", "-\t\t\tIFolder folder = project.getFolder( GENERATED_SOURCE_FOLDER_NAME );", "-\t\t\tif (!folder.exists())", "-\t\t\t\tfolder.create(true, false, null);", "+\t\t\t", "+\t\t\tIFile file = getIFileForTypeName( typeName );", "-\t\t\t// make sure __generated_src dir is on the cp if not already", "+\t\t\t// make sure GENERATED_SOURCE_FOLDER_NAME dir is on the cp if not already", "+\t\t\t// this dir will be created by getIFileForTypeName", "+\t\t\tIFolder folder = project.getFolder( GENERATED_SOURCE_FOLDER_NAME );", "-\t\t\t// split the type name into its parts", "-\t\t\tString[] parts = typeName.split( \"\\\\.\");", "-\t", "-\t\t\t//  create folders for the package parts", "-\t\t\tint i = 0;", "-\t\t\tfor ( ;i < parts.length - 1; i++ )", "-\t\t\t{", "-\t\t\t\tfolder = folder.getFolder( parts[i] );", "-\t\t\t\tif ( !folder.exists() )", "-\t\t\t\t\tfolder.create( true, false, null );", "-\t\t\t}", "-\t\t\t", "-\t\t\tString fileName = parts[i] + \".java\";\t\t", "-\t\t\tIFile file = folder.getFile( fileName );", "-\t", "-\t\t\tupdateFileMaps( typeName, parentFile, file );", "+\t\t\taddEntryToFileMaps( parentFile, file );"]}], "num": 42879}