{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "daeae67188e345cf5ee200b28b16abfb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b266f6706e2b4214d2d012a73672a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public LocalVariablePattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tLocalVariable localVariable, \tint matchMode,  \tboolean isCaseSensitive)", "signatureAfterChange": "  public LocalVariablePattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tLocalVariable localVariable, \tint matchRule)", "diff": ["-\tint matchMode, ", "-\tboolean isCaseSensitive) {", "+\tint matchRule) {", "-\tsuper(LOCAL_VAR_PATTERN, findDeclarations, readAccess, writeAccess, localVariable.getElementName().toCharArray(), matchMode, isCaseSensitive);", "+\tsuper(LOCAL_VAR_PATTERN, findDeclarations, readAccess, writeAccess, localVariable.getElementName().toCharArray(), matchRule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09460174ccd866451cc971f246b52a7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageDeclarationPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public PackageDeclarationPattern(char[] pkgName, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": "  public PackageDeclarationPattern(char[] pkgName, int matchRule)", "diff": ["-public PackageDeclarationPattern(char[] pkgName, int matchMode, boolean isCaseSensitive) {", "-\tsuper(PKG_DECL_PATTERN, matchMode, isCaseSensitive);", "+public PackageDeclarationPattern(char[] pkgName, int matchRule) {", "+\tsuper(PKG_DECL_PATTERN, matchRule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c445ed4113eaf4983ab1bf346d03f94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public TypeDeclarationPattern(int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " public TypeDeclarationPattern(int matchRule)", "diff": ["-", "-public TypeDeclarationPattern(int matchMode, boolean isCaseSensitive) {", "-\tsuper(TYPE_DECL_PATTERN, matchMode, isCaseSensitive);", "+public TypeDeclarationPattern(int matchRule) {", "+\tsuper(TYPE_DECL_PATTERN, matchRule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d85866e306da0abdbd28b456897e92fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public SuperTypeReferencePattern(char[] superQualification, char[] superSimpleName, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " public SuperTypeReferencePattern(char[] superQualification, char[] superSimpleName, int matchRule)", "diff": ["-", "-public SuperTypeReferencePattern(char[] superQualification, char[] superSimpleName, int matchMode, boolean isCaseSensitive) {", "-\tthis(superQualification, superSimpleName, matchMode, isCaseSensitive, false);", "+}", "+public SuperTypeReferencePattern(char[] superQualification, char[] superSimpleName, int matchRule) {", "+\tthis(superQualification, superSimpleName, false, matchRule);"]}], "num": 49650}