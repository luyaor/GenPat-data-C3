{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d632769d16727638570312b4b1c49d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ca5315e487a12c4e6ee71ea85c828d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1a94a1e6652f1701b8c360d56d755e5438b79c26", "commitAfterChange": "3b002cab97d2ee77b59be67feaf705de255bc1fb", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  private void addNewEntry(ArrayList paths, String currentClasspathName, ArrayList currentRuleSpecs, String customEncoding, boolean isSourceOnly)", "signatureAfterChange": "  private void addNewEntry(ArrayList paths, String currentClasspathName,  \t\tArrayList currentRuleSpecs, String customEncoding,  \t\tString destPath, boolean isSourceOnly,  \t\tboolean rejectDestinationPathOnJars) throws InvalidInputException", "diff": ["-private void addNewEntry(ArrayList paths, String currentClasspathName, ArrayList currentRuleSpecs, String customEncoding, boolean isSourceOnly) {", "+private void addNewEntry(ArrayList paths, String currentClasspathName, ", "+\t\tArrayList currentRuleSpecs, String customEncoding, ", "+\t\tString destPath, boolean isSourceOnly, ", "+\t\tboolean rejectDestinationPathOnJars) throws InvalidInputException {", "+\t\tif (NONE.equals(destPath)) {", "+\t\t\tdestPath = NONE; // keep == comparison valid", "+\t\t}", "+\t\tif (rejectDestinationPathOnJars && destPath != null &&", "+\t\t\t\t(currentClasspathName.endsWith(\".jar\") || //$NON-NLS-1$ ", "+\t\t\t\t\tcurrentClasspathName.endsWith(\".zip\"))) { //$NON-NLS-1$ ", "+\t\t\tthrow new InvalidInputException(", "+\t\t\t\tMain.bind(\"configure.unexpectedDestinationPathEntryFile\", //$NON-NLS-1$ ", "+\t\t\t\t\t\t\tcurrentClasspathName));", "+\t\t}", "-\t\t\t\taccessRuleSet);", "+\t\t\t\taccessRuleSet,", "+\t\t\t\tdestPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e511af6bd0e969570a88b733517d31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 81, "signatureBeforeChange": "  private void processPathEntries(final int defaultSize, final ArrayList paths,  \t\t\tfinal String currentPath, String customEncoding, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)  \t\tthrows InvalidInputException", "signatureAfterChange": " public void processPathEntries(final int defaultSize, final ArrayList paths,  \t\t\tfinal String currentPath, String customEncoding, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)  \t\tthrows InvalidInputException", "diff": ["-", "-private void processPathEntries(final int defaultSize, final ArrayList paths, ", "+public void processPathEntries(final int defaultSize, final ArrayList paths, ", "-\t\t\t\t\tMain.bind(\"configure.incorrectDestinationPathEntry\", //$NON-NLS-1$ ", "-\t\t\t\t\t\tcurrentPath));\t\t\t\t", "+\t\t\t\t\tthis.bind(\"configure.incorrectDestinationPathEntry\", //$NON-NLS-1$ ", "+\t\t\t\t\t\tcurrentPath));", "+\t\t\t\tbreak;", "+\t\t\tcase readyToCloseEndingWithDestinationPath:", "+\t\t\t\tstate = rulesStart;", "+\t\t\t\t\tif (currentDestinationPath != null) {", "+\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tthis.bind(\"configure.duplicateDestinationPathEntry\", //$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\t\t\tcurrentPath));\t", "+\t\t\t\t\t}", "+\t\t\t\tif (currentDestinationPath != null) {", "+\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\tthis.bind(\"configure.accessRuleAfterDestinationPath\", //$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tcurrentPath));", "+\t\t\t\t}"]}], "num": 2795}