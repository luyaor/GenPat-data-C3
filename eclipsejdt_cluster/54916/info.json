{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf7ab2048727c6503200e17b992f6b4c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc4da499ede4d06cf50081091178a4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean use15specifics = scope.environment().options.sourceLevel >= JDK1_5;", "+\t\tLookupEnvironment env = scope.environment();", "+\t\tboolean use15specifics = env.options.sourceLevel >= JDK1_5;", "-\t\t\t\tint unboxedID = scope.computeBoxingType(lhsType).id;", "+\t\t\t\tint unboxedID = env.computeBoxingType(lhsType).id;", "-\t\t\t\tint unboxedID = scope.computeBoxingType(expressionType).id;", "+\t\t\t\tint unboxedID = env.computeBoxingType(expressionType).id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b4e015591e4d141284ddfc3ecd903c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean use15specifics = scope.environment().options.sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\tLookupEnvironment env = scope.environment();", "+\t\tboolean use15specifics = env.options.sourceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\t\tvalueIfFalseType = scope.computeBoxingType(valueIfFalseType);", "+\t\t\t\t\tvalueIfFalseType = env.computeBoxingType(valueIfFalseType);", "-\t\t\t\tvalueIfTrueType = scope.computeBoxingType(valueIfTrueType);", "+\t\t\t\tvalueIfTrueType = env.computeBoxingType(valueIfTrueType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e126014eed4d4aff327b9de214c48b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tBlockScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "signatureAfterChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tBlockScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "diff": ["-\t\tboolean use15specifics = scope.environment().options.sourceLevel >= JDK1_5;", "+\t\tLookupEnvironment env = scope.environment();", "+\t\tboolean use15specifics = env.options.sourceLevel >= JDK1_5;", "-\t\t\t\tif (scope.computeBoxingType(expressionType) == castType) {", "+\t\t\t\tif (env.computeBoxingType(expressionType) == castType) {", "-\t\t\tif (scope.computeBoxingType(castType) == expressionType) {", "+\t\t\tif (env.computeBoxingType(castType) == expressionType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a800fcd9c02d8078361dfa734b5b48b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean use15specifics = scope.environment().options.sourceLevel >= JDK1_5;", "+\t\tLookupEnvironment env = scope.environment();", "+\t\tboolean use15specifics = env.options.sourceLevel >= JDK1_5;", "-\t\t\t\tint unboxedID = scope.computeBoxingType(expressionType).id;", "+\t\t\t\tint unboxedID = env.computeBoxingType(expressionType).id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1b98324f9d9951de1df4874c175838", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean use15specifics = scope.environment().options.sourceLevel >= JDK1_5;", "+\t\tLookupEnvironment env = scope.environment();", "+\t\tboolean use15specifics = env.options.sourceLevel >= JDK1_5;", "-\t\t\t\tint unboxedID = scope.computeBoxingType(leftType).id;", "+\t\t\t\tint unboxedID = env.computeBoxingType(leftType).id;", "-\t\t\t\tint unboxedID = scope.computeBoxingType(rightType).id;", "+\t\t\t\tint unboxedID = env.computeBoxingType(rightType).id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fecde1ca0dae891831592249f0d6965b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean use15specifics = scope.environment().options.sourceLevel >= JDK1_5;", "+\t\tLookupEnvironment env = scope.environment();", "+\t\tboolean use15specifics = env.options.sourceLevel >= JDK1_5;", "-\t\t\t\t\tTypeBinding unboxedType = scope.computeBoxingType(rightType);", "+\t\t\t\t\tTypeBinding unboxedType = env.computeBoxingType(rightType);", "-\t\t\t\t\tTypeBinding unboxedType = scope.computeBoxingType(leftType);", "+\t\t\t\t\tTypeBinding unboxedType = env.computeBoxingType(leftType);"]}], "num": 54916}