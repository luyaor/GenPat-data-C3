{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e0902e538dedbf37398441f7f695a31", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36efed0b800f2f8a43befe03ba2ff037", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "4b34ac952495406305286be091754126c6d25593", "commitAfterChange": "a3337f44ed6348a5f4f65ab1b2584cb8125066c6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic boolean isWrapped()", "signatureAfterChange": "  \tpublic boolean isWrapped()", "diff": ["+\tpublic boolean isWrapped() {", "+\t\treturn this.fragmentBreaks[this.fragmentIndex] == BREAK;", "+\t}", "-\tpublic boolean isWrapped() {", "-\t\tfor (int i = 0, max = this.fragmentCount; i < max; i++) {", "-\t\t\tif (this.fragmentBreaks[i] == BREAK) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t}", "-\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6614dd39e5068e3f57e81f066f3c28e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/AccessRuleSet.java", "commitBeforeChange": "37468b15b5c10767a0d1f5bcf745b5635724272d", "commitAfterChange": "269c8c1f587787c02ae256af1e14f83a052a8b35", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic String toString(boolean wrap)", "signatureAfterChange": " \t \tpublic String toString(boolean wrap)", "diff": ["-\t\tbuffer.append(\"} [templates:\\\"\"); //$NON-NLS-1$", "-\t\tfor (int i = 0; i < messageTemplates.length; i++)", "-\t\t\tbuffer.append(this.messageTemplates[i]);", "-\t\tbuffer.append(\"\\\"]\"); //$NON-NLS-1$", "+\t\tbuffer.append(\"} [classpath entry: \"); //$NON-NLS-1$", "+\t\tbuffer.append(this.classpathEntryName);", "+\t\tbuffer.append(\"]\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c0259b41aea73ff7ec3edf652541e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuilderTests.java", "commitBeforeChange": "69bc819e497f981a0e9ba9cc4eab5b16567ae106", "commitAfterChange": "0189869d5d518ec997809fc580e44b7c092ef3d3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tprotected void printProblemsFor(IPath[] roots)", "signatureAfterChange": "  \tprotected void printProblemsFor(IPath[] roots)", "diff": ["-\t\t\tfor (int j = 0; j < problems.length; j++)", "-\t\t\t\tSystem.out.println(problems[j].toString());", "+\t\t\tSystem.out.println(problems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fa8f06bb332ff5dc9ba3209721774bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SubRoutineStatement.java", "commitBeforeChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "commitAfterChange": "6caff7fe529f9accd50580abcc5806323ae12c21", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void resetAnyExceptionHandlers()", "signatureAfterChange": "  \tpublic void resetAnyExceptionHandlers()", "diff": ["-\t\t\tfor (int i = 0, max = this.anyExceptionLabelsCount; i < max; i++) {", "-\t\t\t\tthis.anyExceptionLabels[i] = null;", "-\t\t\t}", "+\t\t\tthis.anyExceptionLabels = NO_EXCEPTION_HANDLER;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afbcc601087198cfea455520601a2f8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8cc940e0f7737c5f198b9632e86ecfcd6479e105", "commitAfterChange": "cb998bf2848dbe13467716ab126d457f7b87a36f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tpublic MethodBinding findMethodInSuperInterfaces(\r \t\tReferenceBinding currentType,\r \t\tchar[] selector,\r \t\tObjectVector found,\r \t\tMethodBinding matchingMethod)", "signatureAfterChange": "\r \r \tpublic MethodBinding findMethodInSuperInterfaces(\r \t\tReferenceBinding currentType,\r \t\tchar[] selector,\r \t\tObjectVector found,\r \t\tMethodBinding matchingMethod)", "diff": ["-\t\t\t\t\tinterfacesToVisit,\r", "-\t\t\t\t\t0,\r", "-\t\t\t\t\tinterfacesToVisit = new ReferenceBinding[lastPosition * 2][],\r", "-\t\t\t\t\t0,\r", "+\t\t\t\t\tinterfacesToVisit, 0,\r", "+\t\t\t\t\tinterfacesToVisit = new ReferenceBinding[lastPosition * 2][], 0,\r", "-\t\t\t\t\t\t\tif (found.size == 0 && matchingMethod != null)\r", "+\t\t\t\t\t\t\tif (found.size == 0 && matchingMethod != null) {\r", "-\t\t\t\t\t\t\tfor (int f = 0; f < currentLength; f++)\r", "-\t\t\t\t\t\t\t\tfound.add(currentMethods[f]);\r", "+\t\t\t\t\t\t\t\tmatchingMethod = null;\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tfound.addAll(currentMethods);\r", "-\t\t\t\t\t\t\t\t\tinterfacesToVisit,\r", "-\t\t\t\t\t\t\t\t\t0,\r", "-\t\t\t\t\t\t\t\t\tinterfacesToVisit = new ReferenceBinding[lastPosition * 2][],\r", "-\t\t\t\t\t\t\t\t\t0,\r", "+\t\t\t\t\t\t\t\t\tinterfacesToVisit, 0,\r", "+\t\t\t\t\t\t\t\t\tinterfacesToVisit = new ReferenceBinding[lastPosition * 2][], 0,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d58fb5490e8165d0ab6a7bbf35354c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "69c59f0267102692d57da5d57d379c16633b234c", "commitAfterChange": "a7da40a1a62439fc4b1ece4f5221022e1778c205", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\tfor (int i = 0; projects != null && i < projects.length; i++) {", "-\t\t\t\t\tJavaModelManager.getExternalManager().refreshReferences(projects[i], null);", "-\t\t\t\t}", "+\t\t\t\t//https://bugs.eclipse.org/bugs/show_bug.cgi?id=302295", "+\t\t\t\t// Refresh all project references together in a single job", "+\t\t\t\tJavaModelManager.getExternalManager().refreshReferences(projects, null);"]}], "num": 46635}