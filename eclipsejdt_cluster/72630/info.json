{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "926361e41cac88a5d042f35709f77072", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d304ed4de0325584e60621db13099e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public char[] getCurrentIdentifierSource()", "signatureAfterChange": " public char[] getCurrentIdentifierSource()", "diff": ["-\tif (completionIdentifier == null){", "-\t\tif (cursorLocation < startPosition && currentPosition == startPosition){ // fake empty identifier got issued", "+\tif (this.completionIdentifier == null){", "+\t\tif (this.cursorLocation < this.startPosition && this.currentPosition == this.startPosition){ // fake empty identifier got issued", "-\t\t\tcompletedIdentifierStart = startPosition;", "-\t\t\tcompletedIdentifierEnd = completedIdentifierStart - 1;\t\t\t", "-\t\t\treturn completionIdentifier = EmptyCompletionIdentifier;\t\t\t\t\t", "+\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\tthis.completedIdentifierEnd = this.completedIdentifierStart - 1;\t\t\t", "+\t\t\treturn this.completionIdentifier = EmptyCompletionIdentifier;\t\t\t\t\t", "-\t\tif (cursorLocation+1 >= startPosition && cursorLocation < currentPosition){", "+\t\tif (this.cursorLocation+1 >= this.startPosition && this.cursorLocation < this.currentPosition){", "-\t\t\tcompletedIdentifierStart = startPosition;", "-\t\t\tcompletedIdentifierEnd = currentPosition - 1;", "-\t\t\tif (withoutUnicodePtr != 0){\t\t\t// check unicode scenario", "-\t\t\t\tSystem.arraycopy(withoutUnicodeBuffer, 1, completionIdentifier = new char[withoutUnicodePtr], 0, withoutUnicodePtr);", "+\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\tif (this.withoutUnicodePtr != 0){\t\t\t// check unicode scenario", "+\t\t\t\tSystem.arraycopy(this.withoutUnicodeBuffer, 1, this.completionIdentifier = new char[this.withoutUnicodePtr], 0, this.withoutUnicodePtr);", "-\t\t\t\tint length = cursorLocation + 1 - startPosition;", "+\t\t\t\tint length = this.cursorLocation + 1 - this.startPosition;", "-\t\t\t\tSystem.arraycopy(source, startPosition, (completionIdentifier = new char[length]), 0, length);", "+\t\t\t\tSystem.arraycopy(this.source, this.startPosition, (this.completionIdentifier = new char[length]), 0, length);", "-\t\t\treturn completionIdentifier;", "+\t\t\treturn this.completionIdentifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b035870564548e773772f974dc7502f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "418d08685e8bc0508d05dda65dd277f56261854f", "commitAfterChange": "2d42c7f71ce65658f51f1f08922e1c6e3b9d54f4", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 73, "signatureBeforeChange": " private final boolean atLambdaParameterList()", "signatureAfterChange": " private final boolean atLambdaParameterList()", "diff": ["-}", "-private final boolean atLambdaParameterList() {", "-", "-\t/* The cursor is just past '(' and the parser is parsing a primary expression. Look ahead and answer true", "-\t   if we are at the head of a lambda parameter list and false otherwise.", "-\t*/ ", "-", "-\tint savedCurrentPosition = this.currentPosition;", "-\tint savedStartPosition = this.startPosition;", "-\tchar savedCurrentCharacter = this.currentCharacter;", "-\tchar[] savedWithoutUnicodeBuffer = null;", "-\tint savedWithoutUnicodePtr = this.withoutUnicodePtr;", "-\tif (savedWithoutUnicodePtr != 0) {", "-\t\tint length = this.withoutUnicodeBuffer.length;", "-\t\tSystem.arraycopy(this.withoutUnicodeBuffer, 0, savedWithoutUnicodeBuffer = new char [length], 0, length);", "-\t}", "-\t", "-\tboolean atLambda = false;", "-\t", "-\ttry {", "-\t\ttry {", "-\t\t\tjumpOver('(', ')', blackListedTokens);", "-\t\t} finally {", "-\t\t\tif (this.currentCharacter == ')') {", "-\t\t\t\tboolean whiteSpace;", "-\t\t\t\tdo {", "-\t\t\t\t\tthis.startPosition = this.currentPosition;", "-\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\twhiteSpace = jumpOverUnicodeWhiteSpace();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\twhiteSpace = CharOperation.isWhitespace(this.currentCharacter);", "-\t\t\t\t\t}", "-\t\t\t\t} while (whiteSpace);", "-\t\t\t\tatLambda =  this.currentCharacter == '-' && getNextChar('>');", "-\t\t\t}", "-\t\t}", "-\t} catch (Exception e) {", "-\t\t// ignore", "-\t} finally {", "-\t\t// Restore status quo ante and return suitable value.", "-\t\tthis.currentPosition = savedCurrentPosition;", "-\t\tthis.startPosition = savedStartPosition;", "-\t\tthis.currentCharacter = savedCurrentCharacter;", "-\t\tthis.withoutUnicodePtr = savedWithoutUnicodePtr;", "-\t\tif (savedWithoutUnicodePtr != 0) {", "-\t\t\tSystem.arraycopy(savedWithoutUnicodeBuffer, 0, this.withoutUnicodeBuffer, 0, savedWithoutUnicodeBuffer.length);", "-\t\t}", "-\t\t", "-\t}", "-\treturn atLambda;", "-}", "+}", "+private final boolean atLambdaParameterList() { // Did the '(' we saw just now herald a lambda parameter list ?", "+\treturn getVanguardParser().parse(TokenNameARROW);", "+}"]}], "num": 72630}