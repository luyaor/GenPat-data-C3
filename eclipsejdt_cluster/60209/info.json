{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d854fbc8b3d1c028204c9f736dc2238", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40099644113f9a6521af04fc5b92279b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "commitAfterChange": "2575bc1675526f9cf1bae80cf41843bf7eedd3c4", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic MethodBinding[] methods()", "signatureAfterChange": " \tpublic MethodBinding[] methods()", "diff": ["-\t\t    for (int i = 0; i < length; i++)", "+\t\t    CompilerOptions options = this.environment.globalOptions;", "+\t\t\tboolean useNullTypeAnnotations = options.isAnnotationBasedNullAnalysisEnabled && options.sourceLevel >= ClassFileConstants.JDK1_8;", "+\t\t    for (int i = 0; i < length; i++) {", "+\t            if (useNullTypeAnnotations)", "+\t            \tparameterizedMethods[i] = NullAnnotationMatching.checkForContraditions(parameterizedMethods[i], null, null);", "+\t\t    }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774d46e29c21a821a8ef9bfd385cd472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "commitAfterChange": "2575bc1675526f9cf1bae80cf41843bf7eedd3c4", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic MethodBinding[] getMethods(char[] selector)", "signatureAfterChange": " \tpublic MethodBinding[] getMethods(char[] selector)", "diff": ["-\t\t    for (int i = 0; i < length; i++)", "+\t\t    CompilerOptions options = this.environment.globalOptions;", "+\t\t\tboolean useNullTypeAnnotations = options.isAnnotationBasedNullAnalysisEnabled && options.sourceLevel >= ClassFileConstants.JDK1_8;", "+\t\t    for (int i = 0; i < length; i++) {", "+\t            if (useNullTypeAnnotations)", "+\t            \tparameterizedMethods[i] = NullAnnotationMatching.checkForContraditions(parameterizedMethods[i], null, null);", "+\t\t    }"]}], "num": 60209}