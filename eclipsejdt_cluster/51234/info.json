{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c6cdaa7367d4bc7454d6f37e6d3d371", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e0e0bb3af09ea8900a7d0362c98ceda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "ea1fe8ed052821b2b1ca5a7ad0079411db5ede64", "commitAfterChange": "a2a0577109951f3af96b6ee7e6f23d457b52d52d", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationExpression node, Object other)", "signatureAfterChange": " \tpublic boolean match(IntersectionType node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(IntersectionType node, Object other) {", "+\t\tif (!(other instanceof IntersectionType)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tIntersectionType o = (IntersectionType) other;", "+\t\treturn safeSubtreeListMatch(node.types(), o.types());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e86b6ea4ea18835416cc9e782ed41d04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate synchronized Set<ICompilationUnit> discardWorkingCopy(ICompilationUnit wc)", "signatureAfterChange": " \tprivate synchronized List<ICompilationUnit> computeObsoleteHiddenTypes(IFile parentFile, Set<IFile> deletedFiles)", "diff": ["+\t */", "+\tprivate synchronized List<ICompilationUnit> computeObsoleteHiddenTypes(IFile parentFile, Set<IFile> deletedFiles)", "+\t{", "+\t\tList<ICompilationUnit> toDiscard = new ArrayList<ICompilationUnit>();", "+\t\tfor (IFile deletedFile : deletedFiles) {", "+\t\t\tif (_reconcileNonDeps.remove(parentFile, deletedFile)) {", "+\t\t\t\tICompilationUnit wc = _hiddenBuiltTypes.remove(deletedFile);", "+\t\t\t\tif (wc != null) {", "+\t\t\t\t\ttoDiscard.add(wc);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tassert checkIntegrity();", "+\t\treturn toDiscard;", "-\t */", "-\tprivate synchronized Set<ICompilationUnit> discardWorkingCopy(ICompilationUnit wc) {", "-\t\tSet<ICompilationUnit> toDiscard;", "-\t\tICompilationUnit hidingWc = _hiddenBuiltTypes.remove(wc);", "-\t\tif (null != hidingWc) {", "-\t\t\ttoDiscard = Collections.singleton(hidingWc);", "-\t\t}", "-\t\telse {", "-\t\t\ttoDiscard = removeWcChildrenFromMaps(wc);", "-\t\t\tIFile file = (IFile) wc.getResource();", "-\t\t\t_parentToGenWorkingCopies.removeKey(file);", "-\t\t\t_workingCopies.remove(wc);", "-\t\t\ttoDiscard.add(wc);", "-\t\t}", "-\t\tassert checkIntegrity();", "-\t\treturn toDiscard;", "-\t}"]}], "num": 51234}