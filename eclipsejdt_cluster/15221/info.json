{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f7c170d500a12ad369b0bbbfe4a956b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e378aeb7b064f9d479f92ddbbced05f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "41de7547cd0b25c1246589b4554509ae324d796a", "commitAfterChange": "ae9c2f31a90b47398d8d35cc3e43c6bf47ddbbd7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\tif (CharOperation.prefixEquals(methodName, method.selector, true /* do not ignore case */)) {\r", "-\t\t\t\trelevance += CASEMATCHRELEVANCE;\r", "-\t\t\t}\r", "+\t\t\trelevance += computeRelevanceForCaseMatching(methodName, method.selector);\r", "+\t\t\trelevance += computeRelevanceForExpectingType(method.returnType);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5f8e79e171283947f7664c8f1c455e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "41de7547cd0b25c1246589b4554509ae324d796a", "commitAfterChange": "ae9c2f31a90b47398d8d35cc3e43c6bf47ddbbd7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\tif (CharOperation.prefixEquals(fieldName, field.name, true /* do not ignore case */)){\r", "-\t\t\t\trelevance += CASEMATCHRELEVANCE;\t\r", "-\t\t\t}\r", "+\t\t\trelevance += computeRelevanceForCaseMatching(fieldName, field.name);\r", "+\t\t\trelevance += computeRelevanceForExpectingType(field.type);\r"]}], "num": 15221}