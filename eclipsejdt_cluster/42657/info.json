{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6e966ec9b0f8f8f79e236a60cbb8ad3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f33d0d1c6f665b6daafaa5696394e8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "cf0df220bcabd9ab0554652ea6e82dff98ea0448", "commitAfterChange": "15c0d9ce2c57a5a820b317d31ba95f4dca3c8294", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void _testAddNonJavaResourcePackageFragmentRoot() throws JavaModelException, CoreException", "signatureAfterChange": " public void testAddNonJavaResourcePackageFragmentRoot() throws JavaModelException, CoreException", "diff": ["+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=423280.", "+public void testAddNonJavaResourcePackageFragmentRoot() throws JavaModelException, CoreException {", "+\t// get resources of source package fragment root at project level", "+\tIPackageFragmentRoot root = getPackageFragmentRoot(\"JavaProjectTests\", \"\");", "+\tObject[] resources = root.getNonJavaResources();", "+\tassertResourceNamesEqual(", "+\t\t\"unexpected non Java resources\",", "+\t\t\".classpath\\n\" +", "+\t\t\".project\\n\" +", "+\t\t\".settings\",", "+\t\tresources);", "+\tIFile resource = (IFile)resources[0];", "+\tIPath newPath = root.getUnderlyingResource().getFullPath().append(\"TestNonJavaResource.abc\");", "+\ttry {", "+\t\t// copy and rename resource", "+\t\tresource.copy(", "+\t\t\tnewPath,", "+\t\t\ttrue,", "+\t\t\tnull);", "+\t\twaitForManualRefresh();", "+\t\twaitForAutoBuild();", "+\t\t// ensure the new resource is present", "+\t\tresources = root.getNonJavaResources();", "+\t\tassertResourcesEqual(", "+\t\t\t\"incorrect non java resources\",", "+\t\t\t\"/JavaProjectTests/.classpath\\n\" +", "+\t\t\t\"/JavaProjectTests/.project\\n\" +", "+\t\t\t\"/JavaProjectTests/.settings\\n\" +", "+\t\t\t\"/JavaProjectTests/TestNonJavaResource.abc\",", "+\t\t\tresources);", "+\t} finally {", "+\t\t// clean up", "+\t\tdeleteResource(resource.getWorkspace().getRoot().getFile(newPath));", "+\t}", "+}", "-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=423280.", "-public void _testAddNonJavaResourcePackageFragmentRoot() throws JavaModelException, CoreException {", "-\t// get resources of source package fragment root at project level", "-\tIPackageFragmentRoot root = getPackageFragmentRoot(\"JavaProjectTests\", \"\");", "-\tObject[] resources = root.getNonJavaResources();", "-\tassertResourceNamesEqual(", "-\t\t\"unexpected non Java resources\",", "-\t\t\".classpath\\n\" +", "-\t\t\".project\\n\" +", "-\t\t\".settings\",", "-\t\tresources);", "-\tIFile resource = (IFile)resources[0];", "-\tIPath newPath = root.getUnderlyingResource().getFullPath().append(\"TestNonJavaResource.abc\");", "-\ttry {", "-\t\t// copy and rename resource", "-\t\tresource.copy(", "-\t\t\tnewPath,", "-\t\t\ttrue,", "-\t\t\tnull);", "-", "-\t\t// ensure the new resource is present", "-\t\tresources = root.getNonJavaResources();", "-\t\tassertResourcesEqual(", "-\t\t\t\"incorrect non java resources\",", "-\t\t\t\"/JavaProjectTests/.classpath\\n\" +", "-\t\t\t\"/JavaProjectTests/.project\\n\" +", "-\t\t\t\"/JavaProjectTests/.settings\\n\" +", "-\t\t\t\"/JavaProjectTests/TestNonJavaResource.abc\",", "-\t\t\tresources);", "-\t} finally {", "-\t\t// clean up", "-\t\tdeleteResource(resource.getWorkspace().getRoot().getFile(newPath));", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e6c7d82fa652c70b987ee27cff574cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "f7d1bb5ee90e0a0f57325e9e031435c92eedb8fb", "commitAfterChange": "a72edc01c485c4064e3d57e37fb2a83dee49bcbb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testPackageFragmentNonJavaResources() throws JavaModelException", "signatureAfterChange": " public void testPackageFragmentNonJavaResources4() throws JavaModelException", "diff": ["-public void testPackageFragmentNonJavaResources() throws JavaModelException {", "-\tassertEquals(\"incorrect number of non java resources (test case 1)\", 2, resources.length);", "-\t// regular source package without resources", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"\", \"x.y\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 2)\", 0, resources.length);", "-\t// source default package with potentialy resources", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"\", \"\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 3)\", 0, resources.length);", "-\t// regular zip package with resources", "-\t// TO DO", "+ */", "+public void testPackageFragmentNonJavaResources4() throws JavaModelException {\t", "+\tIPackageFragment pkg = getPackageFragment(\"JavaProjectTests\", \"lib.jar\", \"p\");", "+\tObject[] resources = pkg.getNonJavaResources();", "+\tassertResourcesEqual(", "+\t\t\"Unexpected resources\", ", "+\t\t\"\",", "+\t\tresources);", "+}", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"lib.jar\", \"p\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 5)\", 0, resources.length);", "-", "-\t// zip default package with potentialy resources", "-\t// TO DO", "-\t", "-\t// zip default package with potentialy no resources", "-\tpkg = getPackageFragment(\"JavaProjectTests\", \"lib.jar\", \"\");", "-\tresources = pkg.getNonJavaResources();", "-\tassertEquals(\"incorrect number of non java resources (test case 7)\", 0, resources.length);", "-\t"]}], "num": 42657}