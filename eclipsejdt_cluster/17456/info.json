{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1556a3942041592706f8c7b292606142", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8d70c8d2eac88f829c2b7d18147786", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "7388685693d25a815ab114a876a3bc4147f08830", "commitAfterChange": "8108395f7473f446510621ee58607e4f19c63d19", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \t\tprivate void logExtraProblem(CategorizedProblem problem, int localErrorCount, int globalErrorCount)", "signatureAfterChange": "  \t\tprivate void logExtraProblem(CategorizedProblem problem, int localErrorCount, int globalErrorCount)", "diff": ["-\t\t\tString fileName =", "-\t\t\t\toriginatingFileName == null", "-\t\t\t\t? this.main.bind(\"requestor.noFileNameSpecified\")//$NON-NLS-1$", "-\t\t\t\t: new String(originatingFileName);", "-\t\t\tif ((this.tagBits & Logger.EMACS) != 0) {", "-\t\t\t\tString result = fileName", "-\t\t\t\t\t\t+ \":\" //$NON-NLS-1$", "-\t\t\t\t\t\t+ problem.getSourceLineNumber()", "-\t\t\t\t\t\t+ \": \" //$NON-NLS-1$", "-\t\t\t\t\t\t+ (problem.isError() ? this.main.bind(\"output.emacs.error\") : this.main.bind(\"output.emacs.warning\")) //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\t+ \": \" //$NON-NLS-1$", "-\t\t\t\t\t\t+ problem.getMessage();", "-\t\t\t\tthis.printlnErr(result);", "-\t\t\t\tfinal String errorReportSource = errorReportSource(problem, null, this.tagBits);", "-\t\t\t\tthis.printlnErr(errorReportSource);", "+\t\t\tif (originatingFileName == null) {", "+\t\t\t\t// simplified message output", "+\t\t\t\tif (problem.isError()) {", "+\t\t\t\t\tprintErr(this.main.bind(", "+\t\t\t\t\t\t\t\t\"requestor.extraerror\", //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tInteger.toString(globalErrorCount)));", "+\t\t\t\t} else {", "+\t\t\t\t\t// warning / mandatory warning / other", "+\t\t\t\t\tprintErr(this.main.bind(", "+\t\t\t\t\t\t\t\"requestor.extrawarning\", //$NON-NLS-1$", "+\t\t\t\t\t\t\tInteger.toString(globalErrorCount)));", "+\t\t\t\t}", "+\t\t\t\tprintErr(\" \"); //$NON-NLS-1$", "+\t\t\t\tthis.printlnErr(problem.getMessage());", "-\t\t\t\tif (localErrorCount == 0) {", "+\t\t\t\tString fileName = new String(originatingFileName);", "+\t\t\t\tif ((this.tagBits & Logger.EMACS) != 0) {", "+\t\t\t\t\tString result = fileName", "+\t\t\t\t\t\t\t+ \":\" //$NON-NLS-1$", "+\t\t\t\t\t\t\t+ problem.getSourceLineNumber()", "+\t\t\t\t\t\t\t+ \": \" //$NON-NLS-1$", "+\t\t\t\t\t\t\t+ (problem.isError() ? this.main.bind(\"output.emacs.error\") : this.main.bind(\"output.emacs.warning\")) //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t+ \": \" //$NON-NLS-1$", "+\t\t\t\t\t\t\t+ problem.getMessage();", "+\t\t\t\t\tthis.printlnErr(result);", "+\t\t\t\t\tfinal String errorReportSource = errorReportSource(problem, null, this.tagBits);", "+\t\t\t\t\tthis.printlnErr(errorReportSource);", "+\t\t\t\t} else {", "+\t\t\t\t\tif (localErrorCount == 0) {", "+\t\t\t\t\t\tthis.printlnErr(\"----------\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tprintErr(problem.isError() ?", "+\t\t\t\t\t\t\tthis.main.bind(", "+\t\t\t\t\t\t\t\t\t\"requestor.error\", //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tInteger.toString(globalErrorCount),", "+\t\t\t\t\t\t\t\t\tnew String(fileName))", "+\t\t\t\t\t\t\t\t\t: this.main.bind(", "+\t\t\t\t\t\t\t\t\t\t\t\"requestor.warning\", //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\t\tInteger.toString(globalErrorCount),", "+\t\t\t\t\t\t\t\t\t\t\tnew String(fileName)));", "+\t\t\t\t\tfinal String errorReportSource = errorReportSource(problem, null, 0);", "+\t\t\t\t\tthis.printlnErr(errorReportSource);", "+\t\t\t\t\tthis.printlnErr(problem.getMessage());", "-\t\t\t\tprintErr(problem.isError() ?", "-\t\t\t\t\t\tthis.main.bind(", "-\t\t\t\t\t\t\t\t\"requestor.error\", //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tInteger.toString(globalErrorCount),", "-\t\t\t\t\t\t\t\tnew String(fileName))", "-\t\t\t\t\t\t\t\t: this.main.bind(", "-\t\t\t\t\t\t\t\t\t\t\"requestor.warning\", //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\tInteger.toString(globalErrorCount),", "-\t\t\t\t\t\t\t\t\t\tnew String(fileName)));", "-\t\t\t\tfinal String errorReportSource = errorReportSource(problem, null, 0);", "-\t\t\t\tthis.printlnErr(errorReportSource);", "-\t\t\t\tthis.printlnErr(problem.getMessage());", "-\t\t\t\tthis.printlnErr(\"----------\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ad3c8b859d6a1409634a0d7b4abccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "640de02ed7a46754fc81ecefbe0e3191bb430443", "commitAfterChange": "07fae5581eda38b99c92be21c6474426869ec014", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t\tprivate void logProblem(IProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "signatureAfterChange": "  \t\tprivate void logProblem(IProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "diff": ["-\t\t\tif (localErrorCount == 0) {", "-\t\t\t\tthis.printlnErr(\"----------\"); //$NON-NLS-1$", "+\t\t\tif ((this.tagBits & EMACS) != 0) {", "+\t\t\t\tString result = (new String(problem.getOriginatingFileName())", "+\t\t\t\t\t\t+ \":\" //$NON-NLS-1$", "+\t\t\t\t\t\t+ problem.getSourceLineNumber()", "+\t\t\t\t\t\t+ \": \" //$NON-NLS-1$", "+\t\t\t\t\t\t+ (problem.isError() ? Main.bind(\"output.emacs.error\") : Main.bind(\"output.emacs.warning\")) //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t+ \": \" //$NON-NLS-1$", "+\t\t\t\t\t\t+ problem.getMessage());", "+\t\t\t\tthis.printlnErr(result);", "+\t\t\t} else {", "+\t\t\t\tif (localErrorCount == 0) {", "+\t\t\t\t\tthis.printlnErr(\"----------\"); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\tthis.printlnErr(problem.isError() ?", "+\t\t\t\t\t\tMain.bind(", "+\t\t\t\t\t\t\t\t\"requestor.error\", //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tInteger.toString(globalErrorCount),", "+\t\t\t\t\t\t\t\tnew String(problem.getOriginatingFileName()))", "+\t\t\t\t\t\t\t\t: Main.bind(", "+\t\t\t\t\t\t\t\t\t\t\"requestor.warning\", //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\tInteger.toString(globalErrorCount),", "+\t\t\t\t\t\t\t\t\t\tnew String(problem.getOriginatingFileName())));", "-\t\t\tthis.printlnErr(problem.isError() ?", "-\t\t\t\tMain.bind(", "-\t\t\t\t\t\"requestor.error\", //$NON-NLS-1$", "-\t\t\t\t\tInteger.toString(globalErrorCount),", "-\t\t\t\t\tnew String(problem.getOriginatingFileName()))", "-\t\t\t\t: Main.bind(", "-\t\t\t\t\t\"requestor.warning\", //$NON-NLS-1$", "-\t\t\t\t\tInteger.toString(globalErrorCount),", "-\t\t\t\t\tnew String(problem.getOriginatingFileName())));", "-\t\t\t\tthis.printlnErr(problem.getMessage());", "+\t\t\t\tif ((this.tagBits & EMACS) == 0) this.printlnErr(problem.getMessage());", "-\t\t\tthis.printlnErr(\"----------\"); //$NON-NLS-1$", "+\t\t\tif ((this.tagBits & EMACS) == 0)", "+\t\t\t\tthis.printlnErr(\"----------\"); //$NON-NLS-1$"]}], "num": 17456}