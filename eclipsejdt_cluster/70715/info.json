{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62cb621d4623318f540c8d5172a6f191", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676660d1b59099ee5090bd13a74bf82a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  protected void consumeNormalAnnotation()", "signatureAfterChange": "  protected void consumeNormalAnnotation(boolean isTypeAnnotation)", "diff": ["-protected void consumeNormalAnnotation() {", "-\tsuper.consumeNormalAnnotation();", "+protected void consumeNormalAnnotation(boolean isTypeAnnotation) {", "+\tsuper.consumeNormalAnnotation(isTypeAnnotation);", "-\t\tAnnotation annotation = (Annotation) this.expressionStack[this.expressionPtr];", "+\t\tAnnotation annotation = (Annotation) (isTypeAnnotation ? this.typeAnnotationStack[this.typeAnnotationPtr] : this.expressionStack[this.expressionPtr]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9567113820ced6892ccb0291503c17e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  protected void consumeMarkerAnnotation()", "signatureAfterChange": "  protected void consumeMarkerAnnotation(boolean isTypeAnnotation)", "diff": ["-protected void consumeMarkerAnnotation() {", "-\tsuper.consumeMarkerAnnotation();", "+protected void consumeMarkerAnnotation(boolean isTypeAnnotation) {", "+\tsuper.consumeMarkerAnnotation(isTypeAnnotation);", "-\t\tAnnotation annotation = (Annotation) this.expressionStack[this.expressionPtr];", "+\t\tAnnotation annotation = (Annotation) (isTypeAnnotation ? this.typeAnnotationStack[this.typeAnnotationPtr] : this.expressionStack[this.expressionPtr]);"]}], "num": 70715}