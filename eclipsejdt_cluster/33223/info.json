{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52c85d82494d3b90c8c77cada654e9f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2969a0c326c1e513a84d0279fbff5ae2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "fd230c4ee1ceefd6a4812ebc7de0e734ce8df73c", "commitAfterChange": "e752367433ca417806253a6753c55772428a8bf6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic void diagnoseParse()", "signatureAfterChange": "   \tpublic void diagnoseParse()", "diff": ["-\t\tint forceRecoveryToken = -1;", "+//\t\tint forceRecoveryToken = -1;", "-\t\t\t\tif((tok != TokenNameRBRACE || (forceRecoveryToken != currentToken && (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0))", "-\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.IS_AFTER_JUMP) !=0) {", "-\t\t\t\t\tact = ERROR_ACTION;", "-\t\t\t\t\tif(forceRecoveryToken != currentToken", "-\t\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0) {", "-\t\t\t\t\t\tforceRecoveryAfterLBracketMissing = true;", "-\t\t\t\t\t\tforceRecoveryToken = currentToken;", "-\t\t\t\t\t}", "-\t\t\t\t}", "+//\t\t\t\tif((tok != TokenNameRBRACE || (forceRecoveryToken != currentToken && (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0))", "+//\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.IS_AFTER_JUMP) !=0) {", "+//\t\t\t\t\tact = ERROR_ACTION;", "+//\t\t\t\t\tif(forceRecoveryToken != currentToken", "+//\t\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0) {", "+//\t\t\t\t\t\tforceRecoveryAfterLBracketMissing = true;", "+//\t\t\t\t\t\tforceRecoveryToken = currentToken;", "+//\t\t\t\t\t}", "+//\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7d25808e129685956e73002ed0acb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   \tpublic void diagnoseParse()", "signatureAfterChange": "   \tpublic void diagnoseParse()", "diff": ["+\t\t", "+\t\tboolean forceRecoveryAfterLBracketMissing = false;", "+\t\tint forceRecoveryToken = -1;", "+\t\t\t\tif((tok != TokenNameRBRACE || (forceRecoveryToken != currentToken && (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0))", "+\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.IS_AFTER_JUMP) !=0) {", "+\t\t\t\t\tact = ERROR_ACTION;", "+\t\t\t\t\tif(forceRecoveryToken != currentToken", "+\t\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0) {", "+\t\t\t\t\t\tforceRecoveryAfterLBracketMissing = true;", "+\t\t\t\t\t\tforceRecoveryToken = currentToken;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t", "-\t\t\t\tRepairCandidate candidate = errorRecovery(currentToken);", "+\t\t\t\tRepairCandidate candidate = errorRecovery(currentToken, forceRecoveryAfterLBracketMissing);", "+\t\t\t\t", "+\t\t\t\tforceRecoveryAfterLBracketMissing = false;"]}], "num": 33223}