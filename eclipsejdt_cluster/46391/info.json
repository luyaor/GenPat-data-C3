{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "823af8059e5184418a9aebb4ee6ed397", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304713a967bf922c593ad8681ffc1969", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 613, "methodNumberAfterChange": 613, "signatureBeforeChange": " public void testCompletionImportedType2() throws JavaModelException", "signatureAfterChange": " public void testCompletionImportedType2() throws JavaModelException", "diff": ["-    ICompilationUnit aType1 = null;", "-    ICompilationUnit aType2 = null;", "-    ICompilationUnit aType3 = null;", "-    try {", "-    \taType1 = getWorkingCopy(", "-\t            \"/Completion/src/test/imported1/ZZZZ.java\",", "-\t            \"package test.imported1;\"+", "-\t            \"public class ZZZZ {\\n\"+", "-\t            \"  \\n\"+", "-\t            \"}\");", "-    \taType2 = getWorkingCopy(", "-\t            \"/Completion/src/test/imported2/ZZZZ.java\",", "-\t            \"package test.imported2;\"+", "-\t            \"public class ZZZZ {\\n\"+", "-\t            \"  \\n\"+", "-\t            \"}\");", "-    \taType3 = getWorkingCopy(", "-\t            \"/Completion/src/test/imported3/ZZZZ.java\",", "-\t            \"package test.imported3;\"+", "-\t            \"public class ZZZZ {\\n\"+", "-\t            \"  \\n\"+", "-\t            \"}\");", "-    \t", "-    \tthis.wc = getWorkingCopy(", "-            \"/Completion/src/test/CompletionImportedType2.java\",", "-            \"package test;\"+", "-            \"import test.imported1.*;\"+", "-            \"import test.imported2.*;\"+", "-            \"import test.imported3.*;\"+", "-            \"public class CompletionImportedType2 {\"+", "-            \"  ZZZ\\n\"+", "-            \"}\");", "+\tthis.workingCopies = new ICompilationUnit[4];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/test/imported1/ZZZZ.java\",", "+\t\t\"package test.imported1;\"+", "+\t\t\"public class ZZZZ {\\n\"+", "+\t\t\"  \\n\"+", "+\t\t\"}\");", "+\tthis.workingCopies[1] = getWorkingCopy(", "+\t\t\"/Completion/src/test/imported2/ZZZZ.java\",", "+\t\t\"package test.imported2;\"+", "+\t\t\"public class ZZZZ {\\n\"+", "+\t\t\"  \\n\"+", "+\t\t\"}\");", "+\tthis.workingCopies[2] = getWorkingCopy(", "+\t\t\"/Completion/src/test/imported3/ZZZZ.java\",", "+\t\t\"package test.imported3;\"+", "+\t\t\"public class ZZZZ {\\n\"+", "+\t\t\"  \\n\"+", "+\t\t\"}\");", "-\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-\t    String str = this.wc.getSource();", "-\t    String completeBehind = \"ZZZ\";", "-\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\t    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+\tthis.workingCopies[3] = getWorkingCopy(", "+\t\t\"/Completion/src/test/CompletionImportedType2.java\",", "+\t\t\"package test;\"+", "+\t\t\"import test.imported1.*;\"+", "+\t\t\"import test.imported2.*;\"+", "+\t\t\"import test.imported3.*;\"+", "+\t\t\"public class CompletionImportedType2 {\"+", "+\t\t\"  ZZZ\\n\"+", "+\t\t\"}\");", "-\t\tassertResults(", "-\t\t\t\t\"ZZZ[POTENTIAL_METHOD_DECLARATION]{ZZZ, Ltest.CompletionImportedType2;, ()V, ZZZ, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZZZ[TYPE_REF]{test.imported1.ZZZZ, test.imported1, Ltest.imported1.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZZZ[TYPE_REF]{test.imported2.ZZZZ, test.imported2, Ltest.imported2.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZZZ[TYPE_REF]{test.imported3.ZZZZ, test.imported3, Ltest.imported3.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t\t\trequestor.getResults());", "-\t} finally {", "-\t\tif(aType1 != null) {", "-\t\t\taType1.discardWorkingCopy();", "-\t\t}", "-\t\tif(aType2 != null) {", "-\t\t\taType2.discardWorkingCopy();", "-\t\t}", "-\t\tif(aType3 != null) {", "-\t\t\taType3.discardWorkingCopy();", "-\t\t}", "-\t}", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[3].getSource();", "+\tString completeBehind = \"ZZZ\";", "+\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\tthis.workingCopies[3].codeComplete(cursorLocation, requestor, this.wcOwner);", "+", "+\tassertResults(", "+\t\t\t\"ZZZ[POTENTIAL_METHOD_DECLARATION]{ZZZ, Ltest.CompletionImportedType2;, ()V, ZZZ, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"ZZZZ[TYPE_REF]{test.imported1.ZZZZ, test.imported1, Ltest.imported1.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"ZZZZ[TYPE_REF]{test.imported2.ZZZZ, test.imported2, Ltest.imported2.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"ZZZZ[TYPE_REF]{test.imported3.ZZZZ, test.imported3, Ltest.imported3.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc99b0c125d9ad8ccc290e93dd52f305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 614, "methodNumberAfterChange": 614, "signatureBeforeChange": " public void testCompletionImportedType3() throws JavaModelException", "signatureAfterChange": " public void testCompletionImportedType3() throws JavaModelException", "diff": ["-    ICompilationUnit aType1 = null;", "-    ICompilationUnit aType2 = null;", "-    ICompilationUnit aType3 = null;", "-    try {", "-    \taType1 = getWorkingCopy(", "-\t            \"/Completion/src/test/imported1/ZZZZ.java\",", "-\t            \"package test.imported1;\"+", "-\t            \"public class ZZZZ {\\n\"+", "-\t            \"  \\n\"+", "-\t            \"}\");", "-    \taType2 = getWorkingCopy(", "-\t            \"/Completion/src/test/imported2/ZZZZ.java\",", "-\t            \"package test.imported2;\"+", "-\t            \"public class ZZZZ {\\n\"+", "-\t            \"  \\n\"+", "-\t            \"}\");", "-    \taType3 = getWorkingCopy(", "-\t            \"/Completion/src/test/imported3/ZZZZ.java\",", "-\t            \"package test.imported3;\"+", "-\t            \"public class ZZZZ {\\n\"+", "-\t            \"  \\n\"+", "-\t            \"}\");", "-    \t", "-    \tthis.wc = getWorkingCopy(", "-            \"/Completion/src/test/CompletionImportedType3.java\",", "-            \"package test;\"+", "-            \"import test.imported2.*;\"+", "-            \"public class CompletionImportedType3 {\"+", "-            \"  ZZZ\\n\"+", "-            \"}\");", "+\tthis.workingCopies = new ICompilationUnit[4];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/test/imported1/ZZZZ.java\",", "+\t\t\"package test.imported1;\"+", "+\t\t\"public class ZZZZ {\\n\"+", "+\t\t\"  \\n\"+", "+\t\t\"}\");", "+\tthis.workingCopies[1] = getWorkingCopy(", "+\t\t\"/Completion/src/test/imported2/ZZZZ.java\",", "+\t\t\"package test.imported2;\"+", "+\t\t\"public class ZZZZ {\\n\"+", "+\t\t\"  \\n\"+", "+\t\t\"}\");", "+\tthis.workingCopies[2] = getWorkingCopy(", "+\t\t\"/Completion/src/test/imported3/ZZZZ.java\",", "+\t\t\"package test.imported3;\"+", "+\t\t\"public class ZZZZ {\\n\"+", "+\t\t\"  \\n\"+", "+\t\t\"}\");", "-\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-\t    String str = this.wc.getSource();", "-\t    String completeBehind = \"ZZZ\";", "-\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\t    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+\tthis.workingCopies[3] = getWorkingCopy(", "+\t\t\"/Completion/src/test/CompletionImportedType3.java\",", "+\t\t\"package test;\"+", "+\t\t\"import test.imported2.*;\"+", "+\t\t\"public class CompletionImportedType3 {\"+", "+\t\t\"  ZZZ\\n\"+", "+\t\t\t\"}\");", "-\t\tassertResults(", "-\t\t\t\t\"ZZZ[POTENTIAL_METHOD_DECLARATION]{ZZZ, Ltest.CompletionImportedType3;, ()V, ZZZ, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZZZ[TYPE_REF]{test.imported1.ZZZZ, test.imported1, Ltest.imported1.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZZZ[TYPE_REF]{test.imported3.ZZZZ, test.imported3, Ltest.imported3.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZZZ[TYPE_REF]{ZZZZ, test.imported2, Ltest.imported2.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "-\t\t\t\trequestor.getResults());", "-\t} finally {", "-\t\tif(aType1 != null) {", "-\t\t\taType1.discardWorkingCopy();", "-\t\t}", "-\t\tif(aType2 != null) {", "-\t\t\taType2.discardWorkingCopy();", "-\t\t}", "-\t\tif(aType3 != null) {", "-\t\t\taType3.discardWorkingCopy();", "-\t\t}", "-\t}", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[3].getSource();", "+\tString completeBehind = \"ZZZ\";", "+\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\tthis.workingCopies[3].codeComplete(cursorLocation, requestor, this.wcOwner);", "+", "+\tassertResults(", "+\t\t\t\"ZZZ[POTENTIAL_METHOD_DECLARATION]{ZZZ, Ltest.CompletionImportedType3;, ()V, ZZZ, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"ZZZZ[TYPE_REF]{test.imported1.ZZZZ, test.imported1, Ltest.imported1.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"ZZZZ[TYPE_REF]{test.imported3.ZZZZ, test.imported3, Ltest.imported3.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"ZZZZ[TYPE_REF]{ZZZZ, test.imported2, Ltest.imported2.ZZZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());"]}], "num": 46391}