{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e98ec4c95ea562c75eb9aa7a4501cbe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4e6adba443a392914984679358ef0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "e01f7b4e1e11c7fc4bb5261cb6201076d2a4ea6c", "commitAfterChange": "8feea831d932345f8ff5f16d3fbc00e8afac7496", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test008()", "signatureAfterChange": " \tpublic void test008()", "diff": ["-\t\t\t\t\"  // Method descriptor #15 ([Ljava/lang/String;)V\\n\" + ", "-\t\t\t\t\"  // Stack: 2, Locals: 3\\n\" + ", "-\t\t\t\t\"  public static void main(java.lang.String[] args);\\n\" + ", "-\t\t\t\t\"     0  iconst_0\\n\" + ", "-\t\t\t\t\"     1  istore_1 [foo]\\n\" + ", "-\t\t\t\t\"     2  ldc <String \\\"zero\\\"> [16]\\n\" + ", "-\t\t\t\t\"     4  astore_2 [bar]\\n\" + ", "-\t\t\t\t\"     5  getstatic java.lang.System.out : java.io.PrintStream [18]\\n\" + ", "-\t\t\t\t\"     8  iload_1 [foo]\\n\" + ", "-\t\t\t\t\"     9  ifeq 19\\n\" + ", "-\t\t\t\t\"    12  iload_1 [foo]\\n\" + ", "-\t\t\t\t\"    13  invokestatic java.lang.Integer.valueOf(int) : java.lang.Integer [24]\\n\" + ", "-\t\t\t\t\"    16  goto 20\\n\" + ", "-\t\t\t\t\"    19  aload_2 [bar]\\n\" + ", "-\t\t\t\t\"    20  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [30]\\n\" + ", "-\t\t\t\t\"    23  return\\n\" + ", "-\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\"        [pc: 0, line: 3]\\n\" + ", "-\t\t\t\t\"        [pc: 2, line: 4]\\n\" + ", "-\t\t\t\t\"        [pc: 5, line: 5]\\n\" + ", "-\t\t\t\t\"        [pc: 23, line: 6]\\n\" + ", "-\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\"        [pc: 0, pc: 24] local: args index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\t\t\"        [pc: 2, pc: 24] local: foo index: 1 type: int\\n\" + ", "-\t\t\t\t\"        [pc: 5, pc: 24] local: bar index: 2 type: java.lang.String\\n\" + ", "-\t\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "-\t\t\t\t\"        [pc: 19, full, stack: {java.io.PrintStream}, locals: {java.lang.String[], int, java.lang.String}]\\n\" + ", "-\t\t\t\t\"        [pc: 20, full, stack: {java.io.PrintStream, java.lang.Object}, locals: {java.lang.String[], int, java.lang.String}]\\n\" + ", "-\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\"  // Method descriptor #46 (Ljava/lang/Comparable;)V\\n\" + ", "-\t\t\t\t\"  // Signature: <T::Ljava/lang/Comparable<*>;>(TT;)V\\n\" + ", "-\t\t\t\t\"  // Stack: 2, Locals: 3\\n\" + ", "-\t\t\t\t\"  void foo(java.lang.Comparable foo);\\n\" + ", "-\t\t\t\t\"     0  aconst_null\\n\" + ", "-\t\t\t\t\"     1  astore_2 [bar]\\n\" + ", "-\t\t\t\t\"     2  getstatic java.lang.System.out : java.io.PrintStream [18]\\n\" + ", "-\t\t\t\t\"     5  aload_1 [foo]\\n\" + ", "-\t\t\t\t\"     6  ifnull 13\\n\" + ", "-\t\t\t\t\"     9  aload_1 [foo]\\n\" + ", "-\t\t\t\t\"    10  goto 14\\n\" + ", "-\t\t\t\t\"    13  aload_2 [bar]\\n\" + ", "-\t\t\t\t\"    14  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [30]\\n\" + ", "-\t\t\t\t\"    17  return\\n\" + ", "-\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\"        [pc: 0, line: 8]\\n\" + ", "-\t\t\t\t\"        [pc: 2, line: 9]\\n\" + ", "-\t\t\t\t\"        [pc: 17, line: 10]\\n\" + ", "-\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\"        [pc: 0, pc: 18] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\"        [pc: 0, pc: 18] local: foo index: 1 type: java.lang.Comparable\\n\" + ", "-\t\t\t\t\"        [pc: 2, pc: 18] local: bar index: 2 type: java.lang.Comparable\\n\" + ", "-\t\t\t\t\"      Local variable type table:\\n\" + ", "-\t\t\t\t\"        [pc: 0, pc: 18] local: foo index: 1 type: T\\n\" + ", "-\t\t\t\t\"        [pc: 2, pc: 18] local: bar index: 2 type: T\\n\" + ", "-\t\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "-\t\t\t\t\"        [pc: 13, full, stack: {java.io.PrintStream}, locals: {X, java.lang.Comparable, java.lang.Comparable}]\\n\" + ", "-\t\t\t\t\"        [pc: 14, full, stack: {java.io.PrintStream, java.lang.Comparable}, locals: {X, java.lang.Comparable, java.lang.Comparable}]\\n\";", "+\t\t\t\t\t\"  // Method descriptor #15 ([Ljava/lang/String;)V\\n\" + ", "+\t\t\t\t\t\"  // Stack: 2, Locals: 3\\n\" + ", "+\t\t\t\t\t\"  public static void main(java.lang.String[] args);\\n\" + ", "+\t\t\t\t\t\"     0  iconst_0\\n\" + ", "+\t\t\t\t\t\"     1  istore_1 [foo]\\n\" + ", "+\t\t\t\t\t\"     2  ldc <String \\\"zero\\\"> [16]\\n\" + ", "+\t\t\t\t\t\"     4  astore_2 [bar]\\n\" + ", "+\t\t\t\t\t\"     5  getstatic java.lang.System.out : java.io.PrintStream [18]\\n\" + ", "+\t\t\t\t\t\"     8  iload_1 [foo]\\n\" + ", "+\t\t\t\t\t\"     9  ifeq 19\\n\" + ", "+\t\t\t\t\t\"    12  iload_1 [foo]\\n\" + ", "+\t\t\t\t\t\"    13  invokestatic java.lang.Integer.valueOf(int) : java.lang.Integer [24]\\n\" + ", "+\t\t\t\t\t\"    16  goto 20\\n\" + ", "+\t\t\t\t\t\"    19  aload_2 [bar]\\n\" + ", "+\t\t\t\t\t\"    20  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [30]\\n\" + ", "+\t\t\t\t\t\"    23  return\\n\" + ", "+\t\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\t\"        [pc: 0, line: 3]\\n\" + ", "+\t\t\t\t\t\"        [pc: 2, line: 4]\\n\" + ", "+\t\t\t\t\t\"        [pc: 5, line: 5]\\n\" + ", "+\t\t\t\t\t\"        [pc: 23, line: 6]\\n\" + ", "+\t\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\t\"        [pc: 0, pc: 24] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\t\t\"        [pc: 2, pc: 24] local: foo index: 1 type: int\\n\" + ", "+\t\t\t\t\t\"        [pc: 5, pc: 24] local: bar index: 2 type: java.lang.String\\n\" + ", "+\t\t\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\t\t\"        [pc: 19, full, stack: {java.io.PrintStream}, locals: {java.lang.String[], int, java.lang.String}]\\n\" + ", "+\t\t\t\t\t\"        [pc: 20, full, stack: {java.io.PrintStream, java.lang.Comparable}, locals: {java.lang.String[], int, java.lang.String}]\\n\" + ", "+\t\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\t\"  // Method descriptor #48 (Ljava/lang/Comparable;)V\\n\" + ", "+\t\t\t\t\t\"  // Signature: <T::Ljava/lang/Comparable<*>;>(TT;)V\\n\" + ", "+\t\t\t\t\t\"  // Stack: 2, Locals: 3\\n\" + ", "+\t\t\t\t\t\"  void foo(java.lang.Comparable foo);\\n\" + ", "+\t\t\t\t\t\"     0  aconst_null\\n\" + ", "+\t\t\t\t\t\"     1  astore_2 [bar]\\n\" + ", "+\t\t\t\t\t\"     2  getstatic java.lang.System.out : java.io.PrintStream [18]\\n\" + ", "+\t\t\t\t\t\"     5  aload_1 [foo]\\n\" + ", "+\t\t\t\t\t\"     6  ifnull 13\\n\" + ", "+\t\t\t\t\t\"     9  aload_1 [foo]\\n\" + ", "+\t\t\t\t\t\"    10  goto 14\\n\" + ", "+\t\t\t\t\t\"    13  aload_2 [bar]\\n\" + ", "+\t\t\t\t\t\"    14  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [30]\\n\" + ", "+\t\t\t\t\t\"    17  return\\n\" + ", "+\t\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\t\"        [pc: 0, line: 8]\\n\" + ", "+\t\t\t\t\t\"        [pc: 2, line: 9]\\n\" + ", "+\t\t\t\t\t\"        [pc: 17, line: 10]\\n\" + ", "+\t\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\t\"        [pc: 0, pc: 18] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\t\"        [pc: 0, pc: 18] local: foo index: 1 type: java.lang.Comparable\\n\" + ", "+\t\t\t\t\t\"        [pc: 2, pc: 18] local: bar index: 2 type: java.lang.Comparable\\n\" + ", "+\t\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\t\"        [pc: 0, pc: 18] local: foo index: 1 type: T\\n\" + ", "+\t\t\t\t\t\"        [pc: 2, pc: 18] local: bar index: 2 type: T\\n\" + ", "+\t\t\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\t\t\"        [pc: 13, full, stack: {java.io.PrintStream}, locals: {X, java.lang.Comparable, java.lang.Comparable}]\\n\" + ", "+\t\t\t\t\t\"        [pc: 14, full, stack: {java.io.PrintStream, java.lang.Comparable}, locals: {X, java.lang.Comparable, java.lang.Comparable}]\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4fb7491804b524a48eb2fdc2f4b9687", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void test008()", "signatureAfterChange": " \tpublic void test008()", "diff": ["-\t", "+\t//https://bugs.eclipse.org/bugs/show_bug.cgi?id=141252", "+\t\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\t\t\"\t\tint foo = 0;\\n\" + ", "+\t\t\t\t\t\"\t\tString bar = \\\"zero\\\";\\n\" + ", "+\t\t\t\t\t\"\t\tSystem.out.println((foo != 0) ? foo : bar);\\n\" + ", "+\t\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\t\"\t<T extends Comparable<?>> void foo(T foo) {\\n\" + ", "+\t\t\t\t\t\"\t\tT bar = null;\\n\" + ", "+\t\t\t\t\t\"\t\tSystem.out.println((foo != null) ? foo : bar);\\n\" + ", "+\t\t\t\t\t\"\t}\t\\n\" + ", "+\t\t\t\t\t\"}\\n\",", "+\t\t\t\t},", "+\t\t\t\t\"zero\");", "+\t\t\t\t", "+\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\t\tString actualOutput = null;", "+\t\t\ttry {", "+\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\t\tactualOutput =", "+\t\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\t\"\\n\",", "+\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "+\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "+\t\t\t\tassertTrue(\"ClassFormatException\", false);", "+\t\t\t} catch (IOException e) {", "+\t\t\t\tassertTrue(\"IOException\", false);", "+\t\t\t}", "+\t\t\t", "+\t\t\tString expectedOutput = ", "+\t\t\t\t\"  // Method descriptor #15 ([Ljava/lang/String;)V\\n\" + ", "+\t\t\t\t\"  // Stack: 2, Locals: 3\\n\" + ", "+\t\t\t\t\"  public static void main(java.lang.String[] args);\\n\" + ", "+\t\t\t\t\"     0  iconst_0\\n\" + ", "+\t\t\t\t\"     1  istore_1 [foo]\\n\" + ", "+\t\t\t\t\"     2  ldc <String \\\"zero\\\"> [16]\\n\" + ", "+\t\t\t\t\"     4  astore_2 [bar]\\n\" + ", "+\t\t\t\t\"     5  getstatic java.lang.System.out : java.io.PrintStream [18]\\n\" + ", "+\t\t\t\t\"     8  iload_1 [foo]\\n\" + ", "+\t\t\t\t\"     9  ifeq 19\\n\" + ", "+\t\t\t\t\"    12  iload_1 [foo]\\n\" + ", "+\t\t\t\t\"    13  invokestatic java.lang.Integer.valueOf(int) : java.lang.Integer [24]\\n\" + ", "+\t\t\t\t\"    16  goto 20\\n\" + ", "+\t\t\t\t\"    19  aload_2 [bar]\\n\" + ", "+\t\t\t\t\"    20  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [30]\\n\" + ", "+\t\t\t\t\"    23  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 3]\\n\" + ", "+\t\t\t\t\"        [pc: 2, line: 4]\\n\" + ", "+\t\t\t\t\"        [pc: 5, line: 5]\\n\" + ", "+\t\t\t\t\"        [pc: 23, line: 6]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 24] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\t\"        [pc: 2, pc: 24] local: foo index: 1 type: int\\n\" + ", "+\t\t\t\t\"        [pc: 5, pc: 24] local: bar index: 2 type: java.lang.String\\n\" + ", "+\t\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\t\"        [pc: 19, full, stack: {java.io.PrintStream}, locals: {java.lang.String[], int, java.lang.String}]\\n\" + ", "+\t\t\t\t\"        [pc: 20, full, stack: {java.io.PrintStream, java.lang.Comparable}, locals: {java.lang.String[], int, java.lang.Comparable}]\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #48 (Ljava/lang/Comparable;)V\\n\" + ", "+\t\t\t\t\"  // Signature: <T::Ljava/lang/Comparable<*>;>(TT;)V\\n\" + ", "+\t\t\t\t\"  // Stack: 2, Locals: 3\\n\" + ", "+\t\t\t\t\"  void foo(java.lang.Comparable foo);\\n\" + ", "+\t\t\t\t\"     0  aconst_null\\n\" + ", "+\t\t\t\t\"     1  astore_2 [bar]\\n\" + ", "+\t\t\t\t\"     2  getstatic java.lang.System.out : java.io.PrintStream [18]\\n\" + ", "+\t\t\t\t\"     5  aload_1 [foo]\\n\" + ", "+\t\t\t\t\"     6  ifnull 13\\n\" + ", "+\t\t\t\t\"     9  aload_1 [foo]\\n\" + ", "+\t\t\t\t\"    10  goto 14\\n\" + ", "+\t\t\t\t\"    13  aload_2 [bar]\\n\" + ", "+\t\t\t\t\"    14  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [30]\\n\" + ", "+\t\t\t\t\"    17  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 8]\\n\" + ", "+\t\t\t\t\"        [pc: 2, line: 9]\\n\" + ", "+\t\t\t\t\"        [pc: 17, line: 10]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 18] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 18] local: foo index: 1 type: java.lang.Comparable\\n\" + ", "+\t\t\t\t\"        [pc: 2, pc: 18] local: bar index: 2 type: java.lang.Comparable\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 18] local: foo index: 1 type: T\\n\" + ", "+\t\t\t\t\"        [pc: 2, pc: 18] local: bar index: 2 type: T\\n\" + ", "+\t\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\t\"        [pc: 13, full, stack: {java.io.PrintStream}, locals: {X, java.lang.Comparable, java.lang.Comparable}]\\n\" + ", "+\t\t\t\t\"        [pc: 14, full, stack: {java.io.PrintStream, java.lang.Comparable}, locals: {X, java.lang.Comparable, java.lang.Comparable}]\\n\";", "+\t\t\t", "+\t\t\tint index = actualOutput.indexOf(expectedOutput);", "+\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\t\tSystem.out.println(Util.displayString(actualOutput, 2));", "+\t\t\t}", "+\t\t\tif (index == -1) {", "+\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, actualOutput);", "+\t\t\t}", "+\t}"]}], "num": 19156}