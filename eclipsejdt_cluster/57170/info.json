{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d64249f6c7c484c5e2cfa3f94152751d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53666481d04f54f768ff8903d04d715f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/SourceFile.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic SourceFile(String fileName, String initialTypeName, String encoding)", "signatureAfterChange": "  public char[] getMainTypeName()", "diff": ["-\t", "-\tpublic SourceFile(String fileName, String initialTypeName, String encoding) {", "-\t\tthis.fileName = fileName.toCharArray();", "-\t\tCharOperation.replace(this.fileName, '\\\\', '/');", "-\t", "-\t\tchar[] typeName = initialTypeName.toCharArray();", "-\t\tint lastIndex = CharOperation.lastIndexOf('/', typeName);", "-\t\tthis.mainTypeName = CharOperation.subarray(typeName, lastIndex + 1, -1);", "-\t\tthis.packageName = CharOperation.splitOn('/', typeName, 0, lastIndex);", "-\t", "-\t\tthis.encoding = encoding;", "+", "+public char[] getMainTypeName() {", "+\tchar[] typeName = initialTypeName.toCharArray();", "+\tint lastIndex = CharOperation.lastIndexOf('/', typeName);", "+\treturn CharOperation.subarray(typeName, lastIndex + 1, -1);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841433dba8614affa64352a1cc6941dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-", "-\t// need enclosing type to access type variables", "-\tchar[] enclosingTypeName = binaryType.getEnclosingTypeName();", "-\tif (enclosingTypeName != null) {", "-\t\t// attempt to find the enclosing type if it exists in the cache (otherwise - resolve it when requested)", "-\t\tthis.enclosingType = environment.getTypeFromConstantPoolName(enclosingTypeName, 0, -1, true); // pretend parameterized to avoid raw", "-\t\tthis.tagBits |= MemberTypeMask;   // must be a member type not a top-level or local type", "-\t\tthis.tagBits |= \tHasUnresolvedEnclosingType;", "-\t\tif (this.enclosingType().isStrictfp())", "-\t\t\tthis.modifiers |= AccStrictfp;", "-\t\tif (this.enclosingType().isDeprecated())", "-\t\t\tthis.modifiers |= AccDeprecatedImplicitly;", "-\t}"]}], "num": 57170}