{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ba4adf77f031957f1ae8dc850e084d1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0651f2dff6b963febbbf24e3ef616846", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": " protected void report(IResource resource, int sourceStart, int sourceEnd, IJavaElement element, int accuracy) throws CoreException", "signatureAfterChange": "  protected void report(IResource resource, int sourceStart, int sourceEnd, IJavaElement element, int accuracy, SearchParticipant participant) throws CoreException", "diff": ["-protected void report(IResource resource, int sourceStart, int sourceEnd, IJavaElement element, int accuracy) throws CoreException {", "+", "+protected void report(IResource resource, int sourceStart, int sourceEnd, IJavaElement element, int accuracy, SearchParticipant participant) throws CoreException {", "-\tthis.collector.accept(resource, sourceStart, sourceEnd + 1, element, accuracy);", "+\tString documentPath = element.getPath().toString();", "+\tSearchMatch match = new JavaSearchMatch(resource, element, documentPath, accuracy, participant, sourceStart, sourceEnd+1, -1);", "+\tthis.requestor.acceptSearchMatch(match);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5698baf8b32a6d2461951e3643b80c49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9f4083645d70a432f33ad4b76043e33c22dce66a", "commitAfterChange": "62b1363351c6bbbf8add0db3d16b932995188a11", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  public SearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "diff": ["-\treturn newTypeReferenceMatch(enclosingElement, accuracy, offset, length, 0/*exact match*/, reference);", "+\tSearchParticipant participant = getParticipant(); ", "+\tIResource resource = this.currentPossibleMatch.resource;", "+\tboolean insideDocComment = (reference.bits & ASTNode.InsideJavadoc) != 0;", "+\treturn new TypeReferenceMatch(enclosingElement, accuracy, offset, length, insideDocComment, participant, resource);"]}], "num": 66078}