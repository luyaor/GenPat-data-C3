{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "add142123571cb0c9b17ac62a3cc9c28", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0f0219c1a86bad74daf30ef8d6ad277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "b70c37ecf76f05e7ae76a32ba47dec687904996c", "commitAfterChange": "991f76a3733441af275e22b3c172d2ee3c84bb0e", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void testBug70892conform2()", "signatureAfterChange": " \tpublic void testBug70892b()", "diff": ["-\t}", "-\tpublic void testBug70892conform2() {", "-\t\t\t\t\t\"\t/**{@value #field}*/\\n\" + ", "-\t\t\t\t\t\"\tstatic int field;\\n\" + ", "-\t\t\t\t\t\"}\\n\"", "+\t}", "+\tpublic void testBug70892b() {", "+\t\tString[] testFiles = new String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value \\\"invalid\\\"}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field1 = 1;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value <a href=\\\"invalid\\\">invalid</a>} invalid\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field2 = 2;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value #field}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field3 = 3;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value #foo}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field4 = 4;\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * {@value #foo()}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tfinal static int field5 = 5;\\n\" + ", "+\t\t\t\"\tvoid foo() {}\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t};", "+\t\tif (this.complianceLevel.equals(COMPLIANCE_1_3) || this.complianceLevel.equals(COMPLIANCE_1_4)) {", "+\t\t\trunConformTest(testFiles);", "+\t\t} else {", "+\t\t\trunNegativeTest(testFiles,", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value \\\"invalid\\\"}\\r\\n\" + ", "+\t\t\t\t\"\t          ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 7)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value <a href=\\\"invalid\\\">invalid</a>} invalid\\r\\n\" + ", "+\t\t\t\t\"\t          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 11)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value #field}\\r\\n\" + ", "+\t\t\t\t\"\t           ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: field cannot be resolved or is not a field\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 15)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value #foo}\\r\\n\" + ", "+\t\t\t\t\"\t           ^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 19)\\r\\n\" + ", "+\t\t\t\t\"\t* {@value #foo()}\\r\\n\" + ", "+\t\t\t\t\"\t           ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Only static field reference is allowed for @value tag\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7bee1aa66baa24ab29973835bc21971", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "6defd2b79520062f5150164ded77c2d030acc168", "commitAfterChange": "d351702f3561d64a024c15ffbed0faad48ce2838", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void testBug70892negative2()", "signatureAfterChange": " \tpublic void test039()", "diff": ["-\tpublic void testBug70892negative2() {", "+\t}", "+\tpublic void test039() {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\" /**\\n\" + ", "+\t\t\t\t\t\"  * Invalid type parameter reference\\n\" + ", "+\t\t\t\t\t\"  * @param <E Type parameter of class X\\n\" + ", "+\t\t\t\t\t\"  * @param E> Type\\n\" + ", "+\t\t\t\t\t\"  * @param <<E> Type\\n\" + ", "+\t\t\t\t\t\"  * @param <<<E> Type\\n\" + ", "+\t\t\t\t\t\"  * @param <E>> Type\\n\" + ", "+\t\t\t\t\t\"  */\\n\" + ", "+\t\t\t\t\t\" public class X<E> {}\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\t* @param <E Type parameter of class X\\n\" + ", "+\t\t\t\t\"\t         ^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid param tag name\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\t* @param E> Type\\n\" + ", "+\t\t\t\t\"\t         ^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid param tag name\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t* @param <<E> Type\\n\" + ", "+\t\t\t\t\"\t         ^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid param tag name\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t* @param <<<E> Type\\n\" + ", "+\t\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid param tag name\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t* @param <E>> Type\\n\" + ", "+\t\t\t\t\"\t         ^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid param tag name\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tpublic class X<E> {}\\n\" + ", "+\t\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t);", "+\t}"]}], "num": 42294}