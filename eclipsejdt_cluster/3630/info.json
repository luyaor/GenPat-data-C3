{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3745ee1b5b2ea31235bc4a698d1df652", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfc4b392f5fc23a6ec7375d430ab49d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 159, "signatureBeforeChange": " \tpublic void _test0155_try_finally()", "signatureAfterChange": " public void test0505_try_finally()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0155_try_finally() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\tvoid foo(X x) {\\n\" + ", "-\t\t\t\t\"\t\tx = this;\\n\" + ", "-\t\t\t\t\"\t\ttry {\\n\" + ", "-\t\t\t\t\"\t\t\tx = null;\\n\" + ", "-\t\t\t\t\"\t\t} finally {\\n\" + ", "-\t\t\t\t\"\t\t\tif (x == null) {/* */}\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\"\"", "-\t\t);", "-\t}", "+//       initialized (for sure) on line 2.", "+public void test0505_try_finally() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\" void foo(X x) {\\n\" + ", "+\t\t\t\"   x = this;\\n\" + // 1", "+\t\t\t\"   try {\\n\" + ", "+\t\t\t\"     x = null;\\n\" + ", "+\t\t\t\"   } finally {\\n\" + ", "+\t\t\t\"     if (x == null) {/* */}\\n\" + // 2", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\" }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda65febb70c7326064fb6a01fdd08be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic void test0152_try_finally()", "signatureAfterChange": " public void test0502_try_finally()", "diff": ["-\t// null analysis -- try/finally", "-\tpublic void test0152_try_finally() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t try {\\n\" + ", "-\t\t\t\t\"\t\t   System.out.println();\\n\" + // might throw a runtime exception ", "-\t\t\t\t\"\t\t\t o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t finally { /* */ }\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\t\t// still OK because in case of exception this code is ", "-\t\t\t\t\t\t// not reached", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-\t\t);", "-\t}", "+// null analysis -- try/finally", "+public void test0502_try_finally() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    try {\\n\" + ", "+\t\t\t\"      System.out.println();\\n\" + // might throw a runtime exception ", "+\t\t\t\"      o = new Object();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    finally { /* */ }\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t    // still OK because in case of exception this code is ", "+\t\t\t    // not reached", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}"]}], "num": 3630}