{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1defc51d003bc3bdb70c1e64dec98968", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "721532040add320de8dbe514bb92c283", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "4c1d4b601e686baad6c5a6a92ddbbebe0b64a62d", "commitAfterChange": "efbaf5f01b1dd1c4f8135936aa48ce411ca71c6c", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean visit(Block block, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Block block, BlockScope scope)", "diff": ["-\t", "-\t\tString block_brace_position = this.preferences.brace_position_for_block;", "-\t\tformatOpeningBrace(block_brace_position, this.preferences.insert_space_before_opening_brace_in_block);", "-\t\tfinal Statement[] statements = block.statements;", "-\t\tif (statements != null) {", "-\t\t\tthis.scribe.printNewLine();", "-\t\t\tif (this.preferences.indent_statements_compare_to_block) {", "-\t\t\t\tthis.scribe.indent();", "-\t\t\t}", "-\t\t\tformatStatements(scope, statements, true);", "-\t\t\tthis.scribe.printComment();", "-\t", "-\t\t\tif (this.preferences.indent_statements_compare_to_block) {", "-\t\t\t\tthis.scribe.unIndent();", "-\t\t\t}", "-\t\t} else if (this.preferences.insert_new_line_in_empty_block) {", "-\t\t\tthis.scribe.printNewLine();", "-\t\t\tif (this.preferences.indent_statements_compare_to_block) {", "-\t\t\t\tthis.scribe.indent();", "-\t\t\t}", "-\t\t\tthis.scribe.printComment();", "-\t", "-\t\t\tif (this.preferences.indent_statements_compare_to_block) {", "-\t\t\t\tthis.scribe.unIndent();", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif (this.preferences.indent_statements_compare_to_block) {", "-\t\t\t\tthis.scribe.indent();", "-\t\t\t}", "-\t\t\tthis.scribe.printComment();", "-\t", "-\t\t\tif (this.preferences.indent_statements_compare_to_block) {", "-\t\t\t\tthis.scribe.unIndent();", "-\t\t\t}", "-\t\t}", "-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);", "-\t\tthis.scribe.printTrailingComment();", "-\t\tif (DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED.equals(block_brace_position)) {", "-\t\t\tthis.scribe.unIndent();", "-\t\t}\t\t", "-\t\treturn false;\t", "+\t\tformatBlock(block, scope, this.preferences.brace_position_for_block, this.preferences.insert_space_before_opening_brace_in_block);\t", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2151381fc0dae291f66e3ccf83760e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f9b051d5e41bd27efd803711c20da8dcd750758f", "commitAfterChange": "30e745fbf3ea6ef7e0fc020627656bfc553d5256", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope)", "diff": ["-\t\tif (!isMultipleLocalDeclaration(localDeclaration)) {", "-\t\t\tif (localDeclaration.modifiers != NO_MODIFIERS) {", "-\t\t\t\tthis.scribe.printModifiers();", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t", "-\t\t\t/*", "-\t\t\t * Argument type ", "-\t\t\t */\t\t", "-\t\t\tif (localDeclaration.type != null) {", "-\t\t\t\tlocalDeclaration.type.traverse(this, scope);", "-\t\t\t}", "-\t\t\t/*", "-\t\t\t * Print the argument name", "-\t\t \t*/", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); ", "-\t\t} else {", "-\t\t\t/*", "-\t\t\t * Print the argument name", "-\t\t \t*/", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, false); ", "-\t\t}", "-\t\t/*", "-\t\t * Check for extra dimensions", "-\t\t */", "-\t\tint extraDimensions = getExtraDimension();", "-\t\tif (extraDimensions != 0) {", "-\t\t\t for (int index = 0; index < extraDimensions; index++) {", "-\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t }", "-\t\t}", "-\t", "-\t\tif (localDeclaration.initialization != null) {", "-\t\t\t/*", "-\t\t\t * Print the method name", "-\t\t\t */\t", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "-\t\t\tif (this.preferences.insert_space_after_assignment_operators) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}\t\t\t ", "-\t\t\tlocalDeclaration.initialization.traverse(this, scope);", "-\t\t}", "-", "-\t\tif (isPartOfMultipleLocalDeclaration()) {", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_multiple_local_declarations); ", "-\t\t\tif (this.preferences.insert_space_after_comma_in_multiple_local_declarations) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t}", "+\t\tformatLocalDeclaration(localDeclaration, scope, this.preferences.insert_space_before_comma_in_multiple_local_declarations, this.preferences.insert_space_after_comma_in_multiple_local_declarations);"]}], "num": 18829}