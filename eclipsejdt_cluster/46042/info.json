{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb45140081c7f40ff688eb9bf6b7a6da", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a454928218d87eb5b999862ec4d2f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "1b80cae94595518122618b458eed60915f76d171", "commitAfterChange": "92d6141bb346285ff13c588faa5a059cb9f83b3d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["-\t\ttryBlock.printStatement(indent + 1, output);", "+\t\tthis.tryBlock.printStatement(indent + 1, output);", "-\t\tif (catchBlocks != null)", "-\t\t\tfor (int i = 0; i < catchBlocks.length; i++) {", "+\t\tif (this.catchBlocks != null)", "+\t\t\tfor (int i = 0; i < this.catchBlocks.length; i++) {", "-\t\t\t\t\tcatchArguments[i].print(0, output).append(\") \"); //$NON-NLS-1$", "-\t\t\t\t\tcatchBlocks[i].printStatement(indent + 1, output);", "+\t\t\t\t\tthis.catchArguments[i].print(0, output).append(\") \"); //$NON-NLS-1$", "+\t\t\t\t\tthis.catchBlocks[i].printStatement(indent + 1, output);", "-\t\tif (finallyBlock != null) {", "+\t\tif (this.finallyBlock != null) {", "-\t\t\tfinallyBlock.printStatement(indent + 1, output);", "+\t\t\tthis.finallyBlock.printStatement(indent + 1, output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9efa4ff79b93a28da404115de85bd620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "1b80cae94595518122618b458eed60915f76d171", "commitAfterChange": "92d6141bb346285ff13c588faa5a059cb9f83b3d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tBlockScope blockScope)", "signatureAfterChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tBlockScope blockScope)", "diff": ["-\t\t\ttryBlock.traverse(visitor, scope);", "-\t\t\tif (catchArguments != null) {", "-\t\t\t\tfor (int i = 0, max = catchBlocks.length; i < max; i++) {", "-\t\t\t\t\tcatchArguments[i].traverse(visitor, scope);", "-\t\t\t\t\tcatchBlocks[i].traverse(visitor, scope);", "+\t\t\tthis.tryBlock.traverse(visitor, this.scope);", "+\t\t\tif (this.catchArguments != null) {", "+\t\t\t\tfor (int i = 0, max = this.catchBlocks.length; i < max; i++) {", "+\t\t\t\t\tthis.catchArguments[i].traverse(visitor, this.scope);", "+\t\t\t\t\tthis.catchBlocks[i].traverse(visitor, this.scope);", "-\t\t\tif (finallyBlock != null)", "-\t\t\t\tfinallyBlock.traverse(visitor, scope);", "+\t\t\tif (this.finallyBlock != null)", "+\t\t\t\tthis.finallyBlock.traverse(visitor, this.scope);"]}], "num": 46042}