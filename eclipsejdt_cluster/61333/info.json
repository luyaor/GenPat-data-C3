{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55426392a214fc6275dc13acf0e00f6d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdac5a4352be30baa42ab8f9682ee9d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "45b137a4bdfd0a4d28126aeb67f27b127e7f1dfd", "commitAfterChange": "15b0c36cf52521c62289eac551e0070a05f02d1e", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompoundAssignment compoundAssignment, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompoundAssignment compoundAssignment, \t\tBlockScope scope)", "diff": ["-\t\tcompoundAssignment.expression.traverse(this, scope);", "+\t\tAlignment assignmentAlignment = this.scribe.createAlignment(\"compoundAssignmentAlignment\", this.preferences.alignment_for_assignment, Alignment.R_OUTERMOST, 1, this.scribe.scanner.currentPosition); //$NON-NLS-1$", "+\t\tthis.scribe.enterAlignment(assignmentAlignment);", "+\t\tboolean ok = false;", "+\t\tdo {", "+\t\t\ttry {", "+\t\t\t\tthis.scribe.alignFragment(assignmentAlignment, 0);", "+\t\t\t\tcompoundAssignment.expression.traverse(this, scope);", "+\t\t\t\tok = true;", "+\t\t\t} catch(AlignmentException e){", "+\t\t\t\tthis.scribe.redoAlignment(e);", "+\t\t\t}", "+\t\t} while (!ok);\t\t", "+\t\tthis.scribe.exitAlignment(assignmentAlignment, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3e9685d0beb938bd565e13654246489", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "45b137a4bdfd0a4d28126aeb67f27b127e7f1dfd", "commitAfterChange": "15b0c36cf52521c62289eac551e0070a05f02d1e", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "diff": ["-\t\tassignment.expression.traverse(this, scope);", "-\t\t", "+", "+\t\tAlignment assignmentAlignment = this.scribe.createAlignment(\"assignmentAlignment\", this.preferences.alignment_for_assignment, Alignment.R_OUTERMOST, 1, this.scribe.scanner.currentPosition); //$NON-NLS-1$", "+\t\tthis.scribe.enterAlignment(assignmentAlignment);", "+\t\tboolean ok = false;", "+\t\tdo {", "+\t\t\ttry {", "+\t\t\t\tthis.scribe.alignFragment(assignmentAlignment, 0);", "+\t\t\t\tassignment.expression.traverse(this, scope);", "+\t\t\t\tok = true;", "+\t\t\t} catch(AlignmentException e){", "+\t\t\t\tthis.scribe.redoAlignment(e);", "+\t\t\t}", "+\t\t} while (!ok);\t\t", "+\t\tthis.scribe.exitAlignment(assignmentAlignment, true);", "+"]}], "num": 61333}