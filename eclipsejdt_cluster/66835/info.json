{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11a7baa78a6932def60115dfd18397a7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04332c4ecd09aeac5d3e685756318d38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope)", "signatureAfterChange": " public MethodBinding binding(TypeBinding targetType, Scope scope)", "diff": ["-public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope) {", "-\tif (this.suspendedResolutionState != null && targetType != null) {", "-\t\tsetExpectedType(targetType);", "-\t\tif (!resolvePart2(this.suspendedResolutionState)) {", "-\t\t\tif (reportErrors && !this.suspendedResolutionState.hasReportedError) {", "-\t\t\t\tif (this.suspendedResolutionState.cannotInferDiamond)", "-\t\t\t\t\tscope.problemReporter().cannotInferElidedTypes(this);", "-\t\t\t\telse", "-\t\t\t\t\tscope.problemReporter().genericInferenceError(\"constructor is unexpectedly unresolved\", this); //$NON-NLS-1$", "-\t\t\t\tthis.suspendedResolutionState.hasReportedError = true;", "-\t\t\t}", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\tif (reportErrors && this.binding != null && !this.binding.isValidBinding()) {", "-\t\tif (this.binding.declaringClass == null)", "-\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.resolvedType;", "-\t\tif (this.suspendedResolutionState != null) {", "-\t\t\tscope.problemReporter().invalidConstructor(this, this.binding);", "-\t\t\tthis.suspendedResolutionState.hasReportedError = true;", "-\t\t}", "-\t}", "+public MethodBinding binding(TypeBinding targetType, Scope scope) {", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a692b9c3ba38fb680e53be1ae825dc6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "commitAfterChange": "dd10489904dda11a1b9c522a71a4705b9646605e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public MethodBinding binding(TypeBinding targetType)", "signatureAfterChange": " public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope)", "diff": ["-public MethodBinding binding(TypeBinding targetType) {", "+public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope) {", "-\t\tif (!resolvePart2(this.suspendedResolutionState))", "+\t\tif (!resolvePart2(this.suspendedResolutionState)) {", "+\t\t\tif (reportErrors && !this.suspendedResolutionState.hasReportedError) {", "+\t\t\t\tif (this.suspendedResolutionState.cannotInferDiamond)", "+\t\t\t\t\tscope.problemReporter().cannotInferElidedTypes(this);", "+\t\t\t\telse", "+\t\t\t\t\tscope.problemReporter().genericInferenceError(\"constructor is unexpectedly unresolved\", this); //$NON-NLS-1$", "+\t\t\t\tthis.suspendedResolutionState.hasReportedError = true;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (reportErrors && this.binding != null && !this.binding.isValidBinding()) {", "+\t\tif (this.binding.declaringClass == null)", "+\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.resolvedType;", "+\t\tscope.problemReporter().invalidConstructor(this, this.binding);", "+\t\tthis.suspendedResolutionState.hasReportedError = true;"]}], "num": 66835}