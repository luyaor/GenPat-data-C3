{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3045ec4896a18d57f0d0430fed2d6ced", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ac2781bcd77c206d1cce905c824e45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "89ec54c4f385f0879ec62813f92f9edadfbe2e55", "commitAfterChange": "fc956e4f332f45539062ed97c7419d35c84b1337", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public void updateFromParserState()", "signatureAfterChange": "\r public void updateFromParserState()", "diff": ["-\t\t\tif (methodDeclaration.sourceEnd == parser.rParenPos){\r", "-\t\t\t\tparser.consumeMethodHeaderThrowsClause(); \r", "-\t\t\t\t// will reset typeListLength to zero\r", "-\t\t\t\t// thus this check will only be performed on first errorCheck after void foo() throws X, Y,\r", "+\t\t\tif (methodDeclaration.sourceEnd == parser.rParenPos) {\r", "+\t\t\t\tif (parser.astStack[parser.astPtr] instanceof TypeReference){\r", "+\t\t\t\t\tparser.consumeMethodHeaderThrowsClause(); \r", "+\t\t\t\t\t// will reset typeListLength to zero\r", "+\t\t\t\t\t// thus this check will only be performed on first errorCheck after void foo() throws X, Y,\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tparser.listLength = 0;\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b841ac3a2c859afe87c35643bf9672c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "b7bbd528ad22316d79eac8a0aca3516a1f90a5ec", "commitAfterChange": "8a13e69e3b12126618841f95523da258e6a2ee16", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public void updateFromParserState()", "signatureAfterChange": "\r public void updateFromParserState()", "diff": ["-\t\t\tparser.consumeClassHeaderImplements(); \r", "-\t\t\t// will reset typeListLength to zero\r", "-\t\t\t// thus this check will only be performed on first errorCheck after class X implements Y,Z,\r", "+\t\t\tint typePtr = parser.astPtr - parser.astLengthStack[parser.astLengthPtr];\r", "+\t\t\tif(typePtr >= 0 && parser.astStack[typePtr] instanceof TypeDeclaration) {\r", "+\t\t\t\tparser.consumeClassHeaderImplements(); \r", "+\t\t\t\t// will reset typeListLength to zero\r", "+\t\t\t\t// thus this check will only be performed on first errorCheck after class X implements Y,Z,\r", "+\t\t\t}\r"]}], "num": 17467}