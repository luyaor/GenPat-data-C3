{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf6f28b80f3641cf59440ec96016cff2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6887dc5fbb42e2359578b321a638200", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "commitAfterChange": "882f4a412452cbe6d8e04ad004cc47e303c5c4e3", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void test0075() throws JavaModelException", "signatureAfterChange": " \tpublic void test0075() throws JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "-\t\t\tASTNode node = buildAST(", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"import java.util.ArrayList;\\n\" +", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"  /*start*/ArrayList<Integer>/*end*/ field;\" +", "-\t\t\t\t\"}\",", "-\t\t\t\tworkingCopy);", "-\t\t\tITypeBinding binding = ((Type) node).resolveBinding();", "-\t\t\tITypeBinding genericType = binding.getGenericType();", "-\t\t\tassertFalse(\"Equals\", binding.isEqualTo(genericType));", "-\t\t} finally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tthis.workingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "+\t\tASTNode node = buildAST(", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"  /*start*/ArrayList<Integer>/*end*/ field;\" +", "+\t\t\t\"}\",", "+\t\t\tthis.workingCopy);", "+\t\tITypeBinding binding = ((Type) node).resolveBinding();", "+\t\tITypeBinding genericType = binding.getTypeDeclaration();", "+\t\tassertFalse(\"Equals\", binding.isEqualTo(genericType));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9c684c9fb792d1518e51223fff9c54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "commitAfterChange": "882f4a412452cbe6d8e04ad004cc47e303c5c4e3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic void test0087() throws JavaModelException", "signatureAfterChange": " \tpublic void test0087() throws JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "-\t\t\tbuildAST(", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class X<T1> {\\n\" +", "-\t\t\t\t\"\tpublic <M1> X() {\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\tclass Y<T2> {\\n\" +", "-\t\t\t\t\"\t\tpublic <M2> Y() {\\n\" +", "-\t\t\t\t\"\t\t}\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\tvoid foo() {\\n\" +", "-\t\t\t\t\"\t\tnew <Object>X<Object>().new <Object>Y<Object>();\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t\tworkingCopy);", "-\t\t} finally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tthis.workingCopy = getWorkingCopy(\"/Converter15/src/p/X.java\", true/*resolve*/);", "+\t\tbuildAST(", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"public class X<T1> {\\n\" +", "+\t\t\t\"\tpublic <M1> X() {\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\tclass Y<T2> {\\n\" +", "+\t\t\t\"\t\tpublic <M2> Y() {\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\tvoid foo() {\\n\" +", "+\t\t\t\"\t\tnew <Object>X<Object>().new <Object>Y<Object>();\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\",", "+\t\t\tthis.workingCopy);"]}], "num": 14046}