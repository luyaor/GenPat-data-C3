{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e9b3b2b58065b4ade4c163ae524d522", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "876f3b1f7aa6b64659b6aa8eab97824e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t \tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement)", "signatureAfterChange": " \t \tpublic SingleMemberAnnotation convert(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation annotation)", "diff": ["+\t", "+\tpublic SingleMemberAnnotation convert(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation annotation) {", "+\t\tSingleMemberAnnotation singleMemberAnnotation = this.ast.newSingleMemberAnnotation();", "+\t\tsetTypeNameForAnnotation(annotation, singleMemberAnnotation);", "+\t\tsingleMemberAnnotation.setValue(convert(annotation.memberValue));", "+\t\tint start = annotation.sourceStart;", "+\t\tint end = annotation.declarationSourceEnd;", "+\t\tsingleMemberAnnotation.setSourceRange(start, end - start + 1);", "+\t\treturn singleMemberAnnotation;", "+\t}", "-\t", "-\tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement) {", "-\t\tLabeledStatement labeledStatement = this.ast.newLabeledStatement();", "-\t\tlabeledStatement.setSourceRange(statement.sourceStart, statement.sourceEnd - statement.sourceStart + 1);\t", "-\t\torg.eclipse.jdt.internal.compiler.ast.Statement body = statement.statement;", "-\t\tlabeledStatement.setBody(convert(body));", "-\t\tSimpleName name = this.ast.newSimpleName(new String(statement.label));", "-\t\tretrieveIdentifierAndSetPositions(statement.sourceStart, statement.sourceEnd, name);", "-\t\tlabeledStatement.setLabel(name);", "-\t\treturn labeledStatement;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cdd3c3717d5823c2c250e5ee7451a83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5830f34f316eb59740b3f5242c08f1b46d8edf90", "commitAfterChange": "d9d1b97f49560324c7b848690f93b474a074ee07", "methodNumberBeforeChange": 328, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void unnecessaryCastForArgument(CastExpression castExpression, TypeBinding parameterType)", "signatureAfterChange": " public void enumSwitchCannotTargetField(Reference reference, FieldBinding field)", "diff": ["+public void enumSwitchCannotTargetField(Reference reference, FieldBinding field) {", "+\tthis.handle(", "+\t\t\tIProblem.EnumSwitchCannotTargetField,", "+\t\t\tnew String[]{ String.valueOf(field.declaringClass.readableName()), String.valueOf(field.name) },", "+\t\t\tnew String[]{ String.valueOf(field.declaringClass.shortReadableName()), String.valueOf(field.name) },", "+\t\t\treference.sourceStart,", "+\t\t\treference.sourceEnd);\t", "+}", "-}", "-public void unnecessaryCastForArgument(CastExpression castExpression, TypeBinding parameterType) {", "-\tTypeBinding castedExpressionType = castExpression.expression.resolvedType;", "-\tthis.handle(", "-\t\tIProblem.UnnecessaryArgumentCast,", "-\t\tnew String[]{ new String(castedExpressionType.readableName()), new String(castExpression.resolvedType.readableName()), new String(parameterType.readableName())},", "-\t\tnew String[]{ new String(castedExpressionType.shortReadableName()), new String(castExpression.resolvedType.shortReadableName()), new String(parameterType.shortReadableName())},"]}], "num": 68812}