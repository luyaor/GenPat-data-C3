{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbcd72d73c2051ee55d3012a425d6473", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "069286c6ed781267ebfeb032e9b4a352", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "56deec95b605b537ffff269849519a3683e4c597", "commitAfterChange": "6322417321b9f92594d494c76f96624badb58aae", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic Compiler(\r \t\tINameEnvironment environment,\r \t\tIErrorHandlingPolicy policy,\r \t\tMap settings,\r \t\tICompilerRequestor requestor,\r \t\tIProblemFactory problemFactory)", "signatureAfterChange": "\r \tpublic Compiler(\r \t\tINameEnvironment environment,\r \t\tIErrorHandlingPolicy policy,\r \t\tMap settings,\r \t\tfinal ICompilerRequestor requestor,\r \t\tIProblemFactory problemFactory)", "diff": ["-\t\tICompilerRequestor requestor,\r", "+\t\tfinal ICompilerRequestor requestor,\r", "-\t\tthis.requestor = requestor;\r", "+\t\t\r", "+\t\t// wrap requestor in DebugRequestor if one is specified\r", "+\t\tif(DebugRequestor == null) {\r", "+\t\t\tthis.requestor = requestor;\r", "+\t\t} else {\r", "+\t\t\tthis.requestor = new ICompilerRequestor(){\r", "+\t\t\t\tpublic void acceptResult(CompilationResult result){\r", "+\t\t\t\t\tif (DebugRequestor.isActive()){\r", "+\t\t\t\t\t\tDebugRequestor.acceptDebugResult(result);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\trequestor.acceptResult(result);\r", "+\t\t\t\t}\r", "+\t\t\t};\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88b923a4982e2313d5dca44a6f4e4dc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "d301ae6c8664bf4508fc0872f1c0859eec725cae", "commitAfterChange": "1516301359d43aec61a19794e49b793ac0d752cf", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "signatureAfterChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tfinal ASTVisitor visitor, \t\t\tJavacTestOptions javacTestOptions)", "diff": ["+\t\t\tfinal ASTVisitor visitor,", "-\t\t\t\tgetProblemFactory());", "+\t\t\t\tgetProblemFactory()) {", "+\t\t\t\tpublic void process(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit, int i) {", "+\t\t\t\t\tsuper.process(unit, i);", "+\t\t\t\t\tif (visitor != null) {", "+\t\t\t\t\t\tunit.traverse(visitor, unit.scope);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t};"]}], "num": 59067}