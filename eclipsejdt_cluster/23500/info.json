{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21b616b00325ed7091ae5fcf8237b8ab", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10777801383010d846105c656d9f407d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "58a1f01578c97e0cf25ddfdfbb541889635de059", "commitAfterChange": "794c42d32802fcaf82912c5ba05c9463361c0423", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": "\r protected void markCurrentMethodWithLocalType()", "signatureAfterChange": "\r protected void markCurrentMethodWithLocalType()", "diff": ["-\t\t\t\t|| node instanceof FieldDeclaration) {\r", "+\t\t\t\t|| node instanceof TypeDeclaration) { // mark type for now: all fields will be marked when added to this type\r", "-\tif (this.referenceContext instanceof AbstractMethodDeclaration) {\r", "+\tif (this.referenceContext instanceof AbstractMethodDeclaration\r", "+\t\t\t|| this.referenceContext instanceof TypeDeclaration) {\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28dfe94fd2ca5d914a1fb7125bf1b30f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "c7e96d986053614747f035da8c0e25c52c212a4c", "commitAfterChange": "d90d9bd95abe34cc0cfe3b06356eb1c26ea7d5bf", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r public void notifySourceElementRequestor()", "signatureAfterChange": "\r public void notifySourceElementRequestor()", "diff": ["+\tif (compilationUnit == null) {\r", "+\t\t// when we parse a single type member declaration the compilation unit is null, but we still\r", "+\t\t// want to be able to notify the requestor on the created ast node\r", "+\t\tif (astStack[0] instanceof AbstractMethodDeclaration) {\r", "+\t\t\tnotifySourceElementRequestor((AbstractMethodDeclaration) astStack[0]);\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\treturn;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9258fa6fa37453c0211277c959ce7388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 257, "signatureBeforeChange": " public void parseErrorUnexpectedEnd( \tint start, \tint end)", "signatureAfterChange": " public void parseErrorUnexpectedEnd( \tint start, \tint end)", "diff": ["-\tif(referenceContext instanceof ConstructorDeclaration) {", "+\tif(this.referenceContext instanceof ConstructorDeclaration) {", "-\t} else if(referenceContext instanceof MethodDeclaration) {", "+\t} else if(this.referenceContext instanceof MethodDeclaration) {", "-\t} else if(referenceContext instanceof TypeDeclaration) {", "+\t} else if(this.referenceContext instanceof TypeDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "972a932bd8a987407ca27caf41f91e91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 214, "signatureBeforeChange": " protected void markCurrentMethodWithLocalType()", "signatureAfterChange": " protected void markEnclosingMemberWithLocalType()", "diff": ["-protected void markCurrentMethodWithLocalType() {", "+protected void markEnclosingMemberWithLocalType() {", "-\t\t\t\t|| node instanceof TypeDeclaration) { // mark type for now: all fields will be marked when added to this type", "+\t\t\t\t|| node instanceof FieldDeclaration", "+\t\t\t\t|| node instanceof TypeDeclaration) { // mark type for now: all initializers will be marked when added to this type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf822323a4b1d7e5f9f5924a5251fe8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "acf8ce5153f04a59ec988e7c8fa3507941eeb8f9", "commitAfterChange": "08c836fd675cfbdf102c9053f71919e0fdae342a", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " protected void markEnclosingMemberWithLocalType()", "signatureAfterChange": " protected void markEnclosingMemberWithLocalType()", "diff": ["-\t\t\t\t|| node instanceof TypeDeclaration) { // mark type for now: all initializers will be marked when added to this type", "+\t\t\t\t|| (node instanceof TypeDeclaration // mark type for now: all initializers will be marked when added to this type", "+\t\t\t\t\t\t// and enclosing type must not be closed (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=147485)", "+\t\t\t\t\t\t&& ((TypeDeclaration) node).declarationSourceEnd == 0)) { "]}], "num": 23500}