{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9073c94b6796dfff689ac4bee41e551e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "020f7bff4ebd9a8a0e3864ce900bdd9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "4e130c9d5bb20bb7b53d05cfcbc0214ae1f6f2b8", "commitAfterChange": "e18e2062279631b50cbdb527a42eeb74dde9b023", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override \tpublic List<? extends AnnotationMirror> getAllAnnotationMirrors(Element e)", "signatureAfterChange": " \t@Override \tpublic List<? extends AnnotationMirror> getAllAnnotationMirrors(Element e)", "diff": ["-\t\t\tList<AnnotationBinding> annotations = new ArrayList<AnnotationBinding>();", "+\t\t\tList<AnnotationBinding> annotations = new ArrayList<>();", "-\t\t\tSet<ReferenceBinding> annotationTypes = new HashSet<ReferenceBinding>();", "+\t\t\tSet<ReferenceBinding> annotationTypes = new HashSet<>();", "-\t\t\tList<AnnotationMirror> list = new ArrayList<AnnotationMirror>(annotations.size());", "+\t\t\tList<AnnotationMirror> list = new ArrayList<>(annotations.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ded3c3df9f4054ea4f9c9b698e867f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, JavaFileManager fileManager, DiagnosticListener<? super JavaFileObject> someDiagnosticListener, Iterable<String> options, Iterable<String> classes, Iterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \t@Override \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, JavaFileManager fileManager, DiagnosticListener<? super JavaFileObject> someDiagnosticListener, Iterable<String> options, Iterable<String> classes, Iterable<? extends JavaFileObject> compilationUnits)", "diff": ["-\t\tArrayList<String> allOptions = new ArrayList<String>();", "+\t\tArrayList<String> allOptions = new ArrayList<>();", "-\t\t\t\tallOptions.add(new File(uri).getAbsolutePath());", "+\t\t\t\tif (uri.getScheme().equals(\"file\")) { //$NON-NLS-1$", "+\t\t\t\t\tallOptions.add(new File(uri).getAbsolutePath());", "+\t\t\t\t} else {", "+\t\t\t\t\tallOptions.add(uri.toString());", "+\t\t\t\t}", "-\t\t\t\tArrayList<Processor> temp = new ArrayList<Processor>();", "+\t\t\t\tArrayList<Processor> temp = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db0bd43b23f7a64023be1e4a437c6aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/imports/ConflictIdentifier.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tConflicts identifyConflicts( \t\t\tSet<ImportName> imports, \t\t\tSet<ImportName> addedImports, \t\t\tSet<String> typeExplicitSimpleNames, \t\t\tSet<String> staticExplicitSimpleNames, \t\t\tIProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tConflicts identifyConflicts( \t\t\tSet<ImportName> imports, \t\t\tSet<ImportName> addedImports, \t\t\tSet<String> typeExplicitSimpleNames, \t\t\tSet<String> staticExplicitSimpleNames, \t\t\tIProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\t\tSet<String> typeOnDemandContainers = new HashSet<String>(extractContainerNames(onDemandCandidates, false));", "-\t\tSet<String> staticOnDemandContainers = new HashSet<String>(extractContainerNames(onDemandCandidates, true));", "+\t\tSet<String> typeOnDemandContainers = new HashSet<>(extractContainerNames(onDemandCandidates, false));", "+\t\tSet<String> staticOnDemandContainers = new HashSet<>(extractContainerNames(onDemandCandidates, true));"]}], "num": 58057}