{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e29c96c51eb52cfe2cee8182e3951ca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17427837967ee9cd1ade4cc69bce4e7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "9ca09d5ed1be915e478e63cfb298cfaff9af7f75", "commitAfterChange": "264dd88468cd014ae7150e1040d5982ca933b94b", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\t\t\t\t\t\tboolean needLeadingSpace = false;", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = false; // there may be no star after", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = true;", "-\t\t\t\t\t\t\t\t\t\t// skip javadoc comment star", "-\t\t\t\t\t\t\t\t\t\ttoken = this.scanner.getNextToken();", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = true;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif (token == TerminalTokens.TokenNameWHITESPACE) {", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = false;", "-\t\t\t\t\t\t\t\t\t\tnextStart++;", "-\t\t\t\t\t\tthis.needSpace = needLeadingSpace;", "+\t\t\t\t\t\tthis.needSpace = false;", "-\t\t\t\t\t\tif (this.needSpace) {", "-\t\t\t\t\t\t\taddInsertEdit(nextStart, \" \"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tthis.needSpace = false;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tprintCodeSnippet(nextStart, codeEnd);", "+\t\t\t\t\t\tprintCodeSnippet(nextStart, codeEnd, linesGap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d7a1f104211451ff0114e95474bbe86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "bc8a42889f857ed7728b976d31e674de6afdad4d", "commitAfterChange": "e50f3d9d374cf35289e57b1f80fafcaa8e59eb2e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateSyntheticFieldInitializationsIfNecessary( \t\tMethodScope scope, \t\tCodeStream codeStream, \t\tReferenceBinding declaringClass, \t\tboolean addNullCheckForEnclosingInstance)", "signatureAfterChange": "  \tpublic void generateSyntheticFieldInitializationsIfNecessary( \t\tMethodScope scope, \t\tCodeStream codeStream, \t\tReferenceBinding declaringClass)", "diff": ["-\t\tReferenceBinding declaringClass,", "-\t\tboolean addNullCheckForEnclosingInstance) {", "+\t\tReferenceBinding declaringClass) {", "-\t\tSourceTypeBinding enclosingType = nestedType.enclosingType;", "-\t\t\t\tif (enclosingType == syntheticArg.type && addNullCheckForEnclosingInstance) {", "-\t\t\t\t\tcodeStream.dup();", "-\t\t\t\t\tcodeStream.invokeObjectGetClass(); // causes null check", "-\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t}"]}], "num": 47007}