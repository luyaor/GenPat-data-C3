{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69c8675d0defa49e52c3e826ba035516", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0554fff08edab8e77e8bad965a50590a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "c1214b6b7704c3bec1f1750c6983e09a52efaa01", "commitAfterChange": "a5f15775fe7fcb24ae5a0930116a996c10a2359a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "-\t\t\t\t\tBinding declaringElement = typeVariableBinding.declaringElement;", "-\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\t\tbuffer.append(typeVariableBinding.sourceName);", "-\t\t\t\t\tbuffer.append(':');", "-\t\t\t\t\tif (declaringElement instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding) {", "-\t\t\t\t\t\tbuffer.append(this.resolver.getTypeBinding((org.eclipse.jdt.internal.compiler.lookup.TypeBinding) declaringElement).getKey());", "-\t\t\t\t\t} else if (declaringElement instanceof org.eclipse.jdt.internal.compiler.lookup.MethodBinding) {", "-\t\t\t\t\t\tbuffer.append(getNonRecursiveKey(this.resolver.getMethodBinding((org.eclipse.jdt.internal.compiler.lookup.MethodBinding) declaringElement)));\t\t\t\t\t\t", "-\t\t\t\t\t}", "-\t\t\t\t\treturn String.valueOf(buffer);", "+\t\t\t\t\treturn getTypeVariableKey(true/*include declaring element*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f478bfced821f85a3ef38c04c9fae323", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "c8af5e76f44ad60b89fcc109db821631c8461cdd", "commitAfterChange": "7202d999e970cc0e26c9a6dc344ca659a295fdad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic String getBinaryName()", "signatureAfterChange": " \tpublic String getBinaryName()", "diff": ["-\t\tchar[] constantPoolName = this.binding.constantPoolName();", "+\t\tif (this.binding.isTypeVariable()) {", "+\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t\torg.eclipse.jdt.internal.compiler.lookup.Binding declaring = typeVariableBinding.declaringElement;", "+\t\t\tStringBuffer binaryName = new StringBuffer();", "+\t\t\tswitch(declaring.kind()) {", "+\t\t\t\tcase org.eclipse.jdt.internal.compiler.lookup.Binding.METHOD :", "+\t\t\t\t\tMethodBinding methodBinding = (MethodBinding) declaring;", "+\t\t\t\t\tchar[] constantPoolName = methodBinding.declaringClass.constantPoolName();", "+\t\t\t\t\tif (constantPoolName == null) return null;", "+\t\t\t\t\tbinaryName", "+\t\t\t\t\t\t.append(CharOperation.replaceOnCopy(constantPoolName, '/', '.'))", "+\t\t\t\t\t\t.append('$')", "+\t\t\t\t\t\t.append(methodBinding.signature())", "+\t\t\t\t\t\t.append('$')", "+\t\t\t\t\t\t.append(typeVariableBinding.sourceName);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) declaring;", "+\t\t\t\t\tconstantPoolName = typeBinding.constantPoolName();", "+\t\t\t\t\tif (constantPoolName == null) return null;", "+\t\t\t\t\tbinaryName", "+\t\t\t\t\t\t.append(CharOperation.replaceOnCopy(constantPoolName, '/', '.'))", "+\t\t\t\t\t\t.append('$')", "+\t\t\t\t\t\t.append(typeVariableBinding.sourceName);", "+\t\t\t}", "+\t\t\treturn String.valueOf(binaryName);", "+\t\t}", "+ \t\tchar[] constantPoolName = this.binding.constantPoolName();"]}], "num": 55653}