{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2e27a595c328efd6cf77edd247df9b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c226dfc4489504868ede39a232d9939", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "diff": ["-\t\t\t\t\t\tif((binding.bindingType() & Binding.TYPE) != 0) {", "+\t\t\t\t\t\tif((binding.kind() & Binding.TYPE) != 0) {", "-\t\t\t\t\t\tif ((binding.bindingType() & Binding.FIELD) != 0) {", "+\t\t\t\t\t\tif ((binding.kind() & Binding.FIELD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "309b98288ddfec369a40bff8e3d929bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic static char[] getSignature(Binding binding)", "signatureAfterChange": " \t \tpublic static char[] getSignature(Binding binding)", "diff": ["-\t\tif ((binding.bindingType() & Binding.TYPE) != 0) {", "+\t\tif ((binding.kind() & Binding.TYPE) != 0) {", "-\t\t} else if ((binding.bindingType() & Binding.METHOD) != 0) {", "+\t\t} else if ((binding.kind() & Binding.METHOD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ffaf8ab65a880f6a9ce79886eb90ef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "35fd76e356146458b564c231f44085c52b0d1c47", "commitAfterChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tpublic void consumeWildCard(int kind)", "signatureAfterChange": " \t \tpublic void consumeWildCard(int kind)", "diff": ["-\t\t\t\tthis.compilerBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, this.wildcardRank, (TypeBinding) boundResolver.compilerBinding, null /*no extra bound*/, kind);", "+\t\t\t\tthis.typeBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, this.wildcardRank, (TypeBinding) boundResolver.compilerBinding, null /*no extra bound*/, kind);", "-\t\t\t\tthis.compilerBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, null/*no bound*/, null /*no extra bound*/, kind);", "+\t\t\t\tthis.typeBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, null/*no bound*/, null /*no extra bound*/, kind);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a56f86b5f6c60806bc1a9b488055cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\tif((binding.bindingType() & Binding.TYPE) != 0) {", "+\t\t\t\t\t\tif((binding.kind() & Binding.TYPE) != 0) {", "-\t\t\t\t\t\tif ((binding.bindingType() & Binding.TYPE) != 0) {", "+\t\t\t\t\t\tif ((binding.kind() & Binding.TYPE) != 0) {"]}], "num": 65191}