{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fba0b26adcf90d4f48b262fec3d5583", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d203ec1b6e24a9622b3f574af9382b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate void collectAnnotations(ReferenceBinding[] referenceBindings)", "signatureAfterChange": "  \tprivate void collectAnnotations(ReferenceBinding[] referenceBindings)", "diff": ["-\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(annotationBinding.getAnnotationType()); ", "-\t\t\t\tElement element = Factory.newElement(referenceBinding);", "+\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(annotationBinding.getAnnotationType()); ", "+\t\t\t\tElement element = _factory.newElement(referenceBinding);", "-\t\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(annotationBinding.getAnnotationType()); ", "-\t\t\t\t\tElement element = Factory.newElement(fieldBinding);", "+\t\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(annotationBinding.getAnnotationType()); ", "+\t\t\t\t\tElement element = _factory.newElement(fieldBinding);", "-\t\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(annotationBinding.getAnnotationType()); ", "-\t\t\t\t\tElement element = Factory.newElement(methodBinding);", "+\t\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(annotationBinding.getAnnotationType()); ", "+\t\t\t\t\tElement element = _factory.newElement(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be65e8a8ca3dc8989b04bfe5346c06a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic PackageElement getPackageOf(Element type)", "signatureAfterChange": "  \t@Override \tpublic PackageElement getPackageOf(Element type)", "diff": ["-\t\t\t\treturn (PackageElement) Factory.newElement(referenceBinding.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(referenceBinding.fPackage);", "-\t\t\t\treturn (PackageElement) Factory.newElement(methodBinding.declaringClass.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(methodBinding.declaringClass.fPackage);", "-\t\t\t\treturn (PackageElement) Factory.newElement(fieldBinding.declaringClass.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(fieldBinding.declaringClass.fPackage);", "-\t\t\t\treturn (PackageElement) Factory.newElement(localVariableBinding.declaringScope.classScope().referenceContext.binding.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(localVariableBinding.declaringScope.classScope().referenceContext.binding.fPackage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f37b85d9dc2c704dbb86d36c83a56684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "d6dbfc9ffdc536bf3813a7df3219c04027533b62", "commitAfterChange": "5074e3a9141b8db4c82ed56886d84586d3d2dbaa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void endVisit(SingleMemberAnnotation annotation, BlockScope scope)", "signatureAfterChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "diff": ["-", "-\tpublic void endVisit(SingleMemberAnnotation annotation, BlockScope scope) {", "-\t\tASTNode.resolveAnnotations(scope, new Annotation[] { annotation }, this.currentBinding);", "-\t\tAnnotationBinding binding = annotation.getCompilerAnnotation();", "-\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "-\t\tElement element = ElementFactory.newElement(this.currentBinding);", "-\t\t_annoToElement.put(anno, element);", "-\t}", "+\tprivate void resolveAnnotations(", "+\t\t\tBlockScope scope,", "+\t\t\tAnnotation[] annotations,", "+\t\t\tBinding currentBinding) {", "+\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding);", "+\t\t", "+\t\tfor (Annotation annotation : annotations) {", "+\t\t\tAnnotationBinding binding = annotation.getCompilerAnnotation();", "+\t\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "+\t\t\tElement element = ElementFactory.newElement(currentBinding);", "+\t\t\t_annoToElement.put(anno, element);", "+\t\t}"]}], "num": 37403}