{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67ba0b0c9597a41b05c07427cf6fa1b0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b674149c28cc64fdbeffd481d175ac2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "7f4064eb3c227f7a3343930b5f5d03b1b6ad3bed", "commitAfterChange": "62b05293f013ba914e73be42d1e5626bf1ce5d65", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprivate void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": " \tprivate void updateIndex(Openable element, IResourceDelta delta)", "diff": ["+\t\t\t\t\t\tboolean isSource;", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tIClasspathEntry entry = ((IPackageFragmentRoot)pkg.getParent()).getRawClasspathEntry();", "+\t\t\t\t\t\t\tisSource = entry.getEntryKind() == IClasspathEntry.CPE_SOURCE;", "+\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t// project does not exist: cannot happen", "+\t\t\t\t\t\t\tisSource = false;", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (Util.isJavaFileName(name)) {", "-\t\t\t\t\t\t\t\t\tOpenable cu = (Openable)pkg.getCompilationUnit(name);", "-\t\t\t\t\t\t\t\t\tthis.updateIndex(cu, child);", "+\t\t\t\t\t\t\t\tif (isSource) {", "+\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(name)) {", "+\t\t\t\t\t\t\t\t\t\tOpenable cu = (Openable)pkg.getCompilationUnit(name);", "+\t\t\t\t\t\t\t\t\t\tthis.updateIndex(cu, child);", "+\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6dc582012b91ab34857d4c695e5ce37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 78, "signatureBeforeChange": " public boolean isBasedOn(IResource resource)", "signatureAfterChange": " public boolean isBasedOn(IResource resource)", "diff": ["- */", "-public boolean isBasedOn(IResource resource) {", "-\treturn false;", "-}", "+ */", "+public boolean isBasedOn(IResource resource) {", "+\tObject info = JavaModelManager.getJavaModelManager().getInfo(this);", "+\tif (!(info instanceof WorkingCopyElementInfo)) return false;", "+\t", "+\tif (resource.getType() != IResource.FILE) {", "+\t\treturn false;", "+\t}", "+\t// if resource got deleted, then #getModificationStamp() will answer IResource.NULL_STAMP, which is always different from the cached", "+\t// timestamp", "+\treturn ((WorkingCopyElementInfo)info).fTimestamp == ((IFile) resource).getModificationStamp();", "+}"]}], "num": 18246}