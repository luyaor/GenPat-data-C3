{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0de43f35fad476fccfd49d7535c60b7a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243c412e6850bdc0ebfdc19ec50ca613", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceField.java", "commitBeforeChange": "d3438591c6303b10ffdfe04935a028a1a295bc18", "commitAfterChange": "7acc82a1aa09d7f270cc2a9bb108a01a76d98132", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object getConstant() throws JavaModelException", "signatureAfterChange": " public Object getConstant() throws JavaModelException", "diff": ["-\tif (this.constant != null) {", "-\t\treturn this.constant;", "-\t}", "+\tObject constant = null;\t", "-\t\tthis.constant = new Integer(constantSource);", "+\t\tconstant = new Integer(constantSource);", "-\t\tthis.constant = new Short(constantSource);", "+\t\tconstant = new Short(constantSource);", "-\t\tthis.constant = new Byte(constantSource);", "+\t\tconstant = new Byte(constantSource);", "-\t\tthis.constant = new Boolean(constantSource);", "+\t\tconstant = new Boolean(constantSource);", "-\t\tthis.constant = new Character(constantSource.charAt(0));", "+\t\tconstant = new Character(constantSource.charAt(0));", "-\t\tthis.constant = new Double(constantSource);", "+\t\tconstant = new Double(constantSource);", "-\t\tthis.constant = new Float(constantSource);", "+\t\tconstant = new Float(constantSource);", "-\t\tthis.constant = new Long(constantSource);", "+\t\tconstant = new Long(constantSource);", "-\t\tthis.constant = constantSource;", "+\t\tconstant = constantSource;", "-\treturn this.constant;", "+\treturn constant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8ee83b8c86f543a17e3c7459372964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceField.java", "commitBeforeChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "commitAfterChange": "c01ae722f1b8e267f566f56a56228af04d49effb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object getConstant() throws JavaModelException", "signatureAfterChange": " public Object getConstant() throws JavaModelException", "diff": ["+\tif (this.constant != null) {", "+\t\treturn this.constant;", "+\t}", "-\treturn info.initializationSource;", "+\tif (info.initializationSource == null) {", "+\t\treturn null;", "+\t}", "+\t\t\t", "+\tString constantSource = new String(info.initializationSource);", "+\tString signature = info.getTypeSignature();", "+\tif (signature.equals(Signature.SIG_INT)) {", "+\t\tthis.constant = new Integer(constantSource);", "+\t} else if (signature.equals(Signature.SIG_SHORT)) {", "+\t\tthis.constant = new Short(constantSource);", "+\t} else if (signature.equals(Signature.SIG_BYTE)) {", "+\t\tthis.constant = new Byte(constantSource);", "+\t} else if (signature.equals(Signature.SIG_BOOLEAN)) {", "+\t\tthis.constant = new Boolean(constantSource);", "+\t} else if (signature.equals(Signature.SIG_CHAR)) {", "+\t\tthis.constant = new Character(constantSource.charAt(0));", "+\t} else if (signature.equals(Signature.SIG_DOUBLE)) {", "+\t\tthis.constant = new Double(constantSource);", "+\t} else if (signature.equals(Signature.SIG_FLOAT)) {", "+\t\tthis.constant = new Float(constantSource);", "+\t} else if (signature.equals(Signature.SIG_LONG)) { ", "+\t\tthis.constant = new Long(constantSource);", "+\t} else if (signature.equals(\"QString;\")) {//$NON-NLS-1$", "+\t\tthis.constant = constantSource;", "+\t}", "+\treturn this.constant;"]}], "num": 71123}