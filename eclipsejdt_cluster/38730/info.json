{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df57efd4caac2406b51b800b54a366a6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c854efedd1dc0595aecce8dc073ade0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6364144351fd62baca30ba0aad505f339b6274eb", "commitAfterChange": "7061ec9606cc2bd3c0d1400d2b9642703c7384eb", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 153, "signatureBeforeChange": " protected void consumeRule(int act)", "signatureAfterChange": " protected void consumeRule(int act)", "diff": ["-    case 27 : // System.out.println(\"Type ::= PrimitiveType\");  //$NON-NLS-1$", "+    case 26 : // System.out.println(\"Type ::= PrimitiveType\");  //$NON-NLS-1$", "-    case 41 : // System.out.println(\"ReferenceType ::= ClassOrInterfaceType\");  //$NON-NLS-1$", "+    case 40 : // System.out.println(\"ReferenceType ::= ClassOrInterfaceType\");  //$NON-NLS-1$", "-    case 50 : // System.out.println(\"QualifiedName ::= Name DOT SimpleName\");  //$NON-NLS-1$", "+    case 49 : // System.out.println(\"QualifiedName ::= Name DOT SimpleName\");  //$NON-NLS-1$", "-    case 51 : // System.out.println(\"CompilationUnit ::= EnterCompilationUnit PackageDeclarationopt...\");  //$NON-NLS-1$", "+    case 50 : // System.out.println(\"CompilationUnit ::= EnterCompilationUnit PackageDeclarationopt...\");  //$NON-NLS-1$", "-    case 52 : // System.out.println(\"EnterCompilationUnit ::=\");  //$NON-NLS-1$", "+    case 51 : // System.out.println(\"EnterCompilationUnit ::=\");  //$NON-NLS-1$", "-    case 65 : // System.out.println(\"CatchHeader ::= catch LPAREN FormalParameter RPAREN LBRACE\");  //$NON-NLS-1$", "+    case 64 : // System.out.println(\"CatchHeader ::= catch LPAREN FormalParameter RPAREN LBRACE\");  //$NON-NLS-1$", "-    case 67 : // System.out.println(\"ImportDeclarations ::= ImportDeclarations ImportDeclaration\");  //$NON-NLS-1$", "+    case 66 : // System.out.println(\"ImportDeclarations ::= ImportDeclarations ImportDeclaration\");  //$NON-NLS-1$", "-    case 69 : // System.out.println(\"TypeDeclarations ::= TypeDeclarations TypeDeclaration\");  //$NON-NLS-1$", "+    case 68 : // System.out.println(\"TypeDeclarations ::= TypeDeclarations TypeDeclaration\");  //$NON-NLS-1$", "-    case 70 : // System.out.println(\"PackageDeclaration ::= PackageDeclarationName SEMICOLON\");  //$NON-NLS-1$", "+    case 69 : // System.out.println(\"PackageDeclaration ::= PackageDeclarationName SEMICOLON\");  //$NON-NLS-1$", "-    case 71 : // System.out.println(\"PackageDeclarationName ::= package Name\");  //$NON-NLS-1$", "+    case 70 : // System.out.println(\"PackageDeclarationName ::= package Name\");  //$NON-NLS-1$", "-    case 74 : // System.out.println(\"SingleTypeImportDeclaration ::= SingleTypeImportDeclarationName...\");  //$NON-NLS-1$", "+    case 73 : // System.out.println(\"SingleTypeImportDeclaration ::= SingleTypeImportDeclarationName...\");  //$NON-NLS-1$", "-    case 75 : // System.out.println(\"SingleTypeImportDeclarationName ::= import Name\");  //$NON-NLS-1$", "+    case 74 : // System.out.println(\"SingleTypeImportDeclarationName ::= import Name\");  //$NON-NLS-1$", "-    case 76 : // System.out.println(\"TypeImportOnDemandDeclaration ::= TypeImportOnDemandDeclarationName\");  //$NON-NLS-1$", "+    case 75 : // System.out.println(\"TypeImportOnDemandDeclaration ::= TypeImportOnDemandDeclarationName\");  //$NON-NLS-1$", "-    case 77 : // System.out.println(\"TypeImportOnDemandDeclarationName ::= import Name DOT MULTIPLY\");  //$NON-NLS-1$", "+    case 76 : // System.out.println(\"TypeImportOnDemandDeclarationName ::= import Name DOT MULTIPLY\");  //$NON-NLS-1$", "-     case 80 : // System.out.println(\"TypeDeclaration ::= SEMICOLON\");  //$NON-NLS-1$", "+     case 79 : // System.out.println(\"TypeDeclaration ::= SEMICOLON\");  //$NON-NLS-1$", "-    case 94 : // System.out.println(\"ClassDeclaration ::= ClassHeader ClassBody\");  //$NON-NLS-1$", "+    case 93 : // System.out.println(\"ClassDeclaration ::= ClassHeader ClassBody\");  //$NON-NLS-1$", "-    case 95 : // System.out.println(\"ClassHeader ::= ClassHeaderName ClassHeaderExtendsopt...\");  //$NON-NLS-1$", "+    case 94 : // System.out.println(\"ClassHeader ::= ClassHeaderName ClassHeaderExtendsopt...\");  //$NON-NLS-1$", "-    case 96 : // System.out.println(\"ClassHeaderName ::= Modifiersopt class Identifier\");  //$NON-NLS-1$", "+    case 95 : // System.out.println(\"ClassHeaderName ::= Modifiersopt class Identifier\");  //$NON-NLS-1$", "-    case 97 : // System.out.println(\"ClassHeaderExtends ::= extends ClassType\");  //$NON-NLS-1$", "+    case 96 : // System.out.println(\"ClassHeaderExtends ::= extends ClassType\");  //$NON-NLS-1$", "-    case 98 : // System.out.println(\"ClassHeaderImplements ::= implements InterfaceTypeList\");  //$NON-NLS-1$", "+    case 97 : // System.out.println(\"ClassHeaderImplements ::= implements InterfaceTypeList\");  //$NON-NLS-1$", "-    case 100 : // System.out.println(\"InterfaceTypeList ::= InterfaceTypeList COMMA InterfaceType\");  //$NON-NLS-1$", "+    case 99 : // System.out.println(\"InterfaceTypeList ::= InterfaceTypeList COMMA InterfaceType\");  //$NON-NLS-1$", "-    case 101 : // System.out.println(\"InterfaceType ::= ClassOrInterfaceType\");  //$NON-NLS-1$", "+    case 100 : // System.out.println(\"InterfaceType ::= ClassOrInterfaceType\");  //$NON-NLS-1$", "-    case 104 : // System.out.println(\"ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration\");  //$NON-NLS-1$", "+    case 103 : // System.out.println(\"ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration\");  //$NON-NLS-1$", "-    case 108 : // System.out.println(\"ClassBodyDeclaration ::= Diet NestedMethod Block\");  //$NON-NLS-1$", "+    case 107 : // System.out.println(\"ClassBodyDeclaration ::= Diet NestedMethod Block\");  //$NON-NLS-1$", "-    case 109 : // System.out.println(\"Diet ::=\");  //$NON-NLS-1$", "+    case 108 : // System.out.println(\"Diet ::=\");  //$NON-NLS-1$", "-    case 110 : // System.out.println(\"Initializer ::= Diet NestedMethod Block\");  //$NON-NLS-1$", "+    case 109 : // System.out.println(\"Initializer ::= Diet NestedMethod Block\");  //$NON-NLS-1$", "-    case 117 : // System.out.println(\"ClassMemberDeclaration ::= SEMICOLON\");  //$NON-NLS-1$", "+    case 116 : // System.out.println(\"ClassMemberDeclaration ::= SEMICOLON\");  //$NON-NLS-1$", "-    case 118 : // System.out.println(\"FieldDeclaration ::= Modifiersopt Type VariableDeclarators SEMICOLON\");  //$NON-NLS-1$", "+    case 117 : // System.out.println(\"FieldDeclaration ::= Modifiersopt Type VariableDeclarators SEMICOLON\");  //$NON-NLS-1$", "-    case 120 : // System.out.println(\"VariableDeclarators ::= VariableDeclarators COMMA VariableDeclarator\");  //$NON-NLS-1$", "+    case 119 : // System.out.println(\"VariableDeclarators ::= VariableDeclarators COMMA VariableDeclarator\");  //$NON-NLS-1$", "-    case 123 : // System.out.println(\"EnterVariable ::=\");  //$NON-NLS-1$", "+    case 122 : // System.out.println(\"EnterVariable ::=\");  //$NON-NLS-1$", "-    case 124 : // System.out.println(\"ExitVariableWithInitialization ::=\");  //$NON-NLS-1$", "+    case 123 : // System.out.println(\"ExitVariableWithInitialization ::=\");  //$NON-NLS-1$", "-    case 125 : // System.out.println(\"ExitVariableWithoutInitialization ::=\");  //$NON-NLS-1$", "+    case 124 : // System.out.println(\"ExitVariableWithoutInitialization ::=\");  //$NON-NLS-1$", "-    case 126 : // System.out.println(\"ForceNoDiet ::=\");  //$NON-NLS-1$", "+    case 125 : // System.out.println(\"ForceNoDiet ::=\");  //$NON-NLS-1$", "-    case 127 : // System.out.println(\"RestoreDiet ::=\");  //$NON-NLS-1$", "+    case 126 : // System.out.println(\"RestoreDiet ::=\");  //$NON-NLS-1$", "-    case 132 : // System.out.println(\"MethodDeclaration ::= MethodHeader MethodBody\");  //$NON-NLS-1$", "+    case 131 : // System.out.println(\"MethodDeclaration ::= MethodHeader MethodBody\");  //$NON-NLS-1$", "-    case 133 : // System.out.println(\"AbstractMethodDeclaration ::= MethodHeader SEMICOLON\");  //$NON-NLS-1$", "+    case 132 : // System.out.println(\"AbstractMethodDeclaration ::= MethodHeader SEMICOLON\");  //$NON-NLS-1$", "-    case 134 : // System.out.println(\"MethodHeader ::= MethodHeaderName MethodHeaderParameters...\");  //$NON-NLS-1$", "+    case 133 : // System.out.println(\"MethodHeader ::= MethodHeaderName MethodHeaderParameters...\");  //$NON-NLS-1$", "-    case 135 : // System.out.println(\"MethodPushModifiersHeader ::= MethodPushModifiersHeaderName...\");  //$NON-NLS-1$", "-\t\t    consumeMethodHeader();  ", "-\t\t\tbreak ;", "- ", "-    case 136 : // System.out.println(\"MethodPushModifiersHeaderName ::= Modifiers Type PushModifiers...\");  //$NON-NLS-1$", "-\t\t    consumeMethodPushModifiersHeaderName();  ", "-\t\t\tbreak ;", "- ", "-    case 137 : // System.out.println(\"MethodPushModifiersHeaderName ::= Type PushModifiers Identifier...\");  //$NON-NLS-1$", "-\t\t    consumeMethodPushModifiersHeaderName();  ", "-\t\t\tbreak ;", "- ", "-    case 138 : // System.out.println(\"MethodHeaderName ::= Modifiersopt Type Identifier LPAREN\");  //$NON-NLS-1$", "+    case 134 : // System.out.println(\"MethodHeaderName ::= Modifiersopt Type Identifier LPAREN\");  //$NON-NLS-1$", "-    case 139 : // System.out.println(\"MethodHeaderParameters ::= FormalParameterListopt RPAREN\");  //$NON-NLS-1$", "+    case 135 : // System.out.println(\"MethodHeaderParameters ::= FormalParameterListopt RPAREN\");  //$NON-NLS-1$", "-    case 140 : // System.out.println(\"MethodHeaderExtendedDims ::= Dimsopt\");  //$NON-NLS-1$", "+    case 136 : // System.out.println(\"MethodHeaderExtendedDims ::= Dimsopt\");  //$NON-NLS-1$", "-    case 141 : // System.out.println(\"MethodHeaderThrowsClause ::= throws ClassTypeList\");  //$NON-NLS-1$", "+    case 137 : // System.out.println(\"MethodHeaderThrowsClause ::= throws ClassTypeList\");  //$NON-NLS-1$", "-    case 142 : // System.out.println(\"ConstructorHeader ::= ConstructorHeaderName MethodHeaderParameters\");  //$NON-NLS-1$", "+    case 138 : // System.out.println(\"ConstructorHeader ::= ConstructorHeaderName MethodHeaderParameters\");  //$NON-NLS-1$", "-    case 143 : // System.out.println(\"ConstructorHeaderName ::= Modifiersopt Identifier LPAREN\");  //$NON-NLS-1$", "+    case 139 : // System.out.println(\"ConstructorHeaderName ::= Modifiersopt Identifier LPAREN\");  //$NON-NLS-1$", "-    case 145 : // System.out.println(\"FormalParameterList ::= FormalParameterList COMMA FormalParameter\");  //$NON-NLS-1$", "+    case 141 : // System.out.println(\"FormalParameterList ::= FormalParameterList COMMA FormalParameter\");  //$NON-NLS-1$", "-    case 146 : // System.out.println(\"FormalParameter ::= Modifiersopt Type VariableDeclaratorId\");  //$NON-NLS-1$", "+    case 142 : // System.out.println(\"FormalParameter ::= Modifiersopt Type VariableDeclaratorId\");  //$NON-NLS-1$", "-    case 148 : // System.out.println(\"ClassTypeList ::= ClassTypeList COMMA ClassTypeElt\");  //$NON-NLS-1$", "+    case 144 : // System.out.println(\"ClassTypeList ::= ClassTypeList COMMA ClassTypeElt\");  //$NON-NLS-1$", "-    case 149 : // System.out.println(\"ClassTypeElt ::= ClassType\");  //$NON-NLS-1$", "+    case 145 : // System.out.println(\"ClassTypeElt ::= ClassType\");  //$NON-NLS-1$", "-    case 150 : // System.out.println(\"MethodBody ::= NestedMethod LBRACE BlockStatementsopt RBRACE\");  //$NON-NLS-1$", "+    case 146 : // System.out.println(\"MethodBody ::= NestedMethod LBRACE BlockStatementsopt RBRACE\");  //$NON-NLS-1$", "-    case 151 : // System.out.println(\"NestedMethod ::=\");  //$NON-NLS-1$", "+    case 147 : // System.out.println(\"NestedMethod ::=\");  //$NON-NLS-1$", "-    case 152 : // System.out.println(\"StaticInitializer ::= StaticOnly Block\");  //$NON-NLS-1$", "+    case 148 : // System.out.println(\"StaticInitializer ::= StaticOnly Block\");  //$NON-NLS-1$", "-    case 153 : // System.out.println(\"StaticOnly ::= static\");  //$NON-NLS-1$", "+    case 149 : // System.out.println(\"StaticOnly ::= static\");  //$NON-NLS-1$", "-    case 154 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader MethodBody\");  //$NON-NLS-1$", "+    case 150 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader MethodBody\");  //$NON-NLS-1$", "-    case 155 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader SEMICOLON\");  //$NON-NLS-1$", "+    case 151 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader SEMICOLON\");  //$NON-NLS-1$", "-    case 156 : // System.out.println(\"ExplicitConstructorInvocation ::= this LPAREN ArgumentListopt RPAREN\");  //$NON-NLS-1$", "+    case 152 : // System.out.println(\"ExplicitConstructorInvocation ::= this LPAREN ArgumentListopt RPAREN\");  //$NON-NLS-1$", "-    case 157 : // System.out.println(\"ExplicitConstructorInvocation ::= super LPAREN ArgumentListopt...\");  //$NON-NLS-1$", "+    case 153 : // System.out.println(\"ExplicitConstructorInvocation ::= super LPAREN ArgumentListopt...\");  //$NON-NLS-1$", "-    case 158 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT super LPAREN...\");  //$NON-NLS-1$", "+    case 154 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT super LPAREN...\");  //$NON-NLS-1$", "-    case 159 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT super LPAREN...\");  //$NON-NLS-1$", "+    case 155 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT super LPAREN...\");  //$NON-NLS-1$", "-    case 160 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT this LPAREN...\");  //$NON-NLS-1$", "+    case 156 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT this LPAREN...\");  //$NON-NLS-1$", "-    case 161 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT this LPAREN...\");  //$NON-NLS-1$", "+    case 157 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT this LPAREN...\");  //$NON-NLS-1$", "-    case 162 : // System.out.println(\"InterfaceDeclaration ::= InterfaceHeader InterfaceBody\");  //$NON-NLS-1$", "+    case 158 : // System.out.println(\"InterfaceDeclaration ::= InterfaceHeader InterfaceBody\");  //$NON-NLS-1$", "-    case 163 : // System.out.println(\"InterfaceHeader ::= InterfaceHeaderName InterfaceHeaderExtendsopt\");  //$NON-NLS-1$", "+    case 159 : // System.out.println(\"InterfaceHeader ::= InterfaceHeaderName InterfaceHeaderExtendsopt\");  //$NON-NLS-1$", "-    case 164 : // System.out.println(\"InterfaceHeaderName ::= Modifiersopt interface Identifier\");  //$NON-NLS-1$", "+    case 160 : // System.out.println(\"InterfaceHeaderName ::= Modifiersopt interface Identifier\");  //$NON-NLS-1$", "-    case 166 : // System.out.println(\"InterfaceHeaderExtends ::= extends InterfaceTypeList\");  //$NON-NLS-1$", "+    case 162 : // System.out.println(\"InterfaceHeaderExtends ::= extends InterfaceTypeList\");  //$NON-NLS-1$", "-    case 169 : // System.out.println(\"InterfaceMemberDeclarations ::= InterfaceMemberDeclarations...\");  //$NON-NLS-1$", "+    case 165 : // System.out.println(\"InterfaceMemberDeclarations ::= InterfaceMemberDeclarations...\");  //$NON-NLS-1$", "-    case 170 : // System.out.println(\"InterfaceMemberDeclaration ::= SEMICOLON\");  //$NON-NLS-1$", "+    case 166 : // System.out.println(\"InterfaceMemberDeclaration ::= SEMICOLON\");  //$NON-NLS-1$", "-    case 173 : // System.out.println(\"InterfaceMemberDeclaration ::= InvalidMethodDeclaration\");  //$NON-NLS-1$", "+    case 169 : // System.out.println(\"InterfaceMemberDeclaration ::= InvalidMethodDeclaration\");  //$NON-NLS-1$", "-    case 174 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader MethodBody\");  //$NON-NLS-1$", "+    case 170 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader MethodBody\");  //$NON-NLS-1$", "-    case 175 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader SEMICOLON\");  //$NON-NLS-1$", "+    case 171 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader SEMICOLON\");  //$NON-NLS-1$", "-    case 181 : // System.out.println(\"ArrayInitializer ::= LBRACE ,opt RBRACE\");  //$NON-NLS-1$", "+    case 177 : // System.out.println(\"ArrayInitializer ::= LBRACE ,opt RBRACE\");  //$NON-NLS-1$", "-    case 182 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers RBRACE\");  //$NON-NLS-1$", "+    case 178 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers RBRACE\");  //$NON-NLS-1$", "-    case 183 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers COMMA RBRACE\");  //$NON-NLS-1$", "+    case 179 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers COMMA RBRACE\");  //$NON-NLS-1$", "-    case 185 : // System.out.println(\"VariableInitializers ::= VariableInitializers COMMA...\");  //$NON-NLS-1$", "+    case 181 : // System.out.println(\"VariableInitializers ::= VariableInitializers COMMA...\");  //$NON-NLS-1$", "-    case 186 : // System.out.println(\"Block ::= OpenBlock LBRACE BlockStatementsopt RBRACE\");  //$NON-NLS-1$", "+    case 182 : // System.out.println(\"Block ::= OpenBlock LBRACE BlockStatementsopt RBRACE\");  //$NON-NLS-1$", "-    case 187 : // System.out.println(\"OpenBlock ::=\");  //$NON-NLS-1$", "+    case 183 : // System.out.println(\"OpenBlock ::=\");  //$NON-NLS-1$", "-    case 189 : // System.out.println(\"BlockStatements ::= BlockStatements BlockStatement\");  //$NON-NLS-1$", "+    case 185 : // System.out.println(\"BlockStatements ::= BlockStatements BlockStatement\");  //$NON-NLS-1$", "-    case 193 : // System.out.println(\"BlockStatement ::= InvalidInterfaceDeclaration\");  //$NON-NLS-1$", "+    case 189 : // System.out.println(\"BlockStatement ::= InvalidInterfaceDeclaration\");  //$NON-NLS-1$", "-    case 194 : // System.out.println(\"LocalVariableDeclarationStatement ::= LocalVariableDeclaration...\");  //$NON-NLS-1$", "+    case 190 : // System.out.println(\"LocalVariableDeclarationStatement ::= LocalVariableDeclaration...\");  //$NON-NLS-1$", "-    case 195 : // System.out.println(\"LocalVariableDeclaration ::= Type PushModifiers VariableDeclarators\");  //$NON-NLS-1$", "+    case 191 : // System.out.println(\"LocalVariableDeclaration ::= Type PushModifiers VariableDeclarators\");  //$NON-NLS-1$", "-    case 196 : // System.out.println(\"LocalVariableDeclaration ::= Modifiers Type PushModifiers...\");  //$NON-NLS-1$", "+    case 192 : // System.out.println(\"LocalVariableDeclaration ::= Modifiers Type PushModifiers...\");  //$NON-NLS-1$", "-    case 197 : // System.out.println(\"PushModifiers ::=\");  //$NON-NLS-1$", "+    case 193 : // System.out.println(\"PushModifiers ::=\");  //$NON-NLS-1$", "-    case 221 : // System.out.println(\"EmptyStatement ::= SEMICOLON\");  //$NON-NLS-1$", "+    case 217 : // System.out.println(\"EmptyStatement ::= SEMICOLON\");  //$NON-NLS-1$", "-    case 222 : // System.out.println(\"LabeledStatement ::= Identifier COLON Statement\");  //$NON-NLS-1$", "+    case 218 : // System.out.println(\"LabeledStatement ::= Identifier COLON Statement\");  //$NON-NLS-1$", "-    case 223 : // System.out.println(\"LabeledStatementNoShortIf ::= Identifier COLON StatementNoShortIf\");  //$NON-NLS-1$", "+    case 219 : // System.out.println(\"LabeledStatementNoShortIf ::= Identifier COLON StatementNoShortIf\");  //$NON-NLS-1$", "-     case 224 : // System.out.println(\"ExpressionStatement ::= StatementExpression SEMICOLON\");  //$NON-NLS-1$", "+     case 220 : // System.out.println(\"ExpressionStatement ::= StatementExpression SEMICOLON\");  //$NON-NLS-1$", "-    case 233 : // System.out.println(\"IfThenStatement ::= if LPAREN Expression RPAREN Statement\");  //$NON-NLS-1$", "+    case 229 : // System.out.println(\"IfThenStatement ::= if LPAREN Expression RPAREN Statement\");  //$NON-NLS-1$", "-    case 234 : // System.out.println(\"IfThenElseStatement ::= if LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "+    case 230 : // System.out.println(\"IfThenElseStatement ::= if LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "-    case 235 : // System.out.println(\"IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "+    case 231 : // System.out.println(\"IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "-    case 236 : // System.out.println(\"SwitchStatement ::= switch LPAREN Expression RPAREN OpenBlock...\");  //$NON-NLS-1$", "+    case 232 : // System.out.println(\"SwitchStatement ::= switch LPAREN Expression RPAREN OpenBlock...\");  //$NON-NLS-1$", "-    case 237 : // System.out.println(\"SwitchBlock ::= LBRACE RBRACE\");  //$NON-NLS-1$", "+    case 233 : // System.out.println(\"SwitchBlock ::= LBRACE RBRACE\");  //$NON-NLS-1$", "-    case 240 : // System.out.println(\"SwitchBlock ::= LBRACE SwitchBlockStatements SwitchLabels RBRACE\");  //$NON-NLS-1$", "+    case 236 : // System.out.println(\"SwitchBlock ::= LBRACE SwitchBlockStatements SwitchLabels RBRACE\");  //$NON-NLS-1$", "-    case 242 : // System.out.println(\"SwitchBlockStatements ::= SwitchBlockStatements SwitchBlockStatement\");  //$NON-NLS-1$", "+    case 238 : // System.out.println(\"SwitchBlockStatements ::= SwitchBlockStatements SwitchBlockStatement\");  //$NON-NLS-1$", "-    case 243 : // System.out.println(\"SwitchBlockStatement ::= SwitchLabels BlockStatements\");  //$NON-NLS-1$", "+    case 239 : // System.out.println(\"SwitchBlockStatement ::= SwitchLabels BlockStatements\");  //$NON-NLS-1$", "-    case 245 : // System.out.println(\"SwitchLabels ::= SwitchLabels SwitchLabel\");  //$NON-NLS-1$", "+    case 241 : // System.out.println(\"SwitchLabels ::= SwitchLabels SwitchLabel\");  //$NON-NLS-1$", "-     case 246 : // System.out.println(\"SwitchLabel ::= case ConstantExpression COLON\");  //$NON-NLS-1$", "+     case 242 : // System.out.println(\"SwitchLabel ::= case ConstantExpression COLON\");  //$NON-NLS-1$", "-     case 247 : // System.out.println(\"SwitchLabel ::= default COLON\");  //$NON-NLS-1$", "+     case 243 : // System.out.println(\"SwitchLabel ::= default COLON\");  //$NON-NLS-1$", "-    case 248 : // System.out.println(\"WhileStatement ::= while LPAREN Expression RPAREN Statement\");  //$NON-NLS-1$", "+    case 244 : // System.out.println(\"WhileStatement ::= while LPAREN Expression RPAREN Statement\");  //$NON-NLS-1$", "-    case 249 : // System.out.println(\"WhileStatementNoShortIf ::= while LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "+    case 245 : // System.out.println(\"WhileStatementNoShortIf ::= while LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "-    case 250 : // System.out.println(\"DoStatement ::= do Statement while LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "+    case 246 : // System.out.println(\"DoStatement ::= do Statement while LPAREN Expression RPAREN...\");  //$NON-NLS-1$", "-    case 251 : // System.out.println(\"ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt...\");  //$NON-NLS-1$", "+    case 247 : // System.out.println(\"ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt...\");  //$NON-NLS-1$", "-    case 252 : // System.out.println(\"ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON...\");  //$NON-NLS-1$", "+    case 248 : // System.out.println(\"ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON...\");  //$NON-NLS-1$", "-    case 253 : // System.out.println(\"ForInit ::= StatementExpressionList\");  //$NON-NLS-1$", "+    case 249 : // System.out.println(\"ForInit ::= StatementExpressionList\");  //$NON-NLS-1$", "-    case 257 : // System.out.println(\"StatementExpressionList ::= StatementExpressionList COMMA...\");  //$NON-NLS-1$", "+    case 253 : // System.out.println(\"StatementExpressionList ::= StatementExpressionList COMMA...\");  //$NON-NLS-1$", "-    case 258 : // System.out.println(\"AssertStatement ::= assert Expression SEMICOLON\");  //$NON-NLS-1$", "+    case 254 : // System.out.println(\"AssertStatement ::= assert Expression SEMICOLON\");  //$NON-NLS-1$", "-    case 259 : // System.out.println(\"AssertStatement ::= assert Expression COLON Expression SEMICOLON\");  //$NON-NLS-1$", "+    case 255 : // System.out.println(\"AssertStatement ::= assert Expression COLON Expression SEMICOLON\");  //$NON-NLS-1$", "-    case 260 : // System.out.println(\"BreakStatement ::= break SEMICOLON\");  //$NON-NLS-1$", "+    case 256 : // System.out.println(\"BreakStatement ::= break SEMICOLON\");  //$NON-NLS-1$", "-    case 261 : // System.out.println(\"BreakStatement ::= break Identifier SEMICOLON\");  //$NON-NLS-1$", "+    case 257 : // System.out.println(\"BreakStatement ::= break Identifier SEMICOLON\");  //$NON-NLS-1$", "-    case 262 : // System.out.println(\"ContinueStatement ::= continue SEMICOLON\");  //$NON-NLS-1$", "+    case 258 : // System.out.println(\"ContinueStatement ::= continue SEMICOLON\");  //$NON-NLS-1$", "-    case 263 : // System.out.println(\"ContinueStatement ::= continue Identifier SEMICOLON\");  //$NON-NLS-1$", "+    case 259 : // System.out.println(\"ContinueStatement ::= continue Identifier SEMICOLON\");  //$NON-NLS-1$", "-    case 264 : // System.out.println(\"ReturnStatement ::= return Expressionopt SEMICOLON\");  //$NON-NLS-1$", "+    case 260 : // System.out.println(\"ReturnStatement ::= return Expressionopt SEMICOLON\");  //$NON-NLS-1$", "-    case 265 : // System.out.println(\"ThrowStatement ::= throw Expression SEMICOLON\");  //$NON-NLS-1$", "+    case 261 : // System.out.println(\"ThrowStatement ::= throw Expression SEMICOLON\");  //$NON-NLS-1$", "-    case 266 : // System.out.println(\"SynchronizedStatement ::= OnlySynchronized LPAREN Expression RPAREN\");  //$NON-NLS-1$", "+    case 262 : // System.out.println(\"SynchronizedStatement ::= OnlySynchronized LPAREN Expression RPAREN\");  //$NON-NLS-1$", "-    case 267 : // System.out.println(\"OnlySynchronized ::= synchronized\");  //$NON-NLS-1$", "+    case 263 : // System.out.println(\"OnlySynchronized ::= synchronized\");  //$NON-NLS-1$", "-    case 268 : // System.out.println(\"TryStatement ::= try Block Catches\");  //$NON-NLS-1$", "+    case 264 : // System.out.println(\"TryStatement ::= try Block Catches\");  //$NON-NLS-1$", "-    case 269 : // System.out.println(\"TryStatement ::= try Block Catchesopt Finally\");  //$NON-NLS-1$", "+    case 265 : // System.out.println(\"TryStatement ::= try Block Catchesopt Finally\");  //$NON-NLS-1$", "-    case 271 : // System.out.println(\"Catches ::= Catches CatchClause\");  //$NON-NLS-1$", "+    case 267 : // System.out.println(\"Catches ::= Catches CatchClause\");  //$NON-NLS-1$", "-    case 272 : // System.out.println(\"CatchClause ::= catch LPAREN FormalParameter RPAREN Block\");  //$NON-NLS-1$", "+    case 268 : // System.out.println(\"CatchClause ::= catch LPAREN FormalParameter RPAREN Block\");  //$NON-NLS-1$", "-    case 274 : // System.out.println(\"PushLPAREN ::= LPAREN\");  //$NON-NLS-1$", "+    case 270 : // System.out.println(\"PushLPAREN ::= LPAREN\");  //$NON-NLS-1$", "-    case 275 : // System.out.println(\"PushRPAREN ::= RPAREN\");  //$NON-NLS-1$", "+    case 271 : // System.out.println(\"PushRPAREN ::= RPAREN\");  //$NON-NLS-1$", "-    case 280 : // System.out.println(\"PrimaryNoNewArray ::= this\");  //$NON-NLS-1$", "+    case 276 : // System.out.println(\"PrimaryNoNewArray ::= this\");  //$NON-NLS-1$", "-    case 281 : // System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Expression PushRPAREN\");  //$NON-NLS-1$", "+    case 277 : // System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Expression PushRPAREN\");  //$NON-NLS-1$", "-    case 284 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT this\");  //$NON-NLS-1$", "+    case 280 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT this\");  //$NON-NLS-1$", "-    case 285 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT super\");  //$NON-NLS-1$", "+    case 281 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT super\");  //$NON-NLS-1$", "-    case 286 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT class\");  //$NON-NLS-1$", "+    case 282 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT class\");  //$NON-NLS-1$", "-    case 287 : // System.out.println(\"PrimaryNoNewArray ::= ArrayType DOT class\");  //$NON-NLS-1$", "+    case 283 : // System.out.println(\"PrimaryNoNewArray ::= ArrayType DOT class\");  //$NON-NLS-1$", "-    case 288 : // System.out.println(\"PrimaryNoNewArray ::= PrimitiveType DOT class\");  //$NON-NLS-1$", "+    case 284 : // System.out.println(\"PrimaryNoNewArray ::= PrimitiveType DOT class\");  //$NON-NLS-1$", "-    case 291 : // System.out.println(\"AllocationHeader ::= new ClassType LPAREN ArgumentListopt RPAREN\");  //$NON-NLS-1$", "+    case 287 : // System.out.println(\"AllocationHeader ::= new ClassType LPAREN ArgumentListopt RPAREN\");  //$NON-NLS-1$", "-    case 292 : // System.out.println(\"ClassInstanceCreationExpression ::= new ClassType LPAREN...\");  //$NON-NLS-1$", "+    case 288 : // System.out.println(\"ClassInstanceCreationExpression ::= new ClassType LPAREN...\");  //$NON-NLS-1$", "-    case 293 : // System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new SimpleName...\");  //$NON-NLS-1$", "+    case 289 : // System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new SimpleName...\");  //$NON-NLS-1$", "-    case 294 : // System.out.println(\"ClassInstanceCreationExpression ::=...\");  //$NON-NLS-1$", "+    case 290 : // System.out.println(\"ClassInstanceCreationExpression ::=...\");  //$NON-NLS-1$", "-    case 295 : // System.out.println(\"ClassInstanceCreationExpressionName ::= Name DOT\");  //$NON-NLS-1$", "+    case 291 : // System.out.println(\"ClassInstanceCreationExpressionName ::= Name DOT\");  //$NON-NLS-1$", "-    case 296 : // System.out.println(\"ClassBodyopt ::=\");  //$NON-NLS-1$", "+    case 292 : // System.out.println(\"ClassBodyopt ::=\");  //$NON-NLS-1$", "-    case 298 : // System.out.println(\"EnterAnonymousClassBody ::=\");  //$NON-NLS-1$", "+    case 294 : // System.out.println(\"EnterAnonymousClassBody ::=\");  //$NON-NLS-1$", "-    case 300 : // System.out.println(\"ArgumentList ::= ArgumentList COMMA Expression\");  //$NON-NLS-1$", "+    case 296 : // System.out.println(\"ArgumentList ::= ArgumentList COMMA Expression\");  //$NON-NLS-1$", "-    case 301 : // System.out.println(\"ArrayCreationHeader ::= new PrimitiveType DimWithOrWithOutExprs\");  //$NON-NLS-1$", "+    case 297 : // System.out.println(\"ArrayCreationHeader ::= new PrimitiveType DimWithOrWithOutExprs\");  //$NON-NLS-1$", "-    case 302 : // System.out.println(\"ArrayCreationHeader ::= new ClassOrInterfaceType...\");  //$NON-NLS-1$", "+    case 298 : // System.out.println(\"ArrayCreationHeader ::= new ClassOrInterfaceType...\");  //$NON-NLS-1$", "-    case 303 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new PrimitiveType...\");  //$NON-NLS-1$", "+    case 299 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new PrimitiveType...\");  //$NON-NLS-1$", "-    case 304 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new PrimitiveType...\");  //$NON-NLS-1$", "+    case 300 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new PrimitiveType...\");  //$NON-NLS-1$", "-    case 305 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new ClassOrInterfaceType...\");  //$NON-NLS-1$", "+    case 301 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new ClassOrInterfaceType...\");  //$NON-NLS-1$", "-    case 306 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new ClassOrInterfaceType...\");  //$NON-NLS-1$", "+    case 302 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new ClassOrInterfaceType...\");  //$NON-NLS-1$", "-    case 308 : // System.out.println(\"DimWithOrWithOutExprs ::= DimWithOrWithOutExprs DimWithOrWithOutExpr\");  //$NON-NLS-1$", "+    case 304 : // System.out.println(\"DimWithOrWithOutExprs ::= DimWithOrWithOutExprs DimWithOrWithOutExpr\");  //$NON-NLS-1$", "-     case 310 : // System.out.println(\"DimWithOrWithOutExpr ::= LBRACKET RBRACKET\");  //$NON-NLS-1$", "+     case 306 : // System.out.println(\"DimWithOrWithOutExpr ::= LBRACKET RBRACKET\");  //$NON-NLS-1$", "-     case 311 : // System.out.println(\"Dims ::= DimsLoop\");  //$NON-NLS-1$", "+     case 307 : // System.out.println(\"Dims ::= DimsLoop\");  //$NON-NLS-1$", "-     case 314 : // System.out.println(\"OneDimLoop ::= LBRACKET RBRACKET\");  //$NON-NLS-1$", "+     case 310 : // System.out.println(\"OneDimLoop ::= LBRACKET RBRACKET\");  //$NON-NLS-1$", "-    case 315 : // System.out.println(\"FieldAccess ::= Primary DOT Identifier\");  //$NON-NLS-1$", "+    case 311 : // System.out.println(\"FieldAccess ::= Primary DOT Identifier\");  //$NON-NLS-1$", "-    case 316 : // System.out.println(\"FieldAccess ::= super DOT Identifier\");  //$NON-NLS-1$", "+    case 312 : // System.out.println(\"FieldAccess ::= super DOT Identifier\");  //$NON-NLS-1$", "-    case 317 : // System.out.println(\"MethodInvocation ::= Name LPAREN ArgumentListopt RPAREN\");  //$NON-NLS-1$", "+    case 313 : // System.out.println(\"MethodInvocation ::= Name LPAREN ArgumentListopt RPAREN\");  //$NON-NLS-1$", "-    case 318 : // System.out.println(\"MethodInvocation ::= Primary DOT Identifier LPAREN ArgumentListopt\");  //$NON-NLS-1$", "+    case 314 : // System.out.println(\"MethodInvocation ::= Primary DOT Identifier LPAREN ArgumentListopt\");  //$NON-NLS-1$", "-    case 319 : // System.out.println(\"MethodInvocation ::= super DOT Identifier LPAREN ArgumentListopt...\");  //$NON-NLS-1$", "+    case 315 : // System.out.println(\"MethodInvocation ::= super DOT Identifier LPAREN ArgumentListopt...\");  //$NON-NLS-1$", "-    case 320 : // System.out.println(\"ArrayAccess ::= Name LBRACKET Expression RBRACKET\");  //$NON-NLS-1$", "+    case 316 : // System.out.println(\"ArrayAccess ::= Name LBRACKET Expression RBRACKET\");  //$NON-NLS-1$", "-    case 321 : // System.out.println(\"ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression RBRACKET\");  //$NON-NLS-1$", "+    case 317 : // System.out.println(\"ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression RBRACKET\");  //$NON-NLS-1$", "-    case 322 : // System.out.println(\"ArrayAccess ::= ArrayCreationWithArrayInitializer LBRACKET...\");  //$NON-NLS-1$", "+    case 318 : // System.out.println(\"ArrayAccess ::= ArrayCreationWithArrayInitializer LBRACKET...\");  //$NON-NLS-1$", "-    case 324 : // System.out.println(\"PostfixExpression ::= Name\");  //$NON-NLS-1$", "+    case 320 : // System.out.println(\"PostfixExpression ::= Name\");  //$NON-NLS-1$", "-    case 327 : // System.out.println(\"PostIncrementExpression ::= PostfixExpression PLUS_PLUS\");  //$NON-NLS-1$", "+    case 323 : // System.out.println(\"PostIncrementExpression ::= PostfixExpression PLUS_PLUS\");  //$NON-NLS-1$", "-    case 328 : // System.out.println(\"PostDecrementExpression ::= PostfixExpression MINUS_MINUS\");  //$NON-NLS-1$", "+    case 324 : // System.out.println(\"PostDecrementExpression ::= PostfixExpression MINUS_MINUS\");  //$NON-NLS-1$", "-    case 329 : // System.out.println(\"PushPosition ::=\");  //$NON-NLS-1$", "+    case 325 : // System.out.println(\"PushPosition ::=\");  //$NON-NLS-1$", "-    case 332 : // System.out.println(\"UnaryExpression ::= PLUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "+    case 328 : // System.out.println(\"UnaryExpression ::= PLUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "-    case 333 : // System.out.println(\"UnaryExpression ::= MINUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "+    case 329 : // System.out.println(\"UnaryExpression ::= MINUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "-    case 335 : // System.out.println(\"PreIncrementExpression ::= PLUS_PLUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "+    case 331 : // System.out.println(\"PreIncrementExpression ::= PLUS_PLUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "-    case 336 : // System.out.println(\"PreDecrementExpression ::= MINUS_MINUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "+    case 332 : // System.out.println(\"PreDecrementExpression ::= MINUS_MINUS PushPosition UnaryExpression\");  //$NON-NLS-1$", "-    case 338 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= TWIDDLE PushPosition UnaryExpression\");  //$NON-NLS-1$", "+    case 334 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= TWIDDLE PushPosition UnaryExpression\");  //$NON-NLS-1$", "-    case 339 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= NOT PushPosition UnaryExpression\");  //$NON-NLS-1$", "+    case 335 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= NOT PushPosition UnaryExpression\");  //$NON-NLS-1$", "-    case 341 : // System.out.println(\"CastExpression ::= PushLPAREN PrimitiveType Dimsopt PushRPAREN...\");  //$NON-NLS-1$", "+    case 337 : // System.out.println(\"CastExpression ::= PushLPAREN PrimitiveType Dimsopt PushRPAREN...\");  //$NON-NLS-1$", "-    case 342 : // System.out.println(\"CastExpression ::= PushLPAREN Name Dims PushRPAREN...\");  //$NON-NLS-1$", "+    case 338 : // System.out.println(\"CastExpression ::= PushLPAREN Name Dims PushRPAREN...\");  //$NON-NLS-1$", "-    case 343 : // System.out.println(\"CastExpression ::= PushLPAREN Expression PushRPAREN...\");  //$NON-NLS-1$", "+    case 339 : // System.out.println(\"CastExpression ::= PushLPAREN Expression PushRPAREN...\");  //$NON-NLS-1$", "-    case 344 : // System.out.println(\"InsideCastExpression ::=\");  //$NON-NLS-1$", "+    case 340 : // System.out.println(\"InsideCastExpression ::=\");  //$NON-NLS-1$", "-    case 345 : // System.out.println(\"InsideCastExpressionLL1 ::=\");  //$NON-NLS-1$", "+    case 341 : // System.out.println(\"InsideCastExpressionLL1 ::=\");  //$NON-NLS-1$", "-    case 347 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression MULTIPLY...\");  //$NON-NLS-1$", "+    case 343 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression MULTIPLY...\");  //$NON-NLS-1$", "-    case 348 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression DIVIDE...\");  //$NON-NLS-1$", "+    case 344 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression DIVIDE...\");  //$NON-NLS-1$", "-    case 349 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression REMAINDER...\");  //$NON-NLS-1$", "+    case 345 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression REMAINDER...\");  //$NON-NLS-1$", "-    case 351 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression PLUS...\");  //$NON-NLS-1$", "+    case 347 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression PLUS...\");  //$NON-NLS-1$", "-    case 352 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression MINUS...\");  //$NON-NLS-1$", "+    case 348 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression MINUS...\");  //$NON-NLS-1$", "-    case 354 : // System.out.println(\"ShiftExpression ::= ShiftExpression LEFT_SHIFT AdditiveExpression\");  //$NON-NLS-1$", "+    case 350 : // System.out.println(\"ShiftExpression ::= ShiftExpression LEFT_SHIFT AdditiveExpression\");  //$NON-NLS-1$", "-    case 355 : // System.out.println(\"ShiftExpression ::= ShiftExpression RIGHT_SHIFT AdditiveExpression\");  //$NON-NLS-1$", "+    case 351 : // System.out.println(\"ShiftExpression ::= ShiftExpression RIGHT_SHIFT AdditiveExpression\");  //$NON-NLS-1$", "-    case 356 : // System.out.println(\"ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT...\");  //$NON-NLS-1$", "+    case 352 : // System.out.println(\"ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT...\");  //$NON-NLS-1$", "-    case 358 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS ShiftExpression\");  //$NON-NLS-1$", "+    case 354 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS ShiftExpression\");  //$NON-NLS-1$", "-    case 359 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER...\");  //$NON-NLS-1$", "+    case 355 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER...\");  //$NON-NLS-1$", "-    case 360 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS_EQUAL...\");  //$NON-NLS-1$", "+    case 356 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS_EQUAL...\");  //$NON-NLS-1$", "-    case 361 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER_EQUAL...\");  //$NON-NLS-1$", "+    case 357 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER_EQUAL...\");  //$NON-NLS-1$", "-    case 362 : // System.out.println(\"RelationalExpression ::= RelationalExpression instanceof...\");  //$NON-NLS-1$", "+    case 358 : // System.out.println(\"RelationalExpression ::= RelationalExpression instanceof...\");  //$NON-NLS-1$", "-    case 364 : // System.out.println(\"EqualityExpression ::= EqualityExpression EQUAL_EQUAL...\");  //$NON-NLS-1$", "+    case 360 : // System.out.println(\"EqualityExpression ::= EqualityExpression EQUAL_EQUAL...\");  //$NON-NLS-1$", "-    case 365 : // System.out.println(\"EqualityExpression ::= EqualityExpression NOT_EQUAL...\");  //$NON-NLS-1$", "+    case 361 : // System.out.println(\"EqualityExpression ::= EqualityExpression NOT_EQUAL...\");  //$NON-NLS-1$", "-    case 367 : // System.out.println(\"AndExpression ::= AndExpression AND EqualityExpression\");  //$NON-NLS-1$", "+    case 363 : // System.out.println(\"AndExpression ::= AndExpression AND EqualityExpression\");  //$NON-NLS-1$", "-    case 369 : // System.out.println(\"ExclusiveOrExpression ::= ExclusiveOrExpression XOR AndExpression\");  //$NON-NLS-1$", "+    case 365 : // System.out.println(\"ExclusiveOrExpression ::= ExclusiveOrExpression XOR AndExpression\");  //$NON-NLS-1$", "-    case 371 : // System.out.println(\"InclusiveOrExpression ::= InclusiveOrExpression OR...\");  //$NON-NLS-1$", "+    case 367 : // System.out.println(\"InclusiveOrExpression ::= InclusiveOrExpression OR...\");  //$NON-NLS-1$", "-    case 373 : // System.out.println(\"ConditionalAndExpression ::= ConditionalAndExpression AND_AND...\");  //$NON-NLS-1$", "+    case 369 : // System.out.println(\"ConditionalAndExpression ::= ConditionalAndExpression AND_AND...\");  //$NON-NLS-1$", "-    case 375 : // System.out.println(\"ConditionalOrExpression ::= ConditionalOrExpression OR_OR...\");  //$NON-NLS-1$", "+    case 371 : // System.out.println(\"ConditionalOrExpression ::= ConditionalOrExpression OR_OR...\");  //$NON-NLS-1$", "-    case 377 : // System.out.println(\"ConditionalExpression ::= ConditionalOrExpression QUESTION...\");  //$NON-NLS-1$", "+    case 373 : // System.out.println(\"ConditionalExpression ::= ConditionalOrExpression QUESTION...\");  //$NON-NLS-1$", "-    case 380 : // System.out.println(\"Assignment ::= PostfixExpression AssignmentOperator...\");  //$NON-NLS-1$", "+    case 376 : // System.out.println(\"Assignment ::= PostfixExpression AssignmentOperator...\");  //$NON-NLS-1$", "-    case 382 : // System.out.println(\"Assignment ::= InvalidArrayInitializerAssignement\");  //$NON-NLS-1$", "+    case 378 : // System.out.println(\"Assignment ::= InvalidArrayInitializerAssignement\");  //$NON-NLS-1$", "-    case 383 : // System.out.println(\"AssignmentOperator ::= EQUAL\");  //$NON-NLS-1$", "+    case 379 : // System.out.println(\"AssignmentOperator ::= EQUAL\");  //$NON-NLS-1$", "-    case 384 : // System.out.println(\"AssignmentOperator ::= MULTIPLY_EQUAL\");  //$NON-NLS-1$", "+    case 380 : // System.out.println(\"AssignmentOperator ::= MULTIPLY_EQUAL\");  //$NON-NLS-1$", "-    case 385 : // System.out.println(\"AssignmentOperator ::= DIVIDE_EQUAL\");  //$NON-NLS-1$", "+    case 381 : // System.out.println(\"AssignmentOperator ::= DIVIDE_EQUAL\");  //$NON-NLS-1$", "-    case 386 : // System.out.println(\"AssignmentOperator ::= REMAINDER_EQUAL\");  //$NON-NLS-1$", "+    case 382 : // System.out.println(\"AssignmentOperator ::= REMAINDER_EQUAL\");  //$NON-NLS-1$", "-    case 387 : // System.out.println(\"AssignmentOperator ::= PLUS_EQUAL\");  //$NON-NLS-1$", "+    case 383 : // System.out.println(\"AssignmentOperator ::= PLUS_EQUAL\");  //$NON-NLS-1$", "-    case 388 : // System.out.println(\"AssignmentOperator ::= MINUS_EQUAL\");  //$NON-NLS-1$", "+    case 384 : // System.out.println(\"AssignmentOperator ::= MINUS_EQUAL\");  //$NON-NLS-1$", "-    case 389 : // System.out.println(\"AssignmentOperator ::= LEFT_SHIFT_EQUAL\");  //$NON-NLS-1$", "+    case 385 : // System.out.println(\"AssignmentOperator ::= LEFT_SHIFT_EQUAL\");  //$NON-NLS-1$", "-    case 390 : // System.out.println(\"AssignmentOperator ::= RIGHT_SHIFT_EQUAL\");  //$NON-NLS-1$", "+    case 386 : // System.out.println(\"AssignmentOperator ::= RIGHT_SHIFT_EQUAL\");  //$NON-NLS-1$", "-    case 391 : // System.out.println(\"AssignmentOperator ::= UNSIGNED_RIGHT_SHIFT_EQUAL\");  //$NON-NLS-1$", "+    case 387 : // System.out.println(\"AssignmentOperator ::= UNSIGNED_RIGHT_SHIFT_EQUAL\");  //$NON-NLS-1$", "-    case 392 : // System.out.println(\"AssignmentOperator ::= AND_EQUAL\");  //$NON-NLS-1$", "+    case 388 : // System.out.println(\"AssignmentOperator ::= AND_EQUAL\");  //$NON-NLS-1$", "-    case 393 : // System.out.println(\"AssignmentOperator ::= XOR_EQUAL\");  //$NON-NLS-1$", "+    case 389 : // System.out.println(\"AssignmentOperator ::= XOR_EQUAL\");  //$NON-NLS-1$", "-    case 394 : // System.out.println(\"AssignmentOperator ::= OR_EQUAL\");  //$NON-NLS-1$", "+    case 390 : // System.out.println(\"AssignmentOperator ::= OR_EQUAL\");  //$NON-NLS-1$", "-    case 401 : // System.out.println(\"Expressionopt ::=\");  //$NON-NLS-1$", "+    case 397 : // System.out.println(\"Expressionopt ::=\");  //$NON-NLS-1$", "-    case 405 : // System.out.println(\"ImportDeclarationsopt ::=\");  //$NON-NLS-1$", "+    case 401 : // System.out.println(\"ImportDeclarationsopt ::=\");  //$NON-NLS-1$", "-    case 406 : // System.out.println(\"ImportDeclarationsopt ::= ImportDeclarations\");  //$NON-NLS-1$", "+    case 402 : // System.out.println(\"ImportDeclarationsopt ::= ImportDeclarations\");  //$NON-NLS-1$", "-    case 407 : // System.out.println(\"TypeDeclarationsopt ::=\");  //$NON-NLS-1$", "+    case 403 : // System.out.println(\"TypeDeclarationsopt ::=\");  //$NON-NLS-1$", "-    case 408 : // System.out.println(\"TypeDeclarationsopt ::= TypeDeclarations\");  //$NON-NLS-1$", "+    case 404 : // System.out.println(\"TypeDeclarationsopt ::= TypeDeclarations\");  //$NON-NLS-1$", "-    case 409 : // System.out.println(\"ClassBodyDeclarationsopt ::=\");  //$NON-NLS-1$", "+    case 405 : // System.out.println(\"ClassBodyDeclarationsopt ::=\");  //$NON-NLS-1$", "-    case 410 : // System.out.println(\"ClassBodyDeclarationsopt ::= NestedType ClassBodyDeclarations\");  //$NON-NLS-1$", "+    case 406 : // System.out.println(\"ClassBodyDeclarationsopt ::= NestedType ClassBodyDeclarations\");  //$NON-NLS-1$", "-     case 411 : // System.out.println(\"Modifiersopt ::=\");  //$NON-NLS-1$", "+     case 407 : // System.out.println(\"Modifiersopt ::=\");  //$NON-NLS-1$", "-    case 412 : // System.out.println(\"Modifiersopt ::= Modifiers\");  //$NON-NLS-1$", "+    case 408 : // System.out.println(\"Modifiersopt ::= Modifiers\");  //$NON-NLS-1$", "-    case 413 : // System.out.println(\"BlockStatementsopt ::=\");  //$NON-NLS-1$", "+    case 409 : // System.out.println(\"BlockStatementsopt ::=\");  //$NON-NLS-1$", "-     case 415 : // System.out.println(\"Dimsopt ::=\");  //$NON-NLS-1$", "+     case 411 : // System.out.println(\"Dimsopt ::=\");  //$NON-NLS-1$", "-     case 417 : // System.out.println(\"ArgumentListopt ::=\");  //$NON-NLS-1$", "+     case 413 : // System.out.println(\"ArgumentListopt ::=\");  //$NON-NLS-1$", "-    case 421 : // System.out.println(\"FormalParameterListopt ::=\");  //$NON-NLS-1$", "+    case 417 : // System.out.println(\"FormalParameterListopt ::=\");  //$NON-NLS-1$", "-     case 425 : // System.out.println(\"InterfaceMemberDeclarationsopt ::=\");  //$NON-NLS-1$", "+     case 421 : // System.out.println(\"InterfaceMemberDeclarationsopt ::=\");  //$NON-NLS-1$", "-     case 426 : // System.out.println(\"InterfaceMemberDeclarationsopt ::= NestedType...\");  //$NON-NLS-1$", "+     case 422 : // System.out.println(\"InterfaceMemberDeclarationsopt ::= NestedType...\");  //$NON-NLS-1$", "-    case 427 : // System.out.println(\"NestedType ::=\");  //$NON-NLS-1$", "+    case 423 : // System.out.println(\"NestedType ::=\");  //$NON-NLS-1$", "-     case 428 : // System.out.println(\"ForInitopt ::=\");  //$NON-NLS-1$", "+     case 424 : // System.out.println(\"ForInitopt ::=\");  //$NON-NLS-1$", "-     case 430 : // System.out.println(\"ForUpdateopt ::=\");  //$NON-NLS-1$", "+     case 426 : // System.out.println(\"ForUpdateopt ::=\");  //$NON-NLS-1$", "-     case 434 : // System.out.println(\"Catchesopt ::=\");  //$NON-NLS-1$", "+     case 430 : // System.out.println(\"Catchesopt ::=\");  //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7824d0bd4db2b071078614c3cd55a4ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c8e7b4e01df9aa644d2160be3783e770b3cf2574", "commitAfterChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 153, "signatureBeforeChange": " protected void consumeRule(int act)", "signatureAfterChange": " protected void consumeRule(int act)", "diff": ["-    case 29 : // System.out.println(\"Type ::= PrimitiveType\");", "+    case 27 : // System.out.println(\"Type ::= PrimitiveType\");", "-    case 43 : // System.out.println(\"ReferenceType ::= ClassOrInterfaceType\");", "+    case 41 : // System.out.println(\"ReferenceType ::= ClassOrInterfaceType\");", "-    case 52 : // System.out.println(\"QualifiedName ::= Name DOT SimpleName\");", "+    case 50 : // System.out.println(\"QualifiedName ::= Name DOT SimpleName\");", "-    case 53 : // System.out.println(\"CompilationUnit ::= EnterCompilationUnit PackageDeclarationopt ImportDeclarationsopt\");", "+    case 51 : // System.out.println(\"CompilationUnit ::= EnterCompilationUnit PackageDeclarationopt ImportDeclarationsopt\");", "-    case 54 : // System.out.println(\"EnterCompilationUnit ::=\");", "+    case 52 : // System.out.println(\"EnterCompilationUnit ::=\");", "-    case 67 : // System.out.println(\"CatchHeader ::= catch LPAREN FormalParameter RPAREN LBRACE\");", "+    case 65 : // System.out.println(\"CatchHeader ::= catch LPAREN FormalParameter RPAREN LBRACE\");", "-    case 69 : // System.out.println(\"ImportDeclarations ::= ImportDeclarations ImportDeclaration\");", "+    case 67 : // System.out.println(\"ImportDeclarations ::= ImportDeclarations ImportDeclaration\");", "-    case 71 : // System.out.println(\"TypeDeclarations ::= TypeDeclarations TypeDeclaration\");", "+    case 69 : // System.out.println(\"TypeDeclarations ::= TypeDeclarations TypeDeclaration\");", "-    case 72 : // System.out.println(\"PackageDeclaration ::= PackageDeclarationName SEMICOLON\");", "+    case 70 : // System.out.println(\"PackageDeclaration ::= PackageDeclarationName SEMICOLON\");", "-    case 73 : // System.out.println(\"PackageDeclarationName ::= package Name\");", "+    case 71 : // System.out.println(\"PackageDeclarationName ::= package Name\");", "-    case 76 : // System.out.println(\"SingleTypeImportDeclaration ::= SingleTypeImportDeclarationName SEMICOLON\");", "+    case 74 : // System.out.println(\"SingleTypeImportDeclaration ::= SingleTypeImportDeclarationName SEMICOLON\");", "-    case 77 : // System.out.println(\"SingleTypeImportDeclarationName ::= import Name\");", "+    case 75 : // System.out.println(\"SingleTypeImportDeclarationName ::= import Name\");", "-    case 78 : // System.out.println(\"TypeImportOnDemandDeclaration ::= TypeImportOnDemandDeclarationName SEMICOLON\");", "+    case 76 : // System.out.println(\"TypeImportOnDemandDeclaration ::= TypeImportOnDemandDeclarationName SEMICOLON\");", "-    case 79 : // System.out.println(\"TypeImportOnDemandDeclarationName ::= import Name DOT MULTIPLY\");", "+    case 77 : // System.out.println(\"TypeImportOnDemandDeclarationName ::= import Name DOT MULTIPLY\");", "-     case 82 : // System.out.println(\"TypeDeclaration ::= SEMICOLON\");", "+     case 80 : // System.out.println(\"TypeDeclaration ::= SEMICOLON\");", "-    case 96 : // System.out.println(\"ClassDeclaration ::= ClassHeader ClassBody\");", "+    case 94 : // System.out.println(\"ClassDeclaration ::= ClassHeader ClassBody\");", "-    case 97 : // System.out.println(\"ClassHeader ::= ClassHeaderName ClassHeaderExtendsopt ClassHeaderImplementsopt\");", "+    case 95 : // System.out.println(\"ClassHeader ::= ClassHeaderName ClassHeaderExtendsopt ClassHeaderImplementsopt\");", "-    case 98 : // System.out.println(\"ClassHeaderName ::= Modifiersopt class Identifier\");", "+    case 96 : // System.out.println(\"ClassHeaderName ::= Modifiersopt class Identifier\");", "-    case 99 : // System.out.println(\"ClassHeaderExtends ::= extends ClassType\");", "+    case 97 : // System.out.println(\"ClassHeaderExtends ::= extends ClassType\");", "-    case 100 : // System.out.println(\"ClassHeaderImplements ::= implements InterfaceTypeList\");", "+    case 98 : // System.out.println(\"ClassHeaderImplements ::= implements InterfaceTypeList\");", "-    case 102 : // System.out.println(\"InterfaceTypeList ::= InterfaceTypeList COMMA InterfaceType\");", "+    case 100 : // System.out.println(\"InterfaceTypeList ::= InterfaceTypeList COMMA InterfaceType\");", "-    case 103 : // System.out.println(\"InterfaceType ::= ClassOrInterfaceType\");", "+    case 101 : // System.out.println(\"InterfaceType ::= ClassOrInterfaceType\");", "-    case 106 : // System.out.println(\"ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration\");", "+    case 104 : // System.out.println(\"ClassBodyDeclarations ::= ClassBodyDeclarations ClassBodyDeclaration\");", "-    case 110 : // System.out.println(\"ClassBodyDeclaration ::= Diet NestedMethod Block\");", "+    case 108 : // System.out.println(\"ClassBodyDeclaration ::= Diet NestedMethod Block\");", "-    case 111 : // System.out.println(\"Diet ::=\");", "+    case 109 : // System.out.println(\"Diet ::=\");", "-    case 112 : // System.out.println(\"Initializer ::= Diet NestedMethod Block\");", "+    case 110 : // System.out.println(\"Initializer ::= Diet NestedMethod Block\");", "-    case 119 : // System.out.println(\"ClassMemberDeclaration ::= SEMICOLON\");", "+    case 117 : // System.out.println(\"ClassMemberDeclaration ::= SEMICOLON\");", "-    case 120 : // System.out.println(\"FieldDeclaration ::= Modifiersopt Type VariableDeclarators SEMICOLON\");", "+    case 118 : // System.out.println(\"FieldDeclaration ::= Modifiersopt Type VariableDeclarators SEMICOLON\");", "-    case 122 : // System.out.println(\"VariableDeclarators ::= VariableDeclarators COMMA VariableDeclarator\");", "+    case 120 : // System.out.println(\"VariableDeclarators ::= VariableDeclarators COMMA VariableDeclarator\");", "-    case 125 : // System.out.println(\"EnterVariable ::=\");", "+    case 123 : // System.out.println(\"EnterVariable ::=\");", "-    case 126 : // System.out.println(\"ExitVariableWithInitialization ::=\");", "+    case 124 : // System.out.println(\"ExitVariableWithInitialization ::=\");", "-    case 127 : // System.out.println(\"ExitVariableWithoutInitialization ::=\");", "+    case 125 : // System.out.println(\"ExitVariableWithoutInitialization ::=\");", "-    case 128 : // System.out.println(\"ForceNoDiet ::=\");", "+    case 126 : // System.out.println(\"ForceNoDiet ::=\");", "-    case 129 : // System.out.println(\"RestoreDiet ::=\");", "+    case 127 : // System.out.println(\"RestoreDiet ::=\");", "-    case 134 : // System.out.println(\"MethodDeclaration ::= MethodHeader MethodBody\");", "+    case 132 : // System.out.println(\"MethodDeclaration ::= MethodHeader MethodBody\");", "-    case 135 : // System.out.println(\"AbstractMethodDeclaration ::= MethodHeader SEMICOLON\");", "+    case 133 : // System.out.println(\"AbstractMethodDeclaration ::= MethodHeader SEMICOLON\");", "-    case 136 : // System.out.println(\"MethodHeader ::= MethodHeaderName MethodHeaderParameters MethodHeaderExtendedDims\");", "+    case 134 : // System.out.println(\"MethodHeader ::= MethodHeaderName MethodHeaderParameters MethodHeaderExtendedDims\");", "-    case 137 : // System.out.println(\"MethodPushModifiersHeader ::= MethodPushModifiersHeaderName MethodHeaderParameters\");", "+    case 135 : // System.out.println(\"MethodPushModifiersHeader ::= MethodPushModifiersHeaderName MethodHeaderParameters\");", "-    case 138 : // System.out.println(\"MethodPushModifiersHeaderName ::= Modifiers Type PushModifiers Identifier LPAREN\");", "+    case 136 : // System.out.println(\"MethodPushModifiersHeaderName ::= Modifiers Type PushModifiers Identifier LPAREN\");", "-    case 139 : // System.out.println(\"MethodPushModifiersHeaderName ::= Type PushModifiers Identifier LPAREN\");", "+    case 137 : // System.out.println(\"MethodPushModifiersHeaderName ::= Type PushModifiers Identifier LPAREN\");", "-    case 140 : // System.out.println(\"MethodHeaderName ::= Modifiersopt Type Identifier LPAREN\");", "+    case 138 : // System.out.println(\"MethodHeaderName ::= Modifiersopt Type Identifier LPAREN\");", "-    case 141 : // System.out.println(\"MethodHeaderParameters ::= FormalParameterListopt RPAREN\");", "+    case 139 : // System.out.println(\"MethodHeaderParameters ::= FormalParameterListopt RPAREN\");", "-    case 142 : // System.out.println(\"MethodHeaderExtendedDims ::= Dimsopt\");", "+    case 140 : // System.out.println(\"MethodHeaderExtendedDims ::= Dimsopt\");", "-    case 143 : // System.out.println(\"MethodHeaderThrowsClause ::= throws ClassTypeList\");", "+    case 141 : // System.out.println(\"MethodHeaderThrowsClause ::= throws ClassTypeList\");", "-    case 144 : // System.out.println(\"ConstructorHeader ::= ConstructorHeaderName MethodHeaderParameters...\");", "+    case 142 : // System.out.println(\"ConstructorHeader ::= ConstructorHeaderName MethodHeaderParameters...\");", "-    case 145 : // System.out.println(\"ConstructorHeaderName ::= Modifiersopt Identifier LPAREN\");", "+    case 143 : // System.out.println(\"ConstructorHeaderName ::= Modifiersopt Identifier LPAREN\");", "-    case 147 : // System.out.println(\"FormalParameterList ::= FormalParameterList COMMA FormalParameter\");", "+    case 145 : // System.out.println(\"FormalParameterList ::= FormalParameterList COMMA FormalParameter\");", "-    case 148 : // System.out.println(\"FormalParameter ::= Modifiersopt Type VariableDeclaratorId\");", "+    case 146 : // System.out.println(\"FormalParameter ::= Modifiersopt Type VariableDeclaratorId\");", "-    case 150 : // System.out.println(\"ClassTypeList ::= ClassTypeList COMMA ClassTypeElt\");", "+    case 148 : // System.out.println(\"ClassTypeList ::= ClassTypeList COMMA ClassTypeElt\");", "-    case 151 : // System.out.println(\"ClassTypeElt ::= ClassType\");", "+    case 149 : // System.out.println(\"ClassTypeElt ::= ClassType\");", "-    case 152 : // System.out.println(\"MethodBody ::= NestedMethod LBRACE BlockStatementsopt RBRACE\");", "+    case 150 : // System.out.println(\"MethodBody ::= NestedMethod LBRACE BlockStatementsopt RBRACE\");", "-    case 153 : // System.out.println(\"NestedMethod ::=\");", "+    case 151 : // System.out.println(\"NestedMethod ::=\");", "-    case 154 : // System.out.println(\"StaticInitializer ::= StaticOnly Block\");", "+    case 152 : // System.out.println(\"StaticInitializer ::= StaticOnly Block\");", "-    case 155 : // System.out.println(\"StaticOnly ::= static\");", "+    case 153 : // System.out.println(\"StaticOnly ::= static\");", "-    case 156 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader ConstructorBody\");", "+    case 154 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader MethodBody\");", "-    case 157 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader SEMICOLON\");", "+    case 155 : // System.out.println(\"ConstructorDeclaration ::= ConstructorHeader SEMICOLON\");", "-    case 158 : // System.out.println(\"ConstructorBody ::= NestedMethod LBRACE ConstructorBlockStatementsopt RBRACE\");", "-\t\t    consumeConstructorBody();  ", "-\t\t\tbreak ;", "- ", "-    case 161 : // System.out.println(\"ConstructorBlockStatementsopt ::= ExplicitConstructorInvocation BlockStatements\");", "-\t\t     consumeConstructorBlockStatements();  ", "-\t\t\tbreak ;", "- ", "-    case 162 : // System.out.println(\"ExplicitConstructorInvocation ::= this LPAREN ArgumentListopt RPAREN SEMICOLON\");", "+    case 156 : // System.out.println(\"ExplicitConstructorInvocation ::= this LPAREN ArgumentListopt RPAREN SEMICOLON\");", "-    case 163 : // System.out.println(\"ExplicitConstructorInvocation ::= super LPAREN ArgumentListopt RPAREN SEMICOLON\");", "+    case 157 : // System.out.println(\"ExplicitConstructorInvocation ::= super LPAREN ArgumentListopt RPAREN SEMICOLON\");", "-    case 164 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT super LPAREN ArgumentListopt RPAREN\");", "+    case 158 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT super LPAREN ArgumentListopt RPAREN\");", "-    case 165 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT super LPAREN ArgumentListopt RPAREN...\");", "+    case 159 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT super LPAREN ArgumentListopt RPAREN...\");", "-    case 166 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT this LPAREN ArgumentListopt RPAREN...\");", "+    case 160 : // System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT this LPAREN ArgumentListopt RPAREN...\");", "-    case 167 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT this LPAREN ArgumentListopt RPAREN...\");", "+    case 161 : // System.out.println(\"ExplicitConstructorInvocation ::= Name DOT this LPAREN ArgumentListopt RPAREN...\");", "-    case 168 : // System.out.println(\"InterfaceDeclaration ::= InterfaceHeader InterfaceBody\");", "+    case 162 : // System.out.println(\"InterfaceDeclaration ::= InterfaceHeader InterfaceBody\");", "-    case 169 : // System.out.println(\"InterfaceHeader ::= InterfaceHeaderName InterfaceHeaderExtendsopt\");", "+    case 163 : // System.out.println(\"InterfaceHeader ::= InterfaceHeaderName InterfaceHeaderExtendsopt\");", "-    case 170 : // System.out.println(\"InterfaceHeaderName ::= Modifiersopt interface Identifier\");", "+    case 164 : // System.out.println(\"InterfaceHeaderName ::= Modifiersopt interface Identifier\");", "-    case 172 : // System.out.println(\"InterfaceHeaderExtends ::= extends InterfaceTypeList\");", "+    case 166 : // System.out.println(\"InterfaceHeaderExtends ::= extends InterfaceTypeList\");", "-    case 175 : // System.out.println(\"InterfaceMemberDeclarations ::= InterfaceMemberDeclarations...\");", "+    case 169 : // System.out.println(\"InterfaceMemberDeclarations ::= InterfaceMemberDeclarations...\");", "-    case 176 : // System.out.println(\"InterfaceMemberDeclaration ::= SEMICOLON\");", "+    case 170 : // System.out.println(\"InterfaceMemberDeclaration ::= SEMICOLON\");", "-    case 179 : // System.out.println(\"InterfaceMemberDeclaration ::= InvalidMethodDeclaration\");", "+    case 173 : // System.out.println(\"InterfaceMemberDeclaration ::= InvalidMethodDeclaration\");", "-    case 180 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader ConstructorBody\");", "+    case 174 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader MethodBody\");", "-    case 181 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader SEMICOLON\");", "+    case 175 : // System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader SEMICOLON\");", "-    case 187 : // System.out.println(\"ArrayInitializer ::= LBRACE ,opt RBRACE\");", "+    case 181 : // System.out.println(\"ArrayInitializer ::= LBRACE ,opt RBRACE\");", "-    case 188 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers RBRACE\");", "+    case 182 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers RBRACE\");", "-    case 189 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers COMMA RBRACE\");", "+    case 183 : // System.out.println(\"ArrayInitializer ::= LBRACE VariableInitializers COMMA RBRACE\");", "-    case 191 : // System.out.println(\"VariableInitializers ::= VariableInitializers COMMA VariableInitializer\");", "+    case 185 : // System.out.println(\"VariableInitializers ::= VariableInitializers COMMA VariableInitializer\");", "-    case 192 : // System.out.println(\"Block ::= OpenBlock LBRACE BlockStatementsopt RBRACE\");", "+    case 186 : // System.out.println(\"Block ::= OpenBlock LBRACE BlockStatementsopt RBRACE\");", "-    case 193 : // System.out.println(\"OpenBlock ::=\");", "+    case 187 : // System.out.println(\"OpenBlock ::=\");", "-    case 195 : // System.out.println(\"BlockStatements ::= BlockStatements BlockStatement\");", "+    case 189 : // System.out.println(\"BlockStatements ::= BlockStatements BlockStatement\");", "-    case 199 : // System.out.println(\"BlockStatement ::= InvalidInterfaceDeclaration\");", "+    case 193 : // System.out.println(\"BlockStatement ::= InvalidInterfaceDeclaration\");", "-    case 200 : // System.out.println(\"LocalVariableDeclarationStatement ::= LocalVariableDeclaration SEMICOLON\");", "+    case 194 : // System.out.println(\"LocalVariableDeclarationStatement ::= LocalVariableDeclaration SEMICOLON\");", "-    case 201 : // System.out.println(\"LocalVariableDeclaration ::= Type PushModifiers VariableDeclarators\");", "+    case 195 : // System.out.println(\"LocalVariableDeclaration ::= Type PushModifiers VariableDeclarators\");", "-    case 202 : // System.out.println(\"LocalVariableDeclaration ::= Modifiers Type PushModifiers VariableDeclarators\");", "+    case 196 : // System.out.println(\"LocalVariableDeclaration ::= Modifiers Type PushModifiers VariableDeclarators\");", "-    case 203 : // System.out.println(\"PushModifiers ::=\");", "+    case 197 : // System.out.println(\"PushModifiers ::=\");", "-    case 227 : // System.out.println(\"EmptyStatement ::= SEMICOLON\");", "+    case 221 : // System.out.println(\"EmptyStatement ::= SEMICOLON\");", "-    case 228 : // System.out.println(\"LabeledStatement ::= Identifier COLON Statement\");", "+    case 222 : // System.out.println(\"LabeledStatement ::= Identifier COLON Statement\");", "-    case 229 : // System.out.println(\"LabeledStatementNoShortIf ::= Identifier COLON StatementNoShortIf\");", "+    case 223 : // System.out.println(\"LabeledStatementNoShortIf ::= Identifier COLON StatementNoShortIf\");", "-     case 230 : // System.out.println(\"ExpressionStatement ::= StatementExpression SEMICOLON\");", "+     case 224 : // System.out.println(\"ExpressionStatement ::= StatementExpression SEMICOLON\");", "-    case 238 : // System.out.println(\"IfThenStatement ::= if LPAREN Expression RPAREN Statement\");", "+    case 233 : // System.out.println(\"IfThenStatement ::= if LPAREN Expression RPAREN Statement\");", "-    case 239 : // System.out.println(\"IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf else...\");", "+    case 234 : // System.out.println(\"IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf else...\");", "-    case 240 : // System.out.println(\"IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN StatementNoShortIf...\");", "+    case 235 : // System.out.println(\"IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN StatementNoShortIf...\");", "-    case 241 : // System.out.println(\"SwitchStatement ::= switch OpenBlock LPAREN Expression RPAREN SwitchBlock\");", "+    case 236 : // System.out.println(\"SwitchStatement ::= switch OpenBlock LPAREN Expression RPAREN SwitchBlock\");", "-    case 242 : // System.out.println(\"SwitchBlock ::= LBRACE RBRACE\");", "+    case 237 : // System.out.println(\"SwitchBlock ::= LBRACE RBRACE\");", "-    case 245 : // System.out.println(\"SwitchBlock ::= LBRACE SwitchBlockStatements SwitchLabels RBRACE\");", "+    case 240 : // System.out.println(\"SwitchBlock ::= LBRACE SwitchBlockStatements SwitchLabels RBRACE\");", "-    case 247 : // System.out.println(\"SwitchBlockStatements ::= SwitchBlockStatements SwitchBlockStatement\");", "+    case 242 : // System.out.println(\"SwitchBlockStatements ::= SwitchBlockStatements SwitchBlockStatement\");", "-    case 248 : // System.out.println(\"SwitchBlockStatement ::= SwitchLabels BlockStatements\");", "+    case 243 : // System.out.println(\"SwitchBlockStatement ::= SwitchLabels BlockStatements\");", "-    case 250 : // System.out.println(\"SwitchLabels ::= SwitchLabels SwitchLabel\");", "+    case 245 : // System.out.println(\"SwitchLabels ::= SwitchLabels SwitchLabel\");", "-     case 251 : // System.out.println(\"SwitchLabel ::= case ConstantExpression COLON\");", "+     case 246 : // System.out.println(\"SwitchLabel ::= case ConstantExpression COLON\");", "-     case 252 : // System.out.println(\"SwitchLabel ::= default COLON\");", "+     case 247 : // System.out.println(\"SwitchLabel ::= default COLON\");", "-    case 253 : // System.out.println(\"WhileStatement ::= while LPAREN Expression RPAREN Statement\");", "+    case 248 : // System.out.println(\"WhileStatement ::= while LPAREN Expression RPAREN Statement\");", "-    case 254 : // System.out.println(\"WhileStatementNoShortIf ::= while LPAREN Expression RPAREN StatementNoShortIf\");", "+    case 249 : // System.out.println(\"WhileStatementNoShortIf ::= while LPAREN Expression RPAREN StatementNoShortIf\");", "-    case 255 : // System.out.println(\"DoStatement ::= do Statement while LPAREN Expression RPAREN SEMICOLON\");", "+    case 250 : // System.out.println(\"DoStatement ::= do Statement while LPAREN Expression RPAREN SEMICOLON\");", "-    case 256 : // System.out.println(\"ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON...\");", "+    case 251 : // System.out.println(\"ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON...\");", "-    case 257 : // System.out.println(\"ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON\");", "+    case 252 : // System.out.println(\"ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON\");", "-    case 258 : // System.out.println(\"ForInit ::= StatementExpressionList\");", "+    case 253 : // System.out.println(\"ForInit ::= StatementExpressionList\");", "-    case 262 : // System.out.println(\"StatementExpressionList ::= StatementExpressionList COMMA StatementExpression\");", "+    case 257 : // System.out.println(\"StatementExpressionList ::= StatementExpressionList COMMA StatementExpression\");", "-    case 263 : // System.out.println(\"AssertStatement ::= assert Expression SEMICOLON\");", "+    case 258 : // System.out.println(\"AssertStatement ::= assert Expression SEMICOLON\");", "-    case 264 : // System.out.println(\"AssertStatement ::= assert Expression COLON Expression SEMICOLON\");", "+    case 259 : // System.out.println(\"AssertStatement ::= assert Expression COLON Expression SEMICOLON\");", "-    case 265 : // System.out.println(\"BreakStatement ::= break SEMICOLON\");", "+    case 260 : // System.out.println(\"BreakStatement ::= break SEMICOLON\");", "-    case 266 : // System.out.println(\"BreakStatement ::= break Identifier SEMICOLON\");", "+    case 261 : // System.out.println(\"BreakStatement ::= break Identifier SEMICOLON\");", "-    case 267 : // System.out.println(\"ContinueStatement ::= continue SEMICOLON\");", "+    case 262 : // System.out.println(\"ContinueStatement ::= continue SEMICOLON\");", "-    case 268 : // System.out.println(\"ContinueStatement ::= continue Identifier SEMICOLON\");", "+    case 263 : // System.out.println(\"ContinueStatement ::= continue Identifier SEMICOLON\");", "-    case 269 : // System.out.println(\"ReturnStatement ::= return Expressionopt SEMICOLON\");", "+    case 264 : // System.out.println(\"ReturnStatement ::= return Expressionopt SEMICOLON\");", "-    case 270 : // System.out.println(\"ThrowStatement ::= throw Expression SEMICOLON\");", "+    case 265 : // System.out.println(\"ThrowStatement ::= throw Expression SEMICOLON\");", "-    case 271 : // System.out.println(\"SynchronizedStatement ::= OnlySynchronized LPAREN Expression RPAREN Block\");", "+    case 266 : // System.out.println(\"SynchronizedStatement ::= OnlySynchronized LPAREN Expression RPAREN Block\");", "-    case 272 : // System.out.println(\"OnlySynchronized ::= synchronized\");", "+    case 267 : // System.out.println(\"OnlySynchronized ::= synchronized\");", "-    case 273 : // System.out.println(\"TryStatement ::= try Block Catches\");", "+    case 268 : // System.out.println(\"TryStatement ::= try Block Catches\");", "-    case 274 : // System.out.println(\"TryStatement ::= try Block Catchesopt Finally\");", "+    case 269 : // System.out.println(\"TryStatement ::= try Block Catchesopt Finally\");", "-    case 276 : // System.out.println(\"Catches ::= Catches CatchClause\");", "+    case 271 : // System.out.println(\"Catches ::= Catches CatchClause\");", "-    case 277 : // System.out.println(\"CatchClause ::= catch LPAREN FormalParameter RPAREN Block\");", "+    case 272 : // System.out.println(\"CatchClause ::= catch LPAREN FormalParameter RPAREN Block\");", "-    case 279 : // System.out.println(\"PushLPAREN ::= LPAREN\");", "+    case 274 : // System.out.println(\"PushLPAREN ::= LPAREN\");", "-    case 280 : // System.out.println(\"PushRPAREN ::= RPAREN\");", "+    case 275 : // System.out.println(\"PushRPAREN ::= RPAREN\");", "-    case 285 : // System.out.println(\"PrimaryNoNewArray ::= this\");", "+    case 280 : // System.out.println(\"PrimaryNoNewArray ::= this\");", "-    case 286 : // System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Expression PushRPAREN\");", "+    case 281 : // System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Expression PushRPAREN\");", "-    case 289 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT this\");", "+    case 284 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT this\");", "-    case 290 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT super\");", "+    case 285 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT super\");", "-    case 291 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT class\");", "+    case 286 : // System.out.println(\"PrimaryNoNewArray ::= Name DOT class\");", "-    case 292 : // System.out.println(\"PrimaryNoNewArray ::= ArrayType DOT class\");", "+    case 287 : // System.out.println(\"PrimaryNoNewArray ::= ArrayType DOT class\");", "-    case 293 : // System.out.println(\"PrimaryNoNewArray ::= PrimitiveType DOT class\");", "+    case 288 : // System.out.println(\"PrimaryNoNewArray ::= PrimitiveType DOT class\");", "-    case 296 : // System.out.println(\"AllocationHeader ::= new ClassType LPAREN ArgumentListopt RPAREN\");", "+    case 291 : // System.out.println(\"AllocationHeader ::= new ClassType LPAREN ArgumentListopt RPAREN\");", "-    case 297 : // System.out.println(\"ClassInstanceCreationExpression ::= new ClassType LPAREN ArgumentListopt RPAREN...\");", "+    case 292 : // System.out.println(\"ClassInstanceCreationExpression ::= new ClassType LPAREN ArgumentListopt RPAREN...\");", "-    case 298 : // System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new SimpleName LPAREN...\");", "+    case 293 : // System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new SimpleName LPAREN...\");", "-    case 299 : // System.out.println(\"ClassInstanceCreationExpression ::= ClassInstanceCreationExpressionName new...\");", "+    case 294 : // System.out.println(\"ClassInstanceCreationExpression ::= ClassInstanceCreationExpressionName new...\");", "-    case 300 : // System.out.println(\"ClassInstanceCreationExpressionName ::= Name DOT\");", "+    case 295 : // System.out.println(\"ClassInstanceCreationExpressionName ::= Name DOT\");", "-    case 301 : // System.out.println(\"ClassBodyopt ::=\");", "+    case 296 : // System.out.println(\"ClassBodyopt ::=\");", "-    case 303 : // System.out.println(\"EnterAnonymousClassBody ::=\");", "+    case 298 : // System.out.println(\"EnterAnonymousClassBody ::=\");", "-    case 305 : // System.out.println(\"ArgumentList ::= ArgumentList COMMA Expression\");", "+    case 300 : // System.out.println(\"ArgumentList ::= ArgumentList COMMA Expression\");", "-    case 306 : // System.out.println(\"ArrayCreationHeader ::= new PrimitiveType DimWithOrWithOutExprs\");", "+    case 301 : // System.out.println(\"ArrayCreationHeader ::= new PrimitiveType DimWithOrWithOutExprs\");", "-    case 307 : // System.out.println(\"ArrayCreationHeader ::= new ClassOrInterfaceType DimWithOrWithOutExprs\");", "+    case 302 : // System.out.println(\"ArrayCreationHeader ::= new ClassOrInterfaceType DimWithOrWithOutExprs\");", "-    case 308 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new PrimitiveType DimWithOrWithOutExprs\");", "+    case 303 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new PrimitiveType DimWithOrWithOutExprs\");", "-    case 309 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new PrimitiveType DimWithOrWithOutExprs...\");", "+    case 304 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new PrimitiveType DimWithOrWithOutExprs...\");", "-    case 310 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new ClassOrInterfaceType...\");", "+    case 305 : // System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new ClassOrInterfaceType...\");", "-    case 311 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new ClassOrInterfaceType...\");", "+    case 306 : // System.out.println(\"ArrayCreationWithArrayInitializer ::= new ClassOrInterfaceType...\");", "-    case 313 : // System.out.println(\"DimWithOrWithOutExprs ::= DimWithOrWithOutExprs DimWithOrWithOutExpr\");", "+    case 308 : // System.out.println(\"DimWithOrWithOutExprs ::= DimWithOrWithOutExprs DimWithOrWithOutExpr\");", "-     case 315 : // System.out.println(\"DimWithOrWithOutExpr ::= LBRACKET RBRACKET\");", "+     case 310 : // System.out.println(\"DimWithOrWithOutExpr ::= LBRACKET RBRACKET\");", "-     case 316 : // System.out.println(\"Dims ::= DimsLoop\");", "+     case 311 : // System.out.println(\"Dims ::= DimsLoop\");", "-     case 319 : // System.out.println(\"OneDimLoop ::= LBRACKET RBRACKET\");", "+     case 314 : // System.out.println(\"OneDimLoop ::= LBRACKET RBRACKET\");", "-    case 320 : // System.out.println(\"FieldAccess ::= Primary DOT Identifier\");", "+    case 315 : // System.out.println(\"FieldAccess ::= Primary DOT Identifier\");", "-    case 321 : // System.out.println(\"FieldAccess ::= super DOT Identifier\");", "+    case 316 : // System.out.println(\"FieldAccess ::= super DOT Identifier\");", "-    case 322 : // System.out.println(\"MethodInvocation ::= Name LPAREN ArgumentListopt RPAREN\");", "+    case 317 : // System.out.println(\"MethodInvocation ::= Name LPAREN ArgumentListopt RPAREN\");", "-    case 323 : // System.out.println(\"MethodInvocation ::= Primary DOT Identifier LPAREN ArgumentListopt RPAREN\");", "+    case 318 : // System.out.println(\"MethodInvocation ::= Primary DOT Identifier LPAREN ArgumentListopt RPAREN\");", "-    case 324 : // System.out.println(\"MethodInvocation ::= super DOT Identifier LPAREN ArgumentListopt RPAREN\");", "+    case 319 : // System.out.println(\"MethodInvocation ::= super DOT Identifier LPAREN ArgumentListopt RPAREN\");", "-    case 325 : // System.out.println(\"ArrayAccess ::= Name LBRACKET Expression RBRACKET\");", "+    case 320 : // System.out.println(\"ArrayAccess ::= Name LBRACKET Expression RBRACKET\");", "-    case 326 : // System.out.println(\"ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression RBRACKET\");", "+    case 321 : // System.out.println(\"ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression RBRACKET\");", "-    case 327 : // System.out.println(\"ArrayAccess ::= ArrayCreationWithArrayInitializer LBRACKET Expression RBRACKET\");", "+    case 322 : // System.out.println(\"ArrayAccess ::= ArrayCreationWithArrayInitializer LBRACKET Expression RBRACKET\");", "-    case 329 : // System.out.println(\"PostfixExpression ::= Name\");", "+    case 324 : // System.out.println(\"PostfixExpression ::= Name\");", "-    case 332 : // System.out.println(\"PostIncrementExpression ::= PostfixExpression PLUS_PLUS\");", "+    case 327 : // System.out.println(\"PostIncrementExpression ::= PostfixExpression PLUS_PLUS\");", "-    case 333 : // System.out.println(\"PostDecrementExpression ::= PostfixExpression MINUS_MINUS\");", "+    case 328 : // System.out.println(\"PostDecrementExpression ::= PostfixExpression MINUS_MINUS\");", "-    case 334 : // System.out.println(\"PushPosition ::=\");", "+    case 329 : // System.out.println(\"PushPosition ::=\");", "-    case 337 : // System.out.println(\"UnaryExpression ::= PLUS PushPosition UnaryExpression\");", "+    case 332 : // System.out.println(\"UnaryExpression ::= PLUS PushPosition UnaryExpression\");", "-    case 338 : // System.out.println(\"UnaryExpression ::= MINUS PushPosition UnaryExpression\");", "+    case 333 : // System.out.println(\"UnaryExpression ::= MINUS PushPosition UnaryExpression\");", "-    case 340 : // System.out.println(\"PreIncrementExpression ::= PLUS_PLUS PushPosition UnaryExpression\");", "+    case 335 : // System.out.println(\"PreIncrementExpression ::= PLUS_PLUS PushPosition UnaryExpression\");", "-    case 341 : // System.out.println(\"PreDecrementExpression ::= MINUS_MINUS PushPosition UnaryExpression\");", "+    case 336 : // System.out.println(\"PreDecrementExpression ::= MINUS_MINUS PushPosition UnaryExpression\");", "-    case 343 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= TWIDDLE PushPosition UnaryExpression\");", "+    case 338 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= TWIDDLE PushPosition UnaryExpression\");", "-    case 344 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= NOT PushPosition UnaryExpression\");", "+    case 339 : // System.out.println(\"UnaryExpressionNotPlusMinus ::= NOT PushPosition UnaryExpression\");", "-    case 346 : // System.out.println(\"CastExpression ::= PushLPAREN PrimitiveType Dimsopt PushRPAREN InsideCastExpression\");", "+    case 341 : // System.out.println(\"CastExpression ::= PushLPAREN PrimitiveType Dimsopt PushRPAREN InsideCastExpression\");", "-    case 347 : // System.out.println(\"CastExpression ::= PushLPAREN Name Dims PushRPAREN InsideCastExpression...\");", "+    case 342 : // System.out.println(\"CastExpression ::= PushLPAREN Name Dims PushRPAREN InsideCastExpression...\");", "-    case 348 : // System.out.println(\"CastExpression ::= PushLPAREN Expression PushRPAREN InsideCastExpressionLL1...\");", "+    case 343 : // System.out.println(\"CastExpression ::= PushLPAREN Expression PushRPAREN InsideCastExpressionLL1...\");", "-    case 349 : // System.out.println(\"InsideCastExpression ::=\");", "+    case 344 : // System.out.println(\"InsideCastExpression ::=\");", "-    case 350 : // System.out.println(\"InsideCastExpressionLL1 ::=\");", "+    case 345 : // System.out.println(\"InsideCastExpressionLL1 ::=\");", "-    case 352 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression MULTIPLY UnaryExpression\");", "+    case 347 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression MULTIPLY UnaryExpression\");", "-    case 353 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression DIVIDE UnaryExpression\");", "+    case 348 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression DIVIDE UnaryExpression\");", "-    case 354 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression REMAINDER UnaryExpression\");", "+    case 349 : // System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression REMAINDER UnaryExpression\");", "-    case 356 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression PLUS MultiplicativeExpression\");", "+    case 351 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression PLUS MultiplicativeExpression\");", "-    case 357 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression MINUS MultiplicativeExpression\");", "+    case 352 : // System.out.println(\"AdditiveExpression ::= AdditiveExpression MINUS MultiplicativeExpression\");", "-    case 359 : // System.out.println(\"ShiftExpression ::= ShiftExpression LEFT_SHIFT AdditiveExpression\");", "+    case 354 : // System.out.println(\"ShiftExpression ::= ShiftExpression LEFT_SHIFT AdditiveExpression\");", "-    case 360 : // System.out.println(\"ShiftExpression ::= ShiftExpression RIGHT_SHIFT AdditiveExpression\");", "+    case 355 : // System.out.println(\"ShiftExpression ::= ShiftExpression RIGHT_SHIFT AdditiveExpression\");", "-    case 361 : // System.out.println(\"ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression\");", "+    case 356 : // System.out.println(\"ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression\");", "-    case 363 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS ShiftExpression\");", "+    case 358 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS ShiftExpression\");", "-    case 364 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER ShiftExpression\");", "+    case 359 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER ShiftExpression\");", "-    case 365 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS_EQUAL ShiftExpression\");", "+    case 360 : // System.out.println(\"RelationalExpression ::= RelationalExpression LESS_EQUAL ShiftExpression\");", "-    case 366 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER_EQUAL ShiftExpression\");", "+    case 361 : // System.out.println(\"RelationalExpression ::= RelationalExpression GREATER_EQUAL ShiftExpression\");", "-    case 367 : // System.out.println(\"RelationalExpression ::= RelationalExpression instanceof ReferenceType\");", "+    case 362 : // System.out.println(\"RelationalExpression ::= RelationalExpression instanceof ReferenceType\");", "-    case 369 : // System.out.println(\"EqualityExpression ::= EqualityExpression EQUAL_EQUAL RelationalExpression\");", "+    case 364 : // System.out.println(\"EqualityExpression ::= EqualityExpression EQUAL_EQUAL RelationalExpression\");", "-    case 370 : // System.out.println(\"EqualityExpression ::= EqualityExpression NOT_EQUAL RelationalExpression\");", "+    case 365 : // System.out.println(\"EqualityExpression ::= EqualityExpression NOT_EQUAL RelationalExpression\");", "-    case 372 : // System.out.println(\"AndExpression ::= AndExpression AND EqualityExpression\");", "+    case 367 : // System.out.println(\"AndExpression ::= AndExpression AND EqualityExpression\");", "-    case 374 : // System.out.println(\"ExclusiveOrExpression ::= ExclusiveOrExpression XOR AndExpression\");", "+    case 369 : // System.out.println(\"ExclusiveOrExpression ::= ExclusiveOrExpression XOR AndExpression\");", "-    case 376 : // System.out.println(\"InclusiveOrExpression ::= InclusiveOrExpression OR ExclusiveOrExpression\");", "+    case 371 : // System.out.println(\"InclusiveOrExpression ::= InclusiveOrExpression OR ExclusiveOrExpression\");", "-    case 378 : // System.out.println(\"ConditionalAndExpression ::= ConditionalAndExpression AND_AND InclusiveOrExpression\");", "+    case 373 : // System.out.println(\"ConditionalAndExpression ::= ConditionalAndExpression AND_AND InclusiveOrExpression\");", "-    case 380 : // System.out.println(\"ConditionalOrExpression ::= ConditionalOrExpression OR_OR ConditionalAndExpression\");", "+    case 375 : // System.out.println(\"ConditionalOrExpression ::= ConditionalOrExpression OR_OR ConditionalAndExpression\");", "-    case 382 : // System.out.println(\"ConditionalExpression ::= ConditionalOrExpression QUESTION Expression COLON...\");", "+    case 377 : // System.out.println(\"ConditionalExpression ::= ConditionalOrExpression QUESTION Expression COLON...\");", "-    case 385 : // System.out.println(\"Assignment ::= PostfixExpression AssignmentOperator AssignmentExpression\");", "+    case 380 : // System.out.println(\"Assignment ::= PostfixExpression AssignmentOperator AssignmentExpression\");", "-    case 387 : // System.out.println(\"Assignment ::= InvalidArrayInitializerAssignement\");", "+    case 382 : // System.out.println(\"Assignment ::= InvalidArrayInitializerAssignement\");", "-    case 388 : // System.out.println(\"AssignmentOperator ::= EQUAL\");", "+    case 383 : // System.out.println(\"AssignmentOperator ::= EQUAL\");", "-    case 389 : // System.out.println(\"AssignmentOperator ::= MULTIPLY_EQUAL\");", "+    case 384 : // System.out.println(\"AssignmentOperator ::= MULTIPLY_EQUAL\");", "-    case 390 : // System.out.println(\"AssignmentOperator ::= DIVIDE_EQUAL\");", "+    case 385 : // System.out.println(\"AssignmentOperator ::= DIVIDE_EQUAL\");", "-    case 391 : // System.out.println(\"AssignmentOperator ::= REMAINDER_EQUAL\");", "+    case 386 : // System.out.println(\"AssignmentOperator ::= REMAINDER_EQUAL\");", "-    case 392 : // System.out.println(\"AssignmentOperator ::= PLUS_EQUAL\");", "+    case 387 : // System.out.println(\"AssignmentOperator ::= PLUS_EQUAL\");", "-    case 393 : // System.out.println(\"AssignmentOperator ::= MINUS_EQUAL\");", "+    case 388 : // System.out.println(\"AssignmentOperator ::= MINUS_EQUAL\");", "-    case 394 : // System.out.println(\"AssignmentOperator ::= LEFT_SHIFT_EQUAL\");", "+    case 389 : // System.out.println(\"AssignmentOperator ::= LEFT_SHIFT_EQUAL\");", "-    case 395 : // System.out.println(\"AssignmentOperator ::= RIGHT_SHIFT_EQUAL\");", "+    case 390 : // System.out.println(\"AssignmentOperator ::= RIGHT_SHIFT_EQUAL\");", "-    case 396 : // System.out.println(\"AssignmentOperator ::= UNSIGNED_RIGHT_SHIFT_EQUAL\");", "+    case 391 : // System.out.println(\"AssignmentOperator ::= UNSIGNED_RIGHT_SHIFT_EQUAL\");", "-    case 397 : // System.out.println(\"AssignmentOperator ::= AND_EQUAL\");", "+    case 392 : // System.out.println(\"AssignmentOperator ::= AND_EQUAL\");", "-    case 398 : // System.out.println(\"AssignmentOperator ::= XOR_EQUAL\");", "+    case 393 : // System.out.println(\"AssignmentOperator ::= XOR_EQUAL\");", "-    case 399 : // System.out.println(\"AssignmentOperator ::= OR_EQUAL\");", "+    case 394 : // System.out.println(\"AssignmentOperator ::= OR_EQUAL\");", "-    case 406 : // System.out.println(\"Expressionopt ::=\");", "+    case 401 : // System.out.println(\"Expressionopt ::=\");", "-    case 410 : // System.out.println(\"ImportDeclarationsopt ::=\");", "+    case 405 : // System.out.println(\"ImportDeclarationsopt ::=\");", "-    case 411 : // System.out.println(\"ImportDeclarationsopt ::= ImportDeclarations\");", "+    case 406 : // System.out.println(\"ImportDeclarationsopt ::= ImportDeclarations\");", "-    case 412 : // System.out.println(\"TypeDeclarationsopt ::=\");", "+    case 407 : // System.out.println(\"TypeDeclarationsopt ::=\");", "-    case 413 : // System.out.println(\"TypeDeclarationsopt ::= TypeDeclarations\");", "+    case 408 : // System.out.println(\"TypeDeclarationsopt ::= TypeDeclarations\");", "-    case 414 : // System.out.println(\"ClassBodyDeclarationsopt ::=\");", "+    case 409 : // System.out.println(\"ClassBodyDeclarationsopt ::=\");", "-    case 415 : // System.out.println(\"ClassBodyDeclarationsopt  ::= NestedType ClassBodyDeclarations\");", "+    case 410 : // System.out.println(\"ClassBodyDeclarationsopt ::= NestedType ClassBodyDeclarations\");", "-     case 416 : // System.out.println(\"Modifiersopt ::=\");", "+     case 411 : // System.out.println(\"Modifiersopt ::=\");", "-    case 417 : // System.out.println(\"Modifiersopt ::= Modifiers\");", "+    case 412 : // System.out.println(\"Modifiersopt ::= Modifiers\");", "-    case 418 : // System.out.println(\"BlockStatementsopt ::=\");", "+    case 413 : // System.out.println(\"BlockStatementsopt ::=\");", "-     case 420 : // System.out.println(\"Dimsopt ::=\");", "+     case 415 : // System.out.println(\"Dimsopt ::=\");", "-     case 422 : // System.out.println(\"ArgumentListopt ::=\");", "+     case 417 : // System.out.println(\"ArgumentListopt ::=\");", "-    case 426 : // System.out.println(\"FormalParameterListopt ::=\");", "+    case 421 : // System.out.println(\"FormalParameterListopt ::=\");", "-     case 430 : // System.out.println(\"InterfaceMemberDeclarationsopt ::=\");", "+     case 425 : // System.out.println(\"InterfaceMemberDeclarationsopt ::=\");", "-     case 431 : // System.out.println(\"InterfaceMemberDeclarationsopt ::= NestedType InterfaceMemberDeclarations\");", "+     case 426 : // System.out.println(\"InterfaceMemberDeclarationsopt ::= NestedType InterfaceMemberDeclarations\");", "-    case 432 : // System.out.println(\"NestedType ::=\");", "+    case 427 : // System.out.println(\"NestedType ::=\");", "-     case 433 : // System.out.println(\"ForInitopt ::=\");", "+     case 428 : // System.out.println(\"ForInitopt ::=\");", "-     case 435 : // System.out.println(\"ForUpdateopt ::=\");", "+     case 430 : // System.out.println(\"ForUpdateopt ::=\");", "-     case 439 : // System.out.println(\"Catchesopt ::=\");", "+     case 434 : // System.out.println(\"Catchesopt ::=\");"]}], "num": 38730}