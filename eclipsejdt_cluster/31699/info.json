{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c62dd19a4ffb87c80d663a559453958", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0095ed0543149061f75ccfa3ddec3075", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": " public static String fileContentToDisplayString(String sourceFilePath, int indent, boolean independantLineDelimiter)", "signatureAfterChange": " public static String fileContentToDisplayString(String sourceFilePath, int indent, boolean independantLineDelimiter)", "diff": ["-public static String fileContentToDisplayString(String sourceFilePath, int indent, boolean independantLineDelimiter) {", "-\tString sourceString = sourceContentBuffer.toString();", "+*/", "+public static String fileContentToDisplayString(String sourceFilePath, int indent, boolean independantLineDelimiter) {", "+\tString sourceString = fileContent(sourceFilePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b2b5b84059090b4a72ddf410b5b4729", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "commitAfterChange": "e84db8d4c6681c452df342e0bb55c2450eb0a239", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testExternalFolder5() throws Exception", "signatureAfterChange": " public void testExternalFolder5() throws Exception", "diff": ["-\t\ttry {", "-\t\t\tjavaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");", "-\t\t}", "-\t\tcatch (Exception e) {", "-\t\t\tIFolder folder = getFolder(externalLib);", "-\t\t\tSystem.out.println(\"----------  This information is logged for debugging purposes as this test fails sporadically.---------\");", "-\t\t\tSystem.out.println(\"Failing when creating Link folder for: \" + externalFolder);", "-\t\t\tSystem.out.println(\"Existing? \" + folder.exists());", "-\t\t\tIProject externalFolderProject = JavaModelManager.getExternalManager().getExternalFoldersProject();", "-\t\t\tIFile externalProjectFile = externalFolderProject.getFile(\".project\");", "-\t\t\tif (externalProjectFile.exists()) {", "-\t\t\t\tSystem.out.println(\"External Folder Project exists with following content:\");", "-\t\t\t\tBufferedInputStream bs = new BufferedInputStream(externalProjectFile.getContents());", "-\t\t\t\tint available = 0;", "-\t\t\t\twhile ((available = bs.available()) > 0) {", "-\t\t\t\t\tbyte[] contents = new byte[available];", "-\t\t\t\t\tbs.read(contents);", "-\t\t\t\t\tSystem.out.println(new String(contents));", "-\t\t\t\t}", "-\t\t\t\tbs.close();", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tSystem.out.println(\"External folders project doesn't exist.\");", "-\t\t\t}", "-\t\t\tSystem.out.println(\"----------  Debug information ends ---------\");", "-\t\t\tthrow e;", "-\t\t}", "+\t\tjavaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");"]}], "num": 31699}