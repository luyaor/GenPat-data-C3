{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efe7ff413fb4c1500d6a2f3e11868db7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fcd47e2ddbca98141dbe0dc6545e71f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "4b7347be32aba69e100f0a65557658cc00f4de32", "commitAfterChange": "2870aa14f88288f60383b8e3b2e39060da290126", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testDoubleConversion() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testDoubleConversion() throws Exception", "diff": ["-\t\texpectingSpecificProblemsFor(testPath, new Problem[]{", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to boolean\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to int\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to long\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to char\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to byte\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to short\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to float\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber z expected java.lang.Boolean but got java.lang.Double\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber s expected java.lang.Short but got java.lang.Double\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber i expected java.lang.Integer but got java.lang.Double\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber c expected java.lang.Character but got java.lang.Double\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber b expected java.lang.Byte but got java.lang.Double\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber l expected java.lang.Long but got java.lang.Double\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber f expected java.lang.Float but got java.lang.Double\", testPath)", "+\t\texpectingSpecificProblemsFor(testPath, new ExpectedProblem[]{", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to boolean\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to int\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to long\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to char\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to byte\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to short\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to float\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber z expected java.lang.Boolean but got java.lang.Double\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber s expected java.lang.Short but got java.lang.Double\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber i expected java.lang.Integer but got java.lang.Double\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber c expected java.lang.Character but got java.lang.Double\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber b expected java.lang.Byte but got java.lang.Double\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber l expected java.lang.Long but got java.lang.Double\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber f expected java.lang.Float but got java.lang.Double\", testPath)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4200b1ed5556998e90f98c89fa70659c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "4b7347be32aba69e100f0a65557658cc00f4de32", "commitAfterChange": "2870aa14f88288f60383b8e3b2e39060da290126", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testDoubleConversion_Reflection() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testDoubleConversion_Reflection() throws Exception", "diff": ["-\t\texpectingSpecificProblemsFor(testPath, new Problem[]{", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to boolean\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to int\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to long\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to char\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to byte\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to short\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from double to float\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber z expected true but got false\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber s expected 49 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber i expected 49 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber c expected 1 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber b expected 49 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber l expected 49 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber f expected 49.0 but got 0.0\", testPath)", "+\t\texpectingSpecificProblemsFor(testPath, new ExpectedProblem[]{", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to boolean\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to int\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to long\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to char\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to byte\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to short\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from double to float\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber z expected true but got false\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber s expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber i expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber c expected 1 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber b expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber l expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber f expected 49.0 but got 0.0\", testPath)"]}], "num": 3341}