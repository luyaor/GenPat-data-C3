{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb3fa27469c4884a79e67a2fe7564dc6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92cedd50a9a7547498894090f85b61ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "00dc28bfbd5543ecda292c71af53f42c5ae58dee", "commitAfterChange": "d3244b9b1f07dec23fc8a11bdb05cd710c7b96c6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\toptions.put(", "-\t\t\t\t\tCompilerOptions.OPTION_TaskTags,", "-\t\t\t\t\t\"\"); //$NON-NLS-1$", "-\t\t\t\t// reset all warnings", "-\t\t\t\tObject[] entries = options.entrySet().toArray();", "-\t\t\t\tfor (int i = 0, max = entries.length; i < max; i++) {", "-\t\t\t\t\tMap.Entry entry = (Map.Entry) entries[i];", "-\t\t\t\t\tif (!(entry.getKey() instanceof String))", "-\t\t\t\t\t\tcontinue;", "-\t\t\t\t\tif (!(entry.getValue() instanceof String))", "-\t\t\t\t\t\tcontinue;", "-\t\t\t\t\tif (((String) entry.getValue()).equals(CompilerOptions.WARNING)) {", "-\t\t\t\t\t\toptions.put((String) entry.getKey(), CompilerOptions.IGNORE);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\toptions.put(", "-\t\t\t\t\tCompilerOptions.OPTION_TaskTags,", "-\t\t\t\t\t\"\"); //$NON-NLS-1$", "+\t\t\t\t\tObject[] entries = options.entrySet().toArray();", "+\t\t\t\t\tfor (int i = 0, max = entries.length; i < max; i++) {", "+\t\t\t\t\t\tMap.Entry entry = (Map.Entry) entries[i];", "+\t\t\t\t\t\tif (!(entry.getKey() instanceof String))", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\tif (!(entry.getValue() instanceof String))", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\tif (((String) entry.getValue()).equals(CompilerOptions.WARNING)) {", "+\t\t\t\t\t\t\toptions.put((String) entry.getKey(), CompilerOptions.IGNORE);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportOverridingPackageDefaultMethod,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMethodWithConstructorName,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecation, ", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportHiddenCatchBlock,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLocal, ", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameter,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put( ", "+\t\t\t\t\tCompilerOptions.OPTION_ReportSyntheticAccessEmulation,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportNonExternalizedStringLiteral,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportAssertIdentifier,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedImport,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportStaticAccessReceiver,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportNoEffectAssignment,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportNoImplicitStringConversion,", "+\t\t\t\t\tCompilerOptions.IGNORE);\t\t\t\t", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportIncompatibleNonInheritedInterfaceMethod,", "+\t\t\t\t\tCompilerOptions.IGNORE);\t\t\t\t", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportSpecialParameterHidingField,", "+\t\t\t\t\tCompilerOptions.DISABLED);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_TaskTags,", "+\t\t\t\t\t\"\"); //$NON-NLS-1$", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91bade4aba837c580471b6126f6a9ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r protected Main(PrintWriter writer, boolean systemExitWhenFinished)", "signatureAfterChange": "\r \t\r protected Main(PrintWriter writer, boolean systemExitWhenFinished)", "diff": ["-\toptions = Compiler.getDefaultOptions(Locale.getDefault());\r", "+\toptions = new Hashtable();\r", "+\toptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.DO_NOT_GENERATE);\r", "+\toptions.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.DO_NOT_GENERATE);\r", "+\toptions.put(CompilerOptions.OPTION_SourceFileAttribute, CompilerOptions.DO_NOT_GENERATE);\r", "+\toptions.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.OPTIMIZE_OUT);\r", "+\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);\r", "+\toptions.put(CompilerOptions.OPTION_ReportUnreachableCode, CompilerOptions.ERROR);\r", "+\toptions.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.ERROR);\r", "+\toptions.put(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, CompilerOptions.WARNING);\r", "+\toptions.put(CompilerOptions.OPTION_ReportMethodWithConstructorName, CompilerOptions.WARNING);\r", "+\toptions.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);\r", "+\toptions.put(CompilerOptions.OPTION_ReportHiddenCatchBlock, CompilerOptions.WARNING);\r", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.IGNORE);\r", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.IGNORE);\r", "+\toptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);\r", "+\toptions.put(CompilerOptions.OPTION_ReportNonExternalizedStringLiteral, CompilerOptions.IGNORE);\r", "+\toptions.put(CompilerOptions.OPTION_ReportAssertIdentifier, CompilerOptions.IGNORE);\r", "+\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);\r"]}], "num": 22355}