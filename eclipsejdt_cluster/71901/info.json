{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f6d8e8aef0eb0a1457a2000d59b3837", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a9050cc135ac1eea1d482f034e64595", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, VariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-public void recordUsingNullReference(Scope scope, LocalVariableBinding local,", "+public void recordUsingNullReference(Scope scope, VariableBinding local,", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNonNullComparedToNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantNullAssignment(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNullInstanceof(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "-\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7eec956e3c8a0f3e43559dd408a9b5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, VariableBinding local, \t\tASTNode location, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tASTNode location, int checkType, FlowInfo flowInfo)", "diff": ["-public void recordUsingNullReference(Scope scope, VariableBinding local,", "+public void recordUsingNullReference(Scope scope, LocalVariableBinding local,", "-\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableNonNullComparedToNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableRedundantNullAssignment(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableNullInstanceof(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "-\t\t\t\tscope.problemReporter().variableNullReference(local, location);", "+\t\t\t\tscope.problemReporter().localVariableNullReference(local, location);", "-\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, location);", "+\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, location);"]}], "num": 71901}