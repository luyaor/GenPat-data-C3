{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1e51da6220c29c7916953eb5558b870", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e138ee81829835a93ca6536349fc81c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, IClasspathAttribute[] extraAttributes, boolean exported) throws JavaModelException", "signatureAfterChange": " \tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, IClasspathAttribute[] extraAttributes, boolean exported) throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] entries = project.getRawClasspath();", "-\t\tint length = entries.length;", "-\t\tSystem.arraycopy(entries, 0, entries = new IClasspathEntry[length + 1], 0, length);", "-\t\tentries[length] = JavaCore.newLibraryEntry(", "+\t\tIClasspathEntry entry = JavaCore.newLibraryEntry(", "-\t\tproject.setRawClasspath(entries, null);", "+\t\taddClasspathEntry(project, entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa25c8a93674e846c2a896ea9bbb9e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected IStatus validateOnClasspath()", "signatureAfterChange": " protected IStatus validateOnClasspath()", "diff": ["-\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();\t", "-\t\tfor (int i = 0, length = classpath.length; i < length; i++) {", "-\t\t\tIClasspathEntry entry = classpath[i];", "-\t\t\tif (entry.getPath().equals(path)) {", "-\t\t\t\treturn Status.OK_STATUS;", "-\t\t\t}", "+\t\tIClasspathEntry entry = project.getClasspathEntryFor(path);\t", "+\t\tif (entry != null) {", "+\t\t\treturn Status.OK_STATUS;"]}], "num": 49326}