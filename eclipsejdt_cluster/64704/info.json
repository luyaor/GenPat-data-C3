{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0cbcfa827faf315dbec91394c2df5d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16564a6c44d008f942ef7b87dacc56ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-", "+\t\t", "+\t\tif (refType.hasRestrictedAccess()) {", "+\t\t\tAccessRestriction restriction = scope.environment().getAccessRestriction(type);", "+\t\t\tif (restriction != null) {", "+\t\t\t\tscope.problemReporter().forbiddenReference(type, this, restriction.getMessageTemplate());", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ff622ffc8d7ad0fd0eec8b2fccf0ea4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "signatureAfterChange": " \t \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "diff": ["+\t\t", "+\t\tif ((field.modifiers & ExtraCompilerModifiers.AccRestrictedAccess) != 0) {", "+\t\t\tAccessRestriction restriction = ", "+\t\t\t\tscope.environment().getAccessRestriction(field.declaringClass);", "+\t\t\tif (restriction != null) {", "+\t\t\t\tscope.problemReporter().forbiddenReference(field, this,", "+\t\t\t\t\t\trestriction.getFieldAccessMessageTemplate(), restriction.getProblemId());", "+\t\t\t}", "+\t\t}"]}], "num": 64704}