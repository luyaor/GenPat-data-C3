{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc2315254ca2cc531e5801052dec48c4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e31d1f62fa4f3b76157bbe9a4a814f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getComponentType()", "signatureAfterChange": "  \tpublic Type getComponentType()", "diff": ["-\t\tif (componentType == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetComponentType(new SimpleType(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.componentType == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.componentType = new SimpleType(this.ast);", "+\t\t\tpostLazyInit(this.componentType, COMPONENT_TYPE_PROPERTY);", "-\t\treturn componentType;", "+\t\treturn this.componentType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7417f7a9ef7eb9d72a6be570be10051", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getThenExpression()", "signatureAfterChange": "  \tpublic Expression getThenExpression()", "diff": ["-\t\tif (thenExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetThenExpression(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.thenExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.thenExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.thenExpression, THEN_EXPRESSION_PROPERTY);", "-\t\treturn thenExpression;", "+\t\treturn this.thenExpression;"]}], "num": 23373}