{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72631028c605708fbbbc5c105f5ac0f2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "117364b9c20006302afe238f1164da59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<char[]> sourceForFilesWithMissingType)", "signatureAfterChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "diff": ["-\t\t\tfinal List<AnnotationProcessorFactory> factories,", "+\t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories,", "-\t\t\tfinal List<char[]> sourceForFilesWithMissingType)", "+\t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "-\t\t\tfor (int factoryIndex = 0, numFactories = factories.size(); factoryIndex < numFactories; factoryIndex++) {", "-\t\t\t\tfinal AnnotationProcessorFactory factory = factories.get(factoryIndex);", "-\t\t\t\tif( isBatchFactory(factory) ) continue;", "+\t\t\tfor( Map.Entry<AnnotationProcessorFactory, FactoryPath.Attributes> entry : factories.entrySet() ){", "+\t\t\t\tif( entry.getValue().runInBatchMode() ) continue;", "+\t\t\t\tAnnotationProcessorFactory factory = entry.getKey();", "-\t\t\t\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, sourceForFilesWithMissingType, processorEnv);", "+\t\t\t\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, unitsForFilesWithMissingType, processorEnv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bff1b39de86b1d1c64b29a5ae1f4977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "015c66459c41ce714c2afab061dda99760bcb04e", "commitAfterChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "signatureAfterChange": " \tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "diff": ["-\tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "+\tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( ", "+\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "-\t\t// Clear existing problem markers; we'll add them back if there are still problems.", "-\t\tremoveAptBuildProblemMarkers( project );", "-\t\tremoveMissingFactoryJars( project, containers );", "+\t\tremoveAptBuildProblemMarkers(project);", "+\t\tSet<FactoryContainer> badContainers = verifyFactoryPath(project);", "+\t\tif (badContainers != null) {", "+\t\t\treportMissingFactoryContainers(badContainers, project);", "+\t\t\tfor (FactoryContainer badFC : badContainers) {", "+\t\t\t\tcontainers.remove(badFC);", "+\t\t\t}", "+\t\t}"]}], "num": 38867}