{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29fb17c5e4d9a7cc680007655bcd3df0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b496feae2fe0a370399ff39939e5073", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6af4748240d783fb0fd75666c88ce3ea32b7386e", "commitAfterChange": "c4bbe81e5ffd7d180da7485d9b35d8dbf9b1703c", "methodNumberBeforeChange": 1024, "methodNumberAfterChange": 1024, "signatureBeforeChange": " public void test0999()", "signatureAfterChange": " public void test0999()", "diff": ["-\t\t\t(this.complianceLevel == ClassFileConstants.JDK1_7 ?", "-\t\t\t\"Type safety: The expression of type Iterator[] needs unchecked conversion to conform to Iterator<Number>[]\\n\"", "-\t\t\t: // with unchecked conversion involved, 1.8 infers a weaker type:", "-\t\t\t\"Type safety: The expression of type Iterator[] needs unchecked conversion to conform to Iterator<Object>[]\\n\"", "-\t\t\t)+ ", "+\t\t\t\"Type safety: The expression of type Iterator[] needs unchecked conversion to conform to Iterator<Number>[]\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33132bc24d6decdc5a739947df72040", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 806, "methodNumberAfterChange": 806, "signatureBeforeChange": " public void test0799()", "signatureAfterChange": " public void test0799()", "diff": ["-\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture-of ? extends T>\\n\" + ", "+\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture#2-of ? extends T>\\n\" + ", "-\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture-of ? extends T>\\n\" + ", "+\t\t\"Type safety: The expression of type Y needs unchecked conversion to conform to Y<capture#5-of ? extends T>\\n\" + "]}], "num": 62711}