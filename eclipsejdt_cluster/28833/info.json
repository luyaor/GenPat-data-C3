{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62205d2be9be1ab79a8824af9cbbc93f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad736aab9bfc6297655d5a423d6d86df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["-\t\tint fieldLength = fieldName.length;", "-\t\tfor (int i = fields.length; --i >= 0;) {", "-\t\t\tFieldBinding field = fields[i];", "-\t\t\tif (field.name.length == fieldLength && CharOperation.equals(field.name, fieldName))", "-\t\t\t\treturn field;", "-\t\t}", "-\t\treturn null;", "+\t\treturn ReferenceBinding.binarySearch(fieldName, this.fields);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdfe0ec5758bbec701256c538fb38b58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "eaed8b4c57bf985bb0b4f36634f058b94194b2e7", "commitAfterChange": "9b0b9be20fe15cfaaf5f2085fd6c89bedb4ddb87", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static final int compareWith(char[] array, char[] prefix, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static final int compareWith(char[] array, char[] prefix)", "diff": ["-\tpublic static final int compareWith(char[] array, char[] prefix, boolean isCaseSensitive) {", "+\tpublic static final int compareWith(char[] array, char[] prefix) {", "-\t\tif (isCaseSensitive) {", "-\t\t\twhile (min-- != 0) {", "-\t\t\t\tchar c1 = array[i];", "-\t\t\t\tchar c2 = prefix[i++];", "-\t\t\t\tif (c1 != c2)", "-\t\t\t\t\treturn c1 - c2;", "-\t\t\t}", "-\t\t} else {", "-\t\t\twhile (min-- != 0) {", "-\t\t\t\tchar c1 = Character.toLowerCase(array[i]);", "-\t\t\t\tchar c2 = Character.toLowerCase(prefix[i++]);", "-\t\t\t\tif (c1 != c2)", "-\t\t\t\t\treturn c1 - c2;", "-\t\t\t}", "+\t\twhile (min-- != 0) {", "+\t\t\tchar c1 = array[i];", "+\t\t\tchar c2 = prefix[i++];", "+\t\t\tif (c1 != c2)", "+\t\t\t\treturn c1 - c2;"]}], "num": 28833}