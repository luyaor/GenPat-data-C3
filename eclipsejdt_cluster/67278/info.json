{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a36ae3bda3e832d644a67d743db3c886", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7423fd1d545ad68eb39eb95a268a9d38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 604, "methodNumberAfterChange": 604, "signatureBeforeChange": " \tpublic void test600()", "signatureAfterChange": " \tpublic void test600()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"\tsort6(le);\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked invocation sort6(List<MyEnum>) of the generic method sort6(List<T>) of type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tsort7(le);\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked invocation sort7(List<MyEnum>) of the generic method sort7(List<T>) of type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"\tsort9(le);\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked invocation sort9(List<MyEnum>) of the generic method sort9(List<T>) of type X\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+    \t\t\"\tpublic class X implements Comparable {\\n\" + ", "+    \t\t\"\t                          ^^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+    \t\t\"\tZork z;\\n\" + ", "+    \t\t\"\t^^^^\\n\" + ", "+    \t\t\"Zork cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "+    \t\t\"\tList<MyEnum> le = null;\\n\" + ", "+    \t\t\"\t     ^^^^^^\\n\" + ", "+    \t\t\"Type safety: MyEnum is a raw type. References to generic type MyEnum<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+    \t\t\"\tsort6(le);\\n\" + ", "+    \t\t\"\t^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Unchecked invocation sort6(List<MyEnum>) of the generic method sort6(List<T>) of type X\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"5. WARNING in X.java (at line 9)\\n\" + ", "+    \t\t\"\tsort7(le);\\n\" + ", "+    \t\t\"\t^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Unchecked invocation sort7(List<MyEnum>) of the generic method sort7(List<T>) of type X\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"6. WARNING in X.java (at line 11)\\n\" + ", "+    \t\t\"\tsort9(le);\\n\" + ", "+    \t\t\"\t^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Unchecked invocation sort9(List<MyEnum>) of the generic method sort9(List<T>) of type X\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"7. WARNING in X.java (at line 21)\\n\" + ", "+    \t\t\"\tstatic <T extends MyEnum> void sort10(List<T> list) {}\\n\" + ", "+    \t\t\"\t                  ^^^^^^\\n\" + ", "+    \t\t\"Type safety: MyEnum is a raw type. References to generic type MyEnum<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d7c76bf25d6964dc31a8f42077c6e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 603, "methodNumberAfterChange": 603, "signatureBeforeChange": " \tpublic void test599()", "signatureAfterChange": " \tpublic void test599()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class X implements Comparable {\\n\" + ", "+\t\t\t\"\t                          ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tstatic <T extends Comparable> void sort5(List<T> list) {}\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + "]}], "num": 67278}