{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7511315c1305a20ac82abb300f63f431", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81beb18b4c0d9d0ad7f4f8ad1a955b89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 18, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-", "-\tbuffer.append(this.getPatternName());", "-\tif (declaringQualification != null) buffer.append(declaringQualification).append('.');", "+\tif (this.findDeclarations) {", "+\t\tbuffer.append(this.findReferences", "+\t\t\t? \"MethodCombinedPattern: \" //$NON-NLS-1$", "+\t\t\t: \"MethodDeclarationPattern: \"); //$NON-NLS-1$", "+\t} else {", "+\t\tbuffer.append(\"MethodReferencePattern: \"); //$NON-NLS-1$", "+\t}", "+\tif (declaringQualification != null)", "+\t\tbuffer.append(declaringQualification).append('.');", "-\telse if (declaringQualification != null) buffer.append(\"*.\"); //$NON-NLS-1$", "-\tif (selector != null) {", "+\telse if (declaringQualification != null)", "+\t\tbuffer.append(\"*.\"); //$NON-NLS-1$", "+", "+\tif (selector != null)", "-\t} else {", "+\telse", "-\t}", "-\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++){", "+\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++) {", "-\telse if (returnSimpleName != null) buffer.append(\" --> \"); //$NON-NLS-1$", "+\telse if (returnSimpleName != null)", "+\t\tbuffer.append(\" --> \"); //$NON-NLS-1$", "-\telse if (returnQualification != null) buffer.append(\"*\"); //$NON-NLS-1$", "+\telse if (returnQualification != null)", "+\t\tbuffer.append(\"*\"); //$NON-NLS-1$", "-\tswitch(matchMode){", "+\tswitch(matchMode) {", "-\tif (isCaseSensitive)", "-\t\tbuffer.append(\"case sensitive\"); //$NON-NLS-1$", "-\telse", "-\t\tbuffer.append(\"case insensitive\"); //$NON-NLS-1$", "+\tbuffer.append(isCaseSensitive ? \"case sensitive\" : \"case insensitive\"); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7461e995ca5566f395e12ecdc537231", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatJavadocBlock.java", "commitBeforeChange": "b7259e61ad84f1dda95b63bf74b4b4f38727c3a6", "commitAfterChange": "db331d5badcb0b35069c87387ccad89f9c226a52", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  protected void toString(StringBuffer buffer)", "signatureAfterChange": "  protected void toString(StringBuffer buffer)", "diff": ["+\t}", "+\tStringBuffer flagsBuffer = new StringBuffer();", "+\tif (isDescription()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"description\"); //$NON-NLS-1$", "+\t}", "+\tif (isFirst()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"first\"); //$NON-NLS-1$", "+\t}", "+\tif (isHeaderLine()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"header line\"); //$NON-NLS-1$", "+\t}", "+\tif (isImmutable()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"immutable\"); //$NON-NLS-1$", "+\t}", "+\tif (isInDescription()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"in description\"); //$NON-NLS-1$", "+\t}", "+\tif (isInlined()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"inlined\"); //$NON-NLS-1$", "+\t}", "+\tif (isInParamTag()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"in param tag\"); //$NON-NLS-1$", "+\t}", "+\tif (isOneLineTag()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"one line tag\"); //$NON-NLS-1$", "+\t}", "+\tif (isParamTag()) {", "+\t\tif (flagsBuffer.length() > 0) flagsBuffer.append(',');", "+\t\tflagsBuffer.append(\"param tag\"); //$NON-NLS-1$", "+\t}", "+\tif (flagsBuffer.length() > 0) {", "+\t\tif (inlined) buffer.append('\\t');", "+\t\tbuffer.append(\"\tflags: \"); //$NON-NLS-1$", "+\t\tbuffer.append(flagsBuffer);", "+\t\tbuffer.append('\\n');"]}], "num": 18556}