{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f573c6455d00655ea33e3d046d776a57", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18319b8eec965adf54e8a886eb9e50a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e71c12a24430281e16e762ec1f4388b25978109a", "commitAfterChange": "3a2ceaad86457e3ad5d931538b1dbf293c95deb0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void checkMethods()", "signatureAfterChange": "  void checkMethods()", "diff": ["-\t\t\t\tif (inheritedMethod.isPublic() && !inheritedMethod.declaringClass.isPublic())", "+\t\t\t\tif (inheritedMethod.isPublic() && (!inheritedMethod.declaringClass.isInterface() && !inheritedMethod.declaringClass.isPublic()))", "-\t\t\t\tif (inheritedMethod.isPublic() && !inheritedMethod.declaringClass.isPublic()) {", "+\t\t\t\tif (inheritedMethod.isPublic() && (!inheritedMethod.declaringClass.isInterface() && !inheritedMethod.declaringClass.isPublic())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ca54e42f094ec76964631e4828a65c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\t\t\t\t\tif (existingMethod.declaringClass != inheritedMethod.declaringClass && areMethodsCompatible(existingMethod, inheritedMethod) && !canOverridingMethodDifferInErasure(existingMethod, inheritedMethod)) {", "+\t\t\t\t\tif (TypeBinding.notEquals(existingMethod.declaringClass, inheritedMethod.declaringClass) && areMethodsCompatible(existingMethod, inheritedMethod) && !canOverridingMethodDifferInErasure(existingMethod, inheritedMethod)) {"]}], "num": 43178}