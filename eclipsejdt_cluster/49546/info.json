{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ea3c44a27b835ef52018e6d09ee6794", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "911438f6d8e04739cc4cf27ff2a4af2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic final LocalVariableBinding duplicateName(char[] name)", "signatureAfterChange": " \tpublic final boolean isDuplicateLocalVariable(char[] name)", "diff": ["-\t */", "-\tpublic final LocalVariableBinding duplicateName(char[] name) {", "-\t\tfor (int i = 0; i < localIndex; i++)", "-\t\t\tif (CharOperation.equals(name, locals[i].name))", "-\t\t\t\treturn locals[i];", "-", "-\t\tif (this instanceof MethodScope)", "-\t\t\treturn null;", "-\t\telse", "-\t\t\treturn ((BlockScope) parent).duplicateName(name);", "-\t}", "+\t */", "+\tpublic final boolean isDuplicateLocalVariable(char[] name) {", "+\t\tBlockScope current = this;", "+\t\twhile (true) {", "+\t\t\tfor (int i = 0; i < localIndex; i++) {", "+\t\t\t\tif (CharOperation.equals(name, current.locals[i].name))", "+\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\tif (current.kind != BLOCK_SCOPE) return false;", "+\t\t\tcurrent = (BlockScope)current.parent;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb1d40761b41f86949353ddc353bdc58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "f299d10a9893e78b9cfdc6af0f45eb1e019157a9", "commitAfterChange": "4e297e768bf0322adef9afbcccce3658b213d8a1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public Member getInnerMostDeclaringMember()", "signatureAfterChange": " public Member getOuterMostLocalContext()", "diff": ["-public Member getInnerMostDeclaringMember() {", "+public Member getOuterMostLocalContext() {", "+\tIJavaElement current = this;", "+\tMember lastLocalContext = null;", "+\tparentLoop: while (true) {", "+\t\tswitch (current.getElementType()) {", "+\t\t\tcase COMPILATION_UNIT :", "+\t\t\t\tbreak parentLoop; // done recursing", "+\t\t\tcase TYPE:", "+\t\t\t\t// cannot be a local context", "+\t\t\t\tbreak;", "+\t\t\tcase INITIALIZER:", "+\t\t\tcase FIELD:", "+\t\t\tcase METHOD:", "+\t\t\t\t // these elements can define local members", "+\t\t\t\tlastLocalContext = (Member) current;", "+\t\t\t\tbreak;", "+\t\t}\t\t", "+\t\tcurrent = current.getParent();", "+\t} ", "+\treturn lastLocalContext;", "+/*\tTODO (jerome) check old version, especially was answering local types", "-\t\t\tMember declaringMember = ((Member)fParent).getInnerMostDeclaringMember();", "+\t\t\tMember declaringMember = ((Member)fParent).getOuterMostLocalContext();", "-\t\t\treturn ((Member)fParent).getInnerMostDeclaringMember();", "+\t\t\treturn ((Member)fParent).getOuterMostLocalContext();", "+*/\t"]}], "num": 49546}