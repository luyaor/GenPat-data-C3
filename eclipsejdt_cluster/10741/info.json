{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fde68852fbab408d8f70cdedffb9a7b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c4874bd78182b300589284146208dfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public Collection<Declaration> getDeclarationsAnnotatedWith(AnnotationTypeDeclaration a)", "signatureAfterChange": "          public Collection<Declaration> getDeclarationsAnnotatedWith(AnnotationTypeDeclaration a)", "diff": ["-         final List<IBinding> annotatedDecls = getBindingsAnnotatedWith(annotationType);", "-         if( annotatedDecls.isEmpty() ) return Collections.emptyList();", "-         final Collection<Declaration> results = new ArrayList<Declaration>(annotatedDecls.size());", "-         for( IBinding annotatedDecl : annotatedDecls ){", "-             Declaration mirrorDecl = Factory.createDeclaration(annotatedDecl, this);", "-             if( mirrorDecl != null )", "-                 results.add(mirrorDecl);", "-        }", "-        return results;", "+         return getDeclarationsAnnotatedWith(annotationType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c298f5dabe17c9e2f2f604a2950da86e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java", "commitBeforeChange": "c7e13eb999aeeb70fd34b19df0f27a778109206c", "commitAfterChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": "  \t@Override \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "diff": ["-\t\tif (0 == annotations.length) {", "-\t\t\treturn Collections.emptyList();", "-\t\t}", "-\t\tList<AnnotationMirror> list = new ArrayList<AnnotationMirror>(annotations.length);", "-\t\tfor (AnnotationBinding annotation : annotations) {", "-\t\t\tlist.add(AnnotationMirrorImpl.getAnnotationMirror(annotation));", "-\t\t}", "-\t\treturn Collections.unmodifiableList(list);", "+\t\treturn Factory.getAnnotationMirrors(annotations);"]}], "num": 10741}