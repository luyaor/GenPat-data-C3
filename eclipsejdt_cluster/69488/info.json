{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "043d5fee2684457120ec8b12349d95a5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "592ea4d12ab6f6cc1e3d2cb4c5addc19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "85fe43540d2fa2b41e90fbadb73dc3c8d856ecfb", "commitAfterChange": "e60ca02f81acc7600a43413bd7fb7c0779ae6a52", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"6. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "-\t\t\t\"\t                                ^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Collection<X> to List\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "-\t\t\t\"\t                                ^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Collection<capture-of ?> to List\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                                    ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Collection<X> to List\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                                    ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Collection<capture-of ?> to List\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "721a07093d02d843a41e38c20e8dd476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "2caa59d033a9b6c8ec71aab586472ad7fe749893", "commitAfterChange": "a8944173670c6319cce2438add6b3e87f478a46c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test039() throws Exception", "signatureAfterChange": " \tpublic void test039() throws Exception", "diff": ["+\t\t\t\t\"\t            ^^^^^^^\\n\" + ", "+\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tObject q = (@Marker java. @Marker util. @Marker List<@Marker String> []) null;\\n\" + ", "-\t\t\t\t\"5. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"6. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"7. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tObject q = (@Marker java. @Marker util. @Marker List<@Marker String> []) null;\\n\" + ", "-\t\t\t\t\"\t                                        ^^^^^^^\\n\" + ", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "-\t\t\t\t\"Type annotations are not allowed on type names used to access static members\\n\" + ", "+\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "-\t\t\t\t\"15. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\"\tObject r = (@Marker java. @Marker util.@Marker Map<@Marker String, @Marker String>.@Marker Entry @Marker []) null;\\n\" + ", "-\t\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "+\t\t\t\t\"15. ERROR in X.java (at line 5)\\n\" +", "+\t\t\t\t\"\tObject r = (@Marker java. @Marker util.@Marker Map<@Marker String, @Marker String>.@Marker Entry @Marker []) null;\\n\" +", "+\t\t\t\t\"\t                                       ^^^^^^^\\n\" +", "+\t\t\t\t\"Type annotations are not allowed on type names used to access static members\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e04f91f9ea890acc165932181eefcf5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 667, "methodNumberAfterChange": 667, "signatureBeforeChange": " public void test0663()", "signatureAfterChange": " public void test0663()", "diff": ["-\t\t\"Unnecessary cast from List<V> to List<U>\\n\" + ", "+\t\t\"Type safety: The cast from List<V> to List<U> is actually checking against the erased type List\\n\" + ", "-\t\t\"Type safety: The cast from List<V> to List<U> is actually checking against the erased type List\\n\" + ", "+\t\t\"Unnecessary cast from List<V> to List<U>\\n\" + ", "-\t\t\"6. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\"\tList l = (List<List<U>>) lv;\\n\" + ", "-\t\t\"\t         ^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Unnecessary cast from List<List<V>> to List<List<U>>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"7. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\"\tList l = (List<List<U>>) lv;\\n\" + ", "+\t\t\"\t         ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Unnecessary cast from List<List<V>> to List<List<U>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f511519a6d8603de58abfccdc566641e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "4ee57f1aa920ef9dfc0c8991087575befcec8304", "commitAfterChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "methodNumberBeforeChange": 1038, "methodNumberAfterChange": 1038, "signatureBeforeChange": " public void test1013()", "signatureAfterChange": " public void test1013()", "diff": ["-\t\t\t\"\t\tSystem.out.println(\\\"[done]\\\");\\n\" +", "+\t\t\t\"\t\tSystem.out.println(zork);\\n\" +", "-\t\t\"1. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"\tSystem.out.println(zork);\\n\" + ", "+\t\t\"\t                   ^^^^\\n\" + ", "+\t\t\"zork cannot be resolved to a variable\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 14)\\n\" + ", "-\t\t\"2. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\"\tX x = bar1(l1, l2);\\n\" + ", "-\t\t\"\t      ^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from Object to X\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf8e6e584394302f6b9fe83d3f6ecf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "442cfec5b0ec5f78f613dac66413d02e26889f22", "commitAfterChange": "d42d74dc89c043581d93318957eb6b633b137649", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 239, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tvoid m() { List<X> l = (List<X>)list(); } // unsafe cast\\n\" + ", "-\t\t\t\"\t                       ^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Unnecessary cast to type List<X> for expression of type List\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tvoid m3() { Collection c = null; List l = (List<X>)c; } // unsafe cast\\n\" + ", "+\t\t\t\"\t                                          ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unsafe type operation: The cast from Collection to parameterized type List<X> will not check conformance of type arguments at runtime\\n\" + ", "-\t\t\t\"Unnecessary cast to type Collection<X> for expression of type List\\n\" + ", "+\t\t\t\"Unsafe type operation: The cast from List to parameterized type Collection<X> will not check conformance of type arguments at runtime\\n\" + "]}], "num": 69488}