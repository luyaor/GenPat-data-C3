{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da1597428006cef53d6bcaef396c40f6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6534ca0e0a836e766a229ef93782920", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "a8ee1d0a69b7af8dba4c67cc1aa9bd9d3524da30", "commitAfterChange": "a481bc7d7c42d3f901096e38b4ca7b4bbacb7ea8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public static ClasspathLocation[] computeLocations(\r \tIWorkspaceRoot workspaceRoot,\r \tIJavaProject javaProject,\r \tString outputFolderLocation,\r \tArrayList sourceFolders,\r \tSimpleLookupTable binaryResources) throws JavaModelException", "signatureAfterChange": "\r public static ClasspathLocation[] computeLocations(\r \tIWorkspaceRoot workspaceRoot,\r \tIJavaProject javaProject,\r \tString outputFolderLocation,\r \tArrayList sourceFolders,\r \tSimpleLookupTable binaryResources) throws JavaModelException", "diff": ["-\t\tif (target == null) continue nextEntry;\r", "+\t\tif (target == null){\r", "+\t\t\t// still remember a dependency onto the container project (20158)\r", "+\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {\r", "+\t\t\t\tif (path.segmentCount() > 1) {\r", "+\t\t\t\t\tIResource rsc = workspaceRoot.findMember(path.segment(0));\r", "+\t\t\t\t\tif (rsc instanceof IProject) {\r", "+\t\t\t\t\t\tbinaryResources.put((IProject)rsc, new IResource[0]);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tcontinue nextEntry;\r", "+\t\t}\r", "-\t\t\t\t\t\t\tbinaryResources.put(prereqProject, new IResource[] {prereqOutputFolder});\r", "-\t\t\t\t\t\telse\r", "+\t\t\t\t\t\t\texistingResources = new IResource[] {prereqOutputFolder};\r", "+\t\t\t\t\t\telse {\r", "+\t\t\t\t\t\t\tint size = existingResources.length;\r", "+\t\t\t\t\t\t\tSystem.arraycopy(existingResources, 0, existingResources = new IResource[size + 1], 1, size);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tbinaryResources.put(prereqProject, existingResources);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2605f86b6366091416f8b1a3973b06a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MovePackageFragmentRootOperation.java", "commitBeforeChange": "c333ceff8dd520a0590ee780b2fe8c5efcd4c013", "commitAfterChange": "c77b24714f3e6f9d0a1f77d86a434cfb1d3d7793", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected void updateReferingProjectClasspaths(IPath rootPath) throws JavaModelException", "signatureAfterChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException", "diff": ["-\tprotected void updateReferingProjectClasspaths(IPath rootPath) throws JavaModelException {", "+\tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException {", "+\t\t\tint newCPIndex = -1;", "-\t\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, cpLength);", "+\t\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, j);", "+\t\t\t\t\t\tnewCPIndex = j;", "-\t\t\t\t\tnewClasspath[j] = copy(entry);", "+\t\t\t\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_SOURCE // library entry", "+\t\t\t\t\t\t\t|| this.destination.segment(0).equals(project.getElementName())) { // destination is in same project", "+\t\t\t\t\t\tnewClasspath[newCPIndex++] = copy(entry);", "+\t\t\t\t\t} // else source folder is moved to another project: deletes its classpath entry", "+\t\t\t\t} else if (newClasspath != null) {", "+\t\t\t\t\tnewClasspath[newCPIndex++] = entry;", "+\t\t\t\tif (newCPIndex < newClasspath.length) {", "+\t\t\t\t\tSystem.arraycopy(newClasspath, 0, newClasspath = new IClasspathEntry[newCPIndex], 0, newCPIndex);", "+\t\t\t\t}"]}], "num": 9950}