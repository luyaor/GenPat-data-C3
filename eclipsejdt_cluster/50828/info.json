{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b06f03cc584665a165775932d5ba2326", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d7cf6fca4c9c7a099579f2fa824282", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private static SearchPattern createMethodOrConstructorPattern(String patternString, int limitTo, int matchRule, boolean isConstructor)", "signatureAfterChange": " private static SearchPattern createMethodOrConstructorPattern(String patternString, int limitTo, int matchRule, boolean isConstructor)", "diff": ["-\t\t\t\t\t\t\tif (parameterTypes.length == parameterCount)", "-\t\t\t\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, parameterTypes = new String[parameterCount*2], 0, parameterCount);", "-\t\t\t\t\t\t\tparameterTypes[parameterCount++] = parameterType;", "+\t\t\t\t\t\t\tif (parameterTypes != null) {", "+\t\t\t\t\t\t\t\tif (parameterTypes.length == parameterCount)", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, parameterTypes = new String[parameterCount*2], 0, parameterCount);", "+\t\t\t\t\t\t\t\tparameterTypes[parameterCount++] = parameterType;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (parameterType != null){", "+\t\t\t\t\t\t\tif (parameterType != null && parameterTypes != null) {", "-\t\t\tdeclaringTypeQualification = null;", "-\t\t\t\tparameterTypeSignatures[i] = Signature.createTypeSignature(parameterTypes[i], false);", "-\t\t\t\tif (parameterTypeSignatures[i].indexOf(Signature.C_GENERIC_START) < 0) {", "-\t\t\t\t\tparameterTypePart = parameterTypes[i].toCharArray();", "-\t\t\t\t} else {", "-\t\t\t\t\tparameterTypePart = Signature.toCharArray(Signature.getTypeErasure(parameterTypeSignatures[i].toCharArray()));", "+\t\t\t\tif (parameterTypes != null) {", "+\t\t\t\t\tparameterTypeSignatures[i] = Signature.createTypeSignature(parameterTypes[i], false);", "+\t\t\t\t\tif (parameterTypeSignatures[i].indexOf(Signature.C_GENERIC_START) < 0) {", "+\t\t\t\t\t\tparameterTypePart = parameterTypes[i].toCharArray();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tparameterTypePart = Signature.toCharArray(Signature.getTypeErasure(parameterTypeSignatures[i].toCharArray()));", "+\t\t\t\t\t}", "-\t\t\tint lastDotPosition = CharOperation.lastIndexOf('.', parameterTypePart);", "-\t\t\tif (lastDotPosition >= 0) {", "+\t\t\tint lastDotPosition = parameterTypePart==null ? -1 : CharOperation.lastIndexOf('.', parameterTypePart);", "+\t\t\tif (parameterTypePart != null && lastDotPosition >= 0) {", "-\t\t\treturnTypeQualification = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "719ea89a4a4022e5d9580d73b2e5b901", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "63969f0e42bcdfc0a055ac0f3d2f47fa48cf3e29", "commitAfterChange": "b3b347145ddd14cd49627dacc39ebc40cb4c285a", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \t \tprivate void completionOnMarkerAnnotationName(ASTNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": " \t \tprivate void completionOnMarkerAnnotationName(ASTNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\tCompletionOnAnnotationOfType fakeType = (CompletionOnAnnotationOfType)scope.parent.referenceContext();", "-\t\tif (fakeType.annotations[0] == annot) {", "+\t\t// When completion is inside lambda body, the fake type cannot be attached to the lambda.", "+\t\tReferenceContext referenceContext = scope.parent.referenceContext();", "+\t\tCompletionOnAnnotationOfType fakeType = (CompletionOnAnnotationOfType) (referenceContext instanceof CompletionOnAnnotationOfType ? referenceContext : null);", "+\t\tif (fakeType != null && fakeType.annotations[0] == annot) {", "-\t\t\t\t\t!fakeType.isParameter) {", "+\t\t\t\t\tfakeType != null && !fakeType.isParameter) {"]}], "num": 50828}