{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d078bca3438c436dd0a9fd70f773ad9f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990661557e9c00557b989ca83e6dd06b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testBinary06()", "signatureAfterChange": " \tpublic void testBinary06()", "diff": ["-// FIXME(stephan): change to negative tests and fill in desired error messages", "-//\t\trunNegativeTestWithLibs(", "+\t\trunNegativeTestWithLibs(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"p/X1.java\",", "+\t\t\t\t\t\"package p;\\n\" +", "+\t\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "+\t\t\t\t\t\"public abstract class X1<T extends @NonNull Object> extends ArrayList<T> {\\n\" +", "+\t\t\t\t\t\"    public <U, V extends @Nullable Object> void foo(U u, V v) {}\\n\" +", "+\t\t\t\t\t\"}\\n\",", "+\t\t\t\t\t\"p/X2.java\", ", "+\t\t\t\t\t\"package p;\\n\"+", "+\t\t\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "+\t\t\t\t\t\"public class X2<@NonNull W extends @Nullable Object> {}\\n\" // incompatible constraints", "+\t\t\t\t},", "+\t\t\t\tcustomOptions,", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in p\\\\X2.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tpublic class X2<@NonNull W extends @Nullable Object> {}\\n\" + ", "+\t\t\t\t\"\t                                   ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"This nullness annotation conflicts with a \\'@NonNull\\' annotation which is effective on the same type parameter \\n\" + ", "+\t\t\t\t\"----------\\n\");", "+\t\t// fix the bug:\t\t", "-\t\t\t\t\t\"}\\n\" +", "-\t\t\t\t\t\"class X2<@NonNull W extends @Nullable Object> {}\\n\" // incompatible constraints", "+\t\t\t\t\t\"}\\n\",", "+\t\t\t\t\t\"p/X2.java\", ", "+\t\t\t\t\t\"package p;\\n\"+", "+\t\t\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "+\t\t\t\t\t\"public class X2<@Nullable W extends Object> {}\\n\"", "+\t\t\t\t\t\"import p.X2;\\n\" +", "-\t\t\t\t\t\"\tX1<@Nullable String> maybeStrings;\\n\" + // incompatible: T is constrained to @NonNull", "+\t\t\t\t\t\"\tX1<@Nullable String> maybeStrings;\\n\" + // incompatible: T has a bound constrained to @NonNull", "+\t\t\t\t\t\"   X2<@NonNull String> strings;\\n\" +       // incompatible: W is constrained to @Nullable", "-\t\t\t\t\"1. ERROR in Y1.java (at line 6)\\n\" + ", "+\t\t\t\t\"1. ERROR in Y1.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tX1<@Nullable String> maybeStrings;\\n\" + ", "+\t\t\t\t\"\t   ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Null constraint mismatch: The type \\'@Nullable String\\' is not a valid substitute for the type parameter \\'T\\' which is constrained as \\'@NonNull\\'\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in Y1.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tX2<@NonNull String> strings;\\n\" + ", "+\t\t\t\t\"\t   ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Null constraint mismatch: The type \\'@NonNull String\\' is not a valid substitute for the type parameter \\'W\\' which is constrained as \\'@Nullable\\'\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in Y1.java (at line 8)\\n\" + ", "+\t\t\t\t\"Null constraint mismatch: The type '@NonNull Object' is not a valid substitute for the type parameter 'V' which is constrained as '@Nullable'\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfe1b3766ed96c8cea4d86851282c1d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "b70a8ef15d3ecb3f80cac545a48011ae8c1f5f45", "commitAfterChange": "78062f651ed5392b1800a53eac72f4f25be7d9fe", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void testDefault06()", "signatureAfterChange": "\r public void testDefault06()", "diff": ["-// apply default to type parameter - inner class", "-public void testDefault06() {", "-\trunNegativeTestWithLibs(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "-\t\t\t\"@NonNullByDefault(DefaultLocation.TYPE_PARAMETER)\\n\" +", "-\t\t\t\"public class X {\\n\" +", "-\t\t\t\"\tclass Inner<T> {\\n\" +", "-\t\t\t\"\t\tT process(T t) {\\n\" +", "-\t\t\t\"\t\t\t@NonNull T t2 = t; // OK\\n\" +", "-\t\t\t\"\t\t\treturn null; // ERR\\n\" +", "-\t\t\t\" \t\t}\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"\tvoid test(Inner<Number> inum) {\\n\" +", "-\t\t\t\"\t\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"}\\n\"", "-\t\t},", "-\t\tgetCompilerOptions(),", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\treturn null; // ERR\\n\" + ", "-\t\t\"\t       ^^^^\\n\" + ", "-\t\t\"Null type mismatch: required \\'@NonNull T\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" + ", "-\t\t\"\t                                   ^^^^\\n\" + ", "-\t\t\"Null type mismatch: required \\'@NonNull Number\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\");", "-}", "+// apply default to type parameter - inner class\r", "+public void testDefault06() {\r", "+\trunNegativeTestWithLibs(\r", "+\t\tnew String[] {\r", "+\t\t\t\"X.java\",\r", "+\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +\r", "+\t\t\t\"@NonNullByDefault(DefaultLocation.TYPE_PARAMETER)\\n\" +\r", "+\t\t\t\"public class X {\\n\" +\r", "+\t\t\t\"\tclass Inner<T> {\\n\" +\r", "+\t\t\t\"\t\tT process(T t) {\\n\" +\r", "+\t\t\t\"\t\t\t@NonNull T t2 = t; // OK\\n\" +\r", "+\t\t\t\"\t\t\treturn null; // ERR\\n\" +\r", "+\t\t\t\" \t\t}\\n\" +\r", "+\t\t\t\"\t}\\n\" +\r", "+\t\t\t\"\tvoid test(Inner<Number> inum) {\\n\" +\r", "+\t\t\t\"\t\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" +\r", "+\t\t\t\"\t}\\n\" +\r", "+\t\t\t\"}\\n\"\r", "+\t\t},\r", "+\t\tgetCompilerOptions(),\r", "+\t\t\"----------\\n\" + \r", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + \r", "+\t\t\"\treturn null; // ERR\\n\" + \r", "+\t\t\"\t       ^^^^\\n\" + \r", "+\t\t\"Null type mismatch: required \\'@NonNull T\\' but the provided value is null\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"2. ERROR in X.java (at line 10)\\n\" + \r", "+\t\t\"\tvoid test(Inner<Number> inum) {\\n\" + \r", "+\t\t\"\t                ^^^^^^\\n\" + \r", "+\t\t\"Null constraint mismatch: The type \\'Number\\' is not a valid substitute for the type parameter \\'@NonNull T\\'\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"3. ERROR in X.java (at line 11)\\n\" + \r", "+\t\t\"\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" + \r", "+\t\t\"\t                                   ^^^^\\n\" + \r", "+\t\t\"Null type mismatch: required \\'@NonNull Number\\' but the provided value is null\\n\" + \r", "+\t\t\"----------\\n\");\r", "+}\r"]}], "num": 30094}