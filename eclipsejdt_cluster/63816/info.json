{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32cba9265f3a4b2fc6d6c8f6a67fff7b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f55172fe544ce44337f74578679a94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "82e3492687fb385a8a9ba6c56e1f6d491dc8d79a", "commitAfterChange": "0b30f6ac807cc8aa14a5978d1dd305dd71baedda", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\t\t\tint length = ((int) this.identifierPositionStack[0]) - start + 1;", "-\t\t\tmethodName.setSourceRange(start, length);", "+\t\t\tint end = (int) this.identifierPositionStack[0];", "+\t\t\tmethodName.setSourceRange(start, end - start + 1);", "-\t\t\t\tmethodRef.setSourceRange(this.memberStart, length);", "+\t\t\t\tstart = this.memberStart;", "+\t\t\t\tmethodRef.setSourceRange(start, end - start + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbcbfea90565ebe8590166f5680a9dd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "73f467cdb5be324a4e51ae774946ece8c4bd812d", "commitAfterChange": "06a2118226f9c43425d83ed17fa0790c93bebfb4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \t\t\r \tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": "\r \t\t\r \tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\t\tBlock block = this.ast.newBlock();\r", "-\t\t\tblock.setSourceRange(start, end - start + 1);\r", "-\t\t\tmethodDecl.setBody(block);\r", "+\t\t\tif (start != -1 && end != -1) {\r", "+\t\t\t\t/*\r", "+\t\t\t\t * start or end can be equal to -1 if we have an interface's method.\r", "+\t\t\t\t */\r", "+\t\t\t\tBlock block = this.ast.newBlock();\r", "+\t\t\t\tblock.setSourceRange(start, end - start + 1);\r", "+\t\t\t\tmethodDecl.setBody(block);\r", "+\t\t\t}\r"]}], "num": 63816}