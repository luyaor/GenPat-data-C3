{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "191afc453dc956d9f0a3ad4f97054c7e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602af4466c20ab66f35cea2e51e214aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "f4fc504166df381ca6b1f6852c6f598d05ce2608", "commitAfterChange": "75e8acfdeb57688faec88df980fcf3ed6ae091e5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "signatureAfterChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "diff": ["-\tif (this.binding instanceof ParameterizedGenericMethodBinding) {", "+\tif (this.binding instanceof ParameterizedMethodBinding) {", "-\t\t\tMethodBinding updatedBinding = ctx.inferInvocationType(this, (ParameterizedGenericMethodBinding) this.binding);", "-\t\t\tif (updateBindings(updatedBinding, targetType)) {", "-\t\t\t\tASTNode.resolvePolyExpressionArguments(this, updatedBinding, scope);", "+\t\t\tif (this.binding instanceof ParameterizedGenericMethodBinding) {", "+\t\t\t\tMethodBinding updatedBinding = ctx.inferInvocationType(this,", "+\t\t\t\t\t\t(ParameterizedGenericMethodBinding) this.binding);", "+\t\t\t\tif (updateBindings(updatedBinding, targetType)) {", "+\t\t\t\t\tASTNode.resolvePolyExpressionArguments(this, updatedBinding, scope);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tctx.rebindInnerPolies(this.binding, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86c355a249843762d891d672366254b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "75e8acfdeb57688faec88df980fcf3ed6ae091e5", "commitAfterChange": "3628f70cbcd54c8d129a1cc8c813e92d2b73fa38", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "signatureAfterChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "diff": ["-\tif (this.binding instanceof ParameterizedMethodBinding) {", "+\tif (this.binding instanceof ParameterizedGenericMethodBinding) {", "-\t\t\tif (this.binding instanceof ParameterizedGenericMethodBinding) {", "-\t\t\t\tMethodBinding updatedBinding = ctx.inferInvocationType(this,", "-\t\t\t\t\t\t(ParameterizedGenericMethodBinding) this.binding);", "-\t\t\t\tif (updateBindings(updatedBinding, targetType)) {", "-\t\t\t\t\tASTNode.resolvePolyExpressionArguments(this, updatedBinding, scope);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tctx.rebindInnerPolies(this.binding, this);", "+\t\t\tMethodBinding updatedBinding = ctx.inferInvocationType(this, (ParameterizedGenericMethodBinding) this.binding);", "+\t\t\tif (updateBindings(updatedBinding, targetType)) {", "+\t\t\t\tASTNode.resolvePolyExpressionArguments(this, updatedBinding, scope);"]}], "num": 57090}