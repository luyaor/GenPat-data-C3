{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "164dc11ec977178a96aea9a46572c3ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d4bba5b6ecbdc6e188317c6a11649b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "commitAfterChange": "8715eeccf865a33f86687c2ed1edfa7db42faeec", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "signatureAfterChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "diff": ["-    \tMap<String, String> options = new HashMap<String, String>(rawOptions.size() + 6);", "+    \tMap<String, String> options = new HashMap<>(rawOptions.size() + 6);", "-    \t\tSet<String> classpath = new LinkedHashSet<String>();", "-    \t\tSet<String> sourcepath = new LinkedHashSet<String>();", "+    \t\tSet<String> classpath = new LinkedHashSet<>();", "+    \t\tSet<String> sourcepath = new LinkedHashSet<>();", "-    \t\tSet<IJavaProject> projectsProcessed = new HashSet<IJavaProject>();", "+    \t\tSet<IJavaProject> projectsProcessed = new HashSet<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809fec916db36d42b3263230f03108b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "d6e67d4c8518637d8a6205904d99263fcf72b512", "commitAfterChange": "25c3603d7bf5d103d47b791d11767b16968f4a1d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "diff": ["-\t\tString[] optionsToProcess = new String[allOptions.size()];", "+\t\tfinal String[] optionsToProcess = new String[allOptions.size()];", "-    \t\t\tthrow new UnsupportedOperationException();", "+    \t\t\tArrayList<Processor> temp = new ArrayList<Processor>();", "+    \t\t\tfor (Processor processor : processors) {", "+    \t\t\t\ttemp.add(processor);", "+    \t\t\t}", "+    \t\t\tProcessor[] processors2 = new Processor[temp.size()];", "+    \t\t\ttemp.toArray(processors2);", "+    \t\t\tEclipseCompiler.this.processors = processors2;"]}], "num": 71250}