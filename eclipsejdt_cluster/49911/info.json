{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bdbb7bd5bda4bfd0a9f223f42765531", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6053b3f08d3280a222b48d0d633e1f9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "  \t\t@Override \t\tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t\t@Override", "-\t\t\tsynchronized (AnnotationProcessorFactoryLoader.this) {", "-\t\t\t\tswitch (event.getType()) {", "-\t\t\t\t", "-\t\t\t\t// Project deletion", "-\t\t\t\tcase (IResourceChangeEvent.PRE_DELETE) :", "-\t\t\t\t\tIResource project = event.getResource();", "-\t\t\t\t\tif (project != null && project instanceof IProject) {", "-\t\t\t\t\t\tIJavaProject jproj = JavaCore.create((IProject)project);", "-\t\t\t\t\t\tif (jproj != null) {", "-\t\t\t\t\t\t\tuncacheProject(jproj);", "-\t\t\t\t\t\t}", "+\t\t\tswitch (event.getType()) {", "+\t\t\t", "+\t\t\t// Project deletion", "+\t\t\tcase (IResourceChangeEvent.PRE_DELETE) :", "+\t\t\t\tIResource project = event.getResource();", "+\t\t\t\tif (project != null && project instanceof IProject) {", "+\t\t\t\t\tIJavaProject jproj = JavaCore.create((IProject)project);", "+\t\t\t\t\tif (jproj != null) {", "+\t\t\t\t\t\tuncacheProject(jproj);", "-\t\t\t\t\tbreak;", "-\t\t\t\t\t", "-\t\t\t\t// Changes to jar files or .factorypath files", "-\t\t\t\tcase (IResourceChangeEvent.PRE_BUILD) :", "-\t\t\t\t\tIResourceDelta rootDelta = event.getDelta();", "-\t\t\t\t\tFactoryPathDeltaVisitor visitor = new FactoryPathDeltaVisitor();", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\trootDelta.accept(visitor);", "-\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\tAptPlugin.log(e, \"Unable to determine whether resource change affects annotation processor factory path\"); //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t\tSet<IJavaProject> affected = visitor.getAffectedProjects();", "-\t\t\t\t\tif (affected != null) {", "-\t\t\t\t\t\tprocessChanges(affected, failureHandlers);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\t// Changes to jar files or .factorypath files", "+\t\t\tcase (IResourceChangeEvent.PRE_BUILD) :", "+\t\t\t\tIResourceDelta rootDelta = event.getDelta();", "+\t\t\t\tFactoryPathDeltaVisitor visitor = new FactoryPathDeltaVisitor();", "+\t\t\t\ttry {", "+\t\t\t\t\trootDelta.accept(visitor);", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\tAptPlugin.log(e, \"Unable to determine whether resource change affects annotation processor factory path\"); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\tSet<IJavaProject> affected = visitor.getAffectedProjects();", "+\t\t\t\tif (affected != null) {", "+\t\t\t\t\tprocessChanges(affected, failureHandlers);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eccfff6b353bd5cda014e7384502e302", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java", "commitBeforeChange": "458dca4c2b9da6278d150eba84339274fccc6057", "commitAfterChange": "01d995488d5e309c6b243da146c63894a6df881d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \t \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\tif ( event.getType() == IResourceChangeEvent.PRE_BUILD )", "-\t\t{", "-\t\t\ttry", "-\t\t\t{ ", "-\t\t\t\tif( AptPlugin.DEBUG )", "-\t\t\t\t\tAptPlugin.trace(\"---- generated resource change listener got a pre-build event\"); //$NON-NLS-1$", "-\t\t\t\tfinal PreBuildVisitor visitor = new PreBuildVisitor();", "-\t\t\t\tevent.getDelta().accept( visitor );", "-\t\t\t\taddGeneratedSrcFolderTo(visitor.getProjectsThatNeedGenSrcFolder());", "-\t\t\t}", "-\t\t\tcatch ( CoreException ce )", "-\t\t\t{", "-\t\t\t\tAptPlugin.log(ce, \"Error during resource change for \" + event); //$NON-NLS-1$", "-\t\t\t\t// TODO:  handle exception here.", "-\t\t\t}", "-\t\t}", "-\t\telse if ( event.getType() == IResourceChangeEvent.PRE_CLOSE )", "+\t\tif ( event.getType() == IResourceChangeEvent.PRE_CLOSE )", "+\t\telse if ( event.getType() == IResourceChangeEvent.PRE_BUILD )", "+\t\t{", "+\t\t\ttry", "+\t\t\t{ ", "+\t\t\t\tif( AptPlugin.DEBUG )", "+\t\t\t\t\tAptPlugin.trace(\"---- generated resource change listener got a pre-build event\"); //$NON-NLS-1$", "+\t\t\t\t", "+\t\t\t\tfinal PreBuildVisitor pbv = new PreBuildVisitor();", "+\t\t\t\t", "+\t\t\t\t// First we need to handle previously deleted resources (from the post-change event),", "+\t\t\t\t// because we could not perform file i/o during that event", "+\t\t\t\tfor (IResource resource : deletedResources) {", "+\t\t\t\t\tpbv.handleDeletion(resource);", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tevent.getDelta().accept( pbv );", "+\t\t\t\taddGeneratedSrcFolderTo(pbv.getProjectsThatNeedGenSrcFolder());", "+\t\t\t\t", "+\t\t\t\t// Now clear the set of deleted resources,", "+\t\t\t\t// as we don't want to re-handle them", "+\t\t\t\tdeletedResources.clear();", "+\t\t\t}", "+\t\t\tcatch ( CoreException ce )", "+\t\t\t{", "+\t\t\t\tAptPlugin.log(ce, \"Error during pre-build resource change\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\telse if (event.getType() == IResourceChangeEvent.POST_CHANGE) {", "+\t\t\tPostChangeVisitor pcv = new PostChangeVisitor();", "+\t\t\ttry {", "+\t\t\t\tevent.getDelta().accept(pcv);", "+\t\t\t}", "+\t\t\tcatch (CoreException ce) {", "+\t\t\t\tAptPlugin.log(ce, \"Error during post-change resource event\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}], "num": 49911}