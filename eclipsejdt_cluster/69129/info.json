{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c39713202704b9a6ba7a4d50b20dd9c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3a05f15ea2bc561c8fe29b5509b19b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "634c1488daeae83b3e903190d0e876028963ffaa", "commitAfterChange": "98ef2023c1555c55d1d5f30d49ca5e0fe4a5637e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope unused)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope unused)", "diff": ["-\t\t\tif (typeDeclaration.allocation == null || typeDeclaration.allocation.enumConstant == null) {", "-\t\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {\t\t\t\t", "-\t\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, -1, nodeSet, occurrenceCount);", "-\t\t\t\t} else {", "-\t\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(typeDeclaration);", "-\t\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, level != null ? level.intValue() : -1, nodeSet, occurrenceCount);", "-\t\t\t\t}", "+\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {\t\t\t\t", "+\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, -1, nodeSet, occurrenceCount);", "-\t\t\t\tif (level != null) {", "-\t\t\t\t\tFieldDeclaration enumConstant = typeDeclaration.allocation.enumConstant;", "-\t\t\t\t\tint offset = enumConstant.sourceStart;", "-\t\t\t\t\tSearchMatch match = newDeclarationMatch(this.enclosingElement, this.enclosingElementBinding, level.intValue(), offset, enumConstant.sourceEnd-offset+1);", "-\t\t\t\t\treport(match);", "-\t\t\t\t}", "+\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, level != null ? level.intValue() : -1, nodeSet, occurrenceCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4b47e9fa42296829b1e3823b60b172", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "47c99e27d049f54746a4e3073866eaf77a854339", "commitAfterChange": "3cb212c139b785d5942036354807eebced06845d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r protected INameEnvironment getBuildNameEnvironment() throws JavaModelException", "signatureAfterChange": "\r protected INameEnvironment getBuildNameEnvironment() throws JavaModelException", "diff": ["-\t\r", "-\tif (JavaModelManager.USING_NEW_BUILDER){\r", "-\t\treturn new NameEnvironment(getProject());\r", "-\t} else {\r", "-\t\tIProject project = getProject().getProject();\r", "-\t\tStateImpl state= (StateImpl) JavaModelManager.getJavaModelManager().getLastBuiltState(project, null);\r", "-\t\tif (state == null)\r", "-\t\t\treturn null;\r", "-\t\tBuilderEnvironment env = new BuilderEnvironment(new BatchImageBuilder(state));\r", "-\t\t\r", "-\t\t// Fix for 1GB7PUI: ITPJCORE:WINNT - evaluation from type in default package\r", "-\t\tIPackage defaultPackage = state.getDevelopmentContext().getImage().getPackageHandle(PackageImpl.DEFAULT_PACKAGE_PREFIX + project.getName(), true);\r", "-\t\tenv.setDefaultPackage(defaultPackage);\r", "-\t\t\r", "-\t\treturn env;\r", "-\t}\r", "+\treturn new NameEnvironment(getProject());\r"]}], "num": 69129}