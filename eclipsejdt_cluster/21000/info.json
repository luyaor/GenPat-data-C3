{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0343f823fc09dc94f3a258ac8e2e91d8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81c88f73a5e6eaa37d7a40322e4ed1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "24242f27a56569515f3a766b79af5b4f6c52fffe", "commitAfterChange": "270b2d0dc66fd2f8c8012264ce82bca4953b85cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  boolean isValueProvidedUsingAnnotation(FieldDeclaration fieldDecl)", "signatureAfterChange": "  boolean isValueProvidedUsingAnnotation(FieldDeclaration fieldDecl)", "diff": ["+\t\t\t} else if (annotation.resolvedType.id == TypeIds.T_OrgSpringframeworkBeansFactoryAnnotationAutowired) {", "+\t\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "+\t\t\t\tif (memberValuePairs == Annotation.NoValuePairs)", "+\t\t\t\t\treturn true;", "+\t\t\t\tfor (int j = 0; j < memberValuePairs.length; j++) {", "+\t\t\t\t\tif (CharOperation.equals(memberValuePairs[j].name, TypeConstants.REQUIRED))", "+\t\t\t\t\t\treturn memberValuePairs[j].value instanceof TrueLiteral;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9eae4133fe6420534dba1533c50d6ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "09abc2ad251de2dd4d96b785369a23f6d2269e32", "commitAfterChange": "99a5e1463320bd2535f465b20c782dd6d27a8c3d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void updateSourceEndIfNecessary(int braceStart, int braceEnd)", "signatureAfterChange": " public void updateSourceEndIfNecessary(int braceStart, int braceEnd)", "diff": ["-\t\t\tinitializer.declarationSourceEnd = parser().rBraceEnd;", "-\t\t\tinitializer.bodyEnd = parser().rBraceStart;", "+\t\t\tif (initializer.bodyStart < parser().rBraceEnd) {", "+\t\t\t\tinitializer.declarationSourceEnd = parser().rBraceEnd;", "+\t\t\t} else {", "+\t\t\t\tinitializer.declarationSourceEnd = initializer.bodyStart;", "+\t\t\t}", "+\t\t\tif (initializer.bodyStart < parser().rBraceStart) {", "+\t\t\t\tinitializer.bodyEnd = parser().rBraceStart;", "+\t\t\t} else {", "+\t\t\t\tinitializer.bodyEnd = initializer.bodyStart;", "+\t\t\t}"]}], "num": 21000}