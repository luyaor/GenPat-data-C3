{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba91c4f947c0ff2ff86825ee18f7a971", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aa3098562955789f38e406ea2046b37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tthis.receiverType = this.receiver.resolveType(scope);", "-\tif (this.receiverType == null) {", "+\tthis.actualReceiverType = this.receiver.resolveType(scope);", "+\tif (this.actualReceiverType == null) {", "-\t\tif (((CastExpression)this.receiver).expression.resolvedType == this.receiverType) {", "+\t\tif (((CastExpression)this.receiver).expression.resolvedType == this.actualReceiverType) {", "-\tFieldBinding fieldBinding = this.codegenBinding = this.binding = scope.getField(this.receiverType, this.token, this);", "+\tFieldBinding fieldBinding = this.binding = scope.getField(this.actualReceiverType, this.token, this);", "-\t\tscope.problemReporter().invalidField(this, this.receiverType);", "+\t\tscope.problemReporter().invalidField(this, this.actualReceiverType);", "-\tTypeBinding receiverErasure = this.receiverType.erasure();", "+\tTypeBinding receiverErasure = this.actualReceiverType.erasure();", "-\t\t\tthis.receiverType = fieldBinding.declaringClass; // handle indirect inheritance thru variable secondary bound", "+\t\t\tthis.actualReceiverType = fieldBinding.declaringClass; // handle indirect inheritance thru variable secondary bound", "-\tthis.receiver.computeConversion(scope, this.receiverType, this.receiverType);", "+\tthis.receiver.computeConversion(scope, this.actualReceiverType, this.actualReceiverType);", "-\t\t\t\t&& declaringClass != this.receiverType", "+\t\t\t\t&& declaringClass != this.actualReceiverType"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990bdc300fff9ed358a9e79fbc218a87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "9528b13b60b5267a27dfdeac3b8ea9a804476535", "commitAfterChange": "ef0d751764a03bfb7b7e9d8838fc454e1e51fa0c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tthis.qualifyingType = this.receiverType = this.receiver.resolveType(scope); ", "+\tthis.actualReceiverType = this.receiver.resolveType(scope); ", "-\tif (this.receiverType == null) ", "+\tif (this.actualReceiverType == null) ", "-\tif (this.receiverType.isBaseType()) {", "-\t\tscope.problemReporter().errorNoMethodFor(this, this.receiverType, argumentTypes);", "+\tif (this.actualReceiverType.isBaseType()) {", "+\t\tscope.problemReporter().errorNoMethodFor(this, this.actualReceiverType, argumentTypes);", "-\t\t\t: scope.getMethod(this.receiverType, this.selector, argumentTypes, this); ", "+\t\t\t: scope.getMethod(this.actualReceiverType, this.selector, argumentTypes, this); ", "-\t\t\t\t\tif (this.receiverType instanceof ReferenceBinding) {", "-\t\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.receiverType;", "+\t\t\t\t\tif (this.actualReceiverType instanceof ReferenceBinding) {", "+\t\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.actualReceiverType;", "-\t\t\t\t\t\tscope.problemReporter().errorNoMethodFor(this, this.receiverType, argumentTypes);", "+\t\t\t\t\t\tscope.problemReporter().errorNoMethodFor(this, this.actualReceiverType, argumentTypes);", "-\t\t\t\tif (this.receiverType instanceof ReferenceBinding) {", "-\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.receiverType;", "+\t\t\t\tif (this.actualReceiverType instanceof ReferenceBinding) {", "+\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.actualReceiverType;", "-\t\t\t\t\tscope.problemReporter().errorNoMethodFor(this, this.receiverType, argumentTypes);", "+\t\t\t\t\tscope.problemReporter().errorNoMethodFor(this, this.actualReceiverType, argumentTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc07679f7052627929814fdfeb813dba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "9528b13b60b5267a27dfdeac3b8ea9a804476535", "commitAfterChange": "ef0d751764a03bfb7b7e9d8838fc454e1e51fa0c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\tthis.receiverType = scope.enclosingSourceType();", "+\t\t\tthis.actualReceiverType = scope.enclosingSourceType();", "-\t\t\tthis.receiverType = this.receiver.resolveType((ClassScope) scope);", "+\t\t\tthis.actualReceiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\tthis.receiverType = this.receiver.resolveType((BlockScope) scope);", "+\t\t\tthis.actualReceiverType = this.receiver.resolveType((BlockScope) scope);", "-\t\tif (this.receiverType == null) {", "+\t\tif (this.actualReceiverType == null) {", "-\t\tthis.qualifyingType = this.receiverType;", "-\t\tthis.superAccess = scope.enclosingSourceType().isCompatibleWith(this.receiverType);", "+\t\tthis.superAccess = scope.enclosingSourceType().isCompatibleWith(this.actualReceiverType);", "-\t\tif (this.receiverType.isBaseType()) {", "-\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.receiverType, argumentTypes, scope.getDeclarationModifiers());", "+\t\tif (this.actualReceiverType.isBaseType()) {", "+\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.actualReceiverType, argumentTypes, scope.getDeclarationModifiers());", "-\t\t\t: scope.getMethod(this.receiverType, this.selector, argumentTypes, this);", "+\t\t\t: scope.getMethod(this.actualReceiverType, this.selector, argumentTypes, this);", "-\t\t\t\tif (this.receiverType instanceof ReferenceBinding) {", "-\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.receiverType;", "+\t\t\t\tif (this.actualReceiverType instanceof ReferenceBinding) {", "+\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.actualReceiverType;", "-\t\t\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.receiverType, argumentTypes, scope.getDeclarationModifiers());", "+\t\t\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.actualReceiverType, argumentTypes, scope.getDeclarationModifiers());"]}], "num": 40007}