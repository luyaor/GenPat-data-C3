{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0de8392d62ea0c311c254f538ad90e2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28509609380a1f46eb40b1e7e8c5f276", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "57f40e6c0dfcf939f53a8ca5092a4521d28a033f", "commitAfterChange": "315acf11b0c9cb31cc22fc01fb1efb136ce92270", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["-\t\t\tsyntheticAccessor = ((SourceTypeBinding)binding.declaringClass).addSyntheticMethod(binding);", "+\t\t\tsyntheticAccessor = ((SourceTypeBinding)binding.declaringClass).addSyntheticMethod(binding, isSuperAccess());", "-\t\tsyntheticAccessor = destinationType.addSyntheticMethod(binding);", "+\t\tsyntheticAccessor = destinationType.addSyntheticMethod(binding, isSuperAccess());", "-\t\t\tsyntheticAccessor = currentCompatibleType.addSyntheticMethod(binding);", "+\t\t\tsyntheticAccessor = currentCompatibleType.addSyntheticMethod(binding, isSuperAccess());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da12e06572a8cefe8516ed79fe57164", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "cb586d1ec75e8da71f4da23a7a5eb911d6960b1c", "commitAfterChange": "543f951d6390669f9bed8c637d9d6aef509af249", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-", "+\t", "-", "-\t\t\t\t((SourceTypeBinding) codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isReadAccess);", "+\t\t\t\t((SourceTypeBinding) codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isReadAccess, isSuperAccess());", "-", "-", "-\t\tthis.syntheticAccessors[isReadAccess ? FieldReference.READ : FieldReference.WRITE] = destinationType.addSyntheticMethod(codegenBinding, isReadAccess);", "+\t\tthis.syntheticAccessors[isReadAccess ? FieldReference.READ : FieldReference.WRITE] = destinationType.addSyntheticMethod(codegenBinding, isReadAccess, isSuperAccess());", "-", "-\t\t\tthis.syntheticAccessors[isReadAccess ? FieldReference.READ : FieldReference.WRITE] = currentCompatibleType.addSyntheticMethod(codegenBinding, isReadAccess);", "+\t\t\tthis.syntheticAccessors[isReadAccess ? FieldReference.READ : FieldReference.WRITE] = currentCompatibleType.addSyntheticMethod(codegenBinding, isReadAccess, isSuperAccess());"]}], "num": 8862}