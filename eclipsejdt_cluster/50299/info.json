{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "742ed60dcada184557afb48d2a1d0245", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25fc5aedcf03cfed546e43c99f541caf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  public void testCompletionBasicMethodDeclaration1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionBasicMethodDeclaration1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionBasicMethodDeclaration1.java\");", "-", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionBasicMethodDeclaration1.java\",", "+\t\t\"public class CompletionBasicMethodDeclaration1 {\\n\"+", "+\t\t\"\tequals\\n\"+", "+\t\t\"}\\n\");", "+\t", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\tint rStart = str.lastIndexOf(\"equals\");", "+\tint rEnd = rStart + \"equals\".length();", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "+\t", "-\t\t\t\"equals[POTENTIAL_METHOD_DECLARATION]{equals, LCompletionBasicMethodDeclaration1;, ()V, equals, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_METHOD_OVERIDE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"equals[POTENTIAL_METHOD_DECLARATION]{equals, LCompletionBasicMethodDeclaration1;, ()V, equals, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_METHOD_OVERIDE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428677a78982a1f2d14f388f7a1bca68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "   public void testCompletionBasicPotentialMethodDeclaration1() throws JavaModelException", "signatureAfterChange": "   public void testCompletionBasicPotentialMethodDeclaration1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionBasicPotentialMethodDeclaration1.java\");", "-", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionBasicPotentialMethodDeclaration1.java\",", "+\t\t\"public class CompletionBasicPotentialMethodDeclaration1 {\\n\"+", "+\t\t\"\tzzpot\\n\"+", "+\t\t\"}\\n\");", "+\t", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\tint rStart = str.lastIndexOf(\"zzpot\");", "+\tint rEnd = rStart + \"zzpot\".length();", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "+\t", "-\t\t\t\"zzpot[POTENTIAL_METHOD_DECLARATION]{zzpot, LCompletionBasicPotentialMethodDeclaration1;, ()V, zzpot, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"zzpot[POTENTIAL_METHOD_DECLARATION]{zzpot, LCompletionBasicPotentialMethodDeclaration1;, ()V, zzpot, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_NON_RESTRICTED) + \"}\","]}], "num": 50299}