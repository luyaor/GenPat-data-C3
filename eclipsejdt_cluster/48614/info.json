{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0764e078e12ec2c8e3505a2c4fae603e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423afee563c9a7b8ac681ccb806da02b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "442502365ca87bb4850988c7cbff70c6c7204090", "commitAfterChange": "e2f40216eda9970777e0041ec245c6f388ea953e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t", "-\tif (false) {", "-\t\tString className = JavaProjectTests.class.getName();", "-\t\tSystem.err.println(\"WARNING: only a subset of \"+className+\" tests will be run...\");", "-\t\tTestSuite suite = new Suite(className);", "-\t\tsuite.addTest(new JavaProjectTests(\"testAddNonJavaResourcePackageFragmentRoot\"));", "-\t\treturn suite;", "-\t}", "-\tTestSuite suite = new Suite(JavaProjectTests.class.getName());", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentRootRawEntry\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentRootRawEntryWhenDuplicate\"));", "-\tsuite.addTest(new JavaProjectTests(\"testProjectGetChildren\"));", "-\tsuite.addTest(new JavaProjectTests(\"testProjectGetPackageFragments\"));", "-\tsuite.addTest(new JavaProjectTests(\"testRootGetPackageFragments\"));", "-\tsuite.addTest(new JavaProjectTests(\"testRootGetPackageFragments2\"));", "-\tsuite.addTest(new JavaProjectTests(\"testRootGetPackageFragments3\"));", "-\tsuite.addTest(new JavaProjectTests(\"testInternalArchiveCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testExternalArchiveCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testProjectCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentHasSubpackages\"));", "-\tsuite.addTest(new JavaProjectTests(\"testIsDefaultPackage\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentRootCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testJarPackageFragmentCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testCompilationUnitCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testClassFileCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testArchiveClassFileCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testBinaryTypeCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testSourceMethodCorrespondingResource\"));", "-\tsuite.addTest(new JavaProjectTests(\"testOutputLocationNotAddedAsPackageFragment\"));", "-\tsuite.addTest(new JavaProjectTests(\"testOutputLocationNestedInRoot\"));", "-\tsuite.addTest(new JavaProjectTests(\"testChangeOutputLocation\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFindElementPackage\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFindElementClassFile\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFindElementCompilationUnit\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFindElementCompilationUnitDefaultPackage\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFindElementInvalidPath\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFindElementPrereqSimpleProject\"));", "-\tsuite.addTest(new JavaProjectTests(\"testProjectClose\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentRenameAndCreate\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFolderWithDotName\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentNonJavaResources\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentPackageInfoClass\"));", "-\tsuite.addTest(new JavaProjectTests(\"testPackageFragmentRootNonJavaResources\"));", "-\tsuite.addTest(new JavaProjectTests(\"testAddNonJavaResourcePackageFragmentRoot\"));", "-\tsuite.addTest(new JavaProjectTests(\"testFindPackageFragmentRootFromClasspathEntry\"));", "-\tsuite.addTest(new JavaProjectTests(\"testGetClasspathOnClosedProject\"));", "-\tsuite.addTest(new JavaProjectTests(\"testGetRequiredProjectNames\"));", "-\tsuite.addTest(new JavaProjectTests(\"testGetNonJavaResources1\"));", "-\tsuite.addTest(new JavaProjectTests(\"testGetNonJavaResources2\"));", "-\tsuite.addTest(new JavaProjectTests(\"testGetNonJavaResources3\"));", "-\tsuite.addTest(new JavaProjectTests(\"testGetNonJavaResources4\"));", "-\tsuite.addTest(new JavaProjectTests(\"testSourceFolderWithJarName\"));", "-\tsuite.addTest(new JavaProjectTests(\"testJdkLevelRoot\"));", "-\t", "-\t// TODO (jerome) reenable when https://bugs.eclipse.org/bugs/show_bug.cgi?id=71460 is fixed ", "-\t//suite.addTest(new JavaProjectTests(\"testExtraJavaLikeExtension1\"));", "-\t//suite.addTest(new JavaProjectTests(\"testExtraJavaLikeExtension2\"));", "-\t", "+\tTestSuite suite = (TestSuite) buildModelTestSuite(JavaProjectTests.class);", "+", "-\tsuite.addTest(new JavaProjectTests(\"testDeletePackageWithAutobuild\"));", "+\tif (suite.testCount() > 1) // if not running only 1 test", "+\t\tsuite.addTest(new JavaProjectTests(\"lastlyTestDeletePackageWithAutobuild\"));", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e556c52b6d7c7810015960afb09a2b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachedJavadocTests.java", "commitBeforeChange": "c0f9341badc01719d6b4f4d3ab99e20a8dc0821a", "commitAfterChange": "e50fba8828c054207eb4f1a56a83880c9a1ebbc8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\t// hack to guarantee the test order", "-\t\tTestSuite suite = new Suite(AttachedJavadocTests.class.getName());", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test001\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test002\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test003\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test004\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test005\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test006\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test007\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test008\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test009\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test010\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test011\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test012\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test013\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test014\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test015\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test016\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test017\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test018\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test019\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test020\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test021\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test022\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test023\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test024\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"test025\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug304394\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug304394a\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug320167\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug329671\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug334652\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug334652_2\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug334652_3\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug334652_4\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug354766\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug354766_2\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug394967\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug394382\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug398272\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug426058\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug403154\"));", "-\t\tsuite.addTest(new AttachedJavadocTests(\"testBug418092\"));", "-\t\treturn suite;", "+\t\treturn buildModelTestSuite(AttachedJavadocTests.class, BYTECODE_DECLARATION_ORDER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e4fd7ffbcc70160d95a0efeac6c8c01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "7dcf6636949ff67f1b9c8a5dc542545b8940bd62", "commitAfterChange": "21007a361f44cd3fd67e6cfde4f3050b918604ad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\tTestSuite suite = new Suite(ClasspathTests.class.getName());", "-\t", "-\tsuite.addTest(new ClasspathTests(\"testClasspathValidation1\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathValidation2\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathValidation3\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathValidation4\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathValidation5\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathValidation6\"));", "-\tsuite.addTest(new ClasspathTests(\"testDefaultClasspathAndOutputLocation\"));", "-\tsuite.addTest(new ClasspathTests(\"testNullClasspath\"));", "-\tsuite.addTest(new ClasspathTests(\"testEmptyClasspath\"));", "-\tsuite.addTest(new ClasspathTests(\"testExportContainer\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathNoChanges\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathCreateLibraryEntry\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathCreateLocalJarLibraryEntry\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathWithDuplicateEntries\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathWithNonExistentSourceEntry\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathWithNonExistentProjectEntry\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathWithNonExistentLibraryEntry\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathDeleteNestedRoot\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathDeleteNestedRootParent\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathMoveNestedRoot\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathMoveNestedRootParent\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathAddRoot\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathExternalize\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathReordering\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathChangeExternalResources\"));", "-\tsuite.addTest(new ClasspathTests(\"testClasspathCrossProject\"));", "-\tsuite.addTest(new ClasspathTests(\"testCycleReport\"));", "-\tsuite.addTest(new ClasspathTests(\"testHasClasspathCycle\"));", "-\tsuite.addTest(new ClasspathTests(\"testCycleDetection\"));", "-\tsuite.addTest(new ClasspathTests(\"testCycleDetectionThroughVariables\"));", "-\tsuite.addTest(new ClasspathTests(\"testCycleDetectionThroughContainers\"));", "-\tsuite.addTest(new ClasspathTests(\"testCycleDetectionThroughContainerVariants\"));", "-\tsuite.addTest(new ClasspathTests(\"testMissingPrereq1\"));", "-\tsuite.addTest(new ClasspathTests(\"testMissingPrereq2\"));", "-\tsuite.addTest(new ClasspathTests(\"testMissingPrereq3\"));", "-\tsuite.addTest(new ClasspathTests(\"testMissingPrereq4\"));", "-\t", "-\treturn suite;", "+", "+\tif (false){", "+\t\tTestSuite suite = new Suite(ClasspathTests.class.getName());", "+\t\tsuite.addTest(new ClasspathTests(\"testDenseCycleDetection\"));", "+\t\treturn suite;", "+\t}", "+\treturn new Suite(ClasspathTests.class);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7621be5223884115c6efb675f35c3d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "f174c5e3ec66ea2a46810b190cc3e9d57c0432d4", "commitAfterChange": "8bbacffbe712e7ac5a5d22a44809b44ff8a5e616", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\t// Tests on type declarations", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocTypeDeclaration\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocTypeDeclarationWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocTypeStringDeclaration\"));", "-\t\t", "-\t\t// Tests on field declarations", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocFieldDeclaration\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocFieldDeclarationWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocFieldStringDeclaration\"));", "-", "-\t\t// Tests on method declarations", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodDeclaration\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodArgDeclaration\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodDeclarationWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodArgDeclarationWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodStringDeclaration\"));", "-", "-\t\t// Tests on type references", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocTypeReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocTypeReferenceWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocTypeStringReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocTypeStringReferenceWithJavadoc\"));", "-", "-\t\t// Tests on field references", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocFieldReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocFieldReferenceWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocFieldStringReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocFieldStringReferenceWithJavadoc\"));", "-", "-\t\t// Tests on method references", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodArgReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodReferenceWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodArgReferenceWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodStringReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocMethodStringReferenceWithJavadoc\"));", "-", "-\t\t// Tests on constructor references", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocConstructorReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocConstructorArgReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocConstructorReferenceWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocConstructorArgReferenceWithJavadoc\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocConstructorStringReference\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testJavadocConstructorStringReferenceWithJavadoc\"));", "-", "-\t\t// Tests on bugs", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47909\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47968type\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47968field\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47968method\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47968constructor\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47209type\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47209field\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47209method\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug47209constructor\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug49994\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug49994field\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug49994method\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug49994constructor\"));", "+\t\tif (DOC_COMMENT_SUPPORT == null) {", "+\t\t\t// Default is to test both Doc Comment Support ON and OFF", "+\t\t\tbuildSuite(suite, JavaCore.ENABLED);", "+\t\t\tbuildSuite(suite, JavaCore.DISABLED);", "+\t\t} else {", "+\t\t\t// Test specified with Doc Comment Support", "+\t\t\tString support = DOC_COMMENT_SUPPORT==null ? JavaCore.DISABLED : (DOC_COMMENT_SUPPORT.equals(JavaCore.DISABLED)?JavaCore.DISABLED:JavaCore.ENABLED);", "+\t\t\tbuildSuite(suite, support);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb5fe28fc3431664224964636b95049", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static Test suite()", "signatureAfterChange": "   public static Test suite()", "diff": ["+", "+public static Test suite() {", "+\treturn new Suite(ResolveTests.class);", "+}", "-", "-public static Test suite() {", "-\tTestSuite suite = new Suite(ResolveTests.class.getName());", "-\t", "-\t// empty selection tests", "-\tsuite.addTest(new ResolveTests(\"testResolveEmptySelection\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveEmptySelection2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveEmptySelectionOnMethod\"));", "-\t", "-\t// selection tests", "-\tsuite.addTest(new ResolveTests(\"testResolveInvalidResolve\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveConstructor\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMethod\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveField\"));", "-\tsuite.addTest(new ResolveTests(\"testResolvePackage\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveClass1\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveClass2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveClass3\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveClass4\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveClass5\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveClass6\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveInterface\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveInClassFileWithSource\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveInClassFileWithoutSource\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveQualifiedType\"));", "-\tsuite.addTest(new ResolveTests(\"testResolvePartiallyQualifiedType\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveUnicode\"));", "-\tsuite.addTest(new ResolveTests(\"testNegativeResolveUnicode\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveArrayLength\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveConstructorDeclaration\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMethodDeclaration\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveFieldDeclaration\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveTypeDeclaration\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMemberTypeDeclaration\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMemberTypeDeclaration2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMethodWithIncorrectParameter\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveExplicitSuperConstructorCall\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveExplicitThisConstructorCall\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMessageSendOnBaseType\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMethodWithInnerTypeInClassFile\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveMethodWithInnerTypeInClassFile2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveTypeInComment\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveImport\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveConstructorCallOfMemberType\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveLocalName1\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveLocalName2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveArgumentName1\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveArgumentName2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveCatchArgumentName1\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveCatchArgumentName2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveAbstractMethod\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveInnerClassAsParamater\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveCatchArgumentType1\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveCatchArgumentType2\"));", "-\tsuite.addTest(new ResolveTests(\"testResolveStaticClassConstructor\"));", "-\treturn suite;", "-}"]}], "num": 48614}