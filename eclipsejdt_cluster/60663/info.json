{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31e38339946fb09f74473126c5b6d37b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d1b947763980aa619f82a254c073eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "0878e1dc107fb190292b2de3d6e4f25e19c0489c", "commitAfterChange": "80b12656ac31b339fd22081301db662b77277ac4", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic boolean visit(InfixExpression node)", "signatureAfterChange": " \tpublic boolean visit(InfixExpression node)", "diff": ["-\t\tint pos= rewriteRequiredNode(node, InfixExpression.LEFT_OPERAND_PROPERTY);", "+\t\tExpression right= node.getRightOperand();", "+\t\tint pos;", "+\t\t", "+\t\tRewriteEvent leftEvent= getEvent(node, InfixExpression.LEFT_OPERAND_PROPERTY);", "+\t\tboolean removeLeft = leftEvent != null && leftEvent.getChangeKind() == RewriteEvent.REMOVED;", "+\t\tRewriteEvent rightEvent= getEvent(node, InfixExpression.RIGHT_OPERAND_PROPERTY);", "+\t\tboolean removeRight = rightEvent != null && rightEvent.getChangeKind() == RewriteEvent.REMOVED;", "+\t\t", "+\t\tif (removeLeft) {", "+\t\t\tExpression left= node.getLeftOperand();", "+\t\t\tint leftStart= getExtendedOffset(left);", "+\t\t\tpos= getExtendedOffset(right);", "+\t\t\tTextEditGroup editGroup= getEditGroup(leftEvent);", "+\t\t\tdoTextRemoveAndVisit(leftStart, pos - leftStart, left, editGroup);", "+\t\t} else {", "+\t\t\tpos = rewriteRequiredNode(node, InfixExpression.LEFT_OPERAND_PROPERTY);", "+\t\t}", "-\t\tif (needsNewOperation) {", "+\t\tif (needsNewOperation && !removeLeft && !removeRight) {", "-\t\tpos= rewriteRequiredNode(node, InfixExpression.RIGHT_OPERAND_PROPERTY);", "+\t\tif (removeRight) {", "+\t\t\tint end;", "+\t\t\tif (removeLeft && node.extendedOperands().size() > 0) {", "+\t\t\t\tend= getExtendedOffset((Expression) node.extendedOperands().get(0));", "+\t\t\t} else {", "+\t\t\t\tend= getExtendedEnd(right);", "+\t\t\t}", "+\t\t\tTextEditGroup editGroup= getEditGroup(rightEvent);", "+\t\t\tdoTextRemoveAndVisit(pos, end - pos, right, editGroup);", "+\t\t\tpos= end;", "+\t\t} else {", "+\t\t\tpos= rewriteRequiredNode(node, InfixExpression.RIGHT_OPERAND_PROPERTY);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0c3fe4d7524264f306cc3f87928bd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "2194ef2aa77022d5263be891a86c1ad29a541528", "commitAfterChange": "5fe0c66cd186fd30bd31d357ed3b901fa1a63fbb", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic boolean visit(InfixExpression node)", "signatureAfterChange": " \tpublic boolean visit(InfixExpression node)", "diff": ["-\t\tint pos= rewriteRequiredNode(node, InfixExpression.LEFT_OPERAND_PROPERTY);", "+\t\tExpression right= node.getRightOperand();", "+\t\tint pos;", "+\t\t", "+\t\tRewriteEvent leftEvent= getEvent(node, InfixExpression.LEFT_OPERAND_PROPERTY);", "+\t\tboolean removeLeft = leftEvent != null && leftEvent.getChangeKind() == RewriteEvent.REMOVED;", "+\t\tRewriteEvent rightEvent= getEvent(node, InfixExpression.RIGHT_OPERAND_PROPERTY);", "+\t\tboolean removeRight = rightEvent != null && rightEvent.getChangeKind() == RewriteEvent.REMOVED;", "+\t\t", "+\t\tif (removeLeft) {", "+\t\t\tExpression left= node.getLeftOperand();", "+\t\t\tint leftStart= getExtendedOffset(left);", "+\t\t\tpos= getExtendedOffset(right);", "+\t\t\tTextEditGroup editGroup= getEditGroup(leftEvent);", "+\t\t\tdoTextRemoveAndVisit(leftStart, pos - leftStart, left, editGroup);", "+\t\t} else {", "+\t\t\tpos = rewriteRequiredNode(node, InfixExpression.LEFT_OPERAND_PROPERTY);", "+\t\t}", "-\t\tif (needsNewOperation) {", "+\t\tif (needsNewOperation && !removeLeft && !removeRight) {", "-\t\tpos= rewriteRequiredNode(node, InfixExpression.RIGHT_OPERAND_PROPERTY);", "+\t\tif (removeRight) {", "+\t\t\tint end;", "+\t\t\tif (removeLeft && node.extendedOperands().size() > 0) {", "+\t\t\t\tend= getExtendedOffset((Expression) node.extendedOperands().get(0));", "+\t\t\t} else {", "+\t\t\t\tend= getExtendedEnd(right);", "+\t\t\t}", "+\t\t\tTextEditGroup editGroup= getEditGroup(rightEvent);", "+\t\t\tdoTextRemoveAndVisit(pos, end - pos, right, editGroup);", "+\t\t\tpos= end;", "+\t\t} else {", "+\t\t\tpos= rewriteRequiredNode(node, InfixExpression.RIGHT_OPERAND_PROPERTY);", "+\t\t}"]}], "num": 60663}