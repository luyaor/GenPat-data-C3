{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d48cba2c7448d17cfa95afb42731de10", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0edf02e79487fa705f067417ac3610b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceImplTests.java", "commitBeforeChange": "23872cdac6fbbd78479a7f309cf6a923f8b64047", "commitAfterChange": "03a2bfe64b432b8bf4c55656a5e03828a64fd6fb", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  static void init(UnconditionalFlowInfo zis, long [] nullBits, int position)", "signatureAfterChange": "  static void init(UnconditionalFlowInfo zis, long [] nullBits, int position)", "diff": ["-//\t\tzis.nullBit5 = nullBits[4] << position;", "-//\t\tzis.nullBit6 = nullBits[5] << position;", "+        // FIXME: while IN,INN are not included in nullBits:", "+        Arrays.fill(zis.extra[UnconditionalFlowInfo.IN],  -1L);", "+        Arrays.fill(zis.extra[UnconditionalFlowInfo.INN],  -1L);", "+\tzis.iNBit = -1L; // FIXME: nullBits[4] << position;", "+\tzis.iNNBit = -1L; // FIXME: nullBits[5] << position;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f25dd0b6da11bbcbd37e9ab1ca70a67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "commitAfterChange": "23872cdac6fbbd78479a7f309cf6a923f8b64047", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public UnconditionalFlowInfo nullInfoLessUnconditionalCopy()", "signatureAfterChange": "  public UnconditionalFlowInfo nullInfoLessUnconditionalCopy()", "diff": ["+\t// no nullness known means: any previous nullness could shine through:", "+\tcopy.iNBit = -1L;", "+\tcopy.iNNBit = -1L;", "+\t\t// no nullness known means: any previous nullness could shine through:", "+\t\tArrays.fill(copy.extra[IN], -1L);", "+\t\tArrays.fill(copy.extra[INN], -1L);"]}], "num": 7732}