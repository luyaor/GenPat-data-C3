{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ced46029e57c4e656e622d51690b46e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35fddebf62399000e6eed475b5af54aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "32aae0cf1b9f94fe336a2b34d2b2b110c5363f4a", "commitAfterChange": "7fa614421be752542e93fc8394ff005421401e06", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " private void remember(IType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private void remember(IType type, ReferenceBinding typeBinding)", "diff": ["-\t\tTypeReference superclass = typeDeclaration.superclass;", "+\t\tTypeReference superclass;", "+\t\tif (typeDeclaration instanceof AnonymousLocalTypeDeclaration) {", "+\t\t\tsuperclass = ((AnonymousLocalTypeDeclaration)typeDeclaration).allocation.type;", "+\t\t} else {", "+\t\t\tsuperclass = typeDeclaration.superclass;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a170819c874081471990ad26938d5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\tint offset = reference.sourceStart;", "+\t\t\tint offset;", "+\t\t\tif (reference instanceof ReferenceExpression) {", "+\t\t\t\toffset = ((ReferenceExpression) reference).nameSourceStart;", "+\t\t\t} else {", "+\t\t\t\toffset = reference.sourceStart;", "+\t\t\t}"]}], "num": 52927}