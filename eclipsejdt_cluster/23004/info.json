{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "726d39bb11dc22ab708bc31f64107c06", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b726f8afc4eac897f7fad63c198ea50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "e6c1fe14dccbeca45706f5722fa9f3aa63ceed3a", "commitAfterChange": "da86ea782d04bb2ec77f1bc7a1c7dfb5852dc748", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": "\r protected void addAffectedChild(JavaElementDelta child)", "diff": ["+\t\t\t\t\t\t\r", "+\t\t\t\t\t\t// update flags if needed\r", "+\t\t\t\t\t\tswitch (((JavaElementDelta) existingChild).fChangeFlags) {\r", "+\t\t\t\t\t\t\tcase F_ADDED_TO_CLASSPATH:\r", "+\t\t\t\t\t\t\tcase F_REMOVED_FROM_CLASSPATH:\r", "+\t\t\t\t\t\t\tcase F_SOURCEATTACHED:\r", "+\t\t\t\t\t\t\tcase F_SOURCEDETACHED:\r", "+\t\t\t\t\t\t\t\t((JavaElementDelta) existingChild).fChangeFlags |= ((JavaElementDelta) child).fChangeFlags;\r", "+\t\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2048d2d254d1438dc45c1506f72e31cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ExternalAnnotationProvider.java", "commitBeforeChange": "b1d9b2131096901775539a68eb3d7a7d50bc45d5", "commitAfterChange": "61e83b56b3e206ca02d211f1803679e0adee4981", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t\t@Override \t\tpublic ITypeAnnotationWalker toWildcardBound()", "signatureAfterChange": "  \t\t@Override \t\tpublic ITypeAnnotationWalker toWildcardBound()", "diff": ["-\t\t\treturn this;", "+\t\t\tswitch (this.source[this.pos]) {", "+\t\t\t\tcase '-': ", "+\t\t\t\tcase '+':", "+\t\t\t\t\treturn new MethodAnnotationWalker(this.source, this.pos+1, this.environment);", "+\t\t\t\tdefault: // includes unbounded '*'", "+\t\t\t\t\treturn ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER;", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cd6e9746ee9169c7577c29a8fa923b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "f0c0b7fa1dec1406e600a295953ddede773bcc39", "commitAfterChange": "cce0aa62595ed29a0680749ad737dfe2377b0e97", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\t\t} else {", "+\t\t\t// if unused variable, some side effects still need to be performed (86487)", "+\t\t\tswitch(this.kind) {", "+\t\t\t\tcase ARRAY :", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase RAW_ITERABLE :", "+\t\t\t\tcase GENERIC_ITERABLE :", "+\t\t\t\t\t// still advance in iterator to prevent infinite loop", "+\t\t\t\t\tcodeStream.load(this.indexVariable);", "+\t\t\t\t\tcodeStream.invokeJavaUtilIteratorNext();", "+\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t\tbreak;", "+\t\t\t}"]}], "num": 23004}