{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc30bb981d8babea8e8e45585f98a0dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b6f1f39399b8ce5a3d173c9218182e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "ef0604aef9ae504bcfc77425341e6baf6891cd21", "commitAfterChange": "b16439228426b14cb0612ff6650bc46c3d9f2a61", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static ProcessorEnvImpl newProcessorEnvironmentForBuild( IFile file, IJavaProject javaProj )", "signatureAfterChange": "      public static ProcessorEnvImpl newProcessorEnvironmentForBuild( IFile file, IJavaProject javaProj )", "diff": ["-    \treturn new ProcessorEnvImpl( null /*ICompilationUnit*/, file, javaProj, Phase.BUILD );", "+    \tchar[] source = null;", "+\t\ttry{", "+\t\t\tsource = getFileContents( file );", "+\t\t}", "+\t\tcatch( Exception e ){", "+\t\t\t// TODO:  propagate these exceptions out of APTDispatch", "+\t\t\te.printStackTrace();", "+\t\t}\t\t", "+\t\tString unitName = file.getProjectRelativePath().toString();", "+\t\tASTNode node = createDietAST( unitName, javaProj, null, source );", "+    \treturn new ProcessorEnvImpl((org.eclipse.jdt.core.dom.CompilationUnit)node, ", "+    \t\t\t  \t\t\t\t\tnull /*ICompilationUnit*/, ", "+    \t\t\t\t\t\t\t    source, file, javaProj, Phase.BUILD );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888ee47ff2f8725975e9ac826a7f88dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static ProcessorEnvImpl newProcessorEnvironmentForBuild( IFile file, IJavaProject javaProj )", "signatureAfterChange": "             public static ProcessorEnvImpl newProcessorEnvironmentForBuild(IFile[] files, IJavaProject javaProj )", "diff": ["-", "-    public static ProcessorEnvImpl newProcessorEnvironmentForBuild( IFile file, IJavaProject javaProj )", "+    ", "+    public static ProcessorEnvImpl newProcessorEnvironmentForBuild(IFile[] files, IJavaProject javaProj )", "-    \tchar[] source = null;", "-\t\ttry{", "-\t\t\tsource = getFileContents( file );", "-\t\t}", "-\t\tcatch( Exception e ){", "-\t\t\t// TODO:  propagate these exceptions out of APTDispatch", "-\t\t\te.printStackTrace();", "-\t\t}\t\t", "-\t\tString unitName = file.getProjectRelativePath().toString();", "-\t\tASTNode node = createDietAST( unitName, javaProj, null, source );", "-    \treturn new ProcessorEnvImpl((org.eclipse.jdt.core.dom.CompilationUnit)node, ", "-    \t\t\t  \t\t\t\t\tnull /*ICompilationUnit*/, ", "-    \t\t\t\t\t\t\t    source, file, javaProj, Phase.BUILD );", "+    \tassert files != null : \"missing files\"; //$NON-NLS-1$    \t", "+    ", "+\t\t// note, we are not reading any files.", "+\t\treturn new ProcessorEnvImpl(files, javaProj, Phase.BUILD);"]}], "num": 17861}