{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abeef06202a8548b521b51537750d462", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1353f28b507e54eacf4105b8fac21af1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic boolean visit(IResourceDelta delta)", "signatureAfterChange": " \t\t@Override \t\tpublic boolean visit(IResourceDelta delta)", "diff": ["+\t\t@Override", "-\t\t\t\t\t\t// Jar file within a deleted project.  In this case getLocation() ", "-\t\t\t\t\t\t// returns null, so we can't get a canonical path.  Bounce every", "-\t\t\t\t\t\t// factory path that contains anything resembling this jar.", "-\t\t\t\t\t\tfor (Entry<String, Set<IJavaProject>> entry : _container2Project.entrySet()) {", "-\t\t\t\t\t\t\tIPath jarPath = new Path(entry.getKey());", "-\t\t\t\t\t\t\tif (relativePath.lastSegment().equals(jarPath.lastSegment())) {", "-\t\t\t\t\t\t\t\taddAffected(entry.getValue());", "+\t\t\t\t\t\tsynchronized (cacheMutex) {", "+\t\t\t\t\t\t\t// Jar file within a deleted project.  In this case getLocation() ", "+\t\t\t\t\t\t\t// returns null, so we can't get a canonical path.  Bounce every", "+\t\t\t\t\t\t\t// factory path that contains anything resembling this jar.", "+\t\t\t\t\t\t\tfor (Entry<String, Set<IJavaProject>> entry : _container2Project.entrySet()) {", "+\t\t\t\t\t\t\t\tIPath jarPath = new Path(entry.getKey());", "+\t\t\t\t\t\t\t\tif (relativePath.lastSegment().equals(jarPath.lastSegment())) {", "+\t\t\t\t\t\t\t\t\taddAffected(entry.getValue());", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tSet<IJavaProject> projects = _container2Project.get(key);", "-\t\t\t\t\t\tif (projects != null) {", "-\t\t\t\t\t\t\taddAffected(projects);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tsynchronized (cacheMutex) {", "+\t\t\t\t\t\t\tSet<IJavaProject> projects = _container2Project.get(key);", "+\t\t\t\t\t\t\tif (projects != null) {", "+\t\t\t\t\t\t\t\taddAffected(projects);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e28d407edacf305cdc37e167e9b16c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "a93dad39ef275bbf6417bb0529204b9a1aeb09b1", "commitAfterChange": "c1a19ba5a2ec5ff7020c56969301f2a78801c990", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic boolean visit(IResourceDelta delta)", "signatureAfterChange": " \t\tpublic boolean visit(IResourceDelta delta)", "diff": ["+\t\t\tif (res == null) {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\tIProject proj = res.getProject();", "-\t\t\t\tconstructAffected();", "-\t\t\t\t_affected.add(JavaCore.create(res.getProject()));", "+\t\t\t\taddAffected(Collections.singleton(JavaCore.create(proj)));", "-\t\t\tIPath resPath = res.getFullPath();", "-\t\t\tString ext = resPath.getFileExtension();", "-\t\t\tif (JAR_EXTENSION.equals(ext)) {", "-\t\t\t\t// Lookup key is the canonical path of the resource", "-\t\t\t\tString key = null;", "-\t\t\t\ttry {", "-\t\t\t\t\tkey = res.getLocation().toFile().getCanonicalPath();", "-\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t// if we can't figure out its canonical path, just ignore it.", "-\t\t\t\t\te.printStackTrace();", "-\t\t\t\t\treturn true;", "+\t\t\tIPath relativePath = res.getFullPath();", "+\t\t\tString ext = relativePath.getFileExtension();", "+\t\t\ttry {", "+\t\t\t\tif (JAR_EXTENSION.equals(ext)) {", "+\t\t\t\t\tIPath absolutePath = res.getLocation();", "+\t\t\t\t\tif (absolutePath == null) {", "+\t\t\t\t\t\t// Jar file within a deleted project.  In this case getLocation() ", "+\t\t\t\t\t\t// returns null, so we can't get a canonical path.  Bounce every", "+\t\t\t\t\t\t// factory path that contains anything resembling this jar.", "+\t\t\t\t\t\tfor (Entry<String, Set<IJavaProject>> entry : _container2Project.entrySet()) {", "+\t\t\t\t\t\t\tIPath jarPath = new Path(entry.getKey());", "+\t\t\t\t\t\t\tif (relativePath.lastSegment().equals(jarPath.lastSegment())) {", "+\t\t\t\t\t\t\t\taddAffected(entry.getValue());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\telse {", "+\t\t\t\t\t\t// Lookup key is the canonical path of the resource", "+\t\t\t\t\t\tString key = null;", "+\t\t\t\t\t\tkey = absolutePath.toFile().getCanonicalPath();", "+\t\t\t\t\t\tSet<IJavaProject> projects = _container2Project.get(key);", "+\t\t\t\t\t\tif (projects != null) {", "+\t\t\t\t\t\t\taddAffected(projects);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\tSet<IJavaProject> projects = _container2Project.get(key);", "-\t\t\t\tif (projects == null) {", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "-\t\t\t\tconstructAffected();", "-\t\t\t\t_affected.addAll(projects);", "+\t\t\t} catch (Exception e) {", "+\t\t\t\tAptPlugin.log(e, ", "+\t\t\t\t\t\"Couldn't determine whether any factory paths were affected by change to resource \" + res.getName()); //$NON-NLS-1$"]}], "num": 32032}