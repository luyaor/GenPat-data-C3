{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f6e587e8368e01a3caea180b7a18761", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad030a535a7e0739ced235e13980e6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\tthis.receiver.generateCode(", "-\t\tcurrentScope,", "-\t\tcodeStream,", "-\t\t!(isStatic = this.codegenBinding.isStatic()));", "+\tFieldBinding codegenBinding = this.binding.original();", "+\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = codegenBinding.isStatic()));", "-\t\t\tcodeStream.getstatic(this.codegenBinding);", "+\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenBinding, this.actualReceiverType, this.receiver.isImplicitThis());", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getstatic, codegenBinding, constantPoolDeclaringClass);", "-\t\t\tcodeStream.getfield(this.codegenBinding);", "+\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenBinding, this.actualReceiverType, this.receiver.isImplicitThis());", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getfield, codegenBinding, constantPoolDeclaringClass);", "-\t\toperandType = this.codegenBinding.type;", "+\t\toperandType = codegenBinding.type;", "-\t\t\tif ((operandType == TypeBinding.LONG)", "-\t\t\t\t|| (operandType == TypeBinding.DOUBLE)) {", "-\t\t\t\tcodeStream.dup2();", "-\t\t\t} else {", "-\t\t\t\tcodeStream.dup();", "-\t\t\t}", "+\t\t\tswitch (operandType.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t", "-\t\t\tif ((operandType == TypeBinding.LONG)", "-\t\t\t\t|| (operandType == TypeBinding.DOUBLE)) {", "-\t\t\t\tcodeStream.dup2_x1();", "-\t\t\t} else {", "-\t\t\t\tcodeStream.dup_x1();", "-\t\t\t}", "+\t\t\tswitch (operandType.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tcodeStream.dup2_x1();", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\tcodeStream.dup_x1();", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t", "-\tfieldStore(codeStream, this.codegenBinding, this.syntheticAccessors == null ? null : this.syntheticAccessors[FieldReference.WRITE], false);", "+\tfieldStore(currentScope, codeStream, codegenBinding, this.syntheticAccessors == null ? null : this.syntheticAccessors[FieldReference.WRITE], this.actualReceiverType, this.receiver.isImplicitThis(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffaf762271de270a7a74a53d89320ca1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void fieldStore(CodeStream codeStream, FieldBinding fieldBinding, MethodBinding syntheticWriteAccessor, boolean valueRequired)", "signatureAfterChange": "  public void fieldStore(Scope currentScope, CodeStream codeStream, FieldBinding fieldBinding, MethodBinding syntheticWriteAccessor, TypeBinding receiverType, boolean isImplicitThisReceiver, boolean valueRequired)", "diff": ["-public void fieldStore(CodeStream codeStream, FieldBinding fieldBinding, MethodBinding syntheticWriteAccessor, boolean valueRequired) {", "+", "+public void fieldStore(Scope currentScope, CodeStream codeStream, FieldBinding fieldBinding, MethodBinding syntheticWriteAccessor, TypeBinding receiverType, boolean isImplicitThisReceiver, boolean valueRequired) {", "-\t\t\tif ((fieldBinding.type == TypeBinding.LONG) || (fieldBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\tcodeStream.dup2();", "-\t\t\t} else {", "-\t\t\t\tcodeStream.dup();", "+\t\t\tswitch (fieldBinding.type.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault : ", "+\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\tbreak;", "-\t\t\tcodeStream.putstatic(fieldBinding);", "+\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, fieldBinding, receiverType, isImplicitThisReceiver);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_putstatic, fieldBinding, constantPoolDeclaringClass);", "-\t\t\tif ((fieldBinding.type == TypeBinding.LONG) || (fieldBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\tcodeStream.dup2_x1();", "-\t\t\t} else {", "-\t\t\t\tcodeStream.dup_x1();", "+\t\t\tswitch (fieldBinding.type.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tcodeStream.dup2_x1();", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault : ", "+\t\t\t\t\tcodeStream.dup_x1();", "+\t\t\t\t\tbreak;", "-\t\t\tcodeStream.putfield(fieldBinding);", "+\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, fieldBinding, receiverType, isImplicitThisReceiver);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_putfield, fieldBinding, constantPoolDeclaringClass);"]}], "num": 65150}