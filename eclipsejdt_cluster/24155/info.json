{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dc8a8bc2a093979f813a9dd3475012e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe715fa51b9b90d8127ef47d685bef6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "  private void initializeBuilder() throws CoreException", "signatureAfterChange": "  private void initializeBuilder() throws CoreException", "diff": ["-\tthis.javaProject = JavaCore.create(currentProject);", "+\tthis.javaProject = (JavaProject) JavaCore.create(currentProject);", "-\tthis.outputFolder = (IContainer) workspaceRoot.findMember(javaProject.getOutputLocation());", "-\tif (this.outputFolder == null) {", "-\t\tthis.outputFolder = workspaceRoot.getFolder(javaProject.getOutputLocation());", "-\t\tcreateFolder(this.outputFolder);", "-\t}", "-\tString projectName = this.currentProject.getName();", "+\tString projectName = currentProject.getName();", "-\tArrayList sourceList = new ArrayList();", "-\tthis.binaryResources = new SimpleLookupTable(3);", "-\tthis.classpath = NameEnvironment.computeLocations(", "-\t\tworkspaceRoot,", "-\t\tjavaProject,", "-\t\toutputFolder.getLocation().toString(),", "-\t\tsourceList,", "-\t\tbinaryResources);", "-\tthis.sourceFolders = new IContainer[sourceList.size()];", "-\tsourceList.toArray(this.sourceFolders);", "+\tthis.binaryLocationsPerProject = new SimpleLookupTable(3);", "+\tthis.nameEnvironment = new NameEnvironment(workspaceRoot, javaProject, binaryLocationsPerProject);", "-\t\tthis.fileFilters = null;", "-\t\tthis.folderFilters = null;", "+\t\tthis.extraResourceFileFilters = null;", "+\t\tthis.extraResourceFolderFilters = null;", "-\t\tfor (int i = 0, length = filters.length; i < length; i++) {", "+\t\tfor (int i = 0, l = filters.length; i < l; i++) {", "-\t\tthis.fileFilters = new char[fileCount][];", "-\t\tthis.folderFilters = new String[folderCount];", "-\t\tfor (int i = 0, length = filters.length; i < length; i++) {", "+\t\tthis.extraResourceFileFilters = new char[fileCount][];", "+\t\tthis.extraResourceFolderFilters = new String[folderCount];", "+\t\tfor (int i = 0, l = filters.length; i < l; i++) {", "-\t\t\t\tfolderFilters[--folderCount] = new String(CharOperation.subarray(f, 0, f.length - 1));", "+\t\t\t\textraResourceFolderFilters[--folderCount] = new String(CharOperation.subarray(f, 0, f.length - 1));", "-\t\t\t\tfileFilters[--fileCount] = f;", "+\t\t\t\textraResourceFileFilters[--fileCount] = f;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e52320c6c6b2e2590f19a1dd2f10792a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "commitAfterChange": "dbd0d1d22c0c3005a7b77030231806c749e2cebd", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tpublic boolean visit(ForStatement node)", "signatureAfterChange": "  \tpublic boolean visit(ForStatement node)", "diff": ["-\t\tfinal Statement action = node.getBody();", "-\t\tif (action != null) {", "-\t\t\tswitch(action.getNodeType()) {", "-\t\t\t\tcase ASTNode.BLOCK :", "-\t\t            formatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase ASTNode.EMPTY_STATEMENT :", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t}", "-\t\t} else {", "-\t\t\tthis.scribe.indent();", "-\t\t\taction.accept(this);", "-\t\t\tthis.scribe.unIndent();", "-\t\t}", "+\t\tformatAction(line, node.getBody());"]}], "num": 24155}