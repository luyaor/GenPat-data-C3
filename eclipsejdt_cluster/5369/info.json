{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67141a335a3702c76ec2c4b1d0e9795c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17dd04e723f32b3ca0a15d10676732b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/nestedhelloworld/NestedHelloWorldAnnotationProcessor.java", "commitBeforeChange": "f2e69392c2b77f78381f44504717309f40a69302", "commitAfterChange": "cfc6d63918bb7d5d29292fed4468743597d36bdc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tpublic String getTypeName()", "signatureAfterChange": " \t \t@SuppressWarnings(\"unused\") \tpublic void process()", "diff": ["-\t\tpublic String getPackageName() { return \"nested.hello.world.generatedclass.pkg\"; } //$NON-NLS-1$", "-\t\tpublic String getTypeName() { return \"NestedHelloWorldAnnotationGeneratedClass\"; } //$NON-NLS-1$", "+\t", "+\t@SuppressWarnings(\"unused\")", "+\tpublic void process()", "+\t{", "+\t\tFiler f = _env.getFiler();", "+\t\tAnnotationTypeDeclaration annoDecl = (AnnotationTypeDeclaration) _env.getTypeDeclaration(NestedHelloWorldAnnotation.class.getName());", "+\t\tCollection<Declaration> annotatedDecls = _env.getDeclarationsAnnotatedWith(annoDecl);", "+\t\ttry {", "+\t\t\tfor (Declaration annotatedDecl : annotatedDecls) {", "+\t\t\t\tString typeName = TYPENAME;", "+\t\t\t\tPrintWriter writer = f.createSourceFile(", "+\t\t\t\t\t\tPACKAGENAME + \".\" + typeName);", "+\t\t\t\twriter.print(getCode());", "+\t\t\t\twriter.close();", "+\t\t\t}", "+\t\t\treportSuccess(this.getClass());", "+\t\t}", "+\t\tcatch (NullPointerException npe) {", "+\t\t\treportError(this.getClass(), \"Could not read annotation in order to generate text file\");", "+\t\t}", "+\t\tcatch (IOException ioe) {", "+\t\t\treportError(this.getClass(), \"Could not generate text file due to IOException\");", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ffd77e13005ed2a13a24f19a4cfd9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/helloworld/HelloWorldAnnotationProcessor.java", "commitBeforeChange": "f2e69392c2b77f78381f44504717309f40a69302", "commitAfterChange": "cfc6d63918bb7d5d29292fed4468743597d36bdc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void process()", "signatureAfterChange": "  \tpublic void process()", "diff": ["-\t\ttry", "-\t\t{", "-\t\t\tFiler f = _env.getFiler();", "-\t\t\tPrintWriter pw = f", "-\t\t\t\t.createSourceFile( getPackageName() + \".\" + getTypeName() ); //$NON-NLS-1$", "-\t\t\tpw.print( getCode() );", "-\t\t\tpw.close();", "+\t\tFiler f = _env.getFiler();", "+\t\tAnnotationTypeDeclaration annoDecl = (AnnotationTypeDeclaration) _env.getTypeDeclaration(HelloWorldAnnotation.class.getName());", "+\t\tCollection<Declaration> annotatedDecls = _env.getDeclarationsAnnotatedWith(annoDecl);", "+\t\ttry {", "+\t\t\tfor (Declaration annotatedDecl : annotatedDecls) {", "+\t\t\t\tString typeName = getTypeName(annotatedDecl);", "+\t\t\t\tPrintWriter writer = f.createSourceFile(", "+\t\t\t\t\t\tPACKAGENAME + \".\" + typeName);", "+\t\t\t\twriter.print(getCode(typeName));", "+\t\t\t\twriter.close();", "+\t\t\t}", "+\t\t\treportSuccess(this.getClass());", "-\t\tcatch( IOException ioe )", "-\t\t{", "-\t\t\tioe.printStackTrace();", "+\t\tcatch (NullPointerException npe) {", "+\t\t\treportError(this.getClass(), \"Could not read annotation in order to generate text file\");", "+\t\t}", "+\t\tcatch (IOException ioe) {", "+\t\t\treportError(this.getClass(), \"Could not generate text file due to IOException\");"]}], "num": 5369}