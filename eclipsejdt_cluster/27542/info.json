{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46306c95d722b379c534f6ab26995794", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08cb84e755b332f5cccfba2d0733ff42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1036, "methodNumberAfterChange": 1036, "signatureBeforeChange": " public void test1012()", "signatureAfterChange": " public void test1012()", "diff": ["-\t\t\t\"\t\treturn null;\\n\" +", "+\t\t\t\"\t\treturn zork;\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 2)\\r\\n\" +", "-\t\t\"\tvoid foo(L l, C<X> c) {\\r\\n\" +", "-\t\t\"\t         ^\\n\" +", "-\t\t\"L is a raw type. References to generic type L<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar1(l, c);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar1(L, C) of the generic method bar1(L<T>, C<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar1(l, c);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Object to X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\"\tX x = bar1(l, c);\\r\\n\" +", "-\t\t\"\t           ^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<T>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tL<X> lx = bar2(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar2(L, C) of the generic method bar2(L<T>, C<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. WARNING in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tL<X> lx = bar2(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tL<X> lx = bar2(l, c);\\r\\n\" +", "-\t\t\"\t               ^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<T>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"8. WARNING in X.java (at line 5)\\r\\n\" +", "-\t\t\"\tC<X> cx = bar3(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar3(L, C) of the generic method bar3(L<T>, C<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"9. WARNING in X.java (at line 5)\\r\\n\" +", "-\t\t\"\tC<X> cx = bar3(l, c);\\r\\n\" +", "-\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type C needs unchecked conversion to conform to C<X>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"10. WARNING in X.java (at line 5)\\r\\n\" +", "-\t\t\"\tC<X> cx = bar3(l, c);\\r\\n\" +", "-\t\t\"\t               ^\\n\" +", "-\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<T>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tvoid foo(L l, C<X> c) {\\n\" + ", "+\t\t\"\t         ^\\n\" + ", "+\t\t\"L is a raw type. References to generic type L<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar1(l, c);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar1(L, C<X>) of the generic method bar1(L<T>, C<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar1(l, c);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Object to X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tX x = bar1(l, c);\\n\" + ", "+\t\t\"\t           ^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tL<X> lx = bar2(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar2(L, C<X>) of the generic method bar2(L<T>, C<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tL<X> lx = bar2(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tL<X> lx = bar2(l, c);\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tC<X> cx = bar3(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar3(L, C<X>) of the generic method bar3(L<T>, C<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"9. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tC<X> cx = bar3(l, c);\\n\" + ", "+\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type C needs unchecked conversion to conform to C<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"10. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tC<X> cx = bar3(l, c);\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Type safety: The expression of type L needs unchecked conversion to conform to L<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"11. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\treturn zork;\\n\" + ", "+\t\t\"\t       ^^^^\\n\" + ", "+\t\t\"zork cannot be resolved\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30754244c9f5f98feb8c84479834f5ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void testStringPatternAnyStrings01() throws CoreException", "signatureAfterChange": " \tpublic void testStringAnyStrings01() throws CoreException", "diff": ["-\t// Search reference to a generic type", "-\tpublic void testStringPatternAnyStrings01() throws CoreException {", "+\t// String pattern with \tany strings characters ('*' or '?')", "+\tpublic void testStringAnyStrings01() throws CoreException {", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_obj [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_exc [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_wld [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_thr [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_run [Generic] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_obj [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_exc [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_wld [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_thr [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.gen_run [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_obj [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_exc [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_wld [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_thr [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_run [Generic] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_obj [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_exc [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_wld [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_thr [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R1.java g1.t.s.ref.R1.qgen_run [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_obj [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_exc [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_wld [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_thr [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_run [MemberGeneric] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_obj [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_exc [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_wld [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_thr [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_run [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_obj [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_exc [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_wld [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_thr [MemberGeneric] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_run [MemberGeneric] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_obj [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_exc [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_wld [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_thr [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_run [MemberGeneric] COMPATIBLE_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_obj [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_exc [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_wld [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_thr [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_run [Generic] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_obj [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_exc [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_wld [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_thr [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_run [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_obj [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_exc [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_wld [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_thr [Generic] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_run [Generic] EXACT_MATCH\",", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_obj [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_exc [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_wld [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_thr [Generic] COMPATIBLE_ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_run [Generic] COMPATIBLE_ERASURE_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e0b2ea2c49dc6bef75e79f51d37ceeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "271111afe31b0fe18fd45b364ad4d26653cb3b0c", "commitAfterChange": "865a2729990a2ae736e7ffd8626234177de33631", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test022()", "signatureAfterChange": " public void test022()", "diff": ["-\t\t\"  // Stack: 4, Locals: 6\\n\" + ", "+\t\t\"  // Stack: 4, Locals: 5\\n\" + ", "-\t\t\"    38  dup\\n\" + ", "-\t\t\"    39  astore 5\\n\" + ", "-\t\t\"    41  invokevirtual #32 <Method java/util/ArrayList.iterator()Ljava/util/Iterator;>\\n\" + ", "-\t\t\"    44  astore 4\\n\" + ", "-\t\t\"    46  goto 67\\n\" + ", "-\t\t\"    49  aload 4\\n\" + ", "-\t\t\"    51  invokeinterface [nargs : 1] #38 <Interface method java/util/Iterator.next()Ljava/lang/Object;>\\n\" + ", "-\t\t\"    56  checkcast #20 java/lang/Integer\\n\" + ", "-\t\t\"    59  astore_3\\n\" + ", "-\t\t\"    60  iload_2\\n\" + ", "-\t\t\"    61  aload_3\\n\" + ", "-\t\t\"    62  invokevirtual #42 <Method java/lang/Integer.intValue()I>\\n\" + ", "-\t\t\"    65  iadd\\n\" + ", "-\t\t\"    66  istore_2\\n\" + ", "-\t\t\"    67  aload 4\\n\" + ", "-\t\t\"    69  invokeinterface [nargs : 1] #46 <Interface method java/util/Iterator.hasNext()Z>\\n\" + ", "-\t\t\"    74  ifne 49\\n\" + ", "-\t\t\"    77  getstatic #52 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"    80  iload_2\\n\" + ", "-\t\t\"    81  invokevirtual #57 <Method java/io/PrintStream.println(I)V>\\n\" + ", "-\t\t\"    84  return\\n\" + ", "+\t\t\"    38  invokevirtual #32 <Method java/util/ArrayList.iterator()Ljava/util/Iterator;>\\n\" + ", "+\t\t\"    41  astore 4\\n\" + ", "+\t\t\"    43  goto 64\\n\" + ", "+\t\t\"    46  aload 4\\n\" + ", "+\t\t\"    48  invokeinterface [nargs : 1] #38 <Interface method java/util/Iterator.next()Ljava/lang/Object;>\\n\" + ", "+\t\t\"    53  checkcast #20 java/lang/Integer\\n\" + ", "+\t\t\"    56  astore_3\\n\" + ", "+\t\t\"    57  iload_2\\n\" + ", "+\t\t\"    58  aload_3\\n\" + ", "+\t\t\"    59  invokevirtual #42 <Method java/lang/Integer.intValue()I>\\n\" + ", "+\t\t\"    62  iadd\\n\" + ", "+\t\t\"    63  istore_2\\n\" + ", "+\t\t\"    64  aload 4\\n\" + ", "+\t\t\"    66  invokeinterface [nargs : 1] #46 <Interface method java/util/Iterator.hasNext()Z>\\n\" + ", "+\t\t\"    71  ifne 46\\n\" + ", "+\t\t\"    74  getstatic #52 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "+\t\t\"    77  iload_2\\n\" + ", "+\t\t\"    78  invokevirtual #57 <Method java/io/PrintStream.println(I)V>\\n\" + ", "+\t\t\"    81  return\\n\" + ", "-\t\t\"        [pc: 60, line: 11]\\n\" + ", "-\t\t\"        [pc: 67, line: 10]\\n\" + ", "-\t\t\"        [pc: 77, line: 13]\\n\" + ", "-\t\t\"        [pc: 84, line: 14]\\n\" + ", "+\t\t\"        [pc: 57, line: 11]\\n\" + ", "+\t\t\"        [pc: 64, line: 10]\\n\" + ", "+\t\t\"        [pc: 74, line: 13]\\n\" + ", "+\t\t\"        [pc: 81, line: 14]\\n\" + ", "-\t\t\"        [pc: 0, pc: 85] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\"        [pc: 8, pc: 85] local: arrayList index: 1 type: Ljava/util/ArrayList;\\n\" + ", "+\t\t\"        [pc: 0, pc: 82] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "+\t\t\"        [pc: 8, pc: 82] local: arrayList index: 1 type: Ljava/util/ArrayList;\\n\" + ", "-\t\t\"        [pc: 37, pc: 85] local: sum index: 2 type: I\\n\" + ", "-\t\t\"        [pc: 60, pc: 77] local: e index: 3 type: Ljava/lang/Integer;\\n\" + ", "+\t\t\"        [pc: 37, pc: 82] local: sum index: 2 type: I\\n\" + ", "+\t\t\"        [pc: 57, pc: 74] local: e index: 3 type: Ljava/lang/Integer;\\n\" + ", "-\t\t\"        [pc: 8, pc: 85] local: arrayList index: 1 type: Ljava/util/ArrayList<Ljava/lang/Integer;>;\\n\";", "+\t\t\"        [pc: 8, pc: 82] local: arrayList index: 1 type: Ljava/util/ArrayList<Ljava/lang/Integer;>;\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "674386bdde0661412ac8ba4d9cbadc70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "271111afe31b0fe18fd45b364ad4d26653cb3b0c", "commitAfterChange": "865a2729990a2ae736e7ffd8626234177de33631", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void test024()", "signatureAfterChange": " public void test024()", "diff": ["-\t\t\"    57  dup\\n\" + ", "-\t\t\"    58  astore 5\\n\" + ", "-\t\t\"    60  invokeinterface [nargs : 1] #33 <Interface method java/util/List.iterator()Ljava/util/Iterator;>\\n\" + ", "-\t\t\"    65  astore 4\\n\" + ", "-\t\t\"    67  goto 85\\n\" + ", "-\t\t\"    70  aload 4\\n\" + ", "-\t\t\"    72  invokeinterface [nargs : 1] #39 <Interface method java/util/Iterator.next()Ljava/lang/Object;>\\n\" + ", "-\t\t\"    77  astore_3\\n\" + ", "-\t\t\"    78  getstatic #45 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"    81  aload_3\\n\" + ", "-\t\t\"    82  invokevirtual #51 <Method java/io/PrintStream.print(Ljava/lang/Object;)V>\\n\" + ", "-\t\t\"    85  aload 4\\n\" + ", "-\t\t\"    87  invokeinterface [nargs : 1] #55 <Interface method java/util/Iterator.hasNext()Z>\\n\" + ", "-\t\t\"    92  ifne 70\\n\" + ", "-\t\t\"    95  return\\n\" + ", "+\t\t\"    57  invokeinterface [nargs : 1] #33 <Interface method java/util/List.iterator()Ljava/util/Iterator;>\\n\" + ", "+\t\t\"    62  astore 4\\n\" + ", "+\t\t\"    64  goto 82\\n\" + ", "+\t\t\"    67  aload 4\\n\" + ", "+\t\t\"    69  invokeinterface [nargs : 1] #39 <Interface method java/util/Iterator.next()Ljava/lang/Object;>\\n\" + ", "+\t\t\"    74  astore_3\\n\" + ", "+\t\t\"    75  getstatic #45 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "+\t\t\"    78  aload_3\\n\" + ", "+\t\t\"    79  invokevirtual #51 <Method java/io/PrintStream.print(Ljava/lang/Object;)V>\\n\" + ", "+\t\t\"    82  aload 4\\n\" + ", "+\t\t\"    84  invokeinterface [nargs : 1] #55 <Interface method java/util/Iterator.hasNext()Z>\\n\" + ", "+\t\t\"    89  ifne 67\\n\" + ", "+\t\t\"    92  return\\n\" + ", "-\t\t\"        [pc: 78, line: 12]\\n\" + ", "-\t\t\"        [pc: 85, line: 11]\\n\" + ", "-\t\t\"        [pc: 95, line: 14]\\n\" + ", "+\t\t\"        [pc: 75, line: 12]\\n\" + ", "+\t\t\"        [pc: 82, line: 11]\\n\" + ", "+\t\t\"        [pc: 92, line: 14]\\n\" + ", "-\t\t\"        [pc: 0, pc: 96] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\"        [pc: 10, pc: 96] local: tab index: 1 type: [Ljava/lang/String;\\n\" + ", "-\t\t\"        [pc: 18, pc: 96] local: list index: 2 type: Ljava/util/List;\\n\" + ", "+\t\t\"        [pc: 0, pc: 93] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "+\t\t\"        [pc: 10, pc: 93] local: tab index: 1 type: [Ljava/lang/String;\\n\" + ", "+\t\t\"        [pc: 18, pc: 93] local: list index: 2 type: Ljava/util/List;\\n\" + ", "-\t\t\"        [pc: 78, pc: 95] local: arg index: 3 type: Ljava/lang/Object;\\n\";", "+\t\t\"        [pc: 75, pc: 92] local: arg index: 3 type: Ljava/lang/Object;\\n\";"]}], "num": 27542}