{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec97264da09046182dd63875bfc0c689", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75ddbbfc086dbbcd4fe967a1b03d79d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/scripts/GenerateBuildScript.java", "commitBeforeChange": "a9669ba54738c50871a6fabb5798db0e4e95ee47", "commitAfterChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\t\t \tpublic static void main(String[] args)", "signatureAfterChange": " \t\t\t \tpublic static void main(String[] args)", "diff": ["-\t\t\t\tcollectAllPropertiesFiles(sourceDir, collector);", "+\t\t\t\tcollectAllFiles(sourceDir, collector, new FileFilter() {", "+\t\t\t\t\tpublic boolean accept(File pathname) {", "+\t\t\t\t\t\tString fileName = pathname.getAbsolutePath();", "+\t\t\t\t\t\treturn pathname.isDirectory() || fileName.endsWith(\".rsc\") || fileName.endsWith(\".properties\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t\tcollector = new ArrayList();", "+\t\t\t\tcollectAllFiles(sourceDir, collector, new FileFilter() {", "+\t\t\t\t\tpublic boolean accept(File pathname) {", "+\t\t\t\t\t\tString fileName = pathname.getAbsolutePath();", "+\t\t\t\t\t\treturn pathname.isDirectory() || fileName.endsWith(\".class\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t\tdumpAllClassFiles(writer, sourceDir, collector);\t\t\t\t", "+\t\t\t\t", "+//\t\t\t\twriter.write(SOURCE_FILES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5cc8ab46ac6dd71051271d2208cc7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/scripts/GenerateBuildScript.java", "commitBeforeChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "commitAfterChange": "8cff4fdeee4851126cd3daf356d388ac41128644", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\t\t \tpublic static void main(String[] args)", "signatureAfterChange": " \t\t\t \tpublic static void main(String[] args)", "diff": ["-\t\tif (args.length != 2) {", "+\t\tif (args.length != 5) {", "+\t\t\tSystem.out.println(\"Usage: script_name directory gcj_exe_name dest_dir source/bin\"); //$NON-NLS-1$", "-\t\t\t\tdumpAllProperties(writer, sourceDir, collector);", "-\t\t\t\tcollector = new ArrayList();", "-\t\t\t\tcollectAllFiles(sourceDir, collector, new FileFilter() {", "-\t\t\t\t\tpublic boolean accept(File pathname) {", "-\t\t\t\t\t\tString fileName = pathname.getAbsolutePath();", "-\t\t\t\t\t\treturn pathname.isDirectory() || fileName.endsWith(\".class\"); //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t});", "-\t\t\t\tdumpAllClassFiles(writer, sourceDir, collector);\t\t\t\t", "-\t\t\t\t", "-//\t\t\t\twriter.write(SOURCE_FILES);", "+\t\t\t\tdumpAllProperties(writer, sourceDir, collector, args[2], args[3]);", "+\t\t\t\tif (\"source\".equals(args[4])) { //$NON-NLS-1$", "+\t\t\t\t\twriter.write(MessageFormat.format(SOURCE_FILES, new Object[] {args[2], args[3]}));", "+\t\t\t\t} else {", "+\t\t\t\t\tcollector = new ArrayList();", "+\t\t\t\t\tcollectAllFiles(sourceDir, collector, new FileFilter() {", "+\t\t\t\t\t\tpublic boolean accept(File pathname) {", "+\t\t\t\t\t\t\tString fileName = pathname.getAbsolutePath();", "+\t\t\t\t\t\t\treturn pathname.isDirectory() || fileName.endsWith(\".class\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t});", "+\t\t\t\t\tdumpAllClassFiles(writer, sourceDir, collector, args[2], args[3]);\t\t\t\t", "+\t\t\t\t}", "-\t\t\twriter.write(FOOTER);", "+\t\t\twriter.write(MessageFormat.format(FOOTER, new Object[] {args[2], args[3]}));"]}], "num": 56706}