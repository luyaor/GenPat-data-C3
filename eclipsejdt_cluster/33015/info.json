{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e1f9b17d47639e98030434bb57acce4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5658614aa80192f4dbd8140a83f0e4c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 792, "methodNumberAfterChange": 792, "signatureBeforeChange": " public void test0785()", "signatureAfterChange": " public void test0785()", "diff": ["-\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (HashSet<capture-of ?>, ArrayList<capture-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" + ", "+\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (HashSet<capture#1-of ?>, ArrayList<capture#2-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76deffe06efe23f08e955e49e25f8c3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 793, "methodNumberAfterChange": 793, "signatureBeforeChange": " public void test787()", "signatureAfterChange": " public void test787()", "diff": ["-\t\t\"1. ERROR in X.java (at line 8)\\r\\n\" + ", "-\t\t\"\tgetLonger(list, set);\\r\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tgetLonger(list, set);\\n\" + ", "-\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X<U> is not applicable for the arguments (AbstractCollection<? extends Object>&Cloneable&Serializable, AbstractCollection<? extends Object>&Cloneable&Serializable) since the type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends U>>\\n\" + ", "+\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X<U> is not applicable for the arguments (HashSet<capture-of ?>, ArrayList<capture-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends U>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbf4a937e0ffd5a1e1a800b8830d8ada", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 794, "methodNumberAfterChange": 794, "signatureBeforeChange": " public void test0787()", "signatureAfterChange": " public void test0787()", "diff": ["-\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X<U> is not applicable for the arguments (HashSet<capture-of ?>, ArrayList<capture-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends U>>\\n\" + ", "+\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X<U> is not applicable for the arguments (HashSet<capture#1-of ?>, ArrayList<capture#2-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends U>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d531cdd30dbefa61de3f41b7c69c7046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 797, "methodNumberAfterChange": 797, "signatureBeforeChange": " public void test0790()", "signatureAfterChange": " public void test0790()", "diff": ["-\t\t\"Bound mismatch: The generic method isGreater(T, T) of type X is not applicable for the arguments (Comparable<capture-of ? extends Number>, Comparable<capture-of ? extends Number>). The inferred type Comparable<? extends Number> is not a valid substitute for the bounded parameter <T extends Comparable<T>>\\n\" + ", "+\t\t\"Bound mismatch: The generic method isGreater(T, T) of type X is not applicable for the arguments (Comparable<capture#1-of ? extends Number>, Comparable<capture#2-of ? extends Number>). The inferred type Comparable<? extends Number> is not a valid substitute for the bounded parameter <T extends Comparable<T>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8bbdb5514dc5d8cae93d3c3f0f33eec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 791, "methodNumberAfterChange": 791, "signatureBeforeChange": " public void test785()", "signatureAfterChange": " public void test785()", "diff": ["-\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (AbstractCollection<? extends Object>&Cloneable&Serializable, AbstractCollection<? extends Object>&Cloneable&Serializable) since the type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" + ", "+\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (HashSet<capture-of ?>, ArrayList<capture-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" + "]}], "num": 33015}