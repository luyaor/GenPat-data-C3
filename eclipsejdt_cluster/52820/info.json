{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11856ce4fd84417044019610ae68ffba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b266f6706e2b4214d2d012a73672a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public LocalVariablePattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tLocalVariable localVariable, \tint matchMode,  \tboolean isCaseSensitive)", "signatureAfterChange": "  public LocalVariablePattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tLocalVariable localVariable, \tint matchRule)", "diff": ["-\tint matchMode, ", "-\tboolean isCaseSensitive) {", "+\tint matchRule) {", "-\tsuper(LOCAL_VAR_PATTERN, findDeclarations, readAccess, writeAccess, localVariable.getElementName().toCharArray(), matchMode, isCaseSensitive);", "+\tsuper(LOCAL_VAR_PATTERN, findDeclarations, readAccess, writeAccess, localVariable.getElementName().toCharArray(), matchRule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2723f4d36a852a1112876db481283f21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tint matchMode,  \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName)", "signatureAfterChange": "  public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tint matchRule)", "diff": ["-\tint matchMode, ", "-\tboolean isCaseSensitive,", "-\tchar[] typeSimpleName) {", "+\tchar[] typeSimpleName,", "+\tint matchRule) {", "-\tsuper(FIELD_PATTERN, findDeclarations, readAccess, writeAccess, name, matchMode, isCaseSensitive);", "+\tsuper(FIELD_PATTERN, findDeclarations, readAccess, writeAccess, name, matchRule);", "+\tboolean isCaseSensitive = isCaseSensitive();"]}], "num": 52820}