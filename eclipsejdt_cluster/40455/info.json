{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5e866f86313d28b9593b92366891f5f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1eff54100eb4c9c1c4e5b4a4f27c8b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "42a83e286ceeeb29630f8c589f53ac9c4faaa3fa", "commitAfterChange": "daca3c57fe8ee65cb418bcec5cbbb6e712e7dc06", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompilerOptions(Map settings)", "signatureAfterChange": " \tpublic CompilerOptions(Map settings)", "diff": ["-\t\t\t// Report non-externalized string literals", "+\t\t\t// Report local var hiding another variable", "+\t\t\tif(optionID.equals(OPTION_ReportLocalVariableHiding)){", "+\t\t\t\tif (optionValue.equals(ERROR)) {", "+\t\t\t\t\tthis.errorThreshold |= LocalVariableHiding;", "+\t\t\t\t\tthis.warningThreshold &= ~LocalVariableHiding;", "+\t\t\t\t} else if (optionValue.equals(WARNING)) {", "+\t\t\t\t\tthis.errorThreshold &= ~LocalVariableHiding;", "+\t\t\t\t\tthis.warningThreshold |= LocalVariableHiding;", "+\t\t\t\t} else if (optionValue.equals(IGNORE)) {", "+\t\t\t\t\tthis.errorThreshold &= ~LocalVariableHiding;", "+\t\t\t\t\tthis.warningThreshold &= ~LocalVariableHiding;", "+\t\t\t\t}", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\t// Report field hiding another variable", "+\t\t\tif(optionID.equals(OPTION_ReportFieldHiding)){", "+\t\t\t\tif (optionValue.equals(ERROR)) {", "+\t\t\t\t\tthis.errorThreshold |= FieldHiding;", "+\t\t\t\t\tthis.warningThreshold &= ~FieldHiding;", "+\t\t\t\t} else if (optionValue.equals(WARNING)) {", "+\t\t\t\t\tthis.errorThreshold &= ~FieldHiding;", "+\t\t\t\t\tthis.warningThreshold |= FieldHiding;", "+\t\t\t\t} else if (optionValue.equals(IGNORE)) {", "+\t\t\t\t\tthis.errorThreshold &= ~FieldHiding;", "+\t\t\t\t\tthis.warningThreshold &= ~FieldHiding;", "+\t\t\t\t}", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\t// Report constructor parameter hiding another variable", "+\t\t\tif(optionID.equals(OPTION_ReportConstructorParameterHidingField)){", "+\t\t\t\tif (optionValue.equals(ERROR)) {", "+\t\t\t\t\tthis.errorThreshold |= ConstructorParameterHidingField;", "+\t\t\t\t\tthis.warningThreshold &= ~ConstructorParameterHidingField;", "+\t\t\t\t} else if (optionValue.equals(WARNING)) {", "+\t\t\t\t\tthis.errorThreshold &= ~ConstructorParameterHidingField;", "+\t\t\t\t\tthis.warningThreshold |= ConstructorParameterHidingField;", "+\t\t\t\t} else if (optionValue.equals(IGNORE)) {", "+\t\t\t\t\tthis.errorThreshold &= ~ConstructorParameterHidingField;", "+\t\t\t\t\tthis.warningThreshold &= ~ConstructorParameterHidingField;", "+\t\t\t\t}", "+\t\t\t\tcontinue;", "+\t\t\t}\t\t\t// Report non-externalized string literals"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3dc123dabac7b047ef5fc54b64de92d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompilerOptions(Map settings)", "signatureAfterChange": " \tpublic CompilerOptions(Map settings)", "diff": ["-\t\t\t\tif (optionValue.equals(VERSION_1_1)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_1;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_2)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_2;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_3;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_4;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level != 0) this.targetJDK = level;", "-\t\t\t\tif (optionValue.equals(VERSION_1_1)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_1;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_2)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_2;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_3;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_4;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level != 0) this.complianceLevel = level;", "-\t\t\t\tif (optionValue.equals(VERSION_1_1)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = false;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_2)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = false;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = true;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = true;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level >= JDK1_3) this.isPrivateConstructorAccessChangingVisibility = true;", "-\t\t\t\tif (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.sourceLevel = JDK1_3;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.sourceLevel = JDK1_4;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level != 0) this.sourceLevel = level;"]}], "num": 40455}