{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f537ccef629ad90cf5223d959c1cd62f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb9925193b888913e56dd735511706a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "a4c0884f4909a7148eef43d80a79301d90c42921", "commitAfterChange": "04ac73525421db342cbea7b61068c93b1fac3e50", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static File createAndAddAnnotationJar( IJavaProject project ) \t\tthrows IOException, JavaModelException", "signatureAfterChange": " \tpublic static File createAndAddAnnotationJar( IJavaProject project ) \t\tthrows IOException, JavaModelException", "diff": ["-\t\tTestUtil.createAnnotationJar( classesJarPath );", "+\t\tFileFilter filter = new PackageFileFilter(", "+\t\t\t\tANNOTATIONS_PKG, getPluginClassesDir());", "+\t\tMap<File, FileFilter> files = Collections.singletonMap(", "+\t\t\t\tnew File(getPluginClassesDir()), filter);", "+\t\tzip( classesJarPath, files );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f76a2c0bd3efd371a36112d4ca8c974f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5d2cd7f1076b45eee90e6733e80765abd1df3d6a", "commitAfterChange": "14e86a8141996732826e41cf3c8dd392bb1fd5ba", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t\t\t\t\t// this.processPostChange = false;", "-\t\t\t\t\t\tcheckProjectsBeingAddedOrRemoved(delta);", "-\t\t\t\t\t\t", "-\t\t\t\t\t\t// update the classpath related markers", "-\t\t\t\t\t\tupdateClasspathMarkers();", "-\t", "-\t\t\t\t\t\t// the following will close project if affected by the property file change", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t// don't fire classpath change deltas right away, but batch them", "-\t\t\t\t\t\t\tstopDeltas();", "-\t\t\t\t\t\t\tperformPreBuildCheck(delta, null); ", "-\t\t\t\t\t\t} finally {", "-\t\t\t\t\t\t\tstartDeltas();", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tMap preferredClasspaths = new HashMap(5);", "+\t\t\t\t\t\tMap preferredOutputs = new HashMap(5);", "+\t\t\t\t\t\tperformPreBuildCheck(delta, preferredClasspaths, preferredOutputs); ", "+\t\t\t\t\t\tupdateClasspathMarkers(preferredClasspaths, preferredOutputs);", "+\t\t\t\t\t\tJavaBuilder.startingBuilding(preferredClasspaths, preferredOutputs);", "-\t\t\t\t\t// only fire already computed deltas (resource ones will be processed in post change only)", "-\t\t\t\t\tfire(null, ElementChangedEvent.PRE_AUTO_BUILD);", "+\t\t\t\t\t// does not fire any deltas", "-\t\t\t\t\tJavaBuilder.finishedBuilding(event);", "+\t\t\t\t\tJavaBuilder.finishedBuilding();", "-\t\t\t\t\t\t\tif (this.refreshedElements != null) {", "-\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(null);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tIJavaElementDelta translatedDelta = processResourceDelta(delta);", "-\t\t\t\t\t\t\tif (translatedDelta != null) { ", "-\t\t\t\t\t\t\t\tregisterJavaModelDelta(translatedDelta);", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tstopDeltas();", "+\t\t\t\t\t\t\t\tcheckProjectsBeingAddedOrRemoved(delta);", "+\t\t\t\t\t\t\t\tif (this.refreshedElements != null) {", "+\t\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(null);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tIJavaElementDelta translatedDelta = processResourceDelta(delta);", "+\t\t\t\t\t\t\t\tif (translatedDelta != null) { ", "+\t\t\t\t\t\t\t\t\tregisterJavaModelDelta(translatedDelta);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} finally {", "+\t\t\t\t\t\t\t\tstartDeltas();"]}], "num": 72874}