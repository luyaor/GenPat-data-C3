{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6583e49536b3e2cad68b6f4d59c8f107", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b13c614d75c45bbdb8aca66005ac472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "diff": ["+\t\tboolean addStackMaps = (this.produceAttributes & ClassFileConstants.ATTR_STACK_MAP) != 0;", "-\t\t\texceptionHandlersCount += codeStream.exceptionLabels[i].count / 2; ", "+\t\t\texceptionHandlersCount += codeStream.exceptionLabels[i].count / 2;", "-\t\t// there is no exception table, so we need to offset by 2 the current offset and move ", "+\t\t// there is no exception table, so we need to offset by 2 the current offset and move", "-\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidExceptionAttribute, new String(codeStream.methodDeclaration.selector)), ", "+\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidExceptionAttribute, new String(codeStream.methodDeclaration.selector)),", "-\t\t\t\t}\t\t\t\t", "+\t\t\t\t}", "+\t\t\t\t\tif (addStackMaps) {", "+\t\t\t\t\t\tStackMapFrameCodeStream stackMapFrameCodeStream = (StackMapFrameCodeStream) this.codeStream;", "+\t\t\t\t\t\tstackMapFrameCodeStream.addFramePosition(handlerPC);", "+//\t\t\t\t\t\tstackMapFrameCodeStream.addExceptionMarker(handlerPC, exceptionLabel.exceptionType);", "+\t\t\t\t\t}", "-\t\t\t/* Create and add the line number attribute (used for debugging) ", "+\t\t\t/* Create and add the line number attribute (used for debugging)", "+\t\t\t\t\tif (localVariable.declaration == null) continue;", "-\t\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidAttribute, new String(localVariable.name)), ", "+\t\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidAttribute, new String(localVariable.name)),", "-\t\t", "+", "-\t\t\tfinal Set framesPositions = ((StackMapFrameCodeStream) codeStream).framePositions;", "-\t\t\tfinal int framesPositionsSize = framesPositions.size();", "-\t\t\tint numberOfFrames = framesPositionsSize - 1; // -1 because last return doesn't count", "-\t\t\tif (numberOfFrames > 0) {", "-\t\t\t\tArrayList framePositions = new ArrayList(framesPositionsSize);", "-\t\t\t\tframePositions.addAll(framesPositions);", "-\t\t\t\tCollections.sort(framePositions);", "-\t\t\t\t// add the stack map table attribute", "-\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "-\t\t\t\t\tresizeContents(8);", "-\t\t\t\t}", "-\t\t\t\tint stackMapTableAttributeNameIndex =", "-\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.StackMapTableName);", "-\t\t\t\tthis.contents[localContentsOffset++] = (byte) (stackMapTableAttributeNameIndex >> 8);", "-\t\t\t\tthis.contents[localContentsOffset++] = (byte) stackMapTableAttributeNameIndex;", "-\t\t\t\t", "-\t\t\t\tint stackMapTableAttributeLengthOffset = localContentsOffset;", "-\t\t\t\t// generate the attribute", "-\t\t\t\tlocalContentsOffset += 4;", "-\t\t\t\tnumberOfFrames = 0;", "-\t\t\t\tint numberOfFramesOffset = localContentsOffset;", "-\t\t\t\tlocalContentsOffset += 2;", "-\t\t\t\t// generate all frames", "-\t\t\t\tArrayList frames = ((StackMapFrameCodeStream) codeStream).frames;", "-\t\t\t\tStackMapFrame currentFrame = (StackMapFrame) frames.get(0);", "-\t\t\t\tStackMapFrame prevFrame = null;", "-\t\t\t\tint framesSize = frames.size();", "-\t\t\t\tint frameIndex = 0;", "-\t\t\t\tfor (int j = 0; j < framesPositionsSize && ((Integer) framePositions.get(j)).intValue() < code_length; j++) {", "-\t\t\t\t\t// select next frame", "-\t\t\t\t\tprevFrame = currentFrame;", "-\t\t\t\t\tcurrentFrame = null;", "-\t\t\t\t\tfor (; frameIndex < framesSize; frameIndex++) {", "-\t\t\t\t\t\tcurrentFrame = (StackMapFrame) frames.get(frameIndex);", "-\t\t\t\t\t\tif (currentFrame.pc == ((Integer) framePositions.get(j)).intValue()) {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\tStackMapFrameCodeStream stackMapFrameCodeStream = (StackMapFrameCodeStream) this.codeStream;", "+\t\t\tstackMapFrameCodeStream.removeFramePosition(code_length);", "+\t\t\tif (stackMapFrameCodeStream.hasFramePositions()) {", "+\t\t\t\tArrayList frames = new ArrayList();", "+\t\t\t\ttraverse(null, max_locals, this.contents, codeAttributeOffset + 14, code_length, frames, true);", "+\t\t\t\tint numberOfFrames = frames.size();", "+\t\t\t\tif (numberOfFrames > 1) {", "+\t\t\t\t\tint stackMapTableAttributeOffset = localContentsOffset;", "+\t\t\t\t\t// add the stack map table attribute", "+\t\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\t\t\tresizeContents(8);", "-\t\t\t\t\tif (currentFrame == null) break;", "-\t\t\t\t\tnumberOfFrames++;", "-\t\t\t\t\tint offsetDelta = currentFrame.getOffsetDelta(prevFrame);", "-\t\t\t\t\tswitch (currentFrame.getFrameType(prevFrame)) {", "-\t\t\t\t\t\tcase StackMapFrame.APPEND_FRAME :", "-\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tint numberOfDifferentLocals = currentFrame.numberOfDifferentLocals(prevFrame);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 + numberOfDifferentLocals);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tint index = currentFrame.getIndexOfDifferentLocals(numberOfDifferentLocals);", "-\t\t\t\t\t\t\tint numberOfLocals = currentFrame.getNumberOfLocals();", "-\t\t\t\t\t\t\tfor (int i = index; i < currentFrame.locals.length && numberOfDifferentLocals > 0; i++) {", "+\t\t\t\t\tint stackMapTableAttributeNameIndex =", "+\t\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.StackMapTableName);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (stackMapTableAttributeNameIndex >> 8);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) stackMapTableAttributeNameIndex;", "+", "+\t\t\t\t\tint stackMapTableAttributeLengthOffset = localContentsOffset;", "+\t\t\t\t\t// generate the attribute", "+\t\t\t\t\tlocalContentsOffset += 4;", "+\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t}", "+\t\t\t\t\tint numberOfFramesOffset = localContentsOffset;", "+\t\t\t\t\tlocalContentsOffset += 2;", "+\t\t\t\t\tif (localContentsOffset + 2 >= this.contents.length) {", "+\t\t\t\t\t\tresizeContents(2);", "+\t\t\t\t\t}", "+\t\t\t\t\tStackMapFrame currentFrame = (StackMapFrame) frames.get(0);", "+\t\t\t\t\tStackMapFrame prevFrame = null;", "+\t\t\t\t\tfor (int j = 1; j < numberOfFrames; j++) {", "+\t\t\t\t\t\t// select next frame", "+\t\t\t\t\t\tprevFrame = currentFrame;", "+\t\t\t\t\t\tcurrentFrame = (StackMapFrame) frames.get(j);", "+\t\t\t\t\t\t// generate current frame", "+\t\t\t\t\t\t// need to find differences between the current frame and the previous frame", "+\t\t\t\t\t\tint offsetDelta = currentFrame.getOffsetDelta(prevFrame);", "+\t\t\t\t\t\tswitch (currentFrame.getFrameType(prevFrame)) {", "+\t\t\t\t\t\t\tcase StackMapFrame.APPEND_FRAME :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tint numberOfDifferentLocals = currentFrame.numberOfDifferentLocals(prevFrame);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 + numberOfDifferentLocals);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tint index = currentFrame.getIndexOfDifferentLocals(numberOfDifferentLocals);", "+\t\t\t\t\t\t\t\tint numberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\t\tfor (int i = index; i < currentFrame.locals.length && numberOfDifferentLocals > 0; i++) {", "+\t\t\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\t\tresizeContents(6);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tnumberOfDifferentLocals--;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 1 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(1);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME_EXTENDED :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 251;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.CHOP_FRAME :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tnumberOfDifferentLocals = -currentFrame.numberOfDifferentLocals(prevFrame);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 - numberOfDifferentLocals);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta + 64);", "+\t\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\t\tbyte tag = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS_EXTENDED :", "-\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "-\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 247;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "-\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\t\tbyte tag = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (tag) {", "-\t\t\t\t\t\t\t\t\tnumberOfDifferentLocals--;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME :", "-\t\t\t\t\t\t\tif (localContentsOffset + 1 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(1);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME_EXTENDED :", "-\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 251;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.CHOP_FRAME :", "-\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tnumberOfDifferentLocals = -currentFrame.numberOfDifferentLocals(prevFrame);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 - numberOfDifferentLocals);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS :", "-\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(4);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta + 64);", "-\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "-\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "-\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t\t// FULL_FRAME", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 5 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(5);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 255;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tint numberOfLocalOffset = localContentsOffset;", "+\t\t\t\t\t\t\t\tlocalContentsOffset += 2; // leave two spots for number of locals", "+\t\t\t\t\t\t\t\tint numberOfLocalEntries = 0;", "+\t\t\t\t\t\t\t\tnumberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\t\tint numberOfEntries = 0;", "+\t\t\t\t\t\t\t\tint localsLength = currentFrame.locals == null ? 0 : currentFrame.locals.length;", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < localsLength && numberOfLocalEntries < numberOfLocals; i++) {", "+\t\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS_EXTENDED :", "-\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(6);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 247;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "-\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "-\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\t\t// FULL_FRAME", "-\t\t\t\t\t\t\tif (localContentsOffset + 5 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(5);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 255;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tint numberOfLocalOffset = localContentsOffset;", "-\t\t\t\t\t\t\tlocalContentsOffset += 2; // leave two spots for number of locals", "-\t\t\t\t\t\t\tint numberOfLocalEntries = 0;", "-\t\t\t\t\t\t\tnumberOfLocals = currentFrame.getNumberOfLocals();", "-\t\t\t\t\t\t\tint numberOfEntries = 0;", "-\t\t\t\t\t\t\tint localsLength = currentFrame.locals == null ? 0 : currentFrame.locals.length;", "-\t\t\t\t\t\t\tfor (int i = 0; i < localsLength && numberOfLocalEntries < numberOfLocals; i++) {", "-\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "-\t\t\t\t\t\t\t\tif (info == null) {", "-\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "-\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "-\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tnumberOfLocalEntries++;", "-\t\t\t\t\t\t\t\t\tnumberOfLocalEntries++;", "+\t\t\t\t\t\t\t\t\tnumberOfEntries++;", "-\t\t\t\t\t\t\t\tnumberOfEntries++;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(4);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset++] = (byte) (numberOfEntries >> 8);", "-\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset] = (byte) numberOfEntries;", "-\t\t\t\t\t\t\tint numberOfStackItems = currentFrame.numberOfStackItems;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (numberOfStackItems >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) numberOfStackItems;", "-\t\t\t\t\t\t\tfor (int i = 0; i < numberOfStackItems; i++) {", "-\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(4);", "-\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[i];", "-\t\t\t\t\t\t\t\tif (info == null) {", "-\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "-\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "-\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset] = (byte) numberOfEntries;", "+\t\t\t\t\t\t\t\tint numberOfStackItems = currentFrame.numberOfStackItems;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (numberOfStackItems >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) numberOfStackItems;", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < numberOfStackItems; i++) {", "+\t\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[i];", "+\t\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+", "+\t\t\t\t\tnumberOfFrames--;", "+\t\t\t\t\tif (numberOfFrames != 0) {", "+\t\t\t\t\t\tthis.contents[numberOfFramesOffset++] = (byte) (numberOfFrames >> 8);", "+\t\t\t\t\t\tthis.contents[numberOfFramesOffset] = (byte) numberOfFrames;", "+", "+\t\t\t\t\t\tint attributeLength = localContentsOffset - stackMapTableAttributeLengthOffset - 4;", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 24);", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 16);", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 8);", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset] = (byte) attributeLength;", "+\t\t\t\t\t\tattributeNumber++;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tlocalContentsOffset = stackMapTableAttributeOffset;", "-\t\t\t\t", "-\t\t\t\tthis.contents[numberOfFramesOffset++] = (byte) (numberOfFrames >> 8);", "-\t\t\t\tthis.contents[numberOfFramesOffset] = (byte) numberOfFrames;", "-", "-\t\t\t\tint attributeLength = localContentsOffset - stackMapTableAttributeLengthOffset - 4;", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 24);", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 16);", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 8);", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset] = (byte) attributeLength;", "-\t\t\t\tattributeNumber++;", "-\t\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "712bc97b51fd1c4889ccb6f5938e26ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void completeCodeAttributeForSyntheticMethod( \t\tboolean hasExceptionHandlers, \t\tSyntheticMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "signatureAfterChange": " \tpublic void completeCodeAttributeForSyntheticMethod( \t\tboolean hasExceptionHandlers, \t\tSyntheticMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "diff": ["-\t\t", "+", "+\t\tboolean addStackMaps = (this.produceAttributes & ClassFileConstants.ATTR_STACK_MAP) != 0;", "-\t\t\t\texceptionHandlersCount += codeStream.exceptionLabels[i].count / 2; ", "+\t\t\t\texceptionHandlersCount += codeStream.exceptionLabels[i].count / 2;", "-\t\t\t// there is no exception table, so we need to offset by 2 the current offset and move ", "+\t\t\t// there is no exception table, so we need to offset by 2 the current offset and move", "-\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidExceptionAttribute, new String(binding.selector), ", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidExceptionAttribute, new String(binding.selector),", "+\t\t\t\t\t\tif (addStackMaps) {", "+\t\t\t\t\t\t\tStackMapFrameCodeStream stackMapFrameCodeStream = (StackMapFrameCodeStream) this.codeStream;", "+\t\t\t\t\t\t\tstackMapFrameCodeStream.addFramePosition(handlerPC);", "+//\t\t\t\t\t\t\tstackMapFrameCodeStream.addExceptionMarker(handlerPC, exceptionLabel.exceptionType);", "+\t\t\t\t\t\t}", "-\t\t\t// there is no exception table, so we need to offset by 2 the current offset and move ", "+\t\t\t// there is no exception table, so we need to offset by 2 the current offset and move", "-\t\t\t}\t\t", "+\t\t\t}", "-\t\t\t", "+", "+\t\t\t\tif (localVariable.declaration == null) continue;", "-\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidAttribute, new String(localVariable.name)), ", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidAttribute, new String(localVariable.name)),", "-\t\t", "-\t\tif ((this.produceAttributes & ClassFileConstants.ATTR_STACK_MAP) != 0) {", "-\t\t\tfinal Set framesPositions = ((StackMapFrameCodeStream) codeStream).framePositions;", "-\t\t\tfinal int framesPositionsSize = framesPositions.size();", "-\t\t\tint numberOfFrames = framesPositionsSize - 1; // -1 because last return doesn't count", "-\t\t\tif (numberOfFrames > 0) {", "-\t\t\t\tArrayList framePositions = new ArrayList(framesPositionsSize);", "-\t\t\t\tframePositions.addAll(framesPositions);", "-\t\t\t\tCollections.sort(framePositions);", "-\t\t\t\t// add the stack map table attribute", "-\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "-\t\t\t\t\tresizeContents(8);", "-\t\t\t\t}", "-\t\t\t\tint stackMapTableAttributeNameIndex =", "-\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.StackMapTableName);", "-\t\t\t\tthis.contents[localContentsOffset++] = (byte) (stackMapTableAttributeNameIndex >> 8);", "-\t\t\t\tthis.contents[localContentsOffset++] = (byte) stackMapTableAttributeNameIndex;", "-\t\t\t\t", "-\t\t\t\tint stackMapTableAttributeLengthOffset = localContentsOffset;", "-\t\t\t\t// generate the attribute", "-\t\t\t\tlocalContentsOffset += 4;", "-\t\t\t\tnumberOfFrames = 0;", "-\t\t\t\tint numberOfFramesOffset = localContentsOffset;", "-\t\t\t\tlocalContentsOffset += 2;", "-\t\t\t\t// generate all frames", "-\t\t\t\tArrayList frames = ((StackMapFrameCodeStream) codeStream).frames;", "-\t\t\t\tStackMapFrame currentFrame = (StackMapFrame) frames.get(0);", "-\t\t\t\tStackMapFrame prevFrame = null;", "-\t\t\t\tint framesSize = frames.size();", "-\t\t\t\tint frameIndex = 0;", "-\t\t\t\tfor (int j = 0; j < framesPositionsSize && ((Integer) framePositions.get(j)).intValue() < code_length; j++) {", "-\t\t\t\t\t// select next frame", "-\t\t\t\t\tprevFrame = currentFrame;", "-\t\t\t\t\tcurrentFrame = null;", "-\t\t\t\t\tfor (; frameIndex < framesSize; frameIndex++) {", "-\t\t\t\t\t\tcurrentFrame = (StackMapFrame) frames.get(frameIndex);", "-\t\t\t\t\t\tif (currentFrame.pc == ((Integer) framePositions.get(j)).intValue()) {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+", "+\t\tif (addStackMaps) {", "+\t\t\tStackMapFrameCodeStream stackMapFrameCodeStream = (StackMapFrameCodeStream) this.codeStream;", "+\t\t\tstackMapFrameCodeStream.removeFramePosition(code_length);", "+\t\t\tif (stackMapFrameCodeStream.hasFramePositions()) {", "+\t\t\t\tArrayList frames = new ArrayList();", "+\t\t\t\ttraverse(binding, max_locals, this.contents, codeAttributeOffset + 14, code_length, frames, false);", "+\t\t\t\tint numberOfFrames = frames.size();", "+\t\t\t\tif (numberOfFrames > 1) {", "+\t\t\t\t\tint stackMapTableAttributeOffset = localContentsOffset;", "+\t\t\t\t\t// add the stack map table attribute", "+\t\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\t\t\tresizeContents(8);", "-\t\t\t\t\tif (currentFrame == null) break;", "-\t\t\t\t\tnumberOfFrames++;", "-\t\t\t\t\tint offsetDelta = currentFrame.getOffsetDelta(prevFrame);", "-\t\t\t\t\tswitch (currentFrame.getFrameType(prevFrame)) {", "-\t\t\t\t\t\tcase StackMapFrame.APPEND_FRAME :", "-\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tint numberOfDifferentLocals = currentFrame.numberOfDifferentLocals(prevFrame);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 + numberOfDifferentLocals);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tint index = currentFrame.getIndexOfDifferentLocals(numberOfDifferentLocals);", "-\t\t\t\t\t\t\tint numberOfLocals = currentFrame.getNumberOfLocals();", "-\t\t\t\t\t\t\tfor (int i = index; i < currentFrame.locals.length && numberOfDifferentLocals > 0; i++) {", "+\t\t\t\t\tint stackMapTableAttributeNameIndex =", "+\t\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.StackMapTableName);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (stackMapTableAttributeNameIndex >> 8);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) stackMapTableAttributeNameIndex;", "+", "+\t\t\t\t\tint stackMapTableAttributeLengthOffset = localContentsOffset;", "+\t\t\t\t\t// generate the attribute", "+\t\t\t\t\tlocalContentsOffset += 4;", "+\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t}", "+\t\t\t\t\tint numberOfFramesOffset = localContentsOffset;", "+\t\t\t\t\tlocalContentsOffset += 2;", "+\t\t\t\t\tif (localContentsOffset + 2 >= this.contents.length) {", "+\t\t\t\t\t\tresizeContents(2);", "+\t\t\t\t\t}", "+\t\t\t\t\tStackMapFrame currentFrame = (StackMapFrame) frames.get(0);", "+\t\t\t\t\tStackMapFrame prevFrame = null;", "+\t\t\t\t\tfor (int j = 1; j < numberOfFrames; j++) {", "+\t\t\t\t\t\t// select next frame", "+\t\t\t\t\t\tprevFrame = currentFrame;", "+\t\t\t\t\t\tcurrentFrame = (StackMapFrame) frames.get(j);", "+\t\t\t\t\t\t// generate current frame", "+\t\t\t\t\t\t// need to find differences between the current frame and the previous frame", "+\t\t\t\t\t\tint offsetDelta = currentFrame.getOffsetDelta(prevFrame);", "+\t\t\t\t\t\tswitch (currentFrame.getFrameType(prevFrame)) {", "+\t\t\t\t\t\t\tcase StackMapFrame.APPEND_FRAME :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tint numberOfDifferentLocals = currentFrame.numberOfDifferentLocals(prevFrame);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 + numberOfDifferentLocals);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tint index = currentFrame.getIndexOfDifferentLocals(numberOfDifferentLocals);", "+\t\t\t\t\t\t\t\tint numberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\t\tfor (int i = index; i < currentFrame.locals.length && numberOfDifferentLocals > 0; i++) {", "+\t\t\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\t\tresizeContents(6);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tnumberOfDifferentLocals--;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 1 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(1);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME_EXTENDED :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 251;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.CHOP_FRAME :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tnumberOfDifferentLocals = -currentFrame.numberOfDifferentLocals(prevFrame);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 - numberOfDifferentLocals);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS :", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(4);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta + 64);", "+\t\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "+\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "+\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\t\tbyte tag = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS_EXTENDED :", "-\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "-\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 247;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "-\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "+\t\t\t\t\t\t\t\t\t\t\tbyte tag = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = tag;", "+\t\t\t\t\t\t\t\t\t\t\tswitch (tag) {", "-\t\t\t\t\t\t\t\t\tnumberOfDifferentLocals--;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME :", "-\t\t\t\t\t\t\tif (localContentsOffset + 1 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(1);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_FRAME_EXTENDED :", "-\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 251;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.CHOP_FRAME :", "-\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tnumberOfDifferentLocals = -currentFrame.numberOfDifferentLocals(prevFrame);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (251 - numberOfDifferentLocals);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS :", "-\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(4);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta + 64);", "-\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "-\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "-\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t\t// FULL_FRAME", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 5 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(5);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 255;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "+\t\t\t\t\t\t\t\tint numberOfLocalOffset = localContentsOffset;", "+\t\t\t\t\t\t\t\tlocalContentsOffset += 2; // leave two spots for number of locals", "+\t\t\t\t\t\t\t\tint numberOfLocalEntries = 0;", "+\t\t\t\t\t\t\t\tnumberOfLocals = currentFrame.getNumberOfLocals();", "+\t\t\t\t\t\t\t\tint numberOfEntries = 0;", "+\t\t\t\t\t\t\t\tint localsLength = currentFrame.locals == null ? 0 : currentFrame.locals.length;", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < localsLength && numberOfLocalEntries < numberOfLocals; i++) {", "+\t\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "+\t\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase StackMapFrame.SAME_LOCALS_1_STACK_ITEMS_EXTENDED :", "-\t\t\t\t\t\t\tif (localContentsOffset + 6 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(6);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 247;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tif (currentFrame.stackItems[0] == null) {", "-\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tswitch(currentFrame.stackItems[0].id()) {", "-\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[0];", "-\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\t\t// FULL_FRAME", "-\t\t\t\t\t\t\tif (localContentsOffset + 5 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(5);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) 255;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offsetDelta >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offsetDelta;", "-\t\t\t\t\t\t\tint numberOfLocalOffset = localContentsOffset;", "-\t\t\t\t\t\t\tlocalContentsOffset += 2; // leave two spots for number of locals", "-\t\t\t\t\t\t\tint numberOfLocalEntries = 0;", "-\t\t\t\t\t\t\tnumberOfLocals = currentFrame.getNumberOfLocals();", "-\t\t\t\t\t\t\tint numberOfEntries = 0;", "-\t\t\t\t\t\t\tint localsLength = currentFrame.locals == null ? 0 : currentFrame.locals.length;", "-\t\t\t\t\t\t\tfor (int i = 0; i < localsLength && numberOfLocalEntries < numberOfLocals; i++) {", "-\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\t\tresizeContents(3);", "-\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.locals[i];", "-\t\t\t\t\t\t\t\tif (info == null) {", "-\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "-\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "-\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tnumberOfLocalEntries++;", "-\t\t\t\t\t\t\t\t\tnumberOfLocalEntries++;", "+\t\t\t\t\t\t\t\t\tnumberOfEntries++;", "-\t\t\t\t\t\t\t\tnumberOfEntries++;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "-\t\t\t\t\t\t\t\tresizeContents(4);", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset++] = (byte) (numberOfEntries >> 8);", "-\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset] = (byte) numberOfEntries;", "-\t\t\t\t\t\t\tint numberOfStackItems = currentFrame.numberOfStackItems;", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (numberOfStackItems >> 8);", "-\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) numberOfStackItems;", "-\t\t\t\t\t\t\tfor (int i = 0; i < numberOfStackItems; i++) {", "-\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "-\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\tresizeContents(4);", "-\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[i];", "-\t\t\t\t\t\t\t\tif (info == null) {", "-\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "-\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "-\t\t\t\t\t\t\t\t\t\tcase T_byte :", "-\t\t\t\t\t\t\t\t\t\tcase T_char :", "-\t\t\t\t\t\t\t\t\t\tcase T_int :", "-\t\t\t\t\t\t\t\t\t\tcase T_short :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_float :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tcase T_null :", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "-\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "-\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[numberOfLocalOffset] = (byte) numberOfEntries;", "+\t\t\t\t\t\t\t\tint numberOfStackItems = currentFrame.numberOfStackItems;", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (numberOfStackItems >> 8);", "+\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) numberOfStackItems;", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < numberOfStackItems; i++) {", "+\t\t\t\t\t\t\t\t\tif (localContentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\t\t\t\t\t\tresizeContents(3);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tVerificationTypeInfo info = currentFrame.stackItems[i];", "+\t\t\t\t\t\t\t\t\tif (info == null) {", "+\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_TOP;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tswitch(info.id()) {", "+\t\t\t\t\t\t\t\t\t\t\tcase T_boolean :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_byte :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_char :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_int :", "+\t\t\t\t\t\t\t\t\t\t\tcase T_short :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_INTEGER;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_float :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_FLOAT;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_LONG;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_DOUBLE;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tcase T_null :", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) VerificationTypeInfo.ITEM_NULL;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) info.tag;", "+\t\t\t\t\t\t\t\t\t\t\t\tswitch (info.tag) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_UNINITIALIZED :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint offset = info.offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (offset >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) offset;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcase VerificationTypeInfo.ITEM_OBJECT :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tint indexForType = constantPool.literalIndexForType(info.constantPoolName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (indexForType >> 8);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) indexForType;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+", "+\t\t\t\t\tnumberOfFrames--;", "+\t\t\t\t\tif (numberOfFrames != 0) {", "+\t\t\t\t\t\tthis.contents[numberOfFramesOffset++] = (byte) (numberOfFrames >> 8);", "+\t\t\t\t\t\tthis.contents[numberOfFramesOffset] = (byte) numberOfFrames;", "+", "+\t\t\t\t\t\tint attributeLength = localContentsOffset - stackMapTableAttributeLengthOffset - 4;", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 24);", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 16);", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 8);", "+\t\t\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset] = (byte) attributeLength;", "+\t\t\t\t\t\tattributeNumber++;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tlocalContentsOffset = stackMapTableAttributeOffset;", "-\t\t\t\t", "-\t\t\t\tthis.contents[numberOfFramesOffset++] = (byte) (numberOfFrames >> 8);", "-\t\t\t\tthis.contents[numberOfFramesOffset] = (byte) numberOfFrames;", "-", "-\t\t\t\tint attributeLength = localContentsOffset - stackMapTableAttributeLengthOffset - 4;", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 24);", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 16);", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset++] = (byte) (attributeLength >> 8);", "-\t\t\t\tthis.contents[stackMapTableAttributeLengthOffset] = (byte) attributeLength;", "-\t\t\t\tattributeNumber++;", "-\t\t", "+"]}], "num": 67121}