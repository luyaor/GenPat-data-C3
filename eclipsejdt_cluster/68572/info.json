{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e054e0fb30ebcfcbc7d1413df7cce356", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8a08c68a949045fa5b9ebafc5bbb6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "1a9cac53d4ac29d3f80117ac2f0972315a7c6461", "commitAfterChange": "16bbff04917b9cd9bd7cceaf4adfc1563daef0bc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static void resolvePolyExpressionArguments(Invocation invocation, MethodBinding methodBinding, TypeBinding[] argumentTypes)", "signatureAfterChange": " \tpublic static void resolvePolyExpressionArguments(Invocation invocation, MethodBinding methodBinding, TypeBinding[] argumentTypes)", "diff": ["-\t\t\t\t\tif (!infCtx.hasFinished)", "+\t\t\t\t\tif (infCtx.stepCompleted < InferenceContext18.TYPE_INFERRED)", "-\t\t\t\t\t\tif (innerContext != null && !innerContext.hasFinished) {\t\t\t\t\t\t\t", "+\t\t\t\t\t\tif (innerContext != null && innerContext.stepCompleted < InferenceContext18.TYPE_INFERRED) {\t\t\t\t\t\t\t", "-\t\t\t\t\t// poly expressions in an invocation context need to be resolved now:", "-\t\t\t\t\tupdatedArgumentType = argument.checkAgainstFinalTargetType(parameterType);", "+\t\t\t\t\t// poly expressions in an invocation context may need to be resolved now:", "+\t\t\t\t\tif (infCtx != null && infCtx.stepCompleted == InferenceContext18.BINDINGS_UPDATED)", "+\t\t\t\t\t\tupdatedArgumentType = argument.resolvedType; // in this case argument was already resolved via InferenceContext18.acceptPendingPolyArguments()", "+\t\t\t\t\telse", "+\t\t\t\t\t\tupdatedArgumentType = argument.checkAgainstFinalTargetType(parameterType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dfcc577552e374729b18cda21c8d642", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tprotected MethodBinding inferInvocationType(InvocationSite invocationSite, MethodBinding applicable, TypeBinding[] argumentTypes)", "signatureAfterChange": " \tprotected MethodBinding inferInvocationType(InvocationSite invocationSite, MethodBinding applicable, TypeBinding[] argumentTypes)", "diff": ["-\t\tif (applicable instanceof ParameterizedGenericMethodBinding && invocationSite instanceof Invocation) {", "+\t\tif (invocationSite instanceof Invocation) {", "-\t\t\tParameterizedGenericMethodBinding parameterizedMethod = (ParameterizedGenericMethodBinding) applicable;", "-\t\t\tInferenceContext18 infCtx18 = invocation.getInferenceContext(parameterizedMethod);", "-\t\t\tif (infCtx18 != null && infCtx18.stepCompleted < InferenceContext18.TYPE_INFERRED) {", "-\t\t\t\treturn infCtx18.inferInvocationType(invocation, argumentTypes, parameterizedMethod);", "+\t\t\tif (applicable instanceof ParameterizedGenericMethodBinding) {", "+\t\t\t\tParameterizedGenericMethodBinding parameterizedMethod = (ParameterizedGenericMethodBinding) applicable;", "+\t\t\t\tInferenceContext18 infCtx18 = invocation.getInferenceContext(parameterizedMethod);", "+\t\t\t\tif (infCtx18 != null && infCtx18.stepCompleted < InferenceContext18.TYPE_INFERRED) {", "+\t\t\t\t\treturn infCtx18.inferInvocationType(invocation, argumentTypes, parameterizedMethod);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tASTNode.resolvePolyExpressionArguments(invocation, applicable, argumentTypes);"]}], "num": 68572}