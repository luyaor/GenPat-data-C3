{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "688c607fd3d11fc67a60306e7d1c2aef", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cc852a53d44c12f5424a2f15fe8145", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test012() throws Exception", "signatureAfterChange": "  \tpublic void test002_classTypeParameter_reflection() throws Exception", "diff": ["+", "+\tpublic void test002_classTypeParameter_reflection() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\t\"public class X<@Marker T> {\\n\"+", "+\t\t\t\t\t\"  public static void main(String[] argv) { Helper.printTypeAnnotations2(X.class);}\\n\"+", "+\t\t\t\t\t\"}\",", "+\t\t\t\t\t", "+\t\t\t\t\t\"Helper.java\",HELPER_CLASS,", "+\t\t\t\t\t\"Marker.java\",", "+\t\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\"+", "+\t\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "+\t\t\t\t\t\"@interface Marker {}\",", "+\t\t\t\t},", "+\t\t\t\t\"X<@Marker T>\");", "+\t}", "-\t// field type", "-\tpublic void test012() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t@B(3) @A int field;\\n\" +", "-\t\t\t\t\"}\",", "-\t\t},", "-\t\t\"\");", "-\t\tString expectedOutput =", "-\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #12 @A(\\n\" + ", "-\t\t\t\"        target type = 0xe FIELD\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #8 @B(\\n\" + ", "-\t\t\t\"        #9 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0xe FIELD\\n\" + ", "-\t\t\t\"      )\\n\";", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e390a7ddc502eb46f6d98abe18706a48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test025() throws Exception", "signatureAfterChange": " \t \tpublic void test039_field() throws Exception", "diff": ["-\t// type argument method call", "-\tpublic void test025() throws Exception {", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"\tstatic <T, U> T foo(T t, U u) {\\n\" +", "-\t\t\t\t\"\t\treturn t;\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\t\tSystem.out.println(X.<@A @B(1) String[], @C('-') X>foo(new String[]{\\\"SUCCESS\\\"}, null)[0]);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "+\t", "+\tpublic void test039_field() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface C {\\n\" + ", "-\t\t\t\t\"\tchar value() default '-';\\n\" + ", "-\t\t\t\t\"}\\n\",", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\t@A int [] @B(3) [] field;\\n\" +", "+\t\t\t\t\"}\",", "-\t\t\"SUCCESS\");", "+\t\t\"\");", "-\t\t\t\"      #52 @A(\\n\" + ", "-\t\t\t\"        target type = 0x1a TYPE_ARGUMENT_METHOD_CALL\\n\" + ", "-\t\t\t\"        offset = 13\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #53 @C(\\n\" + ", "-\t\t\t\"        #49 value=\\'-\\' (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x1a TYPE_ARGUMENT_METHOD_CALL\\n\" + ", "-\t\t\t\"        offset = 13\\n\" + ", "-\t\t\t\"        type argument index = 1\\n\" + ", "+\t\t\t\"      #12 @A(\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [ARRAY, ARRAY]\\n\" + ", "-\t\t\t\"      #48 @B(\\n\" + ", "-\t\t\t\"        #49 value=(int) 1 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x1a TYPE_ARGUMENT_METHOD_CALL\\n\" + ", "-\t\t\t\"        offset = 13\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "+\t\t\t\"      #8 @B(\\n\" + ", "+\t\t\t\"        #9 value=(int) 3 (constant type)\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [ARRAY]\\n\" + "]}], "num": 37848}