{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22e572c70d33fbbe425cece1c9c74ffa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d6c7b276050cc65c62d4ccd4c00568", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "1dbf45ade1eaa8473579771e92825a7887776253", "commitAfterChange": "0fb8e6d8cd5771230b88c7189dc0d95f3a5da0e3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tvoid setSourceComment(char[] source)", "signatureAfterChange": " \tvoid setSourceComment(char[] source)", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "+\t\tStringBuffer buffer = null;", "-\t\tboolean end = false;", "+\t\tboolean end = false, lineStarted = false;", "-\t\t\t\t\tswitch (source[i+1]) {", "+\t\t\t\t\tswitch (source[++i]) {", "+\t\t\t\t\t\t\tbuffer = new StringBuffer(\"//\");", "+\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\tif (source[i+2] == '*') {", "-\t\t\t\t\t\t\t\tcomment = 3; // javadoc", "+\t\t\t\t\t\t\tif (source[++i] == '*') {", "+\t\t\t\t\t\t\t\tif (source[++i] == '/') { // empty block comment", "+\t\t\t\t\t\t\t\t\tthis.comments.add(\"/**/\");", "+\t\t\t\t\t\t\t\t\tthis.allTags.add(new ArrayList());", "+\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tcomment = 3; // javadoc", "+\t\t\t\t\t\t\t\t\tbuffer = new StringBuffer(\"/**\");", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbuffer = new StringBuffer(\"/*\");", "-\t\t\t\t\t\tbuffer = new StringBuffer();", "-\t\t\t\t\tif (source[i] == '@') {", "-\t\t\t\t\t\ttag = \"\";", "+\t\t\t\t\tswitch (source[i]) {", "+\t\t\t\t\t\tcase '@':", "+\t\t\t\t\t\t\tif (!lineStarted || source[i-1] == '{') {", "+\t\t\t\t\t\t\t\ttag = \"\";", "+\t\t\t\t\t\t\t\tlineStarted = true;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase '\\r':", "+\t\t\t\t\t\tcase '\\n':", "+\t\t\t\t\t\t\tlineStarted = false;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase '*':", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tif (!Character.isWhitespace(source[i])) {", "+\t\t\t\t\t\t\t\tlineStarted = true;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tlineStarted = false;", "-\t\t\t\t\t\tbuffer = new StringBuffer();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "637b6f80f8ce29582f1096885dd0f3f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/VariablePattern.java", "commitBeforeChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "commitAfterChange": "447dafd45d9eea3d096b0cc1d1d11fe893f03ec0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public VariablePattern(int patternKind, boolean findDeclarations, boolean readAccess, boolean writeAccess, char[] name, int matchRule)", "signatureAfterChange": "  public VariablePattern(int patternKind, char[] name, int limitTo, int matchRule)", "diff": ["-public VariablePattern(int patternKind, boolean findDeclarations, boolean readAccess, boolean writeAccess, char[] name, int matchRule) {", "+", "+public VariablePattern(int patternKind, char[] name, int limitTo, int matchRule) {", "-\tthis.findDeclarations = findDeclarations; // set to find declarations & all occurrences", "-\tthis.readAccess = readAccess; // set to find any reference, read only references & all occurrences", "-\tthis.writeAccess = writeAccess; // set to find any reference, write only references & all occurrences", "-\tthis.findReferences = readAccess || writeAccess;", "+    this.fineGrain = limitTo & FINE_GRAIN_MASK;", "+    if (this.fineGrain == 0) {", "+\t\tswitch (limitTo & 0xF) {", "+\t\t\tcase IJavaSearchConstants.DECLARATIONS :", "+\t\t\t\tthis.findDeclarations = true;", "+\t\t\t\tbreak;", "+\t\t\tcase IJavaSearchConstants.REFERENCES :", "+\t\t\t\tthis.readAccess = true;", "+\t\t\t\tthis.writeAccess = true;", "+\t\t\t\tbreak;", "+\t\t\tcase IJavaSearchConstants.READ_ACCESSES :", "+\t\t\t\tthis.readAccess = true;", "+\t\t\t\tbreak;", "+\t\t\tcase IJavaSearchConstants.WRITE_ACCESSES :", "+\t\t\t\tthis.writeAccess = true;", "+\t\t\t\tbreak;", "+\t\t\tcase IJavaSearchConstants.ALL_OCCURRENCES :", "+\t\t\t\tthis.findDeclarations = true;", "+\t\t\t\tthis.readAccess = true;", "+\t\t\t\tthis.writeAccess = true;", "+\t\t\t\tbreak;", "+\t\t}", "+\t\tthis.findReferences = this.readAccess || this.writeAccess;", "+    }"]}], "num": 7204}