{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07be11784960d9c0368e3980f1b0ee9a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091affd2d1ddc563e8a608bb962bebab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e3a61b617999ee26a78986f0b7c8e0d0c7d0d38f", "commitAfterChange": "22622fb4f97d8218a8b46b7612c7415d2a54a73e", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "signatureAfterChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "diff": ["-\t\t\t} ", "+\t\t\t} else if (token.equals(\"invalidJavadoc\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportInvalidJavadoc, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tif (isEnabling) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"invalidJavadocTag\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"invalidJavadocTagDep\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"invalidJavadocTagNotVisible\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.startsWith(\"invalidJavadocTagVisibility\")) { //$NON-NLS-1$", "+\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\tString visibility = null;", "+\t\t\t\tif (isEnabling && start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\tvisibility = token.substring(start+1, end).trim();", "+\t\t\t\t}", "+\t\t\t\tif (visibility != null && visibility.equals(CompilerOptions.PUBLIC)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PRIVATE)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PROTECTED)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.DEFAULT)) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\t\tvisibility);", "+\t\t\t\t\treturn;", "+\t\t\t\t} else {", "+\t\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.invalidJavadocTagVisibility\", token)); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t} else if (token.equals(\"missingJavadocTags\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMissingJavadocTags, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsMethodTypeParameters,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tif (isEnabling) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"missingJavadocTagsOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"missingJavadocTagsMethod\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsMethodTypeParameters,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.startsWith(\"missingJavadocTagsVisibility\")) { //$NON-NLS-1$", "+\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\tString visibility = null;", "+\t\t\t\tif (isEnabling && start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\tvisibility = token.substring(start+1, end).trim();", "+\t\t\t\t}", "+\t\t\t\tif (visibility != null && visibility.equals(CompilerOptions.PUBLIC)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PRIVATE)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PROTECTED)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.DEFAULT)) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\t\tvisibility);", "+\t\t\t\t\treturn;", "+\t\t\t\t} else {", "+\t\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.missingJavadocTagsVisibility\", token)); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t} else if (token.equals(\"missingJavadocComments\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMissingJavadocComments, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tif (isEnabling) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsVisibility,", "+\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"missingJavadocCommentsOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMissingJavadocComments, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.startsWith(\"missingJavadocCommentsVisibility\")) { //$NON-NLS-1$", "+\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\tString visibility = null;", "+\t\t\t\tif (isEnabling && start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\tvisibility = token.substring(start+1, end).trim();", "+\t\t\t\t}", "+\t\t\t\tif (visibility != null && visibility.equals(CompilerOptions.PUBLIC)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PRIVATE)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PROTECTED)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.DEFAULT)) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsVisibility,", "+\t\t\t\t\t\t\tvisibility);", "+\t\t\t\t\treturn;", "+\t\t\t\t} else {", "+\t\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.missingJavadocCommentsVisibility\", token)); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}else if (token.equals(\"nullAnnotConflict\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportNullAnnotationInferenceConflict, severity, isEnabling);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"nullAnnotRedundant\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportRedundantNullAnnotation, severity, isEnabling);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"nullUncheckedConversion\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportNullUncheckedConversion, severity, isEnabling);", "+\t\t\t} else if (token.equals(\"unusedThrownWhenOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionWhenOverriding,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedThrownIncludeDocComment\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionIncludeDocCommentReference,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedThrownExemptExceptionThrowable\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "-\t\t\t} else if (token.equals(\"unusedTypeArgs\")) { //$NON-NLS-1$", "+\t\t\t} else if (token.equals(\"unusedParam\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportUnusedParameter, severity, isEnabling);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedParamIncludeDoc\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameterIncludeDocCommentReference,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedParamOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameterWhenOverridingConcrete,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedParamImplementing\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameterWhenImplementingAbstract,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t}  else if (token.equals(\"unusedTypeArgs\")) { //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6b247e1e37b7505c030998f1a823ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "46987bf94fa2fc88d9ab6cb36a5870450e66f8d9", "commitAfterChange": "4b2ce36cb1e443f82351b7a276c4a994ddb0c499", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "signatureAfterChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "diff": ["-\t\t\t} ", "+\t\t\t} else if (token.equals(\"invalidJavadoc\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportInvalidJavadoc, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tif (isEnabling) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"invalidJavadocTag\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"invalidJavadocTagDep\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"invalidJavadocTagNotVisible\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.startsWith(\"invalidJavadocTagVisibility\")) { //$NON-NLS-1$", "+\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\tString visibility = null;", "+\t\t\t\tif (isEnabling && start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\tvisibility = token.substring(start+1, end).trim();", "+\t\t\t\t}", "+\t\t\t\tif (visibility != null && visibility.equals(CompilerOptions.PUBLIC)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PRIVATE)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PROTECTED)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.DEFAULT)) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\t\tvisibility);", "+\t\t\t\t\treturn;", "+\t\t\t\t} else {", "+\t\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.invalidJavadocTagVisibility\", token)); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t} else if (token.equals(\"missingJavadocTags\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMissingJavadocTags, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsMethodTypeParameters,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tif (isEnabling) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"missingJavadocTagsOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"missingJavadocTagsMethod\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsMethodTypeParameters,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.startsWith(\"missingJavadocTagsVisibility\")) { //$NON-NLS-1$", "+\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\tString visibility = null;", "+\t\t\t\tif (isEnabling && start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\tvisibility = token.substring(start+1, end).trim();", "+\t\t\t\t}", "+\t\t\t\tif (visibility != null && visibility.equals(CompilerOptions.PUBLIC)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PRIVATE)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PROTECTED)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.DEFAULT)) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\t\tvisibility);", "+\t\t\t\t\treturn;", "+\t\t\t\t} else {", "+\t\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.missingJavadocTagsVisibility\", token)); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t} else if (token.equals(\"missingJavadocComments\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMissingJavadocComments, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\tif (isEnabling) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsVisibility,", "+\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"missingJavadocCommentsOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMissingJavadocComments, severity, isEnabling);", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsOverriding,", "+\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.startsWith(\"missingJavadocCommentsVisibility\")) { //$NON-NLS-1$", "+\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\tString visibility = null;", "+\t\t\t\tif (isEnabling && start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\tvisibility = token.substring(start+1, end).trim();", "+\t\t\t\t}", "+\t\t\t\tif (visibility != null && visibility.equals(CompilerOptions.PUBLIC)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PRIVATE)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.PROTECTED)", "+\t\t\t\t\t\t|| visibility.equals(CompilerOptions.DEFAULT)) {", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocCommentsVisibility,", "+\t\t\t\t\t\t\tvisibility);", "+\t\t\t\t\treturn;", "+\t\t\t\t} else {", "+\t\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.missingJavadocCommentsVisibility\", token)); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}else if (token.equals(\"nullAnnotConflict\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportNullAnnotationInferenceConflict, severity, isEnabling);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"nullAnnotRedundant\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportRedundantNullAnnotation, severity, isEnabling);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"nullUncheckedConversion\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportNullUncheckedConversion, severity, isEnabling);", "+\t\t\t} else if (token.equals(\"unusedThrownWhenOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionWhenOverriding,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedThrownIncludeDocComment\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionIncludeDocCommentReference,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedThrownExemptExceptionThrowable\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "-\t\t\t} else if (token.equals(\"unusedTypeArgs\")) { //$NON-NLS-1$", "+\t\t\t} else if (token.equals(\"unusedParam\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportUnusedParameter, severity, isEnabling);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedParamIncludeDoc\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameterIncludeDocCommentReference,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedParamOverriding\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameterWhenOverridingConcrete,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"unusedParamImplementing\")) { //$NON-NLS-1$", "+\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameterWhenImplementingAbstract,", "+\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\treturn;", "+\t\t\t}  else if (token.equals(\"unusedTypeArgs\")) { //$NON-NLS-1$"]}], "num": 56479}