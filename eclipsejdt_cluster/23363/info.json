{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0797c66fa4640eccab125bcb64b69edf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8de237a1064272852ffd9ef2ab80fd6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\tif (constructorDeclaration.modifiers != NO_MODIFIERS) this.scribe.printModifiers();", "-\t", "+\t\tif (constructorDeclaration.modifiers != NO_MODIFIERS) {", "+\t\t\tthis.scribe.printModifiers();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e981f6bede5e986a77e428c81d3e36d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  protected int matchConstructor(MethodBinding constructor)", "signatureAfterChange": "  protected int matchConstructor(MethodBinding constructor)", "diff": ["-\t\t\tint newLevel = resolveLevelForType(this.pattern.parameterSimpleNames[i], this.pattern.parameterQualifications[i], /*this.pattern.parametersTypeArguments[i], 0,*/ constructor.parameters[i]);", "+\t\t\t// TODO (frederic) use this call to refine accuracy on parameter types", "+//\t\t\tint newLevel = resolveLevelForType(this.pattern.parameterSimpleNames[i], this.pattern.parameterQualifications[i], this.pattern.parametersTypeArguments[i], 0, constructor.parameters[i]);", "+\t\t\tint newLevel = resolveLevelForType(this.pattern.parameterSimpleNames[i], this.pattern.parameterQualifications[i], constructor.parameters[i]);", "-\t\t\t\tif (newLevel == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;", "+\t\t\t\tif (newLevel == IMPOSSIBLE_MATCH) {", "+//\t\t\t\t\tif (isErasureMatch) {", "+//\t\t\t\t\t\treturn ERASURE_MATCH;", "+//\t\t\t\t\t}", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\t\t}"]}], "num": 23363}