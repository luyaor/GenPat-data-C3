{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07cb94d4488f487e53a0d073a03efc6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d007162336e1c55053ee74e1aeb4c93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope)", "diff": ["-\t\tif (SuperTypeNamesCollector.this.matches(binding)) {", "+\t\tif (SuperTypeNamesCollector.this.matches(binding))", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d79e1f54e97bf6c194d6f0e89d574e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "9d422f535f1cf1a8b8f8401815db736b124961e4", "commitAfterChange": "13ebf03f7d31f9fda8d23c3fe70da0f01fcad14a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void indexAll(IProject project)", "signatureAfterChange": " public void indexAll(IProject project)", "diff": ["-\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY)", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad92f7470374e1ff199e80b5120ba893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic IInitializer createInitializerHandle( \t\tTypeDeclaration typeDecl, \t\tFieldDeclaration initializer, \t\tIType type)", "signatureAfterChange": " public IInitializer createInitializerHandle(TypeDeclaration typeDecl, FieldDeclaration initializer, IType type)", "diff": ["-\t */", "-\tpublic IInitializer createInitializerHandle(", "-\t\tTypeDeclaration typeDecl,", "-\t\tFieldDeclaration initializer,", "-\t\tIType type) {", "-\t\tif (type == null) return null;", "-\t\t// find occurence count of the given initializer in its type declaration", "-\t\tint occurrenceCount = 0;", "-\t\tFieldDeclaration[] fields = typeDecl.fields;", "-\t\tfor (int i = 0, length = fields.length; i < length; i++) {", "-\t\t\tFieldDeclaration field = fields[i];", "-\t\t\tif (!field.isField()) {", "-\t\t\t\toccurrenceCount++;", "-\t\t\t\tif (field.equals(initializer)) {", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-", "-\t\treturn type.getInitializer(occurrenceCount);", "+ */", "+public IInitializer createInitializerHandle(TypeDeclaration typeDecl, FieldDeclaration initializer, IType type) {", "+\tif (type == null) return null;", "+", "+\t// find occurence count of the given initializer in its type declaration", "+\tint occurrenceCount = 0;", "+\tFieldDeclaration[] fields = typeDecl.fields;", "+\tfor (int i = 0, length = fields.length; i < length; i++) {", "+\t\tFieldDeclaration field = fields[i];", "+\t\tif (!field.isField()) {", "+\t\t\toccurrenceCount++;", "+\t\t\tif (field.equals(initializer)) break;", "+\t\t}", "+\t}", "+\treturn type.getInitializer(occurrenceCount);", "+}"]}], "num": 56481}