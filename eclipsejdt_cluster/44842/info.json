{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcb079754e030077ee39f8238710ad32", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a1046c413e58a73be699b3ada671ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprotected String getKey(IField field)", "signatureAfterChange": " \t \tprotected String getKey(IField field, boolean withAccessFlags, boolean forceOpen) throws JavaModelException", "diff": ["-\tprotected String getKey(IField field) {", "+\tprotected String getKey(IField field, boolean withAccessFlags, boolean forceOpen) throws JavaModelException {", "-\t\tString declaringKey = ((IType) field.getParent()).getKey();", "+\t\tString declaringKey = getKey((IType) field.getParent(), false/*without access flags*/, forceOpen);", "+\t\t", "+\t\t// flags", "+\t\tif (withAccessFlags) {", "+\t\t\tkey.append('^');", "+\t\t\tif (forceOpen) ", "+\t\t\t\tkey.append(field.getFlags());", "+\t\t\telse", "+\t\t\t\tkey.append(Flags.AccDefault);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcde334bac98da2756ef8515d2734f89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected String getKey(IMethod method)", "signatureAfterChange": " \t \tprotected String getKey(IMethod method, boolean withAccessFlags, boolean forceOpen) throws JavaModelException", "diff": ["-\tprotected String getKey(IMethod method) {", "+\tprotected String getKey(IMethod method, boolean withAccessFlags, boolean forceOpen) throws JavaModelException {", "-\t\tString declaringKey = ((IType) method.getParent()).getKey();", "+\t\tString declaringKey = getKey((IType) method.getParent(), false/*without access flags*/, forceOpen);", "-\t\ttry {", "+\t\tif (forceOpen)", "-\t\t} catch (JavaModelException e) {", "-\t\t\t// method doesn't exist", "+\t\telse", "+\t\t", "+\t\t// flags", "+\t\tif (withAccessFlags) {", "+\t\t\tkey.append('^');", "+\t\t\tif (forceOpen)", "+\t\t\t\tkey.append(method.getFlags());", "+\t\t\telse", "+\t\t\t\tkey.append(Flags.AccDefault); // cannot get the flags without opening the element\t\t"]}], "num": 44842}