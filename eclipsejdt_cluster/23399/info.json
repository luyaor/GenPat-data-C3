{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5c05f348501261e438dd469eb596f76", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7f4c69dc239be9ca3ff895ba78c4b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1fb602b75e740fee79145d5e2e5fdf04a9fb5ee8", "commitAfterChange": "e0c65d48fbfbc2b240962f72967bed335ff04a38", "methodNumberBeforeChange": 748, "methodNumberAfterChange": 748, "signatureBeforeChange": " public void test0728()", "signatureAfterChange": " public void test0728()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "-\t\t\"\tfoobar(ctrl.getView().getContent()); \\n\" +", "-\t\t\"\t^^^^^^\\n\" +", "-\t\t\"The method foobar(X<String>) in the type X<E> is not applicable for the arguments (?)\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tfoobar(ctrl.getView().getContent()); \\n\" + ", "+\t\t\"\t^^^^^^\\n\" + ", "+\t\t\"The method foobar(X<String>) in the type X<E> is not applicable for the arguments (capture#2-of ?)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46906ef7951a4e048a6eded36e62f4f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7c65ba31905e387e2902b13fe71f33b55f069273", "commitAfterChange": "9b0a7dbe196111bace472ad6d38ba1cdd25696dc", "methodNumberBeforeChange": 1474, "methodNumberAfterChange": 1474, "signatureBeforeChange": " public void test1443()", "signatureAfterChange": " public void test1443()", "diff": ["-\t\t\t\t\"    // baz(a);\\n\" + ", "-\t\t\t\t\"    Zork z;\\n\" +", "+\t\t\t\t\"    baz(a);\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tbaz(a);\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"The method baz(List<X.A<T>>) in the type X is not applicable for the arguments (List<X.A>)\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 16)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d89d18e340458c20df9f5558e2a4246", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/OverloadResolutionTest8.java", "commitBeforeChange": "a55be3089b1474701c6009071b6792ce21fce5bc", "commitAfterChange": "45ebc844082bfed2acc4b8a65a63db4a1c683431", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\t\"\tgoo(()-> { \\n\" + ", "-\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\"The method goo(J) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\"  while (x)    ;\\n\" + ", "-\t\t\t\"})\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\"\tgoo(()-> { \\n\" + ", "-\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\"The method goo(J) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\"  while (f)    ;\\n\" + ", "-\t\t\t\"})\\n\" + "]}], "num": 23399}