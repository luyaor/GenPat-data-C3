{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b18e6d4e0ba6b7ff6a5549369aac5e5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e876131798bf697e4e01b49a695c78c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "fa04bcc7aeac1403aeb17877212985395c1541ca", "commitAfterChange": "3e7e5500dc18d43a1ac0267b7313ca1e65635b34", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public char[][][] collect() throws JavaModelException", "signatureAfterChange": " public char[][][] collect() throws JavaModelException", "diff": ["-\t\t\t\tCompilationUnitDeclaration parsedUnit = buildBindings(unit);", "-\t\t\t\tif (parsedUnit != null)", "-\t\t\t\t\tparsedUnit.traverse(new TypeDeclarationVisitor(), parsedUnit.scope);", "+\t\t\t\tSourceType sourceType = (SourceType) this.type;", "+\t\t\t\tboolean isTopLevelOrMember = sourceType.getOuterMostLocalContext() == null;", "+\t\t\t\tCompilationUnitDeclaration parsedUnit = buildBindings(unit, isTopLevelOrMember);", "+\t\t\t\tif (parsedUnit != null) {", "+\t\t\t\t\tTypeDeclaration typeDecl = new ASTNodeFinder(parsedUnit).findType(this.type);", "+\t\t\t\t\tif (typeDecl != null && typeDecl.binding != null) ", "+\t\t\t\t\t\tcollectSuperTypeNames(typeDecl.binding);", "+\t\t\t\t}", "-\t\t\t\t\tCompilationUnitDeclaration parsedUnit = buildBindings(unit);", "+\t\t\t\t\tCompilationUnitDeclaration parsedUnit = buildBindings(unit, true /*only toplevel and member types are visible to the focus type*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efa3237450bd85e921e81ed121bfca75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "8ddb90194cdf45633ca959a6158f4f155e521349", "commitAfterChange": "643916268f3a91ca4c5f66ed9ee10039a3a4064f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding)", "signatureAfterChange": " private void reportHierarchy(IType focus, TypeDeclaration focusLocalType, ReferenceBinding binaryTypeBinding)", "diff": ["-private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding) {", "+private void reportHierarchy(IType focus, TypeDeclaration focusLocalType, ReferenceBinding binaryTypeBinding) {", "-\t\t\tMember declaringMember = ((Member)focus).getOuterMostLocalContext();", "-\t\t\tif (declaringMember == null) {", "+\t\t\tif (focusLocalType != null) {", "+\t\t\t\t// anonymous or local type", "+\t\t\t\tthis.focusType = focusLocalType.binding;", "+\t\t\t} else {", "-\t\t\t} else {", "-\t\t\t\t// anonymous or local type", "-\t\t\t\tif (parsedUnit != null) {", "-\t\t\t\t\tTypeDeclaration typeDecl = new ASTNodeFinder(parsedUnit).findType(focus);", "-\t\t\t\t\tif (typeDecl != null) {", "-\t\t\t\t\t\tthis.focusType = typeDecl.binding;", "-\t\t\t\t\t}", "-\t\t\t\t} "]}], "num": 28072}