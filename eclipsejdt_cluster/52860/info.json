{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c87d10f30b10839a919bf7969a74144", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea8b16ddccbae6d0a523165dd93169b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/MethodInfo.java", "commitBeforeChange": "ffcfe0dac7f476f076089d3cdae600b5982efdfb", "commitAfterChange": "263d5090059fdde1fe0ad777198fe1aa5d325a3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset, int decodingFlags) \t\tthrows ClassFormatException", "signatureAfterChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset, int decodingFlags) \t\tthrows ClassFormatException", "diff": ["-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleParameterAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleParameterAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleParameterAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleParameterAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new AnnotationDefaultAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new AnnotationDefaultAttribute(classFileBytes, constantPool, offset + readOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da59e5b72e42f386be232f54abc03184", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public ClassFileReader(byte[] classFileBytes, char[] fileName, boolean fullyInitialize) throws ClassFormatException", "signatureAfterChange": " public ClassFileReader(byte[] classFileBytes, char[] fileName, boolean fullyInitialize) throws ClassFormatException", "diff": ["-\tsuper(classFileBytes, 0);", "+\tsuper(classFileBytes, null, 0);", "-\t\t// Read the this.fields, use exception handlers to catch bad format", "+\t\t// Read the fields, use exception handlers to catch bad format", "-\t\t\t\tfield = new FieldInfo(reference, this.constantPoolOffsets, readOffset);", "+\t\t\t\tfield = FieldInfo.createField(reference, this.constantPoolOffsets, readOffset);", "-\t\t// Read the this.methods", "+\t\t// Read the methods", "-\t\t\tMethodInfo method;", "+\t\t\tboolean isAnnotationType = (this.accessFlags & ClassFileConstants.AccAnnotation) != 0;", "-\t\t\t\tmethod = new MethodInfo(reference, this.constantPoolOffsets, readOffset);", "-\t\t\t\tthis.methods[i] = method;", "-\t\t\t\treadOffset += method.sizeInBytes();", "+\t\t\t\tthis.methods[i] = isAnnotationType", "+\t\t\t\t\t? AnnotationMethodInfo.createAnnotationMethod(reference, this.constantPoolOffsets, readOffset)", "+\t\t\t\t\t: MethodInfo.createMethod(reference, this.constantPoolOffsets, readOffset);", "+\t\t\t\treadOffset += this.methods[i].sizeInBytes();", "-\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.RuntimeVisibleAnnotationsName)", "-\t\t\t\t\t\t\t|| CharOperation.equals(attributeName, AttributeNamesConstants.RuntimeInvisibleAnnotationsName)) {", "-\t\t\t\t\t\tdecodeStandardAnnotations(readOffset);", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.RuntimeVisibleAnnotationsName)) {", "+\t\t\t\t\t\tdecodeAnnotations(readOffset, true);", "+\t\t\t\t\t} else if (CharOperation.equals(attributeName, AttributeNamesConstants.RuntimeInvisibleAnnotationsName)) {", "+\t\t\t\t\t\tdecodeAnnotations(readOffset, false);"]}], "num": 52860}