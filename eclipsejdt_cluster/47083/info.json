{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e21880e2cd9fafee26eca9fa77fa9b63", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8cf0b8460e6c6238931d4563c5a331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "a0bf8407fc852f4db46b479f5e08f38f0e4e73ff", "commitAfterChange": "4bb0efd99451357ac9b90627fe02dccb055e66b6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testGetSourceRangeInnerClass() throws JavaModelException", "signatureAfterChange": " public void testGetSourceRangeInnerClass() throws JavaModelException", "diff": ["-\tassertTrue(\"Inner Class file source range not correct\", cf.getSourceRange().getOffset() == 0 && cf.getSourceRange().getLength() != 0);", "+\tISourceRange sourceRange = cf.getSourceRange();", "+\tassertTrue(\"Inner class file should have associated source range\", sourceRange != null);", "+\tassertEquals(\"Unexpected offset\", 0, sourceRange.getOffset());", "+\tassertEquals(\"Unexpected length\", 100, sourceRange.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a58596fec2d23fcb581fd31ea5ff4d7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "a0bf8407fc852f4db46b479f5e08f38f0e4e73ff", "commitAfterChange": "4bb0efd99451357ac9b90627fe02dccb055e66b6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testGetSourceRange() throws JavaModelException", "signatureAfterChange": " public void testGetSourceRange() throws JavaModelException", "diff": ["-\tassertTrue(\"Class file source range not correct\", cf.getSourceRange().getOffset() == 0 && cf.getSourceRange().getLength() != 0);", "+\tISourceRange sourceRange = cf.getSourceRange();", "+\tassertTrue(\"Class file should have associated source range\", sourceRange != null);", "+\tassertEquals(\"Unexpected offset\", 0, sourceRange.getOffset());", "+\tassertEquals(\"Unexpected length\", 100, sourceRange.getLength());"]}], "num": 47083}