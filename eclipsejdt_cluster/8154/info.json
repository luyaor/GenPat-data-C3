{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd7fdad18dd23543ebf58b4144ae0c3f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211eecba31dc329ee72233ebefde20c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "c117a64cdf0af5bb1016a70197fdaaecfa29c6f9", "commitAfterChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 37, "signatureBeforeChange": " \t \tprivate TypeBinding[] getTypeBindingArguments()", "signatureAfterChange": " \t \tprivate TypeBinding[] getTypeBindingArguments()", "diff": ["-\t\tint rank = 0;", "-\t\t\tTypeBinding binding;", "-\t\t\tint kind = resolver.wildcardKind;", "-\t\t\tswitch (kind) {", "-\t\t\t\tcase Wildcard.EXTENDS:", "-\t\t\t\tcase Wildcard.SUPER:", "-\t\t\t\t\tbinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, (TypeBinding) resolver.compilerBinding, null /*no extra bound*/, kind);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase Wildcard.UNBOUND:", "-\t\t\t\t\tbinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, null/*no bound*/, null /*no extra bound*/, kind);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tbinding = (TypeBinding) resolver.compilerBinding;", "-\t\t\t}", "-\t\t\tif (resolver.isCapture)", "-\t\t\t\tbinding = new CaptureBinding((WildcardBinding) binding, null, 0); // TODO (jerome) decode binding key", "-\t\t\targuments[i] = binding;", "+\t\t\targuments[i] = (TypeBinding) resolver.compilerBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec62d5199477c01f3064191bfab13c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a2cfaf33b626413a70eea1530c77695e81ac081f", "commitAfterChange": "89847a0c1a06590b3bbeee9528d77f57e2f8453c", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 372, "signatureBeforeChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "signatureAfterChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "diff": ["-\tTypeBinding erasedCastType = castExpression.resolvedType.erasure();", "-\tTypeBinding erasedLeaf = erasedCastType.leafComponentType();", "-\tint dim = erasedCastType.dimensions();", "-\tif (erasedLeaf.isGenericType()) {", "-\t\tReferenceBinding leafEnclosing = scope.environment().convertToParameterizedType(erasedLeaf.enclosingType());", "-\t\terasedCastType = scope.environment().createRawType((ReferenceBinding)erasedLeaf, leafEnclosing);", "-\t\tif (dim > 0) erasedCastType = scope.environment().createArrayType(erasedCastType, dim);", "-\t}\t", "+\tTypeBinding castExpressionResolvedType = castExpression.resolvedType;", "-\t\t\tnew String(castExpression.resolvedType.readableName()),", "-\t\t\tnew String(erasedCastType.readableName()),", "+\t\t\tnew String(castExpressionResolvedType.readableName())", "-\t\t\tnew String(castExpression.resolvedType.shortReadableName()),", "-\t\t\tnew String(erasedCastType.shortReadableName()),", "+\t\t\tnew String(castExpressionResolvedType.shortReadableName())"]}], "num": 8154}