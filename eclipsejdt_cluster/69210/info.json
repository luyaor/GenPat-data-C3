{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "863f45ff4e7c30daf060877387ddad04", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "584ec41b840f7301f34bb436414d110e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "4b831e8897b5d08fc4189f64c5b148109c36337b", "commitAfterChange": "e97dff1004437e7793059cc79f21bd49d58afcab", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public ConfigurableOption[] getConfigurableOptions(Locale locale)", "signatureAfterChange": "\r public ConfigurableOption[] getConfigurableOptions(Locale locale)", "diff": ["-\t\t\tassertMode ? 0 : 1)\r", "-\r", "+\t\t\tassertMode ? 0 : 1),\r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.assertIdentifier\"/*nonNLS*/, \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & AssertUsedAsAnIdentifier) != 0 ? 0 : 1)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c9d2cb950d265edc8fb86ebbc0f289", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic ConfigurableOption[] getConfigurableOptions(Locale locale)", "signatureAfterChange": "\r public ConfigurableOption[] getConfigurableOptions(Locale locale)", "diff": ["-\t */\r", "-\tpublic ConfigurableOption[] getConfigurableOptions(Locale locale) {\r", "-\t\tString componentName = Compiler.class.getName();\r", "-\t\treturn new ConfigurableOption[] {\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"debug.vars\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(produceDebugAttributes & Vars) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"debug.lines\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(produceDebugAttributes & Lines) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"debug.source\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(produceDebugAttributes & Source) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"debug.preserveAllLocals\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\tpreserveAllLocalVariables ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalError.unReachableCode\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(errorThreshold & UnreachableCode) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalError.importProblem\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(errorThreshold & ImportProblem) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalWarning.methodWithConstructorName\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(warningThreshold & MethodWithConstructorName) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalWarning.overridingPackageDefaultMethod\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(warningThreshold & OverriddenPackageDefaultMethod) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalWarning.deprecated\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(warningThreshold & UsingDeprecatedAPI) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalWarning.maskedCatchBlock\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(warningThreshold & MaskedCatchBlock) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalWarning.unusedLocalVariable\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(warningThreshold & UnusedLocalVariable) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalWarning.unusedArgument\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(warningThreshold & UnusedArgument) != 0 ? 0 : 1),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"binaryCompatibility.targetJDK\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\ttargetJDK),\r", "-\t\t\tnew ConfigurableOption(\r", "-\t\t\t\tcomponentName,\r", "-\t\t\t\t\"optionalWarning.accessEmulation\",\r", "-\t\t\t\tlocale,\r", "-\t\t\t\t(warningThreshold & AccessEmulation) != 0 ? 0 : 1)};\r", "+ */\r", "+public ConfigurableOption[] getConfigurableOptions(Locale locale) {\r", "+\tString componentName = Compiler.class.getName();\r", "+\treturn new ConfigurableOption[] {\r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"debug.vars\", \r", "+\t\t\tlocale, \r", "+\t\t\t(produceDebugAttributes & Vars) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"debug.lines\", \r", "+\t\t\tlocale, \r", "+\t\t\t(produceDebugAttributes & Lines) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"debug.source\", \r", "+\t\t\tlocale, \r", "+\t\t\t(produceDebugAttributes & Source) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"debug.preserveAllLocals\", \r", "+\t\t\tlocale, \r", "+\t\t\tpreserveAllLocalVariables ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalError.unReachableCode\", \r", "+\t\t\tlocale, \r", "+\t\t\t(errorThreshold & UnreachableCode) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalError.importProblem\", \r", "+\t\t\tlocale, \r", "+\t\t\t(errorThreshold & ImportProblem) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.methodWithConstructorName\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & MethodWithConstructorName) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.overridingPackageDefaultMethod\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & OverriddenPackageDefaultMethod) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.deprecated\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & UsingDeprecatedAPI) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.maskedCatchBlock\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & MaskedCatchBlock) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.unusedLocalVariable\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & UnusedLocalVariable) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.unusedArgument\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & UnusedArgument) != 0 ? 0 : 1), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"binaryCompatibility.targetJDK\", \r", "+\t\t\tlocale, \r", "+\t\t\ttargetJDK), \r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.accessEmulation\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & AccessEmulation) != 0 ? 0 : 1),\r", "+\t\tnew ConfigurableOption(\r", "+\t\t\tcomponentName,\r", "+\t\t\t\"optionalWarning.nonExternalizedString\", \r", "+\t\t\tlocale, \r", "+\t\t\t(warningThreshold & NonExternalizedString) != 0 ? 0 : 1)\r", "+\t\t}; \r", "+}\r"]}], "num": 69210}