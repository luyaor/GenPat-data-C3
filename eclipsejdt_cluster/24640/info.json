{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "975ed6925621e8e7bb2a36873f89091c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8024355d9c7fcf4130f89a7abe9516c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "commitAfterChange": "a00d0694a5797c69eb50145f1a65c73c676a067b", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "signatureAfterChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "diff": ["-\t\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement((EnumDeclaration) result);", "+\t\t\t\t\t\t\tfinal TypeDeclarationStatement typeDeclarationStatement = new TypeDeclarationStatement(this.ast);", "+\t\t\t\t\t\t\ttypeDeclarationStatement.setDeclaration((EnumDeclaration) result);", "-\t\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement((AnnotationTypeDeclaration) result);", "+\t\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = new TypeDeclarationStatement(this.ast);", "+\t\t\t\t\t\t\ttypeDeclarationStatement.setDeclaration((AnnotationTypeDeclaration) result);", "-\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement(typeDeclaration);", "+\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = new TypeDeclarationStatement(this.ast);", "+\t\t\t\t\t\ttypeDeclarationStatement.setDeclaration(typeDeclaration);", "-\t\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDeclAST3.getStartPosition(), typeDeclAST3.getLength());\t\t\t\t\t", "+\t\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDeclAST3.getStartPosition(), typeDeclAST3.getLength());", "-\t\t\tExpression expr = convert((org.eclipse.jdt.internal.compiler.ast.Expression) statement);", "-\t\t\tStatement stmt = this.ast.newExpressionStatement(expr);", "+\t\t\tfinal Expression expr = convert((org.eclipse.jdt.internal.compiler.ast.Expression) statement);", "+\t\t\tfinal ExpressionStatement stmt = new ExpressionStatement(this.ast);", "+\t\t\tstmt.setExpression(expr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa1437ecb029998b1e0cfda5ebc741a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "commitAfterChange": "a00d0694a5797c69eb50145f1a65c73c676a067b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic EnumConstantDeclaration convert(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant)", "signatureAfterChange": " \tpublic EnumConstantDeclaration convert(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant)", "diff": ["-\t\tEnumConstantDeclaration enumConstantDeclaration = this.ast.newEnumConstantDeclaration();", "-\t\tSimpleName typeName = this.ast.newSimpleName(new String(enumConstant.name));", "+\t\tEnumConstantDeclaration enumConstantDeclaration = new EnumConstantDeclaration(this.ast);", "+\t\tfinal SimpleName typeName = new SimpleName(this.ast);", "+\t\ttypeName.internalSetIdentifier(new String(enumConstant.name));", "-\t\t\t\t\tAnonymousClassDeclaration anonymousClassDeclaration = this.ast.newAnonymousClassDeclaration();", "+\t\t\t\t\tAnonymousClassDeclaration anonymousClassDeclaration = new AnonymousClassDeclaration(this.ast);"]}], "num": 24640}