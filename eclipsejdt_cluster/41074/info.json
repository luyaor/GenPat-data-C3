{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36dac1267401edfd571d2ce6c8110bcc", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6340d812a3a2bf62ec5472ea55a247e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "14842eb62da3e660c575d5193079230a000aa781", "commitAfterChange": "0874cfb2ef67a79a49d909a248c81f1f23dd713a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\t\r \r \tpublic TypeDeclaration convert(MemberTypeDeclaration typeDeclaration)", "signatureAfterChange": "\t\r \r \tpublic TypeDeclaration convert(MemberTypeDeclaration typeDeclaration)", "diff": ["-\t\ttypeDecl.setModifiers(modifiers);\r", "+\t\t/**\r", "+\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=13233\r", "+\t\t * This handles cases where the parser built nodes with invalid modifiers.\r", "+\t\t */\r", "+\t\ttry {\r", "+\t\t\ttypeDecl.setModifiers(modifiers);\r", "+\t\t} catch(IllegalArgumentException e) {\r", "+\t\t\tint legalModifiers =\r", "+\t\t\t\tModifier.PUBLIC | Modifier.PRIVATE | Modifier.PROTECTED\r", "+\t\t\t\t| Modifier.STATIC | Modifier.FINAL | Modifier.ABSTRACT\r", "+\t\t\t\t| Modifier.STRICTFP;\r", "+\t\t\ttypeDecl.setModifiers(modifiers & legalModifiers);\r", "+\t\t\ttypeDecl.setFlags(ASTNode.MALFORMED);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d9e08fc1158b3e622d65bae62c5ec3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "14842eb62da3e660c575d5193079230a000aa781", "commitAfterChange": "0874cfb2ef67a79a49d909a248c81f1f23dd713a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "signatureAfterChange": "\r \r \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "diff": ["-\t\ttypeDecl.setModifiers(modifiers);\r", "+\t\t/**\r", "+\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=13233\r", "+\t\t * This handles cases where the parser built nodes with invalid modifiers.\r", "+\t\t */\r", "+\t\ttry {\r", "+\t\t\ttypeDecl.setModifiers(modifiers);\r", "+\t\t} catch(IllegalArgumentException e) {\r", "+\t\t\tint legalModifiers =\r", "+\t\t\t\tModifier.PUBLIC | Modifier.PRIVATE | Modifier.PROTECTED\r", "+\t\t\t\t| Modifier.STATIC | Modifier.FINAL | Modifier.ABSTRACT\r", "+\t\t\t\t| Modifier.STRICTFP;\r", "+\t\t\ttypeDecl.setModifiers(modifiers & legalModifiers);\r", "+\t\t\ttypeDecl.setFlags(ASTNode.MALFORMED);\r", "+\t\t}\r"]}], "num": 41074}