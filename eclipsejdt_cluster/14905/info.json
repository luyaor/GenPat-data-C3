{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "011d0a71d4c4119c341bb0e195b7a1ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132d66b711798db9f0fcf7376e18af7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " private int fieldSourceEnd(FieldBinding field, ASTNode node)", "signatureAfterChange": " private int fieldSourceEnd(FieldBinding field, ASTNode node)", "diff": ["-\t\tFieldBinding[] bindings = ref.otherBindings;", "-\t\tif (bindings != null)", "-\t\t\tfor (int i = bindings.length; --i >= 0;)", "-\t\t\t\tif (bindings[i] == field)", "-\t\t\t\t\treturn (int) ref.sourcePositions[i + 1]; // first position is for the primary field", "-\t}", "+\t\tif (ref.binding == field) {", "+\t\t\treturn (int) (ref.sourcePositions[ref.indexOfFirstFieldBinding-1]);", "+\t\t}", "+\t\tFieldBinding[] otherFields = ref.otherBindings;", "+\t\tif (otherFields != null) {", "+\t\t\tint offset = ref.indexOfFirstFieldBinding == 1 ? 1 : ref.indexOfFirstFieldBinding - 1;", "+\t\t\tfor (int i = 0, length = otherFields.length; i < length; i++) {", "+\t\t\t\tif (otherFields[i] == field)", "+\t\t\t\t\treturn (int) (ref.sourcePositions[i + offset]);", "+\t\t\t}", "+\t\t}", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1ee9429cec9d9a25294a5e444af699", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " private int fieldSourceStart(ASTNode node)", "signatureAfterChange": " private int fieldSourceStart(FieldBinding field, ASTNode node)", "diff": ["-private int fieldSourceStart(ASTNode node) {", "+private int fieldSourceStart(FieldBinding field, ASTNode node) {", "+\t} else \tif (node instanceof QualifiedNameReference) {", "+\t\tQualifiedNameReference ref = (QualifiedNameReference) node;", "+\t\tif (ref.binding == field) {", "+\t\t\treturn (int) (ref.sourcePositions[ref.indexOfFirstFieldBinding-1] >> 32);", "+\t\t}", "+\t\tFieldBinding[] otherFields = ref.otherBindings;", "+\t\tif (otherFields != null) {", "+\t\t\tint offset = ref.indexOfFirstFieldBinding == 1 ? 1 : ref.indexOfFirstFieldBinding - 1;", "+\t\t\tfor (int i = 0, length = otherFields.length; i < length; i++) {", "+\t\t\t\tif (otherFields[i] == field)", "+\t\t\t\t\treturn (int) (ref.sourcePositions[i + offset] >> 32);", "+\t\t\t}", "+\t\t}", "+"]}], "num": 14905}