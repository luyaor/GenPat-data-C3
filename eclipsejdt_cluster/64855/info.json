{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0c9e9798ac3ad8260d87355ab720813", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874050e5d520d38127be20beef569384", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t\t        return new ProblemMethodBinding(methodSubstitute, originalMethod.selector, new TypeBinding[]{substitute, typeVariables[i] }, ParameterBoundMismatch);", "+\t\t\t\t\t\tint argLength = arguments.length;", "+\t\t\t\t\t\tTypeBinding[] augmentedArguments = new TypeBinding[argLength + 2]; // append offending substitute and typeVariable ", "+\t\t\t\t\t\tSystem.arraycopy(arguments, 0, augmentedArguments, 0, argLength);", "+\t\t\t\t\t\taugmentedArguments[argLength] = substitute;", "+\t\t\t\t\t\taugmentedArguments[argLength+1] = typeVariable;", "+\t\t\t\t        return new ProblemMethodBinding(methodSubstitute, originalMethod.selector, augmentedArguments, ParameterBoundMismatch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba902a7ad32fc5619a30bbb79df18e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "f9e266f586466be925481e722a3bf7ce1cc60737", "commitAfterChange": "9cb52b05121064f23c74729fac5abd38c26f5de2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic void acceptImport(\r \t\tint declarationStart,\r \t\tint declarationEnd,\r \t\tchar[] name,\r \t\tboolean onDemand)", "signatureAfterChange": "\r \tpublic void acceptImport(\r \t\tint declarationStart,\r \t\tint declarationEnd,\r \t\tchar[] name,\r \t\tboolean onDemand)", "diff": ["+\t\tif (onDemand) {\r", "+\t\t\tint nameLength = name.length;\r", "+\t\t\tSystem.arraycopy(name, 0, (name = new char[nameLength + 2]), 0, nameLength);\r", "+\t\t\tname[nameLength] = '.';\r", "+\t\t\tname[nameLength + 1] = '*';\r", "+\t\t}\r"]}], "num": 64855}