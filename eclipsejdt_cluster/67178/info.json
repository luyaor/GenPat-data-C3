{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f99d2749b9ec48cefb137991c5e2585d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc61ebbbf920de4f5af90e9e9f46b20d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/AllPerformanceTests.java", "commitBeforeChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "commitAfterChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["+\t}", "+", "+\t\t// Reset subsets of tests (after having test classes loaded", "+\t\tTestCase.TESTS_NAMES = null;", "+\t\tTestCase.TESTS_PREFIX = null;", "+\t\tTestCase.TESTS_NUMBERS = null;", "+\t\tTestCase.TESTS_RANGE = null;", "+", "+\t\t// Get test suites subset", "+\t\tif (COMPLETE != null) {", "+\t\t\tint pos = -1;", "+\t\t\ttry {", "+\t\t\t\tpos = Integer.parseInt(COMPLETE);", "+\t\t\t\tClass[] complete = getCompleteClasses();", "+\t\t\t\tint cl = complete.length;", "+\t\t\t\tClass[] newSuites = new Class[length+cl];", "+\t\t\t\tif (pos <= 0) {", "+\t\t\t\t\tSystem.arraycopy(complete, 0, newSuites, 0, cl);", "+\t\t\t\t\tSystem.arraycopy(testSuites, 0, newSuites, cl, length);", "+\t\t\t\t} else if (pos >= length) {", "+\t\t\t\t\tSystem.arraycopy(testSuites, 0, newSuites, 0, length);", "+\t\t\t\t\tSystem.arraycopy(complete, 0, newSuites, length, cl);", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i=0; i<pos; i++)", "+\t\t\t\t\t\tnewSuites[i] = testSuites[i];", "+\t\t\t\t\tfor (int i=pos; i<pos+cl; i++)", "+\t\t\t\t\t\tnewSuites[i] = complete[i-pos];", "+\t\t\t\t\tfor (int i=pos+cl; i<length+cl; i++)", "+\t\t\t\t\t\tnewSuites[i] = testSuites[i-cl];", "+\t\t\t\t}", "+\t\t\t\ttestSuites = newSuites;", "+\t\t\t\tlength = testSuites.length;", "+\t\t\t} catch (NumberFormatException e1) {", "+\t\t\t\t// do nothing", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\t// Get tests of suites"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea38b0180e3f76e964226d74281ed723", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/AllPerformanceTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\tif (ADD) {", "-\t\t\ttry {", "-\t\t\t\tClass[] complete = getAdditionalTestClasses();", "-\t\t\t\tint completeLength = complete.length;", "-\t\t\t\tClass[] newSuites = new Class[length+completeLength];", "-\t\t\t\tSystem.arraycopy(testSuites, 0, newSuites, 0, length);", "-\t\t\t\tSystem.arraycopy(complete, 0, newSuites, length, completeLength);", "-\t\t\t\ttestSuites = newSuites;", "-\t\t\t\tlength = testSuites.length;", "-\t\t\t} catch (NumberFormatException e1) {", "-\t\t\t\t// do nothing", "+\t\tif (RUN_ID != null) {", "+\t\t\tClass[] subSetSuites = new Class[length];", "+\t\t\tint count = 0;", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tString name = FullSourceWorkspaceTests.suiteTypeShortName(testSuites[i]);", "+\t\t\t\tif (RUN_ID.indexOf(name.charAt(0)) >= 0) {", "+\t\t\t\t\tsubSetSuites[count++] = testSuites[i];", "+\t\t\t\t}", "+\t\t\tSystem.arraycopy(subSetSuites, 0, testSuites = new Class[count], 0, count);", "+\t\t\tlength = count;", "+\t\t}", "+", "+\t\t// Get test suites subset", "+\t\tif (ADD) {", "+\t\t\tClass[] complete = getAdditionalTestClasses();", "+\t\t\tint completeLength = complete.length;", "+\t\t\tClass[] newSuites = new Class[length+completeLength];", "+\t\t\tSystem.arraycopy(testSuites, 0, newSuites, 0, length);", "+\t\t\tSystem.arraycopy(complete, 0, newSuites, length, completeLength);", "+\t\t\ttestSuites = newSuites;", "+\t\t\tlength = testSuites.length;", "+\t\tif (length == 0) {", "+\t\t\tSystem.err.println(\"There's no performances suites to run!!!\");", "+\t\t\treturn perfSuite;", "+\t\t}", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\tString name = FullSourceWorkspaceTests.suiteTypeShortName(testSuites[i]);", "-\t\t\tif (name != null) {", "-\t\t\t\tsuitesAcronym += name.substring(0, 1);", "+\t\tif (RUN_ID == null) {", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tString name = FullSourceWorkspaceTests.suiteTypeShortName(testSuites[i]);", "+\t\t\t\tif (name != null) {", "+\t\t\t\t\tchar firstChar = name.charAt(0);", "+\t\t\t\t\tif (suitesAcronym.indexOf(firstChar) >= 0) {", "+\t\t\t\t\t\tSystem.out.println(\"WARNING: Duplicate letter in RUN_ID for test suite: \"+name);", "+\t\t\t\t\t}", "+\t\t\t\t\tsuitesAcronym += firstChar;", "+\t\t\t\t}", "+\t\t} else {", "+\t\t\tsuitesAcronym = RUN_ID;"]}], "num": 67178}