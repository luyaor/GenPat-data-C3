{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec5491a070bfba20a9b5291487c0e678", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d12d9bd711f84d75873718af7be9c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObjectToInt.java", "commitBeforeChange": "f66ad7c89d5efefebf4bda51f9089ef887e9d108", "commitAfterChange": "97459ae998e10691456e7e2a3002f99ff1d092bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tint value;", "-\t\tfor (int i = 0, length = valueTable.length; i < length; i++)", "-\t\t\tif ((value = valueTable[i]) != -1)", "-\t\t\t\ts += keyTable[i] + \" -> \" + value + \"\\n\"; \t//$NON-NLS-2$ //$NON-NLS-1$", "+\t\tObject key;", "+\t\tfor (int i = 0, length = this.keyTable.length; i < length; i++)", "+\t\t\tif ((key = this.keyTable[i]) != null)", "+\t\t\t\ts += key + \" -> \" + this.valueTable[i] + \"\\n\"; \t//$NON-NLS-2$ //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7970b46b876a2ba068f9e03679275cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObjectToInt.java", "commitBeforeChange": "f66ad7c89d5efefebf4bda51f9089ef887e9d108", "commitAfterChange": "97459ae998e10691456e7e2a3002f99ff1d092bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic int put(Object key, int value)", "signatureAfterChange": "  \tpublic int put(Object key, int value)", "diff": ["-\t\tint index = key.hashCode() % valueTable.length;", "+\t\tint index = key.hashCode() % this.valueTable.length;", "-\t\twhile ((currentKey = keyTable[index]) != null) {", "+\t\twhile ((currentKey = this.keyTable[index]) != null) {", "-\t\t\t\treturn valueTable[index] = value;", "-\t\t\tindex = (index + 1) % keyTable.length;", "+\t\t\t\treturn this.valueTable[index] = value;", "+\t\t\tindex = (index + 1) % this.keyTable.length;", "-\t\tkeyTable[index] = key;", "-\t\tvalueTable[index] = value;", "+\t\tthis.keyTable[index] = key;", "+\t\tthis.valueTable[index] = value;"]}], "num": 11162}