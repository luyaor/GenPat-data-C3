{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83a973d70ec5d728a73a5d4b11ba3e90", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a648c5d43f231c591a379ac41e45a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "ba388ee53170dee91fb2402f317f8b352855c459", "commitAfterChange": "d043ef6776b1e3fad1bb618496ee2a48a9410e4b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t\t\t\t\t\tpublic boolean visit(LambdaExpression lambda, BlockScope dontCare)", "signatureAfterChange": "  \tpublic void throwsException(TypeBinding exceptionType)", "diff": ["-\t\t\t\t\t\t}", "-\t\t\t\t\t\tpublic boolean visit(LambdaExpression lambda, BlockScope dontCare) {", "-\t\t\t\t\t\t\treturn LambdaExpression.this == lambda;  // do not analyze any inner lambdas so as not to confuse returns from there.", "-\t\t\t\t\t\t}", "+", "+\tpublic void throwsException(TypeBinding exceptionType) {", "+\t\tif (this.expressionContext != INVOCATION_CONTEXT)", "+\t\t\treturn;", "+\t\tthis.original.throwsException = true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8dd7f1d0615308eb1f84e31704523b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "0aff312e862ea2612a7dc12424769373f661c347", "commitAfterChange": "4b5f1857591131b21f29472c6f4db936bddb2c67", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 42, "signatureBeforeChange": " \t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tprotected void simulateRestart() throws CoreException", "diff": ["-\t\t\tIWorkspaceRunnable compilation = new IWorkspaceRunnable() {", "-\t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "-\t\t\t\t\tmain.compile(Main.tokenize(cmdLine));", "-\t\t\t\t}", "+\t */", "+\tprotected void simulateRestart() throws CoreException {", "+\t\tJavaModelManager.doNotUse(); // reset the MANAGER singleton", "+\t\tJavaModelManager.getJavaModelManager().startup();", "+\t\tnew JavaCorePreferenceInitializer().initializeDefaultPreferences();", "+\t}"]}], "num": 53034}