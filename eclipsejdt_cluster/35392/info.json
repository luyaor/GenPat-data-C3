{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e01945bcb1c9c6457f40b186a80a090", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c7cbb295d35e604412075b8b0c9561", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "signatureAfterChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "diff": ["-\tif (matchBinary(pattern, info, null))", "-\t\tlocator.reportBinaryMemberDeclaration(null, binaryType, info, SearchMatch.A_ACCURATE);", "+\tif (matchBinary(pattern, info, null)) {", "+\t\tbinaryType = new ResolvedBinaryType((JavaElement) binaryType.getParent(), binaryType.getElementName(), binaryType.getKey());", "+\t\tlocator.reportBinaryMemberDeclaration(null, binaryType, null, info, SearchMatch.A_ACCURATE);", "+\t}", "-\t\t\t\t\t\tlocator.reportBinaryMemberDeclaration(null, methodHandle, info, SearchMatch.A_ACCURATE);", "+\t\t\t\t\t\tlocator.reportBinaryMemberDeclaration(null, methodHandle, method, info, SearchMatch.A_ACCURATE);", "-\t\t\t\t\t\tlocator.reportBinaryMemberDeclaration(null, fieldHandle, info, SearchMatch.A_ACCURATE);", "+\t\t\t\t\t\tlocator.reportBinaryMemberDeclaration(null, fieldHandle, field, info, SearchMatch.A_ACCURATE);", "-\t\t\t\tIMethod methodHandle = binaryType.getMethod(", "-\t\t\t\t\tnew String(name),", "-\t\t\t\t\tCharOperation.toStrings(Signature.getParameterTypes(convertClassFileFormat(method.getMethodDescriptor()))));", "-\t\t\t\tlocator.reportBinaryMemberDeclaration(null, methodHandle, info, accuracy);", "+\t\t\t\tString selector = new String(name);", "+\t\t\t\tString[] parameterTypes = CharOperation.toStrings(Signature.getParameterTypes(convertClassFileFormat(method.getMethodDescriptor())));", "+\t\t\t\tIMethod methodHandle = binaryType.getMethod(selector, parameterTypes);", "+\t\t\t\tmethodHandle = new ResolvedBinaryMethod(binaryType, selector, parameterTypes, methodHandle.getKey());", "+\t\t\t\tlocator.reportBinaryMemberDeclaration(null, methodHandle, null, info, accuracy);", "-\t\t\t\tIField fieldHandle = binaryType.getField(new String(field.getName()));", "-\t\t\t\tlocator.reportBinaryMemberDeclaration(null, fieldHandle, info, accuracy);", "+\t\t\t\tString fieldName = new String(field.getName());", "+\t\t\t\tIField fieldHandle = binaryType.getField(fieldName);", "+\t\t\t\tfieldHandle = new ResolvedBinaryField(binaryType, fieldName, fieldHandle.getKey());", "+\t\t\t\tlocator.reportBinaryMemberDeclaration(null, fieldHandle, null, info, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4bcab2a9bc4ed753fa4d4c0ace874c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "e46b33e3ec4773e86ecd50db1d6ae3ec644c0ac6", "commitAfterChange": "293a2feda0e1362ec063f3b01e3ad998fb23fb36", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void testBug303511() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void testBug303511() throws JavaModelException, CoreException", "diff": ["+\t\t\tchar[] charArray = source.toCharArray();", "+\t\t\tsource = new String(CharOperation.remove(charArray, '\\r'));", "+\t\t\tcharArray = encodedContents.toCharArray();", "+\t\t\tencodedContents = new String(CharOperation.remove(charArray, '\\r'));", "+\t\t\tcharArray = encodedContents.toCharArray();", "+\t\t\tencodedContents = new String(CharOperation.remove(charArray, '\\r'));", "+\t\t\tcharArray = source.toCharArray();", "+\t\t\tsource = new String(CharOperation.remove(charArray, '\\r'));", "+\t\t\tcharArray = encodedContents.toCharArray();", "+\t\t\tencodedContents = new String(CharOperation.remove(charArray, '\\r'));", "+\t\t\tcharArray = source.toCharArray();", "+\t\t\tsource = new String(CharOperation.remove(charArray, '\\r'));"]}], "num": 35392}