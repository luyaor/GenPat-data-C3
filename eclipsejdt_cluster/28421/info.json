{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e0c7d71f250df3a7306b8281b783644", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019db50a07824908523b4d3ac5a60993", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "ef1fa4748405f7f68a3b0c31fcd95f825ba17c29", "commitAfterChange": "3a0b65ddcf24695a9079f746a2a1a7b3a63b5916", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, InheritedNameHidesEnclosingName);", "+\t\t\t\treturn new ProblemMethodBinding(selector, methodBinding.parameters, InheritedNameHidesEnclosingName);", "-\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(selector, argumentTypes, methodBinding.declaringClass, NotVisible);", "+\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(selector, methodBinding.parameters, methodBinding.declaringClass, NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffefdf7c26587086c018968ff43c827", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tif (!areParametersAssignable(methodBinding.parameters, argumentTypes))", "+\t    MethodBinding compatibleMethod = computeCompatibleMethod(methodBinding, argumentTypes, invocationSite);", "+\t    if (compatibleMethod == null)", "+\t    methodBinding = compatibleMethod;", "-\t\t\treturn new ProblemMethodBinding(selector, methodBinding.parameters, methodBinding.declaringClass, NotVisible);", "+\t\t\treturn new ProblemMethodBinding(methodBinding, selector, methodBinding.parameters, NotVisible);"]}], "num": 28421}