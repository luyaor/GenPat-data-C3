{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c964a9561d3e67e193d7ca9f651ddb7b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3483e4cef2fff7ca81e3110a2b67013d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " public void test139()", "signatureAfterChange": " public void test139()", "diff": ["-\t\t\"2. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tMINUS {\\n\" +", "-\t\t\"\t^^^^^\\n\" +", "-\t\t\"The enum constant MINUS must define the abstract method eval(double, double)\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tabstract double eval2(double x, double y);\\n\" +", "-\t\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"The abstract method eval2 in type new X(){} can only be defined by an abstract class\\n\" +", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tMINUS {\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"The enum constant MINUS cannot define abstract methods\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tMINUS {\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"The enum constant MINUS must implement the abstract method eval(double, double)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38400e44d285d0208d4142a4ed165c8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests18.java", "commitBeforeChange": "641db1701cbce57a1e73a64de662de098370be6e", "commitAfterChange": "90c80d82832fd719fe60993fa6dd40696f0b049a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void _test425084() throws JavaModelException", "signatureAfterChange": " public void test425084() throws JavaModelException", "diff": ["-public void _test425084() throws JavaModelException {", "+public void test425084() throws JavaModelException {", "+\t\t\t\"       int tryit = 0;\\n\" +", "-\tassertResults(\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, null, null, [155, 158], 27}\\n\" +", "-                  \"StringParameter[LOCAL_VARIABLE_REF]{StringParameter, null, LX;, null, null, StringParameter, null, [155, 158], 27}\", requestor.getResults());", "+\tassertResults(\"tryit[LOCAL_VARIABLE_REF]{tryit, null, I, null, null, tryit, null, [99, 102], 27}\", requestor.getResults());"]}], "num": 36584}