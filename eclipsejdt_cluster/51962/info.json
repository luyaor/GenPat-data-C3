{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87296524541a406d650b5ef459f5dbb1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e1439b8592354496cc35c9dd9e8ed1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "900c13d17fd147c187a2b319111ff0c850c4ae89", "commitAfterChange": "f02cc00df615ce0df96d2675e50465c713b4b942", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString(StringBuffer buffer, int level)", "diff": ["-\t\tString className = getClass().getName();", "-\t\tclassName = className.substring(className.lastIndexOf('.')+1);", "-\t\tbuffer", "-\t\t\t.append(className)", "-\t\t\t.append(\":<name: \")\t//$NON-NLS-1$", "-\t\t\t.append(this.name)", "-\t\t\t.append(\">\");\t//$NON-NLS-1$", "-\t\tint indentLength = className.length()+1;", "-\t\tbuffer.append('\\n');", "-\t\tfor (int i=0; i<indentLength; i++) {", "-\t\t\tbuffer.append(' ');", "+", "+\tpublic String toString(StringBuffer buffer, int level) {", "+\t\t", "+\t\t// Compute the indentation at the given level", "+\t\tStringBuffer indentation = new StringBuffer();", "+\t\tfor (int i=0; i<level; i++) {", "+\t\t\tindentation.append('\\t');", "+\t\t", "+\t\t// First line is for class and name", "+\t\tbuffer.append(indentation);", "+\t\tbuffer", "+\t\t\t.append(\"<name: \")\t//$NON-NLS-1$", "+\t\t\t.append(this.name)", "+\t\t\t.append(\">\\n\");\t//$NON-NLS-1$", "+\t\t", "+\t\t// Line for depth and break indentation", "+\t\tbuffer.append(indentation);", "-\t\t\t.append('>');", "-\t\tif (this.enclosing != null) {", "-\t\t\tbuffer", "-\t\t\t\t.append(\"<enclosingName: \")\t//$NON-NLS-1$", "-\t\t\t\t.append(this.enclosing.name)", "-\t\t\t\t.append('>');", "-\t\t}", "-\t\tbuffer.append('\\n');", "+\t\t\t.append(\">\\n\"); //$NON-NLS-1$", "+\t\t// Line to display the location", "+\t\tbuffer.append(indentation);", "+\t\tbuffer", "+\t\t\t.append(\"<location=\")\t//$NON-NLS-1$", "+\t\t\t.append(this.location.toString())", "+\t\t\t.append(\">\\n\");\t//$NON-NLS-1$", "+", "+\t\t// Lines for fragments", "+\t\tbuffer", "+\t\t\t.append(indentation)", "+\t\t\t.append(\"<fragments:\\n\");\t//$NON-NLS-1$", "-\t\t\t\t.append(\" - fragment \")\t//$NON-NLS-1$", "+\t\t\t\t.append(indentation)", "+\t\t\t\t.append(\" - \")\t//$NON-NLS-1$", "-\t\tbuffer.append('\\n');", "+\t\tbuffer", "+\t\t\t.append(indentation)", "+\t\t\t.append(\">\\n\"); //$NON-NLS-1$", "+\t\t", "+\t\t// Display enclosing", "+\t\tif (this.enclosing != null && level >= 0) {", "+\t\t\tbuffer", "+\t\t\t\t.append(indentation)", "+\t\t\t\t.append(\"<enclosing assignement:\\n\");\t//$NON-NLS-1$", "+\t\t\tthis.enclosing.toString(buffer, level+1);", "+\t\t\tbuffer", "+\t\t\t\t.append(indentation)", "+\t\t\t\t.append(\">\\n\"); //$NON-NLS-1$", "+\t\t}", "+\t\t", "+\t\t// Return the result"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b42eb64dc5d6fd6dcaabd543f55f06c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "69a0951f3a888c5df17899fdf397965ef4e12088", "commitAfterChange": "a5b56b1fe034a82b1e8a36b9104b762cd960d94d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\tbuffer.append(Util.bind(\"disassembler.codeattributeheader\"));", "+\t\tbuffer.append(Util.bind(\"disassembler.codeattributeheader\")); //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.commentstart\"))", "+\t\t\t.append(Util.bind(\"disassembler.commentstart\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"classfileformat.maxStack\"))", "+\t\t\t.append(Util.bind(\"classfileformat.maxStack\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"classfileformat.maxLocals\"))", "+\t\t\t.append(Util.bind(\"classfileformat.maxLocals\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.commentend\"));", "+\t\t\t.append(Util.bind(\"disassembler.commentend\")); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"disassembler.exceptiontableheader\"));", "+\t\t\tbuffer.append(Util.bind(\"disassembler.exceptiontableheader\")); //$NON-NLS-1$", "-\t\t\t\t\t.append(\"[pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\", pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\"] -> \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablegoto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\" when : \");", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablewhen\")); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"disassembler.linenumberattributeheader\"));", "+\t\t\tbuffer.append(Util.bind(\"disassembler.linenumberattributeheader\")); //$NON-NLS-1$", "-\t\t\t\t\t.append(\"[pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\", line: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\"]\");", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableclose\")); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"disassembler.localvariabletableattributeheader\"));", "+\t\t\tbuffer.append(Util.bind(\"disassembler.localvariabletableattributeheader\")); //$NON-NLS-1$", "-\t\t\t\t\t.append(\"[pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\", pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\"] local: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\" index: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\" type: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")) //$NON-NLS-1$"]}], "num": 51962}