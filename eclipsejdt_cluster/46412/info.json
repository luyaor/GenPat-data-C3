{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3ce0f24c8e2faff1b33d1f78e779367", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "179395014e874d04b8ac3d80081a295b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void testBug112346()", "signatureAfterChange": " \tpublic void testBug112346()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in Test.java (at line 7)\\n\" +", "-\t\t\t\"\tT field;\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" +", "-\t\t\t\"\tT foo() { return null; }\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f0123a518c12dee4e00355898b092f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void testBug112346()", "signatureAfterChange": " \tpublic void testBug112346()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in Test.java (at line 7)\\n\" +", "-\t\t\t\"\tT field;\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" +", "-\t\t\t\"\tT foo() { return null; }\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43cda03721db183e9098f5e59f802b3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 346, "methodNumberAfterChange": 346, "signatureBeforeChange": " \tpublic void test342()", "signatureAfterChange": " \tpublic void test342()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in Test.java (at line 34)\\n\" + ", "-\t\t\t\"\tMyClass<String> bar = MyClass.factoryMakeMyClass(\\\"hi\\\");\\n\" + ", "-\t\t\t\"\t                      ^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: MyClass is a raw type. References to generic type MyClass<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in Test.java (at line 35)\\n\" + ", "-\t\t\t\"\tMyClass<String> bar2 = MyClass.<String>factoryMakeMyClass(\\\"hi\\\");\\n\" + ", "-\t\t\t\"\t                       ^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: MyClass is a raw type. References to generic type MyClass<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5acea16300293f5cc2a442a465793d70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "6d9cd9b246f8b8740f4a501085a32633b2b6c2af", "commitAfterChange": "470afdfff602b441f9a45a7d903230534423c9ca", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "     public void test111()", "signatureAfterChange": "     public void test111()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 34)\\n\" + ", "-\t\t\t\"\tc = c.getSuperclass();\\n\" + ", "-\t\t\t\"\t    ^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The method getSuperclass() belongs to the raw type Class. References to generic type Class<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 43)\\n\" + ", "-\t\t\t\"\tc = c.getSuperclass();\\n\" + ", "-\t\t\t\"\t    ^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The method getSuperclass() belongs to the raw type Class. References to generic type Class<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6452451a430b2d46c0bcd38461904974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void testBug112346()", "signatureAfterChange": " \tpublic void testBug112346()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in Test.java (at line 7)\\n\" +", "-\t\t\t\"\tT field;\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" +", "-\t\t\t\"\tT foo() { return null; }\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1e171ba78ec1c29cea1eac9bfae301", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "13badd688be686ebb5ba17a06b5117d9f7db22e6", "commitAfterChange": "678bd63c535ed58308236db21b34dad57015766d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test012() throws Exception", "signatureAfterChange": " \tpublic void test012() throws Exception", "diff": ["-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tObject o2 = @Marker int @Marker[] [] @Marker[].class;\\n\" + ", "-\t\t\t\t\"\t                        ^^^^^^^\\n\" + ", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tObject o2 = @Marker int @Marker[] [] @Marker[].class;\\n\" + ", "-\t\t\t\t\"\t                                     ^^^^^^^\\n\" + ", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2219741e4deb646f0f12d77e0429960", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void testBug112346()", "signatureAfterChange": " \tpublic void testBug112346()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in Test.java (at line 7)\\n\" +", "-\t\t\t\"\tT field;\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" +", "-\t\t\t\"\tT foo() { return null; }\\n\" +", "-\t\t\t\"\t^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea75bb5c2d447b38fe2819315097d915", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1064, "methodNumberAfterChange": 1064, "signatureBeforeChange": " public void test1035()", "signatureAfterChange": " public void test1035()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in ComparableComparator.java (at line 25)\\n\" + ", "-\t\t\"\tstatic Comparator BAR = ComparableComparator.bar();//0\\n\" + ", "-\t\t\"\t                                             ^^^\\n\" + ", "-\t\t\"Bound mismatch: The generic method bar() of type ComparableComparator<T> is not applicable for the arguments (). The inferred type Comparable<Comparable<M>> is not a valid substitute for the bounded parameter <M extends Comparable<M>>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in ComparableComparator.java (at line 27)\\n\" + ", "-\t\t\"\tstatic Object BAR2 = ComparableComparator.bar();//1a\\n\" + ", "-\t\t\"\t                                          ^^^\\n\" + ", "-\t\t\"Bound mismatch: The generic method bar() of type ComparableComparator<T> is not applicable for the arguments (). The inferred type Comparable<Comparable<M>> is not a valid substitute for the bounded parameter <M extends Comparable<M>>\\n\" + "]}], "num": 46412}