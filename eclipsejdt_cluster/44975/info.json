{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "485ede7a357a6a3b71fe46cb905f15b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cfe4feff4d720e0a1bc769a11c7b92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/BatchImageBuilder.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r protected void addAllSourceFiles(final ArrayList locations, final ArrayList typeNames) throws CoreException", "signatureAfterChange": "\r \r protected void addAllSourceFiles(final ArrayList locations, final ArrayList typeNames) throws CoreException", "diff": ["-\t\tfinal int count = sourceFolders[i].getFullPath().segmentCount();\r", "+\t\tfinal int srcFolderLength = sourceFolders[i].getLocation().toString().length() + 1; // add the trailing /\r", "-\t\t\t\t\t\t\tlocations.add(resource.getLocation().toString());\r", "-\t\t\t\t\t\t\ttypeNames.add(\r", "-\t\t\t\t\t\t\t\tresource.getFullPath().removeFirstSegments(count).removeFileExtension().toString());\r", "+\t\t\t\t\t\t\tString sourceLocation = resource.getLocation().toString();\r", "+\t\t\t\t\t\t\tlocations.add(sourceLocation);\r", "+\t\t\t\t\t\t\ttypeNames.add(sourceLocation.substring(srcFolderLength, sourceLocation.length() - 5)); // length of .java\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb87658ec463b3f58f839089bebc526e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "5300a6ba202b0200d2512436bcaf76124a4563c2", "commitAfterChange": "85b64eacf9ea5acb49711ebb1d6dd04ff84f8c77", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private void buildTypeBindings(final char[] source)", "signatureAfterChange": "\r private void buildTypeBindings(final char[] source)", "diff": ["-\t// get main type name\r", "-\tString fileName = this.resource.getFullPath().lastSegment();\r", "-\t// remove extension \".java\"\r", "-\tfinal char[] mainTypeName = fileName.substring(0, fileName.length()-5).toCharArray(); \r", "-\r", "+\t\t// get file name\r", "+\t\tString fileName = this.resource.getFullPath().lastSegment();\r", "+\t\t// get main type name\r", "+\t\tchar[] mainTypeName = fileName.substring(0, fileName.length()-5).toCharArray(); \r", "-\t\t\t\treturn PotentialMatch.this.resource.getName().toCharArray();\r", "+\t\t\t\treturn EMPTY_FILE_NAME; // not used\r", "-\t\t\t\treturn mainTypeName;\r", "+\t\t\t\treturn null; // don't need to check if main type name == compilation unit name\r"]}], "num": 44975}