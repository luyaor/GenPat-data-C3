{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08045b2f2d63829a33f5965e9bde13fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89fc30f0599df35c3eb05f79052ce4df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "2b517264b2aba8f263e96f0bb8dc3d5ae288c823", "commitAfterChange": "1db6cbd08071fd387d5c2eab07da46a873d0aaff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tif (this.binding.declaringClass.isMemberType() && !this.binding.declaringClass.isStatic()) {", "+\t\t// allocating a non-static member type without an enclosing instance of parent type", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=335845", "+\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e51e82d63fca43308cb1e5b716dc641", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "a727125e8febab4dfedf84454a394010a0adb383", "commitAfterChange": "9c0f466d3a1091abcce132530971b41684c74f20", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t} else {", "+\t\t\tif (this.binding.declaringClass.superclass().isMemberType() && !this.binding.declaringClass.superclass().isStatic()) {", "+\t\t\t\t// creating an anonymous type of a non-static member type without an enclosing instance of parent type", "+\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t}"]}], "num": 37800}