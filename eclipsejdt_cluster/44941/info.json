{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9348cb36eeb603dd1d780d2120382f2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83ec905ae5a679bb01190cc17a5ee6d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t// compare actual null-status against parameter annotations of the called method:", "-\t\t\tint nullStatus = this.arguments[i].nullStatus(flowInfo);", "-\t\t\tif (nullStatus != FlowInfo.NON_NULL ", "-\t\t\t\t\t&& this.binding.parameterNonNullness != null", "-\t\t\t\t\t&& this.binding.parameterNonNullness[i].booleanValue()) // if @NonNull is required", "-\t\t\t{", "-\t\t\t\tchar[][] annotationName = currentScope.environment().globalOptions.nonNullAnnotationName;", "-\t\t\t\tcurrentScope.problemReporter().possiblyNullToNonNullParameter(this.arguments[i], nullStatus, annotationName[annotationName.length-1]);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0d951391a6927474191182a8e88f23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t}", "-\t\tif (this.expression.nullStatus(flowInfo) != FlowInfo.NON_NULL) {", "-\t\t\t// if we can't prove non-null check against declared null-ness of the enclosing method:", "-\t\t\tAbstractMethodDeclaration referenceMethod = currentScope.methodScope().referenceMethod();", "-\t\t\tif (referenceMethod != null) {", "-\t\t\t\tMethodBinding method = referenceMethod.binding;", "-\t\t\t\tif ((method.tagBits & TagBits.AnnotationNonNull) != 0) {", "-\t\t\t\t\tchar[][] annotationName = currentScope.environment().globalOptions.nonNullAnnotationName;", "-\t\t\t\t\tcurrentScope.problemReporter().possiblyNullFromNonNullMethod(this, this.expression.nullStatus(flowInfo), ", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t annotationName[annotationName.length-1]);", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6cb3f0501e1bc747d3d4025f86620d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String debugName()", "signatureAfterChange": " \tpublic String debugName()", "diff": ["-\t    if (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "-\t    \t// restore applied null annotation from tagBits:", "-\t\t    if ((this.tagBits & TagBits.AnnotationNonNull) != 0) {", "-\t\t    \tchar[][] nonNullAnnotationName = environment().getNonNullAnnotationName();", "-\t\t\t\tnameBuffer.append('@').append(nonNullAnnotationName[nonNullAnnotationName.length-1]).append(' ');", "-\t\t    } else if ((this.tagBits & TagBits.AnnotationNullable) != 0) {", "-\t\t    \tchar[][] nullableAnnotationName = environment().getNullableAnnotationName();", "-\t\t\t\tnameBuffer.append('@').append(nullableAnnotationName[nullableAnnotationName.length-1]).append(' ');", "-\t\t    }", "-\t    }", "+\t    appendNullAnnotation(nameBuffer);"]}], "num": 44941}