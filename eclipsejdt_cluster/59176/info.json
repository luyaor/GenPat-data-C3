{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a0c916e405b109bfb7ae1bbc108fdf1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665352fd8a962d9e4146267d8c839ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "28e589c8bd8ca480293dacfafca0e094a1d48845", "commitAfterChange": "1cb4702a587b6ba044cf9cf0c7f733e4ce72e71e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "diff": ["+\t\tSimpleSetOfCharArray foundNames = new SimpleSetOfCharArray();", "-\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l],  k == 0, l == 0, internalPrefix.length - j, requestor);", "-\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\tif (!foundNames.includes(suffixName)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l],  k == 0, l == 0, internalPrefix.length - j, requestor);", "+\t\t\t\t\t\t\t\t\t\t\t\tfoundNames.add(suffixName);", "+\t\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l], k == 0, l == 0, internalPrefix.length - j, requestor);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tif (!foundNames.includes(suffixName)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l], k == 0, l == 0, internalPrefix.length - j, requestor);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfoundNames.add(suffixName);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d21a68ebbd76b60529476a0e32bef66b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f13fdcb2784e02f7feccade63189561cf467d9fb", "commitAfterChange": "c7f8e1325e711fa28068b6283dbd3a449790332b", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "signatureAfterChange": "  \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "diff": ["+\t\t\t/* Below 1.5, discard any generics we have left in for the method verifier's benefit, (so it", "+\t\t\t   can detect method overriding properly in the presence of generic super types.) This is so", "+\t\t\t   as to allow us to determine whether we have been handed an acceptable method in 1.4 terms", "+\t\t\t   without all the 1.5isms below kicking in and spoiling the party.", "+\t\t\t   See https://bugs.eclipse.org/bugs/show_bug.cgi?id=331446", "+\t\t\t*/", "+\t\t\tboolean applyErasure =  environment().globalOptions.sourceLevel < ClassFileConstants.JDK1_5;", "-\t\t\t\tTypeBinding oneParam = oneParams[i];", "-\t\t\t\tTypeBinding twoParam = twoParams[i];", "+\t\t\t\tTypeBinding oneParam = applyErasure ? oneParams[i].erasure() : oneParams[i];", "+\t\t\t\tTypeBinding twoParam = applyErasure ? twoParams[i].erasure() : twoParams[i];", "-\t\t\t\t\tTypeBinding originalTwoParam = two.original().parameters[i].leafComponentType();", "+\t\t\t\t\tTypeBinding leafComponentType = two.original().parameters[i].leafComponentType();", "+\t\t\t\t\tTypeBinding originalTwoParam = applyErasure ? leafComponentType.erasure() : leafComponentType; "]}], "num": 59176}