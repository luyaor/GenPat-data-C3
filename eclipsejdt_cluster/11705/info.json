{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84dca3143d003150c1303391d7423c89", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d624dc18d5ba3eb8edf6eb825877c8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d50f599c69eb795e78c16e3acf0ec69b29313628", "commitAfterChange": "2d29c79891a705ebdda86325f5eda79a45a41b75", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] tokens,\r \t\tIJavaElement element,\r \t\tint[] accuracies)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] tokens,\r \t\tIJavaElement element,\r \t\tint[] accuracies)\r \t\tthrows CoreException", "diff": ["-\t\t\t\t\t&& !(equals = CharOperation.equals(tokens[i++], currentTokenSource))) {\r", "+\t\t\t\t\t&& !(equals = this.pattern.matchesName(tokens[i++], currentTokenSource))) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590730d0531532fbc9a1befa8e9495a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d50f599c69eb795e78c16e3acf0ec69b29313628", "commitAfterChange": "2d29c79891a705ebdda86325f5eda79a45a41b75", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint accuracy)\r \t\tthrows CoreException", "diff": ["-\t\t\t\t\t&& !(equals = CharOperation.equals(qualifiedName[i++], currentTokenSource))) {\r", "+\t\t\t\t\t&& !(equals = this.pattern.matchesName(qualifiedName[i++], currentTokenSource))) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97ea9a7dd5b7be43573f9ece717b1acc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "e46d27f78c861460763411dc3c7d80ec28005dd0", "commitAfterChange": "114d487223299fbb39233b9fa5b4135ee3c694c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tcodeStream.invokeDynamic(invokeDynamicNumber, (this.shouldCaptureInstance ? 1 : 0) + this.outerLocalVariablesSlotSize, 1, TypeConstants.ANONYMOUS_METHOD, signature.toString().toCharArray());", "+\t\tcodeStream.invokeDynamic(invokeDynamicNumber, (this.shouldCaptureInstance ? 1 : 0) + this.outerLocalVariablesSlotSize, 1, this.descriptor.selector, signature.toString().toCharArray());"]}], "num": 11705}