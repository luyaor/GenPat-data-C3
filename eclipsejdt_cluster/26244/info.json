{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ca2ed1e9596b99eb4a6c5f2ab0dd038", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53cb1e3aba669c62291ffd4dac4fbda6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tprivate void findImportsOfStaticMethdods(char[] methodName, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void findImportsOfStaticMethdods(char[] methodName, ReferenceBinding ref)", "diff": ["-\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\t\tboolean hasRestrictedAccess = method.declaringClass.hasRestrictedAccess();", "-//\t\t\t\tif (this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\t", "-\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82ec7657c6b88b8072c6a10797123042", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["-\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\tboolean hasRestrictedAccess = method.declaringClass.hasRestrictedAccess();", "-//\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\t", "-\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}], "num": 26244}