{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2eabe241b6c1c4e0662ea561a8efbce7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d12d9bd711f84d75873718af7be9c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObjectToInt.java", "commitBeforeChange": "f66ad7c89d5efefebf4bda51f9089ef887e9d108", "commitAfterChange": "97459ae998e10691456e7e2a3002f99ff1d092bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tint value;", "-\t\tfor (int i = 0, length = valueTable.length; i < length; i++)", "-\t\t\tif ((value = valueTable[i]) != -1)", "-\t\t\t\ts += keyTable[i] + \" -> \" + value + \"\\n\"; \t//$NON-NLS-2$ //$NON-NLS-1$", "+\t\tObject key;", "+\t\tfor (int i = 0, length = this.keyTable.length; i < length; i++)", "+\t\t\tif ((key = this.keyTable[i]) != null)", "+\t\t\t\ts += key + \" -> \" + this.valueTable[i] + \"\\n\"; \t//$NON-NLS-2$ //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c212280992564c53cf0e3e606225a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/WordEntryHashedArray.java", "commitBeforeChange": "0050ce1e7f4e1aa09d2a0680eb2a656c745b9584", "commitAfterChange": "c557f8e28df32d4f3742c65d1f4547b281353194", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  public String toString()", "diff": ["-\tWordEntry entry;", "-\tfor (int i = 0, length = elements.length; i < length; i++)", "-\t\tif ((entry = elements[i]) != null)", "-\t\t\ts += entry.toString() + \"\\n\"; \t//$NON-NLS-1$", "+\tWordEntry[] entries = asArray();", "+\tfor (int i = 0, length = entries.length; i < length; i++)", "+\t\ts += entries[i].toString() + \"\\n\"; \t//$NON-NLS-1$"]}], "num": 45694}