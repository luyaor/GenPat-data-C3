{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2583c8ec0dfffdd3ff0771df761f812c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02765ff613b86ac38d31c0ecd420db05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "b02ef903578f41e659cbb04f9863bd51747ead57", "commitAfterChange": "8705ef991c725584b4e12ac387833b82c80cbc08", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "signatureAfterChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "diff": ["-\t\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "-\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "-\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t\ttry {", "+\t\t\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "+\t\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "+\t\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t\t} catch(JavaModelException e) {", "+\t\t\t\t// simple project may not find its namelookup, simply ignore working copies (41583)", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92960122d91d5b5714209887737de34e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "7a1dacef9de595b353accf1696d435bf269b527f", "commitAfterChange": "b14ecb9470662b23addd99b5801b067f2e1d219f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic Object getElementInfo() throws JavaModelException", "signatureAfterChange": " \tpublic Object getElementInfo() throws JavaModelException", "diff": ["-\t\t\tproject.getResolvedClasspath(true); // trigger all possible container/variable initialization outside the model lock", "+\t\t\ttry {", "+\t\t\t\tproject.getResolvedClasspath(true); // trigger all possible container/variable initialization outside the model lock", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t// project is not accessible or is not a java project", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7dc0aae16ec31658bf9cbd1da367012", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "38a03f4a6ca5ac226800e839ace067011b0c8e36", "commitAfterChange": "401741901c1ade4b3d799ecafbb31ae68193cd46", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public String[] getParameterNames() throws JavaModelException", "signatureAfterChange": " public String[] getParameterNames() throws JavaModelException", "diff": ["- \t\t\tjavadocContents = extractJavadoc(declaringType, javadocContents);", "+ \t\t\ttry {", "+ \t\t\t\tjavadocContents = extractJavadoc(declaringType, javadocContents);", "+ \t\t\t} catch(JavaModelException e) {", "+ \t\t\t\t// ignore", "+ \t\t\t}"]}], "num": 62179}