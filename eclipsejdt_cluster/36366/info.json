{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02552c6389e2d843f554ecf76b01f430", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f5ed4443b999f6f0c7d3df44348d96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b26a664ac93cb33d6cf50930ea25f3388ced39d8", "commitAfterChange": "2253e00cb54fb5875d4cee131629e073f4dfe64f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tfindMemberTypes(", "-\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "-\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\tnew ObjectVector());", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif(this.completionToken.length == 0 &&", "+\t\t\t\t\t\t\t\t\t(astNodeParent instanceof ParameterizedSingleTypeReference ||", "+\t\t\t\t\t\t\t\t\t\t\tastNodeParent instanceof ParameterizedQualifiedTypeReference)) {", "+\t\t\t\t\t\t\t\tthis.setSourceRange(astNode.sourceStart, astNode.sourceStart - 1, false);", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tfindParameterizedType((TypeReference)astNodeParent);", "+\t\t\t\t\t\t\t} else { ", "+\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.findAnnotationAttributes(this.completionToken, annotation.memberValuePairs(), (ReferenceBinding)annotation.resolvedType);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(memberValuePairs == null || memberValuePairs.length == 0) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(annotation.resolvedType instanceof ReferenceBinding) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMethodBinding[] methodBindings =", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t((ReferenceBinding)annotation.resolvedType).availableMethods();", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(methodBindings != null &&", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethodBindings.length == 1 &&", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCharOperation.equals(methodBindings[0].selector, VALUE)) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(this.expectedTypesPtr > -1 && this.expectedTypes[0].isAnnotationType()) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariablesAndMethods(", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFakeInvocationSite,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsideTypeAnnotation,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// can be the start of a qualified type name", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(this.completionToken.length == 0) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setSourceRange(astNode.sourceStart, astNode.sourceStart - 1, false);", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindAnnotationReference(annotation.type);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.findAnnotationAttributes(this.completionToken, annotation.memberValuePairs(), (ReferenceBinding)annotation.resolvedType);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(memberValuePairs == null || memberValuePairs.length == 0) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(annotation.resolvedType instanceof ReferenceBinding) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMethodBinding[] methodBindings =", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t((ReferenceBinding)annotation.resolvedType).availableMethods();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(methodBindings != null &&", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethodBindings.length == 1 &&", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCharOperation.equals(methodBindings[0].selector, VALUE)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(this.expectedTypesPtr > -1 && this.expectedTypes[0].isAnnotationType()) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariablesAndMethods(", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFakeInvocationSite,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsideTypeAnnotation,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// can be the start of a qualified type name", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff2e7e6a8ee3434039c3e81c30e0f489", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f6481dd9693bf03828e045ffe5a565f52edfa2f0", "commitAfterChange": "d05cd9265b556f2a2d32057ce8a58ca51378188a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\tif (!this.requestor.isIgnored(CompletionProposal.ANNOTATION_ATTRIBUTE_REF)) {", "-\t\t\t\tCompletionOnMemberValueName memberValuePair = (CompletionOnMemberValueName) astNode;", "-\t\t\t\tAnnotation annotation = (Annotation) astNodeParent;", "-\t\t\t\t", "-\t\t\t\tthis.completionToken = memberValuePair.name;", "-\t\t\t\t", "-\t\t\t\tif (this.completionToken.length == 0) {", "+\t\t\tCompletionOnMemberValueName memberValuePair = (CompletionOnMemberValueName) astNode;", "+\t\t\tAnnotation annotation = (Annotation) astNodeParent;", "+\t\t\t", "+\t\t\tthis.completionToken = memberValuePair.name;", "+\t\t\t", "+\t\t\tif (this.completionToken.length == 0) {", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t} else {", "-\t\t\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "+\t\t\t\tif (!this.requestor.isIgnored(CompletionProposal.ANNOTATION_ATTRIBUTE_REF)) {", "-\t\t\t\t\tif (memberValuePairs == null || memberValuePairs.length == 0) {", "-\t\t\t\t\t\tif (annotation.resolvedType instanceof ReferenceBinding) {", "-\t\t\t\t\t\t\tMethodBinding[] methodBindings =", "-\t\t\t\t\t\t\t\t((ReferenceBinding)annotation.resolvedType).availableMethods();", "-\t\t\t\t\t\t\tif (methodBindings != null &&", "-\t\t\t\t\t\t\t\t\tmethodBindings.length == 1 &&", "-\t\t\t\t\t\t\t\t\tCharOperation.equals(methodBindings[0].selector, VALUE)) {", "-\t\t\t\t\t\t\t\tif (this.expectedTypesPtr > -1 && this.expectedTypes[0].isAnnotationType()) {", "-\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tfindVariablesAndMethods(", "-\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tFakeInvocationSite,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tinsideTypeAnnotation,", "-\t\t\t\t\t\t\t\t\t\ttrue);", "-\t\t\t\t\t\t\t\t\t// can be the start of a qualified type name", "-\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (memberValuePairs == null || memberValuePairs.length == 0) {", "+\t\t\t\t\tif (annotation.resolvedType instanceof ReferenceBinding) {", "+\t\t\t\t\t\tMethodBinding[] methodBindings =", "+\t\t\t\t\t\t\t((ReferenceBinding)annotation.resolvedType).availableMethods();", "+\t\t\t\t\t\tif (methodBindings != null &&", "+\t\t\t\t\t\t\t\tmethodBindings.length == 1 &&", "+\t\t\t\t\t\t\t\tCharOperation.equals(methodBindings[0].selector, VALUE)) {", "+\t\t\t\t\t\t\tif (this.expectedTypesPtr > -1 && this.expectedTypes[0].isAnnotationType()) {", "+\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfindVariablesAndMethods(", "+\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\tFakeInvocationSite,", "+\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\tinsideTypeAnnotation,", "+\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t// can be the start of a qualified type name", "+\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);"]}], "num": 36366}