{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9c106c6d1e91a0c5f5e8f46f8c350ea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "309cd0b3cfc5b67cb37da123a2c4622d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "811211307ab14f45a7df0f88606152c8c44cb7c9", "commitAfterChange": "baff3cc3f6dc715cc4e693e6e7978830accacee3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public EntryResult[] query(char[][] categories, char[] key, int matchRule) throws IOException", "signatureAfterChange": " public EntryResult[] query(char[][] categories, char[] key, int matchRule) throws IOException", "diff": ["+\tint rule = matchRule & MATCH_RULE_INDEX_MASK;", "-\t\tresults = this.diskIndex.addQueryResults(categories, key, matchRule, this.memoryIndex);", "-\t\tthis.memoryIndex.addQueryResults(categories, key, matchRule, results);", "+\t\tresults = this.diskIndex.addQueryResults(categories, key, rule, this.memoryIndex);", "+\t\tthis.memoryIndex.addQueryResults(categories, key, rule, results);", "-\t\tresults = this.diskIndex.addQueryResults(categories, key, matchRule, null);", "+\t\tresults = this.diskIndex.addQueryResults(categories, key, rule, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c898dd294adc85f6e2484cc0cb39ac5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "c3ad34ec44b228feb09e91ff5ac00fc774236d05", "commitAfterChange": "1d56e6175009cdfe398560b7ba099bb7669a1ef0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "diff": ["-\tHashtableOfObject results = new HashtableOfObject(13);", "-\tif (this.categoryOffsets == null)", "-\t\treturn results; // file is empty", "+\tif (this.categoryOffsets == null) return null; // file is empty", "+\tHashtableOfObject results = null; // initialized if needed", "-\t\t\t\taddQueryResult(results, key, wordsToDocNumbers, memoryIndex);", "+\t\t\t\tresults = addQueryResult(results, key, wordsToDocNumbers, memoryIndex);", "-\t\t\t\t\t\taddQueryResult(results, word, wordsToDocNumbers, memoryIndex);", "+\t\t\t\t\t\tresults = addQueryResult(results, word, wordsToDocNumbers, memoryIndex);", "+", "+\tif (results == null) return null;"]}], "num": 12111}