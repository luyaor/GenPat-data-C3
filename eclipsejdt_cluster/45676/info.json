{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42c51c6bcf3fcb9f8237d6359cc5564f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d51dd8d496f6999582709b244e56e60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "17b1cbd42bc737b47c9ebf5ceda98737740d0825", "commitAfterChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "diff": ["-", "-\t\t\t\t\t&& isEqual(typeBinding.leafComponentType(), typeBinding2.leafComponentType());", "+\t\t\t\t\t&& isEqual(typeBinding.leafComponentType(), typeBinding2.leafComponentType(), checkTypeVariables);", "+\t\t\t\tif (checkTypeVariables) {", "+\t\t\t\t\tif (!isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments, false)) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers)", "-\t\t\t\t\t&& isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments);", "+\t\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers);", "-\t\t\t\t\tif (!isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables())) {", "+\t\t\t\t\tif (!isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables(), false)) {", "+\t\t\t} else if (referenceBinding instanceof TypeVariableBinding) {", "+\t\t\t\tif (!(referenceBinding2 instanceof TypeVariableBinding)) {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) referenceBinding;", "+\t\t\t\tTypeVariableBinding typeVariableBinding2 = (TypeVariableBinding) referenceBinding2;", "+\t\t\t\tif (checkTypeVariables) {", "+\t\t\t\t\treturn CharOperation.equals(typeVariableBinding.sourceName, typeVariableBinding2.sourceName)", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.declaringElement, typeVariableBinding2.declaringElement, false)", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.superclass, typeVariableBinding2.superclass, false)", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.superInterfaces, typeVariableBinding2.superInterfaces, false);", "+\t\t\t\t} else {", "+\t\t\t\t\treturn CharOperation.equals(typeVariableBinding.sourceName, typeVariableBinding2.sourceName);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3133b01c6a4976c7ad85b48295e76835", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t SourceTypeBinding getGenericTypeBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver)", "signatureAfterChange": " \t SourceTypeBinding getGenericTypeBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver)", "diff": ["+\t  */", "+\t SourceTypeBinding getGenericTypeBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver) {", "+\t \tTypeVariableBinding[] typeVariableBindings = typeBinding.typeVariables();", "+\t \tfor (int i = 0, length = typeVariableBindings.length; i < length; i++) {", "+\t\t\tTypeVariableBinding typeVariableBinding = typeVariableBindings[i];", "+\t\t\tif (this.scanner.nextToken() != BindingKeyScanner.TYPE)", "+\t\t\t\treturn null;", "+\t\t \tchar[] typeVariableName = this.scanner.getTokenSource();", "+\t\t\tif (!CharOperation.equals(typeVariableName, typeVariableBinding.sourceName()))", "+\t\t\t\treturn null;", "+\t\t}", "+\t \treturn typeBinding;", "-\t  */", "-\t SourceTypeBinding getGenericTypeBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver) {", "-\t \tTypeVariableBinding[] typeVariableBindings = typeBinding.typeVariables();", "-\t \tfor (int i = 0, length = typeVariableBindings.length; i < length; i++) {", "-\t\t\tTypeVariableBinding typeVariableBinding = typeVariableBindings[i];", "-\t\t \tchar[] typeVariableName = this.scanner.getTokenSource();", "-\t\t\tif (!CharOperation.equals(typeVariableName, typeVariableBinding.sourceName()))", "-\t\t\t\treturn null;", "-\t \t\treset();", "-\t \t\tBinding superclass = getCompilerBinding(resolver);", "-\t \t\tif (superclass != typeVariableBinding.superclass()) ", "-\t \t\t\treturn null;", "-\t \t\tReferenceBinding[] superinterfaces = typeVariableBinding.superInterfaces();", "-\t \t\tfor (int j = 0, superinterfacesLength = superinterfaces.length; j < superinterfacesLength; j++) {", "-\t\t \t\treset();", "-\t\t \t\tBinding superinterface = getCompilerBinding(resolver);", "-\t\t \t\tif (superinterface != superinterfaces[j]) ", "-\t\t \t\t\treturn null;", "-\t\t\t}", "-\t\t}", "-\t \treturn typeBinding;", "-\t }"]}], "num": 45676}