{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "570ef00d7c32753cb781f1eb6fa17663", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a457a3855f1ee867bd271c05e8a4620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "commitAfterChange": "5633218f57a8f96a181a737ead7a991d28ce84d5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "diff": ["-\t\t", "-\t\t// record initializations which were performed at the return point", "-\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo);", "+", "+\t\tif (!flowInfo.isReachable()) return; ", "+\t\tif (initsOnReturn == FlowInfo.DEAD_END) {", "+\t\t\tinitsOnReturn = flowInfo.copy().unconditionalInits();", "+\t\t} else {", "+\t\t\tinitsOnReturn.mergedWith(flowInfo.unconditionalInits());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92a85d1190e9b545affcf9057bff4b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext.java", "commitBeforeChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "commitAfterChange": "5633218f57a8f96a181a737ead7a991d28ce84d5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "diff": ["-\t\t// record initializations which were performed at the return point", "-\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo);", "+", "+\t\tif (!flowInfo.isReachable()) return; ", "+\t\tif (initsOnReturn == FlowInfo.DEAD_END) {", "+\t\t\tinitsOnReturn = flowInfo.copy().unconditionalInits();", "+\t\t} else {", "+\t\t\tinitsOnReturn.mergedWith(flowInfo.unconditionalInits());", "+\t\t}"]}], "num": 29220}