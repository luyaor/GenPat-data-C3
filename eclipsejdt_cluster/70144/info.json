{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76b324f085e0576599efbfcea7311d6c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "519c0ef9b78dcd1c19f90cd9a0746081", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "df7c7252bb25d1124375e0f48ecdac3fe62712d0", "commitAfterChange": "09d1cab6d5d55f95071846ff745af07bf452eb69", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "signatureAfterChange": " public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "diff": ["+\t\t\tint amountOfWorkForSubtypes = focusIsObject ? 5 : 70; // percentage of work needed to get possible subtypes", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, focusIsObject ? 5 : 95);", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, amountOfWorkForSubtypes);", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, focusIsObject ? 95 : 5);", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 100 - amountOfWorkForSubtypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7dc0a895cc51c6479c9008ae97631f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "6bb02c884b60fa92d99b3505c82c23af047d9221", "commitAfterChange": "74beeee794c904b249a24cd671c8ca981d7e3ee7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "signatureAfterChange": " public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "diff": ["+\t\t\t// Note by construction there always is a focus type here", "+\t\t\tboolean focusIsObject = getType().getElementName().equals(new String(IIndexConstants.OBJECT));", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 95);", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, focusIsObject ? 5 : 95);", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 5);", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, focusIsObject ? 95 : 5);"]}], "num": 70144}