{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f0f379308681b21a6bee24a1d24ac9f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e5ec5741865192f00501abb56b3bcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "7e25d07b27d1afaa960ac306cc097ef3fadbd3af", "commitAfterChange": "80cc85114a1a71eb1ccf627f315767a1b7408d18", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tprivate IClasspathContainer initializeAllContainers(IJavaProject javaProjectToInit, IPath containerToInit) throws JavaModelException", "signatureAfterChange": " \tprivate IClasspathContainer initializeAllContainers(IJavaProject javaProjectToInit, IPath containerToInit) throws JavaModelException", "diff": ["+\t\t\t/* TODO (frederic) put back when JDT/UI dummy project will be thrown away...", "+\t\t\t * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=97524", "+\t\t\t *", "+\t\t\t*/", "+\t\t// TODO (frederic) remove following block when JDT/UI dummy project will be thrown away...", "+\t\tHashSet containerPaths = (HashSet) allContainerPaths.get(javaProjectToInit);", "+\t\tif (containerPaths == null) {", "+\t\t\tcontainerPaths = new HashSet();", "+\t\t\tallContainerPaths.put(javaProjectToInit, containerPaths);", "+\t\t}", "+\t\tcontainerPaths.add(containerToInit);", "+\t\t// end block"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b3deddd4ef60a11143359c4f903229", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "f881f7f3af831f777efbcae1d912f604e776b198", "commitAfterChange": "af8ddf1224acdd73d35eff5f86a6b2b80c9a4304", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate ArrayList determineOpenablesInRegion(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate HashMap determineOpenablesInRegion(IProgressMonitor monitor)", "diff": ["-\tprivate ArrayList determineOpenablesInRegion(IProgressMonitor monitor) {", "+\tprivate HashMap determineOpenablesInRegion(IProgressMonitor monitor) {", "-\t\t\tArrayList openables = new ArrayList();", "+\t\t\tHashMap allOpenables = new HashMap();", "+\t\t\t\tIJavaProject javaProject = root.getJavaProject();", "+\t\t\t\tArrayList openables = (ArrayList) allOpenables.get(javaProject);", "+\t\t\t\tif (openables == null) {", "+\t\t\t\t\topenables = new ArrayList();", "+\t\t\t\t\tallOpenables.put(javaProject, openables);", "+\t\t\t\t}", "-\t\t\treturn openables;", "+\t\t\treturn allOpenables;"]}], "num": 31233}