{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef823f7c50554a814365912e84186b24", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ed7412a2e359c5623da2eecf9a335f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public boolean isMatchingIndexRecord()", "signatureAfterChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["-public boolean isMatchingIndexRecord() {", "-\tTypeDeclarationPattern record = getTypeDeclarationRecord();", "+public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\tTypeDeclarationPattern pattern = (TypeDeclarationPattern) decodedPattern;", "-\t\t\tif (this.classOrInterface != record.classOrInterface) return false;", "+\t\t\tif (this.classOrInterface != pattern.classOrInterface) return false;", "-\tif (this.pkg != null && !CharOperation.equals(this.pkg, record.pkg, isCaseSensitive()))", "+\tif (this.pkg != null && !CharOperation.equals(this.pkg, pattern.pkg, this.isCaseSensitive))", "-\t\t\tif (record.enclosingTypeNames != CharOperation.NO_CHAR_CHAR) return false;", "+\t\t\tif (pattern.enclosingTypeNames != CharOperation.NO_CHAR_CHAR) return false;", "-\t\t\tif (!CharOperation.equals(this.enclosingTypeNames, record.enclosingTypeNames, isCaseSensitive()))", "-\t\t\t\tif (!CharOperation.equals(record.enclosingTypeNames, ONE_ZERO_CHAR)) // if not a local or anonymous type", "+\t\t\tif (!CharOperation.equals(this.enclosingTypeNames, pattern.enclosingTypeNames, this.isCaseSensitive))", "+\t\t\t\tif (!CharOperation.equals(pattern.enclosingTypeNames, ONE_ZERO_CHAR)) // if not a local or anonymous type", "-\treturn matchesName(this.simpleName, record.simpleName);", "+\treturn matchesName(this.simpleName, pattern.simpleName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddffc8ddd13d8d13ffd34c5df9b90850", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "signatureAfterChange": " public boolean matchesDecodedKey(SearchPattern decodedPattern)", "diff": ["-public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+public boolean matchesDecodedKey(SearchPattern decodedPattern) {", "-\t\tcase TYPE_SUFFIX : // nothing", "-\t/* check qualification - exact match only */", "+\tif (!matchesName(this.simpleName, pattern.simpleName))", "+\t\treturn false;", "+", "+\t// check package - exact match only", "-\t/* check enclosingTypeName - exact match only */", "+", "+\t// check enclosingTypeNames - exact match only", "-\t\t// empty char[][] means no enclosing type (in which case, the decoded one is the empty char array)", "-\t\tif (this.enclosingTypeNames.length == 0) {", "-\t\t\tif (pattern.enclosingTypeNames != CharOperation.NO_CHAR_CHAR) return false;", "-\t\t} else {", "-\t\t\tif (!CharOperation.equals(this.enclosingTypeNames, pattern.enclosingTypeNames, this.isCaseSensitive))", "-\t\t\t\tif (!CharOperation.equals(pattern.enclosingTypeNames, ONE_ZERO_CHAR)) // if not a local or anonymous type", "-\t\t\t\t\treturn false;", "-\t\t}", "+\t\tif (this.enclosingTypeNames.length == 0)", "+\t\t\treturn pattern.enclosingTypeNames.length == 0;", "+\t\tif (this.enclosingTypeNames.length == 1 && pattern.enclosingTypeNames.length == 1)", "+\t\t\treturn CharOperation.equals(this.enclosingTypeNames[0], pattern.enclosingTypeNames[0], this.isCaseSensitive);", "+\t\tif (pattern.enclosingTypeNames == ONE_ZERO_CHAR)", "+\t\t\treturn true; // is a local or anonymous type", "+\t\treturn CharOperation.equals(this.enclosingTypeNames, pattern.enclosingTypeNames, this.isCaseSensitive);", "+\t}", "+\treturn true;", "+}", "-\treturn matchesName(this.simpleName, pattern.simpleName);"]}], "num": 10849}