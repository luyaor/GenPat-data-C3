{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41bfaf0d6f42943d8c5256555e477518", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bdbefb4873c8e9e529a31c4b7136255", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "4e2e64c4f88c99c3e5a108d48b8090039fe7bc09", "commitAfterChange": "3cc60ef5ffdcff6661df47897d960b6759c64207", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tIBinding resolveName(Name name)", "signatureAfterChange": " \tIBinding resolveName(Name name)", "diff": ["-\t\t\t\tif (binding != null && binding.isValidBinding()) {", "-\t\t\t\t\tif (binding instanceof org.eclipse.jdt.internal.compiler.lookup.PackageBinding) {", "-\t\t\t\t\t\treturn this.getPackageBinding((org.eclipse.jdt.internal.compiler.lookup.PackageBinding)binding);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// it is a type", "-\t\t\t\t\t\treturn this.getTypeBinding((org.eclipse.jdt.internal.compiler.lookup.TypeBinding)binding);", "-\t\t\t\t\t}", "+\t\t\t\tif (binding instanceof org.eclipse.jdt.internal.compiler.lookup.PackageBinding) {", "+\t\t\t\t\treturn this.getPackageBinding((org.eclipse.jdt.internal.compiler.lookup.PackageBinding)binding);", "+\t\t\t\t} else if (binding instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding) {", "+\t\t\t\t\t// it is a type", "+\t\t\t\t\treturn this.getTypeBinding((org.eclipse.jdt.internal.compiler.lookup.TypeBinding)binding);", "-\t\t\t\treturn null;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\tif (typeBinding == null) {", "-\t\t\t\t\treturn null;", "+\t\t\t\tif (typeBinding != null) {", "+\t\t\t\t\treturn typeBinding.getPackage();", "-\t\t\t\treturn typeBinding.getPackage();", "-\t\t\t\tif (methodBinding == null) {", "-\t\t\t\t\treturn null;", "+\t\t\t\tif (methodBinding != null) {", "+\t\t\t\t\treturn methodBinding;", "-\t\t\t\treturn methodBinding;", "-\t\t\tif (typeBinding == null) {", "-\t\t\t\treturn null;", "+\t\t\tif (typeBinding != null) {", "+\t\t\t\treturn typeBinding;", "-\t\t\treturn typeBinding;", "-\t\t\t\tif (binding == null) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t} else if (binding.isValidBinding()) {", "-\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);\t\t\t\t", "-\t\t\t\t} else {", "-\t\t\t\t\t/*", "-\t\t\t\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=24449", "-\t\t\t\t\t */", "-\t\t\t\t\tif (binding instanceof ProblemFieldBinding) {", "-\t\t\t\t\t\tProblemFieldBinding problemFieldBinding = (ProblemFieldBinding) binding;", "-\t\t\t\t\t\tswitch(problemFieldBinding.problemId()) {", "-\t\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "-\t\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "-\t\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInConstructorInvocation :", "-\t\t\t\t\t\t\t\tReferenceBinding declaringClass = problemFieldBinding.declaringClass;", "-\t\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(problemFieldBinding.name);", "-\t\t\t\t\t\t\t\tif (exactBinding != null) {", "-\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding2 = (IVariableBinding) this.compilerBindingsToASTBindings.get(exactBinding);", "-\t\t\t\t\t\t\t\t\tif (variableBinding2 != null) {", "+\t\t\t\tif (binding != null) {", "+\t\t\t\t\tif (binding.isValidBinding()) {", "+\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);\t\t\t\t", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=24449", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (binding instanceof ProblemFieldBinding) {", "+\t\t\t\t\t\t\tProblemFieldBinding problemFieldBinding = (ProblemFieldBinding) binding;", "+\t\t\t\t\t\t\tswitch(problemFieldBinding.problemId()) {", "+\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInConstructorInvocation :", "+\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = problemFieldBinding.declaringClass;", "+\t\t\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(problemFieldBinding.name);", "+\t\t\t\t\t\t\t\t\tif (exactBinding != null) {", "+\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding2 = (IVariableBinding) this.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\t\t\tif (variableBinding2 != null) {", "+\t\t\t\t\t\t\t\t\t\t\treturn variableBinding2;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tvariableBinding2 = new VariableBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(exactBinding, variableBinding2);", "-\t\t\t\t\t\t\t\t\tvariableBinding2 = new VariableBinding(this, exactBinding);", "-\t\t\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(exactBinding, variableBinding2);", "-\t\t\t\t\t\t\t\t\treturn variableBinding2;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "-\t\t\tif (binding == null) {", "-\t\t\t\treturn null;", "-\t\t\t} else if (!binding.isValidBinding()) {", "-\t\t\t\tswitch(binding.problemId()) {", "-\t\t\t\t\tcase ProblemReasons.NotVisible : ", "-\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "-\t\t\t\t\t\tif (binding instanceof ProblemReferenceBinding) {", "-\t\t\t\t\t\t\tProblemReferenceBinding problemReferenceBinding = (ProblemReferenceBinding) binding;", "-\t\t\t\t\t\t\tBinding binding2 = problemReferenceBinding.original;", "-\t\t\t\t\t\t\tif (binding2 != null && binding2 instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding) {", "-\t\t\t\t\t\t\t\treturn this.getTypeBinding((org.eclipse.jdt.internal.compiler.lookup.TypeBinding) binding2);", "-\t\t\t\t\t\t\t} ", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\treturn null;", "+\t\t\tif (binding != null && binding instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding) {", "+\t\t\t\treturn this.getTypeBinding(binding.leafComponentType());", "-\t\t\treturn this.getTypeBinding(binding.leafComponentType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad35ffe97bd76d0dd6402c4aa20fef61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "5f25db2c9c02bf799108bff292447ab679c3c3b7", "commitAfterChange": "dcf93fb34d4ce9325841c9302bc217b02f49501a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tsynchronized IBinding resolveName(Name name)", "signatureAfterChange": " \tsynchronized IBinding resolveName(Name name)", "diff": ["-\t\t\tint qualifiedNameLength = tokens.length;", "-\t\t\tint indexInQualifiedName = qualifiedNameLength - index; // one-based", "-\t\t\tint otherBindingLength = qualifiedNameLength - indexOfFirstFieldBinding;", "-\t\t\tif (indexInQualifiedName < indexOfFirstFieldBinding) {", "+\t\t\tif (index < indexOfFirstFieldBinding) {", "-\t\t\t\t\t\tbinding = this.scope.getTypeOrPackage(CharOperation.subarray(tokens, 0, indexInQualifiedName));", "+\t\t\t\t\t\tbinding = this.scope.getTypeOrPackage(CharOperation.subarray(tokens, 0, index));", "-\t\t\t\t\t\tbinding = internalScope.getTypeOrPackage(CharOperation.subarray(tokens, 0, indexInQualifiedName));", "+\t\t\t\t\t\tbinding = internalScope.getTypeOrPackage(CharOperation.subarray(tokens, 0, index));", "-\t\t\t} else if (indexInQualifiedName == indexOfFirstFieldBinding) {", "+\t\t\t} else if (index == indexOfFirstFieldBinding) {", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (binding instanceof ProblemFieldBinding) {", "-\t\t\t\t\t\t\t\tProblemFieldBinding problemFieldBinding = (ProblemFieldBinding) binding;", "-\t\t\t\t\t\t\t\tswitch(problemFieldBinding.problemId()) {", "-\t\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "-\t\t\t\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "-\t\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = problemFieldBinding.declaringClass;", "-\t\t\t\t\t\t\t\t\t\tif (declaringClass != null) {", "-\t\t\t\t\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(tokens[tokens.length - 1], true /*resolve*/);", "-\t\t\t\t\t\t\t\t\t\t\tif (exactBinding != null) {", "-\t\t\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding = (IVariableBinding) this.bindingTables.compilerBindingsToASTBindings.get(exactBinding);", "-\t\t\t\t\t\t\t\t\t\t\t\tif (variableBinding != null) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\treturn variableBinding;", "-\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\tvariableBinding = new VariableBinding(this, exactBinding);", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(exactBinding, variableBinding);", "+\t\t\t\t\t\t} else  if (binding instanceof ProblemFieldBinding) {", "+\t\t\t\t\t\t\tProblemFieldBinding problemFieldBinding = (ProblemFieldBinding) binding;", "+\t\t\t\t\t\t\tswitch(problemFieldBinding.problemId()) {", "+\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = problemFieldBinding.declaringClass;", "+\t\t\t\t\t\t\t\t\tif (declaringClass != null) {", "+\t\t\t\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(tokens[tokens.length - 1], true /*resolve*/);", "+\t\t\t\t\t\t\t\t\t\tif (exactBinding != null) {", "+\t\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding = (IVariableBinding) this.bindingTables.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\tif (variableBinding != null) {", "+\t\t\t\t\t\t\t\t\t\t\tvariableBinding = new VariableBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(exactBinding, variableBinding);", "+\t\t\t\t\t\t\t\t\t\t\treturn variableBinding;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\tif (qualifiedNameReference.otherBindings == null || (otherBindingLength - index - 1) < 0) {", "+\t\t\t\tif (qualifiedNameReference.otherBindings == null || (index - 2) < 0) {", "-\t\t\t\t\treturn this.getVariableBinding(qualifiedNameReference.otherBindings[otherBindingLength - index - 1]);\t\t\t\t", "+\t\t\t\t\treturn this.getVariableBinding(qualifiedNameReference.otherBindings[index - 2]);\t\t\t\t", "-\t\t\tif (index == 0) {", "+\t\t\tif (index == qualifiedTypeReference.tokens.length) {", "-\t\t\t\tint qualifiedTypeLength = qualifiedTypeReference.tokens.length;", "-\t\t\t\tint indexInQualifiedName = qualifiedTypeLength - index; // one-based", "-\t\t\t\tif (indexInQualifiedName >= 0) {", "+\t\t\t\tif (index >= 0) {", "-\t\t\t\t\t\t\tbinding = this.scope.getTypeOrPackage(CharOperation.subarray(qualifiedTypeReference.tokens, 0, indexInQualifiedName));", "+\t\t\t\t\t\t\tbinding = this.scope.getTypeOrPackage(CharOperation.subarray(qualifiedTypeReference.tokens, 0, index));", "-\t\t\t\t\t\t\tbinding = internalScope.getTypeOrPackage(CharOperation.subarray(qualifiedTypeReference.tokens, 0, indexInQualifiedName));", "+\t\t\t\t\t\t\tbinding = internalScope.getTypeOrPackage(CharOperation.subarray(qualifiedTypeReference.tokens, 0, index));", "-\t\t\tint indexInImportReference = importReferenceLength - index; // one-based", "-\t\t\tif (indexInImportReference >= 0) {", "+\t\t\tif (index >= 0) {", "-\t\t\t\tif (importReferenceLength == indexInImportReference) {", "+\t\t\t\tif (importReferenceLength == index) {", "-\t\t\t\t\t\tbinding = this.scope.getImport(CharOperation.subarray(importReference.tokens, 0, indexInImportReference), importReference.onDemand, importReference.isStatic());", "+\t\t\t\t\t\tbinding = this.scope.getImport(CharOperation.subarray(importReference.tokens, 0, index), importReference.onDemand, importReference.isStatic());", "-\t\t\t\t\t\tbinding = this.scope.getImport(CharOperation.subarray(importReference.tokens, 0, indexInImportReference), true, importReference.isStatic());", "+\t\t\t\t\t\tbinding = this.scope.getImport(CharOperation.subarray(importReference.tokens, 0, index), true, importReference.isStatic());"]}], "num": 17760}