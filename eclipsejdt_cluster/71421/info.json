{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "642dfc1cebeac8aef75064765cb93534", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28872f5c2b7858dd6ae72ca3ab03d68f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6afa93473446fb2c6b874f92c72045670997535f", "commitAfterChange": "e9d42bfbf494b3bd89965c526aaae07d7189c12c", "methodNumberBeforeChange": 539, "methodNumberAfterChange": 539, "signatureBeforeChange": "  public void cannotImplementIncompatibleNullness(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": "  public void cannotImplementIncompatibleNullness(MethodBinding currentMethod, MethodBinding inheritedMethod, boolean showReturn)", "diff": ["-public void cannotImplementIncompatibleNullness(MethodBinding currentMethod, MethodBinding inheritedMethod) {", "+public void cannotImplementIncompatibleNullness(MethodBinding currentMethod, MethodBinding inheritedMethod, boolean showReturn) {", "-\t\t\tnew String(currentMethod.readableName()),", "+\t\t\tshowReturn ", "+\t\t\t\t? new String(currentMethod.returnType.nullAnnotatedReadableName(this.options, false))+' '", "+\t\t\t\t: \"\", //$NON-NLS-1$", "+\t\t\tnew String(currentMethod.selector),", "+\t\t\ttypesAsString(currentMethod, false, true),", "-\t\t\tnew String(currentMethod.shortReadableName()),", "+\t\t\tshowReturn ", "+\t\t\t\t? new String(currentMethod.returnType.nullAnnotatedReadableName(this.options, true))+' '", "+\t\t\t\t: \"\", //$NON-NLS-1$", "+\t\t\tnew String(currentMethod.selector),", "+\t\t\ttypesAsString(currentMethod, true, true),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ff859469ab09b4fb1fb091d4ff6b372", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": " public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, ASTNode location)", "signatureAfterChange": " public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, SourceTypeBinding type)", "diff": ["-public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, ASTNode location) {", "-\t", "+public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, SourceTypeBinding type) {", "+\tint start = type.sourceStart();", "+\tint end = type.sourceEnd();", "+\tif (currentMethod.declaringClass == type) {", "+\t\tASTNode location = ((MethodDeclaration) currentMethod.sourceMethod()).returnType;", "+\t\tstart = location.sourceStart();", "+\t\tend = location.sourceEnd();", "+\t}", "+\t\t\t\tnew String(inheritedMethod.declaringClass.readableName()),", "+\t\t\t\tnew String(inheritedMethod.declaringClass.shortReadableName()),", "-\t\t\tlocation.sourceStart,", "-\t\t\tlocation.sourceEnd);", "+\t\t\tstart,", "+\t\t\tend);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00df87a0a22e538a1f6832f27c8c4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d95feda7fc2f9a6563596c0e4c31ae322f705773", "commitAfterChange": "8477130b01f048bfc1fd1f484a88902aeefb2f38", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "signatureAfterChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8)", "diff": ["-public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2) {", "+public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8) {", "-\t\tint problemID = (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod())", "-\t\t\t\t? IProblem.DuplicateInheritedDefaultMethods", "-\t\t\t\t: IProblem.DuplicateInheritedMethods;", "+\t\tint problemID = IProblem.DuplicateInheritedMethods;", "+\t\tif (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod()) {", "+\t\t\tif (isJava8)", "+\t\t\t\tproblemID = IProblem.DuplicateInheritedDefaultMethods;", "+\t\t\telse", "+\t\t\t\treturn; // don't report this error at 1.7-", "+\t\t}"]}], "num": 71421}