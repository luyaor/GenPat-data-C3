{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14b917cbffdf37fccc6e5dd91ee4381e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380b83f8a512df1bb76b80d7c061a73e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "9687350fee055f775aa6db78ace631e357b68877", "commitAfterChange": "473ddac8115441c1d4096fff370f8ba0dadbbb6c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tpublic static boolean isReferencedBy(\r \t\tIJavaElement element,\r \t\tIMarkerDelta markerDelta)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic static boolean isReferencedBy(IJavaElement element, IMarkerDelta markerDelta) throws CoreException", "diff": ["-\tpublic static boolean isReferencedBy(\r", "-\t\tIJavaElement element,\r", "-\t\tIMarkerDelta markerDelta)\r", "-\t\tthrows CoreException {\r", "+\tpublic static boolean isReferencedBy(IJavaElement element, IMarkerDelta markerDelta) throws CoreException {\r", "+\t\t\r", "-\t\treturn element != null\r", "-\t\t\t&& markerDelta != null\r", "-\t\t\t&& element.getHandleIdentifier().equals(markerDelta.getAttribute(ATT_HANDLE_ID));\r", "+\r", "+\t\tif (markerDelta == null) return false;\r", "+\t\tString markerDeltarHandleId = (String)markerDelta.getAttribute(ATT_HANDLE_ID);\r", "+\t\tif (markerDeltarHandleId == null) return false;\r", "+\t\t\r", "+\t\tIJavaElement markerElement = JavaCore.create(markerDeltarHandleId);\r", "+\t\tif (markerElement == null) return false;\r", "+\t\t\r", "+\t\treturn element.equals(markerElement); // external elements may still be equal with different handleIDs.\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e87481225568091eed9f3236f76927e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "9687350fee055f775aa6db78ace631e357b68877", "commitAfterChange": "473ddac8115441c1d4096fff370f8ba0dadbbb6c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \tpublic static boolean isReferencedBy(IJavaElement element, IMarker marker)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic static boolean isReferencedBy(IJavaElement element, IMarker marker) throws CoreException", "diff": ["-\tpublic static boolean isReferencedBy(IJavaElement element, IMarker marker)\r", "-\t\tthrows CoreException {\r", "+\tpublic static boolean isReferencedBy(IJavaElement element, IMarker marker) throws CoreException {\r", "+\t\t\r", "-\t\treturn (\r", "-\t\t\telement != null\r", "-\t\t\t\t&& marker != null\r", "-\t\t\t\t&& element.getHandleIdentifier().equals(marker.getAttribute(ATT_HANDLE_ID)));\r", "+\t\t\t\r", "+\t\tif (marker == null) return false;\r", "+\t\tString markerHandleId = (String)marker.getAttribute(ATT_HANDLE_ID);\r", "+\t\tif (markerHandleId == null) return false;\r", "+\t\t\r", "+\t\tIJavaElement markerElement = JavaCore.create(markerHandleId);\r", "+\t\tif (markerElement == null) return false;\r", "+\t\t\r", "+\t\treturn element.equals(markerElement); // external elements may still be equal with different handleIDs.\r"]}], "num": 21257}