{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "460bf09481e42cdf8ac00f0895734e6d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca88c7281019b93be3f5efae385c5f6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "commitAfterChange": "a7a4bb422b80975020031dc2489c1287582f5bac", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "\t \tprivate void removeExtraBlanks(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": "\t \tprivate void trimWhiteSpacesAndComments(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\tprivate void removeExtraBlanks(org.eclipse.jdt.internal.compiler.ast.Expression expression) {", "+\tprivate void trimWhiteSpacesAndComments(org.eclipse.jdt.internal.compiler.ast.Expression expression) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOMMENT_JAVADOC :", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOMMENT_LINE :", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOMMENT_BLOCK :", "+\t\t\t\t\t\tif (first) {", "+\t\t\t\t\t\t\ttrimLeftPosition = removeBlankScanner.currentPosition;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\ttrimRightPosition = removeBlankScanner.startPosition - 1;", "-\t\t\t\t\t\t * if we find something else than a whitespace, then we reset the trimRigthPosition", "-\t\t\t\t\t\t * to the expression source end.", "+\t\t\t\t\t\t * if we find something else than a whitespace or a comment,", "+\t\t\t\t\t\t * then we reset the trimRigthPosition to the expression", "+\t\t\t\t\t\t * source end.", "-\t\t\t\t\t\ttrimRightPosition = expression.sourceEnd;", "+\t\t\t\t\t\ttrimRightPosition = removeBlankScanner.currentPosition - 1;", "+\t\t\t\t\t\tfirst = false;\t\t\t\t", "-\t\t\t\tfirst = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc4aa53cb6fb7bc0f8da9af863b0c636", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "818dca3cf84fd118ea99497de1f8b977d4253551", "commitAfterChange": "52f6144c4e9af7092e9f26d44a5197a00c39427c", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprivate int printJavadocBlockNodesNewLines(FormatJavadocBlock block, FormatJavadocNode node, int previousEnd)", "signatureAfterChange": "  \tprivate int printJavadocBlockNodesNewLines(FormatJavadocBlock block, FormatJavadocNode node, int previousEnd)", "diff": ["-\t    \tint newLines = 0;", "-\t    \tif (node.isText()) {", "-\t    \t\tFormatJavadocText text = (FormatJavadocText)node;", "-    \t\t\tif (text.isImmutableHtmlTag()) {", "+\t\t\tFormatJavadocText text = null;", "+\t\t\tboolean isImmutableNode = node.isImmutable();", "+\t\t\tboolean nodeIsText = node.isText();", "+\t\t\tif (nodeIsText) {", "+\t    \t\ttext = (FormatJavadocText)node;", "+\t\t\t} else {", "+\t\t\t\tFormatJavadocBlock inlinedBlock = (FormatJavadocBlock)node;", "+\t\t\t\tif (isImmutableNode) {", "+\t\t\t\t\ttext = (FormatJavadocText) inlinedBlock.getLastNode();", "+\t\t    \t\tlength += inlinedBlock.tagEnd - inlinedBlock.sourceStart + 1;  // tag length", "+\t\t\t    \tif (nodeStart > (previousEnd+1)) {", "+\t\t\t    \t\tlength++; // include space between nodes", "+\t\t\t    \t}", "+\t\t\t\t\tthis.scanner.resetTo(text.sourceStart , node.sourceEnd);", "+\t\t\t\t}", "+\t\t\t}", "+\t    \tif (text != null) {", "+    \t\t\tif (isImmutableNode) {", "-\t\t    \t\t\t\t\t\tif (CharOperation.indexOf('\\n', this.scanner.source, this.scanner.startPosition, this.scanner.currentPosition) >= 0) {", "-\t\t    \t\t\t\t\t\t\treturn newLines;", "+\t\t    \t\t\t\t\t\tif (nodeIsText) {", "+\t\t\t    \t\t\t\t\t\tif (CharOperation.indexOf('\\n', this.scanner.source, this.scanner.startPosition, this.scanner.currentPosition) >= 0) {", "+\t\t\t    \t\t\t\t\t\t\treturn 0;", "+\t\t\t    \t\t\t\t\t\t}", "-\t\t\t\t\t\t\tnewLines++;", "-\t\t\t\t    \t\tif (headerLine) {", "-\t\t\t\t\t\t\t\tmaxColumn--;", "-\t\t\t\t\t\t\t\theaderLine = false;", "-\t\t\t    \t\t\t}", "-\t\t\t\t\t\t\tlastColumn = firstColumn;", "+\t    \t\t\t\t\treturn 1;", "-\t    \t\t\treturn newLines;", "+\t    \t\t\treturn 0;"]}], "num": 54006}