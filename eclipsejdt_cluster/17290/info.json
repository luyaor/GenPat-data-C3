{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72038441261808eddc5e8aa2c2f1c405", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2fab44ed976bc24ba8971237385d15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "8afeb60d84d0d78caa38869e22c86e8ec44f1e1a", "commitAfterChange": "7448554fa33480f89acc6d99ed13a0f48d1aacc6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\tReferenceBinding superType = superclass;", "-\tif (itsInterfaces != NoSuperInterfaces) {", "+\tif (itsInterfaces != NoSuperInterfaces)", "-\t\tif (this.type.isInterface())", "-\t\t\tsuperType = null; // do not need to find Object's methods when its an interface extending another interface", "-\t}", "+\tReferenceBinding superType = superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1b571ef4817e53c8952eefc01eb1c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "2e810cf626465e41259becd7125dd36c56f25bba", "commitAfterChange": "6a535b4099793b71184321570c224994c4b63f74", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["+\tReferenceBinding superType = superclass;", "-\tif (itsInterfaces != NoSuperInterfaces)", "+\tif (itsInterfaces != NoSuperInterfaces) {", "+\t\tif (this.type.isInterface())", "+\t\t\tsuperType = null; // do not need to find Object's methods when its an interface extending another interface", "+\t}", "-\tReferenceBinding superType = superclass;"]}], "num": 17290}