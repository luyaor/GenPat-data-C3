{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9013ac1edb3d4d2bd49e324aaf4b8f67", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0ace3bf4cf93e9c386728996cf14a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InterfaceMethodsTest.java", "commitBeforeChange": "8c67d56825136ce0d7026162576ad6997e930bdc", "commitAfterChange": "0b88f9a0bb1950edae0865a8658608a49edfc445", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void testModifiers3()", "signatureAfterChange": " \tpublic void testModifiers3()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in I.java (at line 2)\\n\" +", "-\t\t\t\"\tnative void foo1();\\n\" +", "-\t\t\t\"\t            ^^^^^^\\n\" +", "-\t\t\t\"Illegal modifier for the interface method foo1; only public & abstract are permitted\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in I.java (at line 3)\\n\" +", "-\t\t\t\"\tstatic void foo2();\\n\" +", "-\t\t\t\"\t            ^^^^^^\\n\" +", "-\t\t\t\"Illegal modifier for the interface method foo2; only public & abstract are permitted\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in I.java (at line 4)\\n\" +", "-\t\t\t\"\tnative default void foo3() {}\\n\" +", "-\t\t\t\"\t                    ^^^^^^\\n\" +", "-\t\t\t\"Illegal modifier for the interface method foo3; only public, abstract, strictfp & synchronized are permitted\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in I.java (at line 5)\\n\" +", "-\t\t\t\"\tdefault native void foo4() {}\\n\" +", "-\t\t\t\"\t                    ^^^^^^\\n\" +", "-\t\t\t\"Illegal modifier for the interface method foo4; only public, abstract, strictfp & synchronized are permitted\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. ERROR in I.java (at line 6)\\n\" +", "-\t\t\t\"\tstatic default void foo5() {}\\n\" +", "-\t\t\t\"\t                    ^^^^^^\\n\" +", "-\t\t\t\"Illegal modifier for the interface method foo5; only public, abstract, strictfp & synchronized are permitted\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. ERROR in I.java (at line 7)\\n\" +", "-\t\t\t\"\tdefault static void foo6() {}\\n\" +", "-\t\t\t\"\t                    ^^^^^^\\n\" +", "-\t\t\t\"Illegal modifier for the interface method foo6; only public, abstract, strictfp & synchronized are permitted\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in I.java (at line 2)\\n\" + ", "+\t\t\t\"\tnative void foo1();\\n\" + ", "+\t\t\t\"\t            ^^^^^^\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo1; only public & abstract are permitted\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in I.java (at line 3)\\n\" + ", "+\t\t\t\"\tstatic void foo2();\\n\" + ", "+\t\t\t\"\t            ^^^^^^\\n\" + ", "+\t\t\t\"This method requires a body instead of a semicolon\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in I.java (at line 4)\\n\" + ", "+\t\t\t\"\tnative default void foo3() {}\\n\" + ", "+\t\t\t\"\t                    ^^^^^^\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo3; only public, abstract and strictfp are permitted\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in I.java (at line 5)\\n\" + ", "+\t\t\t\"\tdefault native void foo4() {}\\n\" + ", "+\t\t\t\"\t                    ^^^^^^\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo4; only public, abstract and strictfp are permitted\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in I.java (at line 6)\\n\" + ", "+\t\t\t\"\tstatic default void foo5() {}\\n\" + ", "+\t\t\t\"\t                    ^^^^^^\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo5; only public, abstract and strictfp are permitted\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in I.java (at line 7)\\n\" + ", "+\t\t\t\"\tdefault static void foo6() {}\\n\" + ", "+\t\t\t\"\t                    ^^^^^^\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo6; only public, abstract and strictfp are permitted\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0e4884b68203cb2fff5faa3db1c5cba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void test006()", "signatureAfterChange": "  \tpublic void test006()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in J.java (at line 1)\\n\" + ", "-\t\t\t\"\tclass J<T> implements I<B> { public T foo() {return null;} }\\n\" + ", "-\t\t\t\"\t                                      ^^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with I<B>.foo()\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Y.java (at line 1)\\n\" + ", "-\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                   ^^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with X<A>.foo()\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in Y.java (at line 1)\\n\" + ", "-\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                                  ^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from A to T\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in W.java (at line 1)\\n\" + ", "-\t\t\t\"\tclass W<T> extends X { @Override public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                                         ^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Object to T\\n\" + ", "-\t\t\t\"----------\\n\",", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in J.java (at line 1)\\n\" + ", "+\t\t\t\t\"\tclass J<T> implements I<B> { public T foo() {return null;} }\\n\" + ", "+\t\t\t\t\"\t                                      ^^^^^\\n\" + ", "+\t\t\t\t\"The return type is incompatible with I<B>.foo()\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in L.java (at line 1)\\n\" + ", "+\t\t\t\t\"\tclass L<T> implements I { public T foo() {return null;} }\\n\" + ", "+\t\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\t\"Type safety: I is a raw type. References to generic type I<U> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in Y.java (at line 1)\\n\" + ", "+\t\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\t\"\t                                   ^^^^^\\n\" + ", "+\t\t\t\t\"The return type is incompatible with X<A>.foo()\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in Y.java (at line 1)\\n\" + ", "+\t\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\t\"\t                                                  ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from A to T\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in W.java (at line 1)\\n\" + ", "+\t\t\t\t\"\tclass W<T> extends X { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\t\"Type safety: X is a raw type. References to generic type X<U> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in W.java (at line 1)\\n\" + ", "+\t\t\t\t\"\tclass W<T> extends X { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\t\"\t                                                         ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Object to T\\n\" + ", "+\t\t\t\t\"----------\\n\","]}], "num": 33837}