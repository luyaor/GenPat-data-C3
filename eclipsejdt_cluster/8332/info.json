{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb91834ccd92dcc7e5e38adce9c0cf08", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f8f3cbf183a0ba7993ecb2e57ffdfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "cf2e4750b0bf80acaca57190591526193389bd11", "commitAfterChange": "c8343c5add6dda54a91bc7ca5cb7fef7041d4b69", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate static IPath[] decodePatterns(Element element, String tag)", "signatureAfterChange": " \tprivate static IPath[] decodePatterns(Element element, String tag)", "diff": ["-\t\t\tif ((patternCount  = patterns.length) > 0) {", "+\t\t\tif ((patternCount = patterns.length) > 0) {", "-\t\t\t\tfor (int j = 0; j < patterns.length; j++){", "-\t\t\t\t\tpaths[j] = new Path(new String(patterns[j]));", "+\t\t\t\tint index = 0;", "+\t\t\t\tfor (int j = 0; j < patternCount; j++) {", "+\t\t\t\t\tchar[] pattern = patterns[j];", "+\t\t\t\t\tif (pattern.length == 0) continue; // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=105581", "+\t\t\t\t\tpaths[index++] = new Path(new String(pattern));", "+\t\t\t\tif (index < patternCount)", "+\t\t\t\t\tSystem.arraycopy(paths, 0, paths = new IPath[index], 0, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6852559d9ae5ca698ad0f539850bda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "f482e17ca46d43774914916e0157c70a13f00e99", "commitAfterChange": "f527cf4f7e4c93ea86c2f85d506bb185a3192a98", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "signatureAfterChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "diff": ["-\t\tinterfaceHandles= new IType[superinterfaces.length];\r", "-\t\tfor (int i= 0; i < interfaceHandles.length; i++) {\r", "-\t\t\tinterfaceHandles[i]= getHandle(superinterfaces[i]);\r", "+\t\tint length = superinterfaces.length;\r", "+\t\tIType[] resolvedInterfaceHandles= new IType[length];\r", "+\t\tint index = 0;\r", "+\t\tfor (int i= 0; i < length; i++) {\r", "+\t\t\tif (superinterfaces[i] != null) {\r", "+\t\t\t\tresolvedInterfaceHandles[index++]= getHandle(superinterfaces[i]);\r", "+\t\t\t}\r", "+\t\t// resize\r", "+\t\tSystem.arraycopy(resolvedInterfaceHandles, 0, interfaceHandles = new IType[index], 0, index);\r"]}], "num": 8332}