{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c935a5fa17571415c31bd6e97f1fbbd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "179fd25862e68665804053c8251c3192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "2ce334f1fc80cd6da653117c6c0cdf8c6f25ae81", "commitAfterChange": "d42283612c50c1a8c04bc9318f8606f0e3f485c5", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["+\t\tint compatibleCount = 0;", "-\t\t\tcompatibilityLevels[i] = parameterCompatibilityLevel(visible[i], argTypes);", "+\t\t\tif ((compatibilityLevels[i] = parameterCompatibilityLevel(visible[i], argTypes)) != NOT_COMPATIBLE) {", "+\t\t\t\tif (i != compatibleCount) {", "+\t\t\t\t\tvisible[compatibleCount] = visible[i];", "+\t\t\t\t\tcompatibilityLevels[compatibleCount] = compatibilityLevels[i];", "+\t\t\t\t}", "+\t\t\t\tcompatibleCount++;", "+\t\t\t}", "+\t\tif (compatibleCount == 0) {", "+\t\t\treturn new ProblemMethodBinding(visible[0].selector, argumentTypes, ProblemReasons.NotFound);", "+\t\t} else if (compatibleCount == 1) {", "+\t\t\tMethodBinding candidate = inferInvocationType(invocationSite, visible[0], argumentTypes);", "+\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "+\t\t\treturn candidate;", "+\t\t}", "+\t", "+\t\tif (compatibleCount != visibleSize) {", "+\t\t\tSystem.arraycopy(visible, 0, visible = new MethodBinding[visibleSize = compatibleCount], 0, compatibleCount);", "+\t\t\tSystem.arraycopy(compatibilityLevels, 0, compatibilityLevels = new int[compatibleCount], 0, compatibleCount);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2fd6a843212e41482a55d5112dccc47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ab8d8b054678dc4dc3070eb2db376b3908a7b7d2", "commitAfterChange": "5493b2d6bd60226b33b413713fa212914e52abb0", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["+\t\tint compatibleCount = 0;", "-\t\t\tcompatibilityLevels[i] = parameterCompatibilityLevel(visible[i], argTypes);", "+\t\t\tif ((compatibilityLevels[i] = parameterCompatibilityLevel(visible[i], argTypes)) != NOT_COMPATIBLE) {", "+\t\t\t\tif (i != compatibleCount) {", "+\t\t\t\t\tvisible[compatibleCount] = visible[i];", "+\t\t\t\t\tcompatibilityLevels[compatibleCount] = compatibilityLevels[i];", "+\t\t\t\t}", "+\t\t\t\tcompatibleCount++;", "+\t\t\t}", "+\t\tif (compatibleCount == 0) {", "+\t\t\treturn new ProblemMethodBinding(visible[0].selector, argumentTypes, ProblemReasons.NotFound);", "+\t\t} else if (compatibleCount == 1) {", "+\t\t\tMethodBinding candidate = inferInvocationType(invocationSite, visible[0], argumentTypes);", "+\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "+\t\t\treturn candidate;", "+\t\t}", "+\t\tif (compatibleCount != visibleSize) {", "+\t\t\tSystem.arraycopy(visible, 0, visible = new MethodBinding[visibleSize = compatibleCount], 0, compatibleCount);", "+\t\t\tSystem.arraycopy(compatibilityLevels, 0, compatibilityLevels = new int[compatibleCount], 0, compatibleCount);", "+\t\t}", "+\t\t"]}], "num": 56714}