{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f08296d2ff82cb88a84ebbf7260512a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec84f9c5f78e23d53053e069ce7b383", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": " \tpublic void test182()", "signatureAfterChange": " \tpublic void test182()", "diff": ["-\t\tMap customOptions = getCompilerOptions();", "-\t\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\treturn (AX<String>) new X<String>();\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from X<String> to AX<String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 18)\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull,", "-\t\t\ttrue,", "-\t\t\tcustomOptions);", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec3bf58369a639d9f8817911a782e6ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 837, "methodNumberAfterChange": 837, "signatureBeforeChange": " public void test0830()", "signatureAfterChange": " public void test0830()", "diff": ["-\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tX x = (X) o;\\n\" + ", "+\t\t\"\t       ^\\n\" + ", "+\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\"5. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"\tList l = (List) al;\\n\" + ", "+\t\t\"\t          ^^^^\\n\" + ", "+\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + "]}], "num": 35559}