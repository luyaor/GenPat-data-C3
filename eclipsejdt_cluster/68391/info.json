{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7569002af95af44f87698b36e0247fe6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fec8e2840b86fd768d481138ce6b54c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "b1348e3d0230a581c7eb25acd6ec072853b12bb0", "commitAfterChange": "f3728b24e0fe129a3644e987b967023e3f656958", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "signatureAfterChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "diff": ["-\r", "+\t\tthis.fMemberDeclarationStart = new int[1];\r", "+\t\tthis.fMemberName = new String[1];\r", "+\t\tthis.fMemberNameRange = new SourceRange[1];\r", "+\t\tthis.fMethodParameterTypes = new char[1][][];\r", "+\t\tthis.anonymousCounter = 0;\r", "+\t\t\r", "-\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\t\tSourceElementParser parser = null;\r", "+\t\t\tboolean isAnonymousClass = false;\r", "+\t\t\ttry {\r", "+\t\t\t\tisAnonymousClass = ((IBinaryType) fType.getRawInfo()).isAnonymous();\r", "+\t\t\t} catch(JavaModelException e) {\r", "+\t\t\t}\r", "+\t\t\tif (isAnonymousClass) {\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tthis.anonymousClassName = Integer.parseInt(fType.getElementName());\r", "+\t\t\t\t} catch(NumberFormatException e) {\r", "+\t\t\t\t}\r", "+\t\t\t\tparser = new SourceElementParser(this, factory, true);\r", "+\t\t\t} else {\r", "+\t\t\t\tparser = new SourceElementParser(this, factory);\r", "+\t\t\t}\r", "-\t\t\t\tfalse);\r", "+\t\t\t\tisAnonymousClass);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9484a1f49f15d230cc3cfb4cd04c437", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "f26218f3521c8454774f76998a1d9edc04562b51", "commitAfterChange": "6bfd04bff95399f4eb302a926e97c5356b6b08f8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "signatureAfterChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "diff": ["+\t\t\tchar[] fullName = null;\r", "+\t\t\tthis.anonymousClassName = 0;\r", "-\t\t\t\tisAnonymousClass = ((IBinaryType) fType.getRawInfo()).isAnonymous();\r", "+\t\t\t\tIBinaryType binType = (IBinaryType) fType.getRawInfo();\r", "+\t\t\t\tisAnonymousClass = binType.isAnonymous();\r", "+\t\t\t\tfullName = binType.getName();\r", "+\t\t\t\tString eltName = fType.getElementName();\r", "+\t\t\t\teltName = eltName.substring(eltName.lastIndexOf('$') + 1, eltName.length());\r", "-\t\t\t\t\tthis.anonymousClassName = Integer.parseInt(fType.getElementName());\r", "+\t\t\t\t\tthis.anonymousClassName = Integer.parseInt(eltName);\r", "-\t\t\t\tparser = new SourceElementParser(this, factory, new CompilerOptions(JavaCore.getOptions()), true);\r", "-\t\t\t} else {\r", "-\t\t\t\tparser = new SourceElementParser(this, factory, new CompilerOptions(JavaCore.getOptions()));\r", "+\t\t\tboolean doFullParse = hasToRetrieveSourceRangesForLocalClass(fullName);\r", "+\t\t\tparser = new SourceElementParser(this, factory, new CompilerOptions(JavaCore.getOptions()), doFullParse);\r", "-\t\t\t\tisAnonymousClass);\r", "+\t\t\t\tdoFullParse);\r"]}], "num": 68391}