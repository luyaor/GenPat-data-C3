{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88dc9e36feac2e2c6630d86e39e2d483", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735bd20341957c804add504ddf7de28b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "c7c6d10c1ba0f70ed921c85d28fd8eb0e35ff277", "commitAfterChange": "e7041eebe1b9ef3b1ae9f5f9c79b24274ea327d1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public synchronized Index getIndex(IPath containerPath, IndexLocation indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath containerPath, IndexLocation indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\t\t\t\tthis.indexLocations.put(containerPath, null);", "-\t\t\t\tindexLocation = computeIndexLocation(containerPath);", "-\t\t\t\trebuildIndex(indexLocation, containerPath);", "+\t\t\t\tif(!IS_MANAGING_PRODUCT_INDEXES_PROPERTY) {", "+\t\t\t\t\tthis.indexLocations.put(containerPath, null);", "+\t\t\t\t\tindexLocation = computeIndexLocation(containerPath);", "+\t\t\t\t\trebuildIndex(indexLocation, containerPath);", "+\t\t\t\t}", "+\t\t\t\telse {", "+\t\t\t\t\trebuildIndex(indexLocation, containerPath, true);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa70a40b53b48eb7f26c896a9b0a85f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "c94b7d416960e973691c5467c6ef8e721aba2e21", "commitAfterChange": "36e62a22bf3ca5d36bead22f45472e31ca662132", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public synchronized Index getIndex(IPath containerPath, IndexLocation indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath containerPath, IndexLocation indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\t\t\t\tthis.indexLocations.put(containerPath, null);", "-\t\t\t\tindexLocation = computeIndexLocation(containerPath);", "-\t\t\t\trebuildIndex(indexLocation, containerPath);", "+\t\t\t\tif(!IS_MANAGING_PRODUCT_INDEXES_PROPERTY) {", "+\t\t\t\t\tthis.indexLocations.put(containerPath, null);", "+\t\t\t\t\tindexLocation = computeIndexLocation(containerPath);", "+\t\t\t\t\trebuildIndex(indexLocation, containerPath);", "+\t\t\t\t}", "+\t\t\t\telse {", "+\t\t\t\t\trebuildIndex(indexLocation, containerPath, true);", "+\t\t\t\t}"]}], "num": 56198}