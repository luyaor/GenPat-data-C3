{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23d993b56aa4c93fde39d44ad7d3d378", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98611d6bfcc40c3c8ca07527b3f40b42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7cdc478cdd8ecd6517119ed517a89b2200812e0f", "commitAfterChange": "8a633d56819c44af45234d7a3760b2d36e5276ed", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 403, "signatureBeforeChange": " public void testBug317719c() throws Exception", "signatureAfterChange": " public void testBug317719c() throws Exception", "diff": ["-\t\t\t\"Method same(Collection<? extends T>) has the same erasure same(Collection<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method same(Collection<? extends T>) is the same as another method in type X\\n\" +", "-\t\t\t\"Method same(Collection<? extends T>) has the same erasure same(Collection<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method same(Collection<? extends T>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method same(Collection<? extends T>) has the same erasure same(Collection<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method same(Collection<? extends T>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method same(Collection<? extends T>) has the same erasure same(Collection<E>) as another method in type X\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"Erasure of method same(Collection<? extends T>) is the same as another method in type X\\n\" +", "+\t\t\t\t\"----------\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd818023524a67cab283710f948ecb2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void testTypeRefAll_Variable() throws CoreException", "signatureAfterChange": " public void testTypeRefAll_Variable() throws CoreException", "diff": ["-\t\t\"src/all/types/ref/TestTypes.java all.types.ref.TestTypes.{} [\t\t\ufffd|Object|\ufffd o;@209] EXACT_MATCH\\n\" +", "-\t\t\"src/all/types/ref/TestTypes.java all.types.ref.TestTypes.{} [\t\t\ufffd|Types|\ufffd t;@221] EXACT_MATCH\\n\" +", "-\t\t\"src/all/types/ref/TestTypes.java Types all.types.ref.TestTypes.method(Types) [\t\t\ufffd|Object|\ufffd obj = new Types();@502] EXACT_MATCH\\n\" +", "-\t\t\"src/all/types/ref/TestTypes.java Types all.types.ref.TestTypes.method(Types) [\t\t\ufffd|Types|\ufffd local = (Types) obj;@530] EXACT_MATCH\"", "+\t\t\"src/all/types/ref/TestTypes.java all.types.ref.TestTypes.{} [\t\t!|Object|! o;@209] EXACT_MATCH\\n\" +", "+\t\t\"src/all/types/ref/TestTypes.java all.types.ref.TestTypes.{} [\t\t!|Types|! t;@221] EXACT_MATCH\\n\" +", "+\t\t\"src/all/types/ref/TestTypes.java Types all.types.ref.TestTypes.method(Types) [\t\t!|Object|! obj = new Types();@502] EXACT_MATCH\\n\" +", "+\t\t\"src/all/types/ref/TestTypes.java Types all.types.ref.TestTypes.method(Types) [\t\t!|Types|! local = (Types) obj;@530] EXACT_MATCH\""]}], "num": 66133}