{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "825a3481a11eded127cf968382f7a86e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18369ed503b15d1f7a2c2b4f4e2c0956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "225ea5653541f8a56d524334d3e9e6bb7fa18aa6", "commitAfterChange": "e67d1dc6830648c83fdb0e0b83b59925424638d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\tboolean analyseResources = currentScope.compilerOptions().analyseResourceLeaks;", "-\t\t\t\tif (FakedTrackingVariable.isAnyCloseable(this.expressions[i].resolvedType)) {", "+\t\t\t\tif (analyseResources && FakedTrackingVariable.isAnyCloseable(this.expressions[i].resolvedType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "258fc48e3d3146f0950d7ef319042c0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "225ea5653541f8a56d524334d3e9e6bb7fa18aa6", "commitAfterChange": "e67d1dc6830648c83fdb0e0b83b59925424638d8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tif (CharOperation.equals(TypeConstants.CLOSE, this.selector)) ", "+\tboolean analyseResources = currentScope.compilerOptions().analyseResourceLeaks;", "+\tif (analyseResources && CharOperation.equals(TypeConstants.CLOSE, this.selector)) ", "-\t\t\t// if argument is an AutoCloseable insert info that it *may* be closed (by the target method, i.e.)", "-\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo, false);", "+\t\t\tif (analyseResources) {", "+\t\t\t\t// if argument is an AutoCloseable insert info that it *may* be closed (by the target method, i.e.)", "+\t\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo, false);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "896d99738378015dfaee5f338c0234db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "225ea5653541f8a56d524334d3e9e6bb7fa18aa6", "commitAfterChange": "e67d1dc6830648c83fdb0e0b83b59925424638d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\t\tboolean analyseResources = currentScope.compilerOptions().analyseResourceLeaks;", "-\t\t\t\t\t// if argument is an AutoCloseable insert info that it *may* be closed (by the target constructor, i.e.)", "-\t\t\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo, false);", "+\t\t\t\t\tif (analyseResources) {", "+\t\t\t\t\t\t// if argument is an AutoCloseable insert info that it *may* be closed (by the target constructor, i.e.)", "+\t\t\t\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo, false);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99881a765114d4b69ebb0de868e99c44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "3d1407281a9de06ef3da16640a6462b66a69a15f", "commitAfterChange": "d60153f38977c8d3c207bd95c4a9121cd05934cc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["+\tboolean reachUnchecked = !scope.compilerOptions().", "+\t\treportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions;", "-\t\t\tthis.isReached[cacheIndex] |= bitMask;", "+\t\t\tif (reachUnchecked) {", "+\t\t\t\tthis.isReached[cacheIndex] |= bitMask;", "+\t\t\t}"]}], "num": 5029}