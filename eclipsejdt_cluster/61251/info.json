{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e272a7870e00596568acd64d637466b7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d48146376b459fa0469ec5362878a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementNotifier.java", "commitBeforeChange": "23d1bc466b4877bf5eceb83f88acf63af19c0d70", "commitAfterChange": "2b0e753de92cc29b7a8b55b07153a9f3b515c0be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration, TypeDeclaration declaringType, ImportReference currentPackage)", "signatureAfterChange": " protected void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration, TypeDeclaration declaringType, ImportReference currentPackage)", "diff": ["+\t\t\tcurrentModifiers &= ExtraCompilerModifiers.AccJustFlag | ClassFileConstants.AccDeprecated;", "-", "-\t\t\t// remember deprecation so as to not lose it below", "-\t\t\tboolean deprecated = (currentModifiers & ClassFileConstants.AccDeprecated) != 0 || hasDeprecatedAnnotation(methodDeclaration.annotations);", "+\t\t\tif (hasDeprecatedAnnotation(methodDeclaration.annotations))", "+\t\t\t\tcurrentModifiers |= ClassFileConstants.AccDeprecated;", "-\t\t\tmethodInfo.modifiers = deprecated ? (currentModifiers & ExtraCompilerModifiers.AccJustFlag) | ClassFileConstants.AccDeprecated : currentModifiers & ExtraCompilerModifiers.AccJustFlag;", "+\t\t\tmethodInfo.modifiers = currentModifiers;", "+\t\tcurrentModifiers &= ExtraCompilerModifiers.AccJustFlag | ClassFileConstants.AccDeprecated | ClassFileConstants.AccAnnotationDefault | ExtraCompilerModifiers.AccDefaultMethod;", "-", "-\t\t// remember deprecation so as to not lose it below", "-\t\tboolean deprecated = (currentModifiers & ClassFileConstants.AccDeprecated) != 0 || hasDeprecatedAnnotation(methodDeclaration.annotations);", "+\t\tif (hasDeprecatedAnnotation(methodDeclaration.annotations))", "+\t\t\tcurrentModifiers |= ClassFileConstants.AccDeprecated;", "-\t\tmethodInfo.modifiers = deprecated ? (currentModifiers & ExtraCompilerModifiers.AccJustFlag) | ClassFileConstants.AccDeprecated : currentModifiers & ExtraCompilerModifiers.AccJustFlag;", "+\t\tmethodInfo.modifiers = currentModifiers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea70d8eeb2dd616449235093c1ef279", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\t\t\tcurrentModifiers |= AccVarargs;", "-\t\t\tboolean deprecated = (currentModifiers & AccDeprecated) != 0; // remember deprecation so as to not lose it below", "+\t\t\t\tcurrentModifiers |= ClassFileConstants.AccVarargs;", "+\t\t\tboolean deprecated = (currentModifiers & ClassFileConstants.AccDeprecated) != 0; // remember deprecation so as to not lose it below", "-\t\t\tmethodInfo.modifiers = deprecated ? (currentModifiers & AccJustFlag) | AccDeprecated : currentModifiers & AccJustFlag;", "+\t\t\tmethodInfo.modifiers = deprecated ? (currentModifiers & ExtraCompilerModifiers.AccJustFlag) | ClassFileConstants.AccDeprecated : currentModifiers & ExtraCompilerModifiers.AccJustFlag;", "-\t\t\tcurrentModifiers |= AccVarargs;", "-\t\tboolean deprecated = (currentModifiers & AccDeprecated) != 0; // remember deprecation so as to not lose it below", "+\t\t\tcurrentModifiers |= ClassFileConstants.AccVarargs;", "+\t\tboolean deprecated = (currentModifiers & ClassFileConstants.AccDeprecated) != 0; // remember deprecation so as to not lose it below", "-\t\tmethodInfo.modifiers = deprecated ? (currentModifiers & AccJustFlag) | AccDeprecated : currentModifiers & AccJustFlag;", "+\t\tmethodInfo.modifiers = deprecated ? (currentModifiers & ExtraCompilerModifiers.AccJustFlag) | ClassFileConstants.AccDeprecated : currentModifiers & ExtraCompilerModifiers.AccJustFlag;"]}], "num": 61251}