{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b92dfca56c2ba45c741dca7075c7187", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee5fb9e63bb12b8f2058bcda858b655", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "commitAfterChange": "7a57dee588cd632418aaf1f630bac2c2a5d6439a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t", "-\tpublic static CompilationUnitDeclaration resolve(", "-\t\tICompilationUnit unitElement,", "-\t\tNodeSearcher nodeSearcher,", "-\t\tboolean cleanUp,", "-\t\tchar[] source,", "-\t\tWorkingCopyOwner owner,", "-\t\tIProgressMonitor monitor)", "-\t\tthrows JavaModelException {", "-\t\t", "-\t\tIPackageFragment packageFragment = (IPackageFragment)unitElement.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "-\t\tchar[][] packageName = null;", "-\t\tif (packageFragment != null){", "-\t\t\tpackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "-\t\t}", "-\t\tString fileName = unitElement.getElementName();", "-\t\tIJavaProject project = unitElement.getJavaProject();", "-\t\treturn resolve(source, packageName, fileName, project, nodeSearcher, cleanUp, owner, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d942e1521493d6db9f7dfecc8e17656", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "fe905e29a608f61f2afe181f4c1e4e27bb2b95dc", "commitAfterChange": "53a7cfa9bf2a3a1ade921d716dbdc58a4bfc35d4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "signatureAfterChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\tPackageFragment packageFragment = (PackageFragment) this.classFileSource.getType().getPackageFragment();", "+\t\t\t\t\t\t\tPackageFragment packageFragment = (PackageFragment) this.classFileSource.getParent();", "-\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(SuffixConstants.SUFFIX_STRING_java);", "-\t\t\t\t\t\t\tString classFileName = this.classFileSource.getElementName(); // this includes the trailing .class", "-\t\t\t\t\t\t\tbuffer.insert(0, classFileName.toCharArray(), 0, classFileName.indexOf('.'));", "-\t\t\t\t\t\t\tfileName = String.valueOf(buffer);", "+\t\t\t\t\t\t\tBinaryType type = (BinaryType) this.classFileSource.getType();", "+\t\t\t\t\t\t\tIBinaryType binaryType = (IBinaryType) type.getElementInfo();", "+\t\t\t\t\t\t\tfileName = type.sourceFileName(binaryType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "404ca420fcc1e33a8f218122bb4d0e42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "commitAfterChange": "7a57dee588cd632418aaf1f630bac2c2a5d6439a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tIClassFile classFile, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tprivate CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit, \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-", "-\tpublic static CompilationUnitDeclaration resolve(", "-\t\tIClassFile classFile,", "-\t\tNodeSearcher nodeSearcher,", "-\t\tboolean cleanUp,", "-\t\tchar[] source,", "-\t\tWorkingCopyOwner owner,", "-\t\tIProgressMonitor monitor)", "-\t\tthrows JavaModelException {", "-\t\t", "-\t\tchar[][] packageName = CharOperation.splitOn('.', classFile.getType().getPackageFragment().getElementName().toCharArray());", "-\t\tStringBuffer buffer = new StringBuffer(SuffixConstants.SUFFIX_STRING_java);", "-\t\tString classFileName = classFile.getElementName(); // this includes the trailing .class", "-\t\tbuffer.insert(0, classFileName.toCharArray(), 0, classFileName.indexOf('.'));", "-\t\tString fileName = String.valueOf(buffer);", "-\t\tIJavaProject project = classFile.getJavaProject();", "-\t\treturn resolve(source, packageName, fileName, project, nodeSearcher, cleanUp, owner, monitor);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5baa2ff998f6ef1ce622d02a81479cba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "signatureAfterChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tIPackageFragment packageFragment = (IPackageFragment)this.compilationUnitSource.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "+\t\t\t\t\t\tPackageFragment packageFragment = (PackageFragment)this.compilationUnitSource.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "-\t\t\t\t\t\t\tpackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "+\t\t\t\t\t\t\tpackageName = Util.toCharArrays(packageFragment.names);", "-\t\t\t\t\t\t\tpackageName = CharOperation.splitOn('.', this.classFileSource.getType().getPackageFragment().getElementName().toCharArray());", "+\t\t\t\t\t\t\tPackageFragment packageFragment = (PackageFragment) this.classFileSource.getType().getPackageFragment();", "+\t\t\t\t\t\t\tpackageName = Util.toCharArrays(packageFragment.names);"]}], "num": 61513}