{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec671efccc305d1820d472ef7784de02", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75b61e59d30510114690f2fcad6bd02b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "27f0a8bf5e0182b2f55d23c88165e43a56aee13f", "commitAfterChange": "51213023943da7653dfbcc6859baaa171fa1aac9", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public boolean hasNullTypeAnnotation()", "signatureAfterChange": " public boolean hasNullTypeAnnotation(AnnotationPosition position)", "diff": ["-public boolean hasNullTypeAnnotation() {", "+public boolean hasNullTypeAnnotation(AnnotationPosition position) {", "-\t\tAnnotation[] innerAnnotations = this.annotations[this.annotations.length-1];", "-\t\tif (containsNullAnnotation(innerAnnotations))", "-\t\t\treturn true;", "+\t\tif (position == AnnotationPosition.MAIN_TYPE) {", "+\t\t\tAnnotation[] innerAnnotations = this.annotations[this.annotations.length-1];", "+\t\t\treturn containsNullAnnotation(innerAnnotations);", "+\t\t} else {", "+\t\t\tfor (Annotation[] someAnnotations: this.annotations) {", "+\t\t\t\tif (containsNullAnnotation(someAnnotations))", "+\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cebfad05e27f58fd947cb60b4b92579e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t@Override \tpublic IBinaryAnnotation[] getAnnotationsAtCursor()", "signatureAfterChange": "  \t@Override \tpublic IBinaryAnnotation[] getAnnotationsAtCursor(int currentTypeId)", "diff": ["-\tpublic IBinaryAnnotation[] getAnnotationsAtCursor() {", "-\t\tIBinaryAnnotation[] normalAnnotations = this.isEmpty ? null : super.getAnnotationsAtCursor();", "-\t\tif (this.atDefaultLocation) {", "+\tpublic IBinaryAnnotation[] getAnnotationsAtCursor(int currentTypeId) {", "+\t\tIBinaryAnnotation[] normalAnnotations = this.isEmpty ? null : super.getAnnotationsAtCursor(currentTypeId);", "+\t\tif (this.atDefaultLocation && ", "+\t\t\t\t!(this.atTypeBound && currentTypeId == TypeIds.T_JavaLangObject)) // for CLIMB-to-top consider a j.l.Object type bound as no explicit type bound", "+\t\t{"]}], "num": 806}