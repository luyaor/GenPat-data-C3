{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b46c6424fda279311b103375458fd5b9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24392d6cb8cc0624b77baf77ac323c3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic static final Constant computeConstantOperationGREATER_EQUAL(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": "  \tpublic static final Constant computeConstantOperationGREATER_EQUAL(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() >= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() >= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() >= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() >= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() >= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() >= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() >= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.charValue() >= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.charValue() >= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.charValue() >= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.charValue() >= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.charValue() >= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.charValue() >= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.charValue() >= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() >= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() >= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() >= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() >= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() >= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() >= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() >= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.floatValue() >= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.floatValue() >= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.floatValue() >= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.floatValue() >= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.floatValue() >= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.floatValue() >= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.floatValue() >= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() >= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() >= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() >= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() >= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() >= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() >= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() >= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.doubleValue() >= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.doubleValue() >= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.doubleValue() >= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.doubleValue() >= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.doubleValue() >= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.doubleValue() >= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.doubleValue() >= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() >= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() >= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() >= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() >= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() >= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() >= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() >= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.byteValue() >= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.byteValue() >= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.byteValue() >= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.byteValue() >= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.byteValue() >= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.byteValue() >= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.byteValue() >= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() >= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() >= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() >= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() >= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() >= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() >= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() >= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.shortValue() >= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.shortValue() >= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.shortValue() >= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.shortValue() >= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.shortValue() >= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.shortValue() >= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.shortValue() >= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() >= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() >= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() >= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() >= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() >= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() >= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() >= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.intValue() >= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.intValue() >= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.intValue() >= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.intValue() >= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.intValue() >= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.intValue() >= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.intValue() >= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() >= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() >= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() >= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() >= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() >= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() >= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() >= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.longValue() >= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.longValue() >= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.longValue() >= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.longValue() >= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.longValue() >= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.longValue() >= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.longValue() >= right.longValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f105a89070be41cd032567eb94f23c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t\t \tpublic static final Constant computeConstantOperationLESS(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": "  \t\t \tpublic static final Constant computeConstantOperationLESS(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() < right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() < right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() < right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() < right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() < right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() < right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() < right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.charValue() < right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.charValue() < right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.charValue() < right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.charValue() < right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.charValue() < right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.charValue() < right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.charValue() < right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() < right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() < right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() < right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() < right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() < right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() < right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() < right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.floatValue() < right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.floatValue() < right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.floatValue() < right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.floatValue() < right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.floatValue() < right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.floatValue() < right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.floatValue() < right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() < right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() < right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() < right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() < right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() < right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() < right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() < right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.doubleValue() < right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.doubleValue() < right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.doubleValue() < right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.doubleValue() < right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.doubleValue() < right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.doubleValue() < right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.doubleValue() < right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() < right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() < right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() < right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() < right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() < right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() < right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() < right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.byteValue() < right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.byteValue() < right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.byteValue() < right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.byteValue() < right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.byteValue() < right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.byteValue() < right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.byteValue() < right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() < right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() < right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() < right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() < right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() < right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() < right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() < right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.shortValue() < right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.shortValue() < right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.shortValue() < right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.shortValue() < right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.shortValue() < right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.shortValue() < right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.shortValue() < right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() < right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() < right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() < right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() < right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() < right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() < right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() < right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.intValue() < right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.intValue() < right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.intValue() < right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.intValue() < right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.intValue() < right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.intValue() < right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.intValue() < right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() < right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() < right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() < right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() < right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() < right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() < right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() < right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.longValue() < right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.longValue() < right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.longValue() < right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.longValue() < right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.longValue() < right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.longValue() < right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.longValue() < right.longValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b602c51012549aa6f18308aeeb2255", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\t \tpublic static final Constant computeConstantOperationLESS_EQUAL(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": " \t\t \tpublic static final Constant computeConstantOperationLESS_EQUAL(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() <= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() <= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() <= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() <= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() <= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() <= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() <= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.charValue() <= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.charValue() <= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.charValue() <= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.charValue() <= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.charValue() <= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.charValue() <= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.charValue() <= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() <= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() <= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() <= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() <= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() <= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() <= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() <= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.floatValue() <= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.floatValue() <= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.floatValue() <= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.floatValue() <= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.floatValue() <= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.floatValue() <= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.floatValue() <= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() <= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() <= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() <= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() <= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() <= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() <= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() <= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.doubleValue() <= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.doubleValue() <= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.doubleValue() <= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.doubleValue() <= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.doubleValue() <= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.doubleValue() <= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.doubleValue() <= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() <= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() <= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() <= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() <= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() <= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() <= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() <= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.byteValue() <= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.byteValue() <= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.byteValue() <= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.byteValue() <= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.byteValue() <= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.byteValue() <= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.byteValue() <= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() <= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() <= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() <= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() <= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() <= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() <= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() <= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.shortValue() <= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.shortValue() <= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.shortValue() <= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.shortValue() <= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.shortValue() <= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.shortValue() <= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.shortValue() <= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() <= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() <= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() <= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() <= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() <= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() <= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() <= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.intValue() <= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.intValue() <= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.intValue() <= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.intValue() <= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.intValue() <= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.intValue() <= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.intValue() <= right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() <= right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() <= right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() <= right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() <= right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() <= right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() <= right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() <= right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.longValue() <= right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.longValue() <= right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.longValue() <= right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.longValue() <= right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.longValue() <= right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.longValue() <= right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.longValue() <= right.longValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd02899802b2806f20d1701c514140b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\t \tpublic static final Constant computeConstantOperationGREATER(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": " \t\t \tpublic static final Constant computeConstantOperationGREATER(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() > right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() > right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() > right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() > right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() > right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() > right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() > right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.charValue() > right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.charValue() > right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.charValue() > right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.charValue() > right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.charValue() > right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.charValue() > right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.charValue() > right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() > right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() > right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() > right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() > right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() > right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() > right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() > right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.floatValue() > right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.floatValue() > right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.floatValue() > right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.floatValue() > right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.floatValue() > right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.floatValue() > right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.floatValue() > right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() > right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() > right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() > right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() > right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() > right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() > right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() > right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.doubleValue() > right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.doubleValue() > right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.doubleValue() > right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.doubleValue() > right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.doubleValue() > right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.doubleValue() > right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.doubleValue() > right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() > right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() > right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() > right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() > right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() > right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() > right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() > right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.byteValue() > right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.byteValue() > right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.byteValue() > right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.byteValue() > right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.byteValue() > right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.byteValue() > right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.byteValue() > right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() > right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() > right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() > right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() > right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() > right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() > right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() > right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.shortValue() > right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.shortValue() > right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.shortValue() > right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.shortValue() > right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.shortValue() > right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.shortValue() > right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.shortValue() > right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() > right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() > right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() > right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() > right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() > right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() > right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() > right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.intValue() > right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.intValue() > right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.intValue() > right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.intValue() > right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.intValue() > right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.intValue() > right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.intValue() > right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() > right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() > right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() > right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() > right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() > right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() > right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() > right.longValue());", "+\t\t\t\t\tcase T_char :\treturn BooleanConstant.fromValue(left.longValue() > right.charValue());", "+\t\t\t\t\tcase T_float:\treturn BooleanConstant.fromValue(left.longValue() > right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn BooleanConstant.fromValue(left.longValue() > right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn BooleanConstant.fromValue(left.longValue() > right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn BooleanConstant.fromValue(left.longValue() > right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn BooleanConstant.fromValue(left.longValue() > right.intValue());", "+\t\t\t\t\tcase T_long:\treturn BooleanConstant.fromValue(left.longValue() > right.longValue());"]}], "num": 71789}