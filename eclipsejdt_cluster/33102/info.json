{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34b4313e2a9722fd2395a33cd368e4f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23761f3dff77554ecfa8651a3f8bb85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "c67962c58a465d70610395656ea58071a8fe19cd", "commitAfterChange": "05101ccd4bc695c3634b5c606ee6b586770e7b1d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testChangeClasspath() throws CoreException, TimeOutException", "signatureAfterChange": " public void testChangeClasspath() throws CoreException, TimeOutException", "diff": ["-\tIndexManager indexManager = JavaModelManager.getIndexManager();", "-\t\tindexManager.disable();", "-\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\tjob.runAndSuspend(new IWorkspaceRunnable() {", "-\t\t\t\tcreateJavaProject(\"P1\");", "-\t\t\t\tcreateFile(", "-\t\t\t\t\t\"/P1/X.java\",", "-\t\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"}\"", "-\t\t\t\t);", "+\t\t\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\t\t\t\tpublic void run(IProgressMonitor monitor2) throws CoreException {", "+\t\t\t\t\t\tcreateJavaProject(\"P1\");", "+\t\t\t\t\t\tcreateFile(", "+\t\t\t\t\t\t\t\"/P1/X.java\",", "+\t\t\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\t\t\"}\"", "+\t\t\t\t\t\t);", "+\t\t\t\t\t}", "+\t\t\t\t}, monitor);\t\t\t\t", "-\t\t}, null);", "-\t\t", "-\t\t// add waiting job and wait for it to be executed", "-\t\tindexManager.request(job);", "-\t\tindexManager.enable();", "-\t\tjob.startingSem.acquire(30000); // wait for job to start (wait 30s max)", "+\t\t});", "-\t\tjob.runningSem.release();", "+\t\tjob.resume();", "-\t\tjob.runningSem.release();", "+\t\tjob.resume();", "-\t\tindexManager.enable();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac53f8cab74fb7925eaaba910777f5fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "c67962c58a465d70610395656ea58071a8fe19cd", "commitAfterChange": "05101ccd4bc695c3634b5c606ee6b586770e7b1d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void testConcurrentJob() throws CoreException, InterruptedException, IOException, TimeOutException", "signatureAfterChange": " public void testConcurrentJob() throws CoreException, InterruptedException, IOException, TimeOutException", "diff": ["-\tIndexManager indexManager = JavaModelManager.getIndexManager();", "-\t\tindexManager.disable();", "-\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\tjob.runAndSuspend(new IWorkspaceRunnable() {", "-\t\t\t\tcreateJavaProject(\"P1\", new String[] {}, new String[] {\"/P1/jclMin.jar\"}, \"bin\");", "-\t\t\t\tcreateFile(\"/P1/jclMin.jar\", EMPTY_JAR);", "+\t\t\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\t\t\t\tpublic void run(IProgressMonitor monitor2) throws CoreException {", "+\t\t\t\t\t\tcreateJavaProject(\"P1\", new String[] {}, new String[] {\"/P1/jclMin.jar\"}, \"bin\");", "+\t\t\t\t\t\tcreateFile(\"/P1/jclMin.jar\", EMPTY_JAR);", "+\t\t\t\t\t}", "+\t\t\t\t}, monitor);", "-\t\t}, null);", "-\t\t", "-\t\t// add waiting job and wait for it to be executed", "-\t\tindexManager.request(job);", "-\t\tindexManager.enable();", "-\t\tjob.startingSem.acquire(30000); // wait for job to start (wait 30s max)", "+\t\t});", "-\t\tjob.runningSem.release();", "+\t\tjob.resume();", "-\t\tjob.runningSem.release();", "+\t\tjob.resume();", "-\t\tindexManager.enable();"]}], "num": 33102}