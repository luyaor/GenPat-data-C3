{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c4f676ce747d64a01d419d60028e9bd", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4759e691da52ca09c3a2d4f97c59da82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private void buildTypeBindings()", "signatureAfterChange": "\r private void buildTypeBindings(final char[] source)", "diff": ["-private void buildTypeBindings() {\r", "+private void buildTypeBindings(final char[] source) {\r", "-\tCompilationUnit cu = (CompilationUnit)this.openable;\r", "-\tchar[] qualifiedName = cu.getType(new String(mainTypeName)).getFullyQualifiedName().toCharArray();\r", "+\tchar[] qualifiedName;\r", "+\tif (this.openable instanceof CompilationUnit) {\r", "+\t\tCompilationUnit cu = (CompilationUnit)this.openable;\r", "+\t\tqualifiedName = cu.getType(new String(mainTypeName)).getFullyQualifiedName().toCharArray();\r", "+\t} else {\r", "+\t\torg.eclipse.jdt.internal.core.ClassFile classFile = (org.eclipse.jdt.internal.core.ClassFile)this.openable;\r", "+\t\ttry {\r", "+\t\t\tqualifiedName = classFile.getType().getFullyQualifiedName().toCharArray();\r", "+\t\t} catch (JavaModelException e) {\r", "+\t\t\treturn; // nothing we can do here\r", "+\t\t}\r", "+\t}\r", "-\t\t// get source\r", "-\t\tfinal char[] source = this.getSource();\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf34e06a20569b9222a69131faf30849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["-\t\t// creates compilation unit\r", "-\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "-\r", "-\t\t// create type\r", "-\t\tint length = simpleTypeNames.length;\r", "-\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\t\tfor (int i = 1; i < length; i++) {\r", "-\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\tOpenable currentOpenable = this.getCurrentOpenable();\r", "+\t\tif (currentOpenable instanceof CompilationUnit) {\r", "+\t\t\t// creates compilation unit\r", "+\t\t\tCompilationUnit unit = (CompilationUnit)currentOpenable;\r", "+\t\r", "+\t\t\t// create type\r", "+\t\t\tint length = simpleTypeNames.length;\r", "+\t\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\t\t}\r", "+\t\t\treturn type;\r", "+\t\t} else {\r", "+\t\t\ttry {\r", "+\t\t\t\treturn ((org.eclipse.jdt.internal.core.ClassFile)currentOpenable).getType();\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "-\t\treturn type;\r"]}], "num": 66462}