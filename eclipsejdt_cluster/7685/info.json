{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a683ffa1b316c32acb64b69e9629ef1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e5ba96fbcdafe82d3d4ec71d8501b2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "8975a4993759f4f0cb2d8fff2da5bbb83e0cb45e", "commitAfterChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate boolean checkSelection( \t\tchar[] source, \t\tint selectionStart, \t\tint selectionEnd)", "signatureAfterChange": " \tprivate boolean checkSelection( \t\tchar[] source, \t\tint selectionStart, \t\tint selectionEnd)", "diff": ["-\t\tint token, identCount = 0;", "-\t\tStringBuffer entireSelection = new StringBuffer(selectionEnd - selectionStart + 1);", "+\t\tint token;", "-\t\t\t", "-\t\t\tdo {", "-\t\t\t\ttry {", "+\t\t\ttry {", "+\t\t\t\tdo {", "-\t\t\t\t} catch (InvalidInputException e) {", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t\tswitch (token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNamethis :", "-\t\t\t\t\tcase TerminalTokens.TokenNamesuper :", "-\t\t\t\t\tcase TerminalTokens.TokenNameIdentifier :", "-\t\t\t\t\t\tif (!expectingIdentifier)", "-\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\tlastIdentifier = scanner.getCurrentTokenSource();", "-\t\t\t\t\t\tlastIdentifierStart = scanner.startPosition;", "-\t\t\t\t\t\tlastIdentifierEnd = scanner.currentPosition - 1;", "-\t\t\t\t\t\tif(lastIdentifierEnd > selectionEnd) {", "-\t\t\t\t\t\t\tlastIdentifierEnd = selectionEnd;", "-\t\t\t\t\t\t\tlastIdentifier = CharOperation.subarray(lastIdentifier, 0,lastIdentifierEnd - lastIdentifierStart + 1);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tentireSelection.append(lastIdentifier);", "+", "+\t\t\t\t\tswitch (token) {", "+\t\t\t\t\t\tcase TerminalTokens.TokenNamethis :", "+\t\t\t\t\t\tcase TerminalTokens.TokenNamesuper :", "+\t\t\t\t\t\tcase TerminalTokens.TokenNameIdentifier :", "+\t\t\t\t\t\t\tif (!expectingIdentifier)", "+\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\tlastIdentifier = scanner.getCurrentTokenSource();", "+\t\t\t\t\t\t\tlastIdentifierStart = scanner.startPosition;", "+\t\t\t\t\t\t\tlastIdentifierEnd = scanner.currentPosition - 1;", "+\t\t\t\t\t\t\tif(lastIdentifierEnd > selectionEnd) {", "+\t\t\t\t\t\t\t\tlastIdentifierEnd = selectionEnd;", "+\t\t\t\t\t\t\t\tlastIdentifier = CharOperation.subarray(lastIdentifier, 0,lastIdentifierEnd - lastIdentifierStart + 1);", "+\t\t\t\t\t\t\t}", "+\t", "+\t\t\t\t\t\t\texpectingIdentifier = false;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase TerminalTokens.TokenNameDOT :", "+\t\t\t\t\t\t\tif (expectingIdentifier)", "+\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\texpectingIdentifier = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase TerminalTokens.TokenNameEOF :", "+\t\t\t\t\t\t\tif (expectingIdentifier)", "+\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase TerminalTokens.TokenNameLESS :", "+\t\t\t\t\t\t\tCheckState state = new CheckState(1);", "+\t\t\t\t\t\t\tif(!checkTypeArgument(scanner, state))", "+\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\tidentCount++;", "-\t\t\t\t\t\texpectingIdentifier = false;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameDOT :", "-\t\t\t\t\t\tif (expectingIdentifier)", "+\t\t\t\t\t\t\tif(state.depth != 0)", "+\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\tentireSelection.append('.');", "-\t\t\t\t\t\texpectingIdentifier = true;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameEOF :", "-\t\t\t\t\t\tif (expectingIdentifier)", "-\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tdefault :", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t} while (token != TerminalTokens.TokenNameEOF);", "+\t\t\t\t\t}", "+\t\t\t\t} while (token != TerminalTokens.TokenNameEOF);", "+\t\t\t} catch (InvalidInputException e) {", "+\t\t\t\treturn false;", "+\t\t\t}", "-\t\t\tif (identCount > 1) {", "-\t\t\t\tint entireSelectionLength = entireSelection.length();", "-\t\t\t\tthis.qualifiedSelection = new char[entireSelectionLength];", "-\t\t\t\tentireSelection.getChars(0, entireSelectionLength, this.qualifiedSelection, 0);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f8af0879ca0c9f983f2d7cc82a8972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "03e37ed5506ed50fa30b9f5aa42ff423995a94bd", "commitAfterChange": "4111f058addae7e2d753cc95bd7546b1f787e4c8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 13, "signatureBeforeChange": " public static int getParameterCount(char[] methodSignature) throws IllegalArgumentException", "signatureAfterChange": " public static int getParameterCount(char[] methodSignature) throws IllegalArgumentException", "diff": ["-\t\tint i = CharOperation.indexOf(C_PARAM_START, methodSignature) + 1;", "-\t\tif (i == 0)", "+\t\tint i = CharOperation.indexOf(C_PARAM_START, methodSignature);", "+\t\tif (i < 0) {", "+\t\t} else {", "+\t\t\ti++;", "+\t\t}", "-\t\t\tchar c = methodSignature[i++];", "-\t\t\tswitch (c) {", "-\t\t\t\tcase C_ARRAY :", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase C_BOOLEAN :", "-\t\t\t\tcase C_BYTE :", "-\t\t\t\tcase C_CHAR :", "-\t\t\t\tcase C_DOUBLE :", "-\t\t\t\tcase C_FLOAT :", "-\t\t\t\tcase C_INT :", "-\t\t\t\tcase C_LONG :", "-\t\t\t\tcase C_SHORT :", "-\t\t\t\tcase C_VOID :", "-\t\t\t\t\t++count;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase C_TYPE_VARIABLE :", "-\t\t\t\tcase C_RESOLVED :", "-\t\t\t\tcase C_UNRESOLVED :", "-\t\t\t\t\t// TODO (jeem) - rework to handle type arguments like QList<QString;>;", "-\t\t\t\t\ti = CharOperation.indexOf(C_SEMICOLON, methodSignature, i) + 1;", "-\t\t\t\t\tif (i == 0)", "-\t\t\t\t\t\tthrow new IllegalArgumentException();", "-\t\t\t\t\t++count;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase C_PARAM_END :", "-\t\t\t\t\treturn count;", "-\t\t\t\tdefault :", "-\t\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\tif (methodSignature[i] == C_PARAM_END) {", "+\t\t\t\treturn count;", "+\t\t\tint e= scanTypeSignature(methodSignature, i);", "+\t\t\tif (e < 0) {", "+\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t} else {", "+\t\t\t\ti = e + 1;", "+\t\t\t}", "+\t\t\tcount++;"]}], "num": 7685}