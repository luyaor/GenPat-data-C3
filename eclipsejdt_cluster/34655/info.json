{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ab5ae7685c8dc9a051fa57905748f13", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fac26a2a21b372cc98a6bd08719e42d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "ecfe05941e8fd71e0f9f1756f17baf2b94c6dce1", "commitAfterChange": "c85c2e18cb6aecbd610ab81ae49fd86c03219a94", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tFlowContext targetContext;\r", "-\t\tMethodScope methodScope;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae3212aab3215ce39a3819bf5182399", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "06338d59e18dd650cacadfb53051f533c530fabf", "commitAfterChange": "07de476492c87dc4eb8797084ffe99575b2b9c74", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static MethodBinding checkForContradictions( \t\t\tfinal MethodBinding method, final Object location, final Scope scope)", "signatureAfterChange": " \tpublic static MethodBinding checkForContradictions(MethodBinding method, Object location, Scope scope)", "diff": ["-\tpublic static MethodBinding checkForContradictions(", "-\t\t\tfinal MethodBinding method, final Object location, final Scope scope) {", "-\t\t", "-\t\tclass SearchContradictions extends TypeBindingVisitor {", "-\t\t\tReferenceBinding typeWithContradiction;", "-\t\t\t@Override", "-\t\t\tpublic boolean visit(ReferenceBinding referenceBinding) {", "-\t\t\t\tif ((referenceBinding.tagBits & TagBits.AnnotationNullMASK) == TagBits.AnnotationNullMASK) {", "-\t\t\t\t\tthis.typeWithContradiction = referenceBinding;", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\t@Override", "-\t\t\tpublic boolean visit(TypeVariableBinding typeVariable) {", "-\t\t\t\treturn visit((ReferenceBinding)typeVariable);", "-\t\t\t}", "-\t\t\t@Override", "-\t\t\tpublic boolean visit(RawTypeBinding rawType) {", "-\t\t\t\treturn visit((ReferenceBinding)rawType);", "-\t\t\t}", "-\t\t}", "+\tpublic static MethodBinding checkForContradictions(MethodBinding method, Object location, Scope scope) {"]}], "num": 34655}