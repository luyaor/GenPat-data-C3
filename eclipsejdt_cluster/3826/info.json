{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d472b387134b39e9e5fdec87cec05320", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "252a9bb3a9d93275ae916abaf36e7348", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "01507ee98d5beecae71082dd137e782bb5a3bef0", "commitAfterChange": "919024c6945d276058446a723145394a23656d2f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t \tprivate String[] getNewImportStrings(IBuffer buffer, PackageEntry packageEntry, boolean isStatic, String lineDelim)", "signatureAfterChange": " \t \tprivate String[] getNewImportStrings(IBuffer buffer, PackageEntry packageEntry, boolean isStatic, String lineDelim)", "diff": ["+\t\tStringBuffer allCommentsLead = null;", "-\t\t\t\tallImports.add(getNewImportString(starImportString, isStatic, lineDelim));", "+\t\t\t\t// collect all comments", "+\t\t\t\tIRegion rangeBefore = curr.getPrecedingCommentRange();", "+\t\t\t\tif (rangeBefore != null) {", "+\t\t\t\t\tallImports.add(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength()));", "+\t\t\t\t}", "+\t\t\t\tIRegion rangeAfter = curr.getTrailingCommentRange();", "+\t\t\t\tString trailComments = null;", "+\t\t\t\tif (rangeAfter != null) {", "+\t\t\t\t\ttrailComments = buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength());", "+\t\t\t\t}", "+\t\t\t\tallImports.add(getNewImportString(starImportString, isStatic, trailComments, lineDelim));", "-\t\t\t\t\tif (allComments == null) {", "-\t\t\t\t\t\tallComments = new StringBuffer();", "+\t\t\t\t\tif (allCommentsLead == null) {", "+\t\t\t\t\t\tallCommentsLead = new StringBuffer();", "-\t\t\t\t\tallComments.append(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength())).append(lineDelim);", "+\t\t\t\t\tallCommentsLead.append(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength()));", "-\t\t\t\t\tallComments.append(buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength())).append(lineDelim);", "+\t\t\t\t\tallComments.append(buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength()));", "+\t\tif (allCommentsLead != null) {", "+\t\t\tallImports.add(0, String.valueOf(allCommentsLead));", "+\t\t}", "-\t\t\tallImports.add(0, String.valueOf(allComments));", "+\t\t\tallImports.add(String.valueOf(allComments.append(lineDelim)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c21e41d223a3e088ffe9618cef1f695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "2c31016dddf9aa4fc99eb36c535dd6602745e4be", "commitAfterChange": "fd3b7a5f13831ab502da35b25283f8932b2b1174", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t \tprivate String[] getNewImportStrings(IBuffer buffer, PackageEntry packageEntry, boolean isStatic, String lineDelim)", "signatureAfterChange": " \t \tprivate String[] getNewImportStrings(IBuffer buffer, PackageEntry packageEntry, boolean isStatic, String lineDelim)", "diff": ["+\t\tStringBuffer allCommentsLead = null;", "-\t\t\t\tallImports.add(getNewImportString(starImportString, isStatic, lineDelim));", "+\t\t\t\t// collect all comments", "+\t\t\t\tIRegion rangeBefore = curr.getPrecedingCommentRange();", "+\t\t\t\tif (rangeBefore != null) {", "+\t\t\t\t\tallImports.add(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength()));", "+\t\t\t\t}", "+\t\t\t\tIRegion rangeAfter = curr.getTrailingCommentRange();", "+\t\t\t\tString trailComments = null;", "+\t\t\t\tif (rangeAfter != null) {", "+\t\t\t\t\ttrailComments = buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength());", "+\t\t\t\t}", "+\t\t\t\tallImports.add(getNewImportString(starImportString, isStatic, trailComments, lineDelim));", "-\t\t\t\t\tif (allComments == null) {", "-\t\t\t\t\t\tallComments = new StringBuffer();", "+\t\t\t\t\tif (allCommentsLead == null) {", "+\t\t\t\t\t\tallCommentsLead = new StringBuffer();", "-\t\t\t\t\tallComments.append(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength())).append(lineDelim);", "+\t\t\t\t\tallCommentsLead.append(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength()));", "-\t\t\t\t\tallComments.append(buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength())).append(lineDelim);", "+\t\t\t\t\tallComments.append(buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength()));", "+\t\tif (allCommentsLead != null) {", "+\t\t\tallImports.add(0, String.valueOf(allCommentsLead));", "+\t\t}", "-\t\t\tallImports.add(0, String.valueOf(allComments));", "+\t\t\tallImports.add(String.valueOf(allComments.append(lineDelim)));"]}], "num": 3826}