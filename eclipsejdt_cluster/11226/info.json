{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "338b2a5ed0e16219f945bc1611195d97", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e6791bb93074a95fb9ab54e38736c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "8f40b18693d984d1b3346925dd24dfb773855585", "commitAfterChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor)", "signatureAfterChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allOpenablesInRegion, IProgressMonitor monitor)", "diff": ["-private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor) {", "+private void createTypeHierarchyBasedOnRegion(ArrayList allOpenablesInRegion, IProgressMonitor monitor) {", "-\tint size = allTypesInRegion.size();", "+\tint size = allOpenablesInRegion.size();", "-\tHashSet existingOpenables = new HashSet(size);", "-\tint openableIndex = 0;", "-\tfor (int i = 0; i < size; i++) {", "-\t\tIType type = (IType)allTypesInRegion.get(i);", "-\t\tOpenable openable;", "-\t\tif (type.isBinary()) {", "-\t\t\topenable = (Openable)type.getClassFile();", "-\t\t} else {", "-\t\t\topenable = (Openable)type.getCompilationUnit();", "-\t\t}", "-\t\tif (existingOpenables.add(openable)) {", "-\t\t\topenables[openableIndex++] = openable;", "-\t\t}", "-\t}", "-\tif (openableIndex < size) {", "-\t\tSystem.arraycopy(openables, 0, openables = new Openable[openableIndex], 0, openableIndex);", "-\t}", "+\tallOpenablesInRegion.toArray(openables);", "-\t\tif (monitor != null) monitor.beginTask(\"\", openableIndex * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "-\t\tif (openableIndex > 0) {", "+\t\tif (monitor != null) monitor.beginTask(\"\", size * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "+\t\tif (size > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e008ec021de9e9b4d759045133db1534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "bd7343199b4bc0fe1543353d82fa97e4de0d5c10", "commitAfterChange": "0f2da5d7f1d68e304cd61daaea3ae2598576cbec", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public static char[][] getSimpleNames(char[] name)", "signatureAfterChange": " public static char[][] getSimpleNames(char[] name)", "diff": ["-\tif (name.length == 0) {", "-\t\treturn CharOperation.NO_CHAR_CHAR;", "-\t}", "-\tint dot = CharOperation.indexOf(C_DOT, name);", "-\tif (dot == -1) {", "-\t\treturn new char[][] {name};", "-\t}", "-\tint n = 1;", "-\twhile ((dot = CharOperation.indexOf(C_DOT, name, dot + 1)) != -1) {", "-\t\t++n;", "-\t}", "-\tchar[][] result = new char[n + 1][];", "-\tint segStart = 0;", "-\tfor (int i = 0; i < n; ++i) {", "-\t\tdot = CharOperation.indexOf(C_DOT, name, segStart);", "-\t\tresult[i] = CharOperation.subarray(name, segStart, dot);", "-\t\tsegStart = dot + 1;", "-\t}", "-\tresult[n] = CharOperation.subarray(name, segStart, name.length);", "-\treturn result;", "+\treturn CharOperation.splitOn(C_DOT, name);"]}], "num": 11226}