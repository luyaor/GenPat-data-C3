{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58a37e7fdbd07292014b6a7f5034b571", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c03624613a7343740ef26751f446a1ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "bfbf3f49a0dcb5eb58a64e930945ffa64c1495d2", "commitAfterChange": "2530ef5c12660a11a10ed9656ad746e180fd0c24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void inferFromExpectedType(TypeBinding expectedType, Scope scope)", "signatureAfterChange": " \t \tpublic void inferFromExpectedType(TypeBinding expectedType, Scope scope)", "diff": ["-\t\t\t\t\t// 15.12.2.8 - any remaining variable is assumed to be Object", "-\t\t\t\t\tmostSpecificSubstitute = scope.getJavaLangObject();", "+\t\t\t\t\t// 15.12.2.8 - any remaining variable is assumed to be its erasure", "+\t\t\t\t\tmostSpecificSubstitute = originalVariables[i].erasure();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efdc7675a0890342ddb77f8e93710428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "8d86c45b7dbc1d8316194b358e7234e4491fa695", "commitAfterChange": "0305482ace5c5443f44c914a225574b12096815b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "signatureAfterChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "diff": ["-\t            if (variableSubstitutes[i] == otherType) return; // already there", "-\t            if (variableSubstitutes[i] == null) {", "+\t        \tTypeBinding substitute = variableSubstitutes[i];", "+\t            if (substitute == otherType) return; // already there", "+\t            if (substitute == null) {"]}], "num": 42371}