{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "442b95d3db842042d6b067fef089f580", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1db4df210d80c90f6ca99376749b53fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\tif (flowInfo.isPotentiallyAssigned((FieldBinding)variable)) {", "+\t\t\tif (flowInfo.isPotentiallyAssigned(variable)) {", "-\t\t\tif (flowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "+\t\t\tif (flowInfo.isPotentiallyAssigned(variable)) {", "-\t\t\t\t\t\tflowInfo.nullStatus(this.nullLocals[i]), this.expectedTypes[i]);", "+\t\t\t\t\t\tflowInfo.nullStatus(this.nullVariables[i]), this.expectedTypes[i]);", "-\t\t\t\tthis.parent.recordUsingNullReference(scope, this.nullLocals[i],", "+\t\t\t\tthis.parent.recordUsingNullReference(scope, this.nullVariables[i],", "-", "-\t\t\tLocalVariableBinding local = this.nullLocals[i];", "+\t\t\tVariableBinding local = this.nullVariables[i];", "-\t\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNonNull(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNonNullComparedToNull(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantNullAssignment(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullInstanceof(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, expression);", "+\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "-\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, expression);", "+\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81308c330473834f0d1d344722f6a217", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\tif (flowInfo.isPotentiallyAssigned(variable)) {", "+\t\t\tif (flowInfo.isPotentiallyAssigned((FieldBinding)variable)) {", "-\t\t\tif (flowInfo.isPotentiallyAssigned(variable)) {", "+\t\t\tif (flowInfo.isPotentiallyAssigned((LocalVariableBinding)variable)) {", "-\t\t\t\t\t\tflowInfo.nullStatus(this.nullVariables[i]), this.expectedTypes[i]);", "+\t\t\t\t\t\tflowInfo.nullStatus(this.nullLocals[i]), this.expectedTypes[i]);", "-\t\t\t\tthis.parent.recordUsingNullReference(scope, this.nullVariables[i],", "+\t\t\t\tthis.parent.recordUsingNullReference(scope, this.nullLocals[i],", "+", "-\t\t\tVariableBinding local = this.nullVariables[i];", "+\t\t\tLocalVariableBinding local = this.nullLocals[i];", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, location);", "+\t\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNonNull(local, location);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, location);", "+\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNonNullComparedToNull(local, location);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantNullAssignment(local, expression);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().localVariableNullInstanceof(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, expression);", "-\t\t\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, expression);", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, expression);", "-\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, location);", "+\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, location);", "-\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, location);", "+\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, location);"]}], "num": 26754}