{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6495cbd8296adf37214d1d7d7a606d9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2994a50c14efbdb689417ba718d6986b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic LexStream(int size, Scanner scanner, int[] intervalStartToSkip, int[] intervalEndToSkip, int firstToken, int init, int eof)", "signatureAfterChange": " \t \tpublic LexStream(int size, Scanner scanner, int[] intervalStartToSkip, int[] intervalEndToSkip, int[] intervalFlagsToSkip, int firstToken, int init, int eof)", "diff": ["-\tpublic LexStream(int size, Scanner scanner, int[] intervalStartToSkip, int[] intervalEndToSkip, int firstToken, int init, int eof) {", "+\t", "+\tpublic LexStream(int size, Scanner scanner, int[] intervalStartToSkip, int[] intervalEndToSkip, int[] intervalFlagsToSkip, int firstToken, int init, int eof) {", "+\t\tthis.intervalFlagsToSkip = intervalFlagsToSkip;", "-\t\t//scanner.recordLineSeparator = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641b0c4528e2395534509b2655fa5700", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "d26bd96cc9e1c9e59f2c9d083b9a2725de90852a", "commitAfterChange": "8b048c313a1c6f07bac23f1c84c9ba7d1df315ac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tchar[][] typeNames, \tint matchRule)", "signatureAfterChange": " public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tchar[][] typeNames, \tint[] wildcards, \tint matchRule)", "diff": ["-// SEARCH_15 Create field pattern with generics additional information", "+ */", "+\tint[] wildcards,", "+\tthis.wildcards = wildcards;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9470f9d88754b6498259a04f3fe9f737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "554ad9262edde8518a6f39200ec65ed5eaeb92c4", "commitAfterChange": "347e47a327239f16771992e70a1916c45c7c5600", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \t \tpublic SortElementBuilder(char[] source, Comparator comparator)", "signatureAfterChange": " \t \tpublic SortElementBuilder(char[] source, int[] positionsToMap, Comparator comparator)", "diff": ["-\tpublic SortElementBuilder(char[] source, Comparator comparator) {", "+\tpublic SortElementBuilder(char[] source, int[] positionsToMap, Comparator comparator) {", "+\t\tthis.positionsToMap = positionsToMap;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f9f314d3e3e0febd57a60af33f4034", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementsOperation.java", "commitBeforeChange": "92a1bed0a525f065b3afa8ca4370b68c7dfc54cc", "commitAfterChange": "b6e5ae943550075226ab72b52ecddee830556320", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic SortElementsOperation(IJavaElement[] elements, Comparator comparator)", "signatureAfterChange": " \tpublic SortElementsOperation(IJavaElement[] elements, int[] positions, Comparator comparator)", "diff": ["-\tpublic SortElementsOperation(IJavaElement[] elements, Comparator comparator) {", "+\tpublic SortElementsOperation(IJavaElement[] elements, int[] positions, Comparator comparator) {", "+\t\tthis.positions = positions;"]}], "num": 68685}