{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbd59aa0afa4c43cafa364cab94d25da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1178939a7fbc220a004f9ffc423a36a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": " protected void reportSyntaxErrors(boolean isDietParse, int oldFirstToken)", "signatureAfterChange": " protected void reportSyntaxErrors(boolean isDietParse, int oldFirstToken)", "diff": ["-\tif(referenceContext instanceof MethodDeclaration) {", "-\t\tMethodDeclaration methodDeclaration = (MethodDeclaration) referenceContext;", "+\tif(this.referenceContext instanceof MethodDeclaration) {", "+\t\tMethodDeclaration methodDeclaration = (MethodDeclaration) this.referenceContext;", "-\tcompilationUnit.compilationResult.lineSeparatorPositions = scanner.getLineEnds();", "-\tscanner.recordLineSeparator = false;", "+\tthis.compilationUnit.compilationResult.lineSeparatorPositions = this.scanner.getLineEnds();", "+\tthis.scanner.recordLineSeparator = false;", "-\tint start = scanner.initialPosition;", "-\tint end = scanner.eofPosition <= Integer.MAX_VALUE ? scanner.eofPosition - 1 : scanner.eofPosition;", "+\tint start = this.scanner.initialPosition;", "+\tint end = this.scanner.eofPosition <= Integer.MAX_VALUE ? this.scanner.eofPosition - 1 : this.scanner.eofPosition;", "-\t\tscanner.resetTo(start, end);", "+\t\tthis.scanner.resetTo(start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce48be66554d9993434a2b291e75eec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "commitAfterChange": "6f2d59d80da8490e52a278944b98c97220ac4149", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\tLookupEnvironment environment = scope.environment();", "-\t\tboolean useTypeAnnotations = environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8;", "+\t\tboolean useTypeAnnotations = this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8;", "-\t\t\t\t\t\t\tapplyReturnNullBits(currentMethod, inheritedNullnessBits, environment);", "+\t\t\t\t\t\t\tapplyReturnNullBits(currentMethod, inheritedNullnessBits, this.environment);", "-\t\t\t\t\tapplyReturnNullBits(currentMethod, currentNullnessBits, environment);", "+\t\t\t\t\tapplyReturnNullBits(currentMethod, currentNullnessBits, this.environment);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenvironment.getNonNullAnnotationName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.environment.getNonNullAnnotationName());", "-\t\t\t\t\t\t\t\trecordArgNonNullness18(currentMethod, i, currentArgument, inheritedNonNullNess, environment);", "+\t\t\t\t\t\t\t\trecordArgNonNullness18(currentMethod, i, currentArgument, inheritedNonNullNess, this.environment);", "-\t\t\t\t\t\trecordArgNonNullness18(currentMethod, i, currentArgument, Boolean.TRUE, environment);", "+\t\t\t\t\t\trecordArgNonNullness18(currentMethod, i, currentArgument, Boolean.TRUE, this.environment);", "-\t\t\t\t\tannotationName = environment.getNonNullAnnotationName();", "+\t\t\t\t\tannotationName = this.environment.getNonNullAnnotationName();", "-\t\t\t\t\tannotationName = environment.getNullableAnnotationName();", "+\t\t\t\t\tannotationName = this.environment.getNullableAnnotationName();", "-\t\t\t\t\t\t\t\t(inheritedNonNullNess == null) ? null : environment.getNullableAnnotationName());", "+\t\t\t\t\t\t\t\t(inheritedNonNullNess == null) ? null : this.environment.getNullableAnnotationName());"]}], "num": 72893}