{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a09aa464845073d19e10907b5943b6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "532142cc543ac5d39693e5831a978edb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "928d90c3d930147ffd37781c56673795a6f31eb3", "commitAfterChange": "c7679cd484cc416e79c8e4fd2e1a89f930508174", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testTypeVariable() throws JavaModelException", "signatureAfterChange": "  \tpublic void testTypeVariable() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(bPath, new Problem(\"B\", \"The type A is not generic; it cannot be parameterized with arguments <T>\", bPath, 38, 42, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(bPath, new Problem(\"B\", \"The type A is not generic; it cannot be parameterized with arguments <T>\", bPath, 38, 42, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(bPath, new Problem(\"B\", \"Bound mismatch: The type T is not a valid substitute for the bounded parameter <T extends Comparable> of the type A<T>\", bPath, 43, 44, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(aPath, new Problem(\"A\", \"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\", aPath, 37, 47, CategorizedProblem.CAT_UNCHECKED_RAW)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(bPath, new Problem(\"B\", \"Bound mismatch: The type T is not a valid substitute for the bounded parameter <T extends Comparable> of the type A<T>\", bPath, 43, 44, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(aPath, new Problem(\"A\", \"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\", aPath, 37, 47, CategorizedProblem.CAT_UNCHECKED_RAW, IMarker.SEVERITY_WARNING)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7463cb41a26918e5af22eae3f45c3b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "928d90c3d930147ffd37781c56673795a6f31eb3", "commitAfterChange": "c7679cd484cc416e79c8e4fd2e1a89f930508174", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void testMemberTypeVisibility() throws JavaModelException", "signatureAfterChange": "  \tpublic void testMemberTypeVisibility() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(cPath, new Problem(\"C\", \"The type M is not visible\", cPath, 42, 43, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(xPath, new Problem(\"X\", \"The type p3.C.M is not visible\", xPath, 38, 44, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(cPath, new Problem(\"C\", \"The type M is not visible\", cPath, 42, 43, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(xPath, new Problem(\"X\", \"The type p3.C.M is not visible\", xPath, 38, 44, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(xPath, new Problem(\"X\", \"The type p3.C.M is not visible\", xPath, 38, 44, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(xPath, new Problem(\"X\", \"The type p3.C.M is not visible\", xPath, 38, 44, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cf219782e3554af9f787e12c2a6b7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "928d90c3d930147ffd37781c56673795a6f31eb3", "commitAfterChange": "c7679cd484cc416e79c8e4fd2e1a89f930508174", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void testMethodDeleting() throws JavaModelException", "signatureAfterChange": "  \tpublic void testMethodDeleting() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(cPath, new Problem(\"C\", \"The method i(C) is undefined for the type C\", cPath, 50, 51, CategorizedProblem.CAT_MEMBER)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(dPath, new Problem(\"D\", \"The method i(D) is undefined for the type D.M\", dPath, 69, 70, CategorizedProblem.CAT_MEMBER)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(xPath, new Problem(\"X\", \"The method i(C) is undefined for the type C\", xPath, 57, 58, CategorizedProblem.CAT_MEMBER)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(cPath, new Problem(\"C\", \"The method i(C) is undefined for the type C\", cPath, 50, 51, CategorizedProblem.CAT_MEMBER, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(dPath, new Problem(\"D\", \"The method i(D) is undefined for the type D.M\", dPath, 69, 70, CategorizedProblem.CAT_MEMBER, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(xPath, new Problem(\"X\", \"The method i(C) is undefined for the type C\", xPath, 57, 58, CategorizedProblem.CAT_MEMBER, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 43769}