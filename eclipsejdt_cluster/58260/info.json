{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fc0f2d08c07f0ab6142ae1d0cb5f81e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46aa02d4c4e91347806f81c15f6db444", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR335ClassFileTest.java", "commitBeforeChange": "605f0ee93693a2c3a651d9c4f6ced8379d7a4fcc", "commitAfterChange": "fb7ed53ebd9f908e564426da88c1b0723f545c3f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test015() throws Exception", "signatureAfterChange": " public void test015() throws Exception", "diff": ["-\t\t\t\"    constant #20 utf8: \\\"args\\\"\\n\" + ", "-\t\t\t\"    constant #21 utf8: \\\"[Ljava/lang/String;\\\"\\n\" + ", "-\t\t\t\"    constant #22 utf8: \\\"i\\\"\\n\" + ", "-\t\t\t\"    constant #23 utf8: \\\"LI;\\\"\\n\" + ", "-\t\t\t\"    constant #24 utf8: \\\"lambda$0\\\"\\n\" + ", "-\t\t\t\"    constant #25 utf8: \\\"$deserializeLambda$\\\"\\n\" + ", "-\t\t\t\"    constant #26 utf8: \\\"(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;\\\"\\n\" + ", "-\t\t\t\"    constant #27 method_ref: #28.#30 java/lang/invoke/SerializedLambda.getImplMethodName ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #28 class: #29 java/lang/invoke/SerializedLambda\\n\" + ", "-\t\t\t\"    constant #29 utf8: \\\"java/lang/invoke/SerializedLambda\\\"\\n\" + ", "-\t\t\t\"    constant #30 name_and_type: #31.#32 getImplMethodName ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #31 utf8: \\\"getImplMethodName\\\"\\n\" + ", "-\t\t\t\"    constant #32 utf8: \\\"()Ljava/lang/String;\\\"\\n\" + ", "-\t\t\t\"    constant #33 method_ref: #34.#36 java/lang/String.hashCode ()I\\n\" + ", "-\t\t\t\"    constant #34 class: #35 java/lang/String\\n\" + ", "-\t\t\t\"    constant #35 utf8: \\\"java/lang/String\\\"\\n\" + ", "-\t\t\t\"    constant #36 name_and_type: #37.#38 hashCode ()I\\n\" + ", "-\t\t\t\"    constant #37 utf8: \\\"hashCode\\\"\\n\" + ", "-\t\t\t\"    constant #38 utf8: \\\"()I\\\"\\n\" + ", "-\t\t\t\"    constant #39 string: #24 \\\"lambda$0\\\"\\n\" + ", "-\t\t\t\"    constant #40 method_ref: #34.#41 java/lang/String.equals (Ljava/lang/Object;)Z\\n\" + ", "-\t\t\t\"    constant #41 name_and_type: #42.#43 equals (Ljava/lang/Object;)Z\\n\" + ", "-\t\t\t\"    constant #42 utf8: \\\"equals\\\"\\n\" + ", "-\t\t\t\"    constant #43 utf8: \\\"(Ljava/lang/Object;)Z\\\"\\n\" + ", "-\t\t\t\"    constant #44 method_ref: #28.#45 java/lang/invoke/SerializedLambda.getImplMethodKind ()I\\n\" + ", "-\t\t\t\"    constant #45 name_and_type: #46.#38 getImplMethodKind ()I\\n\" + ", "-\t\t\t\"    constant #46 utf8: \\\"getImplMethodKind\\\"\\n\" + ", "-\t\t\t\"    constant #47 method_ref: #28.#48 java/lang/invoke/SerializedLambda.getFunctionalInterfaceClass ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #48 name_and_type: #49.#32 getFunctionalInterfaceClass ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #49 utf8: \\\"getFunctionalInterfaceClass\\\"\\n\" + ", "-\t\t\t\"    constant #50 string: #51 \\\"I\\\"\\n\" + ", "-\t\t\t\"    constant #51 utf8: \\\"I\\\"\\n\" + ", "-\t\t\t\"    constant #52 method_ref: #3.#41 java/lang/Object.equals (Ljava/lang/Object;)Z\\n\" + ", "-\t\t\t\"    constant #53 method_ref: #28.#54 java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodName ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #54 name_and_type: #55.#32 getFunctionalInterfaceMethodName ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #55 utf8: \\\"getFunctionalInterfaceMethodName\\\"\\n\" + ", "-\t\t\t\"    constant #56 string: #17 \\\"foo\\\"\\n\" + ", "-\t\t\t\"    constant #57 method_ref: #28.#58 java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodSignature ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #58 name_and_type: #59.#32 getFunctionalInterfaceMethodSignature ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #59 utf8: \\\"getFunctionalInterfaceMethodSignature\\\"\\n\" + ", "-\t\t\t\"    constant #60 string: #6 \\\"()V\\\"\\n\" + ", "-\t\t\t\"    constant #61 method_ref: #28.#62 java/lang/invoke/SerializedLambda.getImplClass ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #62 name_and_type: #63.#32 getImplClass ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #63 utf8: \\\"getImplClass\\\"\\n\" + ", "-\t\t\t\"    constant #64 string: #2 \\\"X\\\"\\n\" + ", "-\t\t\t\"    constant #65 method_ref: #28.#66 java/lang/invoke/SerializedLambda.getImplMethodSignature ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #66 name_and_type: #67.#32 getImplMethodSignature ()Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #67 utf8: \\\"getImplMethodSignature\\\"\\n\" + ", "-\t\t\t\"    constant #68 invoke dynamic: #0 #16 foo ()LI;\\n\" + ", "-\t\t\t\"    constant #69 class: #70 java/lang/IllegalArgumentException\\n\" + ", "-\t\t\t\"    constant #70 utf8: \\\"java/lang/IllegalArgumentException\\\"\\n\" + ", "-\t\t\t\"    constant #71 string: #72 \\\"Invalid lambda deserialization\\\"\\n\" + ", "-\t\t\t\"    constant #72 utf8: \\\"Invalid lambda deserialization\\\"\\n\" + ", "-\t\t\t\"    constant #73 method_ref: #69.#74 java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V\\n\" + ", "-\t\t\t\"    constant #74 name_and_type: #5.#75 <init> (Ljava/lang/String;)V\\n\" + ", "-\t\t\t\"    constant #75 utf8: \\\"(Ljava/lang/String;)V\\\"\\n\" + ", "-\t\t\t\"    constant #76 utf8: \\\"StackMapTable\\\"\\n\" + ", "-\t\t\t\"    constant #77 utf8: \\\"SourceFile\\\"\\n\" + ", "-\t\t\t\"    constant #78 utf8: \\\"X.java\\\"\\n\" + ", "-\t\t\t\"    constant #79 utf8: \\\"BootstrapMethods\\\"\\n\" + ", "-\t\t\t\"    constant #80 method_ref: #81.#83 java/lang/invoke/LambdaMetafactory.altMetafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\\n\" + ", "-\t\t\t\"    constant #81 class: #82 java/lang/invoke/LambdaMetafactory\\n\" + ", "-\t\t\t\"    constant #82 utf8: \\\"java/lang/invoke/LambdaMetafactory\\\"\\n\" + ", "-\t\t\t\"    constant #83 name_and_type: #84.#85 altMetafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\\n\" + ", "-\t\t\t\"    constant #84 utf8: \\\"altMetafactory\\\"\\n\" + ", "-\t\t\t\"    constant #85 utf8: \\\"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\\\"\\n\" + ", "-\t\t\t\"    constant #86 method handle: invokestatic (6) #80 \\n\" + ", "-\t\t\t\"    constant #87 method type: #6 ()V\\n\" + ", "-\t\t\t\"    constant #88 method_ref: #1.#89 X.lambda$0 ()V\\n\" + ", "-\t\t\t\"    constant #89 name_and_type: #24.#6 lambda$0 ()V\\n\" + ", "-\t\t\t\"    constant #90 method handle: invokestatic (6) #88 \\n\" + ", "-\t\t\t\"    constant #91 method type: #6 ()V\\n\" + ", "-\t\t\t\"    constant #92 integer: 1\\n\" + ", "-\t\t\t\"    constant #93 utf8: \\\"InnerClasses\\\"\\n\" + ", "-\t\t\t\"    constant #94 class: #95 java/lang/invoke/MethodHandles$Lookup\\n\" + ", "-\t\t\t\"    constant #95 utf8: \\\"java/lang/invoke/MethodHandles$Lookup\\\"\\n\" + ", "-\t\t\t\"    constant #96 class: #97 java/lang/invoke/MethodHandles\\n\" + ", "-\t\t\t\"    constant #97 utf8: \\\"java/lang/invoke/MethodHandles\\\"\\n\" + ", "-\t\t\t\"    constant #98 utf8: \\\"Lookup\\\"\\n\" + ", "+\t\t\t\"    constant #20 class: #21 java/io/Serializable\\n\" + ", "+\t\t\t\"    constant #21 utf8: \\\"java/io/Serializable\\\"\\n\" + ", "+\t\t\t\"    constant #22 class: #23 I\\n\" + ", "+\t\t\t\"    constant #23 utf8: \\\"I\\\"\\n\" + ", "+\t\t\t\"    constant #24 utf8: \\\"args\\\"\\n\" + ", "+\t\t\t\"    constant #25 utf8: \\\"[Ljava/lang/String;\\\"\\n\" + ", "+\t\t\t\"    constant #26 utf8: \\\"i\\\"\\n\" + ", "+\t\t\t\"    constant #27 utf8: \\\"LI;\\\"\\n\" + ", "+\t\t\t\"    constant #28 utf8: \\\"lambda$0\\\"\\n\" + ", "+\t\t\t\"    constant #29 utf8: \\\"$deserializeLambda$\\\"\\n\" + ", "+\t\t\t\"    constant #30 utf8: \\\"(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;\\\"\\n\" + ", "+\t\t\t\"    constant #31 method_ref: #32.#34 java/lang/invoke/SerializedLambda.getImplMethodName ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #32 class: #33 java/lang/invoke/SerializedLambda\\n\" + ", "+\t\t\t\"    constant #33 utf8: \\\"java/lang/invoke/SerializedLambda\\\"\\n\" + ", "+\t\t\t\"    constant #34 name_and_type: #35.#36 getImplMethodName ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #35 utf8: \\\"getImplMethodName\\\"\\n\" + ", "+\t\t\t\"    constant #36 utf8: \\\"()Ljava/lang/String;\\\"\\n\" + ", "+\t\t\t\"    constant #37 method_ref: #38.#40 java/lang/String.hashCode ()I\\n\" + ", "+\t\t\t\"    constant #38 class: #39 java/lang/String\\n\" + ", "+\t\t\t\"    constant #39 utf8: \\\"java/lang/String\\\"\\n\" + ", "+\t\t\t\"    constant #40 name_and_type: #41.#42 hashCode ()I\\n\" + ", "+\t\t\t\"    constant #41 utf8: \\\"hashCode\\\"\\n\" + ", "+\t\t\t\"    constant #42 utf8: \\\"()I\\\"\\n\" + ", "+\t\t\t\"    constant #43 string: #28 \\\"lambda$0\\\"\\n\" + ", "+\t\t\t\"    constant #44 method_ref: #38.#45 java/lang/String.equals (Ljava/lang/Object;)Z\\n\" + ", "+\t\t\t\"    constant #45 name_and_type: #46.#47 equals (Ljava/lang/Object;)Z\\n\" + ", "+\t\t\t\"    constant #46 utf8: \\\"equals\\\"\\n\" + ", "+\t\t\t\"    constant #47 utf8: \\\"(Ljava/lang/Object;)Z\\\"\\n\" + ", "+\t\t\t\"    constant #48 method_ref: #32.#49 java/lang/invoke/SerializedLambda.getImplMethodKind ()I\\n\" + ", "+\t\t\t\"    constant #49 name_and_type: #50.#42 getImplMethodKind ()I\\n\" + ", "+\t\t\t\"    constant #50 utf8: \\\"getImplMethodKind\\\"\\n\" + ", "+\t\t\t\"    constant #51 method_ref: #32.#52 java/lang/invoke/SerializedLambda.getFunctionalInterfaceClass ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #52 name_and_type: #53.#36 getFunctionalInterfaceClass ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #53 utf8: \\\"getFunctionalInterfaceClass\\\"\\n\" + ", "+\t\t\t\"    constant #54 string: #23 \\\"I\\\"\\n\" + ", "+\t\t\t\"    constant #55 method_ref: #3.#45 java/lang/Object.equals (Ljava/lang/Object;)Z\\n\" + ", "+\t\t\t\"    constant #56 method_ref: #32.#57 java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodName ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #57 name_and_type: #58.#36 getFunctionalInterfaceMethodName ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #58 utf8: \\\"getFunctionalInterfaceMethodName\\\"\\n\" + ", "+\t\t\t\"    constant #59 string: #17 \\\"foo\\\"\\n\" + ", "+\t\t\t\"    constant #60 method_ref: #32.#61 java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodSignature ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #61 name_and_type: #62.#36 getFunctionalInterfaceMethodSignature ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #62 utf8: \\\"getFunctionalInterfaceMethodSignature\\\"\\n\" + ", "+\t\t\t\"    constant #63 string: #6 \\\"()V\\\"\\n\" + ", "+\t\t\t\"    constant #64 method_ref: #32.#65 java/lang/invoke/SerializedLambda.getImplClass ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #65 name_and_type: #66.#36 getImplClass ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #66 utf8: \\\"getImplClass\\\"\\n\" + ", "+\t\t\t\"    constant #67 string: #2 \\\"X\\\"\\n\" + ", "+\t\t\t\"    constant #68 method_ref: #32.#69 java/lang/invoke/SerializedLambda.getImplMethodSignature ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #69 name_and_type: #70.#36 getImplMethodSignature ()Ljava/lang/String;\\n\" + ", "+\t\t\t\"    constant #70 utf8: \\\"getImplMethodSignature\\\"\\n\" + ", "+\t\t\t\"    constant #71 invoke dynamic: #0 #16 foo ()LI;\\n\" + ", "+\t\t\t\"    constant #72 class: #73 java/lang/IllegalArgumentException\\n\" + ", "+\t\t\t\"    constant #73 utf8: \\\"java/lang/IllegalArgumentException\\\"\\n\" + ", "+\t\t\t\"    constant #74 string: #75 \\\"Invalid lambda deserialization\\\"\\n\" + ", "+\t\t\t\"    constant #75 utf8: \\\"Invalid lambda deserialization\\\"\\n\" + ", "+\t\t\t\"    constant #76 method_ref: #72.#77 java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V\\n\" + ", "+\t\t\t\"    constant #77 name_and_type: #5.#78 <init> (Ljava/lang/String;)V\\n\" + ", "+\t\t\t\"    constant #78 utf8: \\\"(Ljava/lang/String;)V\\\"\\n\" + ", "+\t\t\t\"    constant #79 utf8: \\\"StackMapTable\\\"\\n\" + ", "+\t\t\t\"    constant #80 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\"    constant #81 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\"    constant #82 utf8: \\\"BootstrapMethods\\\"\\n\" + ", "+\t\t\t\"    constant #83 method_ref: #84.#86 java/lang/invoke/LambdaMetafactory.altMetafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\\n\" + ", "+\t\t\t\"    constant #84 class: #85 java/lang/invoke/LambdaMetafactory\\n\" + ", "+\t\t\t\"    constant #85 utf8: \\\"java/lang/invoke/LambdaMetafactory\\\"\\n\" + ", "+\t\t\t\"    constant #86 name_and_type: #87.#88 altMetafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\\n\" + ", "+\t\t\t\"    constant #87 utf8: \\\"altMetafactory\\\"\\n\" + ", "+\t\t\t\"    constant #88 utf8: \\\"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\\\"\\n\" + ", "+\t\t\t\"    constant #89 method handle: invokestatic (6) #83 \\n\" + ", "+\t\t\t\"    constant #90 method type: #6 ()V\\n\" + ", "+\t\t\t\"    constant #91 method_ref: #1.#92 X.lambda$0 ()V\\n\" + ", "+\t\t\t\"    constant #92 name_and_type: #28.#6 lambda$0 ()V\\n\" + ", "+\t\t\t\"    constant #93 method handle: invokestatic (6) #91 \\n\" + ", "+\t\t\t\"    constant #94 method type: #6 ()V\\n\" + ", "+\t\t\t\"    constant #95 integer: 1\\n\" + ", "+\t\t\t\"    constant #96 utf8: \\\"InnerClasses\\\"\\n\" + ", "+\t\t\t\"    constant #97 class: #98 java/lang/invoke/MethodHandles$Lookup\\n\" + ", "+\t\t\t\"    constant #98 utf8: \\\"java/lang/invoke/MethodHandles$Lookup\\\"\\n\" + ", "+\t\t\t\"    constant #99 class: #100 java/lang/invoke/MethodHandles\\n\" + ", "+\t\t\t\"    constant #100 utf8: \\\"java/lang/invoke/MethodHandles\\\"\\n\" + ", "+\t\t\t\"    constant #101 utf8: \\\"Lookup\\\"\\n\" + ", "-\t\t\t\"    0  invokedynamic 0 foo() : I [19]\\n\" + ", "-\t\t\t\"    5  astore_1 [i]\\n\" + ", "-\t\t\t\"    6  return\\n\" + ", "+\t\t\t\"     0  invokedynamic 0 foo() : I [19]\\n\" + ", "+\t\t\t\"     5  checkcast java.io.Serializable [20]\\n\" + ", "+\t\t\t\"     8  checkcast I [22]\\n\" + ", "+\t\t\t\"    11  astore_1 [i]\\n\" + ", "+\t\t\t\"    12  return\\n\" + ", "-\t\t\t\"        [pc: 6, line: 7]\\n\" + ", "+\t\t\t\"        [pc: 12, line: 7]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] local: args index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\t\"        [pc: 6, pc: 7] local: i index: 1 type: I\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 13] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 12, pc: 13] local: i index: 1 type: I\\n\" + ", "-\t\t\t\"  // Method descriptor #26 (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;\\n\" + ", "+\t\t\t\"  // Method descriptor #30 (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;\\n\" + ", "-\t\t\t\"      1  invokevirtual java.lang.invoke.SerializedLambda.getImplMethodName() : java.lang.String [27]\\n\" + ", "+\t\t\t\"      1  invokevirtual java.lang.invoke.SerializedLambda.getImplMethodName() : java.lang.String [31]\\n\" + ", "-\t\t\t\"      8  invokevirtual java.lang.String.hashCode() : int [33]\\n\" + ", "+\t\t\t\"      8  invokevirtual java.lang.String.hashCode() : int [37]\\n\" + ", "-\t\t\t\"     29  ldc <String \\\"lambda$0\\\"> [39]\\n\" + ", "-\t\t\t\"     31  invokevirtual java.lang.String.equals(java.lang.Object) : boolean [40]\\n\" + ", "+\t\t\t\"     29  ldc <String \\\"lambda$0\\\"> [43]\\n\" + ", "+\t\t\t\"     31  invokevirtual java.lang.String.equals(java.lang.Object) : boolean [44]\\n\" + ", "-\t\t\t\"     61  invokevirtual java.lang.invoke.SerializedLambda.getImplMethodKind() : int [44]\\n\" + ", "+\t\t\t\"     61  invokevirtual java.lang.invoke.SerializedLambda.getImplMethodKind() : int [48]\\n\" + ", "-\t\t\t\"     70  invokevirtual java.lang.invoke.SerializedLambda.getFunctionalInterfaceClass() : java.lang.String [47]\\n\" + ", "-\t\t\t\"     73  ldc <String \\\"I\\\"> [50]\\n\" + ", "-\t\t\t\"     75  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [52]\\n\" + ", "+\t\t\t\"     70  invokevirtual java.lang.invoke.SerializedLambda.getFunctionalInterfaceClass() : java.lang.String [51]\\n\" + ", "+\t\t\t\"     73  ldc <String \\\"I\\\"> [54]\\n\" + ", "+\t\t\t\"     75  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [55]\\n\" + ", "-\t\t\t\"     82  invokevirtual java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodName() : java.lang.String [53]\\n\" + ", "-\t\t\t\"     85  ldc <String \\\"foo\\\"> [56]\\n\" + ", "-\t\t\t\"     87  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [52]\\n\" + ", "+\t\t\t\"     82  invokevirtual java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodName() : java.lang.String [56]\\n\" + ", "+\t\t\t\"     85  ldc <String \\\"foo\\\"> [59]\\n\" + ", "+\t\t\t\"     87  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [55]\\n\" + ", "-\t\t\t\"     94  invokevirtual java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodSignature() : java.lang.String [57]\\n\" + ", "-\t\t\t\"     97  ldc <String \\\"()V\\\"> [60]\\n\" + ", "-\t\t\t\"     99  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [52]\\n\" + ", "+\t\t\t\"     94  invokevirtual java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodSignature() : java.lang.String [60]\\n\" + ", "+\t\t\t\"     97  ldc <String \\\"()V\\\"> [63]\\n\" + ", "+\t\t\t\"     99  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [55]\\n\" + ", "-\t\t\t\"    106  invokevirtual java.lang.invoke.SerializedLambda.getImplClass() : java.lang.String [61]\\n\" + ", "-\t\t\t\"    109  ldc <String \\\"X\\\"> [64]\\n\" + ", "-\t\t\t\"    111  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [52]\\n\" + ", "+\t\t\t\"    106  invokevirtual java.lang.invoke.SerializedLambda.getImplClass() : java.lang.String [64]\\n\" + ", "+\t\t\t\"    109  ldc <String \\\"X\\\"> [67]\\n\" + ", "+\t\t\t\"    111  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [55]\\n\" + ", "-\t\t\t\"    118  invokevirtual java.lang.invoke.SerializedLambda.getImplMethodSignature() : java.lang.String [65]\\n\" + ", "-\t\t\t\"    121  ldc <String \\\"()V\\\"> [60]\\n\" + ", "-\t\t\t\"    123  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [52]\\n\" + ", "+\t\t\t\"    118  invokevirtual java.lang.invoke.SerializedLambda.getImplMethodSignature() : java.lang.String [68]\\n\" + ", "+\t\t\t\"    121  ldc <String \\\"()V\\\"> [63]\\n\" + ", "+\t\t\t\"    123  invokevirtual java.lang.Object.equals(java.lang.Object) : boolean [55]\\n\" + ", "-\t\t\t\"    129  invokedynamic 0 foo() : I [68]\\n\" + ", "+\t\t\t\"    129  invokedynamic 0 foo() : I [71]\\n\" + ", "-\t\t\t\"    135  new java.lang.IllegalArgumentException [69]\\n\" + ", "+\t\t\t\"    135  new java.lang.IllegalArgumentException [72]\\n\" + ", "-\t\t\t\"    139  ldc <String \\\"Invalid lambda deserialization\\\"> [71]\\n\" + ", "-\t\t\t\"    141  invokespecial java.lang.IllegalArgumentException(java.lang.String) [73]\\n\" + ", "+\t\t\t\"    139  ldc <String \\\"Invalid lambda deserialization\\\"> [74]\\n\" + ", "+\t\t\t\"    141  invokespecial java.lang.IllegalArgumentException(java.lang.String) [76]\\n\" + ", "-\t\t\t\"    [inner class info: #94 java/lang/invoke/MethodHandles$Lookup, outer class info: #96 java/lang/invoke/MethodHandles\\n\" + ", "-\t\t\t\"     inner name: #98 Lookup, accessflags: 25 public static final]\\n\" + ", "+\t\t\t\"    [inner class info: #97 java/lang/invoke/MethodHandles$Lookup, outer class info: #99 java/lang/invoke/MethodHandles\\n\" + ", "+\t\t\t\"     inner name: #101 Lookup, accessflags: 25 public static final]\\n\" + ", "-\t\t\t\"  0 : # 86 arguments: {#87,#90,#91,#92}\\n\" + ", "+\t\t\t\"  0 : # 89 arguments: {#90,#93,#94,#95}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f5356d1cedb53350252e204fd8b1aa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "510bca02ec1705cb49e8296894c2f20084ae432d", "commitAfterChange": "4b7339d0380d230f31bd3019b0bc7395f10d2215", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void _test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t// TODO (maxime) reenable once passing on Linux", "-\tpublic void _test013() {", "+\tpublic void test013() {", "-\t\t\t\t\"----------\\r\\n\" + ", "-\t\t\t\t\"1. ERROR in \" + OUTPUT_DIR_PLACEHOLDER + \"\\\\X.java\\r\\n\" + ", "-\t\t\t\t\" (at line 3)\\r\\n\" + ", "-\t\t\t\t\"\tZork z;\\r\\n\" + ", "-\t\t\t\t\"\t^^^^\\r\\n\" + ", "-\t\t\t\t\"Zork cannot be resolved to a type\\r\\n\" + ", "-\t\t\t\t\"----------\\r\\n\" + ", "-\t\t\t\t\"1 problem (1 error)\", ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+\t\t\t\t\" (at line 3)\\n\" + ", "+\t\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1 problem (1 error)\"", "+, ", "-\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n\" + ", "-\t\t\t\"<!DOCTYPE compiler SYSTEM \\\"compiler.dtd\\\">\\r\\n\" + ", "-\t\t\t\"<compiler name=\\\"Eclipse Java Compiler\\\" copyright=\\\"Copyright IBM Corp 2000, 2005. All rights reserved.\\\" version=\\\"0.558, pre-3.1.0 release candidate-1\\\">\\r\\n\" + ", "-\t\t\t\"\t<command_line>\\r\\n\" + ", "-\t\t\t\"\t\t<argument value=\\\"---OUTPUT_DIR_PLACEHOLDER---\\\\X.java\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<argument value=\\\"-1.5\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<argument value=\\\"-proceedOnError\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<argument value=\\\"-log\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<argument value=\\\"---OUTPUT_DIR_PLACEHOLDER---\\\\log.xml\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<argument value=\\\"-d\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<argument value=\\\"---OUTPUT_DIR_PLACEHOLDER---\\\"/>\\r\\n\" + ", "-\t\t\t\"\t</command_line>\\r\\n\" + ", "-\t\t\t\"\t<options>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\\\" value=\\\"1.5\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.codegen.unusedLocal\\\" value=\\\"optimize out\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.compliance\\\" value=\\\"1.5\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.debug.lineNumber\\\" value=\\\"generate\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.debug.localVariable\\\" value=\\\"do not generate\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.debug.sourceFile\\\" value=\\\"generate\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.doc.comment.support\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.maxProblemPerUnit\\\" value=\\\"100\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.annotationSuperInterface\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.autoboxing\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecation\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.discouragedReference\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.emptyStatement\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.fieldHiding\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.finalParameterBound\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.forbiddenReference\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.indirectStaticAccess\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadoc\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTags\\\" value=\\\"enabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef\\\" value=\\\"enabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef\\\" value=\\\"enabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility\\\" value=\\\"private\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.localVariableHiding\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.methodWithConstructorName\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocComments\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility\\\" value=\\\"public\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocTags\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility\\\" value=\\\"private\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingSerialVersion\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.noEffectAssignment\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullReference\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.specialParameterHidingField\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.staticAccessReceiver\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.suppressWarnings\\\" value=\\\"enabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.typeParameterHiding\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unhandledWarningToken\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unnecessaryElse\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedImport\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedLocal\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedParameter\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete\\\" value=\\\"disabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedPrivateMember\\\" value=\\\"ignore\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast\\\" value=\\\"warning\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.source\\\" value=\\\"1.5\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskCaseSensitive\\\" value=\\\"enabled\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskPriorities\\\" value=\\\"\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskTags\\\" value=\\\"\\\"/>\\r\\n\" + ", "-\t\t\t\"\t</options>\\r\\n\" + ", "-\t\t\t\"\t<classpaths>NORMALIZED SECTION</classpaths>\\r\\n\" + ", "-\t\t\t\"\t<sources>\\r\\n\" + ", "-\t\t\t\"\t\t<source path=\\\"---OUTPUT_DIR_PLACEHOLDER---\\\\X.java\\\">\\r\\n\" + ", "-\t\t\t\"\t\t\t<problems problems=\\\"1\\\" errors=\\\"1\\\" warnings=\\\"0\\\">\\r\\n\" + ", "-\t\t\t\"\t\t\t\t<problem charEnd=\\\"28\\\" charStart=\\\"25\\\" severity=\\\"ERROR\\\" line=\\\"3\\\" id=\\\"UndefinedType\\\">\\r\\n\" + ", "-\t\t\t\"\t\t\t\t\t<message value=\\\"Zork cannot be resolved to a type\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t\t\t\t<source_context value=\\\"Zork z;\\\" sourceStart=\\\"0\\\" sourceEnd=\\\"3\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t\t\t\t<arguments>\\r\\n\" + ", "-\t\t\t\"\t\t\t\t\t\t<argument value=\\\"Zork\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t\t\t\t</arguments>\\r\\n\" + ", "-\t\t\t\"\t\t\t\t</problem>\\r\\n\" + ", "-\t\t\t\"\t\t\t</problems>\\r\\n\" + ", "-\t\t\t\"\t\t\t<classfile path=\\\"---OUTPUT_DIR_PLACEHOLDER---\\\\X.class\\\"/>\\r\\n\" + ", "-\t\t\t\"\t\t</source>\\r\\n\" + ", "-\t\t\t\"\t</sources>\\r\\n\" + ", "-\t\t\t\"\t<stats>\\r\\n\" + ", "-\t\t\t\"\t\t<problem_summary problems=\\\"1\\\" errors=\\\"1\\\" warnings=\\\"0\\\" tasks=\\\"0\\\"/>\\r\\n\" + ", "-\t\t\t\"\t</stats>\\r\\n\" + ", "-\t\t\t\"</compiler>\\r\\n\";", "+\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + ", "+\t\t\t\"<!DOCTYPE compiler SYSTEM \\\"compiler.dtd\\\">\\n\" + ", "+\t\t\t\"<compiler name=\\\"Eclipse Java Compiler\\\" copyright=\\\"Copyright IBM Corp 2000, 2005. All rights reserved.\\\" version=\\\"0.558, pre-3.1.0 release candidate-1\\\">\\n\" + ", "+\t\t\t\"\t<command_line>\\n\" + ", "+\t\t\t\"\t\t<argument value=\\\"---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\\"/>\\n\" + ", "+\t\t\t\"\t\t<argument value=\\\"-1.5\\\"/>\\n\" + ", "+\t\t\t\"\t\t<argument value=\\\"-proceedOnError\\\"/>\\n\" + ", "+\t\t\t\"\t\t<argument value=\\\"-log\\\"/>\\n\" + ", "+\t\t\t\"\t\t<argument value=\\\"---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"log.xml\\\"/>\\n\" + ", "+\t\t\t\"\t\t<argument value=\\\"-d\\\"/>\\n\" + ", "+\t\t\t\"\t\t<argument value=\\\"---OUTPUT_DIR_PLACEHOLDER---\\\"/>\\n\" + ", "+\t\t\t\"\t</command_line>\\n\" + ", "+\t\t\t\"\t<options>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\\\" value=\\\"1.5\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.codegen.unusedLocal\\\" value=\\\"optimize out\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.compliance\\\" value=\\\"1.5\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.debug.lineNumber\\\" value=\\\"generate\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.debug.localVariable\\\" value=\\\"do not generate\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.debug.sourceFile\\\" value=\\\"generate\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.doc.comment.support\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.maxProblemPerUnit\\\" value=\\\"100\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.annotationSuperInterface\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.autoboxing\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecation\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.discouragedReference\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.emptyStatement\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.fieldHiding\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.finalParameterBound\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.forbiddenReference\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.indirectStaticAccess\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadoc\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTags\\\" value=\\\"enabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef\\\" value=\\\"enabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef\\\" value=\\\"enabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility\\\" value=\\\"private\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.localVariableHiding\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.methodWithConstructorName\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocComments\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility\\\" value=\\\"public\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocTags\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility\\\" value=\\\"private\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingSerialVersion\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.noEffectAssignment\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullReference\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.specialParameterHidingField\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.staticAccessReceiver\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.suppressWarnings\\\" value=\\\"enabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.typeParameterHiding\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unhandledWarningToken\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unnecessaryElse\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedImport\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedLocal\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedParameter\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unusedPrivateMember\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.source\\\" value=\\\"1.5\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskCaseSensitive\\\" value=\\\"enabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskPriorities\\\" value=\\\"\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskTags\\\" value=\\\"\\\"/>\\n\" + ", "+\t\t\t\"\t</options>\\n\" + ", "+\t\t\t\"\t<classpaths>NORMALIZED SECTION</classpaths>\\n\" + ", "+\t\t\t\"\t<sources>\\n\" + ", "+\t\t\t\"\t\t<source path=\\\"---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\\">\\n\" + ", "+\t\t\t\"\t\t\t<problems problems=\\\"1\\\" errors=\\\"1\\\" warnings=\\\"0\\\">\\n\" + ", "+\t\t\t\"\t\t\t\t<problem charEnd=\\\"28\\\" charStart=\\\"25\\\" severity=\\\"ERROR\\\" line=\\\"3\\\" id=\\\"UndefinedType\\\">\\n\" + ", "+\t\t\t\"\t\t\t\t\t<message value=\\\"Zork cannot be resolved to a type\\\"/>\\n\" + ", "+\t\t\t\"\t\t\t\t\t<source_context value=\\\"Zork z;\\\" sourceStart=\\\"0\\\" sourceEnd=\\\"3\\\"/>\\n\" + ", "+\t\t\t\"\t\t\t\t\t<arguments>\\n\" + ", "+\t\t\t\"\t\t\t\t\t\t<argument value=\\\"Zork\\\"/>\\n\" + ", "+\t\t\t\"\t\t\t\t\t</arguments>\\n\" + ", "+\t\t\t\"\t\t\t\t</problem>\\n\" + ", "+\t\t\t\"\t\t\t</problems>\\n\" + ", "+\t\t\t\"\t\t\t<classfile path=\\\"---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.class\\\"/>\\n\" + ", "+\t\t\t\"\t\t</source>\\n\" + ", "+\t\t\t\"\t</sources>\\n\" + ", "+\t\t\t\"\t<stats>\\n\" + ", "+\t\t\t\"\t\t<problem_summary problems=\\\"1\\\" errors=\\\"1\\\" warnings=\\\"0\\\" tasks=\\\"0\\\"/>\\n\" + ", "+\t\t\t\"\t</stats>\\n\" + ", "+\t\t\t\"</compiler>\\n\";"]}], "num": 58260}