{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23bbc78260b91083b2a1f676e0f3b337", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f30156d6f0519dfc324f16c6f3ff643", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "03aab1ff69aae2de16de283aaf6df2cafa77af82", "commitAfterChange": "0c0e9f808d4509f3cefc470c2105f7ba1290fdb7", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 200, "signatureBeforeChange": "  \tprivate char[][] findUnresolvedReferenceAfter(int from, BlockScope scope, final char[][] discouragedNames)", "signatureAfterChange": "  \tprivate char[][] findUnresolvedReferenceAfter(int from, BlockScope scope, final char[][] discouragedNames)", "diff": ["+\t\t} else if (referenceContext instanceof LambdaExpression) {", "+\t\t\tLambdaExpression expression = (LambdaExpression) referenceContext;", "+\t\t\tUnresolvedReferenceNameFinder nameFinder = new UnresolvedReferenceNameFinder(this);", "+\t\t\tnameFinder.findAfter(", "+\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\texpression.scope,", "+\t\t\t\t\texpression.scope.classScope(),", "+\t\t\t\t\tfrom,", "+\t\t\t\t\texpression.body().sourceEnd,", "+\t\t\t\t\tdiscouragedNames,", "+\t\t\t\t\tnameRequestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d2fdc8ab93799a61ff437baffae705a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1f258635fb49ca32f9def120a3d2f7561eca1435", "commitAfterChange": "f3cbbf9c2974017737d02d4ae4c1412f1a96ce0d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "diff": ["+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (astNode instanceof CompletionOnMemberValueName) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMemberValueName memberValuePair = (CompletionOnMemberValueName) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAnnotation annotation = (Annotation) astNodeParent;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = memberValuePair.name;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.findAnnotationAttributes(this.completionToken, annotation.memberValuePairs(), (ReferenceBinding)annotation.resolvedType);"]}], "num": 66339}