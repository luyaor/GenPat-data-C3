{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67e7b6c08753f30f6cb2f09206bf99f6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39094ed0f5ed8d0a8c7bc6ef0da34f2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "947733b0db1386cb391b705d7217af691888bf59", "commitAfterChange": "e3d99a4fb0fed76f3ae334b659293097151b54e6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding lhsType = lhs.resolveType(scope);", "+\t\tTypeBinding originalLhsType = lhs.resolveType(scope);", "-\t\tif (lhsType == null || expressionType == null)", "+\t\tif (originalLhsType == null || expressionType == null)", "+\t\tTypeBinding lhsType = originalLhsType;", "-\t\treturn this.resolvedType = lhsType;", "+\t\treturn this.resolvedType = originalLhsType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38d413df7c88e2ca7bc732a2336ec8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeSystem.java", "commitBeforeChange": "30aedf23357d9600428aaa2abca9a22bb46f4cd3", "commitAfterChange": "ea035aff9493ec8381c8d6bd9548845ad9f81e22", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void cacheDerivedType(TypeBinding keyType, TypeBinding derivedType)", "signatureAfterChange": " \t \tprivate TypeBinding cacheDerivedType(TypeBinding keyType, TypeBinding derivedType)", "diff": ["-\tprivate void cacheDerivedType(TypeBinding keyType, TypeBinding derivedType) {", "-\t\tif (keyType.id == TypeIds.NoId)", "+\tprivate TypeBinding cacheDerivedType(TypeBinding keyType, TypeBinding derivedType) {", "+\t\tif (keyType == null || derivedType == null || keyType.id == TypeIds.NoId)", "-\t\tderivedTypes[i] = derivedType;", "+\t\treturn derivedTypes[i] = derivedType;"]}], "num": 19582}