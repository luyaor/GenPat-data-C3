{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00d7431e65998684ed51fb1bf52526dd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "515cf4261127e06f457dda8e418571cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Util.java", "commitBeforeChange": "fda0d2ec1e24f98b48a39fc410a65aaa372375fb", "commitAfterChange": "a6fc8aa8054ff029d4a044b3364141f4551124c8", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic static final boolean isExcluded(IJavaElement element)", "signatureAfterChange": " \tpublic static final boolean isExcluded(IJavaElement element)", "diff": ["-\t * Returns whether the given java element is exluded from its classpath.\r\t */", "+\t * All other types of element are considered non-excluded.\r\t */", "-\t\t\tcase IJavaElement.JAVA_PROJECT:", "-\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT:", "-\t\t\tcase IJavaElement.CLASS_FILE:", "-\t\t\t\t// projects, pkg fragment root and class files are never excluded", "-\t\t\t\treturn false;", "-\t\t\t\t// everything in a compilation unit", "-\t\t\t\tIJavaElement cu = element.getAncestor(IJavaElement.COMPILATION_UNIT);", "-\t\t\t\tif (cu == null) return false;", "-\t\t\t\treturn isExcluded(cu);", "+\t\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb1d40761b41f86949353ddc353bdc58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "f299d10a9893e78b9cfdc6af0f45eb1e019157a9", "commitAfterChange": "4e297e768bf0322adef9afbcccce3658b213d8a1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public Member getInnerMostDeclaringMember()", "signatureAfterChange": " public Member getOuterMostLocalContext()", "diff": ["-public Member getInnerMostDeclaringMember() {", "+public Member getOuterMostLocalContext() {", "+\tIJavaElement current = this;", "+\tMember lastLocalContext = null;", "+\tparentLoop: while (true) {", "+\t\tswitch (current.getElementType()) {", "+\t\t\tcase COMPILATION_UNIT :", "+\t\t\t\tbreak parentLoop; // done recursing", "+\t\t\tcase TYPE:", "+\t\t\t\t// cannot be a local context", "+\t\t\t\tbreak;", "+\t\t\tcase INITIALIZER:", "+\t\t\tcase FIELD:", "+\t\t\tcase METHOD:", "+\t\t\t\t // these elements can define local members", "+\t\t\t\tlastLocalContext = (Member) current;", "+\t\t\t\tbreak;", "+\t\t}\t\t", "+\t\tcurrent = current.getParent();", "+\t} ", "+\treturn lastLocalContext;", "+/*\tTODO (jerome) check old version, especially was answering local types", "-\t\t\tMember declaringMember = ((Member)fParent).getInnerMostDeclaringMember();", "+\t\t\tMember declaringMember = ((Member)fParent).getOuterMostLocalContext();", "-\t\t\treturn ((Member)fParent).getInnerMostDeclaringMember();", "+\t\t\treturn ((Member)fParent).getOuterMostLocalContext();", "+*/\t"]}], "num": 63643}