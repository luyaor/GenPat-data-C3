{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c732dc76b75afa5ce0afb4f297786b37", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f9cb5ce25b25ffe7320e3b9067eb44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound, TypeBinding[] someOtherBounds)", "signatureAfterChange": "  \tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound, TypeBinding[] someOtherBounds)", "diff": ["-\t\t\tthis.tagBits |= someBound.tagBits & (TagBits.HasTypeVariable | TagBits.HasMissingType | TagBits.ContainsNestedTypeReferences);", "+\t\t\tthis.tagBits |= someBound.tagBits & (TagBits.HasTypeVariable | TagBits.HasMissingType | TagBits.ContainsNestedTypeReferences | TagBits.HasNullTypeAnnotation);", "-\t\t\t\tthis.tagBits |= someOtherBound.tagBits & TagBits.ContainsNestedTypeReferences;", "+\t\t\t\tthis.tagBits |= someOtherBound.tagBits & (TagBits.ContainsNestedTypeReferences | TagBits.HasNullTypeAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43b6a1c67df2587e6186a941b7b0bd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "7d377efa996fb82a3b5c1b0d3643171f071fe458", "commitAfterChange": "5725587b7e076e798174c1de3afdd9fd81ea2803", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound, TypeBinding[] someOtherBounds)", "signatureAfterChange": "  \tvoid initialize(ReferenceBinding someGenericType, TypeBinding someBound, TypeBinding[] someOtherBounds)", "diff": ["-\t\t\tthis.tagBits |= someBound.tagBits & (TagBits.HasTypeVariable | TagBits.HasMissingType);", "+\t\t\tthis.tagBits |= someBound.tagBits & (TagBits.HasTypeVariable | TagBits.HasMissingType | TagBits.ContainsNestedTypeReferences);", "+\t\t}", "+\t\tif (someOtherBounds != null) {", "+\t\t\tfor (int i = 0, max = someOtherBounds.length; i < max; i++) {", "+\t\t\t\tTypeBinding someOtherBound = someOtherBounds[i];", "+\t\t\t\tthis.tagBits |= someOtherBound.tagBits & TagBits.ContainsNestedTypeReferences;", "+\t\t\t}"]}], "num": 10709}