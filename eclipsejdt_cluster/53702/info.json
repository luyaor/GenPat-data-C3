{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c2bdabcc1e64260b435e85236db3bbb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "457856dbbdb7d237521013c487adbba7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileFinder.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void find0(File f, String pattern, boolean verbose)", "signatureAfterChange": " private static void find0(File f, String pattern, ArrayList collector)", "diff": ["-public void find0(File f, String pattern, boolean verbose) {", "+private static void find0(File f, String pattern, ArrayList collector) {", "-\t\t\t\tfind0(current, pattern, verbose);", "+\t\t\t\tfind0(current, pattern, collector);", "-\t\t\t\t\tint length;", "-\t\t\t\t\tif ((length = this.resultFiles.length) == this.count) {", "-\t\t\t\t\t\tSystem.arraycopy(this.resultFiles, 0, (this.resultFiles = new String[length * 2]), 0, length);", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.resultFiles[this.count++] = current.getAbsolutePath();", "-\t\t\t\t\tif (verbose && (this.count % 100) == 0)", "-\t\t\t\t\t\tSystem.out.print('.');", "+\t\t\t\t\tcollector.add(current.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f16ff90a2723019c57b4f0196ed5922", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "ce7bef49e9ed96b08f61ac987775cd5b5704ee11", "commitAfterChange": "07a11e1e272139637f646eb5763c54327cd4bc46", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private void readChunk(String[] docNames, FileInputStream stream, int index, int size) throws IOException", "signatureAfterChange": " private void readChunk(String[] docNames, FileInputStream stream, int index, int size) throws IOException", "diff": ["-\t\tint start = (streamBuffer[this.bufferIndex++]&0xFF);", "-\t\tif (stream != null && this.bufferIndex == BUFFER_READ_SIZE) {", "-\t\t\tthis.bufferIndex = 0;", "-\t\t\tint readSize = this.streamEnd - this.streamPos;", "-\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, readSize < BUFFER_READ_SIZE ? readSize : BUFFER_READ_SIZE);", "-\t\t}", "-\t\tint end = (streamBuffer[this.bufferIndex++]&0xFF);", "-\t\tif (stream != null && this.bufferIndex == BUFFER_READ_SIZE) {", "-\t\t\tthis.bufferIndex = 0;", "-\t\t\tint readSize = this.streamEnd - this.streamPos;", "-\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, readSize < BUFFER_READ_SIZE ? readSize : BUFFER_READ_SIZE);", "-\t\t}", "+\t\tif (stream != null && this.bufferIndex + 2 >= this.bufferEnd)", "+\t\t\treadStreamBuffer(stream);", "+\t\tint start = streamBuffer[this.bufferIndex++] & 0xFF;", "+\t\tint end = streamBuffer[this.bufferIndex++] & 0xFF;"]}], "num": 53702}