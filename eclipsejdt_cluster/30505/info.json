{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3c61b3d8703213e500491a9488990de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fde4f39364642debec01e8671f629ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "543f951d6390669f9bed8c637d9d6aef509af249", "commitAfterChange": "aac32d052b463fcebfbd1f5deeece1cbb26b197a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t((SourceTypeBinding) codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isReadAccess, isSuperAccess());", "+\t\t\t\t((SourceTypeBinding) codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isReadAccess, false /* not super ref in remote type*/);", "-\t\tSourceTypeBinding destinationType =", "-\t\t\t(SourceTypeBinding) (((QualifiedSuperReference) this.receiver)", "-\t\t\t\t.currentCompatibleType);", "+\t\tSourceTypeBinding destinationType = (SourceTypeBinding) (((QualifiedSuperReference) this.receiver).currentCompatibleType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28509609380a1f46eb40b1e7e8c5f276", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "57f40e6c0dfcf939f53a8ca5092a4521d28a033f", "commitAfterChange": "315acf11b0c9cb31cc22fc01fb1efb136ce92270", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["-\t\t\tsyntheticAccessor = ((SourceTypeBinding)binding.declaringClass).addSyntheticMethod(binding);", "+\t\t\tsyntheticAccessor = ((SourceTypeBinding)binding.declaringClass).addSyntheticMethod(binding, isSuperAccess());", "-\t\tsyntheticAccessor = destinationType.addSyntheticMethod(binding);", "+\t\tsyntheticAccessor = destinationType.addSyntheticMethod(binding, isSuperAccess());", "-\t\t\tsyntheticAccessor = currentCompatibleType.addSyntheticMethod(binding);", "+\t\t\tsyntheticAccessor = currentCompatibleType.addSyntheticMethod(binding, isSuperAccess());"]}], "num": 30505}