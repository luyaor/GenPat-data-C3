{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a86aa991978178e59b451ef5778a0188", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b8df70c94d0154d0d911c227cb75a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "82d58f9af854b98a92f7d694d40ac1e84e13013c", "commitAfterChange": "6d114aac1fbfd4c23041534efbb02c24c883ba25", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void test073()", "signatureAfterChange": " public void test073()", "diff": ["-\t\t\"1. ERROR in X3a.java (at line 3)\\n\" + ", "-\t\t\"\tpublic abstract void test();\\n\" + ", "-\t\t\"\t                     ^^^^^^\\n\" + ", "-\t\t\"The enum X3a can only define the abstract method test() if it also defines enum constants with corresponding implementations\\n\" + ", "+\t\t\"1. ERROR in X3a.java (at line 2)\\n\" + ", "+\t\t\"\tA;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The enum constant A must define the abstract method test()\\n\" + ", "-\t\t\"\t    ^\\n\" + ", "-\t\t\"The type new X3c(){} must implement the inherited abstract method X3c.test()\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The enum constant A must define the abstract method test()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c076842e0d0dae30d325d95ace74c23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryWithResourcesStatementTest.java", "commitBeforeChange": "0bd8e1b1cf24c00d081a70bccd79f0e53ad3dc52", "commitAfterChange": "b35be838b9d57695e23b927dc647a592275feef5", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void test056k()", "signatureAfterChange": " public void test056k()", "diff": ["-\t\t\"Resource \\\"ra1\\\" should be managed by try-with-resource\\n\" + ", "+\t\t\"Resource 'ra1' should be managed by try-with-resource\\n\" + ", "-\t\t\"Resource leak: \\\"ra2\\\" is never closed\\n\" + ", "+\t\t\"Resource leak: 'ra2' is never closed\\n\" + ", "-\t\t\"Resource \\\"ra3\\\" should be managed by try-with-resource\\n\" +", "+\t\t\"Resource 'ra3' should be managed by try-with-resource\\n\" +", "-\t\t\"Resource \\\"rb1\\\" should be managed by try-with-resource\\n\" + ", "+\t\t\"Resource 'rb1' should be managed by try-with-resource\\n\" + ", "-\t\t\"Resource leak: \\\"rb2\\\" is never closed\\n\" + ", "+\t\t\"Resource leak: 'rb2' is never closed\\n\" + ", "-\t\t\"Resource \\\"rb3\\\" should be managed by try-with-resource\\n\" + ", "+\t\t\"Resource 'rb3' should be managed by try-with-resource\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0a4dd9602a292bc61f084e3f53637cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": " public void test312_warn_options()", "signatureAfterChange": " public void test312_warn_options()", "diff": ["-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"Null comparison always yields false: The variable o2 cannot be null at this location\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o2 is specified as @NonNull\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"Null comparison always yields false: The variable o2 cannot be null at this location\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o2 is specified as @NonNull\\n\" + ", "-\t\t\"Null comparison always yields false: The variable o2 cannot be null at this location\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o2 is specified as @NonNull\\n\" + "]}], "num": 9776}