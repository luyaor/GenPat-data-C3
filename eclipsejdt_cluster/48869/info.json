{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aeadfc99e3b3f13ca77083494c651a46", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dff64ef0e4acca61764a8d84f20afd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " protected void consumeInterfaceHeader()", "signatureAfterChange": " protected void consumeInterfaceHeader()", "diff": ["-\tTypeDeclaration typeDecl = (TypeDeclaration) astStack[astPtr];\t", "-\tif (currentToken == TokenNameLBRACE){ ", "-\t\ttypeDecl.bodyStart = scanner.currentPosition;", "+\tTypeDeclaration typeDecl = (TypeDeclaration) this.astStack[this.astPtr];\t", "+\tif (this.currentToken == TokenNameLBRACE){ ", "+\t\ttypeDecl.bodyStart = this.scanner.currentPosition;", "-\tif (currentElement != null){", "-\t\trestartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "+\tif (this.currentElement != null){", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "-\tscanner.commentPtr = -1;\t", "+\tthis.scanner.commentPtr = -1;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "707c72bdd114e9603c9d38ad9a1602db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " protected void consumeClassHeader()", "signatureAfterChange": " protected void consumeClassHeader()", "diff": ["-\tTypeDeclaration typeDecl = (TypeDeclaration) astStack[astPtr];\t", "-\tif (currentToken == TokenNameLBRACE) { ", "-\t\ttypeDecl.bodyStart = scanner.currentPosition;", "+\tTypeDeclaration typeDecl = (TypeDeclaration) this.astStack[this.astPtr];\t", "+\tif (this.currentToken == TokenNameLBRACE) { ", "+\t\ttypeDecl.bodyStart = this.scanner.currentPosition;", "-\tif (currentElement != null) {", "-\t\trestartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "+\tif (this.currentElement != null) {", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "-\tscanner.commentPtr = -1;", "+\tthis.scanner.commentPtr = -1;"]}], "num": 48869}