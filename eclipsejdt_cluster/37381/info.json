{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1271a67a8f2678f4e860716b69af9582", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2362fb9b4343d292023b67c2abfac96c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "fccc3c9fd12b95c908b1566d2444bf312ceefff2", "commitAfterChange": "65db522775790e696e2711bd035a45d8d1048338", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["+", "-\t\t\t\t// copy the list, since single type imports are removed if they cannot be resolved", "-\t\t\t\tfor (int i = 0, length = imports.length; i < length; i++) {", "-\t\t\t\t\tImportBinding typeImport = imports[i];", "-\t\t\t\t\tif (!typeImport.onDemand) {", "-\t\t\t\t\t\tif (CharOperation.equals(typeImport.compoundName[typeImport.compoundName.length - 1], name)) {", "-\t\t\t\t\t\t\tif (unitScope.resolveSingleTypeImport(typeImport) != null) {", "-\t\t\t\t\t\t\t\tImportReference importReference = typeImport.reference;", "-\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "-\t\t\t\t\t\t\t\treturn typeImport.resolvedImport; // already know its visible", "+\t\t\t\tHashtableOfObject typeImports = unitScope.resolvedSingeTypeImports;", "+\t\t\t\tif (typeImports != null) {", "+\t\t\t\t\tImportBinding typeImport = (ImportBinding) typeImports.get(name);", "+\t\t\t\t\tif (typeImport != null) {", "+\t\t\t\t\t\tImportReference importReference = typeImport.reference;", "+\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\treturn typeImport.resolvedImport; // already know its visible", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// walk all the imports since resolvedSingeTypeImports is not yet initialized", "+\t\t\t\t\tfor (int i = 0, length = imports.length; i < length; i++) {", "+\t\t\t\t\t\tImportBinding typeImport = imports[i];", "+\t\t\t\t\t\tif (!typeImport.onDemand) {", "+\t\t\t\t\t\t\tif (CharOperation.equals(typeImport.compoundName[typeImport.compoundName.length - 1], name)) {", "+\t\t\t\t\t\t\t\tif (unitScope.resolveSingleTypeImport(typeImport) != null) {", "+\t\t\t\t\t\t\t\t\tImportReference importReference = typeImport.reference;", "+\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\t\treturn typeImport.resolvedImport; // already know its visible", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba1c7c6c1498c2b417eedd5f4943097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "785b5a5212732878b11204756fc2e20339845fb0", "commitAfterChange": "3d7bc61655a92c7c01b569228f267b1a98e25ce8", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "signatureAfterChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "diff": ["-\t\t\t\treturn; // do not report unused serialVersionUID field", "+\t\tReferenceBinding referenceBinding = field.declaringClass;", "+\t\tif (referenceBinding != null) {", "+\t\t\tif (referenceBinding.findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {", "+\t\t\t\treturn; // do not report unused serialVersionUID field for class that implements Serializable", "+\t\t\t}", "+\t\t}", "-\t\t\t\treturn; // do not report unused serialPersistentFields field", "+\t\tReferenceBinding referenceBinding = field.declaringClass;", "+\t\tif (referenceBinding != null) {", "+\t\t\tif (referenceBinding.findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {", "+\t\t\t\treturn; // do not report unused serialVersionUID field for class that implements Serializable", "+\t\t\t}", "+\t\t}"]}], "num": 37381}