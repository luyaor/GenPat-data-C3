{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47f5f9765557de67900be40f01f15ea1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899024c9b7ecd37f32ca7919c2a44806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic static int scanTypeArgumentSignature(char[] string, int start)", "signatureAfterChange": " \tpublic static int scanTypeArgumentSignature(char[] string, int start)", "diff": ["-\t\tif (c == Signature.C_STAR) {", "-\t\t\treturn start;", "-\t\t}", "-\t\tif (c == Signature.C_EXTENDS || c == Signature.C_SUPER) {", "-\t\t\treturn scanTypeBoundSignature(string, start);", "-\t\t} else {", "-\t\t\treturn scanTypeSignature(string, start);", "+\t\tswitch (c) {", "+\t\t\tcase Signature.C_STAR :", "+\t\t\t\treturn start;", "+\t\t\tcase Signature.C_EXTENDS :", "+\t\t\tcase Signature.C_SUPER :", "+\t\t\t\treturn scanTypeBoundSignature(string, start);", "+\t\t\tdefault :", "+\t\t\t\treturn scanTypeSignature(string, start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c80163cf81db76532ec54b521f6977c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "7f51e750d684686314cf957cd0a463e4558546e5", "commitAfterChange": "f65225afa9896daa624936de0f87dc55afc93a95", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic static int scanArrayTypeSignature(char[] string, int start)", "signatureAfterChange": " \tpublic static int scanArrayTypeSignature(char[] string, int start)", "diff": ["+\t\tint length = string.length;", "-\t\tif (start >= string.length - 1) {", "+\t\tif (start >= length - 1) {", "-\t\treturn scanTypeSignature(string, start + 1);", "+\t\t", "+\t\tc = string[++start];", "+\t\twhile(c == Signature.C_ARRAY) {", "+\t\t\t// need a minimum 2 char", "+\t\t\tif (start >= length - 1) {", "+\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t}", "+\t\t\tc = string[++start];", "+\t\t}", "+\t\treturn scanTypeSignature(string, start);"]}], "num": 1507}