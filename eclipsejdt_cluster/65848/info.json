{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12c9ad03783d33c91b90b8fb8730ffed", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "453c48d3b5f949221aaa6e43af9ca2e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "15070dfb720141f260eff9f86b3742c51648d5f0", "commitAfterChange": "f850238096d0e6e37fbf42c72e3eea2d357ec53f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": " public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-/*\t\tif (scope instanceof HierarchyScope && searchPattern instanceof SearchPattern) {", "+\t\tif (scope instanceof HierarchyScope && searchPattern instanceof SearchPattern) {", "-*/", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a5b3913bcb2ecc170bc20ecf31f14f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": " public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["+\t\t", "+\t\t// In the case of a hierarchy scope make sure that the hierarchy is not computed.", "+\t\t// MatchLocator will filter out elements not in the hierarchy", "+\t\tif (scope instanceof HierarchyScope && searchPattern instanceof SearchPattern) {", "+\t\t\t((HierarchyScope)scope).needsRefresh = false;", "+\t\t\t((SearchPattern)searchPattern).needsResolve = true; // force resolve to compute type bindings", "+\t\t}"]}], "num": 65848}