{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c403ea50ce70fc94054b59a00419005b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf1b7eded8033cc11eeaab6156872aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "bf04e838cc334e741daafee97024413585e12e6c", "commitAfterChange": "fce7b673537005f0506a47431fe9e778017314b4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  private static File createMemLogFile()", "signatureAfterChange": "  private static File createMemLogFile()", "diff": ["+\tPrintStream stream = null;", "-\t\tPrintStream stream = new PrintStream(new FileOutputStream(logFile, true));", "-\t\tif (stream != null) {", "-\t\t\tif (fileExist) {", "-\t\t\t\tstream.println();", "-\t\t\t}", "-\t\t\t// Log date and time", "-\t\t\tDate date = new Date(System.currentTimeMillis());", "-\t\t\tstream.println(\"Tests:\\t\" + STORE_MEMORY);", "-\t\t\tstream.println(\"Date:\\t\" + DateFormat.getDateInstance(3).format(date));", "-\t\t\tstream.println(\"Time:\\t\" + DateFormat.getTimeInstance(3).format(date));", "-\t\t\t// Log columns title", "-\t\t\tstream.print(\"Class\");", "-\t\t\tif (ALL_TESTS_LOG) stream.print(\"\\tTest\");", "-\t\t\tstream.print(\"\\tUsed\\tTotal\\tMax\");", "+\t\tstream = new PrintStream(new FileOutputStream(logFile, true));", "+\t\tif (fileExist) {", "-\t\t\tstream.close();", "-\t\t\tSystem.out.println(\"Log file \" + logFile.getPath() + \" opened.\");", "-\t\t\treturn logFile;", "-\t\t} else {", "-\t\t\tSystem.err.println(\"Cannot open file \" + logFile.getPath());", "+\t\t// Log date and time", "+\t\tDate date = new Date(System.currentTimeMillis());", "+\t\tstream.println(\"Tests:\\t\" + STORE_MEMORY);", "+\t\tstream.println(\"Date:\\t\" + DateFormat.getDateInstance(3).format(date));", "+\t\tstream.println(\"Time:\\t\" + DateFormat.getTimeInstance(3).format(date));", "+\t\t// Log columns title", "+\t\tstream.print(\"Class\");", "+\t\tif (ALL_TESTS_LOG) stream.print(\"\\tTest\");", "+\t\tstream.print(\"\\tUsed\\tTotal\\tMax\");", "+\t\tstream.println();", "+\t\tstream.close();", "+\t\tSystem.out.println(\"Log file \" + logFile.getPath() + \" opened.\");", "+\t\treturn logFile;", "+\t\tSystem.err.println(\"Cannot open file \" + logFile.getPath());", "+\t} finally {", "+\t\tif (stream != null) {", "+\t\t\tstream.close();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db87f639b982a2da1a57d51f7ce7e3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected static void createPrintStream(String className, PrintStream[] logStreams, int count, String prefix)", "signatureAfterChange": " \tprotected static void createPrintStream(String className, PrintStream[] logStreams, int count, String prefix)", "diff": ["-\t\t\t\t\tPrintStream logStream = null;", "-\t\t\t\t\t// Open stream", "-\t\t\t\t\tif (LOG_TYPES[i].equals(\"count\")) {", "-\t\t\t\t\t\tlogStream = logStreams[0] = new PrintStream(new FileOutputStream(logFile, true));", "-\t\t\t\t\t} else if (LOG_TYPES[i].equals(\"sum\")) {", "-\t\t\t\t\t\tlogStream = logStreams[1] = new PrintStream(new FileOutputStream(logFile, true));", "-\t\t\t\t\t} else if (LOG_TYPES[i].equals(\"average\")) {", "-\t\t\t\t\t\tlogStream = logStreams[2] = new PrintStream(new FileOutputStream(logFile, true));", "-\t\t\t\t\t} else if (LOG_TYPES[i].equals(\"stddev\")) {", "-\t\t\t\t\t\tlogStream = logStreams[3] = new PrintStream(new FileOutputStream(logFile, true));", "-\t\t\t\t\t}", "-\t\t\t\t\tif (!fileExist && logStream != null) {", "-\t\t\t\t\t\tlogStream.print(\"Date  \\tTime  \\t\");", "+\t\t\t\t\tlogStreams[i] = new PrintStream(new FileOutputStream(logFile, true));", "+\t\t\t\t\tif (!fileExist && logStreams[i] != null) {", "+\t\t\t\t\t\tlogStreams[i].print(\"Date  \\tTime  \\t\");", "-\t\t\t\t\t\t\tString testName = ((String) TESTS_NAME_LIST.get(j)).substring(8+(prefix==null?0:prefix.length())); // 8=\"testPerf\".length()", "-\t\t\t\t\t\t\tlogStream.print(testName+'\\t');", "+\t\t\t\t\t\t\tString testName = ((String) TESTS_NAME_LIST.get(j)).substring(4+(prefix==null?0:prefix.length())); // 4=\"test\".length()", "+\t\t\t\t\t\t\tlogStreams[i].print(testName+'\\t');", "-\t\t\t\t\t\tlogStream.println(\"Comment\");", "+\t\t\t\t\t\tlogStreams[i].println(\"Comment\");", "-\t\t\t\t\tlogStream.print(DateFormat.getDateInstance(3).format(date)+'\\t');", "-\t\t\t\t\tlogStream.print(DateFormat.getTimeInstance(3).format(date)+'\\t');", "+\t\t\t\t\tlogStreams[i].print(DateFormat.getDateInstance(3).format(date)+'\\t');", "+\t\t\t\t\tlogStreams[i].print(DateFormat.getTimeInstance(3).format(date)+'\\t');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38d36087567c92c5316b30d385b26a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tstatic void createPrintStream(Class testClass, PrintStream[] logStreams, int count, String prefix)", "signatureAfterChange": " \tstatic void createPrintStream(Class testClass, PrintStream[] logStreams, int count, String prefix)", "diff": ["-\t\t\t\t\tif (!fileExist && logStreams[i] != null) {", "-\t\t\t\t\t\tlogStreams[i].print(\"Date  \\tTime  \\t\");", "-\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "-\t\t\t\t\t\t\tString testName = ((String) TESTS_NAME_LIST.get(j)).substring(4+(prefix==null?0:prefix.length())); // 4=\"test\".length()", "-\t\t\t\t\t\t\tlogStreams[i].print(testName+'\\t');", "+\t\t\t\t\tif (logStreams[i] != null) {", "+\t\t\t\t\t\tif (!fileExist) {", "+\t\t\t\t\t\t\tlogStreams[i].print(\"Date  \\tTime  \\t\");", "+\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "+\t\t\t\t\t\t\t\tString testName = ((String) TESTS_NAME_LIST.get(j)).substring(4+(prefix==null?0:prefix.length())); // 4=\"test\".length()", "+\t\t\t\t\t\t\t\tlogStreams[i].print(testName+'\\t');", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tlogStreams[i].println(\"Comment\");", "+\t\t\t\t\t\t\t", "-\t\t\t\t\t\tlogStreams[i].println(\"Comment\");", "-\t\t\t\t\t\t", "+\t\t\t\t\t\t// Log date and time", "+\t\t\t\t\t\tDate date = new Date(System.currentTimeMillis());", "+\t\t\t\t\t\tlogStreams[i].print(DateFormat.getDateInstance(3).format(date)+'\\t');", "+\t\t\t\t\t\tlogStreams[i].print(DateFormat.getTimeInstance(3).format(date)+'\\t');", "+\t\t\t\t\t\tSystem.out.println(\"Log file \"+logFile.getPath()+\" opened.\");", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tSystem.err.println(\"Cannot open \"+logFile.getPath()+\"!!!\");", "-\t\t\t\t\t// Log date and time", "-\t\t\t\t\tDate date = new Date(System.currentTimeMillis());", "-\t\t\t\t\tlogStreams[i].print(DateFormat.getDateInstance(3).format(date)+'\\t');", "-\t\t\t\t\tlogStreams[i].print(DateFormat.getTimeInstance(3).format(date)+'\\t');", "-\t\t\t\t\tSystem.out.println(\"Log file \"+logFile.getPath()+\" opened.\");", "-\t\t\t\t\t// no log available for this statistic", "+\t\t\t\t\tSystem.err.println(\"Cannot find file \"+logFile.getPath()+\"!!!\");"]}], "num": 38462}