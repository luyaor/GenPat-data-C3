{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "723db2b7b3ea107bc7c5d4f911adfa36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ab0ff9b42823b6047f18abe52af981c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleMemberAnnotation.java", "commitBeforeChange": "100013bece0eb4f533563100e2e2c492eafe5eed", "commitAfterChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic SingleMemberAnnotation(char[] token, long sourcePosition, int sourceStart)", "signatureAfterChange": " \t \tTypeBinding internalResolveType(TypeBinding annotationType, Scope scope)", "diff": ["-\tpublic SingleMemberAnnotation(char[] token, long sourcePosition, int sourceStart) {", "-\t\tthis.tokens = new char[][] { token };", "-\t\tthis.sourcePositions = new long[] { sourcePosition };", "-\t\tthis.sourceStart = sourceStart;", "-\t\tthis.sourceEnd = (int) sourcePosition;", "+\tTypeBinding internalResolveType(TypeBinding annotationType, Scope scope) {", "+\t\t", "+\t\tif (super.internalResolveType(annotationType, scope) == null)", "+\t\t\treturn null;", "+\t\t", "+\t\tcheckMemberValues(", "+\t\t\t\tnew MemberValuePair[] {", "+\t\t\t\t\tnew MemberValuePair(VALUE, this.memberValue.sourceStart, this.memberValue.sourceEnd, this.memberValue) }, ", "+\t\t\t\tscope);", "+\t\treturn this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e27e1df871e7db22d6fd0ef3585c7253", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/pattern/InternalSearchPattern.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic InternalSearchPattern(int patternKind, int matchRule)", "signatureAfterChange": "  protected void acceptMatch(String documentName, SearchPattern pattern, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope)", "diff": ["-", "-\tpublic InternalSearchPattern(int patternKind, int matchRule) {", "-\t\tthis.kind = patternKind;", "-\t\tthis.isCaseSensitive = (matchRule & SearchPattern.R_CASE_SENSITIVE) != 0;", "-\t\tthis.matchMode = matchRule - (this.isCaseSensitive ? SearchPattern.R_CASE_SENSITIVE : 0);", "-\t}", "+protected void acceptMatch(String documentName, SearchPattern pattern, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope) {", "+\tString documentPath = Index.convertPath(documentName);", "+\tif (scope.encloses(documentPath))", "+\t\tif (!requestor.acceptIndexMatch(documentPath, pattern, participant)) ", "+\t\t\tthrow new OperationCanceledException();", "+}"]}], "num": 20473}