{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8fbc7d58e1835567cbf1c929f4217a6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4193f8f92269d479c861c5a8e51ce196", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "4dcee3865dac6ea12db30db530190d4fbe700589", "commitAfterChange": "0d85a7668d7a1b0fd348b12b9181fb4bd1f9702b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tTypeBinding argType = this.typeArguments[i].resolveType(scope, true /* check bounds*/);", "-\t\t\t\tif (argType == null) return null; // error already reported", "+\t\t\t\tTypeReference typeReference = this.typeArguments[i];\t\t\t\t", "+\t\t\t\tTypeBinding argType = typeReference.resolveType(scope, true /* check bounds*/);", "+\t\t\t\tif (argType == null) {", "+\t\t\t\t\tif (typeReference instanceof Wildcard) {", "+\t\t\t\t\t\tscope.problemReporter().illegalUsageOfWildcard(typeReference);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn null; // error already reported", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b3de31263801937ca542f3c83acc37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\tif (this.typeArguments != null) {", "+\t\t\tint length = this.typeArguments.length;", "+\t\t\tboolean argHasError = blockScope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_5;", "+\t\t\tthis.genericTypeArguments = new TypeBinding[length];", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tTypeReference typeReference = this.typeArguments[i];", "+\t\t\t\tif ((this.genericTypeArguments[i] = typeReference.resolveType(blockScope, true /* check bounds*/)) == null) {", "+\t\t\t\t\targHasError = true;", "+\t\t\t\t}", "+\t\t\t\tif (argHasError && typeReference instanceof Wildcard) {", "+\t\t\t\t\tblockScope.problemReporter().illegalUsageOfWildcard(typeReference);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+"]}], "num": 8724}