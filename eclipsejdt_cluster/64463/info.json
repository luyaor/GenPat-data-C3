{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3ebf2d7827805f9084f2007a3d4e0dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5b2cb4346d511ac8d60b8bb40f7d9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "915adeadf0a77f488d15bb1d0bf2559201b1f96d", "commitAfterChange": "e8c4bcb175c9fa83d7e57124058ee64597b70965", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tRootInfo rootInfo(IPath path)", "signatureAfterChange": " \tRootInfo rootInfo(IPath path, int kind)", "diff": ["-\tRootInfo rootInfo(IPath path) {", "-\t\t\tRootInfo rootInfo =  (RootInfo)this.roots.get(path);", "+\t */", "+\tRootInfo rootInfo(IPath path, int kind) {", "+\t\tif (kind == IResourceDelta.REMOVED) {", "+\t\t\treturn (RootInfo)this.oldRoots.get(path);", "+\t\t} else {", "+\t\t\treturn (RootInfo)this.roots.get(path);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f4548b41f8c3972358d6af19d3c474", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "81d6dab71c724c0a5f570110e4e037695837179d", "commitAfterChange": "61742b7a485fa965b2f7b05fc8eadc51ecd60a49", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void findConstructorDeclarations(char[] prefix, boolean camelCaseMatch, final ISearchRequestor storage, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void findConstructorDeclarations(char[] prefix, boolean camelCaseMatch, final ISearchRequestor storage, IProgressMonitor monitor)", "diff": ["-\t\t\t\tfound : while (true) { //the loop will finish if the search request ends or is cancelled", "+\t\t\t\tIndexManager indexManager = JavaModelManager.getIndexManager();", "+\t\t\t\twhile (indexManager.awaitingJobsCount() > 0) {", "-\t\t\t\t\t\tnew BasicSearchEngine(this.workingCopies).searchAllConstructorDeclarations(", "-\t\t\t\t\t\t\t\tqualification,", "-\t\t\t\t\t\t\t\tsimpleName,", "-\t\t\t\t\t\t\t\tmatchRule,", "-\t\t\t\t\t\t\t\tgetSearchScope(),", "-\t\t\t\t\t\t\t\tconstructorRequestor,", "-\t\t\t\t\t\t\t\tCANCEL_IF_NOT_READY_TO_SEARCH,", "-\t\t\t\t\t\t\t\tprogressMonitor);", "-\t\t\t\t\t\tbreak found;", "-\t\t\t\t\t} catch (OperationCanceledException e) {", "-\t\t\t\t\t\tif (monitor.isCanceled()) {", "-\t\t\t\t\t\t\tthrow e;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\tThread.sleep(50); // indexes are not ready. sleep 50ms and retry the search request", "-\t\t\t\t\t\t\t} catch (InterruptedException e1) {", "-\t\t\t\t\t\t\t\t// Do nothing", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tThread.sleep(50); // indexes are not ready,  sleep 50ms...", "+\t\t\t\t\t} catch (InterruptedException e) {", "+\t\t\t\t\t\t// Do nothing", "+\t\t\t\t\t}", "+\t\t\t\t\tif (monitor.isCanceled()) {", "+\t\t\t\t\t\tthrow new OperationCanceledException();", "+\t\t\t\tnew BasicSearchEngine(this.workingCopies).searchAllConstructorDeclarations(", "+\t\t\t\t\t\tqualification,", "+\t\t\t\t\t\tsimpleName,", "+\t\t\t\t\t\tmatchRule,", "+\t\t\t\t\t\tgetSearchScope(),", "+\t\t\t\t\t\tconstructorRequestor,", "+\t\t\t\t\t\tFORCE_IMMEDIATE_SEARCH,", "+\t\t\t\t\t\tprogressMonitor);"]}], "num": 64463}