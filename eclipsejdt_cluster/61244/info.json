{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54e658ac7da36e734d6e5a554c77bf73", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82c49558c726354ba3e8a8a980bac674", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "07500b3aefa58aecd5e846627b7c70382793f29f", "commitAfterChange": "641c18a6fa8d154329ae2bcdac1ab25ff8b18f71", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic static synchronized GeneratedFileManager getGeneratedFileManager(final IProject project)", "signatureAfterChange": "             public void run(IProgressMonitor monitor)", "diff": ["-\t */", "-\tpublic static synchronized GeneratedFileManager getGeneratedFileManager(final IProject project) ", "-\t{", "-\t\tif ( project == null )", "-\t\t\treturn null;", "-\t\t", "-\t\tif ( ! _initialized ) ", "-\t\t\tinit();", "-\t\tGeneratedFileManager gfm = MANAGERS_MAP.get(project);", "-\t\tif (gfm != null)", "-\t\t\treturn gfm;", "-", "-\t\tgfm = new GeneratedFileManager(project);", "-\t\tMANAGERS_MAP.put(project, gfm);", "-\t\treturn gfm;", "+\t\tfinal IWorkspaceRunnable runnable = new IWorkspaceRunnable(){", "+            public void run(IProgressMonitor monitor)", "+            {\t\t", "+            \tif( srcFolder != null ){", "+\t            \ttry{", "+\t            \t\tsrcFolder.delete(true, false, null);", "+\t            \t}catch(CoreException e){", "+\t            \t\tAptPlugin.log(e, \"failed to delete old generated source folder \" + srcFolder.getName() ); //$NON-NLS-1$", "+\t            \t}catch(OperationCanceledException cancel){", "+\t            \t\tAptPlugin.log(cancel, \"deletion of generated source folder got cancelled\"); //$NON-NLS-1$", "+\t            \t}", "+            \t}", "+            };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a0b55b1dccd239cd96e554e05daf4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TestPessimisticProvider.java", "commitBeforeChange": "6e0c03610cbc826f510f4808a438e90bdc9be9b7", "commitAfterChange": "011e8e3a52083052e5657e005c0f9c924e859fa5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void setReadOnly(IResource resource, boolean readOnly) throws CoreException", "signatureAfterChange": " \t\t \t\t\tvoid setReadOnly(IResource resource, boolean readOnly) throws CoreException", "diff": ["+\t\t", "+\t\t\tvoid setReadOnly(IResource resource, boolean readOnly) throws CoreException {", "+\t\t\t\tif (Util.isReadOnlySupported()) {", "+\t\t\t\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "+\t\t\t\t\tif (resourceAttributes != null) {", "+\t\t\t\t\t\tresourceAttributes.setReadOnly(readOnly);", "+\t\t\t\t\t\tresource.setResourceAttributes(resourceAttributes);", "+\t\t\t\t\t}\t\t", "+\t\t\t\t}", "+\t\t\t}", "-", "-\tpublic void setReadOnly(IResource resource, boolean readOnly) throws CoreException {", "-\t\tif (Util.isReadOnlySupported()) {", "-\t\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "-\t\t\tif (resourceAttributes != null) {", "-\t\t\t\tresourceAttributes.setReadOnly(readOnly);", "-\t\t\t\tresource.setResourceAttributes(resourceAttributes);", "-\t\t\t}\t\t", "-\t\t}", "-\t}"]}], "num": 61244}