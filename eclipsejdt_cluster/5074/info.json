{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54af985a8f543c7e3a4678da6fed5463", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f8914bea91c95ba959f89d39f1cee89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "605cc5dd745b7e1d6935bfc34c1be6fcea51b4ab", "commitAfterChange": "03be42bb9ac6b223bea20e29a7b3f31a76dae9e4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected IJavaElement getElement(SearchMatch searchMatch)", "signatureAfterChange": " \tprotected void writeLine() throws CoreException", "diff": ["-\tprotected IJavaElement getElement(SearchMatch searchMatch) {", "-\t\tIJavaElement element = super.getElement(searchMatch);", "-\t\tIJavaElement localElement = null;", "+\tprotected void writeLine() throws CoreException {", "+\t\tsuper.writeLine();", "-\t\tlocalElement = refMatch.getLocalElement();", "+\t\tIJavaElement localElement = refMatch.getLocalElement();", "-\t\t\treturn localElement;", "+\t\t\tthis.line.append(\"+[\");", "+\t\t\tif (localElement.getElementType() == IJavaElement.ANNOTATION) {", "+\t\t\t\tthis.line.append('@');", "+\t\t\t\tthis.line.append(localElement.getElementName());", "+\t\t\t\tthis.line.append(\" on \");", "+\t\t\t\tthis.line.append(localElement.getParent().getElementName());", "+\t\t\t} else {", "+\t\t\t\tthis.line.append(localElement.getElementName());", "+\t\t\t}", "+\t\t\tthis.line.append(']');", "-\t\treturn element;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a44e489cd749eb40bb22902056d59bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \tpublic void printCommentLine(char[] s, int start)", "signatureAfterChange": " \t \tprivate void printCommentLine(char[] s)", "diff": ["-\tpublic void printCommentLine(char[] s, int start) {", "-\t\tint length = s.length;", "-\t\tint index;", "-\t\tloop: for (index = length - 1; index >= 0; index--) {", "-\t\t\tswitch(s[index]) {", "+\tprivate void printCommentLine(char[] s) {", "+\t\tint currentTokenStartPosition = this.scanner.getCurrentTokenStartPosition();", "+\t\tint currentTokenEndPosition = this.scanner.getCurrentTokenEndPosition() + 1;", "+", "+\t\tthis.scanner.resetTo(currentTokenStartPosition, currentTokenEndPosition - 1);", "+\t\tint currentCharacter;", "+\t\tint start = currentTokenStartPosition;", "+\t\tint nextCharacterStart = currentTokenStartPosition;", "+\t\tprintIndentationIfNecessary();", "+\t\tint previousStart = currentTokenStartPosition;", "+", "+\t\tloop: while (nextCharacterStart <= currentTokenEndPosition && (currentCharacter = this.scanner.getNextChar()) != -1) {", "+\t\t\tnextCharacterStart = this.scanner.currentPosition;", "+", "+\t\t\tswitch(currentCharacter) {", "+\t\t\t\t\tstart = previousStart;", "+\t\t\t\t\tbreak loop;", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "+\t\t\t\t\tstart = previousStart;", "+\t\t\tpreviousStart = nextCharacterStart;", "-\t\tprintIndentationIfNecessary();", "-\t\tif (this.positionsToMap != null) {", "-\t\t\tmapPositions(start, this.buffer.length(), s.length);", "+\t\tif (start != currentTokenStartPosition) {", "+\t\t\taddReplaceEdit(start, currentTokenEndPosition - 1, lineSeparator);", "-\t\tthis.buffer", "-\t\t\t.append(s, 0, index + 1)", "-\t\t\t.append(lineSeparator);", "+\t\t// realign to the proper value", "-\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "-\t\t}", "-\t}", "+\t\t\tif (this.memberAlignment != null) {", "+\t\t\t\t// select the last alignment", "+\t\t\t\tif (this.currentAlignment.location.inputOffset > this.memberAlignment.location.inputOffset) {", "+\t\t\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "+\t\t\t\t\tthis.indentationLevel = this.memberAlignment.breakIndentationLevel;", "+\t\t\t} else {", "+\t\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "+\t\tthis.scanner.resetTo(currentTokenEndPosition, this.scannerEndPosition - 1);"]}], "num": 5074}