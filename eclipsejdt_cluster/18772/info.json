{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46ecdcc94038298c45ddb47feb646641", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d76c0f1bfb4ea0a62ee9b31368fc0099", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t TypeBinding getTypeBinding(CompilationUnitDeclaration parsedUnit, TypeDeclaration[] types, char[] typeName, CompilationUnitResolver resolver)", "signatureAfterChange": " \t TypeBinding getTypeBinding(CompilationUnitDeclaration parsedUnit, TypeDeclaration[] types, char[] typeName, CompilationUnitResolver resolver)", "diff": ["-\t \t\tint nextToken = this.scanner.nextToken();", "-\t \t\twhile (nextToken == BindingKeyScanner.TYPE) ", "+\t \t\tint nextToken = BindingKeyScanner.TYPE;", "+\t \t\twhile (this.scanner.isAtMemberTypeStart()) ", "-\t \t\ttypeName = nextToken == BindingKeyScanner.END ? this.scanner.source : CharOperation.subarray(this.scanner.source, 0, this.scanner.start-1);", "+\t \t\ttypeName = nextToken == BindingKeyScanner.END ? this.scanner.source : CharOperation.subarray(this.scanner.source, 0, this.scanner.index+1);", "-\t \t\t\tif (CharOperation.equals(typeName, localTypeBindings[i].constantPoolName()))", "+\t \t\t\tif (CharOperation.equals(typeName, localTypeBindings[i].signature()))", "-\t\t\t\t\tif (this.scanner.nextToken() == BindingKeyScanner.TYPE)", "+\t\t\t\t\tif (this.scanner.isAtMemberTypeStart() && this.scanner.nextToken() == BindingKeyScanner.TYPE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0efde365fb7327226443f069c9a08e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "66429c735e10680c2c008648234f569f6aff8639", "commitAfterChange": "92202e2912c0cb2a74530eca95e0e92a1050756a", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tprivate void parseInnerType()", "signatureAfterChange": "  \tprivate void parseInnerType()", "diff": ["-\t \tif (Character.isDigit(typeName[0])) {", "-\t \t\t// anonymous or local type", "-\t \t\tint nextToken = Scanner.TYPE;", "-\t \t\twhile (this.scanner.isAtMemberTypeStart())", "-\t \t\t\tnextToken = this.scanner.nextToken();", "-\t \t\ttypeName = nextToken == Scanner.END ? this.scanner.source : CharOperation.subarray(this.scanner.source, this.keyStart, this.scanner.index+1);", "-\t \t\tconsumeLocalType(typeName);", "-\t \t} else {", "+\t\tif (Character.isDigit(typeName[0])) {", "+\t\t\t// anonymous or local type", "+\t\t\tint nextToken = Scanner.TYPE;", "+\t\t\twhile (this.scanner.isAtMemberTypeStart() && !this.isMalformed)", "+\t\t\t\tnextToken = this.scanner.nextToken();", "+\t\t\ttypeName = nextToken == Scanner.END ? this.scanner.source : CharOperation.subarray(this.scanner.source, this.keyStart, this.scanner.index+1);", "+\t\t\tconsumeLocalType(typeName);", "+\t\t} else {", "-\t \t}", "+\t\t}"]}], "num": 18772}