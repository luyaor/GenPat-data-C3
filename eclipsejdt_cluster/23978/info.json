{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3234e406f09b72249cd0ed402b3b9a5f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043ca441490cbbaf9730b481d30a4421", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "signatureAfterChange": " \t \tString runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "diff": ["-\tprivate String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator) {", "+\tString runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator) {", "-\t\t\t\tassertSourceEquals(\"Different reformatting\", Util.convertToIndependantLineDelimiter(result), Util.convertToIndependantLineDelimiter(result2));", "+\t\t\t\tassertSourceEquals(\"Second formatting is different from first one!\", Util.convertToIndependantLineDelimiter(result), Util.convertToIndependantLineDelimiter(result2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fe8d1ba8aaf45da9b83097149e6180c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate String runFormatter(DefaultCodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "signatureAfterChange": " \t \tprivate String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "diff": ["-\tprivate String runFormatter(DefaultCodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator) {", "+\tprivate String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator) {", "-//\t\t\tassertEquals(\"Shoult not have edits\", 0, edit.getChildren().length);", "+\t\t\tassertEquals(\"Shoult not have edits\", 0, edit.getChildren().length);", "-\t\t}", "-\t\tif (DefaultCodeFormatter.DEBUG){", "-\t\t\tSystem.out.println(codeFormatter.getDebugOutput());", "-\t\t\t"]}], "num": 23978}