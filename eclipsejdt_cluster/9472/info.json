{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f362f5ffba4d4fb8e877a2858f364e1f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dcd784bccfc7e662e7eab55cdb6cf95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "21b06b1f77b7fda7b2358e6e2d335e77a6ac8125", "commitAfterChange": "b397fbf1ef2684ee73e7617091ec4c7be38fc011", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void compilationStarted()", "signatureAfterChange": " \tpublic void compilationStarted()", "diff": ["-\t\tensureGeneratedSourceFolder();", "-\t\tfinal IFolder genFolder = getGeneratedSourceFolder();", "+", "+\t\ttry{", "+\t\t\t// clear out any generated source folder config markers", "+\t\t\tIMarker[] markers = _aptProject.getJavaProject().getProject().findMarkers(AptPlugin.APT_CONFIG_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "+\t\t\tif( markers != null ){", "+\t\t\t\tfor( IMarker marker : markers )", "+\t\t\t\t\tmarker.delete();", "+\t\t\t}", "+\t\t}", "+\t\tcatch(CoreException e){", "+\t\t\tAptPlugin.log(e, \"Unable to delete configuration marker.\"); //$NON-NLS-1$", "+\t\t}", "+\t\t_skipTypeGeneration = false;", "+\t\tcreateGeneratedSourceFolder();", "+\t\tfinal IFolder genFolder;\t\t", "+\t\tsynchronized(this){", "+\t\t\tgenFolder = getGeneratedSourceFolder();", "+\t\t\t_snapshotFolderName = _generatedSourceFolderName;", "+\t\t}", "+\t\t\t_generatedPackageFragmentRoot = null;", "-\t\t\t\tif( genFolder.equals(root.getResource()) ){", "+\t\t\t\tfinal IResource resource = root.getResource();", "+\t\t\t\tif( resource != null && resource.equals(genFolder)){", "-\t\t\t", "-\t\t\t// Failure case -- we've created the source folder, but we can't find its corresponding", "-\t\t\t// package fragment root.", "-\t\t\tStringBuilder sb = new StringBuilder();", "-\t\t\t", "-\t\t\tsb.append(\"*** start of classpath ***\\n\"); //$NON-NLS-1$", "-\t\t\tIClasspathEntry[] cp = _aptProject.getJavaProject().getRawClasspath();", "-\t\t\tfor (IClasspathEntry c : cp) {", "-\t\t\t\tsb.append(c).append(\"\\n\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tsb.append(\"*** end of classpath ***\"); //$NON-NLS-1$", "-\t\t\t", "-\t\t\tthrow new IllegalStateException(\"failed to locate package fragment root for \" +  //$NON-NLS-1$", "-\t\t\t\t\tgenFolder.getName() + \". classpath:\\n\" + sb.toString()); //$NON-NLS-1$", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d422a543cbe77d8169d308d4d471eeb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void compilationStarted()", "signatureAfterChange": " \tpublic void compilationStarted()", "diff": ["+\t */", "+\tpublic void compilationStarted()", "+\t{", "+\t\ttry {", "+\t\t\t// clear out any generated source folder config markers", "+\t\t\tIMarker[] markers = _jProject.getProject().findMarkers(AptPlugin.APT_CONFIG_PROBLEM_MARKER, true,", "+\t\t\t\t\tIResource.DEPTH_INFINITE);", "+\t\t\tif (markers != null) {", "+\t\t\t\tfor (IMarker marker : markers)", "+\t\t\t\t\tmarker.delete();", "+\t\t\t}", "+\t\t} catch (CoreException e) {", "+\t\t\tAptPlugin.log(e, \"Unable to delete configuration marker.\"); //$NON-NLS-1$", "+\t\t}", "+\t\t_skipTypeGeneration = false;", "+\t\t_gsfm.ensureFolderExists();", "+\t\t_generatedPackageFragmentRoot.set();", "+", "-\t */", "-\tpublic void compilationStarted() {", "-\t\ttry{", "-\t\t\t// clear out any generated source folder config markers", "-\t\t\tIMarker[] markers = _jProject.getProject().findMarkers(AptPlugin.APT_CONFIG_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "-\t\t\tif( markers != null ){", "-\t\t\t\tfor( IMarker marker : markers )", "-\t\t\t\t\tmarker.delete();", "-\t\t\t}", "-\t\t}", "-\t\tcatch(CoreException e){", "-\t\t\tAptPlugin.log(e, \"Unable to delete configuration marker.\"); //$NON-NLS-1$", "-\t\t}", "-\t\t_skipTypeGeneration = false;", "-\t\t_gsfm.ensureFolderExists();", "-\t\tfinal IFolder genFolder;\t\t", "-\t\tsynchronized(this){", "-\t\t\tgenFolder = _gsfm.getFolder();", "-\t\t\t_snapshotFolderName = genFolder.getProjectRelativePath().toString();", "-\t\t}", "-\t\ttry {", "-\t\t\t_generatedPackageFragmentRoot = null;", "-\t\t\tIPackageFragmentRoot[] roots = _jProject.getAllPackageFragmentRoots();", "-\t\t\tfor (IPackageFragmentRoot root : roots) {", "-\t\t\t\tfinal IResource resource = root.getResource();", "-\t\t\t\tif( resource != null && resource.equals(genFolder)){", "-\t\t\t\t\t_generatedPackageFragmentRoot = root;", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tcatch (JavaModelException jme) {", "-\t\t\tAptPlugin.log(jme, \"Failure during start of compilation attempting to create generated source folder\"); //$NON-NLS-1$", "-\t\t}", "-\t\t", "-\t}"]}], "num": 9472}