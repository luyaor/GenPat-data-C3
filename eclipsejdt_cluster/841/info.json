{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c165c69bffd8877d37b9e2972b7b1416", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bda3a1b993233048e94a6a291e610be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "  public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\tif (answer == null)", "-\t\treturn null;", "+\tif (answer == null) return null;", "-\tif (answer.isBinaryType())", "+\tif (answer.isBinaryType()) {", "-\t\ttypeRequestor.accept(answer.getBinaryType(), computePackageFrom(compoundName), answer.getAccessRestriction());", "-\telse if (answer.isCompilationUnit())", "+\t\ttypeRequestor.accept(answer.getBinaryType(), computePackageFrom(compoundName, false /* valid pkg */), answer.getAccessRestriction());", "+\t} else if (answer.isCompilationUnit()) {", "-\telse if (answer.isSourceType())", "+\t} else if (answer.isSourceType()) {", "-\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName), answer.getAccessRestriction());", "-", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName, false /* valid pkg */), answer.getAccessRestriction());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c06510c4fc802c471d12f3d4449c78d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "996624297f7f1b08dc25c3bd565493751f6df397", "commitAfterChange": "a8d55f7d4930fd7566ac4b1489f0aa7e3f902477", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r void faultInImports()", "signatureAfterChange": "\r void faultInImports()", "diff": ["-\t\t\t\tif (CharOperation.equals(compoundName, resolvedImports[j].compoundName))\r", "+\t\t\t\tif (CharOperation.equals(compoundName, resolvedImports[j].compoundName)) {\r", "+\t\t\t\t}\r", "-\t\t\tif (CharOperation.equals(compoundName, currentPackageName))\r", "+\t\t\tif (CharOperation.equals(compoundName, currentPackageName)) {\r", "-\r", "+\t\t\t}\r", "-\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, true, importBinding);\r", "+\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, true, importBinding, importReference);\r", "-\t\t\t\tif (existingType == typeBinding)\r", "+\t\t\t\tif (existingType == typeBinding) {\r", "-\r", "+\t\t\t\t}\r", "-\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, false, typeBinding);\r", "+\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, false, typeBinding, importReference);\r"]}], "num": 841}