{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "907ff8ce4b96dd0d539f90ca83fafc56", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a2ca95ae0796b59c763b0bc58d7fea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "8879b56fd07da9d038783d336704cc8af2052901", "commitAfterChange": "5daf90a164d16969119f51284ec69f74248f815c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding, boolean createProblemMethod)", "signatureAfterChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding, boolean createProblemMethod)", "diff": ["-\t\tif (this.targetJDK < ClassFileConstants.JDK1_5 && methodBinding.isSynthetic()) {", "-\t\t\t// Synthetic attribute", "-\t\t\t// Check that there is enough space to write the deprecated attribute", "-\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "-\t\t\t\tresizeContents(6);", "+\t\tif (this.targetJDK < ClassFileConstants.JDK1_5) {", "+\t\t\tif (methodBinding.isSynthetic()) {", "+\t\t\t\t// Synthetic attribute", "+\t\t\t\t// Check that there is enough space to write the deprecated attribute", "+\t\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\tresizeContents(6);", "+\t\t\t\t}", "+\t\t\t\tint syntheticAttributeNameIndex =", "+\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.SyntheticName);", "+\t\t\t\tcontents[contentsOffset++] = (byte) (syntheticAttributeNameIndex >> 8);", "+\t\t\t\tcontents[contentsOffset++] = (byte) syntheticAttributeNameIndex;", "+\t\t\t\t// the length of a synthetic attribute is equals to 0", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t", "+\t\t\t\tattributeNumber++;", "-\t\t\tint syntheticAttributeNameIndex =", "-\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.SyntheticName);", "-\t\t\tcontents[contentsOffset++] = (byte) (syntheticAttributeNameIndex >> 8);", "-\t\t\tcontents[contentsOffset++] = (byte) syntheticAttributeNameIndex;", "-\t\t\t// the length of a synthetic attribute is equals to 0", "-\t\t\tcontents[contentsOffset++] = 0;", "-\t\t\tcontents[contentsOffset++] = 0;", "-\t\t\tcontents[contentsOffset++] = 0;", "-\t\t\tcontents[contentsOffset++] = 0;", "-", "-\t\t\tattributeNumber++;", "+\t\t\tif (methodBinding.isVarargs()) {", "+\t\t\t\t/*", "+\t\t\t\t * handle of the target jsr14 for varargs in the source", "+\t\t\t\t * Varargs attribute", "+\t\t\t\t * Check that there is enough space to write the deprecated attribute", "+\t\t\t\t */", "+\t\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\tresizeContents(6);", "+\t\t\t\t}", "+\t\t\t\tint varargsAttributeNameIndex =", "+\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.VarargsName);", "+\t\t\t\tcontents[contentsOffset++] = (byte) (varargsAttributeNameIndex >> 8);", "+\t\t\t\tcontents[contentsOffset++] = (byte) varargsAttributeNameIndex;", "+\t\t\t\t// the length of a varargs attribute is equals to 0", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t", "+\t\t\t\tattributeNumber++;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecbf38d59ed4d2759ab05c172e01e848", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "08705eafdfa67c6d3ffc73b48a9888b3c4d4ff93", "commitAfterChange": "5e9228969768cbfafe3797c4206907b59326e768", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void addAttributes()", "signatureAfterChange": " \tpublic void addAttributes()", "diff": ["+\t\tif (targetJDK >= ClassFileConstants.JDK1_5", "+\t\t\t\t&& (this.referenceBinding.isAnonymousType() || this.referenceBinding.isLocalType())) {", "+\t\t\t// add enclosing method attribute (1.5 mode only)", "+\t\t\tif (contentsOffset + 10 >= contents.length) {", "+\t\t\t\tresizeContents(10);", "+\t\t\t}", "+\t\t\tint enclosingMethodAttributeNameIndex =", "+\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.EnclosingMethodName);", "+\t\t\tcontents[contentsOffset++] = (byte) (enclosingMethodAttributeNameIndex >> 8);", "+\t\t\tcontents[contentsOffset++] = (byte) enclosingMethodAttributeNameIndex;", "+\t\t\t// the length of a signature attribute is equals to 2", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 4;", "+\t\t\t", "+\t\t\tint enclosingTypeIndex = constantPool.literalIndexForType(this.referenceBinding.enclosingType().constantPoolName());", "+\t\t\tcontents[contentsOffset++] = (byte) (enclosingTypeIndex >> 8);", "+\t\t\tcontents[contentsOffset++] = (byte) enclosingTypeIndex;", "+\t\t\tbyte methodIndexByte1 = 0;", "+\t\t\tbyte methodIndexByte2 = 0;", "+\t\t\tif (this.referenceBinding.scope != null) {", "+\t\t\t\tMethodScope methodScope = this.referenceBinding.scope.methodScope();", "+\t\t\t\tif (methodScope != null) {", "+\t\t\t\t\tReferenceContext referenceContext = methodScope.referenceContext;", "+\t\t\t\t\tif (referenceContext instanceof AbstractMethodDeclaration) {", "+\t\t\t\t\t\tAbstractMethodDeclaration methodDeclaration = (AbstractMethodDeclaration) referenceContext;", "+\t\t\t\t\t\tMethodBinding methodBinding = methodDeclaration.binding;", "+\t\t\t\t\t\tint enclosingMethodIndex = constantPool.literalIndexForMethod(methodBinding.selector, methodBinding.signature());", "+\t\t\t\t\t\tmethodIndexByte1 = (byte) (enclosingMethodIndex >> 8);", "+\t\t\t\t\t\tmethodIndexByte2 = (byte) enclosingMethodIndex;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tcontents[contentsOffset++] = methodIndexByte1;", "+\t\t\tcontents[contentsOffset++] = methodIndexByte2;", "+\t\t\tattributeNumber++;\t\t\t", "+\t\t}"]}], "num": 56146}