{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25f4631edc00901c69c47238999ddfd1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b5fe231e7208bda58fb4e0fb552a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-", "-\t\tchar[] methodDescriptor = constantMethodref.getMethodDescriptor();", "-\t\tCharOperation.replace(methodDescriptor, '/', '.');", "-\t\tchar[] methodName = constantMethodref.getMethodName();", "-\t\tchar[] returnType = Signature.getReturnType(methodDescriptor);", "-\t\tCharOperation.replace(returnType, '/', '.');", "-\t\t", "-\t\tif (CharOperation.equals(INIT, methodName)) {", "-\t\t\tmethodName = EMPTY_NAME;", "-\t\t\tdumpPcNumber(pc);", "-\t\t\tbuffer.append(OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL])", "-\t\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "-\t\t\t\t.append(index)", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialconstructor\")) //$NON-NLS-1$", "-\t\t\t\t.append(returnDeclaringClassName(constantMethodref))", "-\t\t\t\t.append(", "-\t\t\t\t\tSignature.toCharArray(", "-\t\t\t\t\t\tmethodDescriptor,", "-\t\t\t\t\t\tmethodName,", "-\t\t\t\t\t\tgetParameterNames(methodDescriptor),", "-\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\tfalse))", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialconstructorclose\")); //$NON-NLS-1$", "-\t\t\twriteNewLine();", "-\t\t} else {", "-\t\t\tdumpPcNumber(pc);", "-\t\t\tbuffer.append(OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL])", "-\t\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "-\t\t\t\t.append(index)", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialmethod\")) //$NON-NLS-1$", "-\t\t\t\t.append(returnDeclaringClassName(constantMethodref))", "-\t\t\t\t.append(Util.bind(\"disassembler.classmemberseparator\")) //$NON-NLS-1$", "-\t\t\t\t.append(", "-\t\t\t\t\tSignature.toCharArray(", "-\t\t\t\t\t\tmethodDescriptor,", "-\t\t\t\t\t\tconstantMethodref.getMethodName(),", "-\t\t\t\t\t\tgetParameterNames(methodDescriptor),", "-\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\tfalse))", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t.append(Signature.toCharArray(returnType))", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialmethodclose\")); //$NON-NLS-1$", "-\t\t\twriteNewLine();", "-\t\t}", "+\t\tdumpPcNumber(pc);", "+\t\tbuffer.append(OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL])", "+\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t.append(index)", "+\t\t\t.append(Util.bind(\"classformat.invokespecialmethod\")) //$NON-NLS-1$", "+\t\t\t.append(returnDeclaringClassName(constantMethodref))", "+\t\t\t.append(Util.bind(\"disassembler.classmemberseparator\")) //$NON-NLS-1$", "+\t\t\t.append(constantMethodref.getMethodName())", "+\t\t\t.append(constantMethodref.getMethodDescriptor())", "+\t\t\t.append(Util.bind(\"classformat.invokespecialmethodclose\")); //$NON-NLS-1$", "+\t\twriteNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b42eb64dc5d6fd6dcaabd543f55f06c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "69a0951f3a888c5df17899fdf397965ef4e12088", "commitAfterChange": "a5b56b1fe034a82b1e8a36b9104b762cd960d94d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\tbuffer.append(Util.bind(\"disassembler.codeattributeheader\"));", "+\t\tbuffer.append(Util.bind(\"disassembler.codeattributeheader\")); //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.commentstart\"))", "+\t\t\t.append(Util.bind(\"disassembler.commentstart\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"classfileformat.maxStack\"))", "+\t\t\t.append(Util.bind(\"classfileformat.maxStack\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"classfileformat.maxLocals\"))", "+\t\t\t.append(Util.bind(\"classfileformat.maxLocals\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.commentend\"));", "+\t\t\t.append(Util.bind(\"disassembler.commentend\")); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"disassembler.exceptiontableheader\"));", "+\t\t\tbuffer.append(Util.bind(\"disassembler.exceptiontableheader\")); //$NON-NLS-1$", "-\t\t\t\t\t.append(\"[pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\", pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\"] -> \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablegoto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\" when : \");", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablewhen\")); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"disassembler.linenumberattributeheader\"));", "+\t\t\tbuffer.append(Util.bind(\"disassembler.linenumberattributeheader\")); //$NON-NLS-1$", "-\t\t\t\t\t.append(\"[pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\", line: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\"]\");", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableclose\")); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"disassembler.localvariabletableattributeheader\"));", "+\t\t\tbuffer.append(Util.bind(\"disassembler.localvariabletableattributeheader\")); //$NON-NLS-1$", "-\t\t\t\t\t.append(\"[pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\", pc: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\"] local: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\" index: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(\" type: \")", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")) //$NON-NLS-1$"]}], "num": 11729}