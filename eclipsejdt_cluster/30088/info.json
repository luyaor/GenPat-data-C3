{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b93181ae585d2e8375242e0cb199da3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e21d057b54c0aeda29c31b01c48376", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "4faced18aa2f149b9a6ea49e609b9be294554038", "commitAfterChange": "6d39311e7e084565b4760f342af9138a8134e200", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " private int matchLevel(NameReference nameRef, boolean resolve)", "signatureAfterChange": " private int matchLevel(NameReference nameRef, boolean resolve)", "diff": ["-\t\t\tif (!(binding instanceof TypeBinding)){", "+\t\t\tif (binding instanceof VariableBinding) {", "+\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\t} else if (!(binding instanceof TypeBinding)){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0816f72fa8ad4c6b6af8c89bfb0fcc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "5fd1ad7b3db70dc99901d7868d6805fead93f327", "commitAfterChange": "1993d5cf94dcb5fe0b4d19a8110ea8217fd57bb9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "signatureAfterChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "diff": ["-\t\t\tif ( CharOperation.equals(pkg, CharOperation.concatWith(type.getPackage().compoundName, '.'))) {", "+\t\t\tif (type instanceof ProblemReferenceBinding) { ", "+\t\t\t\t// case of an import reference while serching for ALL_OCCURENCES of a type (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=37166)", "+\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\t} else if (CharOperation.equals(pkg, CharOperation.concatWith(type.getPackage().compoundName, '.'))) {"]}], "num": 30088}