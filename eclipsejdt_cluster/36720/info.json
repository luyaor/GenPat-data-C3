{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29150f0a7154cba0fcb7f0acabcff9b3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55a1d44c9c3eb0dc8c7b2f2d93ed67b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "7b0a74a1d29309856c3962d807ab5dd39d0cd970", "commitAfterChange": "a0cf8a06dd8d501b7c73b7814f8f6a09e45d7490", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public char[] getEnclosingMethod()", "signatureAfterChange": "  public char[] getEnclosingMethod()", "diff": ["-\t// read the name", "-\tStringBuffer buffer = new StringBuffer();", "-\t", "-\tint nameAndTypeOffset = this.constantPoolOffsets[this.enclosingNameAndTypeIndex];", "-\tint utf8Offset = this.constantPoolOffsets[u2At(nameAndTypeOffset + 1)];", "-\tbuffer.append(utf8At(utf8Offset + 3, u2At(utf8Offset + 1)));", "+\tif (this.enclosingMethod == null) {", "+\t\t// read the name", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\t", "+\t\tint nameAndTypeOffset = this.constantPoolOffsets[this.enclosingNameAndTypeIndex];", "+\t\tint utf8Offset = this.constantPoolOffsets[u2At(nameAndTypeOffset + 1)];", "+\t\tbuffer.append(utf8At(utf8Offset + 3, u2At(utf8Offset + 1)));", "-\tutf8Offset = this.constantPoolOffsets[u2At(nameAndTypeOffset + 3)];", "-\tbuffer.append(utf8At(utf8Offset + 3, u2At(utf8Offset + 1)));", "+\t\tutf8Offset = this.constantPoolOffsets[u2At(nameAndTypeOffset + 3)];", "+\t\tbuffer.append(utf8At(utf8Offset + 3, u2At(utf8Offset + 1)));", "-\treturn String.valueOf(buffer).toCharArray();", "+\t\tthis.enclosingMethod = String.valueOf(buffer).toCharArray();", "+\t}", "+\treturn this.enclosingMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71854b45904c8cb9f1abb5aa4cc0af72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public ClassFileReader(byte[] classFileBytes, char[] fileName, boolean fullyInitialize) throws ClassFormatException", "signatureAfterChange": " public ClassFileReader(byte[] classFileBytes, char[] fileName, boolean fullyInitialize) throws ClassFormatException", "diff": ["-\t\t\t\t\t\tthis.tagBits |= TagBits.HasInconsistentHierarchy;", "+\t\t\t\t\t\tthis.tagBits |= TagBits.HierarchyHasProblems;", "-\t\t\t\t\t\t\t\t\tthis.signature = utf8At(utf8Offset + 3, u2At(utf8Offset + 1));\t\t\t\t", "+\t\t\t\t\t\t\t\t\tthis.signature = utf8At(utf8Offset + 3, u2At(utf8Offset + 1));", "+\t\t\t\tcase 'M' :", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.MissingTypesName)) {", "+\t\t\t\t\t\t// decode the missing types", "+\t\t\t\t\t\tint missingTypeOffset = readOffset + 6;", "+\t\t\t\t\t\tint numberOfMissingTypes = u2At(missingTypeOffset);", "+\t\t\t\t\t\tif (numberOfMissingTypes != 0) {", "+\t\t\t\t\t\t\tmissingTypeNames = new char[numberOfMissingTypes][][];", "+\t\t\t\t\t\t\tmissingTypeOffset += 2;", "+\t\t\t\t\t\t\tfor (int j = 0; j < numberOfMissingTypes; j++) {", "+\t\t\t\t\t\t\t\tutf8Offset = constantPoolOffsets[u2At(constantPoolOffsets[u2At(missingTypeOffset)] + 1)];", "+\t\t\t\t\t\t\t\tchar[] missingTypeConstantPoolName = utf8At(utf8Offset + 3, u2At(utf8Offset + 1));", "+\t\t\t\t\t\t\t\tmissingTypeNames[j] = CharOperation.splitOn('/', missingTypeConstantPoolName);", "+\t\t\t\t\t\t\t\tmissingTypeOffset += 2;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 36720}