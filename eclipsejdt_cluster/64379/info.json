{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "208b687f951a124626daed46e488f977", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b968c250013e825d9b9a0e38e7266bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "d45ad1a67e8f9a416fa456cf20e55baeabaa980f", "commitAfterChange": "15fa59f515a70009e6cbf51fc1f1e76b789612ec", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tImportRewriteAnalyzer computer= new ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, this.importOrder, this.importOnDemandThreshold, this.staticImportOnDemandThreshold, this.restoreExistingImports);", "+\t\t\tImportRewriteAnalyzer computer=", "+\t\t\t\tnew ImportRewriteAnalyzer(", "+\t\t\t\t\t\tthis.compilationUnit,", "+\t\t\t\t\t\tusedAstRoot,", "+\t\t\t\t\t\tthis.importOrder,", "+\t\t\t\t\t\tthis.importOnDemandThreshold,", "+\t\t\t\t\t\tthis.staticImportOnDemandThreshold,", "+\t\t\t\t\t\tthis.restoreExistingImports,", "+\t\t\t\t\t\tthis.useContextToFilterImplicitImports);", "-\t\t\tcomputer.setUseContextToFilterImplicitImports(this.useContextToFilterImplicitImports);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3025190afb3db82f285e0f069a8712d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ManifestAnalyzer.java", "commitBeforeChange": "cf371f16e7c11ce1f36f5247cba8fa409cdc4fce", "commitAfterChange": "47407bcf8a76468e7323f4cc93c0a63a69236727", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean analyzeManifestContents(InputStream inputStream) throws IOException", "signatureAfterChange": " \tpublic boolean analyzeManifestContents(InputStream inputStream) throws IOException", "diff": ["-\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, Charset.forName(Util.UTF_8)));", "+\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, Util.UTF_8));"]}], "num": 64379}