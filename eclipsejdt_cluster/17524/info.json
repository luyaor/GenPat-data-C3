{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09203a5cbb0c3af52ab9ed1391a6c4fb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc68802d45e32a6ecb858aec57650650", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "2f619c39de615cc5bdcbd828d00cede34184e047", "commitAfterChange": "7afd83b657aa4801d2456fea274c741b5880bf25", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void markAsPotentiallyNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markPotentiallyNullBit(LocalVariableBinding local)", "diff": ["-public void markAsPotentiallyNull(LocalVariableBinding local) {", "-            this.nullBit1 &= ~(mask = 1L << position);", "+", "+public void markPotentiallyNullBit(LocalVariableBinding local) {", "+\tif (this != DEAD_END) {", "+\t\tthis.tagBits |= NULL_FLAG_MASK;", "+        int position;", "+        long mask;", "+        if ((position = local.id + this.maxFieldCount) < BitCacheSize) {", "+            // use bits", "+        \tmask = 1L << position;", "+        \tisTrue((this.nullBit1 & mask) == 0, \"Adding 'potentially null' mark in unexpected state\"); //$NON-NLS-1$", "-            this.nullBit3 &= ~mask;", "-            this.nullBit4 &= ~mask;", "-    \t\tint vectorIndex ;", "-    \t\tthis.extra[2][vectorIndex = (position / BitCacheSize) - 1]", "-    \t\t    &= ~(mask = 1L << (position % BitCacheSize));", "+    \t\tint vectorIndex = (position / BitCacheSize) - 1;", "+    \t\tmask = 1L << (position % BitCacheSize);", "-    \t\tthis.extra[4][vectorIndex] &= (mask = ~mask);", "-    \t\tthis.extra[5][vectorIndex] &= mask;", "+    \t\tisTrue((this.extra[2][vectorIndex] & mask) == 0, \"Adding 'potentially null' mark in unexpected state\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cebea3098a5b88532eb4e9f64bcf568a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "aa46ed677ee85f03d71a5e403b6a2449b883ffe1", "commitAfterChange": "c0de86876da4886baced9b3782c3e678b86d856e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void markAsDefinitelyUnknown(LocalVariableBinding local)", "signatureAfterChange": " public void markAsDefinitelyUnknown(LocalVariableBinding local)", "diff": ["-\t\t\tthis.nullAssignmentValueBit1 |= (mask = 1L << position);", "-\t\t\tthis.nullAssignmentValueBit2 |= mask;", "-\t\t\t// set unknown", "-\t\t\tthis.nullAssignmentStatusBit1 |= mask;", "-\t\t\t// set assignment", "-\t\t\tthis.nullAssignmentStatusBit2 &= ~mask;", "-\t\t\t// clear protection", "-\t\t\tif (coverageTestFlag && coverageTestId == 33) {", "-\t\t\t\tthis.nullAssignmentValueBit2 = ~0;", "+\t\t\t// mark assigned null", "+\t\t\tthis.nullBit1 |= (mask = 1L << position);", "+\t\t\tthis.nullBit4 |= mask;", "+\t\t\t// clear others", "+\t\t\tthis.nullBit2 &= (mask = ~mask);", "+\t\t\tthis.nullBit3 &= mask;", "+\t\t\tif (coverageTestFlag && coverageTestId == 26) {", "+\t\t\t  \tthis.nullBit4 = 0;", "-\t\t\tint vectorIndex = (position / BitCacheSize) - 1;", "-\t\t\tthis.extra[4][vectorIndex] |=", "-\t\t\t\t(mask = 1L << (position % BitCacheSize));", "+\t\t\tint vectorIndex ;", "+\t\t\tthis.extra[2][vectorIndex = (position / BitCacheSize) - 1] ", "+\t\t\t    |= (mask = 1L << (position % BitCacheSize));", "-\t\t\tthis.extra[2][vectorIndex] |= mask;", "-\t\t\tthis.extra[3][vectorIndex] &= ~mask;", "-\t\t\tif (coverageTestFlag && coverageTestId == 34) {", "-\t\t\t\tthis.extra[5][vectorIndex] = ~0;", "+\t\t\tthis.extra[3][vectorIndex] &= (mask = ~mask);", "+\t\t\tthis.extra[4][vectorIndex] &= mask;", "+\t\t\tif (coverageTestFlag && coverageTestId == 27) {", "+\t\t\t\tthis.extra[5][vectorIndex] = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1bb86bdbac6d555355e96cc47b4973c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tpublic void markAsDefinitelyNotAssigned(LocalVariableBinding local)", "signatureAfterChange": " public void markAsDefinitelyUnknown(LocalVariableBinding local)", "diff": ["-\t", "-\tpublic void markAsDefinitelyNotAssigned(LocalVariableBinding local) {", "-\t\t", "-\t\tif (this != DEAD_END)", "-\t\t\tmarkAsDefinitelyNotAssigned(local.id + maxFieldCount);", "-\t}", "+//\t\t\t obvious", "+public void markAsDefinitelyUnknown(LocalVariableBinding local) {", "+\t// protected from non-object locals in calling methods", "+\tif (this != DEAD_END) {", "+\t\tthis.tagBits |= NULL_FLAG_MASK;", "+\t\tlong mask;", "+\t\tint position;", "+\t\t// position is zero-based", "+\t\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {", "+\t\t\t// use bits", "+\t\t\tthis.nullAssignmentValueBit1 |= (mask = 1L << position);", "+\t\t\tthis.nullAssignmentValueBit2 |= mask;", "+\t\t\t// set unknown", "+\t\t\tthis.nullAssignmentStatusBit1 |= mask;", "+\t\t\t// set assignment", "+\t\t\tthis.nullAssignmentStatusBit2 &= ~mask;", "+\t\t\t// clear protection", "+\t\t\tif (coverageTestFlag && coverageTestId == 33) {", "+\t\t\t\tthis.nullAssignmentValueBit2 = ~0;", "+\t\t} ", "+\t\telse {", "+\t\t\t// use extra vector", "+\t\t\tint vectorIndex = (position / BitCacheSize) - 1;", "+\t\t\t// REVIEW seems to be guarded", "+\t\t\tthis.extra[4][vectorIndex] |=", "+\t\t\t\t(mask = 1L << (position % BitCacheSize));", "+\t\t\tthis.extra[5][vectorIndex] |= mask;", "+\t\t\tthis.extra[2][vectorIndex] |= mask;", "+\t\t\tthis.extra[3][vectorIndex] &= ~mask;", "+\t\t\tif (coverageTestFlag && coverageTestId == 34) {", "+\t\t\t\tthis.extra[5][vectorIndex] = ~0;", "+\t\t}", "+\t}", "+}"]}], "num": 17524}