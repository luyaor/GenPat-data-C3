{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "890430590d9c37aebb40790b6ea274fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f50d85c9fb91eedd34897e2b9243cc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "6942ba89260ced8761513584f97535ed598c868d", "commitAfterChange": "2254b84309b2e5733188a240f2a612a1b002f2ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static TypeMirror newTypeMirror(Binding binding)", "signatureAfterChange": "  \tpublic static TypeMirror newTypeMirror(Binding binding)", "diff": ["-", "-\tpublic static TypeMirror newTypeMirror(Binding binding) {", "-\t\tswitch (binding.kind()) {", "-\t\tcase Binding.FIELD:", "-\t\tcase Binding.LOCAL:", "-\t\tcase Binding.VARIABLE:", "-\t\t\t// For variables, return the type of the variable", "-\t\t\treturn newTypeMirror(((VariableBinding)binding).type);", "-\t\t\t", "-\t\tcase Binding.METHOD:", "-\t\tcase Binding.PACKAGE:", "-\t\tcase Binding.IMPORT:", "-\t\t\tthrow new IllegalArgumentException(\"Invalid binding kind: \" + binding.kind()); //$NON-NLS-1$", "-\t\t\t", "-\t\tcase Binding.TYPE:", "-\t\t\treturn new DeclaredTypeImpl((ReferenceBinding)binding);", "-\t\t\t", "-\t\tcase Binding.ARRAY_TYPE:", "-\t\t\treturn new ArrayTypeImpl((ArrayBinding)binding);", "-\t\t\t", "-\t\tcase Binding.BASE_TYPE:", "-\t\t\t// PrimitiveTypeImpl implements both PrimitiveType and NoType", "-\t\t\treturn new PrimitiveTypeImpl((BaseTypeBinding)binding);", "-\t\t\t", "-\t\t\t// TODO: fill in the rest of these", "-\t\tcase Binding.PARAMETERIZED_TYPE:", "-\t\tcase Binding.WILDCARD_TYPE:", "-\t\tcase Binding.RAW_TYPE:", "-\t\tcase Binding.GENERIC_TYPE:", "-\t\tcase Binding.TYPE_PARAMETER:", "-\t\t\tthrow new UnsupportedOperationException(\"NYI\"); //$NON-NLS-1$", "-\t\t}", "-\t\treturn null;", "-\t}", "+", "+\tpublic static TypeMirror newTypeMirror(Binding binding) {", "+\t\tswitch (binding.kind()) {", "+\t\tcase Binding.FIELD:", "+\t\tcase Binding.LOCAL:", "+\t\tcase Binding.VARIABLE:", "+\t\t\t// For variables, return the type of the variable", "+\t\t\treturn newTypeMirror(((VariableBinding)binding).type);", "+\t\t\t", "+\t\tcase Binding.METHOD:", "+\t\tcase Binding.PACKAGE:", "+\t\tcase Binding.IMPORT:", "+\t\t\tthrow new IllegalArgumentException(\"Invalid binding kind: \" + binding.kind()); //$NON-NLS-1$", "+\t\t\t", "+\t\tcase Binding.TYPE:", "+\t\tcase Binding.RAW_TYPE:", "+\t\t\treturn new DeclaredTypeImpl((ReferenceBinding)binding);", "+\t\t\t", "+\t\tcase Binding.ARRAY_TYPE:", "+\t\t\treturn new ArrayTypeImpl((ArrayBinding)binding);", "+\t\t\t", "+\t\tcase Binding.BASE_TYPE:", "+\t\t\t// PrimitiveTypeImpl implements both PrimitiveType and NoType", "+\t\t\treturn new PrimitiveTypeImpl((BaseTypeBinding)binding);", "+\t\t\t", "+\t\t\t// TODO: fill in the rest of these", "+\t\tcase Binding.PARAMETERIZED_TYPE:", "+\t\tcase Binding.WILDCARD_TYPE:", "+\t\tcase Binding.GENERIC_TYPE:", "+\t\tcase Binding.TYPE_PARAMETER:", "+\t\t\tthrow new UnsupportedOperationException(\"NYI: binding type \" + binding.kind()); //$NON-NLS-1$", "+\t\t}", "+\t\treturn null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f489b3ce9d0bb1be06299c979f16c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "6942ba89260ced8761513584f97535ed598c868d", "commitAfterChange": "2254b84309b2e5733188a240f2a612a1b002f2ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Element newElement(Binding binding)", "signatureAfterChange": "  \tpublic static Element newElement(Binding binding)", "diff": ["-", "-\tpublic static Element newElement(Binding binding) {", "-\t\tswitch (binding.kind()) {", "-\t\tcase Binding.FIELD:", "-\t\tcase Binding.LOCAL:", "-\t\tcase Binding.VARIABLE:", "-\t\t\treturn new VariableElementImpl(binding);", "-\t\tcase Binding.TYPE:", "-\t\t\treturn new TypeElementImpl((ReferenceBinding)binding);", "-\t\tcase Binding.METHOD:", "-\t\t\treturn new ExecutableElementImpl((MethodBinding)binding);", "-\t\t// TODO: fill in the rest of these", "-\t\tcase Binding.PACKAGE:", "-\t\tcase Binding.IMPORT:", "-\t\tcase Binding.ARRAY_TYPE:", "-\t\tcase Binding.BASE_TYPE:", "-\t\tcase Binding.PARAMETERIZED_TYPE:", "-\t\tcase Binding.WILDCARD_TYPE:", "-\t\tcase Binding.RAW_TYPE:", "-\t\tcase Binding.GENERIC_TYPE:", "-\t\tcase Binding.TYPE_PARAMETER:", "-\t\t\tthrow new UnsupportedOperationException(\"NYI\"); //$NON-NLS-1$", "-\t\t}", "-\t\treturn null;", "-\t}", "+\tpublic static Element newElement(Binding binding) {", "+\t\tswitch (binding.kind()) {", "+\t\tcase Binding.FIELD:", "+\t\tcase Binding.LOCAL:", "+\t\tcase Binding.VARIABLE:", "+\t\t\treturn new VariableElementImpl(binding);", "+\t\tcase Binding.TYPE:", "+\t\tcase Binding.GENERIC_TYPE:", "+\t\t\treturn new TypeElementImpl((ReferenceBinding)binding);", "+\t\tcase Binding.METHOD:", "+\t\t\treturn new ExecutableElementImpl((MethodBinding)binding);", "+\t\tcase Binding.RAW_TYPE:", "+\t\t\treturn new TypeElementImpl(((RawTypeBinding)binding).type);", "+\t\t// TODO: fill in the rest of these", "+\t\tcase Binding.PACKAGE:", "+\t\tcase Binding.IMPORT:", "+\t\tcase Binding.ARRAY_TYPE:", "+\t\tcase Binding.BASE_TYPE:", "+\t\tcase Binding.PARAMETERIZED_TYPE:", "+\t\tcase Binding.WILDCARD_TYPE:", "+\t\tcase Binding.TYPE_PARAMETER:", "+\t\t\tthrow new UnsupportedOperationException(\"NYI: binding type \" + binding.kind()); //$NON-NLS-1$", "+\t\t}", "+\t\treturn null;", "+\t}"]}], "num": 45164}