{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99a7ffec683b7071188264d2a770f10d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973c40fa8c9a269802b3bd97f4c8a031", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "92f042fa40e42063d16c97bd03b03013bccafbbf", "commitAfterChange": "564f0099078b50659e30ddb5a5157ad26528c30f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r public static ClassFileReader read(String fileName) throws ClassFormatException, java.io.IOException", "signatureAfterChange": "\r public static ClassFileReader read(String fileName) throws ClassFormatException, java.io.IOException", "diff": ["-\tint fileLength;\r", "-\tFile file = new File(fileName);\r", "-\tbyte classFileBytes[] = new byte[fileLength = (int) file.length()];\r", "-\tjava.io.FileInputStream stream = new java.io.FileInputStream(file);\r", "-\tint bytesRead = 0;\r", "-\tint lastReadSize = 0;\r", "-\twhile ((lastReadSize != -1) && (bytesRead != fileLength)) {\r", "-\t\tlastReadSize = stream.read(classFileBytes, bytesRead, fileLength - bytesRead);\r", "-\t\tbytesRead += lastReadSize;\r", "-\t}\r", "-\tClassFileReader classFile = new ClassFileReader(classFileBytes, fileName.toCharArray());\r", "-\tstream.close();\r", "-\treturn classFile;\r", "+\treturn read(new File(fileName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45e91857f60941dddaff8dcf77fcc13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "92f042fa40e42063d16c97bd03b03013bccafbbf", "commitAfterChange": "564f0099078b50659e30ddb5a5157ad26528c30f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r public static ClassFileReader read(java.io.File file) throws ClassFormatException, java.io.IOException", "signatureAfterChange": "\r public static ClassFileReader read(File file) throws ClassFormatException, IOException", "diff": ["-public static ClassFileReader read(java.io.File file) throws ClassFormatException, java.io.IOException {\r", "-\tint fileLength;\r", "-\tbyte classFileBytes[] = new byte[fileLength = (int) file.length()];\r", "-\tjava.io.FileInputStream stream = new java.io.FileInputStream(file);\r", "-\tint bytesRead = 0;\r", "-\tint lastReadSize = 0;\r", "-\twhile ((lastReadSize != -1) && (bytesRead != fileLength)) {\r", "-\t\tlastReadSize = stream.read(classFileBytes, bytesRead, fileLength - bytesRead);\r", "-\t\tbytesRead += lastReadSize;\r", "-\t}\r", "-\tClassFileReader classFile = new ClassFileReader(classFileBytes, file.getAbsolutePath().toCharArray());\r", "-\tstream.close();\r", "-\treturn classFile;\r", "+public static ClassFileReader read(File file) throws ClassFormatException, IOException {\r", "+\tbyte classFileBytes[] = Util.getFileByteContent(file);\r", "+\treturn new ClassFileReader(classFileBytes, file.getAbsolutePath().toCharArray());\r"]}], "num": 63416}