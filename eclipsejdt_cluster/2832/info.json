{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06f303d52d236a63e56cc76196175100", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00fd924401d20f86364dccc03b11b4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "c8af5e76f44ad60b89fcc109db821631c8461cdd", "commitAfterChange": "7202d999e970cc0e26c9a6dc344ca659a295fdad", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 259, "signatureBeforeChange": " \tpublic void _test0240() throws JavaModelException", "signatureAfterChange": " \tpublic void test0241() throws JavaModelException", "diff": ["-\tpublic void _test0240() throws JavaModelException {", "+\tpublic void test0241() throws JavaModelException {", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\t<T> void foo() {}\\n\" +", "+\t\t\t\"}\";", "+\t\tnode = getASTNode(unit, 0, 0);", "+\t\tassertEquals(\"Not a method declaration\", ASTNode.METHOD_DECLARATION, node.getNodeType());", "+\t\tMethodDeclaration methodDeclaration = (MethodDeclaration) node;", "+\t\tIMethodBinding methodBinding = methodDeclaration.resolveBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tITypeBinding[] typeParameters = methodBinding.getTypeParameters();", "+\t\tassertEquals(\"Wrong binary name\", \"X$()V$T\", typeParameter.getBinaryName());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "317d61771463420ac3f100d828cb49e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "c8af5e76f44ad60b89fcc109db821631c8461cdd", "commitAfterChange": "7202d999e970cc0e26c9a6dc344ca659a295fdad", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 258, "signatureBeforeChange": " \tpublic void _test0241() throws JavaModelException", "signatureAfterChange": " \tpublic void test0240() throws JavaModelException", "diff": ["+\tpublic void test0240() throws JavaModelException {", "-\tpublic void _test0241() throws JavaModelException {", "-\t\t\t\"public class X<T> {}\";", "-\t\tnode = getASTNode(unit, 0);", "-\t\tassertEquals(\"Not a type declaration\", ASTNode.TYPE_DECLARATION, node.getNodeType());", "-\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) node;", "-\t\tITypeBinding typeBinding = typeDeclaration.resolveBinding();", "-\t\tassertNotNull(\"No binding\", typeBinding);", "-\t\tITypeBinding[] typeParameters = typeBinding.getTypeParameters();", "-\t\tassertEquals(\"Wrong binary name\", \"X$T\", typeParameter.getBinaryName());"]}], "num": 2832}