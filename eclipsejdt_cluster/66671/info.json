{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4520186ec182f6f19a485468ca4f1c54", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e93f676b1216fd15861939c2f531e9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "aebb2523ced448c5f9a4a68ea699dc640147cfc4", "commitAfterChange": "26fb5d57c5ee4c25f94ae8cf71583bb38b6a5d86", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r void buildTypeBindings()", "signatureAfterChange": "\r void buildTypeBindings()", "diff": ["+\t\trecordReference(currentPackageName, typeDecl.name); // needed to detect collision cases\r", "-\t\t\trecordSimpleReference(typeDecl.name);\r", "-\t\tif (currentPackageName != NoCharChar) {\r", "-\t\t\tif ((fPackage.getPackage0(typeDecl.name)) != null || environment.isPackage(currentPackageName, typeDecl.name)) {\r", "-\t\t\t\t// if a package exists, it must be a valid package - cannot be a NotFound problem package\r", "-\t\t\t\tproblemReporter().typeCollidesWithPackage(referenceContext, typeDecl);\r", "-\t\t\t\tcontinue nextType;\r", "-\t\t\t}\r", "+\t\tboolean packageExists = currentPackageName == NoCharChar\r", "+\t\t\t? environment.getTopLevelPackage(typeDecl.name) != null\r", "+\t\t\t: (fPackage.getPackage0(typeDecl.name)) != null || environment.isPackage(currentPackageName, typeDecl.name);\r", "+\t\tif (packageExists) {\r", "+\t\t\t// if a package exists, it must be a valid package - cannot be a NotFound problem package\r", "+\t\t\tproblemReporter().typeCollidesWithPackage(referenceContext, typeDecl);\r", "+\t\t\tcontinue nextType;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d022a61c663be6dbcc919cd5adcf3846", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a22e5234311d6958d4980b8e6753a8d9d8c666f1", "commitAfterChange": "a5a040afa584bdeb36e87c3f3c1354cb15a27855", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic TypeBinding convertToRawType(TypeBinding type)", "signatureAfterChange": "  \tpublic TypeBinding convertToRawType(TypeBinding type)", "diff": ["+\t\t\tboolean needToConvert =", "+\t\t\t\toriginalType.isGenericType() || (originalType.isParameterizedType() && ((ParameterizedTypeBinding)originalType).arguments == null);", "+\t\t\t", "-\t\t\tif (originalEnclosing != null && convertedType.isStatic() && originalEnclosing.isGenericType()) {", "+\t\t\tif (originalEnclosing != null && (needToConvert || convertedType.isStatic() && originalEnclosing.isGenericType())) {", "-\t\t\tif (originalType.isGenericType()) {", "+\t\t\tif (needToConvert) {"]}], "num": 66671}