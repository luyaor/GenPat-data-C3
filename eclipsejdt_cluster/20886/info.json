{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddf89dbef96b7425e192172f69f6c8b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33dd66b559375f7e4c5f8f0c82bb9eea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9122b48400c1b7bbd5f34248ba27601e8c1f8c81", "commitAfterChange": "b7727722e1a93459ec6844ad6bb94bb1a32aeb2c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\tif (visibleField == null)", "-\t\t\t\t\t\tvisibleField = field;", "-\t\t\t\t\telse", "+\t\t\t\t\tif (visibleField != null)", "+\t\t\t\t\tif (!currentType.canBeSeenBy(this))", "+\t\t\t\t\t\treturn new ProblemFieldBinding(currentType, fieldName, ReceiverTypeNotVisible);", "+\t\t\t\t\tvisibleField = field;", "+\t\t\tProblemFieldBinding nonVisibleType = null;", "-\t\t\t\t\t\t\t\tvisibleField = field;", "+\t\t\t\t\t\t\t\tif (anInterface.canBeSeenBy(this))", "+\t\t\t\t\t\t\t\t\tvisibleField = field;", "+\t\t\t\t\t\t\t\telse", "+\t\t\t\t\t\t\t\t\tnonVisibleType = new ProblemFieldBinding(anInterface, fieldName, ReceiverTypeNotVisible);", "+\t\t\tif (nonVisibleType != null)", "+\t\t\t\treturn nonVisibleType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b250576e0ddb5da7284bffd422b58315", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a7c3cda7c961d5a5839fc88cdcdca05f749f0591", "commitAfterChange": "45f26d79341dbd73cc50656614a5963b62874264", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\tif (visibleField != null)", "+\t\t\t\t\tif (visibleField == null)", "+\t\t\t\t\t\tvisibleField = field;", "+\t\t\t\t\telse", "-\t\t\t\t\tif (!currentType.canBeSeenBy(this))", "-\t\t\t\t\t\treturn new ProblemFieldBinding(currentType, fieldName, ReceiverTypeNotVisible);", "-\t\t\t\t\tvisibleField = field;", "-\t\t\tProblemFieldBinding nonVisibleType = null;", "-\t\t\t\t\t\t\t\tif (anInterface.canBeSeenBy(this))", "-\t\t\t\t\t\t\t\t\tvisibleField = field;", "-\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\tnonVisibleType = new ProblemFieldBinding(anInterface, fieldName, ReceiverTypeNotVisible);", "+\t\t\t\t\t\t\t\tvisibleField = field;", "-\t\t\tif (nonVisibleType != null)", "-\t\t\t\treturn nonVisibleType;"]}], "num": 20886}