{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c6cc17361e44a0b07c4c156296cc46f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e975bf5ec3aa9013213264954789ea9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void test003()", "signatureAfterChange": "  \tpublic void test003()", "diff": ["-\t\t\t\"1. ERROR in Y.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class Y<T> extends X<A> { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. ERROR in Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Y<T> extends X<A> { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"1. ERROR in YY.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. WARNING in YY.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\n\" + ", "+\t\t\t\"\t                           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in YY.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"1. ERROR in JJ.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. ERROR in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"2. ERROR in JJ.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"2. WARNING in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + ", "+\t\t\t\"\t                              ^\\n\" + ", "+\t\t\t\"Type safety: I is a raw type. References to generic type I<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c230be37ea92c9cb662e7a3e37d6dfe9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void test002()", "signatureAfterChange": "  \tpublic void test002()", "diff": ["-\t\t\t\"1. ERROR in Y.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class Y<T> extends X<A> { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. ERROR in Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Y<T> extends X<A> { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"1. ERROR in YY.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. WARNING in YY.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\n\" + ", "+\t\t\t\"\t                           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in YY.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"1. ERROR in JJ.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. ERROR in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"2. ERROR in JJ.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"2. WARNING in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + ", "+\t\t\t\"\t                              ^\\n\" + ", "+\t\t\t\"Type safety: I is a raw type. References to generic type I<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee96f4824a37750808c789659d8a467d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test001()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["-\t\t\t\"1. ERROR in Y.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class Y<T> extends X<A> { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. ERROR in Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Y<T> extends X<A> { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"1. ERROR in YY.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. WARNING in YY.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\n\" + ", "+\t\t\t\"\t                           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in YY.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class YY<T> extends X { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"1. ERROR in JJ.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"1. ERROR in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + ", "-\t\t\t\"2. ERROR in JJ.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\r\\n\" + ", "+\t\t\t\"2. WARNING in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + ", "+\t\t\t\"\t                              ^\\n\" + ", "+\t\t\t\"Type safety: I is a raw type. References to generic type I<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in JJ.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class JJ<T> implements I { public void foo(T t) {} }\\n\" + "]}], "num": 68345}