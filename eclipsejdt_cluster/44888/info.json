{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0cf32419498d1176a39118ec3aace1a7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4092d67e1aac85333dabbebe2b2f48a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator2.java", "commitBeforeChange": "ec3d2b8d7bc5e4b4b2d91a6a1cfd252341798462", "commitAfterChange": "dfdf5cdb33faed31f1d77a512774b27d49c87683", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "diff": ["-\t\tthis.createAndResolveBindings(potentialMatches);", "-", "-\t\tif (!this.createHierarchyResolver()) {", "-\t\t\treturn;", "+\t\t// create and resolve binding (equivalent to beginCompilation() in Compiler)", "+\t\ttry {", "+\t\t\tthis.createAndResolveBindings(potentialMatches);", "+\t\t} catch (AbortCompilation e) {", "+\t\t\tthis.compilationAborted = true;", "-", "+\t", "+\t\t// create hierarchy resolver if needed", "+\t\ttry {", "+\t\t\tif (!this.compilationAborted && !this.createHierarchyResolver()) {", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t} catch (AbortCompilation e) {", "+\t\t\tthis.compilationAborted = true;", "+\t\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93e92513668afda11228129250a4786", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "dbb21f9a082cc8b4fc9a756e4b7778384b3f408c", "commitAfterChange": "bbd2ac48b173a123c7419ce013244d878b152c22", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void testCompare() throws IOException, Exception", "signatureAfterChange": "  public void testCompare() throws IOException, Exception", "diff": ["-\tcompareFormattedSource();", "+\ttry {", "+\t\tcompareFormattedSource();", "+\t}", "+\tcatch (ComparisonFailure cf) {", "+\t\tif (this.failureIndex == -1) {", "+\t\t\tFAILURES[UNEXPECTED_FAILURE].failures.add(this.path);", "+\t\t} else {", "+\t\t\tFAILURES[this.failureIndex].failures.add(this.path);", "+\t\t}", "+\t\tthrow cf;", "+\t}", "+\tcatch (AssertionFailedError afe) {", "+\t\tif (this.failureIndex == -1) {", "+\t\t\tFAILURES[UNEXPECTED_FAILURE].failures.add(this.path);", "+\t\t} else {", "+\t\t\tFAILURES[this.failureIndex].failures.add(this.path);", "+\t\t}", "+\t\tthrow afe;", "+\t}", "+\tcatch (Exception ex) {", "+\t\tFAILURES[UNEXPECTED_FAILURE].failures.add(this.path);", "+\t\tthrow ex;", "+\t}"]}], "num": 44888}