{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f5d387ddfb4c4fa059047e502f129b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5167e1d2264d9f2bab58b3adf9eb0ac5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "763419711da4e3660120696b40172dc3acc63526", "commitAfterChange": "11c24986fc925cfc43f4c88e72e0daee39a1576b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate FieldDeclaration convert(ISourceField sourceField, TypeDeclaration type, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate FieldDeclaration convert(ISourceField sourceField, TypeDeclaration type, CompilationResult compilationResult)", "diff": ["-\t\tfield.type = createTypeReference(sourceField.getTypeName(), start, end);", "-\t\tfield.modifiers = sourceField.getModifiers();", "+\t\tint modifiers = sourceField.getModifiers();", "+\t\tboolean isEnumConstant = (modifiers & AccEnum) != 0;", "+\t\tif (isEnumConstant) {", "+\t\t\tfield.modifiers = modifiers & ~Flags.AccEnum; // clear AccEnum bit onto AST (binding will add it)", "+\t\t} else {", "+\t\t\tfield.modifiers = modifiers;", "+\t\t\tfield.type = createTypeReference(sourceField.getTypeName(), start, end);", "+\t\t}", "-\t\t\tif (Flags.isEnum(field.modifiers)) {", "-\t\t\t\tfield.modifiers &= ~Flags.AccEnum;", "-\t\t\t\tfield.type = null;", "+\t\t\tif (isEnumConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71f591090ed44220866f2bf7cdd2b16d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate FieldDeclaration convert(SourceField fieldHandle, TypeDeclaration type, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate FieldDeclaration convert(SourceField fieldHandle, TypeDeclaration type, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\tboolean isEnumConstant = (modifiers & AccEnum) != 0;", "+\t\tboolean isEnumConstant = (modifiers & ClassFileConstants.AccEnum) != 0;", "-\t\t\tfield.modifiers = modifiers & ~Flags.AccEnum; // clear AccEnum bit onto AST (binding will add it)", "+\t\t\tfield.modifiers = modifiers & ~ClassFileConstants.AccEnum; // clear AccEnum bit onto AST (binding will add it)", "-\t\t\t\t\tanonymousLocalTypeDeclaration.modifiers &= ~AccEnum; // remove tag in case this is the init of an enum constant", "+\t\t\t\t\tanonymousLocalTypeDeclaration.modifiers &= ~ClassFileConstants.AccEnum; // remove tag in case this is the init of an enum constant"]}], "num": 23301}