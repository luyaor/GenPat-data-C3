{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71e9423ed059e55b62855cd5e5dea8f8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6173c990f03483293402069c3206be7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "1a18ae0a7f87984c327278bf2097db1fc176b8aa", "commitAfterChange": "16639d06fb7d968f56130bc74dcaf6bcb3941b64", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \t\r private void updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta)", "diff": ["-private void updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta) {\r", "+ */\r", "+private boolean updateCurrentDeltaAndIndex(Openable element, IResourceDelta delta) {\r", "-\t\t\tbreak;\r", "+\t\t\tif (element instanceof IPackageFragmentRoot) {\r", "+\t\t\t\telement = (Openable)((IPackageFragmentRoot)element).getPackageFragment(\"\");\r", "+\t\t\t}\r", "+\t\t\tif (element instanceof IPackageFragment) {\r", "+\t\t\t\t// add subpackages\r", "+\t\t\t\tPackageFragmentRoot root = element.getPackageFragmentRoot();\r", "+\t\t\t\tString name = element.getElementName();\r", "+\t\t\t\tIResourceDelta[] children = delta.getAffectedChildren();\r", "+\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "+\t\t\t\t\tIResourceDelta child = children[i];\r", "+\t\t\t\t\tIResource resource = child.getResource();\r", "+\t\t\t\t\tif (resource instanceof IFolder) {", "+\t\t\t\t\t\tString subpkgName = \r", "+\t\t\t\t\t\t\tname.length() == 0 ? \r", "+\t\t\t\t\t\t\t\tresource.getName() : \r", "+\t\t\t\t\t\t\t\tname + \".\" + resource.getName(); //$NON-NLS-1$\r", "+\t\t\t\t\t\tOpenable subpkg = (Openable)root.getPackageFragment(subpkgName);\r", "+\t\t\t\t\t\tthis.updateCurrentDeltaAndIndex(subpkg, child);\r", "+\t\t\t\t\t}", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "-\t\t\tbreak;\r", "+\t\t\tif (element instanceof IPackageFragmentRoot) {\r", "+\t\t\t\telement = (Openable)((IPackageFragmentRoot)element).getPackageFragment(\"\");\r", "+\t\t\t}\r", "+\t\t\tif (element instanceof IPackageFragment) {\r", "+\t\t\t\t// remove subpackages\r", "+\t\t\t\tPackageFragmentRoot root = element.getPackageFragmentRoot();\r", "+\t\t\t\tString name = element.getElementName();\r", "+\t\t\t\tIResourceDelta[] children = delta.getAffectedChildren();\r", "+\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "+\t\t\t\t\tIResourceDelta child = children[i];\r", "+\t\t\t\t\tIResource resource = child.getResource();\r", "+\t\t\t\t\tif (resource instanceof IFolder) {\r", "+\t\t\t\t\t\tString subpkgName = \r", "+\t\t\t\t\t\t\tname.length() == 0 ? \r", "+\t\t\t\t\t\t\t\tresource.getName() : \r", "+\t\t\t\t\t\t\t\tname + \".\" + resource.getName(); //$NON-NLS-1$\r", "+\t\t\t\t\t\tOpenable subpkg = (Openable)root.getPackageFragment(subpkgName);\r", "+\t\t\t\t\t\tthis.updateCurrentDeltaAndIndex(subpkg, child);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "+\t\t\t\treturn false; // when a project is open/closed don't process children\r", "-\t\t\tbreak;\r", "+\t\t\treturn true;\r", "+\treturn true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6a921cae233b472c959d3d6ee39a97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "56d15386ff3f6926c8a8ed7999b62e707baad4f8", "commitAfterChange": "8813bb7624a5282a5772eab0a6afafea0971ade6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tNameLookup newNameLookup(JavaProject project, ICompilationUnit[] workingCopies)", "signatureAfterChange": " \tNameLookup newNameLookup(JavaProject project, ICompilationUnit[] workingCopies)", "diff": ["+\t\tHashtableOfArrayToObject allPkgFragmentsCache = cache.allPkgFragmentsCache;", "+\t\tif (allPkgFragmentsCache == null) {", "+\t\t\tHashMap rootInfos = JavaModelManager.getJavaModelManager().deltaState.roots;", "+\t\t\tIPackageFragmentRoot[] allRoots = cache.allPkgFragmentRootsCache;", "+\t\t\tint length = allRoots.length;", "+\t\t\tallPkgFragmentsCache = new HashtableOfArrayToObject();", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tIPackageFragmentRoot root = allRoots[i];", "+\t\t\t\tDeltaProcessor.RootInfo rootInfo = (DeltaProcessor.RootInfo) rootInfos.get(root.getPath());", "+\t\t\t\tJavaProject rootProject = rootInfo == null ? project : rootInfo.project;", "+\t\t\t\tHashSetOfArray fragmentsCache;", "+\t\t\t\tif (rootProject.equals(project)) {", "+\t\t\t\t\t// retrieve package fragments cache from this project", "+\t\t\t\t\tfragmentsCache = (HashSetOfArray) cache.pkgFragmentsCaches.get(root);", "+\t\t\t\t} else {", "+\t\t\t\t\t// retrieve package fragments  cache from the root's project", "+\t\t\t\t\tProjectCache rootProjectCache;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\trootProjectCache = rootProject.getProjectCache();", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// project doesn't exit", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tfragmentsCache = (HashSetOfArray) rootProjectCache.pkgFragmentsCaches.get(root);", "+\t\t\t\t}", "+\t\t\t\tObject[][] set = fragmentsCache.set;", "+\t\t\t\tfor (int j = 0, length2 = set.length; j < length2; j++) {", "+\t\t\t\t\tString[] pkgName = (String[]) set[j];", "+\t\t\t\t\tif (pkgName == null)", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\tObject existing = allPkgFragmentsCache.get(pkgName);", "+\t\t\t\t\tif (existing == null || existing == NO_ROOTS) {", "+\t\t\t\t\t\tallPkgFragmentsCache.put(pkgName, root);", "+\t\t\t\t\t\t// ensure super packages (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=119161)", "+\t\t\t\t\t\t// are also in the map", "+\t\t\t\t\t\taddSuperPackageNames(pkgName, allPkgFragmentsCache);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (existing instanceof PackageFragmentRoot) {", "+\t\t\t\t\t\t\tallPkgFragmentsCache.put(pkgName, new IPackageFragmentRoot[] {(PackageFragmentRoot) existing, root});", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) existing;", "+\t\t\t\t\t\t\tint rootLength = roots.length;", "+\t\t\t\t\t\t\tSystem.arraycopy(roots, 0, roots = new IPackageFragmentRoot[rootLength+1], 0, rootLength);", "+\t\t\t\t\t\t\troots[rootLength] = root;", "+\t\t\t\t\t\t\tallPkgFragmentsCache.put(pkgName, roots);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tcache.allPkgFragmentsCache = allPkgFragmentsCache;", "+\t\t}"]}], "num": 58160}