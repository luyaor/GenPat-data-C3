{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ae7e25002ad327d248ad259e5dbb226", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171d3ee58546c493bb219b9003397c35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 1233, "methodNumberAfterChange": 1233, "signatureBeforeChange": " public void test1203a()", "signatureAfterChange": " public void test1203a()", "diff": ["-\tString expectedOutput = this.complianceLevel < ClassFileConstants.JDK1_7", "-\t\t? \t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\treturn X.<String>foo(one, two);\\n\" + ", "-\t\t\t\"\t                 ^^^\\n\" + ", "-\t\t\t\"The method foo(String, String) of type X is not generic; it cannot be parameterized with arguments <String>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\treturn this.<String>bar(one, two);\\n\" + ", "-\t\t\t\"\t                    ^^^\\n\" + ", "-\t\t\t\"The method bar(String, String) of type X is not generic; it cannot be parameterized with arguments <String>\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t: \t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\treturn X.<String>foo(one, two);\\n\" + ", "-\t\t\t\"\t          ^^^^^^\\n\" + ", "-\t\t\t\"Unused type arguments for the non generic method foo(String, String) of type X; it should not be parameterized with arguments <String>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"\treturn this.<String>bar(one, two);\\n\" + ", "-\t\t\t\"\t             ^^^^^^\\n\" + ", "-\t\t\t\"Unused type arguments for the non generic method bar(String, String) of type X; it should not be parameterized with arguments <String>\\n\" + ", "-\t\t\t\"----------\\n\";", "-\t", "-\tthis.runNegativeTest(", "+\tString[] sources =", "-\t\t},", "-\t\texpectedOutput);", "+\t\t};", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_7) {", "+\t\trunNegativeTest(", "+\t\t\tsources,", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\treturn X.<String>foo(one, two);\\n\" + ", "+\t\t\t\"\t                 ^^^\\n\" + ", "+\t\t\t\"The method foo(String, String) of type X is not generic; it cannot be parameterized with arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\treturn this.<String>bar(one, two);\\n\" + ", "+\t\t\t\"\t                    ^^^\\n\" + ", "+\t\t\t\"The method bar(String, String) of type X is not generic; it cannot be parameterized with arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(", "+\t\t\ttrue,", "+\t\t\tsources,", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\treturn X.<String>foo(one, two);\\n\" + ", "+\t\t\t\"\t          ^^^^^^\\n\" + ", "+\t\t\t\"Unused type arguments for the non generic method foo(String, String) of type X; it should not be parameterized with arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\treturn this.<String>bar(one, two);\\n\" + ", "+\t\t\t\"\t             ^^^^^^\\n\" + ", "+\t\t\t\"Unused type arguments for the non generic method bar(String, String) of type X; it should not be parameterized with arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\",", "+\t\t\tnull, null,", "+\t\t\tJavacTestOptions.Excuse.EclipseHasSomeMoreWarnings);\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d385687da2c3724228881a1facbb471", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "commitAfterChange": "ea9b3c75a1ccab739b2bea3a45cffc49cfff1439", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void test0009()", "signatureAfterChange": " public void test0009()", "diff": ["-\tString expected14ProblemLog =", "-\t\texpected13ProblemLog;", "-\t", "-\trunComplianceParserTest(", "-\t\ttestFiles,", "-\t\texpected13ProblemLog,", "-\t\texpected14ProblemLog,", "-\t\texpected15ProblemLog", "-\t);", "+", "+\tif(this.complianceLevel < ClassFileConstants.JDK1_5) {", "+\t\tthis.runNegativeTest(testFiles, expected13ProblemLog);", "+\t} else {", "+\t\trunConformTest(", "+\t\t\ttrue,", "+\t\t\ttestFiles, ", "+\t\t\texpected15ProblemLog,", "+\t\t\tnull, null,", "+\t\t\tJavacTestOptions.Excuse.EclipseHasSomeMoreWarnings);", "+\t}"]}], "num": 15616}