{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eab8396c262386c6c065eb69bc826b4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14d0c74e55952b2182c68dcbea07318e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\tthis.constant = NotAConstant;", "-\t\tif (this.resolvedType != null) // is a shared type reference which was already resolved", "-\t\t\treturn this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error", "+\t\tconstant = NotAConstant;", "+\t\tif (resolvedType != null) // is a shared type reference which was already resolved", "+\t\t\treturn resolvedType.isValidBinding() ? resolvedType : null; // already reported error", "-\t\tthis.resolvedType = getTypeBinding(scope);", "-\t\tif (!this.resolvedType.isValidBinding()) {", "-\t\t\tBinding binding = scope.getTypeOrPackage(this.tokens);", "+\t\tresolvedType = getTypeBinding(scope);", "+\t\tif (!resolvedType.isValidBinding()) {", "+\t\t\tBinding binding = scope.getTypeOrPackage(tokens);", "-\t\t\t\tthis.packageBinding = (PackageBinding) binding;", "+\t\t\t\tpackageBinding = (PackageBinding) binding;", "-\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\tif (isTypeUseDeprecated(resolvedType, scope))", "-\t\treturn this.resolvedType = scope.convertToRawType(this.resolvedType);", "+\t\tif (resolvedType instanceof ParameterizedTypeBinding) {", "+\t\t\tresolvedType = ((ParameterizedTypeBinding)resolvedType).type;", "+\t\t}", "+\t\treturn resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca482193800ad01a2410e2960471e40e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "1ad299c6e46ed5abccc52b588c8064972a8a8007", "commitAfterChange": "9161de43572385b89c05cb5fcdc58a0f1e197e80", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\tconstant = Constant.NotAConstant;", "-\t\tif (resolvedType != null) // is a shared type reference which was already resolved", "-\t\t\treturn resolvedType.isValidBinding() ? resolvedType : null; // already reported error", "+\t\tthis.constant = Constant.NotAConstant;", "+\t\tif (this.resolvedType != null) // is a shared type reference which was already resolved", "+\t\t\treturn this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error", "-\t\tresolvedType = getTypeBinding(scope);", "-\t\tif (!resolvedType.isValidBinding()) {", "-\t\t\tBinding binding = scope.getTypeOrPackage(tokens);", "+\t\tthis.resolvedType = getTypeBinding(scope);", "+\t\tif (!this.resolvedType.isValidBinding()) {", "+\t\t\tBinding binding = scope.getTypeOrPackage(this.tokens);", "-\t\t\t\tpackageBinding = (PackageBinding) binding;", "+\t\t\t\tthis.packageBinding = (PackageBinding) binding;", "-\t\tif (isTypeUseDeprecated(resolvedType, scope))", "-\t\t\treportDeprecatedType(scope);", "-\t\tif (resolvedType instanceof ParameterizedTypeBinding) {", "-\t\t\tresolvedType = ((ParameterizedTypeBinding)resolvedType).type;", "+\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\t\treportDeprecatedType(this.resolvedType, scope);", "+\t\tif (this.resolvedType instanceof ParameterizedTypeBinding) {", "+\t\t\tthis.resolvedType = ((ParameterizedTypeBinding)this.resolvedType).type;", "-\t\treturn resolvedType;", "+\t\treturn this.resolvedType;"]}], "num": 24648}