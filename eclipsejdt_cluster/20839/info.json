{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2898c59ac47ad54eaa32a8e7a08c94d9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d226fa9586b17838b4a9f64bd2ccffc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "0c0f02419934ad3b7d3b29ce6843cc90f00cf260", "commitAfterChange": "ce9d82264275b3c4ad926312ca4ca735e225fab4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r private static SearchPattern createTypePattern(String fullyQualifiedName, int limitTo)", "signatureAfterChange": "\r private static SearchPattern createTypePattern(String fullyQualifiedName, int limitTo)", "diff": ["-\t\tenclosingTypeName = new char[0];\r", "+\t\tenclosingTypeName = NO_CHAR;\r", "-\t\t\tenclosingTypeNames = CharOperation.splitOn('$', enclosingTypeName);\r", "+\t\t\tchar[] fullQualification;\r", "+\t\t\tif (enclosingTypeName.length > 0) {\r", "+\t\t\t\tfullQualification = CharOperation.concat(qualification, enclosingTypeName, '.');\r", "+\t\t\t\tenclosingTypeNames = CharOperation.splitOn('$', enclosingTypeName);\r", "+\t\t\t} else {\r", "+\t\t\t\tfullQualification = qualification;\r", "+\t\t\t\tenclosingTypeNames = NO_CHAR_CHAR;\r", "+\t\t\t}\r", "-\t\t\t\tnew TypeReferencePattern(qualification, simpleName, EXACT_MATCH, CASE_SENSITIVE));\r", "+\t\t\t\tnew TypeReferencePattern(fullQualification, simpleName, EXACT_MATCH, CASE_SENSITIVE));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca9c881dc06b96dfc9199735ce70ce4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "8924dfc4fa3fe74549012523c4b06ea66d1d771f", "commitAfterChange": "32ddf534b04d269b876c2c25ef9641f93fbc4b4b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public HierarchyBinaryType(int modifiers, char[] qualification, char[] typeName, char[] enclosingTypeName, char[][] typeParameterSignatures, char typeSuffix)", "signatureAfterChange": " \t public HierarchyBinaryType(int modifiers, char[] qualification, char[] sourceName, char[] enclosingTypeName, char[][] typeParameterSignatures, char typeSuffix)", "diff": ["-public HierarchyBinaryType(int modifiers, char[] qualification, char[] typeName, char[] enclosingTypeName, char[][] typeParameterSignatures, char typeSuffix){", "+public HierarchyBinaryType(int modifiers, char[] qualification, char[] sourceName, char[] enclosingTypeName, char[][] typeParameterSignatures, char typeSuffix){", "+\tthis.sourceName = sourceName;", "-\t\tthis.name = CharOperation.concat(qualification, typeName, '/');", "+\t\tthis.name = CharOperation.concat(qualification, sourceName, '/');", "-\t\tthis.name = CharOperation.concat(qualification, '/', enclosingTypeName, '$', typeName); //rebuild A$B name", "+\t\tthis.name = CharOperation.concat(qualification, '/', enclosingTypeName, '$', sourceName); //rebuild A$B name"]}], "num": 20839}