{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41694722bd94c58267948831435dbb7e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0beccdbbe37aa5638112498859da5b01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "d4d6b0243291019997a7d2e0c012e405a0f88778", "commitAfterChange": "b254baac66bf2889dacf5067873dc414e39763d4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding currentBinding)", "diff": ["-\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding, true);", "+\t\tboolean old = scope.insideTypeAnnotation;", "+\t\tscope.insideTypeAnnotation = true;", "+\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding);", "+\t\tscope.insideTypeAnnotation = old;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83eb46d3479a8b5d0c56467c94d828c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "b6b8c5d56c52da04a602fb9a065023d943b4e7a7", "commitAfterChange": "f8cf1cf93993a2a964d587ccb545506c0c4fdc0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "diff": ["-\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding);", "-\t\t", "+\t\tboolean resolved = false;", "+\t\t\tif (binding == null && !resolved) {", "+\t\t\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding, true);", "+\t\t\t\tbinding = annotation.getCompilerAnnotation();", "+\t\t\t\tresolved = true;", "+\t\t\t}"]}], "num": 62555}