{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fa1c43f2226afdd9ed14ca662255671", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29726e1f9bbe664c20a3ae475d7c66d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "9ba8652d2cebf2117416af5e39a70e172556117b", "commitAfterChange": "5e5b42592bef6fdd64e1e290eec08f6437050079", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// add the assert support in the clinit", "-\t\tmanageSyntheticAccessIfNecessary(currentScope, flowInfo);", "+\t\tif (!isOptimizedTrueAssertion){", "+\t\t\t// add the assert support in the clinit", "+\t\t\tmanageSyntheticAccessIfNecessary(currentScope, flowInfo);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c46f8a6fd34e0c4b07e84995ac1588b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "106f3756e5999bf7fc285b76343c30257bc8ef38", "commitAfterChange": "b78c9eb519121b68605325fd214ba23170967998", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " private ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized, boolean wasMissingType)", "signatureAfterChange": " private ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized, boolean wasMissingType)", "diff": ["-\t\tthis.problemReporter.isClassPathCorrect(compoundName, this.unitBeingCompleted, this.missingClassFileLocation);", "+\t\tif (!wasMissingType) {", "+\t\t\t/* Since missing types have been already been complained against while producing binaries, there is no class path ", "+\t\t\t * misconfiguration now that did not also exist in some equivalent form while producing the class files which encode ", "+\t\t\t * these missing types. So no need to bark again. Note that wasMissingType == true signals a type referenced in a .class ", "+\t\t\t * file which could not be found when the binary was produced. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=364450 */", "+\t\t\tthis.problemReporter.isClassPathCorrect(compoundName, this.unitBeingCompleted, this.missingClassFileLocation);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41879f44772411bfc445a2cdad17db6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "5bb2bc7f924033ac90ef06377adaf6e8028c136c", "commitAfterChange": "ef1e5cb9e8f1ed367497f33911cb9848dee28aa7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["-\t\tassertTrue(title, size==0 || problems.length() > 0);", "+\t\tif (!stopOnFailure) {", "+\t\t\tassertTrue(title, size==0 || problems.length() > 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce2b4d6a031602f3e383570d0cade68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "9ebc56bbef98951afda94a11e400e1c39d8ba94d", "commitAfterChange": "ce91b2c4edecc0c98ec95a698ec9636f85dd8181", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void checkExceptionHandlers(TypeBinding raisedException, ASTNode location, FlowInfo flowInfo, BlockScope scope, boolean isExceptionOnAutoClose)", "signatureAfterChange": " public void checkExceptionHandlers(TypeBinding raisedException, ASTNode location, FlowInfo flowInfo, BlockScope scope, boolean isExceptionOnAutoClose)", "diff": ["-\t\tif (traversedContext instanceof InsideSubRoutineFlowContext) {", "-\t\t\tASTNode node = traversedContext.associatedNode;", "-\t\t\tif (node instanceof TryStatement) {", "-\t\t\t\tTryStatement tryStatement = (TryStatement) node;", "-\t\t\t\tflowInfo.addInitializationsFrom(tryStatement.subRoutineInits); // collect inits", "+\t\tif (!isExceptionOnAutoClose) {", "+\t\t\tif (traversedContext instanceof InsideSubRoutineFlowContext) {", "+\t\t\t\tASTNode node = traversedContext.associatedNode;", "+\t\t\t\tif (node instanceof TryStatement) {", "+\t\t\t\t\tTryStatement tryStatement = (TryStatement) node;", "+\t\t\t\t\tflowInfo.addInitializationsFrom(tryStatement.subRoutineInits); // collect inits", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1442f5e01808011a12190527313619", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "dc897dd3e4818ca2b15bd3d143de606b0ce0335f", "commitAfterChange": "8536e94c328f058d5f377b8328af7061c65f8af1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tacceptChild(visitor, getReturnType());", "+\t\t\tif (!isConstructor) {", "+\t\t\t\tacceptChild(visitor, getReturnType());", "+\t\t\t}"]}], "num": 51146}