{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5509ee0f9247000add8b824abce0f9a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9853f1979393bfe275b5d1478c2325d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "1b20dcfe1f475fdfa6c1b5a9779be9cb96d6bf35", "commitAfterChange": "bc9fb826fad258109fd282b013c3bd67797f6224", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["-\tboolean reachUnchecked = !scope.compilerOptions().", "-\t\treportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions;", "+\tboolean markUncheckedExceptionsAsReached = ", "+\t\t!this.isMethodContext || !scope.compilerOptions().reportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions;", "-\t\tint cacheIndex = i / ExceptionHandlingFlowContext.BitCacheSize, bitMask = 1 << (i % ExceptionHandlingFlowContext.BitCacheSize);", "-\t\t\tif (reachUnchecked) {", "-\t\t\t\tthis.isReached[cacheIndex] |= bitMask;", "+\t\t\tif (markUncheckedExceptionsAsReached) {", "+\t\t\t\tthis.isReached[i / ExceptionHandlingFlowContext.BitCacheSize] |= 1 << (i % ExceptionHandlingFlowContext.BitCacheSize);", "-\tSystem.arraycopy(this.isReached, 0, this.isNeeded, 0, cacheSize);", "+\tif (!this.isMethodContext) {", "+\t\tSystem.arraycopy(this.isReached, 0, this.isNeeded, 0, cacheSize);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6123f4239d601a03d2ae620626829d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "d0c29ef085aca7621ab6ac19e8de871cbd734495", "commitAfterChange": "c8ca33a12ce5373c4c6bcb65eced790d82bc1944", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["-\tboolean markUncheckedExceptionsAsReached = ", "-\t\t!this.isMethodContext || !scope.compilerOptions().reportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions;", "+\tboolean markExceptionsAndThrowableAsReached = ", "+\t\t!this.isMethodContext || scope.compilerOptions().reportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable;", "-\t\tthis.indexes.put(handledExceptions[i], i); // key type  -> value index", "-\t\tif (handledExceptions[i].isUncheckedException(true)) {", "-\t\t\tif (markUncheckedExceptionsAsReached) {", "+\t\tReferenceBinding handledException = handledExceptions[i]; ", "+\t\tthis.indexes.put(handledException, i); // key type  -> value index", "+\t\tif (handledException.isUncheckedException(true)) {", "+\t\t\tif (markExceptionsAndThrowableAsReached || ", "+\t\t\t\t\thandledException.id != TypeIds.T_JavaLangThrowable &&", "+\t\t\t\t\thandledException.id != TypeIds.T_JavaLangException) {"]}], "num": 36541}