{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88998fa62bc7bbccd86b2e97f2caed32", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10988b531e7aaa30e62cfe0dd1b3d733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "commitAfterChange": "8ed896e298fa9789ff51d3aeca45b60a4a3c5b99", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\t// TODO; wait for resolve of bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=76190", "-\t\trewriteNodeList(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+", "+\t\tRewriteEvent bodyEvent= getEvent(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY);", "+\t\tint indent= 0;", "+\t\tif (bodyEvent != null && bodyEvent.getChangeKind() != RewriteEvent.UNCHANGED) {", "+\t\t\tRewriteEvent[] children= bodyEvent.getChildren();", "+\t\t\ttry {", "+\t\t\t\tint token= getScanner().readNext(pos, true);", "+\t\t\t\tboolean hasSemicolon= token == ITerminalSymbols.TokenNameSEMICOLON;", "+\t\t\t\tif (!hasSemicolon && isAllOfKind(children, RewriteEvent.INSERTED)) {", "+\t\t\t\t\tdoTextInsert(pos, \";\", getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t} else if (hasSemicolon) {", "+\t\t\t\t\tint endPos= getScanner().getCurrentEndOffset();", "+\t\t\t\t\tif (isAllOfKind(children, RewriteEvent.REMOVED)) {", "+\t\t\t\t\t\tdoTextRemove(pos, endPos - pos, getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tpos= endPos;", "+\t\t\t\t}", "+\t\t\t\tindent= getIndent(pos);", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\thandleException(e);", "+\t\t\t}", "+\t\t}", "+\t\trewriteParagraphList(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY, pos, indent, -1, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d611e3e81eade51b8276ac1fccc8e615", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "614aa9b4f40b4f1b65f94cb7a7006b82df3c54a0", "commitAfterChange": "661131f974fed90769c7088e8df5c9955de91a59", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\trewriteNodeList(node, EnumDeclaration.SUPER_INTERFACE_TYPES_PROPERTY, pos, \" implements \", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tpos= rewriteNodeList(node, EnumDeclaration.SUPER_INTERFACE_TYPES_PROPERTY, pos, \" implements \", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tint startIndent= getIndent(node.getStartPosition()) + 1;", "+\t\tRewriteEvent event= getEvent(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY);", "+\t\tRewriteEvent[] events= event.getChildren();", "+", "+\t\tpos= getPosAfterLeftBrace(pos);", "+\t\tStringBuffer leadString= new StringBuffer();", "+\t\t", "+\t\tif (isAllOfKind(events, RewriteEvent.INSERTED)) {", "+\t\t\tint lead= 1;", "+\t\t\tfor (int i= 0; i < lead; i++) {", "+\t\t\t\tleadString.append(getLineDelimiter());", "+\t\t\t}", "+\t\t\tleadString.append(createIndentString(startIndent));", "+\t\t}", "+\t\t", "+\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, leadString.toString(), \", \"); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 40083}