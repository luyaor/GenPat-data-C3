{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac41ae7007b1af1310bcda1c917ca9f8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22fa2f4646cfe948810b51316e2bdc10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RootManipulationsTests.java", "commitBeforeChange": "3896c928f2181f18f6740dee0a59c7ad2e4c256d", "commitAfterChange": "bb2aa8fa4883217f6f859ee7f082135cad7ea6d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void populate(StringBuffer buffer, IJavaElement element, int indent) throws CoreException", "signatureAfterChange": " protected void populate(StringBuffer buffer, IJavaElement element, int indent) throws CoreException", "diff": ["-\tIJavaElement[] children = parent.getChildren();", "-\tfor (int i = 0, length = children.length; i < length; i++) {", "-\t\tpopulate(buffer, children[i], indent+1);", "+\tIJavaElement[] children = null;", "+\ttry {", "+\t\tchildren = parent.getChildren();", "+\t} catch (JavaModelException e) {", "+\tif (children != null) {", "+\t\tfor (int i = 0, length = children.length; i < length; i++) {", "+\t\t\tpopulate(buffer, children[i], indent+1);", "+\t\t}", "+\t}", "+\t", "-\tif (element instanceof IJavaProject) {", "-\t\tnonJavaResources = ((IJavaProject)element).getNonJavaResources();", "-\t} else if (element instanceof IPackageFragmentRoot) {", "-\t\tnonJavaResources = ((IPackageFragmentRoot)element).getNonJavaResources();", "-\t} else if (element instanceof IPackageFragment) {", "-\t\tnonJavaResources = ((IPackageFragment)element).getNonJavaResources();", "+\ttry {", "+\t\tif (element instanceof IJavaProject) {", "+\t\t\tnonJavaResources = ((IJavaProject)element).getNonJavaResources();", "+\t\t} else if (element instanceof IPackageFragmentRoot) {", "+\t\t\tnonJavaResources = ((IPackageFragmentRoot)element).getNonJavaResources();", "+\t\t} else if (element instanceof IPackageFragment) {", "+\t\t\tnonJavaResources = ((IPackageFragment)element).getNonJavaResources();", "+\t\t}", "+\t} catch (JavaModelException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a5dbabaac6fad229c4804e381a41990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0fb012af3c6557520ab00415c58833602b027192", "commitAfterChange": "9b946cfc5e836db6230d5f068e2a6b12c282bcf4", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot(IResource resource)", "signatureAfterChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot(IResource resource)", "diff": ["-\t\tif (resource.getType() == IResource.FILE", "-\t\t\t&& (Util.isArchiveFileName(resource.getName()))) {", "-\t\t\treturn new JarPackageFragmentRoot(resource, this);", "-\t\t} else {", "-\t\t\tif (resource.getProject().equals(getProject())) {", "-\t\t\t\t// name of root will be the project relative path (source forlders and library folder in same project)", "-\t\t\t\treturn new PackageFragmentRoot(resource, this);", "-\t\t\t} else {", "-\t\t\t\t// name of root will be the full path (library folder in another project)", "-\t\t\t\treturn new PackageFragmentRoot(resource, this, resource.getFullPath().toString());", "-\t\t\t}", "+\t\tswitch (resource.getType()) {", "+\t\t\tcase IResource.FILE:", "+\t\t\t\tif (Util.isArchiveFileName(resource.getName())) {", "+\t\t\t\t\treturn new JarPackageFragmentRoot(resource, this);", "+\t\t\t\t} else {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\tcase IResource.FOLDER:", "+\t\t\t\tif (resource.getProject().equals(getProject())) {", "+\t\t\t\t\t// name of root is the project relative path (case of source folders and library folder in same project)", "+\t\t\t\t\treturn new PackageFragmentRoot(resource, this, resource.getProjectRelativePath().toString());", "+\t\t\t\t} else {", "+\t\t\t\t\t// name of root is the full path (case of library folder in another project)", "+\t\t\t\t\treturn new PackageFragmentRoot(resource, this, resource.getFullPath().toString());", "+\t\t\t\t}", "+\t\t\tcase IResource.PROJECT:", "+\t\t\t\treturn new PackageFragmentRoot(resource, this, \"\"); //$NON-NLS-1$", "+\t\t\tdefault:", "+\t\t\t\treturn null;"]}], "num": 22688}