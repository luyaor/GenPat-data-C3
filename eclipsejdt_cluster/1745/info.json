{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce32b32efbd963dfff515e992c14a1d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277bb5a8b5085310e13a64a61752cfd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "b7295bb19a68269f09e5fdceeecf4f4c701e7063", "commitAfterChange": "f74beb57e62e872a608b1d99069f6ffa51720699", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void test001e()", "signatureAfterChange": " public void test001e()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"import java.util.ArrayList;\\n\" +", "-\t\t\t\"public class X<T> {\" +", "-\t\t\t\"\tpublic void ab(ArrayList<T> al){\\n\" + ", "-\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\"\t\tX<String> x = new X<>();\\n\" + ", "-\t\t\t\"\t\tx.ab(new ArrayList<>());\\n\" + ", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"}\",", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tx.ab(new ArrayList<>());\\n\" + ", "-\t\t\"\t  ^^\\n\" + ", "-\t\t\"The method ab(ArrayList<String>) in the type X<String> is not applicable for the arguments (ArrayList<Object>)\\n\" + ", "-\t\t\"----------\\n\");", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\"public class X<T> {\" +", "+\t\t\t\t\"\tpublic void ab(ArrayList<T> al){\\n\" + ", "+\t\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"\t\tX<String> x = new X<>();\\n\" + ", "+\t\t\t\t\"\t\tx.ab(new ArrayList<>());\\n\" + ", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\",", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tx.ab(new ArrayList<>());\\n\" + ", "+\t\t\t\"\t  ^^\\n\" + ", "+\t\t\t\"The method ab(ArrayList<String>) in the type X<String> is not applicable for the arguments (ArrayList<Object>)\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\t\"public class X<T> {\" +", "+\t\t\t\t\t\"\tpublic void ab(ArrayList<T> al){\\n\" + ", "+\t\t\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\t\t\"\t\tX<String> x = new X<>();\\n\" + ", "+\t\t\t\t\t\"\t\tx.ab(new ArrayList<>());\\n\" + ", "+\t\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\t\"}\",", "+\t\t\t\t},", "+\t\t\t\t\"SUCCESS\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c79f21d07c73a3e5b361a5de674066", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "b7295bb19a68269f09e5fdceeecf4f4c701e7063", "commitAfterChange": "f74beb57e62e872a608b1d99069f6ffa51720699", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void test001d()", "signatureAfterChange": " public void test001d()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"import java.util.ArrayList;\\n\" +", "-\t\t\t\"public class X<T> {\" +", "-\t\t\t\"\tpublic void ab(ArrayList<String> al){\\n\" + ", "-\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\"\t\tX<String> x = new X<>();\\n\" + ", "-\t\t\t\"\t\tx.ab(new ArrayList<>());\\n\" + ", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"}\",", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tx.ab(new ArrayList<>());\\n\" + ", "-\t\t\"\t  ^^\\n\" + ", "-\t\t\"The method ab(ArrayList<String>) in the type X<String> is not applicable for the arguments (ArrayList<Object>)\\n\" + ", "-\t\t\"----------\\n\");", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\"public class X<T> {\" +", "+\t\t\t\t\"\tpublic void ab(ArrayList<String> al){\\n\" + ", "+\t\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"\t\tX<String> x = new X<>();\\n\" + ", "+\t\t\t\t\"\t\tx.ab(new ArrayList<>());\\n\" + ", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\",", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tx.ab(new ArrayList<>());\\n\" + ", "+\t\t\t\"\t  ^^\\n\" + ", "+\t\t\t\"The method ab(ArrayList<String>) in the type X<String> is not applicable for the arguments (ArrayList<Object>)\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\t\"public class X<T> {\" +", "+\t\t\t\t\t\"\tpublic void ab(ArrayList<String> al){\\n\" + ", "+\t\t\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\t\t\"\t\tX<String> x = new X<>();\\n\" + ", "+\t\t\t\t\t\"\t\tx.ab(new ArrayList<>());\\n\" + ", "+\t\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\t\"}\",", "+\t\t\t\t},", "+\t\t\t\t\"SUCCESS\");", "+\t}"]}], "num": 1745}