{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a99398fe64ed5687db7f0262a9b7f64b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e32db3d9115e56fd5e80fe77d32a3b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "signatureAfterChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "diff": ["-    // do not construct type variables if source < 1.5", "-\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, If they exist at all, process type parameters irrespective of source level.", "+    if (typeParameters == null || typeParameters.length == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eb58a2c6345c21e4347d8749a340db5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "signatureAfterChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "diff": ["-    // do not construct type variables if source < 1.5", "-\tif (typeParameters == null || compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, If they exist at all, process type parameters irrespective of source level.", "+    if (typeParameters == null || typeParameters.length == 0) {"]}], "num": 43414}