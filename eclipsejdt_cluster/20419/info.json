{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cac699ee6ad6264e85a849d94627b57", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7f4ba966f7478a98dfa56ac2582773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "366617dbc4fc1d9363db17217a7ae199f0f005ea", "commitAfterChange": "2e2587440cf19d8bb150ea041d5a3f7055142622", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static FakedTrackingVariable getCloseTrackingVariable(Expression expression, FlowInfo flowInfo, FlowContext flowContext)", "signatureAfterChange": " \tpublic static FakedTrackingVariable getCloseTrackingVariable(Expression expression, FlowInfo flowInfo, FlowContext flowContext)", "diff": ["+\t\t\telse if (expression instanceof ConditionalExpression) {", "+\t\t\t\tFakedTrackingVariable falseTrackingVariable = getCloseTrackingVariable(((ConditionalExpression)expression).valueIfFalse, flowInfo, flowContext);", "+\t\t\t\tif (falseTrackingVariable != null) {", "+\t\t\t\t\treturn falseTrackingVariable;", "+\t\t\t\t}", "+\t\t\t\treturn getCloseTrackingVariable(((ConditionalExpression)expression).valueIfTrue, flowInfo, flowContext);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c89a09d97b2e8909b79ea0849bf57b43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "938f4b2ad6ef3c12e60db3be23aed731979677d7", "commitAfterChange": "2a4a5bb83970ab01b870bb191d85824e7b57733d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static FakedTrackingVariable getCloseTrackingVariable(Expression expression, FlowInfo flowInfo, FlowContext flowContext)", "signatureAfterChange": " \tpublic static FakedTrackingVariable getCloseTrackingVariable(Expression expression, FlowInfo flowInfo, FlowContext flowContext)", "diff": ["+\t\t\telse if (expression instanceof ConditionalExpression) {", "+\t\t\t\tFakedTrackingVariable falseTrackingVariable = getCloseTrackingVariable(((ConditionalExpression)expression).valueIfFalse, flowInfo, flowContext);", "+\t\t\t\tif (falseTrackingVariable != null) {", "+\t\t\t\t\treturn falseTrackingVariable;", "+\t\t\t\t}", "+\t\t\t\treturn getCloseTrackingVariable(((ConditionalExpression)expression).valueIfTrue, flowInfo, flowContext);", "+\t\t\t}"]}], "num": 20419}