{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff354791ad3ae5212f95e446962a14dd", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cef41aee772e4cfb72b152060ae5088", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "6180586710a957df9f07a8a5503c93267544711b", "commitAfterChange": "2bf8d876e4d66bd0fa9172a177289e82abf5e2a4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tpublic boolean performConcurrentJob(\r \t\tIJob searchJob,\r \t\tint waitingPolicy,\r \t\tIProgressMonitor progress)", "signatureAfterChange": "\r \tpublic boolean performConcurrentJob(\r \t\tIJob searchJob,\r \t\tint waitingPolicy,\r \t\tIProgressMonitor progress)", "diff": ["-\t\t\tSystem.out.println(\"-> performing concurrent job (\"+ Thread.currentThread()+\"): START - \" + searchJob); //$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\tJobManager.log(\"STARTING concurrent job - \" + searchJob); //$NON-NLS-1$\r", "-\t\t\t\t\t\tSystem.out.println(\r", "-\t\t\t\t\t\t\t\"-> performing concurrent job (\"+ Thread.currentThread()+\"): NOT READY - ForceImmediate - \" + searchJob);//$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t\t\t\tJobManager.log(\"-> NOT READY - Forcing immediate - \" + searchJob);//$NON-NLS-1$\r", "-\t\t\t\t\t\tif (VERBOSE)\r", "-\t\t\t\t\t\t\tSystem.out.println(\"-> performing concurrent job (\"+ Thread.currentThread()+\"): END - \" + searchJob); //$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t\t\tif (VERBOSE)\r", "+\t\t\t\t\t\tJobManager.log(\"DONE concurrent job - \" + searchJob); //$NON-NLS-1$\r", "-\t\t\t\t\t\tSystem.out.println(\r", "-\t\t\t\t\t\t\t\"-> performing concurrent job (\"+ Thread.currentThread()+\"): NOT READY - CancelIfNotReady - \" + searchJob); //$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t\t\t\tJobManager.log(\"-> NOT READY - Cancelling - \" + searchJob); //$NON-NLS-1$\r", "+\t\t\t\t\tif (VERBOSE)\r", "+\t\t\t\t\t\tJobManager.log(\"CANCELLED concurrent job - \" + searchJob); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\tSystem.out.println(\r", "-\t\t\t\t\t\t\t\t\t\t\"-> performing concurrent job (\"+ Thread.currentThread()+\"): NOT READY - WaitUntilReady - \" + searchJob);//$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t\t\t\t\t\t\tJobManager.log(\"-> NOT READY - Waiting until ready - \" + searchJob);//$NON-NLS-1$\r", "-\t\t\tSystem.out.println(\"-> performing concurrent job (\"+ Thread.currentThread()+\"): END - \" + searchJob); //$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\tJobManager.log(\"DONE concurrent job - \" + searchJob); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d89b0f6b2458ff6df74eeb4a377c828", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7ad0eeadaceb44e1b53b562d9f600c27360591cc", "commitAfterChange": "03f3c13746669bd1d430c192f0dc18ee2005b656", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "signatureAfterChange": "\r public boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "diff": ["-\tif (VERBOSE) System.out.println(\"-> performing concurrent job : START - \"+ searchJob);\r", "+\tif (VERBOSE) System.out.println(\"-> performing concurrent job : START - \"/*nonNLS*/ + searchJob);\r", "-\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : NOT READY - ForceImmediate - \"+ searchJob);\r", "+\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : NOT READY - ForceImmediate - \"/*nonNLS*/ + searchJob);\r", "-\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : END - \"+ searchJob);\r", "+\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : END - \"/*nonNLS*/ + searchJob);\r", "-\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : NOT READY - CancelIfNotReady - \"+ searchJob);\r", "+\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : NOT READY - CancelIfNotReady - \"/*nonNLS*/ + searchJob);\r", "-\t\t\t\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : NOT READY - WaitUntilReady - \"+ searchJob);\r", "+\t\t\t\t\t\t\tif (VERBOSE) System.out.println(\"-> performing concurrent job : NOT READY - WaitUntilReady - \"/*nonNLS*/ + searchJob);\r", "-\t\t\t\t\t\t\t\tprogress.subTask(awaitingWork+\" files to index\");\r", "+\t\t\t\t\t\t\t\tprogress.subTask(Util.bind(\"manager.filesToIndex\"/*nonNLS*/, Integer.toString(awaitingWork)));\r", "-\tif (VERBOSE) System.out.println(\"-> performing concurrent job : END - \"+ searchJob);\r", "+\tif (VERBOSE) System.out.println(\"-> performing concurrent job : END - \"/*nonNLS*/ + searchJob);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74764a4fbf1a68d492e87f633893b0d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "d13b416373f0706b9f6c096fa50a9c7742cd01fb", "commitAfterChange": "67703159b6e692911d4366f9193bf075599a0db1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic boolean performConcurrentJob(\r \t\tIJob searchJob,\r \t\tint waitingPolicy,\r \t\tIProgressMonitor progress)", "signatureAfterChange": "\r \tpublic boolean performConcurrentJob(\r \t\tIJob searchJob,\r \t\tint waitingPolicy,\r \t\tIProgressMonitor progress)", "diff": ["-\t\t\tSystem.out.println(\"-> performing concurrent job : START - \" + searchJob); //$NON-NLS-1$\r", "+\t\t\tSystem.out.println(\"-> performing concurrent job (\"+ Thread.currentThread()+\"): START - \" + searchJob); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\"-> performing concurrent job : NOT READY - ForceImmediate - \" + searchJob);//$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\"-> performing concurrent job (\"+ Thread.currentThread()+\"): NOT READY - ForceImmediate - \" + searchJob);//$NON-NLS-1$\r", "-\t\t\t\t\t\t\tSystem.out.println(\"-> performing concurrent job : END - \" + searchJob); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\tSystem.out.println(\"-> performing concurrent job (\"+ Thread.currentThread()+\"): END - \" + searchJob); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\"-> performing concurrent job : NOT READY - CancelIfNotReady - \" + searchJob); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\"-> performing concurrent job (\"+ Thread.currentThread()+\"): NOT READY - CancelIfNotReady - \" + searchJob); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\t\"-> performing concurrent job : NOT READY - WaitUntilReady - \" + searchJob);//$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\"-> performing concurrent job (\"+ Thread.currentThread()+\"): NOT READY - WaitUntilReady - \" + searchJob);//$NON-NLS-1$\r", "-\t\t\tSystem.out.println(\"-> performing concurrent job : END - \" + searchJob); //$NON-NLS-1$\r", "+\t\t\tSystem.out.println(\"-> performing concurrent job (\"+ Thread.currentThread()+\"): END - \" + searchJob); //$NON-NLS-1$\r"]}], "num": 2078}