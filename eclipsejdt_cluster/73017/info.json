{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b64dd6d660e6bfe4b728b9d6d3c72718", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e7301028a150014ae2eef73dc7a313d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f875f4161e47c5087f589529b7e7ee5cf66c1b26", "commitAfterChange": "3e03e3984540d3907fa7739b419f89dad9725944", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\tformatExtraDimensions(fieldDeclaration.type);", "+\t\t/*", "+\t\t * Check for extra dimensions", "+\t\t */", "+\t\tint extraDimensions = getDimensions();", "+\t\tif (extraDimensions != 0) {", "+\t\t\t for (int i = 0; i < extraDimensions; i++) {", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\t\t }", "+\t\t}", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e186ebddabf25ef3fd3fe9044122fa2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "4690bf209f18cd325a0106904806772c80cdc7cd", "commitAfterChange": "05d6073173c0310580ac7ddb24f238b065dba6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private void createFields(IBinaryField[] iFields, long sourceLevel)", "signatureAfterChange": " private void createFields(IBinaryField[] iFields, long sourceLevel)", "diff": ["+\t\t\tint firstAnnotatedFieldIndex = -1;", "-\t\t\t\tif (this.environment.globalOptions.storeAnnotations)", "-\t\t\t\t\tfield.setAnnotations(createAnnotations(binaryField.getAnnotations(), this.environment));", "+\t\t\t\tif (firstAnnotatedFieldIndex < 0", "+\t\t\t\t\t\t&& this.environment.globalOptions.storeAnnotations ", "+\t\t\t\t\t\t&& binaryField.getAnnotations() != null) {", "+\t\t\t\t\tfirstAnnotatedFieldIndex = i;", "+\t\t\t\t}", "+\t\t\t// second pass for reifying annotations, since may refer to fields being constructed (147875)", "+\t\t\tif (firstAnnotatedFieldIndex >= 0) {", "+\t\t\t\tfor (int i = firstAnnotatedFieldIndex; i <size; i++) {", "+\t\t\t\t\tthis.fields[i].setAnnotations(createAnnotations(iFields[i].getAnnotations(), this.environment));", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2719aea6b623f1f244c610de93dc970", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f875f4161e47c5087f589529b7e7ee5cf66c1b26", "commitAfterChange": "3e03e3984540d3907fa7739b419f89dad9725944", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\tformatExtraDimensions(argument.type);", "+", "+\t\t/*", "+\t\t * Check for extra dimensions", "+\t\t */", "+\t\tint extraDimensions = getDimensions();", "+\t\tif (extraDimensions != 0) {", "+\t\t\t for (int i = 0; i < extraDimensions; i++) {", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\t\t }", "+\t\t}", "+"]}], "num": 73017}