{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79bd933c808a26939d5bfda453cd5f2c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e976a2150ac7d581d509aee33186cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate synchronized List<ICompilationUnit> calculateObsoleteWorkingCopies(IFile parentFile, \t\t\tSet<IFile> newlyGeneratedFiles)", "signatureAfterChange": " \tprivate synchronized List<ICompilationUnit> computeClean()", "diff": ["-\t */", "-\tprivate synchronized List<ICompilationUnit> calculateObsoleteWorkingCopies(IFile parentFile,", "-\t\t\tSet<IFile> newlyGeneratedFiles)", "-\t{", "-\t\t// Discard generated types that were never built and thus exist only", "-\t\t// as in-memory working copies.", "-\t\t// Only discard them if they have no other parents.", "-\t\tList<ICompilationUnit> toDiscard = new ArrayList<ICompilationUnit>();", "-\t\tSet<ICompilationUnit> generatedFromReconcile = _parentToGenWorkingCopies.getValues(parentFile);", "-\t\tfor (ICompilationUnit wc : generatedFromReconcile) {", "-\t\t\t// spare types generated in the last round", "-\t\t\tIFile generatedFile = (IFile) wc.getResource();", "-\t\t\tif (!newlyGeneratedFiles.contains(generatedFile)) {", "-\t\t\t\tSet<IFile> parentsOfGeneratedWC = _parentToGenWorkingCopies.getKeys(wc);", "-\t\t\t\tif (parentsOfGeneratedWC.size() == 1 && parentsOfGeneratedWC.contains(parentFile)) {", "-\t\t\t\t\t_parentToGenWorkingCopies.remove(parentFile, wc);", "-\t\t\t\t\tassert !_parentToGenWorkingCopies.containsValue(wc) : \"Working copy unexpectedly remains in dependency map: \" + //$NON-NLS-1$", "-\t\t\t\t\twc.getElementName() + \" <- \" + _parentToGenWorkingCopies.getKeys(wc); //$NON-NLS-1$", "-\t\t\t\t\t_workingCopies.remove(generatedFile);", "-\t\t\t\t\ttoDiscard.add(wc);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tassert checkIntegrity();", "-\t\treturn toDiscard;", "-\t}", "+\t */", "+\tprivate synchronized List<ICompilationUnit> computeClean()", "+\t{", "+\t\t_buildDeps.clearState();", "+\t\t_reconcileNonDeps.clear();", "+\t\tList<ICompilationUnit> toDiscard = new ArrayList<ICompilationUnit>(_hiddenBuiltTypes.values());", "+\t\t_hiddenBuiltTypes.clear();", "+\t\t", "+\t\tassert checkIntegrity();", "+\t\treturn toDiscard;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d98daf048fda2b47e40ac021d3fe4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "b8409b2c5761cb2e6dbcdfc3bef92e6e755d2aa7", "commitAfterChange": "e968b992e38be58d07a46d70f656322d8b2edb33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "signatureAfterChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "diff": ["-\t\tMap<FactoryContainer, Boolean> containers = null;", "-\t\tif (jproj != null) {", "-\t\t\ttry {", "-\t\t\t\tcontainers = FactoryPathUtil.readFactoryPathFile(jproj);", "-\t\t\t}", "-\t\t\tcatch (CoreException ce) {", "-\t\t\t\tce.printStackTrace();", "-\t\t\t}", "-\t\t\tcatch (IOException ioe) {", "-\t\t\t\tioe.printStackTrace();", "-\t\t\t}", "-\t\t}", "-\t\t// Workspace if no project data was found", "-\t\tif (containers == null) {", "-\t\t\ttry {", "-\t\t\t\tcontainers = FactoryPathUtil.readFactoryPathFile(null);", "-\t\t\t}", "-\t\t\tcatch (CoreException ce) {", "-\t\t\t\tce.printStackTrace();", "-\t\t\t}", "-\t\t\tcatch (IOException ioe) {", "-\t\t\t\tioe.printStackTrace();", "-\t\t\t}", "-\t\t}", "-\t\t// if no project and no workspace data was found, we'll get the defaults", "-\t\tif (containers == null) {", "-\t\t\tcontainers = new LinkedHashMap<FactoryContainer, Boolean>();", "-\t\t}", "-\t\tboolean disableNewPlugins = jproj != null;", "-\t\tupdatePluginContainers(containers, disableNewPlugins);", "-\t\treturn new LinkedHashMap(containers);", "-\t}", "+\t\treturn FactoryPathUtil.getAllContainers(jproj);"]}], "num": 33020}