{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48082f7af8a5e96fb0d75a0d11c90382", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc9e9275be3a1f89ca1dc3104b01406", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "5cdd74ffbe2d421e3dae9c00346cd61d59a4698a", "commitAfterChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(ClassScope upperScope)", "diff": ["+\t\t\t// check @Deprecated annotation presence", "+\t\t\tif (this.binding != null", "+\t\t\t\t\t&& (this.binding.getAnnotationTagBits() & TagBits.AnnotationDeprecated) == 0", "+\t\t\t\t\t&& (this.binding.modifiers & ClassFileConstants.AccDeprecated) != 0", "+\t\t\t\t\t&& this.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\tthis.scope.problemReporter().missingDeprecatedAnnotationForMethod(this);", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837b3222fa429cc64d78e5425f2bc237", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "commitAfterChange": "97e97b88721b4de5a807118c9ff5efc5e22e05aa", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "    public void resolve()", "signatureAfterChange": "    public void resolve()", "diff": ["-\t\tif ((sourceType.getAnnotationTagBits() & TagBits.AnnotationDeprecated) == 0", "+\t\tlong annotationTagBits = sourceType.getAnnotationTagBits();", "+\t\tif ((annotationTagBits & TagBits.AnnotationDeprecated) == 0", "+\t\tif ((annotationTagBits & TagBits.AnnotationFunctionalInterface) != 0) {", "+\t\t\tif(!this.binding.isFunctionalInterface(this.scope)) {", "+\t\t\t\tthis.scope.problemReporter().notAFunctionalInterface(this);", "+\t\t\t}", "+\t\t}", "+"]}], "num": 54781}