{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db25172885bccf6721ea106d8f9cc65e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21673f8c654acf53b30ec6ba967ab064", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "e6099120ee9021152f84e60105066d4964c2db21", "commitAfterChange": "82631a98caad8b28e9cefb217339d51e64ef47f9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private void buildForProject(JavaProject project, ArrayList infos, ArrayList units) throws JavaModelException", "signatureAfterChange": "\r private void buildForProject(JavaProject project, ArrayList infos, ArrayList units) throws JavaModelException", "diff": ["-\t\tif (inProjectOfFocusType) {\r", "-\t\t\torg.eclipse.jdt.core.ICompilationUnit unitToLookInside = focusType.getCompilationUnit();\r", "-\t\t\tif (unitToLookInside != null) {\r", "-\t\t\t\tthis.nameLookup.setUnitsToLookInside(new IWorkingCopy[] {unitToLookInside});\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\ttry {\r", "-\t\t\tthis.hierarchyResolver = \r", "-\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, JavaCore.getOptions(), this, new DefaultProblemFactory());\r", "-\t\t\tif (focusType != null) {\r", "-\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();\r", "-\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));\r", "-\t\t\t\tif (focusTypeBinding == null \r", "-\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {\r", "-\t\t\t\t\t// focus type is not visible in this project: no need to go further\r", "-\t\t\t\t\treturn;\r", "+\t\tsynchronized(this.nameLookup) { // prevent 2 concurrent accesses to name lookup while the working copies are set\r", "+\t\t\tif (inProjectOfFocusType) {\r", "+\t\t\t\torg.eclipse.jdt.core.ICompilationUnit unitToLookInside = focusType.getCompilationUnit();\r", "+\t\t\t\tif (unitToLookInside != null) {\r", "+\t\t\t\t\tthis.nameLookup.setUnitsToLookInside(new IWorkingCopy[] {unitToLookInside});\r", "-\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits);\r", "-\t\t} finally {\r", "-\t\t\tif (inProjectOfFocusType) {\r", "-\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);\r", "+\t\t\ttry {\r", "+\t\t\t\tthis.hierarchyResolver = \r", "+\t\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, JavaCore.getOptions(), this, new DefaultProblemFactory());\r", "+\t\t\t\tif (focusType != null) {\r", "+\t\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();\r", "+\t\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));\r", "+\t\t\t\t\tif (focusTypeBinding == null \r", "+\t\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {\r", "+\t\t\t\t\t\t// focus type is not visible in this project: no need to go further\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits);\r", "+\t\t\t} finally {\r", "+\t\t\t\tif (inProjectOfFocusType) {\r", "+\t\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1032d82dfc7320b3a7f85aa1e79ee9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "6f6b135c3443a1f802996624e28e3fccc1ffade1", "commitAfterChange": "179d5d1c5c2a0bb83cd907094171a8fb72cf869e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private void buildForProject(JavaProject project, ArrayList infos, ArrayList units) throws JavaModelException", "signatureAfterChange": "\r private void buildForProject(JavaProject project, ArrayList infos, ArrayList units) throws JavaModelException", "diff": ["-\tIType focusType = this.getType();\r", "-\tif (focusType != null && focusType.getJavaProject().equals(project)) {\r", "-\t\t// add focus type\r", "-\t\ttry {\r", "-\t\t\tinfos.add(((JavaElement) focusType).getRawInfo());\r", "-\t\t} catch (JavaModelException e) {\r", "-\t\t\t// if the focus type is not present, or if cannot get workbench path\r", "-\t\t\t// we cannot create the hierarchy\r", "-\t\t\treturn;\r", "-\t\t}\r", "-\t}\r", "-\t\r", "+\t\tIType focusType = this.getType();\r", "+\t\tthis.nameLookup = project.getNameLookup();\r", "-\t\t\tthis.searchableEnvironment.unitToLookInside = (CompilationUnit)focusType.getCompilationUnit();\r", "-\t\t}\r", "-\t\tthis.nameLookup = project.getNameLookup();\r", "-\t\tthis.hierarchyResolver = \r", "-\t\t\tnew HierarchyResolver(this.searchableEnvironment, JavaCore.getOptions(), this, new DefaultProblemFactory());\r", "-\t\tif (focusType != null) {\r", "-\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();\r", "-\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));\r", "-\t\t\tif (focusTypeBinding == null \r", "-\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {\r", "-\t\t\t\t// focus type is not visible in this project: no need to go further\r", "-\t\t\t\treturn;\r", "+\t\t\torg.eclipse.jdt.core.ICompilationUnit unitToLookInside = focusType.getCompilationUnit();\r", "+\t\t\tif (unitToLookInside != null) {\r", "+\t\t\t\tthis.nameLookup.setUnitsToLookInside(new IWorkingCopy[] {unitToLookInside});\r", "-\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits);\r", "-\t\tif (inProjectOfFocusType) {\r", "-\t\t\tthis.searchableEnvironment.unitToLookInside = null;\r", "+\t\ttry {\r", "+\t\t\tthis.hierarchyResolver = \r", "+\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, JavaCore.getOptions(), this, new DefaultProblemFactory());\r", "+\t\t\tif (focusType != null) {\r", "+\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();\r", "+\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));\r", "+\t\t\t\tif (focusTypeBinding == null \r", "+\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {\r", "+\t\t\t\t\t// focus type is not visible in this project: no need to go further\r", "+\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits);\r", "+\t\t} finally {\r", "+\t\t\tif (inProjectOfFocusType) {\r", "+\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);\r", "+\t\t\t}\r"]}], "num": 46414}