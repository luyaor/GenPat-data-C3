{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca86d62dcd06f0b06c9f755e84956db5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d85169f9ab514c95135ed7bb813fe78c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "474372dbf9d38a254203e2d757bca92077ca8cab", "commitAfterChange": "3f8a2a5b580ed62b2fa1d860943fc7e800d835b5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void checkComment()", "signatureAfterChange": "  public void checkComment()", "diff": ["-\t\t\tif (reference instanceof JavadocSingleTypeReference) {", "-\t\t\t\tJavadocSingleTypeReference singleRef = (JavadocSingleTypeReference) reference;", "-\t\t\t\tthis.requestor.acceptTypeReference(singleRef.token, singleRef.sourceStart);", "-\t\t\t} else if (reference instanceof JavadocQualifiedTypeReference) {", "-\t\t\t\tJavadocQualifiedTypeReference qualifiedRef = (JavadocQualifiedTypeReference) reference;", "-\t\t\t\tthis.requestor.acceptTypeReference(qualifiedRef.tokens, qualifiedRef.sourceStart, qualifiedRef.sourceEnd);", "-\t\t\t} else if (reference instanceof JavadocFieldReference) {", "+\t\t\tacceptJavadocTypeReference(reference);", "+\t\t\tif (reference instanceof JavadocFieldReference) {", "+\t\t\t\tacceptJavadocTypeReference(fieldRef.receiver);", "+\t\t\t\tacceptJavadocTypeReference(messageSend.receiver);", "+\t\t\t\tacceptJavadocTypeReference(constructor.type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e497f7ff87b27c80d9ec64fbb006866f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "490f0dedc6b033aac107ccccbdc9e8361a921466", "commitAfterChange": "83feb6a3bbe889feb388b89a4854a090c75eaf0e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void checkComment()", "signatureAfterChange": " public void checkComment()", "diff": ["+\t\t\t\tif (fieldRef.receiver instanceof TypeReference) {", "+\t\t\t\t\tTypeReference typeRef = (TypeReference) fieldRef.receiver;", "+\t\t\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\t\t}", "+\t\t\t\tif (messageSend.receiver instanceof TypeReference) {", "+\t\t\t\t\tTypeReference typeRef = (TypeReference) messageSend.receiver;", "+\t\t\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\t\t}", "+\t\t\t} else if (reference instanceof JavadocAllocationExpression) {", "+\t\t\t\tJavadocAllocationExpression constructor = (JavadocAllocationExpression) reference;", "+\t\t\t\tpatternLocator.match(constructor, nodeSet);", "+\t\t\t\tif (constructor.type != null) {", "+\t\t\t\t\tpatternLocator.match(constructor.type, nodeSet);", "+\t\t\t\t}"]}], "num": 7774}