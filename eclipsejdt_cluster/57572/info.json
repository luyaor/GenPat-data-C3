{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff82e7f4e3f8ff628fe909ccedd82f2c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c2e1ce5f73ebbd1b968455d27d5305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "d81e6de27221b2caec858658787abf55d91a925e", "commitAfterChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "signatureAfterChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "diff": ["-\t\t\t\t\treturn new ConstraintTypeFormula(sPrime, tPrime, SUBTYPE, this.isSoft);", "+\t\t\t\t\treturn ConstraintTypeFormula.create(sPrime, tPrime, SUBTYPE, this.isSoft);", "-\t\t\t\t\treturn new ConstraintTypeFormula(subCandidate, variable.bound, SUBTYPE, this.isSoft);", "+\t\t\t\t\treturn ConstraintTypeFormula.create(subCandidate, variable.bound, SUBTYPE, this.isSoft);", "-\t\t\t\t\t\treturn new ConstraintTypeFormula(subCandidate, capture.lowerBound, SUBTYPE, this.isSoft);", "+\t\t\t\t\t\treturn ConstraintTypeFormula.create(subCandidate, capture.lowerBound, SUBTYPE, this.isSoft);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89009f751613832368185b1f5dd1a863", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "9506194ecd38aa227915d4452e8097fba7bd6231", "commitAfterChange": "27a13e874a8de3a8e74e5e1ab65479e9dace8b8c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["+", "-\t\t\treturn new ConstraintTypeFormula(exprType, this.right, COMPATIBLE);", "+\t\t\treturn new ConstraintTypeFormula(exprType, this.right, COMPATIBLE, this.isSoft);", "-\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfTrue, this.right, this.relation),", "-\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfFalse, this.right, this.relation)", "+\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfTrue, this.right, this.relation, this.isSoft),", "+\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfFalse, this.right, this.relation, this.isSoft)"]}], "num": 57572}