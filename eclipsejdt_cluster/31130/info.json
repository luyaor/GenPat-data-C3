{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe120e88689be873af354a6d0a4ee799", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "335759fcb68fb42060eec3f057a82648", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "4c699d8d7e47e1d06780d6e08781a0354fa51678", "commitAfterChange": "2503f6e89d5262be48c346150170dab19645db2a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void readBinaryChildren(HashMap newElements, IBinaryType typeInfo)", "signatureAfterChange": " protected void readBinaryChildren(ClassFile classFile, HashMap newElements, IBinaryType typeInfo)", "diff": ["-protected void readBinaryChildren(HashMap newElements, IBinaryType typeInfo) {", "+protected void readBinaryChildren(ClassFile classFile, HashMap newElements, IBinaryType typeInfo) {", "-\tBinaryType type = null;", "-\ttry {", "-\t\ttype = (BinaryType) this.classFile.getType();", "-\t\tif (typeInfo == null) {", "-\t\t\ttypeInfo = (IBinaryType) newElements.get(type);", "-\t\t\tif (typeInfo == null) {", "-\t\t\t\t// create a classfile reader ", "-\t\t\t    typeInfo = this.classFile.getBinaryTypeInfo((IFile)this.classFile.getResource());", "-\t\t\t}", "-\t\t}", "-\t} catch (JavaModelException npe) {", "-\t\treturn;", "-\t}", "+\tBinaryType type = (BinaryType) classFile.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "616e7f212a5a23af209274b1f6a68afe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "f49b9b8408e4df66a8d7de1ecfef06a5c49ce2bf", "commitAfterChange": "a6cbb492a9d90a25c92be484193ad866e0dc3430", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "signatureAfterChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "diff": ["-\t\tParameterizedMethodBinding method;", "-\t\tif (getClassMethodBindingCache != null) {", "-\t\t\tWeakReference w = (WeakReference) getClassMethodBindingCache.get(receiverType);", "-\t\t\tif (w != null) {", "-\t\t\t\tmethod = (ParameterizedMethodBinding) w.get();", "-\t\t\t\tif (method != null) {", "-\t\t\t\t\treturn method;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tmethod = new ParameterizedMethodBinding();", "+\t\tParameterizedMethodBinding method = new ParameterizedMethodBinding();", "-\t\tif (getClassMethodBindingCache == null) {", "-\t\t\tgetClassMethodBindingCache = new WeakHashMap();", "-\t\t}", "-\t\tgetClassMethodBindingCache.put(receiverType, new WeakReference(method));  // method refers back to key"]}], "num": 31130}