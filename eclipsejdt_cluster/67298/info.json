{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7cd6a392143df3c33701dac85981d2c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06dff2bb3976bb275f161d458764748f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileFinder.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void find0(File f, String pattern, boolean verbose)", "signatureAfterChange": " public void find0(File f, String pattern, boolean verbose)", "diff": ["-\t\t\t\t\tif ((length = resultFiles.length) == counter) {", "-\t\t\t\t\t\tSystem.arraycopy(resultFiles, 0, (resultFiles = new String[length * 2]), 0, length);", "+\t\t\t\t\tif ((length = this.resultFiles.length) == this.count) {", "+\t\t\t\t\t\tSystem.arraycopy(this.resultFiles, 0, (this.resultFiles = new String[length * 2]), 0, length);", "-\t\t\t\t\tresultFiles[counter++] = current.getAbsolutePath();", "-\t\t\t\t\tif (verbose && (counter % 100) == 0)", "+\t\t\t\t\tthis.resultFiles[this.count++] = current.getAbsolutePath();", "+\t\t\t\t\tif (verbose && (this.count % 100) == 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "457856dbbdb7d237521013c487adbba7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileFinder.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void find0(File f, String pattern, boolean verbose)", "signatureAfterChange": " private static void find0(File f, String pattern, ArrayList collector)", "diff": ["-public void find0(File f, String pattern, boolean verbose) {", "+private static void find0(File f, String pattern, ArrayList collector) {", "-\t\t\t\tfind0(current, pattern, verbose);", "+\t\t\t\tfind0(current, pattern, collector);", "-\t\t\t\t\tint length;", "-\t\t\t\t\tif ((length = this.resultFiles.length) == this.count) {", "-\t\t\t\t\t\tSystem.arraycopy(this.resultFiles, 0, (this.resultFiles = new String[length * 2]), 0, length);", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.resultFiles[this.count++] = current.getAbsolutePath();", "-\t\t\t\t\tif (verbose && (this.count % 100) == 0)", "-\t\t\t\t\t\tSystem.out.print('.');", "+\t\t\t\t\tcollector.add(current.getAbsolutePath());"]}], "num": 67298}