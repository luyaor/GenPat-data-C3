{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22232fdb168d442869a10ca260db0979", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f6bd9be35c3d801ca1c053b351992c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "cee242bcb21b999953c5459d6b40de2d782355f3", "commitAfterChange": "de0ba5a5e09b42f4671d55cb69260aca34e3da86", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate Object parseArguments(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Object parseArguments(Object receiver) throws InvalidInputException", "diff": ["-\t\t\t\t\tchar pc = peekChar();", "-\t\t\t\t\tif (!Character.isWhitespace(pc) && (!this.inlineTagStarted || pc != '}')) {", "-\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMalformedSeeReference(start, this.lineEnd);", "+\t\t\t\t\t// verify characters after arguments declaration (expecting white space or end comment)", "+\t\t\t\t\tif (!verifySpaceOrEndComment()) {", "+\t\t\t\t\t\tint end = this.starPosition == -1 ? this.lineEnd : this.starPosition;", "+\t\t\t\t\t\tif (this.source[end]=='\\n') end--;", "+\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMalformedSeeReference(start, end);", "-\t\t\t\tchar pc = peekChar();", "-\t\t\t\tif (!Character.isWhitespace(pc) && (!this.inlineTagStarted || pc != '}')) {", "-\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMalformedSeeReference(start, this.lineEnd);", "+\t\t\t\t// verify characters after arguments declaration (expecting white space or end comment)", "+\t\t\t\tif (!verifySpaceOrEndComment()) {", "+\t\t\t\t\tint end = this.starPosition == -1 ? this.lineEnd : this.starPosition;", "+\t\t\t\t\tif (this.source[end]=='\\n') end--;", "+\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMalformedSeeReference(start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0179bedd269337f261602b49346d50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "6c797406271c70e354dc360e4e2b55dc743bf914", "commitAfterChange": "6bb034ac24fec033a91d15d668c7ba33f5039fc9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate void resolveReference(Expression reference, Scope scope)", "signatureAfterChange": " \t \tprivate void resolveReference(Expression reference, Scope scope)", "diff": ["+\t\t\tint modifiers = fieldRef.binding==null ? -1 : fieldRef.binding.modifiers;", "-\t\t\t\t\tscope.problemReporter().javadocInvalidValueReference(fieldRef.sourceStart, fieldRef.sourceEnd);", "+\t\t\t\t\tscope.problemReporter().javadocInvalidValueReference(fieldRef.sourceStart, fieldRef.sourceEnd, modifiers);", "-\t\t\t\t\tscope.problemReporter().javadocInvalidValueReference(fieldRef.sourceStart, fieldRef.sourceEnd);", "+\t\t\t\t\tscope.problemReporter().javadocInvalidValueReference(fieldRef.sourceStart, fieldRef.sourceEnd, modifiers);", "+\t\t\tint modifiers = msgSend.binding==null ? -1 : msgSend.binding.modifiers;", "-\t\t\t\tscope.problemReporter().javadocInvalidValueReference(msgSend.sourceStart, msgSend.sourceEnd);", "+\t\t\t\tscope.problemReporter().javadocInvalidValueReference(msgSend.sourceStart, msgSend.sourceEnd, modifiers);", "+\t\t\tint modifiers = alloc.binding==null ? -1 : alloc.binding.modifiers;", "-\t\t\t\tscope.problemReporter().javadocInvalidValueReference(alloc.sourceStart, alloc.sourceEnd);", "+\t\t\t\tscope.problemReporter().javadocInvalidValueReference(alloc.sourceStart, alloc.sourceEnd, modifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f244b7d59d31530d4afbba41647650c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "6c797406271c70e354dc360e4e2b55dc743bf914", "commitAfterChange": "6bb034ac24fec033a91d15d668c7ba33f5039fc9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocInvalidValueReference(start, getTokenEndPosition());", "+\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocInvalidValueReference(start, getTokenEndPosition(), this.sourceParser.modifiers);", "-\t\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocInvalidValueReference(start, getIndexPosition());", "+\t\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocInvalidValueReference(start, getIndexPosition(), this.sourceParser.modifiers);", "-\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocInvalidValueReference(start, getIndexPosition());", "+\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocInvalidValueReference(start, getIndexPosition(), this.sourceParser.modifiers);", "-\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMissingReference(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\tif (this.sourceParser != null) {", "+\t\t\t\t\tthis.sourceParser.problemReporter().javadocMissingReference(this.tagSourceStart, this.tagSourceEnd, this.sourceParser.modifiers);", "+\t\t\t\t}"]}], "num": 32684}