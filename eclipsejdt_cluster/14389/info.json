{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "545542b0343e64b0f7ba400c320b70ec", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2b2ea296f4411a55f8455726c001cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\tif (!method.isConstructor())", "-\t\tmethod.returnType = resolveType(method.returnType, this.environment, null, 0);", "-\tfor (int i = method.parameters.length; --i >= 0;)", "-\t\tmethod.parameters[i] = resolveType(method.parameters[i], this.environment, null, 0);", "-\tfor (int i = method.thrownExceptions.length; --i >= 0;)", "-\t\tmethod.thrownExceptions[i] = resolveType(method.thrownExceptions[i], this.environment, true);", "-\tfor (int i = method.typeVariables.length; --i >= 0;)", "+\tif (!method.isConstructor()) {", "+\t\tTypeBinding resolvedType = resolveType(method.returnType, this.environment, null, 0);", "+\t\tmethod.returnType = resolvedType;", "+\t\tif ((resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t}\t\t", "+\t}", "+\tfor (int i = method.parameters.length; --i >= 0;) {", "+\t\tTypeBinding resolvedType = resolveType(method.parameters[i], this.environment, null, 0);", "+\t\tmethod.parameters[i] = resolvedType;", "+\t\tif ((resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t}\t\t", "+\t}", "+\tfor (int i = method.thrownExceptions.length; --i >= 0;) {", "+\t\tReferenceBinding resolvedType = resolveType(method.thrownExceptions[i], this.environment, true);", "+\t\tmethod.thrownExceptions[i] = resolvedType;", "+\t\tif ((resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t}", "+\t}", "+\tfor (int i = method.typeVariables.length; --i >= 0;) {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa1fd2a9bb7e4d7cf421c3cef37522ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\t\tmethodDecl.scope.problemReporter().cannotThrowType(exceptionTypes[i], resolvedExceptionType);", "-\t\t\t\tcontinue;", "+\t\t\t\tif (resolvedExceptionType.isValidBinding()) {", "+\t\t\t\t\tmethodDecl.scope.problemReporter().cannotThrowType(exceptionTypes[i], resolvedExceptionType);", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "-\t\t    if ((resolvedExceptionType.modifiers & ExtraCompilerModifiers.AccGenericSignature) != 0)", "-\t\t\t\tmethod.modifiers |= ExtraCompilerModifiers.AccGenericSignature;", "+\t\t\tif ((resolvedExceptionType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t\t}\t\t\t\t\t\t", "+\t\t\tmethod.modifiers |= (resolvedExceptionType.modifiers & ExtraCompilerModifiers.AccGenericSignature);", "+\t\t\t\tif ((parameterType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t\t\t}\t\t\t\t\t\t", "+\t\t\t\tif ((methodType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t\t\t}\t\t\t\t\t"]}], "num": 14389}