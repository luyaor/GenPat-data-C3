{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a8c318f93a6367febc189a918631dfb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33f45dd55ac9823a9020c8bc2ea84992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "fcebf68426f9aa792d1f3380803ca144f79b6c3c", "commitAfterChange": "4da5a9a150c1a47a773a4fd9e96abe9171b5562d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\tcompilationUnitDeclaration = CompilationUnitProblemFinder.process(unit, this, contents, parser, this.owner, perWorkingCopyInfo, !createAST/*reset env if not creating AST*/, pm);", "+\t\t\tcompilationUnitDeclaration = CompilationUnitProblemFinder.process(unit, this, contents, parser, this.owner, perWorkingCopyInfo, createAST, pm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8c92dce0e1fd79f8f26e2aa2581e3a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "576e848d928ff985089b0f6379553cd8a923a448", "commitAfterChange": "0bb31250e6dfa81e101547a2ec18bc13a11477d7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t!creatingAST,", "-\t\t\t\tstatementsRecovery); // optimize string literal only if not creating a DOM AST", "+\t\t\t\tcreatingAST,", "+\t\t\t\tstatementsRecovery);"]}], "num": 13288}