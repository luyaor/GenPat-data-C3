{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dea38bf6c75dfabb9723f7ce23fbd669", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629a4adef9f62887a4cffc692cb45146", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "cfa5c1f47090c25e060f31a67b980e7a46ebf3d4", "commitAfterChange": "149bc4e1d653c16627d234a0cec876b383f52a7c", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 200, "signatureBeforeChange": " public void recoveryTokenCheck()", "signatureAfterChange": " public void recoveryTokenCheck()", "diff": ["-\t\t\t\tpopElement(K_BLOCK_DELIMITER);", "+\t\t\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_ARRAY_INITIALIZER) {", "+\t\t\t\t\t// When inside an array initializer, we should not prematurely pop the enclosing block", "+\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=249704", "+\t\t\t\t\tpopElement(K_ARRAY_INITIALIZER);", "+\t\t\t\t} else {", "+\t\t\t\t\tpopElement(K_BLOCK_DELIMITER);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f90f8ee1dfffac28dae67a450fb13ff4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "cfa5c1f47090c25e060f31a67b980e7a46ebf3d4", "commitAfterChange": "149bc4e1d653c16627d234a0cec876b383f52a7c", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": " private void initializeForBlockStatements()", "signatureAfterChange": " private void initializeForBlockStatements()", "diff": ["-\t\tpopUntilElement(K_BLOCK_DELIMITER);", "+\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_ARRAY_INITIALIZER) {", "+\t\t\t// if recovery is taking place in an array initializer, we should prevent popping", "+\t\t\t// up to the enclosing block until the array initializer is properly closed", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=249704", "+\t\t\tpopUntilElement(K_ARRAY_INITIALIZER);", "+\t\t} else {", "+\t\t\tpopUntilElement(K_BLOCK_DELIMITER);", "+\t\t}"]}], "num": 40275}