{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32e037fe9d1d2030e5bec633fb75724c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a207dfd5b4d6e582987e29f260d736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "c83f12517cdac51319ba031385bd9a380905c315", "commitAfterChange": "3230c94014e69f2e2750889e5eaac5c1e552ded1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\tint offset = 0;", "+\t\t\tint offset;", "+\t\t\tint unicodePtr;", "+\t\t\tboolean checkIfUnicode = false;", "+\t\t\t\tunicodePtr = this.withoutUnicodePtr;", "+\t\t\t\toffset = this.currentPosition;", "-\t\t\t\tboolean checkIfUnicode = false;", "-\t\t\t\t\toffset = 6;", "+\t\t\t\t\toffset = this.currentPosition - offset;", "-\t\t\t\t\toffset = 1;", "+\t\t\t\t\toffset = this.currentPosition - offset;", "-\t\t\tif (this.tokenizeWhiteSpace && hasWhiteSpaces) {", "-\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "-\t\t\t\tthis.currentPosition-=offset;", "-\t\t\t\tthis.startPosition = whiteStart;", "-\t\t\t\treturn TokenNameWHITESPACE;", "+\t\t\tif (hasWhiteSpaces) {", "+\t\t\t\tif (this.tokenizeWhiteSpace) {", "+\t\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "+\t\t\t\t\tthis.currentPosition-=offset;", "+\t\t\t\t\tthis.startPosition = whiteStart;", "+\t\t\t\t\tif (checkIfUnicode) {", "+\t\t\t\t\t\tthis.withoutUnicodePtr = unicodePtr;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn TokenNameWHITESPACE;", "+\t\t\t\t} else if (checkIfUnicode) {", "+\t\t\t\t\tthis.withoutUnicodePtr = 1;", "+\t\t\t\t\tunicodeStoreAt(this.withoutUnicodePtr);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.withoutUnicodePtr = 0;", "+\t\t\t\t}", "-\t\t\t\t\t\tboolean checkIfUnicode = false;", "+\t\t\t\t\t\tcheckIfUnicode = false;", "-\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "-\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c4 < 0) {", "-\t\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\t\tisUnicode = true;\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "-\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) {", "-\t\t\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "+\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "+\t\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\t\tchar unicodeChar;", "-\t\t\t\t\t\t\t\t\t\tint index = this.currentPosition + 1;", "-\t\t\t\t\t\t\t\t\t\tindex++;", "-\t\t\t\t\t\t\t\t\t\twhile (this.source[index] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tindex++;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "-\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tunicodeChar = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif (unicodeChar == '\\n') {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\tif (Character.isJavaIdentifierStart(this.currentCharacter))", "+\t\t\t\t\tif (isJavaIdentifierStart(this.currentCharacter))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd0988945d084204481164ba3992d0a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6bbe631c4aee5403134035d5558f68ceeb91c520", "commitAfterChange": "a387db32f06bcc44b6b47e5aa021853a1cfee33c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\tint offset = 0;", "+\t\t\tint offset;", "+\t\t\tint unicodePtr;", "+\t\t\tboolean checkIfUnicode = false;", "+\t\t\t\tunicodePtr = this.withoutUnicodePtr;", "+\t\t\t\toffset = this.currentPosition;", "-\t\t\t\tboolean checkIfUnicode = false;", "-\t\t\t\t\toffset = 6;", "+\t\t\t\t\toffset = this.currentPosition - offset;", "-\t\t\t\t\toffset = 1;", "+\t\t\t\t\toffset = this.currentPosition - offset;", "-\t\t\tif (this.tokenizeWhiteSpace && hasWhiteSpaces) {", "-\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "-\t\t\t\tthis.currentPosition-=offset;", "-\t\t\t\tthis.startPosition = whiteStart;", "-\t\t\t\treturn TokenNameWHITESPACE;", "+\t\t\tif (hasWhiteSpaces) {", "+\t\t\t\tif (this.tokenizeWhiteSpace) {", "+\t\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "+\t\t\t\t\tthis.currentPosition-=offset;", "+\t\t\t\t\tthis.startPosition = whiteStart;", "+\t\t\t\t\tif (checkIfUnicode) {", "+\t\t\t\t\t\tthis.withoutUnicodePtr = unicodePtr;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn TokenNameWHITESPACE;", "+\t\t\t\t} else if (checkIfUnicode) {", "+\t\t\t\t\tthis.withoutUnicodePtr = 1;", "+\t\t\t\t\tunicodeStoreAt(this.withoutUnicodePtr);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.withoutUnicodePtr = 0;", "+\t\t\t\t}", "-\t\t\t\t\t\tboolean checkIfUnicode = false;", "+\t\t\t\t\t\tcheckIfUnicode = false;", "-\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "-\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c4 < 0) {", "-\t\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\t\tisUnicode = true;\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "-\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) {", "-\t\t\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "+\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "+\t\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\t\tchar unicodeChar;", "-\t\t\t\t\t\t\t\t\t\tint index = this.currentPosition + 1;", "-\t\t\t\t\t\t\t\t\t\tindex++;", "-\t\t\t\t\t\t\t\t\t\twhile (this.source[index] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tindex++;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "-\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tunicodeChar = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif (unicodeChar == '\\n') {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\tif (Character.isJavaIdentifierStart(this.currentCharacter))", "+\t\t\t\t\tif (isJavaIdentifierStart(this.currentCharacter))"]}], "num": 16651}