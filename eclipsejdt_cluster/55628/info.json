{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9f38fe0d42a14196c5629cbb3bab964", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab45b32b755f27d0498dbf02e072594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "a5e431ef5dd3e4ca66d16fb63b6f792ceeb0643b", "commitAfterChange": "42f1e70a46f62ba06d110671431cc4e0acafff68", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic MethodBinding getMethodBinding()", "signatureAfterChange": " \tpublic MethodBinding getMethodBinding()", "diff": ["-\t\t\tif (this.binding == null) {", "-\t\t\t\tthis.resolveType((BlockScope)this.scope.parent);", "+\t\t\tif (this.binding != null) {", "+\t\t\t\tthis.actualMethodBinding = new MethodBinding(this.binding.modifiers, this.binding.selector, this.binding.returnType, ", "+\t\t\t\t\t\tthis.binding instanceof SyntheticMethodBinding ? this.descriptor.parameters : this.binding.parameters,  // retain any faults in parameter list.", "+\t\t\t\t\t\t\t\tthis.binding.thrownExceptions, this.binding.declaringClass);", "+\t\t\t\tthis.actualMethodBinding.tagBits = this.binding.tagBits;", "+\t\t\t} else {", "+\t\t\t\tthis.actualMethodBinding = new ProblemMethodBinding(CharOperation.NO_CHAR, null, ProblemReasons.NoSuchSingleAbstractMethod);", "-\t\t\tthis.actualMethodBinding = new MethodBinding(this.binding.modifiers, this.binding.selector, this.binding.returnType, ", "-\t\t\t\t\tthis.binding instanceof SyntheticMethodBinding ? this.descriptor.parameters : this.binding.parameters,  // retain any faults in parameter list.", "-\t\t\t\t\t\t\tthis.binding.thrownExceptions, this.binding.declaringClass);", "-\t\t\tthis.actualMethodBinding.tagBits = this.binding.tagBits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f79a9f46575189aa65c8c3410f7e25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "c2c9899514741103674136b061d37380904756e0", "commitAfterChange": "1d631cdc6d8aa97d297a027f3883f9c7312c678d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r static State read(DataInputStream in) throws IOException", "signatureAfterChange": "\r \r static State read(DataInputStream in) throws IOException", "diff": ["-\tif (VERSION != in.readByte())\r", "-\t\tthrow new IOException(Util.bind(\"build.unhandledVersionFormat\")); //$NON-NLS-1$\r", "+\tif (VERSION != in.readByte()) {\r", "+\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\tSystem.out.println(\"Found non-compatible state version... answered null\"); //$NON-NLS-1$\r", "+\t\treturn null;\r", "+\t}\r"]}], "num": 55628}