{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c9a37181f4bf6b61e4db609c1352214", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d67dba096ee71fe7eec9ce26ecebcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "9d4f7131389390a16a995494da191d8ab6c07c5a", "commitAfterChange": "aa852841b1dd73414418bf5fc5420a74b80d0cd9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void endVisit(SingleMemberAnnotation annotation, BlockScope scope)", "signatureAfterChange": "  \tpublic void endVisit(SingleMemberAnnotation annotation, BlockScope scope)", "diff": ["-}", "-public void endVisit(SingleMemberAnnotation annotation, BlockScope scope) {", "-\tASTNode.resolveAnnotations(scope, new Annotation[] { annotation}, this.currentBinding);", "-\tthis.collector.add(annotation.getCompilerAnnotation());", "-}", "+", "+\tpublic void endVisit(SingleMemberAnnotation annotation, BlockScope scope) {", "+\t\tASTNode.resolveAnnotations(scope, new Annotation[] { annotation }, this.currentBinding);", "+\t\tAnnotationBinding binding = annotation.getCompilerAnnotation();", "+\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "+\t\tElement element = ElementFactory.newElement(this.currentBinding);", "+\t\t_annoToElement.put(anno, element);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd35174e22f6b17ef20d7944264ccdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "9d4f7131389390a16a995494da191d8ab6c07c5a", "commitAfterChange": "aa852841b1dd73414418bf5fc5420a74b80d0cd9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void endVisit(NormalAnnotation annotation, BlockScope scope)", "signatureAfterChange": "  \tpublic void endVisit(NormalAnnotation annotation, BlockScope scope)", "diff": ["-}", "-public void endVisit(NormalAnnotation annotation, BlockScope scope) {", "-\tASTNode.resolveAnnotations(scope, new Annotation[] { annotation}, this.currentBinding);", "-\tthis.collector.add(annotation.getCompilerAnnotation());", "-}", "+", "+\tpublic void endVisit(NormalAnnotation annotation, BlockScope scope) {", "+\t\tASTNode.resolveAnnotations(scope, new Annotation[] { annotation }, this.currentBinding);", "+\t\tAnnotationBinding binding = annotation.getCompilerAnnotation();", "+\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "+\t\tElement element = ElementFactory.newElement(this.currentBinding);", "+\t\t_annoToElement.put(anno, element);", "+\t}"]}], "num": 21045}