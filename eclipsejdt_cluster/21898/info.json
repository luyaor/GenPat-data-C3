{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fec5dcb81c321ec9386b7a5762b8da9e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c442e40fd1ab012413fdde0fc1bc38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.conditionExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.conditionExpression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.conditionExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.conditionExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.conditionExpression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a95fc7901668527498edce7a683d75f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SwitchCase.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.optionalExpression = new SimpleName(this.ast);", "-\t\t\tthis.expressionInitialized = true;", "-\t\t\tpostLazyInit(this.optionalExpression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (!this.expressionInitialized) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.optionalExpression = new SimpleName(this.ast);", "+\t\t\t\t\tthis.expressionInitialized = true;", "+\t\t\t\t\tpostLazyInit(this.optionalExpression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 21898}