{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "550f07255f5b6a1a31106569203ad273", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55500f6ca354c46d61285c5f3f066fb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings)", "diff": ["+\t\treturn parseCompilationUnit(classFile, resolveBindings, DefaultWorkingCopyOwner.PRIMARY);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f1355da5fa2dd5fa6620bfed00fd71d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["-\t\tif (unitName == null && project != null) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\tif (project == null) {", "-\t\t\t// this just reduces to the other simplest case", "-\t\t\treturn parseCompilationUnit(source);", "-\t\t}", "-\t\tif (owner == null) {", "-\t\t\towner = DefaultWorkingCopyOwner.PRIMARY;", "-\t\t}", "-\t", "-\t\tCompilationUnitDeclaration compilationUnitDeclaration = null;", "-\t\ttry {", "-\t\t\t// parse and resolve", "-\t\t\tcompilationUnitDeclaration =", "-\t\t\t\tCompilationUnitResolver.resolve(", "-\t\t\t\t\tsource,", "-\t\t\t\t\tunitName,", "-\t\t\t\t\tproject,", "-\t\t\t\t\tfalse/*don't cleanup*/,", "-\t\t\t\t\towner,", "-\t\t\t\t\tmonitor);", "-\t\t\tASTConverter converter = new ASTConverter(project.getOptions(true), true, monitor);", "-\t\t\tAST ast = new AST();", "-\t\t\tBindingResolver resolver = new DefaultBindingResolver(compilationUnitDeclaration.scope);", "-\t\t\tast.setBindingResolver(resolver);", "-\t\t\tconverter.setAST(ast);", "-\t\t", "-\t\t\tCompilationUnit cu = converter.convert(compilationUnitDeclaration, source);", "-\t\t\tcu.setLineEndTable(compilationUnitDeclaration.compilationResult.lineSeparatorPositions);", "-\t\t\tresolver.storeModificationCount(ast.modificationCount());", "-\t\t\treturn cu;", "-\t\t} catch(JavaModelException e) {", "-\t\t\t/* if a JavaModelException is thrown trying to retrieve the name environment", "-\t\t\t * then we simply do a parsing without creating bindings.", "-\t\t\t * Therefore all binding resolution will return null.", "-\t\t\t */", "-\t\t\treturn parseCompilationUnit(source);\t\t\t", "-\t\t} finally {", "-\t\t\tif (compilationUnitDeclaration != null) {", "-\t\t\t\tcompilationUnitDeclaration.cleanUp();", "-\t\t\t}", "-\t\t}", "+\t\tASTParser c = ASTParser.internalNewParser2();", "+\t\tc.setSource(source);", "+\t\tc.setUnitName(unitName);", "+\t\tc.setProject(project);", "+\t\tc.setWorkingCopyOwner(owner);", "+\t\tASTNode result = c.createAST(monitor);", "+\t\treturn (CompilationUnit) result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbf334b261d0b114d8a776a8bc71b8fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "0ed39879606810ff8db06fed2d2c454db613d59d", "commitAfterChange": "358d5f2f1d5c0a4dbde7d6e9af26746a4ddfb56c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\t\tIClassFile classFile, \t\t\tboolean resolveBindings)", "diff": ["+\t */", "+\tpublic static CompilationUnit parseCompilationUnit(", "+\t\t\tIClassFile classFile,", "+\t\t\tboolean resolveBindings) {", "+\t\t// TODO: (olivier) missing implementation", "+\t\tthrow new IllegalArgumentException();", "+\t}"]}], "num": 23538}