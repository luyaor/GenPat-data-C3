{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "278e8e6ed92ed214677d1d874ae91c0b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a59094c5ca6ef9d7c662b2d28c304959", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t\t\tpublic boolean accept(File pathname)", "signatureAfterChange": " \tpublic void testBatchCompilerAllJavadoc() throws IOException", "diff": ["+\t */", "+\tpublic void testBatchCompilerAllJavadoc() throws IOException {", "+\t\ttagAsSummary(\"Compile>Batch>Compiler>All Javadoc warnings\", false); // do NOT put in fingerprint", "+\t\tbuildUsingBatchCompiler(\"-warn:allJavadoc\");", "+\t}", "-\t\tFile[] wkspFiles = getAllFiles(wkspFile, new FileFilter() {", "-\t\t\tpublic boolean accept(File pathname) {", "-\t\t\t\tString name = pathname.getName();", "-\t\t\t\tString path = pathname.getAbsolutePath().toLowerCase();", "-\t\t\t\tlong length = pathname.length();", "-\t\t\t\treturn !name.startsWith(\".\") && !name.equalsIgnoreCase(\"cvs\") && ((pathname.isDirectory() || length >= limit && path.endsWith(\".java\")));", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e72991f8eadc162c7ddf819f82397fbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t\tpublic boolean accept(File pathname)", "signatureAfterChange": " \tpublic void testBatchCompiler() throws IOException", "diff": ["+\t */", "+\tpublic void testBatchCompiler() throws IOException {", "+\t\ttagAsSummary(\"Compile>Batch>Compiler>Default warnings\", false); // do NOT put in fingerprint", "+", "+\t\tbuildUsingBatchCompiler(\"\");", "+\t}", "-\t\tFile[] wkspFiles = getAllFiles(wkspFile, new FileFilter() {", "-\t\t\tpublic boolean accept(File pathname) {", "-\t\t\t\tString name = pathname.getName();", "-\t\t\t\tString path = pathname.getAbsolutePath().toLowerCase();", "-\t\t\t\tlong length = pathname.length();", "-\t\t\t\treturn !name.startsWith(\".\") && !name.equalsIgnoreCase(\"cvs\") && ((pathname.isDirectory() || length >= limit && path.endsWith(\".java\")));", "-\t\t\t}"]}], "num": 29143}