{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a68e93f1aa7d282ce9ce917a747d834", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c007aff9eadc9c819a93e9fb3d19c8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/SearchBasicEngine.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "signatureAfterChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "diff": ["-\t\t\t\tif (typeKind != IGenericType.CLASS) return false;", "+\t\t\t\tif (typeKind != IGenericType.CLASS_DECL) return false;", "-\t\t\t\tif (typeKind != IGenericType.INTERFACE) return false;", "+\t\t\t\tif (typeKind != IGenericType.INTERFACE_DECL) return false;", "-\t\t\t\tif (typeKind != IGenericType.ENUM) return false;", "+\t\t\t\tif (typeKind != IGenericType.ENUM_DECL) return false;", "-\t\t\t\tif (typeKind != IGenericType.ANNOTATION_TYPE) return false;", "+\t\t\t\tif (typeKind != IGenericType.ANNOTATION_TYPE_DECL) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f532e056c8c12e9cc5fe3be5109acf7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "signatureAfterChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "diff": ["-\t\t\treturn type.getKind() == IGenericType.CLASS;", "+\t\t\treturn type.getKind() == IGenericType.CLASS_DECL;", "-\t\t\treturn type.getKind() == IGenericType.INTERFACE;", "+\t\t\treturn type.getKind() == IGenericType.INTERFACE_DECL;", "-\t\t\treturn type.getKind() == IGenericType.ENUM;", "+\t\t\treturn type.getKind() == IGenericType.ENUM_DECL;", "-\t\t\treturn type.getKind() == IGenericType.ANNOTATION_TYPE;", "+\t\t\treturn type.getKind() == IGenericType.ANNOTATION_TYPE_DECL;"]}], "num": 29406}