{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "047947bb2c762fb984fa82d05ebbd7c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a453670c2f7ce9a17140686a4bdf44f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void testBug425493()", "signatureAfterChange": " public void testBug425493()", "diff": ["-\t\t\"2. ERROR in Test.java (at line 5)\\n\" + ", "+\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "+\t\t\"\taddAttribute(java.util.Objects.requireNonNull(attribute, \\\"\\\"),\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Test.Attribute<capture#1-of ?> to Test.Attribute<T>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in Test.java (at line 5)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50c8a7b0a1c906347bf579948c65263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "fdc0ea90e0bcaa4652c77c5db9dcb7e58b2dda67", "commitAfterChange": "ee44380e8d52a97dffe90bb61e33a1e5ccfb30e8", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " public void _test429387()", "signatureAfterChange": " public void test429387()", "diff": ["-public void _test429387() {", "+public void test429387() {", "-\t\t\"4. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tBiFunction<Stream<T>, ToIntFunction<BT>, IntStream> func = (Stream<T> t, ToIntFunction<BT, IS> m) -> t.flatmmapToInt(m);\\n\" + ", "+\t\t\"\t                                                                                                                     ^\\n\" + ", "+\t\t\"m cannot be resolved to a variable\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\"----------\\n\"", "-\t);", "+\t\t\"----------\\n\");"]}], "num": 40254}