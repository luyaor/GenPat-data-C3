{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0e7bbad17345b01af63a61fdf3b3de5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35d4f4fc74fa1b0eda6aedf592ac24eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a738cdbf5d0b40e078d2ec76d22bcb613279cff6", "commitAfterChange": "b41120aee6f499b9a774d71aea9151d984f245c5", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "signatureAfterChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "diff": ["-\t\tString version = CompilerOptions.VERSION_1_4;", "-\t\tString jclLibString = null;", "-\t\tString newJclLibString = null;", "-\t\tString newJclSrcString = null;", "-\t\tswitch (compliance.charAt(2)) {", "-\t\t\tcase '6':", "-\t\t\t\tversion = CompilerOptions.VERSION_1_6;", "-\t\t\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tjclLibString = \"JCL_LIB\";", "-\t\t\t\tnewJclLibString = \"JCL15_LIB\";", "-\t\t\t\tnewJclSrcString = \"JCL15_SRC\";", "-\t\t\t\tbreak;", "-\t\t\tcase '5':", "-\t\t\t\tversion = CompilerOptions.VERSION_1_5;", "-\t\t\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tjclLibString = \"JCL_LIB\";", "-\t\t\t\tnewJclLibString = \"JCL15_LIB\";", "-\t\t\t\tnewJclSrcString = \"JCL15_SRC\";", "-\t\t\t\tbreak;", "-\t\t\tcase '3':", "-\t\t\t\tversion = CompilerOptions.VERSION_1_3;", "-\t\t\tdefault:", "-\t\t\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tjclLibString = \"JCL15_LIB\";", "-\t\t\t\tnewJclLibString = \"JCL_LIB\";", "-\t\t\t\tnewJclSrcString = \"JCL_SRC\";", "-\t\t\t\tbreak;", "+\t\tString version = compliance; // assume that the values of CompilerOptions.VERSION_* are used", "+\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "+\t\t\treturn;", "+\t\t}", "+\t\tString jclLibString;", "+\t\tString newJclLibString;", "+\t\tString newJclSrcString;", "+\t\tif (compliance.charAt(2) > '4') {", "+\t\t\tjclLibString = \"JCL_LIB\";", "+\t\t\tnewJclLibString = \"JCL15_LIB\";", "+\t\t\tnewJclSrcString = \"JCL15_SRC\";", "+\t\t} else {", "+\t\t\tjclLibString = \"JCL15_LIB\";", "+\t\t\tnewJclLibString = \"JCL_LIB\";", "+\t\t\tnewJclSrcString = \"JCL_SRC\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56fb8f66a9d7a880fc41e7a41519d8cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a347aeb50884e3df023ac18ad807d42fd445aa56", "commitAfterChange": "a435d5911504d8f414ca9e9a9003b7f07711d2a4", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 227, "signatureBeforeChange": " \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance, boolean useFullJCL) throws JavaModelException, IOException", "signatureAfterChange": " \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance, boolean useFullJCL) throws JavaModelException, IOException", "diff": ["-\t\tString jclLibString;", "-\t\tif (compliance.charAt(2) > '7') {", "-\t\t\tjclLibString = \"JCL_LIB\";", "-\t\t\tnewJclLibString = \"JCL18_LIB\";", "-\t\t\tnewJclSrcString = \"JCL18_SRC\";", "-\t\t} else if (compliance.charAt(2) > '4') {", "-\t\t\tjclLibString = \"JCL_LIB\";", "-\t\t\tnewJclLibString = \"JCL15_LIB\";", "-\t\t\tnewJclSrcString = \"JCL15_SRC\";", "+\t\tif (useFullJCL) {", "+\t\t\tnewJclLibString = \"JCL18_FULL\";", "+\t\t\tnewJclSrcString = \"JCL18_SRC\"; // Use the same source", "-\t\t\tjclLibString = \"JCL15_LIB\";", "-\t\t\tnewJclLibString = \"JCL_LIB\";", "-\t\t\tnewJclSrcString = \"JCL_SRC\";", "+\t\t\tif (compliance.charAt(2) > '7') {", "+\t\t\t\tnewJclLibString = \"JCL18_LIB\";", "+\t\t\t\tnewJclSrcString = \"JCL18_SRC\";", "+\t\t\t} else if (compliance.charAt(2) > '4') {", "+\t\t\t\tnewJclLibString = \"JCL15_LIB\";", "+\t\t\t\tnewJclSrcString = \"JCL15_SRC\";", "+\t\t\t} else {", "+\t\t\t\tnewJclLibString = \"JCL_LIB\";", "+\t\t\t\tnewJclSrcString = \"JCL_SRC\";", "+\t\t\t}", "-\t\t", "-\t\t// replace JCL_LIB with JCL15_LIB, and JCL_SRC with JCL15_SRC", "-\t\t// At 1.8 compliance, replace JCL15_LIB with JCL18_LIB, JCL15_SRC with JCL18_SRC", "-\t\tIPath jclLib = new Path(jclLibString);", "-\t\tIPath jcl5Lib = new Path(\"JCL15_LIB\");", "-\t\tIPath jcl8Lib = new Path(\"JCL18_LIB\");", "-\t\tboolean compliance18Plus = compliance.charAt(2) > '7';", "+", "-\t\t\tif (useFullJCL) {", "-\t\t\t\tclasspath[i] = JavaCore.newVariableEntry(", "-\t\t\t\t\t\tnew Path(\"JCL18_FULL\"),", "-\t\t\t\t\t\tnew Path(newJclSrcString),", "-\t\t\t\t\t\tentry.getSourceAttachmentRootPath(),", "-\t\t\t\t\t\tentry.getAccessRules(),", "-\t\t\t\t\t\tnew IClasspathAttribute[0],", "-\t\t\t\t\t\tentry.isExported());", "-\t\t\t\tbreak;", "-\t\t\t} else if (path.equals(jclLib) || (compliance18Plus && path.equals(jcl5Lib)) || (!compliance18Plus && path.equals(jcl8Lib))) {", "+\t\t\t// Choose the new JCL path only if the current JCL path is different", "+\t\t\tif (isJCLPath(path) && !path.equals(newJclLibString)) {"]}], "num": 62560}