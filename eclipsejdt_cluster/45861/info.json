{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad75c3edcc651c7b94e3a826b816aaac", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb572fbb21680de5985165a3148ba23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "signatureAfterChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "diff": ["-\tif (problems == null || problems.length == 0) return;\r", "+\tif (resource == null || problems == null || problems.length == 0) return;\r", "-\t\t\t\tremoveProblemsFor(javaBuilder.currentProject); // make this the only problem for this project\r", "+\t\t\t\tJavaBuilder.removeProblemsFor(javaBuilder.currentProject); // make this the only problem for this project\r", "-\t\tIMarker marker = resource.createMarker(ProblemMarkerTag);\r", "+\t\tIMarker marker = resource.createMarker(JavaBuilder.ProblemMarkerTag);\r", "-\t\t\t\tnew Integer(problem.isError() ? IMarker.SEVERITY_ERROR : IMarker.SEVERITY_WARNING), \r", "+\t\t\t\tnew Integer(problem.isError() ? IMarker.SEVERITY_ERROR : IMarker.SEVERITY_WARNING),\r", "-// Do we need to do this?\r", "-//@PM WE SHOULD HAVE IT COME FROM THE PROBLEM ITSELF INSTEAD OF POPULATING THE JAVA MODEL\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9776cd1ebfa5cb8ff95ea25353c0192a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "abcc685ce362f3df53bbb89201f14fa3daf630fa", "commitAfterChange": "1784048e951cac8e5c6590cc5827817757e6384e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void resolve(MethodScope methScope)", "signatureAfterChange": " \tpublic void resolve(MethodScope methScope)", "diff": ["-\t\t\t\tif ((methDecl.isConstructor() || overriding) && !superRef) {", "+\t\t\t\tif (methDecl != null && (methDecl.isConstructor() || overriding) && !superRef) {", "-\t\tboolean reportMissing = methDecl == null || !(superRef || (methDecl.binding.declaringClass != null && methDecl.binding.declaringClass.isLocalType()));", "+\t\tboolean reportMissing = methDecl == null || !((overriding && this.inherited) || superRef || (methDecl.binding.declaringClass != null && methDecl.binding.declaringClass.isLocalType()));"]}], "num": 45861}