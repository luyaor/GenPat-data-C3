{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42064e18256afe7f55683e226ef6c0a5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "056641ce05c1dbf3c030c2b597ea2739", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 223, "signatureBeforeChange": " public void fieldTypeProblem(SourceTypeBinding type, FieldDeclaration fieldDecl, TypeBinding expectedType)", "signatureAfterChange": " public void superinterfacesCollide(ReferenceBinding type, TypeDeclaration typeDecl, ReferenceBinding superType, ReferenceBinding inheritedSuperType)", "diff": ["-public void fieldTypeProblem(SourceTypeBinding type, FieldDeclaration fieldDecl, TypeBinding expectedType) {", "-\tint problemId = expectedType.problemId();", "-\tint id;", "-\tswitch (problemId) {", "-\t\tcase NotFound : // 1", "-\t\t\tid = IProblem.FieldTypeNotFound;", "-\t\t\tbreak;", "-\t\tcase NotVisible : // 2", "-\t\t\tid = IProblem.FieldTypeNotVisible;", "-\t\t\tbreak;", "-\t\tcase Ambiguous : // 3", "-\t\t\tid = IProblem.FieldTypeAmbiguous;", "-\t\t\tbreak;", "-\t\tcase InternalNameProvided : // 4", "-\t\t\tid = IProblem.FieldTypeInternalNameProvided;", "-\t\t\tbreak;", "-\t\tcase InheritedNameHidesEnclosingName : // 5", "-\t\t\tid = IProblem.FieldTypeInheritedNameHidesEnclosingName;", "-\t\t\tbreak;", "-\t\tcase NoError : // 0", "-\t\tdefault :", "-\t\t\tneedImplementation(); // want to fail to see why we were here...", "-\t\t\treturn;", "-\t}", "-\tthis.handle(", "-\t\tid,", "-\t\tnew String[] {new String(fieldDecl.name), new String(type.sourceName()), new String(expectedType.readableName())},", "-\t\tnew String[] {new String(fieldDecl.name), new String(type.sourceName()), new String(expectedType.shortReadableName())},", "-\t\tfieldDecl.type.sourceStart,", "-\t\tfieldDecl.type.sourceEnd);", "-}", "+public void superinterfacesCollide(ReferenceBinding type, TypeDeclaration typeDecl, ReferenceBinding superType, ReferenceBinding inheritedSuperType) {", "+\tthis.handle(", "+\t\tIProblem.SuperInterfacesCollide,", "+\t\tnew String[] {new String(superType.readableName()), new String(inheritedSuperType.readableName()), new String(type.sourceName())},", "+\t\tnew String[] {new String(superType.shortReadableName()), new String(inheritedSuperType.shortReadableName()), new String(type.sourceName())},", "+\t\ttypeDecl.sourceStart,", "+\t\ttypeDecl.sourceEnd);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e7e9085dd3c85802ad1d351e370f877", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 233, "signatureBeforeChange": " public void exceptionTypeProblem(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, TypeReference exceptionType, TypeBinding expectedType)", "signatureAfterChange": " public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location)", "diff": ["-public void exceptionTypeProblem(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, TypeReference exceptionType, TypeBinding expectedType) {", "-\tint problemId = expectedType.problemId();", "-\tint id;", "-\tswitch (problemId) {", "-\t\tcase NotFound : // 1", "-\t\t\tid = IProblem.ExceptionTypeNotFound;", "-\t\t\tbreak;", "-\t\tcase NotVisible : // 2", "-\t\t\tid = IProblem.ExceptionTypeNotVisible;", "-\t\t\tbreak;", "-\t\tcase Ambiguous : // 3", "-\t\t\tid = IProblem.ExceptionTypeAmbiguous;", "-\t\t\tbreak;", "-\t\tcase InternalNameProvided : // 4", "-\t\t\tid = IProblem.ExceptionTypeInternalNameProvided;", "-\t\t\tbreak;", "-\t\tcase InheritedNameHidesEnclosingName : // 5", "-\t\t\tid = IProblem.ExceptionTypeInheritedNameHidesEnclosingName;", "-\t\t\tbreak;", "-\t\tcase NoError : // 0", "-\t\tdefault :", "-\t\t\tneedImplementation(); // want to fail to see why we were here...", "-\t\t\treturn;", "-\t}", "-\tthis.handle(", "-\t\tid,", "-\t\tnew String[] {new String(methodDecl.selector), new String(expectedType.readableName())},", "-\t\tnew String[] {new String(methodDecl.selector), new String(expectedType.shortReadableName())},", "-\t\texceptionType.sourceStart,", "-\t\texceptionType.sourceEnd);", "-}", "+public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location) {", "+\t\tnew String[] {new String(actualType.readableName()), new String(expectedType.readableName())},", "+\t\tnew String[] {new String(actualType.shortReadableName()), new String(expectedType.shortReadableName())},", "+\t\tlocation.sourceStart,", "+\t\tlocation.sourceEnd);"]}], "num": 6335}