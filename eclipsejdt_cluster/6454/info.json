{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b97305439e16f3d79294213ea75f0518", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fdbaa7b8b5a79f91133bbdb2016e5d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.variableName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.variableName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.variableName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.variableName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.variableName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4083fc774fec6f27fb36af8e81b6cedd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic Expression getRightOperand()", "signatureAfterChange": "  \tpublic Expression getRightOperand()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.rightOperand= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.rightOperand  == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.rightOperand= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65312db5465c53918023caafde42ab4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.variableName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.variableName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.variableName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.variableName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.variableName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b8c9e015395543a4b7ff776ff538b81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PostfixExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Expression getOperand()", "signatureAfterChange": "  \tpublic Expression getOperand()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.operand= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.operand, OPERAND_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.operand == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.operand= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.operand, OPERAND_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b4f378665ce7e15df4b8150e22771b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldAccess.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.fieldName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.fieldName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.fieldName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.fieldName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.fieldName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7611794799fe2cc01438bfeb9ad9fc50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleMemberAnnotation.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Expression getValue()", "signatureAfterChange": "  \tpublic Expression getValue()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.value = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.value, VALUE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.value == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.value = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.value, VALUE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773218f4189e467c6b746637a9fa7eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Type getRightOperand()", "signatureAfterChange": "  \tpublic Type getRightOperand()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.rightOperand= new SimpleType(this.ast);", "-\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.rightOperand == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.rightOperand= new SimpleType(this.ast);", "+\t\t\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80706baa3c9b999d8b8aa707b7f5ac6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getLeftOperand()", "signatureAfterChange": "  \tpublic Expression getLeftOperand()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.leftOperand= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.leftOperand, LEFT_OPERAND_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.leftOperand == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.leftOperand= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.leftOperand, LEFT_OPERAND_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e4f3e76a245d49fc73b7f11395b115", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePair.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getValue()", "signatureAfterChange": "  \tpublic Expression getValue()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.value= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.value, VALUE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.value == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.value= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.value, VALUE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a78cc3f85089a1cf178b819b01386ea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.qualifier = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.qualifier, QUALIFIER_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.qualifier == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.qualifier = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.qualifier, QUALIFIER_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe0c301e08ded886ad4f46ffbb80f11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PrefixExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Expression getOperand()", "signatureAfterChange": "  \tpublic Expression getOperand()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.operand= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.operand, OPERAND_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.operand == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.operand= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.operand, OPERAND_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9735ff4532d647a41642743846c01b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedType.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getQualifier()", "signatureAfterChange": "  \tpublic Type getQualifier()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.qualifier = new SimpleType(this.ast);", "-\t\t\tpostLazyInit(this.qualifier, QUALIFIER_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.qualifier == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.qualifier = new SimpleType(this.ast);", "+\t\t\t\t\tpostLazyInit(this.qualifier, QUALIFIER_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf4733613951553be8509dae54b925d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperFieldAccess.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.fieldName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.fieldName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.fieldName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.fieldName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.fieldName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c02287d2f41e183c0ee48c75b6092621", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationTypeMemberDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.memberName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.memberName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.memberName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.memberName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.memberName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d37d7758c6e885a06d497bbcbd69fb10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberRef.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.memberName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.memberName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.memberName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.memberName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.memberName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7da0e2fbb8dfe58407096bab5ec8039", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic Expression getLeftOperand()", "signatureAfterChange": "  \tpublic Expression getLeftOperand()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.leftOperand= new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.leftOperand, LEFT_OPERAND_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.leftOperand == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.leftOperand= new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.leftOperand, LEFT_OPERAND_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 6454}