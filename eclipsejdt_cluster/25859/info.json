{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0287be93a5797b3ac56e52d7919c26ec", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ba509c16697be089d80af039cb2906c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "8873795d3456fd4eb978570ebf0c2587e004407c", "commitAfterChange": "811f4b05d58ca33710b13af0352652814cf9e788", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate void computeTypeRange() throws JavaModelException", "signatureAfterChange": " \tprivate void computeTypeRange() throws JavaModelException", "diff": ["-\t\tfinal int indexOfStartOfClassData = this.content.indexOf(JavadocConstants.START_OF_CLASS_DATA);", "+\t\tfinal int indexOfStartOfClassData = CharOperation.indexOf(JavadocConstants.START_OF_CLASS_DATA, this.content, false);", "-\t\tint indexOfNextSeparator = this.content.indexOf(JavadocConstants.SEPARATOR_START, indexOfStartOfClassData);", "+\t\tint indexOfNextSeparator = CharOperation.indexOf(JavadocConstants.SEPARATOR_START, this.content, false, indexOfStartOfClassData);", "-\t\tint indexOfNextSummary = this.content.indexOf(JavadocConstants.NESTED_CLASS_SUMMARY, indexOfNextSeparator);", "+\t\tint indexOfNextSummary = CharOperation.indexOf(JavadocConstants.NESTED_CLASS_SUMMARY, this.content, false, indexOfNextSeparator);", "-\t\t\tindexOfNextSummary = this.content.indexOf(JavadocConstants.ENUM_CONSTANT_SUMMARY, indexOfNextSeparator);", "+\t\t\tindexOfNextSummary = CharOperation.indexOf(JavadocConstants.ENUM_CONSTANT_SUMMARY, this.content, false, indexOfNextSeparator);", "-\t\t\tindexOfNextSummary = this.content.indexOf(JavadocConstants.ANNOTATION_TYPE_REQUIRED_MEMBER_SUMMARY, indexOfNextSeparator);", "+\t\t\tindexOfNextSummary = CharOperation.indexOf(JavadocConstants.ANNOTATION_TYPE_REQUIRED_MEMBER_SUMMARY, this.content, false, indexOfNextSeparator);", "-\t\t\t\tindexOfNextSummary = this.content.indexOf(JavadocConstants.ANNOTATION_TYPE_OPTIONAL_MEMBER_SUMMARY, indexOfNextSeparator);", "+\t\t\t\tindexOfNextSummary = CharOperation.indexOf(JavadocConstants.ANNOTATION_TYPE_OPTIONAL_MEMBER_SUMMARY, this.content, false, indexOfNextSeparator);", "-\t\t\tindexOfNextSummary = this.content.indexOf(JavadocConstants.FIELD_SUMMARY, indexOfNextSeparator);", "+\t\t\tindexOfNextSummary = CharOperation.indexOf(JavadocConstants.FIELD_SUMMARY, this.content, false, indexOfNextSeparator);", "-\t\t\tindexOfNextSummary = this.content.indexOf(JavadocConstants.CONSTRUCTOR_SUMMARY, indexOfNextSeparator);", "+\t\t\tindexOfNextSummary = CharOperation.indexOf(JavadocConstants.CONSTRUCTOR_SUMMARY, this.content, false, indexOfNextSeparator);", "-\t\t\tindexOfNextSummary = this.content.indexOf(JavadocConstants.METHOD_SUMMARY, indexOfNextSeparator);", "+\t\t\tindexOfNextSummary = CharOperation.indexOf(JavadocConstants.METHOD_SUMMARY, this.content, false, indexOfNextSeparator);", "-\t\t\tindexOfNextSummary = this.content.indexOf(JavadocConstants.END_OF_CLASS_DATA, indexOfNextSeparator);", "+\t\t\tindexOfNextSummary = CharOperation.indexOf(JavadocConstants.END_OF_CLASS_DATA, this.content, false, indexOfNextSeparator);", "-\t\tint indexOfFirstParagraph = this.content.indexOf(\"<P>\", start); //$NON-NLS-1$", "-\t\tif (indexOfFirstParagraph == -1) {", "-\t\t\tindexOfFirstParagraph = this.content.indexOf(\"<p>\", start); //$NON-NLS-1$", "-\t\t}", "+\t\tint indexOfFirstParagraph = CharOperation.indexOf(\"<P>\".toCharArray(), this.content, false, start); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29992de4d7f9deb977b862b1663be8a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "046ddcab1e7f5f009d93a48bed06179c8997471f", "commitAfterChange": "82b30bfac03ac2ea34c10939fc4a0ad2f786e3fe", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 240, "signatureBeforeChange": " protected void consumeRule(int act)", "signatureAfterChange": " protected void consumeRule(int act)", "diff": ["-\t\t    consumeExplicitConstructorInvocation(0,ExplicitConstructorCall.This);  ", "+\t\t    consumeExplicitConstructorInvocation(0, THIS);  ", "-\t\t    consumeExplicitConstructorInvocationWithTypeArguments(0,ExplicitConstructorCall.This);  ", "+\t\t    consumeExplicitConstructorInvocationWithTypeArguments(0,THIS);  ", "-\t\t    consumeExplicitConstructorInvocation(0,ExplicitConstructorCall.Super);  ", "+\t\t    consumeExplicitConstructorInvocation(0,SUPER);  ", "-\t\t    consumeExplicitConstructorInvocationWithTypeArguments(0,ExplicitConstructorCall.Super);  ", "+\t\t    consumeExplicitConstructorInvocationWithTypeArguments(0,SUPER);  ", "-\t\t    consumeExplicitConstructorInvocation(1, ExplicitConstructorCall.Super);  ", "+\t\t    consumeExplicitConstructorInvocation(1, SUPER);  ", "-\t\t    consumeExplicitConstructorInvocationWithTypeArguments(1, ExplicitConstructorCall.Super);  ", "+\t\t    consumeExplicitConstructorInvocationWithTypeArguments(1, SUPER);  ", "-\t\t    consumeExplicitConstructorInvocation(2, ExplicitConstructorCall.Super);  ", "+\t\t    consumeExplicitConstructorInvocation(2, SUPER);  ", "-\t\t    consumeExplicitConstructorInvocationWithTypeArguments(2, ExplicitConstructorCall.Super);  ", "+\t\t    consumeExplicitConstructorInvocationWithTypeArguments(2, SUPER);  ", "-\t\t    consumeExplicitConstructorInvocation(1, ExplicitConstructorCall.This);  ", "+\t\t    consumeExplicitConstructorInvocation(1, THIS);  ", "-\t\t    consumeExplicitConstructorInvocationWithTypeArguments(1, ExplicitConstructorCall.This);  ", "+\t\t    consumeExplicitConstructorInvocationWithTypeArguments(1, THIS);  ", "-\t\t    consumeExplicitConstructorInvocation(2, ExplicitConstructorCall.This);  ", "+\t\t    consumeExplicitConstructorInvocation(2, THIS);  ", "-\t\t    consumeExplicitConstructorInvocationWithTypeArguments(2, ExplicitConstructorCall.This);  ", "+\t\t    consumeExplicitConstructorInvocationWithTypeArguments(2, THIS);  ", "+    case 497 : if (DEBUG) { System.out.println(\"EnumDeclarations ::= SEMICOLON ClassBodyDeclarationsopt\"); }  //$NON-NLS-1$", "+\t\t    consumeEnumDeclarations();  ", "+\t\t\tbreak;", "+ "]}], "num": 25859}