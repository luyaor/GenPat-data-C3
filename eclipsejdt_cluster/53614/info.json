{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39a82b011243f7600e7ba15a9aa4882d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34ec6547f8f75bba7644d7c00f33c73b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e31e89499c545f3404d7787f4d333516631375ec", "commitAfterChange": "0eef8a719c726a9948e73db62c7f81adbce0f319", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  private void addDefaultAbstractMethods()", "signatureAfterChange": "  private void addDefaultAbstractMethods()", "diff": ["+\t", "+\tif (this != this.prototype) throw new IllegalStateException();", "+\t", "-\t\t\t\tSystem.arraycopy(this.methods, 0, this.methods = new MethodBinding[length + defaultAbstractsCount], 0, length);", "+\t\t\t\tSystem.arraycopy(this.methods, 0, setMethods(new MethodBinding[length + defaultAbstractsCount]), 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95ce28fbd02521811ea2e87075647a62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "d3432881419f057ba041557b162e4f05f5019457", "commitAfterChange": "c978cd9a4b8a047123bdee75ac1f721797bdf05a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  private static void setOutputDir(String dir)", "signatureAfterChange": "  private static void setOutputDir(String dir)", "diff": ["-\tif (NO_COMMENTS || BRACES != null || !JOIN_LINES) {", "+\tif (NO_COMMENTS || BRACES != null || JOIN_LINES != null) {", "-\t\tif (!JOIN_LINES) {", "-\t\t\tOUTPUT_DIR = new File(OUTPUT_DIR, \"never_join_lines\");", "+\t\tif (JOIN_LINES != null) {", "+\t\t\tOUTPUT_DIR = new File(new File(OUTPUT_DIR, \"join_lines\"), JOIN_LINES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31493cfda11f6b54c7fc85e81ad0969", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "3b2052c623130c252652dbc4ea1f3e9fec2cb90c", "commitAfterChange": "e2a6d43d6cfc7ae0c6dc6dfaa282461be00cd7e3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-\t\tfor (int i = 0, length = initialTypeNames.length; i < length; i++)\r", "-\t\t\tif (qualifiedTypeName.equals(initialTypeNames[i]))\r", "+\t\tfor (int i = 0, length = initialTypeNames.length; i < length; i++) {\r", "+\t\t\tif (qualifiedTypeName.equals(initialTypeNames[i])) {\r", "+\t\t\t\tif (isIncrementalBuild)\r", "+\t\t\t\t\t// catch the case that a type inside a source file has been renamed but other class files are looking for it\r", "+\t\t\t\t\tthrow new AbortCompilation(true, new AbortIncrementalBuildException(qualifiedTypeName));\r", "+\t\t\t}\r", "+\t\t}\r"]}], "num": 53614}