{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d6673f89a20070fedf46871bbf9b3c3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd22ac7936b5be56055182e312f71cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 904, "methodNumberAfterChange": 904, "signatureBeforeChange": " public void test0883()", "signatureAfterChange": " public void test0883()", "diff": ["+// FAIL ERRMSG", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\"", "+\t\t:", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "+\t\t\"\tString s = (String)foo(listu);\\n\" +", "+\t\t\"\t                   ^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<U>). The inferred type List<U> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 11)\\n\" +", "+\t\t\"\tString s = (String)foo(listv);\\n\" +", "+\t\t\"\t                   ^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<V>). The inferred type List<V> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" +", "+\t\t\"----------\\n\" ));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9090234543375024b9c37b1a002bc489", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 763, "methodNumberAfterChange": 763, "signatureBeforeChange": " public void test0742()", "signatureAfterChange": " public void test0742()", "diff": ["+// FAIL ERRMSG", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\"", "+\t\t: // ----- JDK1_8 + -----: #4 & #5 infer as argument type: SuperType.", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in X.java (at line 24)\\n\" +", "+\t\t\"\tList<SubType> lsub = makeSingletonList(new SubType()); // #3 - ERROR\\n\" +", "+\t\t\"\t                     ^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method makeSingletonList(T) of type X is not applicable for the arguments (X.SubType). The inferred type X.SubType is not a valid substitute for the bounded parameter <T extends X.SelfType<T>>\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 28)\\n\" +", "+\t\t\"\tlsub = makeSingletonList2(new SubType()); // #7 - ERROR\\n\" +", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method makeSingletonList2(S) of type X is not applicable for the arguments (X.SubType). The inferred type X.SubType is not a valid substitute for the bounded parameter <T extends X.SelfType<T>>\\n\" +", "+\t\t\"----------\\n\"));"]}], "num": 30066}