{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfc313d28b60859afc92f4dced1f3f23", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c20da4a252224b4a51a1c5b8d21bc5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/IncrementalTests.java", "commitBeforeChange": "928d90c3d930147ffd37781c56673795a6f31eb3", "commitAfterChange": "c7679cd484cc416e79c8e4fd2e1a89f930508174", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void testRenameMainType() throws JavaModelException", "signatureAfterChange": " \tpublic void testRenameMainType() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(pathToA, new Problem(\"_A\", \"The public type _A must be defined in its own file\", pathToA, 25, 27, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(pathToB, new Problem(\"B\", \"A cannot be resolved to a type\", pathToB, 35, 36, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(pathToC, new Problem(\"C\", \"The hierarchy of the type C is inconsistent\", pathToC, 25, 26, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(pathToA, new Problem(\"_A\", \"The public type _A must be defined in its own file\", pathToA, 25, 27, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(pathToB, new Problem(\"B\", \"A cannot be resolved to a type\", pathToB, 35, 36, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(pathToC, new Problem(\"C\", \"The hierarchy of the type C is inconsistent\", pathToC, 25, 26, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb69ab111e19c3fb36c234692e5c4b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/IncrementalTests.java", "commitBeforeChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "commitAfterChange": "b9f6281b56af6781d8bb8cc727077eb3dccaebba", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void testRenameMainType() throws JavaModelException", "signatureAfterChange": " \tpublic void testRenameMainType() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(pathToA, new Problem(\"_A\", \"The public type _A must be defined in its own file\", pathToA)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(pathToB, new Problem(\"B\", \"A cannot be resolved to a type\", pathToB)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(pathToC, new Problem(\"C\", \"The hierarchy of the type C is inconsistent\", pathToC)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(pathToA, new Problem(\"_A\", \"The public type _A must be defined in its own file\", pathToA, 25, 27, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(pathToB, new Problem(\"B\", \"A cannot be resolved to a type\", pathToB, 35, 36, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(pathToC, new Problem(\"C\", \"The hierarchy of the type C is inconsistent\", pathToC, 25, 26, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 2886}