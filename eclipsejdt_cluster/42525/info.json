{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43907ce9132bcfb8bdd08f6da2ae44f6", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "264939ca4fc93b116ffd41d9c3c9c61b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "signatureAfterChange": "  void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "diff": ["-// \t\tFIXME(stephan): the following code could be used as a stop-gap measure to hook type annotation tagBits into our existing analysis:", "-//\t\tfieldBinding.tagBits |= (fieldBinding.type.tagBits & TagBits.AnnotationNullMASK);", "+\t\tTypeBinding fieldType = fieldBinding.type;", "+\t\tif (fieldType != null", "+\t\t\t\t&& !fieldType.isBaseType()", "+\t\t\t\t&& (fieldType.tagBits & TagBits.AnnotationNullMASK) == 0", "+\t\t\t\t&& (this.tagBits & TagBits.AnnotationNonNullByDefault) != 0) {", "+\t\t\tfieldBinding.type = this.environment.createAnnotatedType(fieldType, TagBits.AnnotationNonNull);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e346bdaff1b234ce4a9963154688b25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "6ca7655344cc04fd2732983b3bef96aa0f451863", "commitAfterChange": "43351a2f71910029138257aaee18da33f0b724b2", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "signatureAfterChange": "  private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "diff": ["+\tif (this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\tTypeBinding fieldType = fieldBinding.type;", "+\t\tif (fieldType != null", "+\t\t\t\t&& !fieldType.isBaseType()", "+\t\t\t\t&& (fieldType.tagBits & TagBits.AnnotationNullMASK) == 0", "+\t\t\t\t&& (this.tagBits & TagBits.AnnotationNonNullByDefault) != 0) {", "+\t\t\tfieldBinding.type = this.environment.createAnnotatedType(fieldType, new AnnotationBinding[]{this.environment.getNonNullAnnotation()});", "+\t\t}", "+\t\treturn; // not using fieldBinding.tagBits when we have type annotations.", "+\t}", "+"]}], "num": 42525}