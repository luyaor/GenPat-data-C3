{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8ee0dc7e1c2e355d3d543064b7376c4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d093a3fd97530f89bc720b0007be754", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic boolean visit(NumberLiteral node)", "signatureAfterChange": " \tpublic boolean visit(MethodRef node)", "diff": ["+\t */", "+\tpublic boolean visit(MethodRef node) {", "+\t\tif (node.getQualifier() != null) {", "+\t\t\tnode.getQualifier().accept(this);", "+\t\t}", "+\t\tthis.buffer.append(\"#\");//$NON-NLS-1$", "+\t\tnode.getName().accept(this);", "+\t\tthis.buffer.append(\"(\");//$NON-NLS-1$", "+\t\tfor (Iterator it = node.parameters().iterator(); it.hasNext(); ) {", "+\t\t\tMethodRefParameter e = (MethodRefParameter) it.next();", "+\t\t\te.accept(this);", "+\t\t\tif (it.hasNext()) {", "+\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tthis.buffer.append(\")\");//$NON-NLS-1$", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b1c4872864eddc5e70e1fb7f481d67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic boolean visit(SimpleName node)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation node)", "diff": ["+\t */", "+\tpublic boolean visit(NormalAnnotation node) {", "+\t\tthis.buffer.append(\"@\");//$NON-NLS-1$", "+\t\tnode.getTypeName().accept(this);", "+\t\tthis.buffer.append(\"(\");//$NON-NLS-1$", "+\t\tfor (Iterator it = node.values().iterator(); it.hasNext(); ) {", "+\t\t\tMemberValuePair p = (MemberValuePair) it.next();", "+\t\t\tp.getName().accept(this);", "+\t\t\tthis.buffer.append(\"=\");//$NON-NLS-1$", "+\t\t\tp.getValue().accept(this);", "+\t\t\tif (it.hasNext()) {", "+\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tthis.buffer.append(\")\");//$NON-NLS-1$", "+\t\treturn false;", "+\t}"]}], "num": 258}