{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5b2509656aab9bfceb3f4ea5434b18f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43191f6c6050f4a9ad6c24b118187c1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest.java", "commitBeforeChange": "9ea0d26717077cc31f78561d1f110949d5e1c944", "commitAfterChange": "31225f931c10340b8616c3f4ecc6725f368df84c", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " public void test426534()", "signatureAfterChange": " public void test426534()", "diff": ["-\tif (this.complianceLevel >= ClassFileConstants.JDK1_8)", "-\t\treturn;", "-\t\trunNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"p/B.java\",", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"class A {\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"public class B extends A {\\n\" +", "-\t\t\t\t\"    public <T extends A> void foo(T ... o) { }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"import p.*;\\n\" +", "-\t\t\t\t\"public class X  {\\n\" +", "-\t\t\t\t\"    public static void main(String argv[]) {\\n\" +", "-\t\t\t\t\"        new B().foo(null, null);\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"}\\n\"", "-\t\t\t},", "-\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ? ", "+\trunNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"p/B.java\",", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"class A {\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"public class B extends A {\\n\" +", "+\t\t\t\"    public <T extends A> void foo(T ... o) { }\\n\" +", "+\t\t\t\"}\\n\",", "+\t\t\t", "+\t\t\t\"X.java\",", "+\t\t\t\"import p.*;\\n\" +", "+\t\t\t\"public class X  {\\n\" +", "+\t\t\t\"    public static void main(String argv[]) {\\n\" +", "+\t\t\t\"        new B().foo(null, null);\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ? ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tnew B().foo(null, null);\\n\" + ", "+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method foo(T...) of type B is not applicable as the formal varargs element type T is not accessible here\\n\" + ", "+\t\t\t\t\"----------\\n\" : ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. WARNING in p\\\\B.java (at line 5)\\n\" + ", "+\t\t\t\t\t\"\tpublic <T extends A> void foo(T ... o) { }\\n\" + ", "+\t\t\t\t\t\"\t                                    ^\\n\" + ", "+\t\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter o\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"----------\\n\" : ", "-\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\"1. WARNING in p\\\\B.java (at line 5)\\n\" + ", "-\t\t\t\t\t\t\"\tpublic <T extends A> void foo(T ... o) { }\\n\" + ", "-\t\t\t\t\t\t\"\t                                    ^\\n\" + ", "-\t\t\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter o\\n\" + ", "-\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\t\t\"\tnew B().foo(null, null);\\n\" + ", "-\t\t\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\t\t\"The method foo(T...) of type B is not applicable as the formal varargs element type T is not accessible here\\n\" + ", "-\t\t\t\t\t\t\"----------\\n\");", "+\t\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef0de9d7326cfd42fd58f0df01f431fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "258488aa3b2262f0e872853fc9eb6924859897e3", "commitAfterChange": "f1b24eaca7583818fb45648b70a2b62fb1ff278d", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " public void _test170()", "signatureAfterChange": " public void test170()", "diff": ["-public void _test170() {", "-\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\", // =================", "-\t\t\t\t\"public enum X {\\n\" + ", "-\t\t\t\t\"\tMonday(\\\"Mon\\\", X.OFFSET + 0),\\n\" + ", "-\t\t\t\t\"\tTuesday(\\\"Tue\\\", X.OFFSET + 1);\\n\" + ", "-\t\t\t\t\"\tpublic static final int OFFSET = 0;\\n\" + ", "-\t\t\t\t\"\tX(String abbr, int index) {}\\n\" + ", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"SUCCESS\");", "+public void test170() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\", // =================", "+\t\t\t\"enum Days {\\n\" + ", "+\t\t\t\"    Monday(\\\"Mon\\\", Days.OFFSET + 0),    // should not complain\\n\" + ", "+\t\t\t\"    Tuesday(\\\"Tue\\\", Days.Wednesday.hashCode()),   // should complain since enum constant\\n\" + ", "+\t\t\t\"    Wednesday(\\\"Wed\\\", OFFSET + 2);   // should complain since unqualified\\n\" + ", "+\t\t\t\"    public static final int OFFSET = 0;  // cannot move this above, else more errors\\n\" + ", "+\t\t\t\"    Days(String abbr, int index) {\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class X {\\n\" + ", "+\t\t\t\"    public static final int FOO = X.OFFSET + 0;\\n\" + ", "+\t\t\t\"    public static final int BAR = OFFSET + 1;\\n\" + ", "+\t\t\t\"    public static final int OFFSET = 0;  // cannot move this above, else more errors\\n\" + ", "+\t\t\t\"}\\n\", // =================", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tTuesday(\\\"Tue\\\", Days.Wednesday.hashCode()),   // should complain since enum constant\\n\" + ", "+\t\t\"\t                    ^^^^^^^^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tWednesday(\\\"Wed\\\", OFFSET + 2);   // should complain since unqualified\\n\" + ", "+\t\t\"\t                 ^^^^^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"\tpublic static final int BAR = OFFSET + 1;\\n\" + ", "+\t\t\"\t                              ^^^^^^\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "+\t\t\"----------\\n\");"]}], "num": 8968}