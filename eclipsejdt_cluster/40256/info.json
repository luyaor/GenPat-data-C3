{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "662ddca560cd0f80ee172052094f772b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b5e39d676657c9e1ee64582b6c8aa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "diff": ["+\t\t\t\tif (argTypeBinding instanceof CaptureBinding) {", "+\t\t\t\t\tWildcardBinding capturedWildcard = ((CaptureBinding)argTypeBinding).wildcard;", "+\t\t\t\t\tif (capturedWildcard != null) argTypeBinding = capturedWildcard;", "+\t\t\t\t}", "-\t\t\t\t\tswitch (wildcardBinding.kind) {", "+\t\t\t\t\tswitch (wildcardBinding.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac6e5b76462f1d61f42617b8a305408", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack)", "diff": ["-\t\t\t\tswitch (wildU.kind) {", "+\t\t\t\tswitch (wildU.boundKind) {", "-\t\t\t\t\t\tswitch(wildV.kind) {", "+\t\t\t\t\t\tswitch(wildV.boundKind) {", "-\t\t\t\t\t\tif (wildU.kind == Wildcard.SUPER) {", "+\t\t\t\t\t\tif (wildU.boundKind == Wildcard.SUPER) {", "-\t\t\t\tswitch (wildV.kind) {", "+\t\t\t\tswitch (wildV.boundKind) {", "-\t\t\tswitch (wildU.kind) {", "+\t\t\tswitch (wildU.boundKind) {"]}], "num": 40256}