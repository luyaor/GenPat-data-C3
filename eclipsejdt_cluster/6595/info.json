{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52386316c58efd34180e51db08b13c4f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3289bd8b9f52127562c53616f87cb737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e67c77fc5e097eac99c8909bb016eff7011eb0ce", "commitAfterChange": "5d677f26e6a9dfca4bbd2cd8a965c43c4f46ed94", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " private int indexOf(String relativePath, String containerPath)", "signatureAfterChange": " private int indexOf(String containerPath, String relativePath)", "diff": ["-private int indexOf(String relativePath, String containerPath) {", "-\tif (containerPath != null) {", "-\t\t// if container path is known, use the hash to get faster comparison", "-\t\tint index = (containerPath.hashCode()& 0x7FFFFFFF) % this.paths.length;", "-\t\tString currentContainerPath;", "-\t\twhile ((currentContainerPath = this.containerPaths[index]) != null) {", "-\t\t\tif (currentContainerPath.equals(containerPath)) {", "-\t\t\t\tString scopePath = this.paths[index];", "-\t\t\t\tif (encloses(scopePath, relativePath, index))", "-\t\t\t\t\treturn index;", "-\t\t\t}", "-\t\t\tindex = (index + 1) % this.paths.length;", "-\t\t}", "-\t\treturn -1;", "-\t}", "-\t", "-\tfor (int i = 0, length = this.paths.length; i < length; i++) {", "-\t\tString scopePath = this.paths[i];", "-\t\tif (scopePath == null) continue;", "-\t\tif (encloses(this.containerPaths[i] + '/' + scopePath, relativePath, i))", "+ */", "+private int indexOf(String containerPath, String relativePath) {", "+\t// use the hash to get faster comparison", "+\tint index = (containerPath.hashCode()& 0x7FFFFFFF) % this.containerPaths.length;", "+\tString currentContainerPath;", "+\twhile ((currentContainerPath = this.containerPaths[index]) != null) {", "+\t\tif (currentContainerPath.equals(containerPath)) {", "+\t\t\tString currentRelativePath = this.relativePaths[index];", "+\t\t\tif (encloses(currentRelativePath, relativePath, index))", "+\t\t\t\treturn index;", "+\t\tindex = (index + 1) % this.relativePaths.length;", "+\t}", "+\treturn -1;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7796db64ebaaf5d5651393e8d062bab8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e67c77fc5e097eac99c8909bb016eff7011eb0ce", "commitAfterChange": "5d677f26e6a9dfca4bbd2cd8a965c43c4f46ed94", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private int indexOf(String relativePath, String containerPath)", "signatureAfterChange": " private int indexOf(String fullPath)", "diff": ["-private int indexOf(String relativePath, String containerPath) {", "-\tif (containerPath != null) {", "-\t\t// if container path is known, use the hash to get faster comparison", "-\t\tint index = (containerPath.hashCode()& 0x7FFFFFFF) % this.paths.length;", "-\t\tString currentContainerPath;", "-\t\twhile ((currentContainerPath = this.containerPaths[index]) != null) {", "-\t\t\tif (currentContainerPath.equals(containerPath)) {", "-\t\t\t\tString scopePath = this.paths[index];", "-\t\t\t\tif (encloses(scopePath, relativePath, index))", "-\t\t\t\t\treturn index;", "-\t\t\t}", "-\t\t\tindex = (index + 1) % this.paths.length;", "-\t\t}", "-\t\treturn -1;", "-\t}", "-\t", "+private int indexOf(String fullPath) {", "+\t// cannot guess the index of the container path", "-\tfor (int i = 0, length = this.paths.length; i < length; i++) {", "-\t\tString scopePath = this.paths[i];", "-\t\tif (scopePath == null) continue;", "-\t\tif (encloses(this.containerPaths[i] + '/' + scopePath, relativePath, i))", "+\tfor (int i = 0, length = this.relativePaths.length; i < length; i++) {", "+\t\tString currentRelativePath = this.relativePaths[i];", "+\t\tif (currentRelativePath == null) continue;", "+\t\tString currentContainerPath = this.containerPaths[i];", "+\t\tString currentFullPath = currentRelativePath.length() == 0 ? currentContainerPath : (currentContainerPath + '/' + currentRelativePath);", "+\t\tif (encloses(currentFullPath, fullPath, i))"]}], "num": 6595}