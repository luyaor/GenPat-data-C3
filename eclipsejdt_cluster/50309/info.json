{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db05b9cd814ecdecdb96172ecc4c4a92", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b47e3797d7c531943b2fe1a18d6216e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "3afec0fe69ebf611aef25566e9f2867c88dc9b66", "commitAfterChange": "7e373723161c71c5d5edc915bc1dcda42c748d81", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprivate void saveCompilationUnit(IPackageFragment pkgFrag, final String cuName, String contents, \t\t\tIProgressMonitor progressMonitor)", "signatureAfterChange": " \tprivate void saveCompilationUnit(IPackageFragment pkgFrag, final String cuName, String contents, \t\t\tIProgressMonitor progressMonitor)", "diff": ["+\t\t", "+\t\tif (isWorkingCopy && !AptConfig.shouldProcessDuringReconcile(_jProject)) {", "+\t\t\t// Cover the case where the user turned off reconcile-time processing after some working", "+\t\t\t// copies were already created - else they'll get null timestamps and the commit will fail.", "+\t\t\t// There's probably a better way to do this but it's a corner case anyway. - WSH 3/07", "+\t\t\t_CUHELPER.discardWorkingCopy(unit);", "+\t\t\tisWorkingCopy = false;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba632bdd7dd95fc889b008a0b26a52f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "8376377bee92e0d16cfa404c8d1e948dcf5be147", "commitAfterChange": "0a6cb9139841c5f6143bc94201bfcbd6024601de", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testGetNonJavaResources() throws CoreException", "signatureAfterChange": " public void testGetNonJavaResources1() throws CoreException", "diff": ["-public void testGetNonJavaResources() throws CoreException {", "+public void testGetNonJavaResources1() throws CoreException {", "-\t\tproject.getProject().build(IncrementalProjectBuilder.FULL_BUILD, null);", "+\t\tassertResources(", "+\t\t\t\"Unexpected non-java resources for project\",", "+\t\t\t\"/P/.classpath\\n\" +", "+\t\t\t\"/P/.project\",", "+\t\t\t(IResource[])project.getNonJavaResources());", "+\t} finally {", "+\t\tthis.deleteProject(\"P\");", "+\t}", "+}"]}], "num": 50309}