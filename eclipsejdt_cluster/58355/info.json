{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0110a0390ef8649fc067c7517f760516", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f583125b4d008dc2e3f04b62fbcd9b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "7459aa179eda8035f8ab159242bf75f277ac7ec3", "commitAfterChange": "11dfd19361f763778cfde2d1983dcc056fc62cdd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void setupConverterJCL() throws IOException", "signatureAfterChange": " \tpublic void setupConverterJCL() throws IOException", "diff": ["-\t\t\t} else {", "-\t\t\t\t//copy the two files to the JCL directory", "-\t\t\t\tjava.io.File resourceJCLMin =", "-\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "-\t\t\t\tcopy(resourceJCLMin, jclMin);", "-\t\t\t\tjava.io.File resourceJCLMinsrc =", "-\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "-\t\t\t\tcopy(resourceJCLMinsrc, jclMinsrc);", "-\t\t\t}", "-\t\t} else {", "-\t\t\t//check that the two files, jclMin.jar and jclMinsrc.zip are present", "-\t\t\t//copy either file that is missing or less recent than the one in workspace", "-\t\t\tjava.io.File resourceJCLMin =", "-\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "-\t\t\tif (jclMin.lastModified() < resourceJCLMin.lastModified()) {", "-\t\t\t\tcopy(resourceJCLMin, jclMin);", "-\t\t\t}", "-\t\t\tjava.io.File resourceJCLMinsrc =", "-\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "-\t\t\tif (jclMinsrc.lastModified() < resourceJCLMinsrc.lastModified()) {", "-\t\t\t\tcopy(resourceJCLMinsrc, jclMinsrc);", "+\t\t//copy the two files to the JCL directory", "+\t\tjava.io.File resourceJCLMin =", "+\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "+\t\tcopy(resourceJCLMin, jclMin);", "+\t\tjava.io.File resourceJCLMinsrc =", "+\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "+\t\tcopy(resourceJCLMinsrc, jclMinsrc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c17d58af724f257e99a1738ec5a2cf84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "613782ce0a459b2b9d97830b644944724bd8bd6d", "commitAfterChange": "38391f1424c2a310d61708561599c0ef2e593103", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void setupConverterJCL() throws IOException", "signatureAfterChange": " \tpublic void setupConverterJCL() throws IOException", "diff": ["+\t\t\t} else {", "+\t\t\t\t//copy the two files to the JCL directory", "+\t\t\t\tjava.io.File resourceJCLMin =", "+\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "+\t\t\t\tcopy(resourceJCLMin, jclMin);", "+\t\t\t\tjava.io.File resourceJCLMinsrc =", "+\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "+\t\t\t\tcopy(resourceJCLMinsrc, jclMinsrc);", "+\t\t\t}", "+\t\t} else {", "+\t\t\t//check that the two files, jclMin.jar and jclMinsrc.zip are present", "+\t\t\t//copy either file that is missing or less recent than the one in workspace", "+\t\t\tjava.io.File resourceJCLMin =", "+\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "+\t\t\tif (jclMin.lastModified() < resourceJCLMin.lastModified()) {", "+\t\t\t\tcopy(resourceJCLMin, jclMin);", "+\t\t\t}", "+\t\t\tjava.io.File resourceJCLMinsrc =", "+\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "+\t\t\tif (jclMinsrc.lastModified() < resourceJCLMinsrc.lastModified()) {", "+\t\t\t\tcopy(resourceJCLMinsrc, jclMinsrc);", "-\t\t//copy the two files to the JCL directory", "-\t\tjava.io.File resourceJCLMin =", "-\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "-\t\tcopy(resourceJCLMin, jclMin);", "-\t\tjava.io.File resourceJCLMinsrc =", "-\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "-\t\tcopy(resourceJCLMinsrc, jclMinsrc);"]}], "num": 58355}