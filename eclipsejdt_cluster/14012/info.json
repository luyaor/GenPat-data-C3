{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0947c64aa2b8d76436248d23dc57b830", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ee801570deed861e0e128f8a0ab35cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic static Set<IFile> runAPTDuringReconcile(\r \t\t\tfinal List<AnnotationProcessorFactory> factories,\r \t\t\tfinal CompilationUnit astCompilationUnit,\r \t\t\tICompilationUnit compilationUnit, IJavaProject javaProj)", "signatureAfterChange": " \tpublic static Set<IFile> runAPTDuringReconcile( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal CompilationUnit astCompilationUnit, \t\t\tICompilationUnit compilationUnit, IJavaProject javaProj)", "diff": ["-\t */\r", "-\tpublic static Set<IFile> runAPTDuringReconcile(\r", "-\t\t\tfinal List<AnnotationProcessorFactory> factories,\r", "-\t\t\tfinal CompilationUnit astCompilationUnit,\r", "-\t\t\tICompilationUnit compilationUnit, IJavaProject javaProj) {\r", "-\t\tProcessorEnvImpl processorEnv = ProcessorEnvImpl\r", "-\t\t\t\t.newProcessorEnvironmentForReconcile(astCompilationUnit,\r", "-\t\t\t\t\t\tcompilationUnit, javaProj);\r", "-\t\treturn runAPT(factories, processorEnv);\r", "-\t}\r", "+\t */", "+\tpublic static Set<IFile> runAPTDuringReconcile(", "+\t\t\tfinal List<AnnotationProcessorFactory> factories,", "+\t\t\tfinal CompilationUnit astCompilationUnit,", "+\t\t\tICompilationUnit compilationUnit, IJavaProject javaProj) {\t\t", "+\t\t", "+\t\t//", "+\t\t//  bail-out early if there aren't factories.", "+\t\t// ", "+\t\tif ( factories == null || factories.size() == 0 )", "+\t\t\treturn Collections.emptySet();", "+\t\t", "+\t\tProcessorEnvImpl processorEnv = ProcessorEnvImpl", "+\t\t\t\t.newProcessorEnvironmentForReconcile(astCompilationUnit,", "+\t\t\t\t\t\tcompilationUnit, javaProj);", "+\t\treturn runAPT(factories, processorEnv);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a4187f64899c46934a6c05812aa772", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r \tpublic static Set<IFile> runAPTDuringBuild(\r \t\t\tfinal List<AnnotationProcessorFactory> factories, IFile file,\r \t\t\tIJavaProject javaProj)", "signatureAfterChange": "  \tpublic static APTBuildResult runAPTDuringBuild( \t\t\tfinal List<AnnotationProcessorFactory> factories, IFile file, \t\t\tIJavaProject javaProj)", "diff": ["-\r", "-\tpublic static Set<IFile> runAPTDuringBuild(\r", "-\t\t\tfinal List<AnnotationProcessorFactory> factories, IFile file,\r", "-\t\t\tIJavaProject javaProj) {\r", "-\t\tProcessorEnvImpl processorEnv = ProcessorEnvImpl\r", "-\t\t\t\t.newProcessorEnvironmentForBuild( file, javaProj);\r", "-\t\treturn runAPT(factories, processorEnv);\r", "-\t}\r", "+", "+\tpublic static APTBuildResult runAPTDuringBuild(", "+\t\t\tfinal List<AnnotationProcessorFactory> factories, IFile file,", "+\t\t\tIJavaProject javaProj) {", "+\t\t", "+\t\t//", "+\t\t//  bail-out early if there aren't factories.", "+\t\t// ", "+\t\tif ( factories == null || factories.size() == 0 )", "+\t\t\treturn EMPTY_BUILD_RESULT;", "+\t\t", "+\t\t//", "+\t\t// scan file for annotation instances, and bail early if none.", "+\t\t// do this before construction ProcessorEnvImpl to avoid ", "+\t\t// unnecessary creation of AST.", "+\t\t//", "+\t\tif ( ! hasAnnotationInstance( file ) )", "+\t\t\treturn EMPTY_BUILD_RESULT;", "+\t\t\t\t\t", "+\t\tProcessorEnvImpl processorEnv = ProcessorEnvImpl", "+\t\t\t\t.newProcessorEnvironmentForBuild( file, javaProj);", "+\t\tSet newFiles = runAPT(factories, processorEnv);", "+\t\tSet<String> newDependencies = processorEnv.getTypeDependencies();", "+\t\tAPTBuildResult result = new APTBuildResult( newFiles, newDependencies );", "+\t\treturn result;", "+\t}"]}], "num": 14012}