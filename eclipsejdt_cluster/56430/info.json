{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa2ab9fb517cc0ce099320eabb4d5b3a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31081840ab85c990d80d501b808bbd67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic void test0107_if_else()", "signatureAfterChange": " public void test0307_if_else()", "diff": ["-\t// null analysis - if/else", "-\tpublic void test0107_if_else() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t if (o ==  null) {\\n\" + ", "-\t\t\t\t\"\t\t\t System.exit(0);\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t if (o == null) {\\n\" + ", "-\t\t\t\t  // quiet ", "-\t\t\t\t  // a direct call to System.exit() can be recognized as such; yet,", "-\t\t\t\t  // a lot of other methods may have the same property (aka calling", "-\t\t\t\t  // System.exit() themselves.)", "-\t\t\t\t\"\t\t   // do nothing\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-\t\t);", "-\t}\t\t", "+// null analysis - if/else", "+public void test0307_if_else() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    if (o ==  null) {\\n\" + ", "+\t\t\t\"      System.exit(0);\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    if (o == null) {\\n\" + ", "+\t\t\t  // quiet ", "+\t\t\t  // a direct call to System.exit() can be recognized as such; yet,", "+\t\t\t  // a lot of other methods may have the same property (aka calling", "+\t\t\t  // System.exit() themselves.)", "+\t\t\t\"      // do nothing\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eff2dfbe7fa74b2beeb09d74dba9181", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 193, "signatureBeforeChange": " \tpublic void test0224_for()", "signatureAfterChange": " public void test0704_for()", "diff": ["-\t// null analysis -- for", "-\tpublic void test0224_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t for (;o == null;) {\\n\" + ", "-\t\t\t\t     // quiet: first iteration is sure to find it null, ", "-\t\t\t\t     // but other iterations may change it ", "-\t\t\t\t\"\t\t   if (System.currentTimeMillis() > 10L) {\\n\" + ", "-\t\t\t\t\"\t\t     o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t   }\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis -- for", "+public void test0704_for() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    for (;o == null;) {\\n\" + ", "+\t\t\t     // quiet: first iteration is sure to find it null, ", "+\t\t\t     // but other iterations may change it ", "+\t\t\t\"      if (System.currentTimeMillis() > 10L) {\\n\" + ", "+\t\t\t\"        o = new Object();\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}"]}], "num": 56430}