{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db2fa1b19e44c0459e45e55e1d08b666", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8b69f1f1674e6e9bfd86855aedd7319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "887e85023301ae4623fbf853a36078cfd9120d7a", "commitAfterChange": "b9bd51906a715700072cf746ced64d441415e678", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void tearDownSuite() throws Exception", "signatureAfterChange": " public void tearDownSuite() throws Exception", "diff": ["-\tbuffer1.append(\"Time measures:\");", "-\t\tbuffer1.append(\" cannot be done as the directory was cleaned!\");", "-\t\tbuffer1.append(LINE_SEPARATOR);", "+//\t\tbuffer1.append(\" cannot be done as the directory was cleaned!\");", "+//\t\tbuffer1.append(LINE_SEPARATOR);", "+\t\treturn;", "+\t\tbuffer1.append(\"Time measures:\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb2154af8c5527d85618eb19ba90741f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "22519abd3f3558e92c5b78ac9ce9558a4e196050", "commitAfterChange": "c562fe63284003e0aa645013eaaa286d657e4cee", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprotected void appendProposal(CompletionProposal proposal, StringBuffer buffer)", "signatureAfterChange": "  \tprotected void appendProposal(CompletionProposal proposal, StringBuffer buffer)", "diff": ["+\t\tif(this.showParamterNames) {", "+\t\t\tchar[][] parameterNames = proposal.findParameterNames(null);", "+\t\t\tbuffer.append(\", \");", "+\t\t\tif(parameterNames == null || parameterNames.length <= 0) {", "+\t\t\t\tbuffer.append(NULL_LITERAL);", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(\"(\");", "+\t\t\t\tfor (int i = 0; i < parameterNames.length; i++) {", "+\t\t\t\t\tif(i > 0) buffer.append(\", \");", "+\t\t\t\t\tbuffer.append(parameterNames[i]);", "+\t\t\t\t}", "+\t\t\t\tbuffer.append(\")\");", "+\t\t\t}", "+\t\t}"]}], "num": 39898}