{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94d310cfe77f99e8890e9426218f83fe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9daadd383064ae240c284c37355ba6de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b18268c0ce6fbb737cee1ca1291ee19aeeac1ba2", "commitAfterChange": "fc2e0b5bc2df34e6de3029ff925cb036551f7d19", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "diff": ["-//\tif (type.javadoc != null) {", "-//\t\tASTNode[] nodes = nodeSet.matchingNodes(type.declarationSourceStart, type.sourceStart);", "-//\t\tif (nodes != null) {", "-//\t\t\tif (!matchedClassContainer) {", "-//\t\t\t\tfor (int i = 0, l = nodes.length; i < l; i++)", "-//\t\t\t\t\tnodeSet.matchingNodes.removeKey(nodes[i]);", "-//\t\t\t} else {", "-//\t\t\t\tfor (int i = 0, l = nodes.length; i < l; i++) {", "-//\t\t\t\t\tASTNode node = nodes[i];", "-//\t\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(node);", "-//\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, level.intValue(), this);", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t}", "-//\t}", "+\tif (type.javadoc != null) {", "+\t\tASTNode[] nodes = nodeSet.matchingNodes(type.declarationSourceStart, type.sourceStart);", "+\t\tif (nodes != null) {", "+\t\t\tif (!matchedClassContainer) {", "+\t\t\t\tfor (int i = 0, l = nodes.length; i < l; i++)", "+\t\t\t\t\tnodeSet.matchingNodes.removeKey(nodes[i]);", "+\t\t\t} else {", "+\t\t\t\tfor (int i = 0, l = nodes.length; i < l; i++) {", "+\t\t\t\t\tASTNode node = nodes[i];", "+\t\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(node);", "+\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, level.intValue(), this);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb1c8de582188051baf979c25f00600", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 40, "signatureBeforeChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\treport(field.sourceStart, field.sourceEnd, enclosingElement, accuracy);", "+\t\tif (encloses(enclosingElement)) {", "+\t\t\tSearchMatch match = JavaSearchMatch.newDeclarationMatch(enclosingElement, accuracy, field.sourceStart, field.sourceEnd+1, this);", "+\t\t\treport(match);", "+\t\t}", "-\t\t\t\tfor (int i = 0, l = nodes.length; i < l; i++) {", "-\t\t\t\t\tASTNode node = nodes[i];", "-\t\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(node);", "-\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, level.intValue(), this);", "-\t\t\t\t}", "+\t\t\t\tif (encloses(enclosingElement))", "+\t\t\t\t\tfor (int i = 0, l = nodes.length; i < l; i++) {", "+\t\t\t\t\t\tASTNode node = nodes[i];", "+\t\t\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(node);", "+\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, level.intValue(), this);", "+\t\t\t\t\t}"]}], "num": 2567}