{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a3957a8329cd8dd5c0df5de0b92729c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f1c27802eb4998eebcfa5b57f83f28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["- */\r", "-private IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t// creates compilation unit\r", "-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "-\t// create type\r", "-\tint length = simpleTypeNames.length;\r", "-\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\tfor (int i = 1; i < length; i++) {\r", "-\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\treturn type;\r", "-}\r", "+\t */\r", "+\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t\t// creates compilation unit\r", "+\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "+\r", "+\t\t// create type\r", "+\t\tint length = simpleTypeNames.length;\r", "+\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\treturn type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded827a0340912599d5c133c276f137e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private IImportDeclaration createImportHandle(ImportReference importRef)", "signatureAfterChange": "\r \tprivate IImportDeclaration createImportHandle(ImportReference importRef)", "diff": ["- */\r", "-private IImportDeclaration createImportHandle(ImportReference importRef) {\r", "-\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "-\tif (importRef.onDemand) {\r", "-\t\timportName = CharOperation.concat(importName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t}\r", "-\treturn ((CompilationUnit)this.currentOpenable).getImport(\r", "-\t\t\tnew String(importName));\r", "-}\r", "+\t */\r", "+\tprivate IImportDeclaration createImportHandle(ImportReference importRef) {\r", "+\t\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "+\t\tif (importRef.onDemand) {\r", "+\t\t\timportName = CharOperation.concat(importName, \".*\" .toCharArray()); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\treturn ((CompilationUnit) this.getCurrentOpenable()).getImport(\r", "+\t\t\tnew String(importName));\r", "+\t}\r"]}], "num": 17597}