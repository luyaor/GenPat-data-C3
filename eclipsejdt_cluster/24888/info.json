{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "800683c05c2d5f06e9477ea1760d4b05", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1462f1a39223bab1b6eb27acad45cbca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tprivate void doHandleWrap(int wrappingOption, ASTNode parentNode)", "signatureAfterChange": "  \tprivate void doHandleWrap(int wrappingOption, ASTNode parentNode)", "diff": ["-\t\t\t\tif (token.getWrapPolicy().isTopPriority()) {", "+\t\t\t\tif (token.getWrapPolicy().wrapMode == WrapMode.TOP_PRIORITY) {", "-\t\t\t\tboolean canWrapFirst = (wrappingOption & Alignment.M_NEXT_PER_LINE_SPLIT) != Alignment.M_NEXT_PER_LINE_SPLIT;", "+\t\t\t\tboolean canWrapFirst = (wrappingOption", "+\t\t\t\t\t\t& Alignment.M_NEXT_PER_LINE_SPLIT) != Alignment.M_NEXT_PER_LINE_SPLIT;", "+\t\t\t}", "+\t\t}", "+", "+\t\tif (!this.secondaryWrapIndexes.isEmpty()) {", "+\t\t\tint optionNoAlignment = (wrappingOption & ~Alignment.SPLIT_MASK) | Alignment.M_NO_ALIGNMENT;", "+\t\t\tpolicy = getWrapPolicy(optionNoAlignment, 0, false, parentNode);", "+\t\t\tfor (int index : this.secondaryWrapIndexes) {", "+\t\t\t\tToken token = this.tm.get(index);", "+\t\t\t\tif (token.getWrapPolicy() == null)", "+\t\t\t\t\ttoken.setWrapPolicy(policy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c82f78c80751875e618074438652d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "4b34ac952495406305286be091754126c6d25593", "commitAfterChange": "a3337f44ed6348a5f4f65ab1b2584cb8125066c6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \tprivate void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration, \t\t\tboolean spaceBeforeOpenParen, \t\t\tboolean spaceBetweenEmptyParameters, \t\t\tboolean spaceBeforeClosingParen, \t\t\tboolean spaceBeforeFirstParameter, \t\t\tboolean spaceBeforeComma, \t\t\tboolean spaceAfterComma, \t\t\tint methodDeclarationParametersAlignment)", "signatureAfterChange": "  \tprivate void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration, \t\t\tboolean spaceBeforeOpenParen, \t\t\tboolean spaceBetweenEmptyParameters, \t\t\tboolean spaceBeforeClosingParen, \t\t\tboolean spaceBeforeFirstParameter, \t\t\tboolean spaceBeforeComma, \t\t\tboolean spaceAfterComma, \t\t\tint methodDeclarationParametersAlignment)", "diff": ["-\t\t\t\t\t\"methodArguments\",//$NON-NLS-1$", "+\t\t\t\t\tAlignment.METHOD_ARGUMENTS,", "+\t\t\t\tswitch (methodDeclarationParametersAlignment & Alignment.SPLIT_MASK) {", "+\t\t\t\t\tcase Alignment.M_COMPACT_SPLIT:", "+\t\t\t\t\tcase Alignment.M_NEXT_PER_LINE_SPLIT:", "+\t\t\t\t\t\targumentsAlignment.startingColumn = this.scribe.column;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\t\t\t\tif (i > 0 && spaceAfterComma) {", "+\t\t\t\t\t\tif (i == 0) {", "+\t\t\t\t\t\t\tint fragmentIndentation = argumentsAlignment.fragmentIndentations[0];", "+\t\t\t\t\t\t\tif ((argumentsAlignment.mode & Alignment.M_INDENT_ON_COLUMN) != 0 && fragmentIndentation > 0) {", "+\t\t\t\t\t\t\t\tthis.scribe.indentationLevel = fragmentIndentation;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (spaceAfterComma) {", "+\t\t\t\t\t\targumentsAlignment.startingColumn = -1;"]}], "num": 24888}