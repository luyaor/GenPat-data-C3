{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d46b764474d737323959e1ebda5ff2e4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "474cc0592634e140568dfd5211c397ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "6d77a4bf35583191a476bb93f4bd36f26de22100", "commitAfterChange": "a97f3801cba74ca3fc427b461720b8d9907030a3", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t} else if (method.isStatic()) {", "-\t\t\t\t\t\t// detect collision between static import methods", "-\t\t\t\t\t\tif (method.declaringClass != method2.declaringClass && method.original().areParametersEqual(method2.original()))", "-\t\t\t\t\t\t\tcontinue nextVisible;", "+//\t\t\t\t\t} else if (method.isStatic()) {", "+//\t\t\t\t\t\t// detect collision between static import methods", "+//\t\t\t\t\t\tif (method.declaringClass != method2.declaringClass && method.original().areParametersEqual(method2.original()))", "+//\t\t\t\t\t\t\tcontinue nextVisible;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e476364c0c562ae6f0989f7bf687d2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "2e56c16c054ee89ad0380a5a606694122f7187a1", "commitAfterChange": "9120b6c49a4b36e25b20147789ffde03aca85f97", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(IfStatement node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(IfStatement node)", "diff": ["-\t\t\tboolean keepElseOnSameLine = (elseNode instanceof Block)", "-\t\t\t\t\t|| (this.options.keep_else_statement_on_same_line)", "+\t\t\tboolean keepElseOnSameLine = (this.options.keep_else_statement_on_same_line)", "-\t\t\tif (!keepElseOnSameLine) {", "-\t\t\t\tbreakLineBefore(elseNode);", "-\t\t\t\tindent(elseNode);", "-\t\t\t}", "+\t\t\tif (!keepElseOnSameLine)", "+\t\t\t\thandleLoopBody(elseNode);", "-\t\tif (!keepThenOnSameLine && !(thenNode instanceof Block)) {", "-\t\t\tbreakLineBefore(thenNode);", "-\t\t\tindent(thenNode);", "-\t\t}", "+\t\tif (!keepThenOnSameLine)", "+\t\t\thandleLoopBody(thenNode);"]}], "num": 42247}