{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0946ca62b969903a85dad0b5ad11799f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159fc5e346de05ca40504b5e4714cc9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "88b7c7eb3469a024202ea445bb4a9f81206035c9", "commitAfterChange": "38981955f1b194aa266ea7fa397baf3099ab8081", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void decodeIndexKey(char[] key)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-\tthis.typeSuffix = key[key.length - 2];", "+\t// Extract suffix from modifiers instead of index key", "+\tint kind = this.modifiers & (IConstants.AccInterface+IConstants.AccEnum+IConstants.AccAnnotation);", "+\tswitch (kind) {", "+\t\tcase IConstants.AccAnnotation:", "+\t\tcase IConstants.AccAnnotation+IConstants.AccInterface:", "+\t\t\tthis.typeSuffix = ANNOTATION_TYPE_SUFFIX;", "+\t\t\tbreak;", "+\t\tcase IConstants.AccEnum:", "+\t\t\tthis.typeSuffix = ENUM_SUFFIX;", "+\t\t\tbreak;", "+\t\tcase IConstants.AccInterface:", "+\t\t\tthis.typeSuffix = INTERFACE_SUFFIX;", "+\t\t\tbreak;", "+\t\tdefault:", "+\t\t\tthis.typeSuffix = CLASS_SUFFIX;", "+\t\t\tbreak;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "691129f175af3188de5ebb8b8138be40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "a8e18c32dc806d659bf5d8f2444be6f4268510d4", "commitAfterChange": "73072a493445774e509d0c21f3c359a527fa380b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] uniqueKey, int start, int end)", "signatureAfterChange": " public void acceptType(char[] packageName, char[] typeName, int modifiers, boolean isDeclaration, char[] uniqueKey, int start, int end)", "diff": ["+public void acceptType(char[] packageName, char[] typeName, int modifiers, boolean isDeclaration, char[] uniqueKey, int start, int end) {", "+\tint acceptFlags = 0;", "+\tint kind = modifiers & (IConstants.AccInterface+IConstants.AccEnum+IConstants.AccAnnotation);", "+\tswitch (kind) {", "+\t\tcase IConstants.AccAnnotation:", "+\t\tcase IConstants.AccAnnotation+IConstants.AccInterface:", "+\t\t\tacceptFlags = NameLookup.ACCEPT_ANNOTATIONS;", "+\t\t\tbreak;", "+\t\tcase IConstants.AccEnum:", "+\t\t\tacceptFlags = NameLookup.ACCEPT_ENUMS;", "+\t\t\tbreak;", "+\t\tcase IConstants.AccInterface:", "+\t\t\tacceptFlags = NameLookup.ACCEPT_INTERFACES;", "+\t\t\tbreak;", "+\t\tdefault:", "+\t\t\tacceptFlags = NameLookup.ACCEPT_CLASSES;", "+\t\t\tbreak;", "+\t}", "+\tIType type = null;", "+\tif(isDeclaration) {", "+\t\ttype = resolveTypeByLocation(packageName, typeName, acceptFlags, start, end);", "+\t} else {", "+\t\ttype = resolveType(packageName, typeName, acceptFlags);", "+\t\tif(type != null ) {", "+\t\t\tString key = uniqueKey == null ? type.getKey() : new String(uniqueKey);", "+\t\t\tif(type.isBinary()) {", "+\t\t\t\ttype = new ResolvedBinaryType((JavaElement)type.getParent(), type.getElementName(), key);", "+\t\t\t} else {", "+\t\t\t\ttype = new ResolvedSourceType((JavaElement)type.getParent(), type.getElementName(), key);", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "+\tif (type != null) {", "+\t\taddElement(type);", "+\t\tif(SelectionEngine.DEBUG){", "+\t\t\tSystem.out.print(\"SELECTION - accept type(\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(type.toString());", "+\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$", "+\t\t}", "+\t} ", "- */", "-protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] uniqueKey, int start, int end) {", "-\tIType type = null;", "-\tif(isDeclaration) {", "-\t\ttype = resolveTypeByLocation(packageName, typeName, acceptFlags, start, end);", "-\t} else {", "-\t\ttype = resolveType(packageName, typeName, acceptFlags);", "-\t\tif(type != null ) {", "-\t\t\tString key = uniqueKey == null ? type.getKey() : new String(uniqueKey);", "-\t\t\tif(type.isBinary()) {", "-\t\t\t\ttype = new ResolvedBinaryType((JavaElement)type.getParent(), type.getElementName(), key);", "-\t\t\t} else {", "-\t\t\t\ttype = new ResolvedSourceType((JavaElement)type.getParent(), type.getElementName(), key);", "-\t\t\t}", "-\t\t}", "-\t}", "-\t", "-\tif (type != null) {", "-\t\taddElement(type);", "-\t\tif(SelectionEngine.DEBUG){", "-\t\t\tSystem.out.print(\"SELECTION - accept type(\"); //$NON-NLS-1$", "-\t\t\tSystem.out.print(type.toString());", "-\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$", "-\t\t}", "-\t} "]}], "num": 25783}