{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01c0d554d1cb2434238c6986985b9a3e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d6895586b52172ee76d41b030bffe2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "59ebd299f2a3545e5d78fb989256beea406a1b71", "commitAfterChange": "73f5e4464bc98a6addcef991c1f921e89f159cd2", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void testClasspathDuplicateExtraAttribute() throws CoreException", "signatureAfterChange": " public void testClasspathDuplicateExtraAttribute2() throws CoreException", "diff": ["-public void testClasspathDuplicateExtraAttribute() throws CoreException {", "+ */", "+public void testClasspathDuplicateExtraAttribute2() throws CoreException {", "+\ttry {", "+\t\tIJavaProject proj =  this.createJavaProject(\"P1\", new String[] {}, \"bin\");", "+\t\tIClasspathAttribute[] extraAttributes = new IClasspathAttribute[2];", "+\t\textraAttributes[0] = JavaCore.newClasspathAttribute(\"javadoc_location\", \"http://www.sample-url.org/doc/\");", "+\t\textraAttributes[1] = JavaCore.newClasspathAttribute(\"javadoc_location\", \"d:/tmp\");", "-\t\tstatus = JavaConventions.validateClasspathEntry(proj, library, false);", "-\t\tassertStatus(", "-\t\t\t\"Duplicate extra attribute: \\'javadoc_location\\' in classpath entry \\'\"+getExternalJCLPath()+\"\\' for project 'P1'\",", "-\t\t\tstatus);", "-", "-\t\t// Verify project entry validation", "-\t\tcreateJavaProject(\"P2\");", "-\t\tIClasspathEntry projectEntry = JavaCore.newProjectEntry(new Path(\"/P2\"), ClasspathEntry.NO_ACCESS_RULES, false, extraAttributes, false);", "-\t\tstatus = JavaConventions.validateClasspathEntry(proj, projectEntry, false);", "-\t\tassertStatus(", "-\t\t\t\"Duplicate extra attribute: \\'javadoc_location\\' in classpath entry \\'/P2\\' for project 'P1'\",", "-\t\t\tstatus);", "-", "-\t\t// Verify source entry validation", "-\t\tcreateFolder(\"/P1/src\");", "-\t\tIClasspathEntry sourceEntry = JavaCore.newSourceEntry(new Path(\"/P1/src\"), new IPath[0], new IPath[0], null, extraAttributes);", "-\t\tstatus = JavaConventions.validateClasspathEntry(proj, sourceEntry, false);", "-\t\tassertStatus(", "-\t\t\t\"Duplicate extra attribute: \\'javadoc_location\\' in classpath entry \\'src\\' for project 'P1'\",", "-\t\t\tstatus);", "-", "-\t\t// Verify variable entry validation", "-\t\tIClasspathEntry variable = JavaCore.newVariableEntry(new Path(\"JCL_LIB\"), new Path(\"JCL_SRC\"), null, ClasspathEntry.NO_ACCESS_RULES, extraAttributes, false);", "-\t\tstatus = JavaConventions.validateClasspathEntry(proj, variable, false);", "+\t\tIJavaModelStatus status = JavaConventions.validateClasspathEntry(proj, library, false);", "-\t\tthis.deleteProject(\"P1\");", "-\t\tthis.deleteProject(\"P2\");", "+\t\tdeleteProject(\"P1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d65a7d2491325b532e676d0ac0d787", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "650f61cde4281931db1456f606d2618ae68746fe", "commitAfterChange": "daafb287dc48fb6dcee0d71671e3685e81e9b8c7", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " public void testRemoveDuplicates() throws CoreException", "signatureAfterChange": " public void testRemoveDuplicates() throws CoreException", "diff": ["-\tIJavaProject p1 = this.createJavaProject(\"P1\", new String[] {\"\"}, \"\");", "-\tIClasspathEntry[] p1ClasspathEntries = new IClasspathEntry[]{JavaCore.newLibraryEntry(getExternalJCLPath(), null, null, true)};", "-\tsetClasspath(p1, p1ClasspathEntries);", "-\tIJavaProject  p2 = this.createJavaProject(\"P2\", new String[] {\"\"}, \"\");", "-\tIClasspathEntry[] p2ClasspathEntries = new IClasspathEntry[]{", "-\t\t\tJavaCore.newProjectEntry(new Path(\"/P1\")),", "-\t\t\tJavaCore.newLibraryEntry(getExternalJCLPath(), null, null, false)", "-\t};", "-\tsetClasspath(p2, p2ClasspathEntries);", "-", "-\tIClasspathEntry[] classpath = ((JavaProject)p2).getExpandedClasspath(true);", "-\tassertEquals(\"Unexpected number of classpath entries\", 2, classpath.length);", "-\tassertEquals(\"Unexpected first entry\", \"/P1\", classpath[0].getPath().toString());", "-\tassertEquals(\"Unexpected second entry\", getExternalJCLPathString(), classpath[1].getPath().toOSString());", "+\ttry {", "+\t\tIJavaProject p1 = this.createJavaProject(\"P1\", new String[] {\"\"}, \"\");", "+\t\tIClasspathEntry[] p1ClasspathEntries = new IClasspathEntry[]{JavaCore.newLibraryEntry(getExternalJCLPath(), null, null, true)};", "+\t\tsetClasspath(p1, p1ClasspathEntries);", "+\t\tIJavaProject  p2 = this.createJavaProject(\"P2\", new String[] {\"\"}, \"\");", "+\t\tIClasspathEntry[] p2ClasspathEntries = new IClasspathEntry[]{", "+\t\t\t\tJavaCore.newProjectEntry(new Path(\"/P1\")),", "+\t\t\t\tJavaCore.newLibraryEntry(getExternalJCLPath(), null, null, false)", "+\t\t};", "+\t\tsetClasspath(p2, p2ClasspathEntries);", "+\t\tIClasspathEntry[] classpath = ((JavaProject)p2).getExpandedClasspath(true);", "+\t\tassertEquals(\"Unexpected number of classpath entries\", 2, classpath.length);", "+\t\tassertEquals(\"Unexpected first entry\", \"/P1\", classpath[0].getPath().toString());", "+\t\tassertEquals(\"Unexpected second entry\", getExternalJCLPathString(), classpath[1].getPath().toOSString());", "+\t} finally {", "+\t\tthis.deleteProjects(new String[] {\"P1\", \"P2\"});", "+\t}"]}], "num": 33876}