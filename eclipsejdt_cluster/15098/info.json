{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ef3786a7e5f677bd29873b300c0d3e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56eeb30bf088cb6b76c45dfebae1f62c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 45, "signatureBeforeChange": " protected void consumeAnnotationName()", "signatureAfterChange": "  protected void consumeOnlyTypeArguments()", "diff": ["-protected void consumeAnnotationName() {", "-\tsuper.consumeAnnotationName();", "-}", "+", "+protected void consumeOnlyTypeArguments() {", "+\tsuper.consumeOnlyTypeArguments();", "+\tif ((this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {", "+\t\tint length = this.genericsLengthStack[this.genericsLengthPtr];", "+\t\tif (length == 1) {", "+\t\t\tTypeReference typeReference = (TypeReference)this.genericsStack[this.genericsPtr];", "+\t\t\tif (!(typeReference instanceof Wildcard)) {", "+\t\t\t\tthis.patternLocator.match(typeReference, this.nodeSet);", "+            }", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa67e2189bce7fe1264039df22a00509", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 55, "signatureBeforeChange": " protected void consumeAnnotationAsModifier()", "signatureAfterChange": "  protected void consumeTypeArguments()", "diff": ["-protected void consumeAnnotationAsModifier() {", "-\tsuper.consumeAnnotationAsModifier();", "+", "+protected void consumeTypeArguments() {", "+\tsuper.consumeTypeArguments();", "+\tif ((this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {", "+\t\tint length = this.genericsLengthStack[this.genericsLengthPtr];", "+\t\tif (length == 1) {", "+\t\t\tTypeReference typeReference = (TypeReference)this.genericsStack[this.genericsPtr];", "+\t\t\tif (!(typeReference instanceof Wildcard)) {", "+\t\t\t\tthis.patternLocator.match(typeReference, this.nodeSet);", "+            }", "+\t\t}", "+\t}", "+}"]}], "num": 15098}