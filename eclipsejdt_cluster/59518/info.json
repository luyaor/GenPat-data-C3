{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3127917c8209ccc1603bf355d95516c1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caa717ddc9de2757fe2f50aa120400c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "commitAfterChange": "8ed896e298fa9789ff51d3aeca45b60a4a3c5b99", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \t\t \tprivate int rewriteParagraphList(ASTNode parent, StructuralPropertyDescriptor property, int insertPos, int insertIndent, int separator, int lead)", "signatureAfterChange": " \t\t \tprivate int rewriteParagraphList(ASTNode parent, StructuralPropertyDescriptor property, int insertPos, int insertIndent, int separator, int lead)", "diff": ["-\t\tboolean hasExisting= false;", "-\t\tfor (int i= 0; i < events.length; i++) {", "-\t\t\tint changeKind= events[i].getChangeKind();", "-\t\t\thasExisting |= (changeKind != RewriteEvent.INSERTED);", "-\t\t}", "-\t\t", "-\t\tif (!hasExisting) {", "+\t\tif (isAllOfKind(events, RewriteEvent.INSERTED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf2fbe458b25a20851e7604c6322578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BaseMessagerImpl.java", "commitBeforeChange": "5ad2fccc6e97d11cd839d7b271d24d4e5e50f1bf", "commitAfterChange": "7c18a9763024ad321fbd37c2e6b52a79b1b2fb7c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e,  \t\t\tAnnotationMirror a, AnnotationValue v)", "signatureAfterChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e,  \t\t\tAnnotationMirror a, AnnotationValue v)", "diff": ["-\t\t\tAnnotation annotation = null;", "-\t\t\tfor (int i = 0; annotation == null && i < elementAnnotations.length; i++) {", "-\t\t\t\tif (annotationBinding == elementAnnotations[i].getCompilerAnnotation()) {", "-\t\t\t\t\tannotation = elementAnnotations[i];", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tAnnotation annotation = findAnnotation(elementAnnotations, annotationBinding);"]}], "num": 59518}