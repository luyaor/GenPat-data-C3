{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d148d7fd0850b322f8c2c959efa45016", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34aa343dfbccb584c15510281dc5f80d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void test001()", "signatureAfterChange": " public void test001()", "diff": ["-\t\t\"     1  newarray #10 int\\n\" + ", "-\t\t\"     3  astore_1\\n\" + ", "-\t\t\"     4  aload_1\\n\" + ", "-\t\t\"     5  astore_2\\n\" + ", "-\t\t\"     6  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"     9  ldc #23 <String \\\"SUCCESS\\\">\\n\" + ", "-\t\t\"    11  invokevirtual #29 <Method java/io/PrintStream.print(Ljava/lang/String;)V>\\n\" + ", "+\t\t\"     1  newarray int [10]\\n\" + ", "+\t\t\"     3  astore_1 [c1]\\n\" + ", "+\t\t\"     4  aload_1 [c1]\\n\" + ", "+\t\t\"     5  astore_2 [c2]\\n\" + ", "+\t\t\"     6  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"     9  ldc <String \\\"SUCCESS\\\"> [23]\\n\" + ", "+\t\t\"    11  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [29]\\n\" + ", "-\tif (actualOutput.indexOf(expectedOutput) == -1){", "+\tint index = actualOutput.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "-\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, actualOutput);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc0299bbd417bb24945f3e1359b5c5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test010()", "signatureAfterChange": " public void test010()", "diff": ["-\t\t\"     0  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\"     5  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [29]\\n\" + ", "+\t\t\"     5  invokevirtual java.io.PrintStream.print(java.lang.String) : void  [29]\\n\" + ", "-\t\t\"     9  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"     9  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\"    14  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [29]\\n\" + ", "+\t\t\"    14  invokevirtual java.io.PrintStream.print(java.lang.String) : void  [29]\\n\" + ", "-\t\t\"        [pc: 0, pc: 18] local: args index: 0 type: [Ljava/lang/String;\\n\";", "-\tif (actualOutput.indexOf(expectedOutput) == -1){", "+\t\t\"        [pc: 0, pc: 18] local: args index: 0 type: java.lang.String[]\\n\";", "+\tint index = actualOutput.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "-\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, actualOutput);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98cfe89fbce3f5b1aea91b6ef1e8c6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void test034()", "signatureAfterChange": " public void test034()", "diff": ["-\t\t\"     0  new #17 java/util/ArrayList\\n\" + ", "+\t\t\"     0  new java/util/ArrayList [17]\\n\" + ", "-\t\t\"     4  invokespecial #18 <Method java/util/ArrayList.<init>()V>\\n\" + ", "-\t\t\"     7  astore_1\\n\" + ", "-\t\t\"     8  new #17 java/util/ArrayList\\n\" + ", "+\t\t\"     4  invokespecial java/util/ArrayList.<init>()V [18]\\n\" + ", "+\t\t\"     7  astore_1 [list]\\n\" + ", "+\t\t\"     8  new java/util/ArrayList [17]\\n\" + ", "-\t\t\"    12  invokespecial #18 <Method java/util/ArrayList.<init>()V>\\n\" + ", "-\t\t\"    15  astore_1\\n\" + ", "-\t\t\"    16  new #17 java/util/ArrayList\\n\" + ", "+\t\t\"    12  invokespecial java/util/ArrayList.<init>()V [18]\\n\" + ", "+\t\t\"    15  astore_1 [list]\\n\" + ", "+\t\t\"    16  new java/util/ArrayList [17]\\n\" + ", "-\t\t\"    20  invokespecial #18 <Method java/util/ArrayList.<init>()V>\\n\" + ", "-\t\t\"    23  astore_2\\n\" + ", "-\t\t\"    24  aload_2\\n\" + ", "-\t\t\"    25  astore_3\\n\" + ", "-\t\t\"    26  aload_2\\n\" + ", "-\t\t\"    27  astore_3\\n\" + ", "-\t\t\"    28  getstatic #24 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"    31  ldc #26 <String \\\"SUCCESS\\\">\\n\" + ", "-\t\t\"    33  invokevirtual #32 <Method java/io/PrintStream.println(Ljava/lang/String;)V>\\n\" + ", "+\t\t\"    20  invokespecial java/util/ArrayList.<init>()V [18]\\n\" + ", "+\t\t\"    23  astore_2 [alist]\\n\" + ", "+\t\t\"    24  aload_2 [alist]\\n\" + ", "+\t\t\"    25  astore_3 [list2]\\n\" + ", "+\t\t\"    26  aload_2 [alist]\\n\" + ", "+\t\t\"    27  astore_3 [list2]\\n\" + ", "+\t\t\"    28  getstatic java/lang/System.out Ljava/io/PrintStream; [24]\\n\" + ", "+\t\t\"    31  ldc <String \\\"SUCCESS\\\"> [26]\\n\" + ", "+\t\t\"    33  invokevirtual java/io/PrintStream.println(Ljava/lang/String;)V [32]\\n\" + ", "-\tif (actualOutput.indexOf(expectedOutput) == -1){", "+\tint index = actualOutput.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "-\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, actualOutput);", "+\t}"]}], "num": 40073}