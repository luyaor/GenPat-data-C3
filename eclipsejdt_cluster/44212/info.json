{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f14b9c44104f597a07f65949503a9049", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b70bbb2d4689a6671c8ee46a575d5422", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void store(OutputStream output, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void store(OutputStream output, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tObject[] types = this.classToSuperclass.keySet().toArray();", "+\t\tObject[] types = this.classToSuperclass.entrySet().toArray();", "-\t\t\tObject t = types[i];", "+\t\t\tMap.Entry entry = (Map.Entry) types[i];", "+\t\t\tObject t = entry.getKey();", "-\t\t\tObject superClass = this.classToSuperclass.get(t);", "+\t\t\tObject superClass = entry.getValue();", "-\t\ttypes = this.typeToSuperInterfaces.keySet().toArray();", "+\t\ttypes = this.typeToSuperInterfaces.entrySet().toArray();", "-\t\t\tObject t = types[i];", "+\t\t\tMap.Entry entry = (Map.Entry) types[i];", "+\t\t\tObject t = entry.getKey();", "-\t\t\tObject[] sp = (Object[])this.typeToSuperInterfaces.get(t);", "+\t\t\tObject[] sp = (Object[]) entry.getValue();", "-\t\ttypes = this.classToSuperclass.keySet().toArray();", "+\t\ttypes = this.classToSuperclass.entrySet().toArray();", "-\t\t\tIJavaElement key = (IJavaElement)types[i];", "-\t\t\tIJavaElement value = (IJavaElement)this.classToSuperclass.get(key);", "+\t\t\tMap.Entry entry = (Map.Entry) types[i];", "+\t\t\tIJavaElement key = (IJavaElement) entry.getKey();", "+\t\t\tIJavaElement value = (IJavaElement) entry.getValue();", "-\t\ttypes = this.typeToSuperInterfaces.keySet().toArray();", "+\t\ttypes = this.typeToSuperInterfaces.entrySet().toArray();", "-\t\t\tIJavaElement key = (IJavaElement)types[i];", "-\t\t\tIJavaElement[] values = (IJavaElement[])this.typeToSuperInterfaces.get(key);", "+\t\t\tMap.Entry entry = (Map.Entry) types[i];", "+\t\t\tIJavaElement key = (IJavaElement) entry.getKey();", "+\t\t\tIJavaElement[] values = (IJavaElement[]) entry.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc3e6fc6db2a0363160e72d7b93417f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void store(OutputStream output, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void store(OutputStream output, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tif(focusType != null) {", "+\t\tif(this.focusType != null) {", "-\t\t\thashtable.put(focusType, index);", "-\t\t\thashtable2.put(index, focusType);", "+\t\t\thashtable.put(this.focusType, index);", "+\t\t\thashtable2.put(index, this.focusType);", "-\t\tObject[] types = classToSuperclass.keySet().toArray();", "+\t\tObject[] types = this.classToSuperclass.keySet().toArray();", "-\t\t\tObject superClass = classToSuperclass.get(t);", "+\t\t\tObject superClass = this.classToSuperclass.get(t);", "-\t\ttypes = typeToSuperInterfaces.keySet().toArray();", "+\t\ttypes = this.typeToSuperInterfaces.keySet().toArray();", "-\t\t\tObject[] sp = (Object[])typeToSuperInterfaces.get(t);", "+\t\t\tObject[] sp = (Object[])this.typeToSuperInterfaces.get(t);", "-\t\tif(computeSubtypes) {", "+\t\tif(this.computeSubtypes) {", "-\t\tif(project != null) {", "-\t\t\toutput.write(project.getHandleIdentifier().getBytes());", "+\t\tif(this.project != null) {", "+\t\t\toutput.write(this.project.getHandleIdentifier().getBytes());", "-\t\tfor (int i = 0; i < missingTypes.size(); i++) {", "+\t\tfor (int i = 0; i < this.missingTypes.size(); i++) {", "-\t\t\toutput.write(((String)missingTypes.get(i)).getBytes());", "+\t\t\toutput.write(((String)this.missingTypes.get(i)).getBytes());", "-\t\t\toutput.write(flagsToBytes((Integer)typeFlags.get(t)));", "+\t\t\toutput.write(flagsToBytes((Integer)this.typeFlags.get(t)));", "-\t\t\tif(focusType != null && focusType.equals(t)) {", "+\t\t\tif(this.focusType != null && this.focusType.equals(t)) {", "-\t\t\tif(interfaces.contains(t)) {", "+\t\t\tif(this.interfaces.contains(t)) {", "-\t\t\tif(rootClasses.contains(t)) {", "+\t\t\tif(this.rootClasses.contains(t)) {", "-\t\ttypes = classToSuperclass.keySet().toArray();", "+\t\ttypes = this.classToSuperclass.keySet().toArray();", "-\t\t\tIJavaElement value = (IJavaElement)classToSuperclass.get(key);", "+\t\t\tIJavaElement value = (IJavaElement)this.classToSuperclass.get(key);", "-\t\ttypes = typeToSuperInterfaces.keySet().toArray();", "+\t\ttypes = this.typeToSuperInterfaces.keySet().toArray();", "-\t\t\tIJavaElement[] values = (IJavaElement[])typeToSuperInterfaces.get(key);", "+\t\t\tIJavaElement[] values = (IJavaElement[])this.typeToSuperInterfaces.get(key);"]}], "num": 44212}