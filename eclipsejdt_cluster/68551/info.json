{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8227aa514b90b8397660543e96e7aa9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2317f7672cbfc642e4c048afb047a03e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void test423584() throws JavaModelException", "signatureAfterChange": " \tpublic void test423584() throws JavaModelException", "diff": ["-\t\tassertProblemsSize(compilationUnit, 2, \"The method goo(I) in the type X is not applicable for the arguments ((<no type> s) -> 0)\\n\" + ", "+\t\tassertProblemsSize(compilationUnit, 2, \"The method goo(I) in the type X is not applicable for the arguments ((<no type> s) -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83877a3b334c9212b86a09a6ea38c909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter17Test.java", "commitBeforeChange": "4e0e44e12d531b0f9a299237d2e668d6176cd234", "commitAfterChange": "2156fedddc9b679afe1f45ef1e9d318ac4df4d9a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test403444() throws JavaModelException", "signatureAfterChange": " \tpublic void test403444() throws JavaModelException", "diff": ["-\t\t\t\t\"The method foo(X.StringToInt) in the type X is not applicable for the arguments ((String s) -> {})\\n\" + ", "-\t\t\t\t\"The method bar(X.ReduceInt) in the type X is not applicable for the arguments ((int x, int y) -> {})\\n\" + ", "-\t\tassertProblemsSize(unit, 7, error);", "+\t\tassertProblemsSize(unit, 5, error);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9035d6ea19b5098feed9294e4eba2fdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " public void test401610h()", "signatureAfterChange": " public void test401610h()", "diff": ["-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a179381bf6704b9ccdfb0ba08b1b3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " public void test401845a()", "signatureAfterChange": " public void test401845a()", "diff": ["-\t\t\t\"The method foo(I[]...) in the type X is not applicable for the arguments ((<no type> x) -> {\\n\" + ", "-\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\"})\\n\" + ", "+\t\t\t\"The method foo(I[]...) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9150b208c20ba04bf2ca3fa432fc6aa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " public void test401610j()", "signatureAfterChange": " public void test401610j()", "diff": ["-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((Object o) -> {\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((Object o) -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d7e5d8f14149c1d51a50f05b354a5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/OverloadResolutionTest8.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test005()", "signatureAfterChange": " public void test005()", "diff": ["-\t\t\t\"The method goo(J) in the type X is not applicable for the arguments (() -> {\\n\" + // because lambda has errors -> not valueCompatible ", "-\t\t\t\"  while (f)    ;\\n\" + ", "-\t\t\t\"})\\n\" + ", "+\t\t\t\"The method goo(J) in the type X is not applicable for the arguments (() -> {})\\n\" + // because lambda has errors -> not valueCompatible "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aad4be8fa90d899163c982c381f68522", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": " public void test401939a()", "signatureAfterChange": " public void test401939a()", "diff": ["-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\t\"  if ((1 == 2))\\n\" + ", "-\t\t\t\t\"      throw new RuntimeException();\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e52b09e4ed29d5cc9031fa3684bb22bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " public void test401610b()", "signatureAfterChange": " public void test401610b()", "diff": ["-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((<no type> s) -> {\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((<no type> s) -> {})\\n\" + "]}], "num": 68551}