{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b79b447eb698e4a5c3b5d94ea3d3451a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c05f715adb3e720aee2b2419449e9bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "727d8ca46d64642ad4f629f81ba37e76e7ae8c85", "commitAfterChange": "3bf739514a83473db763d6e900f7cc23c49722a4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\tnext : for (int i = 0, l = superInterfaces.length; i < l; i++) {", "+\tSimpleSet redundantInterfaces = null;  // bark but once.", "+\tfor (int i = 0, l = superInterfaces.length; i < l; i++) {", "-\t\t\tif (i != j && toCheck.implementsInterface(superInterfaces[j], true)) {", "+\t\t\tReferenceBinding implementedInterface = superInterfaces[j];", "+\t\t\tif (i != j && toCheck.implementsInterface(implementedInterface, true)) {", "+\t\t\t\tif (redundantInterfaces == null) {", "+\t\t\t\t\tredundantInterfaces = new SimpleSet(3);", "+\t\t\t\t} else if (redundantInterfaces.includes(implementedInterface)) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tredundantInterfaces.add(implementedInterface);", "-\t\t\t\t\t\tproblemReporter().redundantSuperInterface(this.type, refs[j], superInterfaces[j], toCheck);", "-\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\tproblemReporter().redundantSuperInterface(this.type, refs[j], implementedInterface, toCheck);", "+\t\t\t\t\t\tbreak; // https://bugs.eclipse.org/bugs/show_bug.cgi?id=320911", "+\t\t\t\t\t\tif (redundantInterfaces == null) {", "+\t\t\t\t\t\t\tredundantInterfaces = new SimpleSet(3);", "+\t\t\t\t\t\t} else if (redundantInterfaces.includes(inheritedInterface)) {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tredundantInterfaces.add(inheritedInterface);", "+\t\t\t\t\t\tif (redundantInterfaces == null) {", "+\t\t\t\t\t\t\tredundantInterfaces = new SimpleSet(3);", "+\t\t\t\t\t\t} else if (redundantInterfaces.includes(inheritedInterface)) {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tredundantInterfaces.add(inheritedInterface);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f8204fad74cf792d205bf3d914ef31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient)", "signatureAfterChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient)", "diff": ["+\t\tAnnotationBinding[] instances = null;", "+\t\tint length = annotations == null ? 0 : annotations.length;", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tinstances = new AnnotationBinding[length];", "+\t\t\t\t\t\ttype.setAnnotations(instances);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tinstances = new AnnotationBinding[length];", "+\t\t\t\t\t\tmethod.setAnnotations(instances);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tinstances = new AnnotationBinding[length];", "+\t\t\t\t\t\tfield.setAnnotations(instances);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tinstances = new AnnotationBinding[length];", "+\t\t\t\t\t\tlocal.setAnnotations(instances);", "+\t\t\t\t\t}", "-\t\tint length = annotations.length;", "+\t\t\t// null if receiver is a package binding", "+\t\t\tif (instances != null)\t\t\t\t", "+\t\t\t\tinstances[i] = annotation.getCompilerAnnotation();"]}], "num": 15772}