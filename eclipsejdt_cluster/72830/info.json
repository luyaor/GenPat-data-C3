{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5458ed4fee7045f4e1dbe5857c3570ec", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d51fec51af13ede2308c0312f4fc0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void test040()", "signatureAfterChange": " public void test040()", "diff": ["-\t\t\"3. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tclass Y extends Homonym {};\t\\n\" + ", "+\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\"The type X.Homonym cannot be the superclass of Y; a superclass must be a class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"\tclass Y extends Homonym {};\t\\n\" + ", "+\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\"The type X.Homonym cannot be the superclass of Y; a superclass must be a class\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba2825ca7939cac99e7b85cb5986954f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "commitAfterChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void test009()", "signatureAfterChange": "  \tpublic void test009()", "diff": ["+\t\t\t\t\"\t\tZ.count(1, null); // only choice is Z.count(int,int...)\\n\" +", "+//\t\t\t\t\"\t\tZ.count(1, 1); // chooses Z.count(long, int) over Z.count(int,int...)\\n\" +", "+\t\t\t\t\"\t\tZ.count2(1, null); // better choice is Z.count(int,int[])\\n\" +", "+\t\t\t\t\"\t\tZ.count2(1L, null); // better choice is Z.count(long,int...)\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Z {\\n\" +", "+\t\t\t\t\"\tpublic static void count(long l, int values) { System.out.print('3'); }\\n\" +", "+\t\t\t\t\"\tpublic static void count(int i, int ... values) { System.out.print('4'); }\\n\" +", "+\t\t\t\t\"\tpublic static void count2(int i, int values) { System.out.print('5'); }\\n\" +", "+\t\t\t\t\"\tpublic static void count2(long l, int ... values) { System.out.print('6'); }\\n\" +", "-\t\t\t\"2\");", "+\t\t\t\"2466\");"]}], "num": 72830}