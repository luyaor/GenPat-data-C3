{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1596d65d82a4aaecce4b1f2b39ac1316", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a067f7b5a399af51ad9cb7c029c088", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": "  public TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\t} else {", "-\t\t\t// indirect static reference ?", "-\t\t\tif (this.indexOfFirstFieldBinding > 1 ", "+\t\t} else if (this.indexOfFirstFieldBinding > 1 ", "-\t\t\t\tscope.problemReporter().indirectAccessToStaticField(this, field);", "-\t\t\t}", "+\t\t\tscope.problemReporter().indirectAccessToStaticField(this, field);", "+\t\t\t\t// check if accessing enum static field in initializer", "+\t\t\t\tReferenceBinding declaringClass = field.declaringClass;", "+\t\t\t\tif (declaringClass.isEnum()) {", "+\t\t\t\t\tMethodScope methodScope = scope.methodScope();", "+\t\t\t\t\tSourceTypeBinding sourceType = methodScope.enclosingSourceType();", "+\t\t\t\t\tif ((sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "+\t\t\t\t\t\t\t&& field.constant() == Constant.NotAConstant", "+\t\t\t\t\t\t\t&& !methodScope.isStatic", "+\t\t\t\t\t\t\t&& methodScope.isInsideInitializerOrConstructor()) {", "+\t\t\t\t\t\tscope.problemReporter().enumStaticFieldUsedDuringInitialization(field, this);", "+\t\t\t\t\t}", "+\t\t\t\t}\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757e2bfdfa45e2c60d19b3703361d4e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "signatureAfterChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "diff": ["-\t\t\t\t}\t\t\t\t// check if final blank field", "+\t\t\t\t}", "+\t\t\t\tif (this.indexOfFirstFieldBinding == 1) { // was an implicit reference to the first field binding", "+\t\t\t\t\tReferenceBinding declaringClass = lastFieldBinding.declaringClass;", "+\t\t\t\t\t// check if accessing enum static field in initializer\t\t\t\t\t", "+\t\t\t\t\tif (declaringClass.isEnum()) {", "+\t\t\t\t\t\tMethodScope methodScope = currentScope.methodScope();", "+\t\t\t\t\t\tSourceTypeBinding sourceType = methodScope.enclosingSourceType();", "+\t\t\t\t\t\tif (lastFieldBinding.isStatic()", "+\t\t\t\t\t\t\t\t&& (sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "+\t\t\t\t\t\t\t\t&& lastFieldBinding.constant() == NotAConstant", "+\t\t\t\t\t\t\t\t&& !methodScope.isStatic", "+\t\t\t\t\t\t\t\t&& methodScope.isInsideInitializerOrConstructor()) {", "+\t\t\t\t\t\t\tcurrentScope.problemReporter().enumStaticFieldUsedDuringInitialization(lastFieldBinding, this);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t}\t\t\t\t", "+\t\t\t\t// check if final blank field"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87893c5d978060db18717ebc73394cc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tif (!fieldBinding.isStatic() ", "-\t\t\t\t\t\t\t&& this.indexOfFirstFieldBinding == 1", "-\t\t\t\t\t\t\t&& scope.compilerOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess) != ProblemSeverities.Ignore) {", "+\t\t\t\t\tif (fieldBinding.isStatic()) {", "+\t\t\t\t\t\tReferenceBinding declaringClass = fieldBinding.declaringClass;", "+\t\t\t\t\t\t// check if accessing enum static field in initializer\t\t\t\t\t", "+\t\t\t\t\t\tif (declaringClass.isEnum()) {", "+\t\t\t\t\t\t\tSourceTypeBinding sourceType = methodScope.enclosingSourceType();", "+\t\t\t\t\t\t\tif ((sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "+\t\t\t\t\t\t\t\t\t&& fieldBinding.constant() == Constant.NotAConstant", "+\t\t\t\t\t\t\t\t\t&& !methodScope.isStatic", "+\t\t\t\t\t\t\t\t\t&& methodScope.isInsideInitializerOrConstructor()) {", "+\t\t\t\t\t\t\t\tscope.problemReporter().enumStaticFieldUsedDuringInitialization(fieldBinding, this);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}\t\t\t\t\t\t", "+\t\t\t\t\t} else if (this.indexOfFirstFieldBinding == 1 && scope.compilerOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess) != ProblemSeverities.Ignore) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be910d86170222414ed6b4d567e6861a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\tif (this.indexOfFirstFieldBinding == 1) { // was an implicit reference to the first field binding", "-\t\t\t\tReferenceBinding declaringClass = lastFieldBinding.declaringClass;", "-\t\t\t\t// check if accessing enum static field in initializer\t\t\t\t\t", "-\t\t\t\tif (declaringClass.isEnum()) {", "-\t\t\t\t\tMethodScope methodScope = currentScope.methodScope();", "-\t\t\t\t\tSourceTypeBinding sourceType = methodScope.enclosingSourceType();", "-\t\t\t\t\tif (lastFieldBinding.isStatic()", "-\t\t\t\t\t\t\t&& (sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "-\t\t\t\t\t\t\t&& lastFieldBinding.constant() == Constant.NotAConstant", "-\t\t\t\t\t\t\t&& !methodScope.isStatic", "-\t\t\t\t\t\t\t&& methodScope.isInsideInitializerOrConstructor()) {", "-\t\t\t\t\t\tcurrentScope.problemReporter().enumStaticFieldUsedDuringInitialization(lastFieldBinding, this);", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t\t", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce79405d9f9cec9c6dff9679fcc57d74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "diff": ["-\t\t\t\tReferenceBinding declaringClass = fieldBinding.declaringClass;", "-\t\t\t\t// check if accessing enum static field in initializer\t\t\t\t\t", "-\t\t\t\tif (declaringClass.isEnum()) {", "-\t\t\t\t\tMethodScope methodScope = currentScope.methodScope();", "-\t\t\t\t\tSourceTypeBinding sourceType = methodScope.enclosingSourceType();", "-\t\t\t\t\tif (fieldBinding.isStatic()", "-\t\t\t\t\t\t\t&& (sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "-\t\t\t\t\t\t\t&& fieldBinding.constant() == Constant.NotAConstant", "-\t\t\t\t\t\t\t&& !methodScope.isStatic", "-\t\t\t\t\t\t\t&& methodScope.isInsideInitializerOrConstructor()) {", "-\t\t\t\t\t\tcurrentScope.problemReporter().enumStaticFieldUsedDuringInitialization(fieldBinding, this);", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t\t"]}], "num": 20699}