{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "492741a47d6ed179cafa9aee7490dbb9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9288608bc59a95bdf517eae46775619f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprotected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t */\r", "-\tprotected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException {\r", "-\t\tICompilationUnit original = (ICompilationUnit) this.getOriginalElement();\r", "-\t\tIBuffer buf =\r", "-\t\t\tgetBufferManager().openBuffer(\r", "-\t\t\t\toriginal.getBuffer().getCharacters(),\r", "-\t\t\t\tpm,\r", "-\t\t\t\tthis,\r", "-\t\t\t\tisReadOnly());\r", "-\t\tbuf.addBufferChangedListener(this);\r", "-\t\treturn buf;\r", "+ */\r", "+protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException {\r", "+\tICompilationUnit original= (ICompilationUnit)this.getOriginalElement();\r", "+\tIBuffer buf= getBufferManager().openBuffer((char[])original.getBuffer().getCharacters().clone(), pm, this, isReadOnly());\r", "+\tbuf.addBufferChangedListener(this);\r", "+\treturn buf;\t\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c4d8df97108a1fbfb61bd157f39de2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "03ee5c38fd4d601946d660a37b84397301d2b02e", "commitAfterChange": "25380b7a0e1892900b0928d3d75c0bd4972b9e4b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["+\r", "+\tIBuffer buffer;\r", "+\t\r", "+\t// request buffer factory\r", "+\tif (this.bufferFactory != null) {\r", "+\t\tbuffer = this.bufferFactory.createBuffer(this);\r", "+\t\tif (buffer != null){\r", "+\t\t\tCompilationUnit original = (CompilationUnit) getOriginalElement();\r", "+\t\t\tbuffer.setContents(original.getContents());\r", "+\t\t\tbuffer.addBufferChangedListener(this);\r", "+\t\t\treturn buffer;\r", "+\t\t}\r", "+\t} \r", "+\t// create default buffer\r", "-\tIBuffer buf= getBufferManager().openBuffer((char[])original.getBuffer().getCharacters().clone(), pm, this, isReadOnly());\r", "-\tbuf.addBufferChangedListener(this);\r", "-\treturn buf;\t\r", "+\tbuffer = getBufferManager().openBuffer((char[])original.getBuffer().getCharacters().clone(), pm, this, isReadOnly());\r", "+\tbuffer.addBufferChangedListener(this);\r", "+\treturn buffer;\t\r"]}], "num": 8363}