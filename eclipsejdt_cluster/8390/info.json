{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e68b4888bfd52368e8053c14f216f0b6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f140799a63ff50f0a116c43784212a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "a36dd75e73956716f89f32428543909e26b9a682", "commitAfterChange": "c2862088078b3d0bc7ba3af4b4865ffe4ca72da7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isSecondaryType) throws CoreException", "signatureAfterChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isSecondaryType) throws CoreException", "diff": ["+\t\t\tif (!file.isDerived())", "+\t\t\t\tfile.setDerived(true);", "-\t\tsuper.writeClassFileBytes(bytes, file, qualifiedFileName, isSecondaryType);", "+\t\tif (JavaBuilder.DEBUG)", "+\t\t\tSystem.out.println(\"Writing new class file \" + file.getName());//$NON-NLS-1$", "+\t\tfile.create(new ByteArrayInputStream(bytes), IResource.FORCE, null);", "+\t\tfile.setDerived(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93c770e0ab9b4bbf211b80485a3ce886", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "758f55a5a64497d7398f91effe575e974d834411", "commitAfterChange": "a920298c522cfd65cad97a6c929cd34516c3baed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected void processElement(IJavaElement element) throws JavaModelException", "signatureAfterChange": "\r protected void processElement(IJavaElement element) throws JavaModelException", "diff": ["-\tIDOMCompilationUnit cuDOM = fFactory.createCompilationUnit(cu.getBuffer().getCharacters(), cu.getElementName());\r", "+\tIBuffer buffer = cu.getBuffer();\r", "-\tfor (int i = 0; i < cuElements.length; i++) {\r", "+\tfor (int i = 0, length = cuElements.length; i < length; i++) {\r", "-\t\t\tIDOMNode node = ((JavaElement) e).findNode(cuDOM);\r", "+\t\t\tIDOMCompilationUnit cuDOM = fFactory.createCompilationUnit(buffer.getCharacters(), cu.getElementName());\r", "+\t\t\tDOMNode node = (DOMNode)((JavaElement) e).findNode(cuDOM);\r", "-\t\t\tnode.remove();\r", "+\t\t\tint startPosition = node.getStartPosition();\r", "+\t\t\tbuffer.replace(startPosition, node.getEndPosition() - startPosition + 1, NO_CHAR);\r", "-\t\tcommitChanges(cuDOM, cu);\r", "-\t\tif (!cu.isWorkingCopy()) { // if unit is working copy, then commit will have already fired the delta\r", "+\t\tcu.save(getSubProgressMonitor(1), fForce);\r", "+\t\tif (!cu.isWorkingCopy()) { // if unit is working copy, then save will have already fired the delta\r", "+\t\t\tthis.hasModifiedResource = true;\r"]}], "num": 8390}