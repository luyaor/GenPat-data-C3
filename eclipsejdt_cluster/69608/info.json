{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9981ca1fcf339369fd27fcc2acfb86a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af6b4090df01adc1e3692cd1ea0c6d2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "b8f31731e75965ced53a2b2bb7747f2f3f0bdc77", "commitAfterChange": "90b243491d35267d13bcf8f4b3b622ed87af2ae7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void testBinary08b()", "signatureAfterChange": " \tpublic void testBinary08b()", "diff": ["-\t\t\t\t\t\"\t\tjava.lang.Object @NonNull[][] a = new java.lang.Object[0][]; // unsafe\\n\" +", "+\t\t\t\t\t\"\t\tjava.lang.Object @NonNull[][] a = new java.lang.Object[0][]; // safe: new is never null\\n\" +", "-\t\t\t\t\"1. WARNING in Y1.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tjava.lang.Object @NonNull[][] a = new java.lang.Object[0][]; // unsafe\\n\" + ", "-\t\t\t\t\"\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Null type safety (type annotations): The expression of type \\'Object[][]\\' needs unchecked conversion to conform to \\'Object @NonNull[] []\\'\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in Y1.java (at line 7)\\n\" + ", "+\t\t\t\t\"1. ERROR in Y1.java (at line 7)\\n\" + ", "-\t\t\t\t\"3. ERROR in Y1.java (at line 8)\\n\" + ", "+\t\t\t\t\"2. ERROR in Y1.java (at line 8)\\n\" + ", "-\t\t\t\t\"4. ERROR in Y1.java (at line 11)\\n\" + ", "+\t\t\t\t\"3. ERROR in Y1.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0aaa7de0d5dfdf28bba76529abf6cb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "b8f31731e75965ced53a2b2bb7747f2f3f0bdc77", "commitAfterChange": "90b243491d35267d13bcf8f4b3b622ed87af2ae7", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void testBinary08()", "signatureAfterChange": " \tpublic void testBinary08()", "diff": ["-\t\t\t\t\t\"\t\tObject @NonNull[][] a = new Object[0][]; // unsafe\\n\" +", "+\t\t\t\t\t\"\t\tObject @NonNull[][] a = new Object[0][]; // safe: new is never null\\n\" +", "-\t\t\t\t\"1. WARNING in Y1.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tObject @NonNull[][] a = new Object[0][]; // unsafe\\n\" + ", "-\t\t\t\t\"\t                        ^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Null type safety (type annotations): The expression of type \\'Object[][]\\' needs unchecked conversion to conform to \\'Object @NonNull[] []\\'\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in Y1.java (at line 7)\\n\" + ", "+\t\t\t\t\"1. ERROR in Y1.java (at line 7)\\n\" + ", "-\t\t\t\t\"3. ERROR in Y1.java (at line 8)\\n\" + ", "+\t\t\t\t\"2. ERROR in Y1.java (at line 8)\\n\" + ", "-\t\t\t\t\"4. ERROR in Y1.java (at line 11)\\n\" + ", "+\t\t\t\t\"3. ERROR in Y1.java (at line 11)\\n\" + "]}], "num": 69608}