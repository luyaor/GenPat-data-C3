{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bb0b991328df2757ff151e60e6ecb6e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42a3985fbe399cd9942e776d3df632ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "19eef6f26c48016adc4a14301bf3da3ca0ccecb1", "commitAfterChange": "650839ed308774b6702bdf04023742a308aab499", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  private boolean hasStructuralAnnotationChanges(IBinaryAnnotation[] currentAnnotations, IBinaryAnnotation[] otherAnnotations)", "signatureAfterChange": "  private boolean hasStructuralAnnotationChanges(IBinaryAnnotation[] currentAnnotations, IBinaryAnnotation[] otherAnnotations)", "diff": ["-\t\t\tif (!currentPairs[j].getValue().equals(otherPairs[j].getValue()))", "+\t\t\tfinal Object value = currentPairs[j].getValue();", "+\t\t\tfinal Object value2 = otherPairs[j].getValue();", "+\t\t\tif (value instanceof Object[]) {", "+\t\t\t\tObject[] currentValues = (Object[]) value;", "+\t\t\t\tif (value2 instanceof Object[]) {", "+\t\t\t\t\tObject[] currentValues2 = (Object[]) value2;", "+\t\t\t\t\tfinal int length = currentValues.length;", "+\t\t\t\t\tif (length != currentValues2.length) {", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (int n = 0; n < length; n++) {", "+\t\t\t\t\t\tif (!currentValues[n].equals(currentValues2[n])) {", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t} else if (!value.equals(value2)) {", "+\t\t\t\treturn true;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75962434b1786cf5d4fd8df604148d35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePairBinding.java", "commitBeforeChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "commitAfterChange": "7109b1b8695adc90efc89b381fbef11f66adc5d7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic boolean isEqualTo(IBinding binding)", "signatureAfterChange": "  \tpublic boolean isEqualTo(IBinding binding)", "diff": ["-\t\tif (!getMethodBinding().isEqualTo(other.getMethodBinding()))", "+\t\tif (!getMethodBinding().isEqualTo(other.getMethodBinding())) {", "-\t\tif (this.value == null)", "-\t\t\treturn other.getValue() == null;", "-\t\treturn this.value.equals(other.getValue());", "+\t\t}", "+\t\tObject otherValue = other.getValue();", "+\t\tObject currentValue = getValue();", "+\t\tif (currentValue == null) {", "+\t\t\treturn otherValue == null;", "+\t\t}", "+\t\tif (currentValue instanceof IBinding) {", "+\t\t\tif (otherValue instanceof IBinding) {", "+\t\t\t\treturn ((IBinding) currentValue).isEqualTo((IBinding) otherValue);", "+\t\t\t}", "+\t\t\treturn false;", "+\t\t}", "+\t\treturn currentValue.equals(otherValue);"]}], "num": 12829}