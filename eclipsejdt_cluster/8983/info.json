{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c11e3b08806ee5b8fcf00b5c2bcf9cfa", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58f3795d99cc3545696bfedd92c7bd81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": " public void testBug317039_njl()", "signatureAfterChange": " public void testBug317039_njl()", "diff": ["-\t\t\"public class X01\\n\" + ", "-\t\t\"{\\n\" + ", "+\t\t\"public class X01 {\\n\" + ", "-\t\t\"\tpublic void innerThread()\\n\" + ", "-\t\t\"\t{\\n\" + ", "+\t\t\"\tpublic void innerThread() {\\n\" + ", "-\t\t\"\t\tnew Thread(new Runnable()\\n\" + ", "-\t\t\"\t\t{\\n\" + ", "+\t\t\"\t\tnew Thread(new Runnable() {\\n\" + ", "-\t\t\"\t\t\tpublic void run()\\n\" + ", "-\t\t\"\t\t\t{\\n\" + ", "+\t\t\"\t\t\tpublic void run() {\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881fb6df63f5483fbf3cf004c4ba7717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": " public void testBug317039_njl()", "signatureAfterChange": " public void testBug317039_njl()", "diff": ["-\t\t\"public class X01\\n\" + ", "-\t\t\"{\\n\" + ", "+\t\t\"public class X01 {\\n\" + ", "-\t\t\"\tpublic void innerThread()\\n\" + ", "-\t\t\"\t{\\n\" + ", "+\t\t\"\tpublic void innerThread() {\\n\" + ", "-\t\t\"\t\tnew Thread(new Runnable()\\n\" + ", "-\t\t\"\t\t{\\n\" + ", "+\t\t\"\t\tnew Thread(new Runnable() {\\n\" + ", "-\t\t\"\t\t\tpublic void run()\\n\" + ", "-\t\t\"\t\t\t{\\n\" + ", "+\t\t\"\t\t\tpublic void run() {\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87536cdaf00eedc402f24cfe99e0389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "8a281cea306104e13dc5d8e2e915592f13b4b03f", "commitAfterChange": "4f6e7772e1eab66068e8d31851a8e395b8beb754", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void test027()", "signatureAfterChange": " public void test027()", "diff": ["-\t\t\t\"      System.out.println(\\\"No return\\\");\\n\" + ", "-\t\t\t\"    }; // Error: Lambda block should return value\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\t       ^^^^^\\n\" + ", "-\t\t\t\"      if (Math.random() < 0.5) return 42;\\n\" + ", "-\t\t\t\"    }; // Error: Lambda block doesn\\'t always return a value\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\t       ^^^^^\\n\" + "]}], "num": 8983}