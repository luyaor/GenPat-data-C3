{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f37df350a2ac4b68231f33a377b52db", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08961d94bfe714ff85de32687150b2a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "59e26d7d44dd6102df4b7a4747425328bf55da24", "commitAfterChange": "74b7e9bbbee0eebec4c9550b37cb671ca5d91239", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic String[] projectPrerequisites(IClasspathEntry[] entries) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic String[] projectPrerequisites(IClasspathEntry[] resolvedClasspath) \t\tthrows JavaModelException", "diff": ["-\tpublic String[] projectPrerequisites(IClasspathEntry[] entries)", "+\tpublic String[] projectPrerequisites(IClasspathEntry[] resolvedClasspath)", "-\t\t// need resolution", "-\t\tentries = resolveClasspath(entries);", "-\t\tfor (int i = 0, length = entries.length; i < length; i++) {", "-\t\t\tIClasspathEntry entry = entries[i];", "+\t\tfor (int i = 0, length = resolvedClasspath.length; i < length; i++) {", "+\t\t\tIClasspathEntry entry = resolvedClasspath[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10bfc98a435f0f56bdd2c255c2c6d29e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "commitAfterChange": "709c0464f2b2104283b8df19cdcd96bebc63e551", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\tfor (int i = length; --i >= 0;)\t\t// Remember that only one of the methods can be non-abstract\r", "-\t\tif (!methods[i].isAbstract()) {\r", "-\t\t\tconcreteMethod = methods[i];\r", "-\t\t\tbreak;\r", "-\t\t}\r", "+\tif (!type.isInterface()){ // ignore concrete methods for interfaces\r", "+\t\tfor (int i = length; --i >= 0;)\t\t// Remember that only one of the methods can be non-abstract\r", "+\t\t\tif (!methods[i].isAbstract()) {\r", "+\t\t\t\tconcreteMethod = methods[i];\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f9a25cd478d4b2072f3c6c2d9e57a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibrary.java", "commitBeforeChange": "2fdac50d0a994a41e3b73d3202a0de983b014e1d", "commitAfterChange": "5291cd66203d5d42725b1c4b5cba50a5232bc244", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  String serialize() throws IOException", "signatureAfterChange": " \t \tpublic static String serialize(IClasspathEntry[] entries, boolean isSystemLibrary) throws IOException", "diff": ["-\t/* package */  String serialize() throws IOException {", "+\tpublic static String serialize(IClasspathEntry[] entries, boolean isSystemLibrary) throws IOException {", "-\t\tlibrary.put(TAG_SYSTEMLIBRARY, String.valueOf(this.isSystemLibrary));", "+\t\tlibrary.put(TAG_SYSTEMLIBRARY, String.valueOf(isSystemLibrary));", "-\t\tfor (int i = 0; i < this.entries.length; ++i) {", "-\t\t\tClasspathEntry cpEntry = (ClasspathEntry) this.entries[i];", "+\t\tfor (int i = 0, length = entries.length; i < length; ++i) {", "+\t\t\tClasspathEntry cpEntry = (ClasspathEntry) entries[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9eefdd5510056a83b3ce63d1b7ad86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void cleanup()", "signatureAfterChange": "  public void cleanup()", "diff": ["-\tfor (int i = 0, length = classpathLocations.length; i < length; i++)", "-\t\tclasspathLocations[i].cleanup();", "+\tthis.initialTypeNames = null;", "+\tthis.additionalUnits = null;", "+\tfor (int i = 0, l = sourceLocations.length; i < l; i++)", "+\t\tsourceLocations[i].cleanup();", "+\tfor (int i = 0, l = binaryLocations.length; i < l; i++)", "+\t\tbinaryLocations[i].cleanup();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304fd6c6e7607dae876693e72f0193c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\tfor (int i = length; --i >= 0;)", "-\t\tif (!currentMethod.isStatic() && !methods[i].isStatic())", "-\t\t\tcheckNullSpecInheritance(currentMethod, methods[i]);", "+\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\tfor (int i = length; --i >= 0;)", "+\t\t\tif (!currentMethod.isStatic() && !methods[i].isStatic())", "+\t\t\t\tcheckNullSpecInheritance(currentMethod, methods[i]);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49733b950f8c1d019db2e335fc75638e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public MethodBinding[] getDefaultAbstractMethods()", "signatureAfterChange": " public MethodBinding[] getDefaultAbstractMethods()", "diff": ["-\tfor (int i = methods.length; --i >= 0;)", "-\t\tif (methods[i].isDefaultAbstract())", "+\tfor (int i = this.methods.length; --i >= 0;)", "+\t\tif (this.methods[i].isDefaultAbstract())", "-\tfor (int i = methods.length; --i >= 0;)", "-\t\tif (methods[i].isDefaultAbstract())", "-\t\t\tresult[count++] = methods[i];", "+\tfor (int i = this.methods.length; --i >= 0;)", "+\t\tif (this.methods[i].isDefaultAbstract())", "+\t\t\tresult[count++] = this.methods[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "672a2333bbab9ed6354ca09621de14b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void setNames(String[] initialTypeNames, String[] additionalSourceFilenames)", "signatureAfterChange": "  void setNames(String[] initialTypeNames, SourceFile[] additionalUnits)", "diff": ["-public void setNames(String[] initialTypeNames, String[] additionalSourceFilenames) {", "+void setNames(String[] initialTypeNames, SourceFile[] additionalUnits) {", "-\tthis.additionalSourceFilenames = additionalSourceFilenames;", "-\tfor (int i = 0, length = classpathLocations.length; i < length; i++)", "-\t\tclasspathLocations[i].reset();", "-}", "+\tthis.additionalUnits = additionalUnits;", "+\tfor (int i = 0, l = sourceLocations.length; i < l; i++)", "+\t\tsourceLocations[i].reset();", "+\tfor (int i = 0, l = binaryLocations.length; i < l; i++)", "+\t\tbinaryLocations[i].reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d84efbe84ecdf832047c46b8865fb6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public boolean isPackage(String qualifiedPackageName)", "signatureAfterChange": "  public boolean isPackage(String qualifiedPackageName)", "diff": ["-\tif (sourceLocations != null && sourceLocations[0].isPackage(qualifiedPackageName)) // looks in common output folder", "-\t\treturn true;", "-\tfor (int i = 0, length = binaryLocations.length; i < length; i++)", "+\t// NOTE: the output folders are added at the beginning of the binaryLocations", "+\tfor (int i = 0, l = binaryLocations.length; i < l; i++)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a0596f5536e1480f42beddc621603f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public boolean isPackage(char[][] compoundName, char[] packageName)", "signatureAfterChange": " public boolean isPackage(char[][] compoundName, char[] packageName)", "diff": ["-\t\tfor (int i = 0, length = classpaths.length; i < length; i++)", "-\t\t\tif (classpaths[i].isPackage(qualifiedPackageName))", "+\t\tfor (int i = 0, length = this.classpaths.length; i < length; i++)", "+\t\t\tif (this.classpaths[i].isPackage(qualifiedPackageName))", "-\t\tfor (int i = 0, length = classpaths.length; i < length; i++) {", "-\t\t\tClasspath p = classpaths[i];", "+\t\tfor (int i = 0, length = this.classpaths.length; i < length; i++) {", "+\t\t\tClasspath p = this.classpaths[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95caa0f094b473d935b6ea048821961a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "271465295a401e208d499e6a14f11fecd139ddfc", "commitAfterChange": "8394b5aa932f78127800d1291288973d8e3754d0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private void deletePackageFragment(IPackageFragment frag)\r \tthrows JavaModelException", "signatureAfterChange": "\r private void deletePackageFragment(IPackageFragment frag)\r \tthrows JavaModelException", "diff": ["-\t\tIResource[] remaingFiles;\r", "+\t\tIResource[] remainingFiles;\r", "-\t\t\tremaingFiles = ((IFolder) res).members();\r", "+\t\t\tremainingFiles = ((IFolder) res).members();\r", "-\t\tfor (int i = 0, length = remaingFiles.length; i < length; i++) {\r", "-\t\t\tIResource file = remaingFiles[i];\r", "+\t\tfor (int i = 0, length = remainingFiles.length; i < length; i++) {\r", "+\t\t\tIResource file = remainingFiles[i];\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b3b01d9e6ba63cbfba39c036f639a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/NameEnvironment.java", "commitBeforeChange": "d96668833851c6888b2777029dd7fc07b93f263f", "commitAfterChange": "65444f6bbda189372ebbf90cb8f83272733c23ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void initialTypeNames(String[] initialTypeNames)", "signatureAfterChange": "\r \r void setNames(String[] initialTypeNames, String[] additionalSourceFilenames)", "diff": ["-\r", "-void initialTypeNames(String[] initialTypeNames) {\r", "-\t// assumed that each typeName is of the form a/b/ClassName\r", "-\tthis.initialTypeNames = initialTypeNames;\r", "+\r", "+void setNames(String[] initialTypeNames, String[] additionalSourceFilenames) {\r", "+\tthis.initialTypeNames = initialTypeNames;\r", "+\tthis.additionalSourceFilenames = additionalSourceFilenames;\r", "+\tfor (int i = 0, length = classpathLocations.length; i < length; i++) {\r", "+\t\tClasspathLocation classpath = classpathLocations[i];\r", "+\t\tclasspath.reset();\r", "+\t\tif (classpath instanceof ClasspathMultiDirectory)\r", "+\t\t\t((ClasspathMultiDirectory) classpath).nameEnvironment = this;\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d283222c09564cdcc68ff900ca44987f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "ccba397e4e9d73802c009a4349e321c86584df94", "commitAfterChange": "cec508cecafb7942c9eac67dcd1f12c464401c60", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r public boolean isPackage(char[][] compoundName, char[] packageName)", "signatureAfterChange": "\r \r public boolean isPackage(char[][] compoundName, char[] packageName)", "diff": ["-\tfor (int i = 0, length = classpathLocations.length; i < length; i++)\r", "-\t\tif (classpathLocations[i].isPackage(qualifiedPackageName))\r", "+\tif (sourceLocations != null && sourceLocations[0].isPackage(qualifiedPackageName)) // looks in common output folder\r", "+\t\treturn true;\r", "+\tfor (int i = 0, length = binaryLocations.length; i < length; i++)\r", "+\t\tif (binaryLocations[i].isPackage(qualifiedPackageName))\r"]}], "num": 2542}