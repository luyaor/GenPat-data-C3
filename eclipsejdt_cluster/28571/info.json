{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0989e949a67cc02c1e15b17d8510857c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f909419ea1b787e96e7719c915d22b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "bac5e09b7e449bfdc1cd9a722413f4250eeb1e23", "commitAfterChange": "97e6eff65e04dce7acb3a4b10558d6e9ea7e0a37", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private boolean checkStandardAnnotations(long annotationTagBits, TypeReferencePattern pattern)", "signatureAfterChange": " private boolean checkStandardAnnotations(long annotationTagBits, TypeReferencePattern pattern)", "diff": ["+\tif ((annotationTagBits & TagBits.AnnotationPostConstruct) != 0) {", "+\t\tchar[][] compoundName = TypeConstants.JAVAX_ANNOTATION_POSTCONSTRUCT;", "+\t\tif (checkAnnotationTypeReference(CharOperation.concatWith(compoundName, '.'), pattern)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}", "+\tif ((annotationTagBits & TagBits.AnnotationPreDestroy) != 0) {", "+\t\tchar[][] compoundName = TypeConstants.JAVAX_ANNOTATION_PREDESTROY;", "+\t\tif (checkAnnotationTypeReference(CharOperation.concatWith(compoundName, '.'), pattern)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a183d4f21b2fc367b8ba2b2c2ccf82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private boolean checkStandardAnnotations(long annotationTagBits, TypeReferencePattern pattern)", "signatureAfterChange": " private boolean checkStandardAnnotations(long annotationTagBits, TypeReferencePattern pattern)", "diff": ["+\tif ((annotationTagBits & TagBits.AnnotationSafeVarargs) != 0) {", "+\t\tchar[][] compoundName = TypeConstants.JAVA_LANG_SAFEVARARGS;", "+\t\tif (checkAnnotationTypeReference(CharOperation.concatWith(compoundName, '.'), pattern)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}", "+\tif ((annotationTagBits & TagBits.AnnotationPolymorphicSignature) != 0) {", "+\t\tchar[][] compoundName = TypeConstants.JAVA_LANG_INVOKE_METHODHANDLE_$_POLYMORPHICSIGNATURE;", "+\t\tif (checkAnnotationTypeReference(CharOperation.concatWith(compoundName, '.'), pattern)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}"]}], "num": 28571}