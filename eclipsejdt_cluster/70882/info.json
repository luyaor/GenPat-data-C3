{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "260a841d35b75ab4cb8753102affb0ea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c06f0f436511ad89cbe0d629810890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "af9e503bc6f228fcf4e9d4d7aca18d4c72381d5c", "commitAfterChange": "1181734000bc58166717f28b96a50ec09d7eb3ed", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \tpublic SourceRange getNameRange(IJavaElement element)", "signatureAfterChange": "\r \tpublic SourceRange getNameRange(IJavaElement element)", "diff": ["-\t\tIJavaElement el = element;\r", "-\t\t\tel = getUnqualifiedMethodHandle((IMethod) element, false);\r", "-\t\t\tif(fSourceRanges.get(el) == null) {\r", "-\t\t\t\tel = getUnqualifiedMethodHandle((IMethod) element, true);\r", "+\t\t\tIJavaElement[] el = getUnqualifiedMethodHandle((IMethod) element, false);\r", "+\t\t\tif(el[1] != null && fSourceRanges.get(el[0]) == null) {\r", "+\t\t\t\telement = getUnqualifiedMethodHandle((IMethod) element, true)[0];\r", "+\t\t\t} else {\r", "+\t\t\t\telement = el[0];\r", "-\t\tSourceRange[] ranges = (SourceRange[]) fSourceRanges.get(el);\r", "+\t\tSourceRange[] ranges = (SourceRange[]) fSourceRanges.get(element);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92d16287e212e634865cd17cf8eaabc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "af9e503bc6f228fcf4e9d4d7aca18d4c72381d5c", "commitAfterChange": "1181734000bc58166717f28b96a50ec09d7eb3ed", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r \tpublic SourceRange getSourceRange(IJavaElement element)", "signatureAfterChange": "\r \tpublic SourceRange getSourceRange(IJavaElement element)", "diff": ["-\t\tIJavaElement el = element;\r", "-\t\t\tel = getUnqualifiedMethodHandle((IMethod) element, false);\r", "-\t\t\tif(fSourceRanges.get(el) == null) {\r", "-\t\t\t\tel = getUnqualifiedMethodHandle((IMethod) element, true);\r", "+\t\t\tIJavaElement[] el = getUnqualifiedMethodHandle((IMethod) element, false);\r", "+\t\t\tif(el[1] != null && fSourceRanges.get(el[0]) == null) {\r", "+\t\t\t\telement = getUnqualifiedMethodHandle((IMethod) element, true)[0];\r", "+\t\t\t} else {\r", "+\t\t\t\telement = el[0];\r", "-\t\tSourceRange[] ranges = (SourceRange[]) fSourceRanges.get(el);\r", "+\t\tSourceRange[] ranges = (SourceRange[]) fSourceRanges.get(element);\r"]}], "num": 70882}