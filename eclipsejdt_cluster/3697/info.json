{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bba717a5e4061329c3a07d7d9e335950", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f39ef43c9bfa037f68428f45c3b0dcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void test0021() throws JavaModelException", "signatureAfterChange": " public void test0021() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0021\", \"Test.java\");", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src3/test0021/Test.java\",", "+\t\t\"package test0021;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\t<T extends Z0021Z> void foo() {\\n\" +", "+\t\t\"\t\tthis.<Z0021>foo();\\n\" +", "+\t\t\"\t}\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0021Z {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0021ZZ {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\");", "-\tString str = cu.getSource();", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:Z0021Z    completion:Z0021Z    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:Z0021ZZ    completion:Z0021ZZ    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"Z0021Z[TYPE_REF]{Z0021Z, test0021, Ltest0021.Z0021Z;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"Z0021ZZ[TYPE_REF]{Z0021ZZ, test0021, Ltest0021.Z0021ZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a36c48fab60f5bbe80def73d4ddf7e61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "c9cd00a8dc1b877b2c5187fd0281ae7de37ff02a", "commitAfterChange": "4b3b23614cfca32dd53fa7e699914bb6d6883a79", "methodNumberBeforeChange": 606, "methodNumberAfterChange": 606, "signatureBeforeChange": " public void testCompletionAfterSupercall1() throws JavaModelException", "signatureAfterChange": " public void testCompletionAfterSupercall1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAfterSupercall1.java\");", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionAfterSupercall1.java\",", "+\t\t\"public class CompletionAfterSupercall1 extends CompletionAfterSupercall1_1 {\\n\" +", "+\t\t\"\tpublic void foo(){\\n\" +", "+\t\t\"\t\tsuper.foo\\n\" +", "+\t\t\"\t}\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"abstract class CompletionAfterSupercall1_1 extends CompletionAfterSupercall1_2 implements CompletionAfterSupercall1_3 {\\n\" +", "+\t\t\"\t\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class CompletionAfterSupercall1_2 implements CompletionAfterSupercall1_3 {\\n\" +", "+\t\t\"\tpublic void foo(){}\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"interface CompletionAfterSupercall1_3 {\\n\" +", "+\t\t\"\tpublic void foo();\\n\" +", "+\t\t\"}\");", "-\tString str = cu.getSource();", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tint cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(", "-\t\t\t\"element:foo    completion:foo()    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_STATIC+ R_NON_RESTRICTED),", "+\tassertResults(", "+\t\t\t\"foo[METHOD_REF]{foo(), LCompletionAfterSupercall1_2;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_STATIC+ R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf64589a6c4d4369aa221d8581c7961b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void test0027() throws JavaModelException", "signatureAfterChange": " public void test0027() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0027\", \"Test.java\");", "-\t", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src3/test0026/Test.java\",", "+\t\t\"package test0027;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\tZ0027<St, String>.Z0027Z.Z0027ZZ<String, String> var;\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0027 <T1, T2 extends String>{\\n\" +", "+\t\t\"\tpublic class Z0027Z {\\n\" +", "+\t\t\"\t\tpublic class Z0027ZZ <T3 extends String, T4 extends String>{\\n\" +", "+\t\t\"\t\t\t\\n\" +", "+\t\t\"\t\t}\\n\" +", "+\t\t\"\t} \\n\" +", "+\t\t\"}\");", "+", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:String    completion:String    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());", "+\t", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5111b7ec3c6928c1813225dbbadd1fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void test0026() throws JavaModelException", "signatureAfterChange": " public void test0026() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0026\", \"Test.java\");", "-\t", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src3/test0026/Test.java\",", "+\t\t\"package test0026;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\tZ0026<String, String>.Z0026Z.Z0026ZZ<St, String> var;\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0026 <T1 extends String, T2 extends String>{\\n\" +", "+\t\t\"\tpublic class Z0026Z {\\n\" +", "+\t\t\"\t\tpublic class Z0026ZZ <T3, T4 extends String>{\\n\" +", "+\t\t\"\t\t\t\\n\" +", "+\t\t\"\t\t}\\n\" +", "+\t\t\"\t} \\n\" +", "+\t\t\"}\");", "+", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:String    completion:String    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());"]}], "num": 3697}