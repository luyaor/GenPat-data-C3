{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dcc439113c2efb42ec32bacdf79425c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b122ef5d3a216e35b2c74e7e8d5f283", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void markAsComparedEqualToNonNull(VariableBinding local)", "signatureAfterChange": " public void markAsComparedEqualToNonNull(LocalVariableBinding local)", "diff": ["-public void markAsComparedEqualToNonNull(VariableBinding local) {", "+public void markAsComparedEqualToNonNull(LocalVariableBinding local) {", "-\t\tif (local instanceof FieldBinding) {", "-\t\t\tif ((local.modifiers & AccConstant) == AccConstant) {", "-\t\t\t\tposition = local.getAnalysisId(this.maxFieldCount);", "-\t\t\t} else {", "-\t\t\t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "-\t\t\t\t// definite nullness. Hence, marking as definitely unknown to avoid deferring null check for these fields", "-\t\t\t\tthis.markAsDefinitelyUnknown(local);", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tposition = local.id + this.maxFieldCount;", "-\t\t}", "-\t\tif (position < BitCacheSize) {", "+\t\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cd347b3dac71f48f0c60aada634c785", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void markAsDefinitelyNonNull(VariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "diff": ["-public void markAsDefinitelyNonNull(VariableBinding local) {", "+", "+public void markAsDefinitelyNonNull(LocalVariableBinding local) {", "-    \tif (local instanceof FieldBinding) {", "-\t\t\tif ((local.modifiers & AccConstant) == AccConstant) {", "-\t\t\t\tposition = local.getAnalysisId(this.maxFieldCount);", "-\t\t\t} else {", "-\t    \t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "-\t    \t\t// definite nullness. Hence, marking as definitely unknown to avoid deferring null check for these fields.", "-\t    \t\tthis.markAsDefinitelyUnknown(local);", "-\t    \t\treturn;", "-\t\t\t}", "-    \t} else {", "-    \t\tposition = local.id + this.maxFieldCount;", "-    \t}", "-    \tif (position < BitCacheSize) { // use bits", "+    \tif ((position = local.id + this.maxFieldCount) < BitCacheSize) { // use bits"]}], "num": 62258}