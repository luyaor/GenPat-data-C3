{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4541a1fb560f6ec40df4b6ba703f73df", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb8fc92a8d5f93ea828c76d5456ae88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "commitAfterChange": "0aa46ff32860f090b1c2b435d909e18926d63ea4", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " private void updateRoots(IPath containerPath, IResourceDelta containerDelta)", "signatureAfterChange": " private void updateRoots(IPath containerPath, IResourceDelta containerDelta)", "diff": ["-\tMap roots;", "-\tMap otherRoots;", "+\tMap updatedRoots;", "+\tMap otherUpdatedRoots;", "-\t\troots = this.oldRoots;", "-\t\totherRoots = this.oldOtherRoots;", "+\t\tupdatedRoots = this.oldRoots;", "+\t\totherUpdatedRoots = this.oldOtherRoots;", "-\t\troots = this.roots;", "-\t\totherRoots = this.otherRoots;", "+\t\tupdatedRoots = this.roots;", "+\t\totherUpdatedRoots = this.otherRoots;", "-\tIterator iterator = roots.keySet().iterator();", "+\tIterator iterator = updatedRoots.keySet().iterator();", "-\t\t\tRootInfo rootInfo = (RootInfo)roots.get(path);", "+\t\t\tRootInfo rootInfo = (RootInfo)updatedRoots.get(path);", "-\t\t\tArrayList rootList = (ArrayList)otherRoots.get(path);", "+\t\t\tArrayList rootList = (ArrayList)otherUpdatedRoots.get(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc330bcb2df9bb5f7b1f628b0cd1e9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public synchronized void aboutToUpdateIndex(IPath path, Integer newIndexState)", "signatureAfterChange": "  public synchronized void aboutToUpdateIndex(IPath containerPath, Integer newIndexState)", "diff": ["-public synchronized void aboutToUpdateIndex(IPath path, Integer newIndexState) {", "+public synchronized void aboutToUpdateIndex(IPath containerPath, Integer newIndexState) {", "-\tString indexName = computeIndexName(path);", "-\tObject state = getIndexStates().get(indexName);", "+\tString indexLocation = computeIndexLocation(containerPath);", "+\tObject state = getIndexStates().get(indexLocation);", "-\t\tupdateIndexState(indexName, newIndexState);", "-\t} else if (compare < 0 && this.indexes.get(path) == null) {", "+\t\tupdateIndexState(indexLocation, newIndexState);", "+\t} else if (compare < 0 && this.indexes.get(indexLocation) == null) {", "-\t\trebuildIndex(indexName, path);", "+\t\trebuildIndex(indexLocation, containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8ea3fc3da19f01747d1e23ed9035d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " private synchronized void updateIndexState(String indexName, Integer indexState)", "signatureAfterChange": " private synchronized void updateIndexState(String indexLocation, Integer indexState)", "diff": ["-private synchronized void updateIndexState(String indexName, Integer indexState) {", "+private synchronized void updateIndexState(String indexLocation, Integer indexState) {", "-\t\tif (indexState.equals(indexStates.get(indexName))) return; // not changed", "-\t\tindexStates.put(indexName, indexState);", "+\t\tif (indexState.equals(indexStates.get(indexLocation))) return; // not changed", "+\t\tindexStates.put(indexLocation, indexState);", "-\t\tif (!indexStates.containsKey(indexName)) return; // did not exist anyway", "-\t\tindexStates.removeKey(indexName);", "+\t\tif (!indexStates.containsKey(indexLocation)) return; // did not exist anyway", "+\t\tindexStates.removeKey(indexLocation);", "-\t\tUtil.verbose(\"-> index state updated to: \" + state + \" for: \"+indexName); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tUtil.verbose(\"-> index state updated to: \" + state + \" for: \"+indexLocation); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 12038}