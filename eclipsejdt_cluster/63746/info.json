{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "deae41fa3375d521a477870ad326cecf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5975edf01e7676a0059ef401bcfdee61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a689ad07ca8ba338d705bde61cab6ba7c1398518", "commitAfterChange": "f8069544c2b2660f8b2415856be61642ab9369f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\t\tReferenceBinding[] defaultHandledExceptions = new ReferenceBinding[] { scope.getJavaLangThrowable()}; // tolerate any kind of exception", "-\t\t\t// propagate down the max field count", "-\t\t\tupdateMaxFieldCount();", "-\t\t\tFlowInfo fieldInfo = flowInfo.copy();", "-\t\t\t// so as not to propagate changes outside this type", "+\t\t\t", "+\t\t\tupdateMaxFieldCount(); // propagate down the max field count", "+\t\t\tFlowInfo fieldInfo = flowInfo.copy(); // so as not to propagate changes outside this type", "-\t\t\t\t\tfieldInfo =", "-\t\t\t\t\t\tfields[i].analyseCode(initializerScope, initializerContext, fieldInfo);", "+\t\t\t\t\tFieldDeclaration field = fields[i];", "+\t\t\t\t\tif (field.isField()){", "+\t\t\t\t\t\tinitializerContext.handledExceptions = NoExceptions; // no exception is allowed jls8.3.2", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tinitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\t}", "+\t\t\t\t\tfieldInfo = field.analyseCode(initializerScope, initializerContext, fieldInfo);", "-\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(fields[i]);", "+\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecf9c848ff6f08dbd930074de5fa6194", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a689ad07ca8ba338d705bde61cab6ba7c1398518", "commitAfterChange": "f8069544c2b2660f8b2415856be61642ab9369f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\t\tReferenceBinding[] defaultHandledExceptions = new ReferenceBinding[] { scope.getJavaLangThrowable()}; // tolerate any kind of exception", "-\t\t\t// propagate down the max field count", "-\t\t\tupdateMaxFieldCount();", "-\t\t\tFlowInfo fieldInfo = flowInfo.copy();", "-\t\t\t// so as not to propagate changes outside this type", "+", "+\t\t\tupdateMaxFieldCount(); // propagate down the max field count", "+\t\t\tFlowInfo fieldInfo = flowInfo.copy();// so as not to propagate changes outside this type", "+\t\t\t\t\tFieldDeclaration field = fields[i];", "+\t\t\t\t\tif (field.isField()){", "+\t\t\t\t\t\tinitializerContext.handledExceptions = NoExceptions; // no exception is allowed jls8.3.2", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tinitializerContext.handledExceptions = defaultHandledExceptions; // tolerate them all, and record them", "+\t\t\t\t\t}", "-\t\t\t\t\t\t\tfields[i].analyseCode(initializerScope, initializerContext, fieldInfo);", "+\t\t\t\t\t\t\tfield.analyseCode(initializerScope, initializerContext, fieldInfo);", "-\t\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(fields[i]);", "+\t\t\t\t\t\t\tinitializerScope.problemReporter().initializerMustCompleteNormally(field);"]}], "num": 63746}