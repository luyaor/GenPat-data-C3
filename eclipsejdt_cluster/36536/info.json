{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82ee3bc32e12cf4dc11c7d96d004901e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2702124d48585c33e4f45953c5e8d890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "3aeda49982d529a7b3b4520a8ddfc77c62e6f6ba", "commitAfterChange": "756bb6bed26516f6a7f37d505e2052383d6cc457", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tbinding = new LocalVariableBinding(this, exceptionType, modifiers, false); // argument decl, but local var  (where isArgument = false)", "+\t\tthis.binding = new LocalVariableBinding(this, exceptionType, modifiers, false); // argument decl, but local var  (where isArgument = false)", "+\t\tresolveAnnotations(scope, this.annotations, this.binding);", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcefd1f8a8e12296c3101a93856bd64f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "3aeda49982d529a7b3b4520a8ddfc77c62e6f6ba", "commitAfterChange": "756bb6bed26516f6a7f37d505e2052383d6cc457", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-", "-\t\t\tbinding = new LocalVariableBinding(this, variableType, modifiers, false);", "+\t\t\tthis.binding = new LocalVariableBinding(this, variableType, modifiers, false);", "-\t\t\tbinding.setConstant(NotAConstant);", "+\t\t\tthis.binding.setConstant(NotAConstant);", "+\t\t\t", "+\t\t\tresolveAnnotations(scope, this.annotations, this.binding);"]}], "num": 36536}