{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1ad99982aa7b93c6f0bbfad4bccf181", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "276a515034cc538fb4fb2aa28def26c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9b8ee75c11bad2c154d3b44975d2142fe2fb81ac", "commitAfterChange": "2ed5fda15ee0abbf21f67405514b53d77bc6ee3a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "signatureAfterChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "diff": ["+\t\t\tCaseStatement[] cases = switchStatement.cases;", "+\t\t\t", "+\t\t\tchar[][] alreadyUsedConstants = new char[switchStatement.caseCount][];", "+\t\t\tint alreadyUsedConstantCount = 0;", "+\t\t\tfor (int i = 0; i < switchStatement.caseCount; i++) {", "+\t\t\t\tif(cases[i].isEnumConstant) {", "+\t\t\t\t\talreadyUsedConstants[alreadyUsedConstantCount++] = ((SingleNameReference)cases[i].constantExpression).token;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0; i < alreadyUsedConstantCount; i++) {", "+\t\t\t\t\tif(CharOperation.equals(alreadyUsedConstants[i], completion)) continue next;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad5c4bff1d62276653dbeb2417354d02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a2b4555c72745b195a5db2cb0624ba6878ccc93", "commitAfterChange": "0e8a2b3bc15c38e29faaa2105eb6e0bbf7b15cd5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected IJavaElement createHandle(Annotation annotation, IAnnotatable parent)", "signatureAfterChange": " protected IJavaElement createHandle(Annotation annotation, IAnnotatable parent)", "diff": ["+\t\tif (parent instanceof LocalVariable) {", "+\t\t\tLocalVariable localVariable = (LocalVariable) parent;", "+\t\t\tIAnnotation[][] annotationsOnDimensions = localVariable.annotationsOnDimensions;", "+\t\t\tint noOfDimensions = annotationsOnDimensions == null ? 0 : annotationsOnDimensions.length;", "+\t\t\tfor (int i = 0; i < noOfDimensions; ++i) {", "+\t\t\t\tIAnnotation[] dimAnnotations = annotationsOnDimensions[i];", "+\t\t\t\tint noOfAnnotations = dimAnnotations.length;", "+\t\t\t\tfor (int j = 0; j < noOfAnnotations; ++j) {", "+\t\t\t\t\tif (dimAnnotations[j].getElementName().equals(name))", "+\t\t\t\t\t\treturn dimAnnotations[j];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 31273}