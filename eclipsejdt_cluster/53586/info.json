{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "594749707ced87487024060a4c1994e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a1f5a8813271e2122b975ee416aa7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\t// try to retrieve imports from the source\r", "-\t\t\tSourceMapper sourceMapper = ((ClassFile) declaringType.getClassFile()).getSourceMapper();\r", "-\t\t\tif (sourceMapper != null) {\r", "-\t\t\t\tchar[][] imports = sourceMapper.getImports((BinaryType) declaringType);\r", "-\t\t\t\tif (imports != null) {\r", "-\t\t\t\t\tthis.context.setImports(imports);\r", "-\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5ceb61427e4d701362a307f04f4b4ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\t// try to retrieve imports from the source\r", "-\t\t\tSourceMapper sourceMapper = ((ClassFile) declaringType.getClassFile()).getSourceMapper();\r", "-\t\t\tif (sourceMapper != null) {\r", "-\t\t\t\tchar[][] imports = sourceMapper.getImports((BinaryType) declaringType);\r", "-\t\t\t\tif (imports != null) {\r", "-\t\t\t\t\tthis.context.setImports(imports);\r", "-\t\t\t\t}\r"]}], "num": 53586}