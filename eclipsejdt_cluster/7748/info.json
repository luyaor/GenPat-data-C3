{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3ab96e3dc44799b5a4bce121f102e97", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "960d45deba2af278886b70417ab07953", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["+}", "+public char[] getContents() {", "+\tchar[] source = null;", "+\ttry {", "+\t\tif (this.openable instanceof CompilationUnit) {", "+\t\t\tif (((CompilationUnit) this.openable).isWorkingCopy()) {", "+\t\t\t\tIBuffer buffer = this.openable.getBuffer();", "+\t\t\t\tif (buffer == null) return null;", "+\t\t\t\tsource = buffer.getCharacters();", "+\t\t\t} else {", "+\t\t\t\tsource = Util.getResourceContentsAsCharArray((IFile) this.resource);", "+\t\t} else if (this.openable instanceof ClassFile) {", "+\t\t\t\tString fileName = getSourceFileName();", "+\t\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "+", "+\t\t\t\tIType type = ((ClassFile) this.openable).getType();", "+\t} catch (JavaModelException e) {", "-\tpublic char[] getContents() {", "-\t\tchar[] source = null;", "-\t\ttry {", "-\t\t\tif (this.openable instanceof CompilationUnit) {", "-\t\t\t\tif (((CompilationUnit)this.openable).isWorkingCopy()) {", "-\t\t\t\t\tIBuffer buffer = this.openable.getBuffer();", "-\t\t\t\t\tif (buffer == null) return null;", "-\t\t\t\t\tsource = buffer.getCharacters();", "-\t\t\t\t} else {", "-\t\t\t\t\tsource = Util.getResourceContentsAsCharArray((IFile)this.resource);", "-\t\t\t\t}", "-\t\t\t} else if (this.openable instanceof ClassFile) {", "-\t\t\t\tsource = findClassFileSource();", "-\t\t\t}", "-\t\t} catch (JavaModelException e) {", "-\t\t}", "-\t\tif (source == null) return CharOperation.NO_CHAR;", "-\t\treturn source;", "-\t}", "+\tif (source == null) return CharOperation.NO_CHAR;", "+\treturn source;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbc9330ac8534fee13cdef2d3625a404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "b17f0033873962e79cd540a0937b76249dec8a6c", "commitAfterChange": "360e136a8e044225071869fa38d7072ea1d3cdac", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void reportHierarchy()", "signatureAfterChange": " private void reportHierarchy()", "diff": ["+}", "+private void reportHierarchy() {", "+\t", "+\t// set focus type binding", "+\tIType focus = this.requestor.getType();", "+\tif (focus != null) {", "+\t\tMember declaringMember = ((Member)focus).getOuterMostLocalContext();", "+\t\tif (declaringMember == null) {", "+\t\t\t// top level or member type", "+\t\t\tchar[] fullyQualifiedName = focus.getFullyQualifiedName().toCharArray();", "+\t\t\tsetFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "-}", "-private void reportHierarchy() {"]}], "num": 7748}