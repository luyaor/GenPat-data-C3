{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4aaba003f11163796ca7b9007f7d6e92", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fecda3d91b39462a3600d127bdaf977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void optimizeBranch(int oldPosition, BranchLabel lbl)", "signatureAfterChange": " public void optimizeBranch(int oldPosition, BranchLabel lbl)", "diff": ["-    super.optimizeBranch(oldPosition, lbl);", "-    int frameIndex = this.frames.size() - 1;", "-    loop: while(frameIndex > 0) {", "-        StackMapFrame frame = (StackMapFrame) this.frames.get(frameIndex);", "-        if (frame.pc == oldPosition) {", "-            if (this.framePositions.remove(new Integer(oldPosition))) {", "-                this.framePositions.add(new Integer(this.position));", "-            }", "-            if (this.variablesModificationsPositions.remove(new Integer(oldPosition))) {", "-                this.variablesModificationsPositions.add(new Integer(this.position));", "-            }", "-            frame.pc = this.position;", "-            StackMapFrame previousFrame = (StackMapFrame) this.frames.get(frameIndex - 1);", "-            if (previousFrame.pc == this.position) {", "-                // remove the current frame", "-                this.frames.set(frameIndex - 1, frame);", "-                this.frames.remove(frameIndex);", "-            }", "-            break loop;", "-        } else if (frame.pc > oldPosition) {", "-            return;", "-        }", "-        frameIndex--;", "-    }", "+\tsuper.optimizeBranch(oldPosition, lbl);", "+\tthis.removeFramePosition(oldPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42aadef2a5d68126e4857d72a794cca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "4f833be4365ac5abb1ac0cf3973cd75cbb0d7487", "commitAfterChange": "227e3d5fec0001fbc06115e3f3e6f09f357952e2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "  protected void consumeLambdaExpression()", "signatureAfterChange": " protected void consumeExpressionStatement()", "diff": ["-", "-protected void consumeLambdaExpression() {", "-\t// LambdaExpression ::= LambdaHeader LambdaBody // Synthetic/fake production with a synthetic non-terminal.", "-\tthis.astLengthPtr--; \t// pop length for LambdaBody (always 1)", "-\tStatement body = (Statement) this.astStack[this.astPtr--];", "-\tif (body instanceof Block) {", "-\t\tthis.nestedType--; \t// matching NestedType in \"LambdaBody ::= NestedType NestedMethod  '{' BlockStatementsopt '}'\"", "-\t\tthis.intPtr--; \t\t// position after '{' pushed during consumeNestedMethod()", "-\t\tif (this.options.ignoreMethodBodies) {", "-\t\t\tbody = new Block(0);", "-\t\t}", "-\t}", "-\t", "-\tLambdaExpression lexp = (LambdaExpression) this.astStack[this.astPtr--];", "-\tthis.astLengthPtr--;", "-\tlexp.body = body;", "-\tlexp.sourceEnd = body.sourceEnd;", "-\t", "-\tif (body instanceof Expression) {", "-\t\tExpression expression = (Expression) body;", "-\t\texpression.statementEnd = body.sourceEnd;", "-\t}", "-\tif (this.currentElement != null) {", "-\t\tif (this.currentElement.parseTree() == lexp && this.currentElement.parent != null) {", "-\t\t\tthis.currentElement = this.currentElement.parent;", "-\t\t}", "-\t\tthis.restartRecovery = true;", "-\t}", "-\tif (!this.parsingJava8Plus) {", "-\t\tproblemReporter().lambdaExpressionsNotBelow18(lexp);", "-\t}", "+protected void consumeExpressionStatement() {", "+\tsuper.consumeExpressionStatement();", "+\ttriggerRecoveryUponLambdaClosure();"]}], "num": 17305}