{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d33d2b5b58154a1b4db69ca36286608b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3057d4f4875d37310fd4550759a1dc14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "de1a896ae0cf9cc7fdee8ce3aebee48242ef244b", "commitAfterChange": "38590129939501d58d89738289276afaa02e2706", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public boolean encloses(IJavaElement element)", "signatureAfterChange": "\r public boolean encloses(IJavaElement element)", "diff": ["-\treturn this.encloses(this.fullPath(element));\r", "+\tif (this.elements != null) {\r", "+\t\tfor (int i = 0, length = this.elements.size(); i < length; i++) {\r", "+\t\t\tIJavaElement scopeElement = (IJavaElement)this.elements.get(i);\r", "+\t\t\tIJavaElement searchedElement = element;\r", "+\t\t\twhile (searchedElement != null) {\r", "+\t\t\t\tif (searchedElement.equals(scopeElement)) {\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tsearchedElement = searchedElement.getParent();\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn false;\r", "+\t} else {\r", "+\t\treturn this.encloses(this.fullPath(element));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0b5a1160b80fd9df9627f39a9d9809a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "6cb578893ec8df3301813b91b9aa75bc55322335", "commitAfterChange": "37b5a4d412a9296a751dfd8a138d89e6847d062d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic boolean encloses(IJavaElement element)", "signatureAfterChange": "\r \tpublic boolean encloses(IJavaElement element)", "diff": ["+\t\tIType type = null;\r", "-\t\t\treturn fHierarchy.contains((IType) element);\r", "+\t\t\ttype = (IType) element;\r", "-\t\t\treturn fHierarchy.contains(((IMember) element).getDeclaringType());\r", "+\t\t\ttype = ((IMember) element).getDeclaringType();\r", "+\t\tif (type != null) {\r", "+\t\t\tif (fHierarchy.contains(type)) {\r", "+\t\t\t\treturn true;\r", "+\t\t\t} else {\r", "+\t\t\t\t// be flexible: look at original element (see bug 14106 Declarations in Hierarchy does not find declarations in hierarchy)\r", "+\t\t\t\tIType original;\r", "+\t\t\t\tif ((original = (IType)type.getCompilationUnit().getOriginal(type)) != null) {\r", "+\t\t\t\t\treturn fHierarchy.contains(original);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} \r"]}], "num": 18594}