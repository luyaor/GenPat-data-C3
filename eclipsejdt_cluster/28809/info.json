{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77046a9f2b7e49bd9896d24743b20c96", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0e773d99f381495ebde2c0e4949587", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "66795de95a9ab05cf2372441ab46f5926d87faa1", "commitAfterChange": "7a3cf6046caa199cc64d06c0c8cbff217ff8b6e8", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public SearchMatch newLocalVariableReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset, \t\tint length, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newLocalVariableReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset, \t\tint length, \t\tASTNode reference)", "diff": ["-\t\t\tif (!this.patternLocator.matchesName(((VariablePattern)this.pattern).name, lastToken)) {", "+\t\t\tif (this.pattern instanceof OrPattern) {", "+\t\t\t\tSearchPattern[] patterns = ((OrPattern) this.pattern).patterns;", "+\t\t\t\tfor (int i = 0, pLength = patterns.length; i < pLength; i++) {", "+\t\t\t\t\tif (!this.patternLocator.matchesName(((VariablePattern)patterns[i]).name, lastToken)) {", "+\t\t\t        \tisWriteAccess = false;", "+\t\t\t        \tisReadAccess = true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else if (!this.patternLocator.matchesName(((VariablePattern)this.pattern).name, lastToken)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc50ea2e721b6a180150629f39d0502", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "66795de95a9ab05cf2372441ab46f5926d87faa1", "commitAfterChange": "7a3cf6046caa199cc64d06c0c8cbff217ff8b6e8", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public FieldReferenceMatch newFieldReferenceMatch( \t\tIJavaElement enclosingElement, \t\tIJavaElement localElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset, \t\tint length, ASTNode reference)", "signatureAfterChange": "  public FieldReferenceMatch newFieldReferenceMatch( \t\tIJavaElement enclosingElement, \t\tIJavaElement localElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset, \t\tint length, ASTNode reference)", "diff": ["-\t\t\tif (!this.patternLocator.matchesName(((VariablePattern)this.pattern).name, lastToken)) {", "+\t\t\tif (this.pattern instanceof OrPattern) {", "+\t\t\t\tSearchPattern[] patterns = ((OrPattern) this.pattern).patterns;", "+\t\t\t\tfor (int i = 0, pLength = patterns.length; i < pLength; i++) {", "+\t\t\t\t\tif (!this.patternLocator.matchesName(((VariablePattern)patterns[i]).name, lastToken)) {", "+\t\t\t        \tisWriteAccess = false;", "+\t\t\t        \tisReadAccess = true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else if (!this.patternLocator.matchesName(((VariablePattern)this.pattern).name, lastToken)) {"]}], "num": 28809}