{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34f0c0d51ef0ab14ec127826b036077c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c9bee0b9164db99bf65d4b0d0bae6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void completeLocalTypes(TypeBinding binding)", "signatureAfterChange": "  \tprivate void completeLocalTypes(Binding binding)", "diff": ["-\tprivate void completeLocalTypes(TypeBinding binding){", "+\tprivate void completeLocalTypes(Binding binding){", "-\t\t\t\tReferenceBinding enclosingType = binding.enclosingType();", "+\t\t\t\tTypeBinding typeBinding = (TypeBinding) binding;", "+\t\t\t\tReferenceBinding enclosingType = typeBinding.enclosingType();", "+\t\t\tcase Binding.FIELD :", "+\t\t\t\tFieldBinding fieldBinding = (FieldBinding) binding;", "+\t\t\t\tthis.completeLocalTypes(fieldBinding.declaringClass);", "+\t\t\t\tthis.completeLocalTypes(fieldBinding.type);", "+\t\t\t\tbreak;\t", "+\t\t\tcase Binding.METHOD :", "+\t\t\t\tMethodBinding methodBinding = (MethodBinding) binding;", "+\t\t\t\tthis.completeLocalTypes(methodBinding.returnType);", "+\t\t\t\tTypeBinding[] parameters = methodBinding.parameters;", "+\t\t\t\tfor(int i = 0, max = parameters == null ? 0 : parameters.length; i < max; i++) {", "+\t\t\t\t\tthis.completeLocalTypes(parameters[i]);", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9760809754f9b7aefc25b560a2367545", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "3091564ff71d95ca83672941f8a4ec3464344683", "commitAfterChange": "ac6c2726bc9770d7575dff83ad9611f141165280", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\tReferenceBinding typeBinding = null;", "+\tboolean lastButOne = false;", "-\t\tReferenceBinding typeBinding = (ReferenceBinding) binding;", "+\t\ttypeBinding = (ReferenceBinding) binding;", "+\t} else if (binding instanceof FieldBinding) { // may happen for static import", "+\t\ttypeBinding = ((FieldBinding)binding).declaringClass;", "+\t\tlastButOne = importRef.isStatic() && !importRef.onDemand;", "+\t} else if (binding instanceof MethodBinding) { // may happen for static import", "+\t\ttypeBinding = ((MethodBinding)binding).declaringClass;", "+\t\tlastButOne = importRef.isStatic() && !importRef.onDemand;", "+\t}", "+\tif (typeBinding != null) {", "-\t\tif (importRef.isStatic() && !importRef.onDemand && !typeBinding.isMemberType()) {", "-\t\t\t// for field static import, do not use last token", "+\t\tif (lastButOne) {", "+\t\t\t// for field or method static import, use last but one token"]}], "num": 28993}