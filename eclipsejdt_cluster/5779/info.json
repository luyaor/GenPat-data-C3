{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6abcbfa6811abb686edf404b9bae7146", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647c82d1c00b3574c45edee25561120c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\tpublic ThreeSets copy()", "signatureAfterChange": " \t\tpublic ThreeSets copy()", "diff": ["-\t\t\t\tcopy.superBounds = new HashSet(this.superBounds);", "+\t\t\t\tcopy.superBounds = new HashSet<TypeBound>(this.superBounds);", "-\t\t\t\tcopy.sameBounds = new HashSet(this.sameBounds);", "+\t\t\t\tcopy.sameBounds = new HashSet<TypeBound>(this.sameBounds);", "-\t\t\t\tcopy.subBounds = new HashSet(this.subBounds);", "+\t\t\t\tcopy.subBounds = new HashSet<TypeBound>(this.subBounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9eab2f53e370ef7c208440f787168f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic BoundSet copy()", "signatureAfterChange": " \tpublic BoundSet copy()", "diff": ["-\t\tIterator setsIterator = this.boundsPerVariable.entrySet().iterator();", "+\t\tIterator<Entry<InferenceVariable, ThreeSets>> setsIterator = this.boundsPerVariable.entrySet().iterator();", "-\t\t\tMap.Entry entry = (Entry) setsIterator.next();", "-\t\t\tcopy.boundsPerVariable.put(entry.getKey(), ((ThreeSets)entry.getValue()).copy());", "+\t\t\tEntry<InferenceVariable, ThreeSets> entry = setsIterator.next();", "+\t\t\tcopy.boundsPerVariable.put(entry.getKey(), entry.getValue().copy());"]}], "num": 5779}