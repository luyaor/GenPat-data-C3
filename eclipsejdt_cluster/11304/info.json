{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "417fc1a8cdd2321056145b2bbb6d4831", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d3f3490b5712ada74ed57fccef6348a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project)", "diff": ["-\t\t", "-\t\treturn parseCompilationUnit(source, unitName, project, null/*use primary owner*/, null/*no progress monitor*/);", "+", "+\t\tif (source == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tASTParser c = ASTParser.internalNewParser2();", "+\t\tc.setSource(source);", "+\t\tc.setUnitName(unitName);", "+\t\tc.setProject(project);", "+\t\tASTNode result = c.createAST(null);", "+\t\treturn (CompilationUnit) result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e69703e58ee960f8367068aae039957", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source)", "diff": ["-\t\treturn parseCompilationUnit(source, (Map)null/*use JavaCore options*/, null/* no progress monitor*/);", "-\t}", "+\t\tif (source == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tASTParser c = ASTParser.internalNewParser2();", "+\t\tc.setSource(source);", "+\t\tASTNode result = c.createAST(null);", "+\t\treturn (CompilationUnit) result;"]}], "num": 11304}