{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbef8e599f175c3477a0743e39e5a17c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00fa6fc091cba7ca7f86e1bdbba06e5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tprivate void updateWorkingCopy(  \t\t\tString contents, ICompilationUnit workingCopy,  \t\t\tWorkingCopyOwner workingCopyOwner, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \tprivate static boolean updateWorkingCopy(  \t\t\tString contents, ICompilationUnit workingCopy,  \t\t\tWorkingCopyOwner workingCopyOwner, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "diff": ["-\tprivate void updateWorkingCopy( ", "+\t */", "+\tprivate static boolean updateWorkingCopy( ", "-\t\t//", "-\t\t// TODO - reuse existing char[] if there is one?", "-\t\t//", "-\t\tchar[] buf = new char[contents.length()];", "-\t\tcontents.getChars(0, contents.length(), buf, 0);", "-\t\tb.setContents(buf);", "+\t\tchar[] oldBuf = b.getCharacters();", "+\t\t// Diff the contents, and only set if they differ", "+\t\tif (oldBuf.length == contents.length()) {", "+\t\t\tboolean contentsMatch = true;", "+\t\t\tfor (int i=0; i<oldBuf.length; i++) {", "+\t\t\t\tif (oldBuf[i] != contents.charAt(i)) {", "+\t\t\t\t\tcontentsMatch = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (contentsMatch) {", "+\t\t\t\t// No change, no need to update buffer", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tb.setContents(contents);", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8050b00636e9f49cb1719519123fddd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c273134bf110ff6a8ee2009bd261955b7caa4081", "commitAfterChange": "a15857c78be035e31c0bb57b42d7b9ffa74cef8c", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["-\t\t\t\t\tif(methodBindings != null &&", "-\t\t\t\t\t\t\tmethodBindings.length == 1 &&", "+\t\t\t\t\tif (methodBindings != null &&", "+\t\t\t\t\t\t\tmethodBindings.length > 0 &&", "-\t\t\t\t\t\taddExpectedType(methodBindings[0].returnType, scope);", "+\t\t\t\t\t\tboolean canBeSingleMemberAnnotation = true;", "+\t\t\t\t\t\tdone : for (int i = 1; i < methodBindings.length; i++) {", "+\t\t\t\t\t\t\tif(methodBindings[i].getDefaultValue() == null) {", "+\t\t\t\t\t\t\t\tcanBeSingleMemberAnnotation = false;", "+\t\t\t\t\t\t\t\tbreak done;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (canBeSingleMemberAnnotation) {", "+\t\t\t\t\t\t\tthis.assistNodeCanBeSingleMemberAnnotation = canBeSingleMemberAnnotation;", "+\t\t\t\t\t\t\taddExpectedType(methodBindings[0].returnType, scope);", "+\t\t\t\t\t\t}"]}], "num": 68122}