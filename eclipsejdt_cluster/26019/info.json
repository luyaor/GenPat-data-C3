{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59e50dad2b267dafb1d0296bfeb9a59a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e8bd05af03c0667acd1036d29eed5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "a8001f94dedfcf0ea807d46ff48ed3d0c7a3c2ef", "commitAfterChange": "7e1b661f635897c28beea613ca1b58777d8c7c7a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  private boolean hasStructuralAnnotationChanges(IBinaryAnnotation[] currentAnnotations, IBinaryAnnotation[] otherAnnotations)", "signatureAfterChange": "  private boolean hasStructuralAnnotationChanges(IBinaryAnnotation[] currentAnnotations, IBinaryAnnotation[] otherAnnotations)", "diff": ["-\t\tif (!CharOperation.equals(currentAnnotations[i].getTypeName(), otherAnnotations[i].getTypeName()))", "-\t\t\treturn true;", "-\t\tIBinaryElementValuePair[] currentPairs = currentAnnotations[i].getElementValuePairs();", "-\t\tIBinaryElementValuePair[] otherPairs = otherAnnotations[i].getElementValuePairs();", "-\t\tint currentPairsLength = currentPairs == null ? 0 : currentPairs.length;", "-\t\tint otherPairsLength = otherPairs == null ? 0 : otherPairs.length;", "-\t\tif (currentPairsLength != otherPairsLength)", "-\t\t\treturn true;", "-\t\tfor (int j = 0; j < currentPairsLength; j++) {", "-\t\t\tif (!CharOperation.equals(currentPairs[j].getName(), otherPairs[j].getName()))", "-\t\t\t\treturn true;", "-\t\t\tfinal Object value = currentPairs[j].getValue();", "-\t\t\tfinal Object value2 = otherPairs[j].getValue();", "-\t\t\tif (value instanceof Object[]) {", "-\t\t\t\tObject[] currentValues = (Object[]) value;", "-\t\t\t\tif (value2 instanceof Object[]) {", "-\t\t\t\t\tObject[] currentValues2 = (Object[]) value2;", "-\t\t\t\t\tfinal int length = currentValues.length;", "-\t\t\t\t\tif (length != currentValues2.length) {", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t}", "-\t\t\t\t\tfor (int n = 0; n < length; n++) {", "-\t\t\t\t\t\tif (!currentValues[n].equals(currentValues2[n])) {", "-\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t\treturn true;", "-\t\t\t} else if (!value.equals(value2)) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t}", "+\t\tBoolean match = matchAnnotations(currentAnnotations[i], otherAnnotations[i]);", "+\t\tif (match != null)", "+\t\t\treturn match.booleanValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bd4be5cd33943e4a878ad1686dd87e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePairBinding.java", "commitBeforeChange": "f16dd04d587b8e1f3024d7d526e9df3f56508d6d", "commitAfterChange": "200a72c26c52eaf559c601781ddfbb997711dd26", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic boolean isEqualTo(IBinding binding)", "signatureAfterChange": "  \tpublic boolean isEqualTo(IBinding binding)", "diff": ["-\t\tIMemberValuePairBinding other = (IMemberValuePairBinding) binding;", "-\t\tif (!getMethodBinding().isEqualTo(other.getMethodBinding())) {", "+\t\tIMemberValuePairBinding otherMemberValuePairBinding = (IMemberValuePairBinding) binding;", "+\t\tif (!getMethodBinding().isEqualTo(otherMemberValuePairBinding.getMethodBinding())) {", "-\t\tObject otherValue = other.getValue();", "+\t\tObject otherValue = otherMemberValuePairBinding.getValue();", "-\t\treturn currentValue.equals(otherValue);", "+\t\tif (currentValue.getClass().isArray()) {", "+\t\t\tif (!otherValue.getClass().isArray()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tObject[] currentValues = (Object[]) currentValue;", "+\t\t\tObject[] otherValues = (Object[]) otherValue;", "+\t\t\tfinal int length = currentValues.length;", "+\t\t\tif (length != otherValues.length) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tObject current = currentValues[i];", "+\t\t\t\tObject other = otherValues[i];", "+\t\t\t\tif (current instanceof IBinding) {", "+\t\t\t\t\tif (!(other instanceof IBinding)) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (!((IBinding) current).isEqualTo((IBinding) other)) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (!current.equals(other)) {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn true;", "+\t\t} else {", "+\t\t\treturn currentValue.equals(otherValue);", "+\t\t}"]}], "num": 26019}