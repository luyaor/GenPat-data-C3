{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f1215b27861503549015ce7d4b18b30", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095c54510ea812d5ea3052c189e404c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 16, "signatureBeforeChange": " private int putInCache(final char[] key1, final char[] key2, final char[] key3, int index)", "signatureAfterChange": " private int putInCacheIfAbsent(final char[] key1, final char[] key2, final char[] key3, int value)", "diff": ["-private int putInCache(final char[] key1, final char[] key2, final char[] key3, int index) {", "-\tHashtableOfObject value = (HashtableOfObject) this.methodsAndFieldsCache.get(key1);", "-\tif (value == null) {", "-\t\tvalue = new HashtableOfObject();", "-\t\tthis.methodsAndFieldsCache.put(key1, value);", "+private int putInCacheIfAbsent(final char[] key1, final char[] key2, final char[] key3, int value) {", "+\tint index;", "+\tHashtableOfObject key1Value = (HashtableOfObject) this.methodsAndFieldsCache.get(key1);", "+\tif (key1Value == null) {", "+\t\tkey1Value = new HashtableOfObject();", "+\t\tthis.methodsAndFieldsCache.put(key1, key1Value);", "-\t\tcharArrayCache.put(key3, index);", "-\t\tvalue.put(key2, charArrayCache);", "+\t\tindex = charArrayCache.putIfAbsent(key3, value);", "+\t\tkey1Value.put(key2, charArrayCache);", "-\t\tCharArrayCache charArrayCache = (CharArrayCache) value.get(key2);", "+\t\tCharArrayCache charArrayCache = (CharArrayCache) key1Value.get(key2);", "-\t\t\tcharArrayCache.put(key3, index);", "-\t\t\tvalue.put(key2, charArrayCache);", "+\t\t\tindex = charArrayCache.putIfAbsent(key3, value);", "+\t\t\tkey1Value.put(key2, charArrayCache);", "-\t\t\tcharArrayCache.put(key3, index);\t\t\t", "+\t\t\tindex = charArrayCache.putIfAbsent(key3, value);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b89b09587fecd3eda0005a7ebf9346d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 31, "signatureBeforeChange": " public int literalIndexForJavaLangObjectGetClass()", "signatureAfterChange": " private int putInCache(final char[] key1, final char[] key2, final char[] key3, int index)", "diff": ["-public int literalIndexForJavaLangObjectGetClass() {", "-\tint index;", "-\tint nameAndTypeIndex;", "-\tint classIndex;", "-\t// Looking into the method ref table", "-\tif ((index = wellKnownMethods[OBJECT_GETCLASS_METHOD]) == 0) {", "-\t\tclassIndex = literalIndexForJavaLangObject();", "-\t\tif ((nameAndTypeIndex = wellKnownMethodNameAndTypes[GETCLASS_OBJECT_METHOD_NAME_AND_TYPE]) == 0) {", "-\t\t\tint nameIndex = literalIndex(QualifiedNamesConstants.GetClass);", "-\t\t\tint typeIndex = literalIndex(QualifiedNamesConstants.GetClassSignature);", "-\t\t\tnameAndTypeIndex = wellKnownMethodNameAndTypes[GETCLASS_OBJECT_METHOD_NAME_AND_TYPE] = currentIndex++;", "-\t\t\twriteU1(NameAndTypeTag);", "-\t\t\twriteU2(nameIndex);", "-\t\t\twriteU2(typeIndex);", "+private int putInCache(final char[] key1, final char[] key2, final char[] key3, int index) {", "+\tHashtableOfObject value = (HashtableOfObject) this.methodsAndFieldsCache.get(key1);", "+\tif (value == null) {", "+\t\tvalue = new HashtableOfObject();", "+\t\tthis.methodsAndFieldsCache.put(key1, value);", "+\t\tCharArrayCache charArrayCache = new CharArrayCache();", "+\t\tcharArrayCache.put(key3, index);", "+\t\tvalue.put(key2, charArrayCache);", "+\t} else {", "+\t\tCharArrayCache charArrayCache = (CharArrayCache) value.get(key2);", "+\t\tif (charArrayCache == null) {", "+\t\t\tcharArrayCache = new CharArrayCache();", "+\t\t\tcharArrayCache.put(key3, index);", "+\t\t\tvalue.put(key2, charArrayCache);", "+\t\t} else {", "+\t\t\tcharArrayCache.put(key3, index);\t\t\t", "-\t\tindex = wellKnownMethods[OBJECT_GETCLASS_METHOD] = currentIndex++;", "-\t\t// Write the method ref constant into the constant pool", "-\t\t// First add the tag", "-\t\twriteU1(MethodRefTag);", "-\t\t// Then write the class index", "-\t\twriteU2(classIndex);", "-\t\t// The write the nameAndType index", "-\t\twriteU2(nameAndTypeIndex);"]}], "num": 68057}