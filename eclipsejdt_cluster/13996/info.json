{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e559c04e325b6fb62adce5d76db0d1a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98c160eaeeb6f7521f5fec2dc4cc6a15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t \tprotected void checkClassFile(String directoryName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException", "signatureAfterChange": " \t\t \tprotected void checkClassFile(String directoryName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException", "diff": ["-\t\t\t} catch (org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException e1) {", "+\t\t\t} catch (org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException e) {", "+\t\t\t\te.printStackTrace();", "-\t\t\t} catch (IOException e1) {", "+\t\t\t} catch (IOException e) {", "+\t\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11b894cce5c6f79907fc9401c75efa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " \tpublic void test166()", "signatureAfterChange": " \tpublic void test166()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f956573ee0a3d2383b7d7ef6ca5ecf1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["+\t\t\t\t\t\t\tfor (int k = 0, cpLength = classpath.length; k < cpLength; k++){", "+\t\t\t\t\t\t\t\tif (classpath[k].getEntryKind() == IClasspathEntry.CPE_LIBRARY){", "+\t\t\t\t\t\t\t\t\tarchivePathsToRefresh.add(classpath[k].getPath());", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tfor (int k = 0, cpLength = classpath.length; k < cpLength; k++){", "-\t\t\t\t\t\t\tif (classpath[k].getEntryKind() == IClasspathEntry.CPE_LIBRARY){", "-\t\t\t\t\t\t\t\tarchivePathsToRefresh.add(classpath[k].getPath());", "-\t\t\t\t\t\t\t}", "-", "+\t\t\t\t\t\t\tjavaProject.resetResolvedClasspath(); // in case it contains a chained jar", "+\t\t\t\t\t\t\tjavaProject.resetResolvedClasspath(); // in case it contains a chained jar", "+\t\t\t\t\t\t\tjavaProject.resetResolvedClasspath(); // in case it contains a chained jar"]}], "num": 13996}