{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5db4ee4b606d180fd1b076fb339d3e5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d90fee146d56fbdbfa74187bc6bfa0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t\t \t\tpublic String[] getPrefixAndSuffix(int indent, String lineDelim, ASTNode node, RewriteEventStore events)", "signatureAfterChange": " \t\t \t\tpublic String[] getPrefixAndSuffix(int indent, String lineDelim, ASTNode node, RewriteEventStore events)", "diff": ["-\t\t\tint nodeStart= fPrefix.length();", "+\t\t\tint nodeStart= this.prefix.length();", "-\t\t\tString str= fPrefix + nodeString + fSuffix;", "+\t\t\tString str= this.prefix + nodeString + this.suffix;", "-\t\t\tPosition pos1= new Position(fStart, nodeStart + 1 - fStart);", "+\t\t\tPosition pos1= new Position(this.start, nodeStart + 1 - this.start);", "-\t\t\tTextEdit res= CodeFormatterUtil.format2(CodeFormatter.K_STATEMENTS, str, indent, lineDelim, fOptions);", "+\t\t\tTextEdit res= formatString(CodeFormatter.K_STATEMENTS, str, indent, lineDelim, getOptions());", "-\t\t\t\tstr= CodeFormatterUtil.evaluateFormatterEdit(str, res, new Position[] { pos1, pos2 });", "+\t\t\t\tstr= evaluateFormatterEdit(str, res, new Position[] { pos1, pos2 });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d2fdea75b1665014001c70dac22db5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t\t \t\tpublic String[] getPrefixAndSuffix(int indent, String lineDelim, ASTNode node, RewriteEventStore events)", "signatureAfterChange": " \t\t \t\tpublic String[] getPrefixAndSuffix(int indent, String lineDelim, ASTNode node, RewriteEventStore events)", "diff": ["-\t\t\tString str= fPrefix + nodeString;", "-\t\t\tPosition pos= new Position(fStart, fPrefix.length() + 1 - fStart);", "+\t\t\tString str= this.prefix + nodeString;", "+\t\t\tPosition pos= new Position(this.start, this.prefix.length() + 1 - this.start);", "-\t\t\tTextEdit res= CodeFormatterUtil.format2(CodeFormatter.K_STATEMENTS, str, indent, lineDelim, fOptions);", "+\t\t\tTextEdit res= formatString(CodeFormatter.K_STATEMENTS, str, indent, lineDelim, getOptions());", "-\t\t\t\tstr= CodeFormatterUtil.evaluateFormatterEdit(str, res, new Position[] { pos });", "+\t\t\t\tstr= evaluateFormatterEdit(str, res, new Position[] { pos });"]}], "num": 9846}