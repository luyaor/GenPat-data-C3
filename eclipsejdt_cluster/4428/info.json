{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "597c8ae5b72642f9233f86bb233151fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa27d4ecf5f97a8f1ad31341b523a7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "diff": ["-\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "-\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\t}", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "-\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\t}", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a0419af8b31a4d52e95f83e98ee6f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "6eb04387ef3ee5335f206eb99b3c936de2847d3d", "commitAfterChange": "b01f0952648a27a3dbc985907cc5ced8ba10ed91", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "signatureAfterChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "diff": ["-\t\t\t\tif (initialization.name == RecoveryScanner.FAKE_IDENTIFIER) { // workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=199668) ", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t\t\tif (initialization.name != RecoveryScanner.FAKE_IDENTIFIER) { // workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=199668) ", "-\t\t\t\t\t\tvariableDeclarationExpression.fragments().add(convertToVariableDeclarationFragment(initialization));", "-\t\t\t\t\t}", "+\t\t\t\t\tvariableDeclarationExpression.fragments().add(convertToVariableDeclarationFragment(initialization));"]}], "num": 4428}