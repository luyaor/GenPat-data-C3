{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "462a2f6d236d99e7e696a0fe7aaee000", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47641a6268973bebc669788e67e2c129", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "6136184df5d87b2fe6ebeec9fd9dcf39b1b92cb1", "commitAfterChange": "0c80d88773ddbe1e035accca9dfc037266a710bf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void beginToCompile(ICompilationUnit[] sourceUnits)", "signatureAfterChange": " \tprotected void beginToCompile(ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\t// diet parsing for large collection of units", "-\t\t\t\tif (totalUnits < parseThreshold) {", "-\t\t\t\t\tparsedUnit = parser.parse(sourceUnits[i], unitResult);", "-\t\t\t\t} else {", "-\t\t\t\t\tparsedUnit = parser.dietParse(sourceUnits[i], unitResult);", "-\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t// diet parsing for large collection of units", "+\t\t\t\tif (totalUnits < parseThreshold) {", "+\t\t\t\t\tparsedUnit = parser.parse(sourceUnits[i], unitResult);", "+\t\t\t\t} else {", "+\t\t\t\t\tparsedUnit = parser.dietParse(sourceUnits[i], unitResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab4c803678f60bb66c3a89883ccb157", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "6136184df5d87b2fe6ebeec9fd9dcf39b1b92cb1", "commitAfterChange": "0c80d88773ddbe1e035accca9dfc037266a710bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void accept(ICompilationUnit sourceUnit)", "signatureAfterChange": " \tpublic void accept(ICompilationUnit sourceUnit)", "diff": ["-\t\t\t// diet parsing for large collection of unit", "-\t\t\tCompilationUnitDeclaration parsedUnit;", "-\t\t\tif (totalUnits < parseThreshold) {", "-\t\t\t\tparsedUnit = parser.parse(sourceUnit, unitResult);", "-\t\t\t} else {", "-\t\t\t\tparsedUnit = parser.dietParse(sourceUnit, unitResult);", "-\t\t\t}", "-", "-", "+\t\t\t// diet parsing for large collection of unit", "+\t\t\tCompilationUnitDeclaration parsedUnit;", "+\t\t\tif (totalUnits < parseThreshold) {", "+\t\t\t\tparsedUnit = parser.parse(sourceUnit, unitResult);", "+\t\t\t} else {", "+\t\t\t\tparsedUnit = parser.dietParse(sourceUnit, unitResult);", "+\t\t\t}"]}], "num": 71052}