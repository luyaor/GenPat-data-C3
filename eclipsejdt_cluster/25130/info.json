{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cc10c7dcdfc19078500c349a95f0431", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdb862aa53efb17435e9c5dd4e0bd90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/CompilationResult.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate static void quickSort(CategorizedProblem[] list, int left, int right)", "signatureAfterChange": " \tpublic int compare(Object o1, Object o2)", "diff": ["+private static final Comparator PROBLEM_COMPARATOR = new Comparator() {", "+\tpublic int compare(Object o1, Object o2) {", "+\t\treturn ((CategorizedProblem) o1).getSourceStart() - ((CategorizedProblem) o2).getSourceStart();", "+\t}", "-\t", "-\tprivate static void quickSort(CategorizedProblem[] list, int left, int right) {", "-", "-\t\tif (left >= right) return;", "-\t", "-\t\t// sort the problems by their source start position... starting with 0", "-\t\tint original_left = left;", "-\t\tint original_right = right;", "-\t\tint mid = list[(left + right) / 2].getSourceStart();", "-\t\tdo {", "-\t\t\twhile (list[left].getSourceStart() < mid)", "-\t\t\t\tleft++;", "-\t\t\twhile (mid < list[right].getSourceStart())", "-\t\t\t\tright--;", "-\t\t\tif (left <= right) {", "-\t\t\t\tCategorizedProblem tmp = list[left];", "-\t\t\t\tlist[left] = list[right];", "-\t\t\t\tlist[right] = tmp;", "-\t\t\t\tleft++;", "-\t\t\t\tright--;", "-\t\t\t}", "-\t\t} while (left <= right);", "-\t\tif (original_left < right)", "-\t\t\tquickSort(list, original_left, right);", "-\t\tif (left < original_right)", "-\t\t\tquickSort(list, left, original_right);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde40a9f8a8b291f7992a1e9b3638925", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/CompilationResult.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate void quickPrioritize(CategorizedProblem[] list, int left, int right)", "signatureAfterChange": "  private void quickPrioritize(CategorizedProblem[] problemList, int left, int right)", "diff": ["-\t", "-\tprivate void quickPrioritize(CategorizedProblem[] list, int left, int right) {", "-\t\t", "-\t\tif (left >= right) return;", "-\t", "-\t\t// sort the problems by their priority... starting with the highest priority", "-\t\tint original_left = left;", "-\t\tint original_right = right;", "-\t\tint mid = computePriority(list[(left + right) / 2]);", "-\t\tdo {", "-\t\t\twhile (computePriority(list[right]) < mid)", "-\t\t\t\tright--;", "-\t\t\twhile (mid < computePriority(list[left]))", "-\t\t\t\tleft++;", "-\t\t\tif (left <= right) {", "-\t\t\t\tCategorizedProblem tmp = list[left];", "-\t\t\t\tlist[left] = list[right];", "-\t\t\t\tlist[right] = tmp;", "-\t\t\t\tleft++;", "-\t\t\t\tright--;", "-\t\t\t}", "-\t\t} while (left <= right);", "-\t\tif (original_left < right)", "-\t\t\tquickPrioritize(list, original_left, right);", "-\t\tif (left < original_right)", "-\t\t\tquickPrioritize(list, left, original_right);", "-\t}", "+", "+private void quickPrioritize(CategorizedProblem[] problemList, int left, int right) {", "+\tif (left >= right) return;", "+", "+\t// sort the problems by their priority... starting with the highest priority", "+\tint original_left = left;", "+\tint original_right = right;", "+\tint mid = computePriority(problemList[(left + right) / 2]);", "+\tdo {", "+\t\twhile (computePriority(problemList[right]) < mid)", "+\t\t\tright--;", "+\t\twhile (mid < computePriority(problemList[left]))", "+\t\t\tleft++;", "+\t\tif (left <= right) {", "+\t\t\tCategorizedProblem tmp = problemList[left];", "+\t\t\tproblemList[left] = problemList[right];", "+\t\t\tproblemList[right] = tmp;", "+\t\t\tleft++;", "+\t\t\tright--;", "+\t\t}", "+\t} while (left <= right);", "+\tif (original_left < right)", "+\t\tquickPrioritize(problemList, original_left, right);", "+\tif (left < original_right)", "+\t\tquickPrioritize(problemList, left, original_right);", "+}"]}], "num": 25130}