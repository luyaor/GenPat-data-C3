{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fc23dd121f0055c8530ab542b57ceae", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c622c887463c5a0d8793399f165d49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "5591f329d04e2b37eb4fa781c7c541080109aa0a", "commitAfterChange": "d2ce3e4f25cd9bbbb131e9cbb38f00f462e43b0f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final void remove(ASTNode node, TextEditGroup editGroup)", "signatureAfterChange": " \tpublic final void remove(ASTNode node, TextEditGroup editGroup)", "diff": ["-\t\tStructuralPropertyDescriptor property= node.getLocationInParent();", "-\t\tif (property.isChildListProperty()) {", "-\t\t\tgetListRewrite(node.getParent(), (ChildListPropertyDescriptor) property).remove(node, editGroup);", "+\t\t", "+\t\tStructuralPropertyDescriptor property;", "+\t\tASTNode parent;", "+\t\tif (RewriteEventStore.isNewNode(node)) { // remove a new node, bug 164862 ", "+\t\t\tPropertyLocation location= this.eventStore.getPropertyLocation(node, RewriteEventStore.NEW);", "+\t\t\tif (location != null) {", "+\t\t\t\tproperty= location.getProperty();", "+\t\t\t\tparent= location.getParent();", "+\t\t\t} else {", "+\t\t\t\tthrow new IllegalArgumentException(\"Node is not part of the rewriter's AST\"); //$NON-NLS-1$", "+\t\t\t}", "-\t\t\tset(node.getParent(), property, null, editGroup);", "+\t\t\tproperty= node.getLocationInParent();", "+\t\t\tparent= node.getParent();", "+\t\t}", "+\t\t", "+\t\tif (property.isChildListProperty()) {", "+\t\t\tgetListRewrite(parent, (ChildListPropertyDescriptor) property).remove(node, editGroup);", "+\t\t} else {", "+\t\t\tset(parent, property, null, editGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e5d057bde7439a3b7016f9a98455485", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "5591f329d04e2b37eb4fa781c7c541080109aa0a", "commitAfterChange": "d2ce3e4f25cd9bbbb131e9cbb38f00f462e43b0f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t\t \tpublic final void replace(ASTNode node, ASTNode replacement, TextEditGroup editGroup)", "signatureAfterChange": "\t\t \tpublic final void replace(ASTNode node, ASTNode replacement, TextEditGroup editGroup)", "diff": ["-\t\tStructuralPropertyDescriptor property= node.getLocationInParent();", "-\t\tif (property.isChildListProperty()) {", "-\t\t\tgetListRewrite(node.getParent(), (ChildListPropertyDescriptor) property).replace(node, replacement, editGroup);", "+\t\t", "+\t\tStructuralPropertyDescriptor property;", "+\t\tASTNode parent;", "+\t\tif (RewriteEventStore.isNewNode(node)) { // replace a new node, bug 164862 ", "+\t\t\tPropertyLocation location= this.eventStore.getPropertyLocation(node, RewriteEventStore.NEW);", "+\t\t\tif (location != null) {", "+\t\t\t\tproperty= location.getProperty();", "+\t\t\t\tparent= location.getParent();", "+\t\t\t} else {", "+\t\t\t\tthrow new IllegalArgumentException(\"Node is not part of the rewriter's AST\"); //$NON-NLS-1$", "+\t\t\t}", "-\t\t\tset(node.getParent(), property, replacement, editGroup);", "+\t\t\tproperty= node.getLocationInParent();", "+\t\t\tparent= node.getParent();", "+\t\t}", "+\t\t", "+\t\tif (property.isChildListProperty()) {", "+\t\t\tgetListRewrite(parent, (ChildListPropertyDescriptor) property).replace(node, replacement, editGroup);", "+\t\t} else {", "+\t\t\tset(parent, property, replacement, editGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e23388ea19e387dd4b1392025fc077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe705ea915c957b51cc2288747d72c8d5f188751", "commitAfterChange": "95f2863f67e3e4dfadf4ad18f8086e31bc278786", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private String computeIndexName(String pathString)", "signatureAfterChange": "\r private String computeIndexName(IPath path)", "diff": ["-private String computeIndexName(String pathString) {\r", "-\tbyte[] pathBytes = pathString.getBytes();\r", "+private String computeIndexName(IPath path) {\r", "+\t\r", "+\t// find modification timestamp\r", "+\tString pathString = path.toOSString();\r", "+\tlong timestamp;\r", "+\tIResource resource = ResourcesPlugin.getWorkspace().getRoot().findMember(path);\r", "+\tif (resource != null) {\r", "+\t\ttimestamp = resource.getModificationStamp();\r", "+\t} else {\r", "+\t\ttimestamp = new File(pathString).lastModified();\r", "+\t}\r", "+\t\r", "+\tbyte[] pathBytes = (pathString + timestamp).getBytes();\r"]}], "num": 55728}