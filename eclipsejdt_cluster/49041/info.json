{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f173b8f07831361e2fff6ee107041c6e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0526cc7f3165c70752374a26a7a01e9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "082d22ae53a4a86157fea19804c1455a5219f69d", "commitAfterChange": "29f132fcaf87888edac9d53f7020a35ba3ae59d6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "diff": ["-\t// TODO (jerome) remove before 3.0 M9", "-\tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive) {", "-\t\tint matchRule = isCaseSensitive ? matchMode | R_CASE_SENSITIVE : matchMode;", "-\t\treturn createPattern(stringPattern, searchFor, limitTo, matchRule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e6ca4bf16cc068bb98dac2617c6032", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "59ef64b6878c0cb93ca98a4324eecb50f2d5a305", "commitAfterChange": "01c4f4c85f9d9b5a524080e1c9f6656869c4a876", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "diff": ["+\t\t\tcase IJavaSearchConstants.CLASS:", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_SUFFIX);", "+\t\t\tcase IJavaSearchConstants.CLASS_AND_INTERFACE:", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_AND_INTERFACE_SUFFIX);", "+\t\t\tcase IJavaSearchConstants.CLASS_AND_ENUM:", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_AND_ENUM_SUFFIX);", "+\t\t\tcase IJavaSearchConstants.INTERFACE:", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.INTERFACE_SUFFIX);", "+\t\t\tcase IJavaSearchConstants.ENUM:", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.ENUM_SUFFIX);", "+\t\t\tcase IJavaSearchConstants.ANNOTATION_TYPE:", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.ANNOTATION_TYPE_SUFFIX);", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule);", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.TYPE_SUFFIX);"]}], "num": 49041}