{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07df602944370a3ce258dd6dbb15a330", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a8e90466a1d2ad68b45b6120117595b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "a41e619c58860e4fb0ad103984917e455aa47d4f", "commitAfterChange": "6166acc1a72eef4415ab90fa4d71205848f659db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void buildResourceVector()", "signatureAfterChange": " \tprivate void buildResourceVector()", "diff": ["-\t\tthis.types = this.hierarchy.getAllTypes();", "-\t\tfor (int i = 0; i < this.types.length; i++) {", "-\t\t\tIType type = this.types[i];", "-\t\t\tIResource resource = ((JavaElement) type).resource();", "+\t\tIType[] types = null;", "+\t\tif (this.subTypes != null) {", "+\t\t\ttypes = this.hierarchy.getAllSubtypes(this.focusType);", "+\t\t} else {", "+\t\t\ttypes = this.hierarchy.getAllTypes();", "+\t\t}", "+\t\tfor (int i = 0; i < types.length; i++) {", "+\t\t\tIType type = types[i];", "+\t\t\tif (this.subTypes != null) {", "+\t\t\t\t// remember subtypes for later use in encloses()", "+\t\t\t\tthis.subTypes.add(type);", "+\t\t\t}", "+\t\t\tIResource resource = ((JavaElement)type).resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b120adef2282d3b908e29d1fb0d87ce6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "f711a2e15fc3de73f79ccc61d2dafcbdd0d9f0f1", "commitAfterChange": "e823242f8d03d0ef2504eab819b418e785f092ee", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["+\t\tchar[][] parameterNames = null;", "+\t\tif (!methodInfo.isClinit()) {", "+\t\t\tparameterNames = getParameterNames(methodDescriptor, codeAttribute, accessFlags);", "+\t\t}", "-\t\t\t\tmethodHeader = Signature.toCharArray(signature, returnClassName(className, '.', COMPACT), getParameterNames(methodDescriptor, codeAttribute, accessFlags) , !checkMode(mode, COMPACT), false, isVarArgs);", "+\t\t\t\tmethodHeader = Signature.toCharArray(signature, returnClassName(className, '.', COMPACT), parameterNames, !checkMode(mode, COMPACT), false, isVarArgs);", "-\t\t\t\tmethodHeader = Signature.toCharArray(methodDescriptor, returnClassName(className, '.', COMPACT), getParameterNames(methodDescriptor, codeAttribute, accessFlags) , !checkMode(mode, COMPACT), false, isVarArgs);", "+\t\t\t\tmethodHeader = Signature.toCharArray(methodDescriptor, returnClassName(className, '.', COMPACT), parameterNames, !checkMode(mode, COMPACT), false, isVarArgs);", "-\t\t\t\tmethodHeader = Signature.toCharArray(signature, methodInfo.getName(), getParameterNames(methodDescriptor, codeAttribute, accessFlags) , !checkMode(mode, COMPACT), true, isVarArgs);", "+\t\t\t\tmethodHeader = Signature.toCharArray(signature, methodInfo.getName(), parameterNames, !checkMode(mode, COMPACT), true, isVarArgs);", "-\t\t\t\tmethodHeader = Signature.toCharArray(methodDescriptor, methodInfo.getName(), getParameterNames(methodDescriptor, codeAttribute, accessFlags) , !checkMode(mode, COMPACT), true, isVarArgs);", "+\t\t\t\tmethodHeader = Signature.toCharArray(methodDescriptor, methodInfo.getName(), parameterNames, !checkMode(mode, COMPACT), true, isVarArgs);", "-\t\t\t\tdisassemble(codeAttribute, buffer, lineSeparator, tabNumber, mode);", "+\t\t\t\tdisassemble(codeAttribute, parameterNames, methodDescriptor, (accessFlags & IModifierConstants.ACC_STATIC) != 0, buffer, lineSeparator, tabNumber, mode);"]}], "num": 18571}