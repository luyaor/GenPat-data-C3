{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d26c74dc47f6ec0ae29985540018750a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "490ec6532dfa7aa701e7fdc11b37e8f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2a736526cf0c07c962b917711ed6666ebeefdfa1", "commitAfterChange": "c012c3900814a42f4ddf6062be7a4a09cfd10693", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["+\t    // save container values on snapshot/full save", "+\t\tPreferences preferences = JavaCore.getPlugin().getPluginPreferences();", "+\t\tIJavaProject[] projects = getJavaModel().getJavaProjects();", "+\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "+\t\t    IJavaProject project = projects[i];", "+\t\t\tMap projectContainers = (Map)this.containers.get(project);", "+\t\t\tif (projectContainers == null) continue;", "+\t\t\tfor (Iterator keys = projectContainers.keySet().iterator(); keys.hasNext();) {", "+\t\t\t    IPath containerPath = (IPath) keys.next();", "+\t\t\t    IClasspathContainer container = (IClasspathContainer) projectContainers.get(containerPath);", "+\t\t\t\tString containerKey = CP_CONTAINER_PREFERENCES_PREFIX+project.getElementName() +\"|\"+containerPath;//$NON-NLS-1$", "+\t\t\t\tString containerString = CP_ENTRY_IGNORE;", "+\t\t\t\ttry {", "+\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\tcontainerString = ((JavaProject)project).encodeClasspath(container.getClasspathEntries(), null, false);", "+\t\t\t\t\t}", "+\t\t\t\t} catch(JavaModelException e){", "+\t\t\t\t\t// could not encode entry: leave it as CP_ENTRY_IGNORE", "+\t\t\t\t}", "+\t\t\t\tpreferences.setDefault(containerKey, CP_ENTRY_IGNORE); // use this default to get rid of removed ones", "+\t\t\t\tpreferences.setValue(containerKey, containerString);", "+\t\t\t}", "+\t\t}", "+\t\tJavaCore.getPlugin().savePluginPreferences();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d2a6b990a33f3eb9d6776d72397df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2a736526cf0c07c962b917711ed6666ebeefdfa1", "commitAfterChange": "c012c3900814a42f4ddf6062be7a4a09cfd10693", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic synchronized void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "signatureAfterChange": "  \tpublic synchronized void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "diff": ["-\t\t", "-\t\tPreferences preferences = JavaCore.getPlugin().getPluginPreferences();", "-\t\tString containerKey = CP_CONTAINER_PREFERENCES_PREFIX+project.getElementName() +\"|\"+containerPath;//$NON-NLS-1$", "-\t\tString containerString = CP_ENTRY_IGNORE;", "-\t\ttry {", "-\t\t\tif (container != null) {", "-\t\t\t\tcontainerString = ((JavaProject)project).encodeClasspath(container.getClasspathEntries(), null, false);", "-\t\t\t}", "-\t\t} catch(JavaModelException e){", "-\t\t\t// could not encode entry: leave it as CP_ENTRY_IGNORE", "-\t\t}", "-\t\tpreferences.setDefault(containerKey, CP_ENTRY_IGNORE); // use this default to get rid of removed ones", "-\t\tpreferences.setValue(containerKey, containerString);", "-\t\tJavaCore.getPlugin().savePluginPreferences();", "+\t\t// container values are persisted in preferences during save operations, see #saving(ISaveContext)"]}], "num": 62576}