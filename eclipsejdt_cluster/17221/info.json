{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de7934f18eb87879d0b949f4ec40dba0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12da544ac5b05a96437689cc68b62344", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathMultiDirectory.java", "commitBeforeChange": "88e5aa006a98c27f378a9ba9656ac196342e257f", "commitAfterChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \r \r NameEnvironmentAnswer findClass(char[] className, char[][] packageName)", "signatureAfterChange": " \r \r NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-NameEnvironmentAnswer findClass(char[] className, char[][] packageName) {\r", "-\tif (nameEnvironment.additionalSourceFilenames != null) {\r", "+NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName) {\r", "+\tString[] additionalSourceFilenames = nameEnvironment.additionalSourceFilenames;\r", "+\tif (additionalSourceFilenames != null) {\r", "+\t\tif (!isPackage(qualifiedPackageName)) return null; // most common case\r", "+\r", "-\t\tString sourceFilename = new String(className) + \".java\"; //$NON-NLS-1$\r", "-\t\tif (exists(sourcePath, sourceFilename, packageName)) {\r", "-\t\t\tString fullSourceName = sourcePath + NameEnvironment.assembleName(sourceFilename, packageName, '/');\r", "-\t\t\tString[] additionalSourceFilenames = nameEnvironment.additionalSourceFilenames;\r", "-\t\t\tfor (int i = 0, l = additionalSourceFilenames.length; i < l; i++)\r", "-\t\t\t\tif (fullSourceName.equals(additionalSourceFilenames[i]))\r", "-\t\t\t\t\treturn new NameEnvironmentAnswer(new SourceFile(fullSourceName, className, packageName));\r", "-\t\t}\r", "+\t\tString fullSourceName = sourcePath + qualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - 6) + \".java\"; //$NON-NLS-1$\r", "+\t\tfor (int i = 0, l = additionalSourceFilenames.length; i < l; i++)\r", "+\t\t\tif (fullSourceName.equals(additionalSourceFilenames[i]))\r", "+\t\t\t\treturn new NameEnvironmentAnswer(\r", "+\t\t\t\t\tnew SourceFile(fullSourceName, binaryFileName.substring(0, binaryFileName.length() - 6), qualifiedPackageName));\r", "-\treturn super.findClass(className, packageName);\r", "+\treturn super.findClass(binaryFileName, qualifiedPackageName, qualifiedBinaryFileName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5615cfa57fdb1e4d0f20cf4e18514b7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathDirectory.java", "commitBeforeChange": "88e5aa006a98c27f378a9ba9656ac196342e257f", "commitAfterChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r NameEnvironmentAnswer findClass(char[] className, char[][] packageName)", "signatureAfterChange": " \r \r NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["+NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName) {\r", "+\tif (!doesFileExist(binaryFileName, qualifiedPackageName)) return null; // most common case\r", "-NameEnvironmentAnswer findClass(char[] className, char[][] packageName) {\r", "-\tString binaryFilename = new String(className) + \".class\"; //$NON-NLS-1$\r", "-\tif (exists(binaryPath, binaryFilename, packageName)) {\r", "-\t\ttry {\r", "-\t\t\treturn new NameEnvironmentAnswer(\r", "-\t\t\t\tClassFileReader.read(binaryPath + NameEnvironment.assembleName(binaryFilename, packageName, '/')));\r", "-\t\t} catch (Exception e) {\r", "-\t\t}\r", "-\t}\r", "+\ttry {\r", "+\t\tClassFileReader reader = ClassFileReader.read(binaryPath + qualifiedBinaryFileName);\r", "+\t\tif (reader != null) return new NameEnvironmentAnswer(reader);\r", "+\t} catch (Exception e) {} // treat as if class file is missing\r"]}], "num": 17221}