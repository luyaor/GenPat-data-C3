{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33668a6dd3cb3120c3f4bea103780748", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4513b3c970eeaa550833e1065603ff27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "05a3e6b542ee827cf511d126431eeeeff129c0c5", "commitAfterChange": "c203fa24cd19d35decddec98e524ad9aa8271741", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic String getNewLine()", "signatureAfterChange": " \t \tpublic String getNewLine()", "diff": ["+\t", "+\tpublic String getNewLine() {", "+\t\tif (this.nlsTagCounter > 0) {", "+\t\t\treturn EMPTY_STRING;", "+\t\t}", "+\t\tif (lastNumberOfNewLines >= 1) {", "+\t\t\tcolumn = 1; // ensure that the scribe is at the beginning of a new line", "+\t\t\treturn EMPTY_STRING;", "+\t\t}", "+\t\tline++;", "+\t\tlastNumberOfNewLines = 1;", "+\t\tcolumn = 1;", "+\t\tneedSpace = false;", "+\t\treturn this.lineSeparator;", "-\tpublic String getNewLine() {", "-\t\tif (lastNumberOfNewLines >= 1) {", "-\t\t\tcolumn = 1; // ensure that the scribe is at the beginning of a new line", "-\t\t\treturn EMPTY_STRING;", "-\t\t}", "-\t\tline++;", "-\t\tlastNumberOfNewLines = 1;", "-\t\tcolumn = 1;", "-\t\tneedSpace = false;", "-\t\treturn this.lineSeparator;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d254f1661244fa09b8d6d40aaa93a787", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t \tpublic void printNewLine()", "signatureAfterChange": " \t \tpublic void printNewLine()", "diff": ["-\t", "-\tpublic void printNewLine() {\t", "-\t\tif (lastNumberOfNewLines >= 1) {", "-\t\t\tcolumn = 1; // ensure that the scribe is at the beginning of a new line", "-\t\t\treturn;", "-\t\t}", "-\t\tthis.buffer.append(this.lineSeparator);", "-\t\tline++;", "-\t\tlastNumberOfNewLines = 1;", "-\t\tcolumn = 1;", "-\t\tneedSpace = false;", "+\t", "+\tpublic void printNewLine() {", "+\t\tif (lastNumberOfNewLines >= 1) {", "+\t\t\tcolumn = 1; // ensure that the scribe is at the beginning of a new line", "+\t\t\treturn;", "+\t\t}", "+\t\taddInsertEdit(this.scanner.getCurrentTokenEndPosition() + 1, this.lineSeparator);", "+\t\tline++;", "+\t\tlastNumberOfNewLines = 1;", "+\t\tcolumn = 1;", "+\t\tneedSpace = false;"]}], "num": 6361}