{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bdb1db6c925be14c130ebe160358883", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e0be2add26188ef249523b565e058ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test020()", "signatureAfterChange": " public void test020()", "diff": ["-\t\t\"     1  newarray #10 int\\n\" + ", "-\t\t\"     3  astore_1\\n\" + ", "-\t\t\"     4  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"     7  ldc #23 <String \\\"SUC\\\">\\n\" + ", "-\t\t\"     9  invokevirtual #29 <Method java/io/PrintStream.print(Ljava/lang/String;)V>\\n\" + ", "-\t\t\"    12  aload_1\\n\" + ", "-\t\t\"    13  astore 4\\n\" + ", "+\t\t\"     1  newarray int [10]\\n\" + ", "+\t\t\"     3  astore_1 [tab]\\n\" + ", "+\t\t\"     4  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"     7  ldc <String \\\"SUC\\\"> [23]\\n\" + ", "+\t\t\"     9  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [29]\\n\" + ", "+\t\t\"    12  aload_1 [tab]\\n\" + ", "+\t\t\"    13  astore [local_4]\\n\" + ", "-\t\t\"    16  istore_2\\n\" + ", "-\t\t\"    17  aload 4\\n\" + ", "+\t\t\"    16  istore_2 [local_2]\\n\" + ", "+\t\t\"    17  aload [local_4]\\n\" + ", "-\t\t\"    20  istore_3\\n\" + ", "+\t\t\"    20  istore_3 [local_3]\\n\" + ", "-\t\t\"    24  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"    27  ldc #31 <String \\\"1x\\\">\\n\" + ", "-\t\t\"    29  invokevirtual #29 <Method java/io/PrintStream.print(Ljava/lang/String;)V>\\n\" + ", "-\t\t\"    32  iinc 2 1\\n\" + ", "-\t\t\"    35  iload_2\\n\" + ", "-\t\t\"    36  iload_3\\n\" + ", "+\t\t\"    24  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"    27  ldc <String \\\"1x\\\"> [31]\\n\" + ", "+\t\t\"    29  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [29]\\n\" + ", "+\t\t\"    32  iinc 2 1 [local_2]\\n\" + ", "+\t\t\"    35  iload_2 [local_2]\\n\" + ", "+\t\t\"    36  iload_3 [local_3]\\n\" + ", "-\t\t\"    40  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"    43  ldc #33 <String \\\"CESS\\\">\\n\" + ", "-\t\t\"    45  invokevirtual #36 <Method java/io/PrintStream.println(Ljava/lang/String;)V>\\n\" + ", "+\t\t\"    40  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"    43  ldc <String \\\"CESS\\\"> [33]\\n\" + ", "+\t\t\"    45  invokevirtual java/io/PrintStream.println(Ljava/lang/String;)V [36]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82eeb0bab1f76583e1326706bedcc09a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void test007()", "signatureAfterChange": "  \tpublic void test007()", "diff": ["-\t\t\t\"Inexact argument for the varargs method byte2(byte[][]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method byte2(byte[]...) from the type Y. Argument should be casted to byte[][] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"The method byte2(byte[][]) in the type Y is not applicable for the arguments (byte)\\n\" + ", "+\t\t\t\"The method byte2(byte[]...) in the type Y is not applicable for the arguments (byte)\\n\" + ", "-\t\t\t\"The method byte2(byte[][]) in the type Y is not applicable for the arguments (byte[][][])\\n\" + ", "+\t\t\t\"The method byte2(byte[]...) in the type Y is not applicable for the arguments (byte[][][])\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object(Object[]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object(Object...) from the type Y. Argument should be casted to Object[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object(Object[]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object(Object...) from the type Y. Argument should be casted to Object[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object(Object[]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object(Object...) from the type Y. Argument should be casted to Object[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object(Object[]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object(Object...) from the type Y. Argument should be casted to Object[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object(Object[]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object(Object...) from the type Y. Argument should be casted to Object[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object2(Object[][]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object2(Object[]...) from the type Y. Argument should be casted to Object[][] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"The method object2(Object[][]) in the type Y is not applicable for the arguments (byte)\\n\" + ", "+\t\t\t\"The method object2(Object[]...) in the type Y is not applicable for the arguments (byte)\\n\" + ", "-\t\t\t\"The method object2(Object[][]) in the type Y is not applicable for the arguments (byte[])\\n\" + ", "+\t\t\t\"The method object2(Object[]...) in the type Y is not applicable for the arguments (byte[])\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object2(Object[][]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object2(Object[]...) from the type Y. Argument should be casted to Object[][] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"The method object2(Object[][]) in the type Y is not applicable for the arguments (String)\\n\" + ", "+\t\t\t\"The method object2(Object[]...) in the type Y is not applicable for the arguments (String)\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method object2(Object[][]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method object2(Object[]...) from the type Y. Argument should be casted to Object[][] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the varargs method string(String[]) from the type Y\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs method string(String...) from the type Y. Argument should be casted to String[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"The method string(String[]) in the type Y is not applicable for the arguments (String[][])\\n\" + ", "+\t\t\t\"The method string(String...) in the type Y is not applicable for the arguments (String[][])\\n\" + ", "-\t\t\t\"The method string(String[]) in the type Y is not applicable for the arguments (Object)\\n\" + ", "+\t\t\t\"The method string(String...) in the type Y is not applicable for the arguments (Object)\\n\" + ", "-\t\t\t\"The method string(String[]) in the type Y is not applicable for the arguments (Object[])\\n\" + ", "+\t\t\t\"The method string(String...) in the type Y is not applicable for the arguments (Object[])\\n\" + ", "-\t\t\t\"The method string(String[]) in the type Y is not applicable for the arguments (Object[][])\\n\" + ", "+\t\t\t\"The method string(String...) in the type Y is not applicable for the arguments (Object[][])\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b25ec13067e825c9b8ee10ea81d10d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void test021()", "signatureAfterChange": " public void test021()", "diff": ["-\t\t\"     56  astore [local_7]\\n\" + ", "+\t\t\"     56  astore 7\\n\" + ", "-\t\t\"     59  istore [local_5]\\n\" + ", "-\t\t\"     61  aload [local_7]\\n\" + ", "+\t\t\"     59  istore 5\\n\" + ", "+\t\t\"     61  aload 7\\n\" + ", "-\t\t\"     64  istore [local_6]\\n\" + ", "+\t\t\"     64  istore 6\\n\" + ", "-\t\t\"     69  aload [local_7]\\n\" + ", "-\t\t\"     71  iload [local_5]\\n\" + ", "+\t\t\"     69  aload 7\\n\" + ", "+\t\t\"     71  iload 5\\n\" + ", "-\t\t\"     74  istore [e]\\n\" + ", "+\t\t\"     74  istore 4 [e]\\n\" + ", "-\t\t\"     77  iload [e]\\n\" + ", "+\t\t\"     77  iload 4 [e]\\n\" + ", "-\t\t\"     89  iload [e]\\n\" + ", "+\t\t\"     89  iload 4 [e]\\n\" + ", "-\t\t\"     98  iinc 5 1 [local_5]\\n\" + ", "-\t\t\"    101  iload [local_5]\\n\" + ", "-\t\t\"    103  iload [local_6]\\n\" + ", "+\t\t\"     98  iinc 5 1\\n\" + ", "+\t\t\"    101  iload 5\\n\" + ", "+\t\t\"    103  iload 6\\n\" + ", "-\t\t\"    111  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"    111  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\"    115  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\"    115  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\"        [pc: 0, pc: 119] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\"        [pc: 48, pc: 119] local: tab index: 1 type: [I\\n\" + ", "-\t\t\"        [pc: 50, pc: 119] local: sum index: 2 type: I\\n\" + ", "-\t\t\"        [pc: 52, pc: 119] local: i index: 3 type: I\\n\" + ", "-\t\t\"        [pc: 76, pc: 108] local: e index: 4 type: I\\n\";", "+\t\t\"        [pc: 0, pc: 119] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\"        [pc: 48, pc: 119] local: tab index: 1 type: int[]\\n\" + ", "+\t\t\"        [pc: 50, pc: 119] local: sum index: 2 type: int\\n\" + ", "+\t\t\"        [pc: 52, pc: 119] local: i index: 3 type: int\\n\" + ", "+\t\t\"        [pc: 76, pc: 108] local: e index: 4 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e814925d96451786bb1a26c1aa01a2a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 506, "methodNumberAfterChange": 506, "signatureBeforeChange": " \tpublic void test504()", "signatureAfterChange": " \tpublic void test504()", "diff": ["-\t\t\t\"    1  invokespecial java/lang/Object.<init>()V [9]\\n\" + ", "+\t\t\t\"    1  invokespecial java.lang.Object() [9]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: LX;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: LX<TE;>;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X<E>\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 2] local: this index: 0 type: LX;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 2] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 2] local: this index: 0 type: LX<TE;>;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 2] local: this index: 0 type: X<E>\\n\" + ", "-\t\t\t\"     0  getstatic java/lang/System.out Ljava/io/PrintStream; [27]\\n\" + ", "+\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [27]\\n\" + ", "-\t\t\t\"     7  invokespecial X.<init>()V [28]\\n\" + ", "-\t\t\t\"    10  invokevirtual X.e()LXA; [30]\\n\" + ", "+\t\t\t\"     7  invokespecial X() [28]\\n\" + ", "+\t\t\t\"    10  invokevirtual X.e() : XA  [30]\\n\" + ", "-\t\t\t\"    14  getstatic XAB.CONST LXB; [36]\\n\" + ", "-\t\t\t\"    17  invokevirtual java/io/PrintStream.print(Ljava/lang/Object;)V [42]\\n\" + ", "+\t\t\t\"    14  getstatic XAB.CONST : XB [36]\\n\" + ", "+\t\t\t\"    17  invokevirtual java.io.PrintStream.print(java.lang.Object) : void  [42]\\n\" + ", "-\t\t\t\"    24  invokespecial X.<init>()V [28]\\n\" + ", "-\t\t\t\"    27  invokevirtual X.foo()V [45]\\n\" + ", "+\t\t\t\"    24  invokespecial X() [28]\\n\" + ", "+\t\t\t\"    27  invokevirtual X.foo() : void  [45]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 31] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 31] local: args index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\t\"     0  getstatic java/lang/System.out Ljava/io/PrintStream; [27]\\n\" + ", "+\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [27]\\n\" + ", "-\t\t\t\"     4  invokevirtual X.e()LXA; [30]\\n\" + ", "+\t\t\t\"     4  invokevirtual X.e() : XA  [30]\\n\" + ", "-\t\t\t\"     8  getstatic XB.CONST LXB; [50]\\n\" + ", "-\t\t\t\"    11  invokevirtual java/io/PrintStream.print(Ljava/lang/Object;)V [42]\\n\" + ", "+\t\t\t\"     8  getstatic XB.CONST : XB [50]\\n\" + ", "+\t\t\t\"    11  invokevirtual java.io.PrintStream.print(java.lang.Object) : void  [42]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: LX;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: LX<TE;>;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: X<E>\\n\" + "]}], "num": 1744}