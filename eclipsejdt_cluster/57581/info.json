{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68fcae92c6b100ac8ac3f9a61191c875", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23529c9365872284071292aa832d7d23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "64439b6da14f1b2a3b51bd71fd70f4dc58d2b2a9", "commitAfterChange": "b0e4bc3e5157dbec051001d4b36efba6d30a5b39", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass)", "signatureAfterChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass)", "diff": ["-\t\t\treturn buildTestSuite(evaluationTestClass, highestComplianceLevels());", "+\t\t\t\tTestSuite all = new TestSuite(evaluationTestClass.getName());", "+\t\t\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "+\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_3) != 0) {", "+\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_3));", "+\t\t\t\t}", "+\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "+\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_4));", "+\t\t\t\t}", "+\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "+\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_5));", "+\t\t\t\t}", "+\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "+\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_6));", "+\t\t\t\t}", "+\t\t\t\treturn all;", "+//\t\t\treturn buildTestSuite(evaluationTestClass, highestComplianceLevels());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0c4e6bd42be934fd84b4809e2eb3bf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssertionTest.java", "commitBeforeChange": "e97394b80d49fb5dc34a1a6fec8af65d69ccf130", "commitAfterChange": "c97311a16d75da90e28de4b6dbfdb73ed4c2959e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn setupSuite(testClass());", "+\t\tTestSuite suite = new TestSuite(testClass().getName());", "+\t\tif (highestComplianceLevels().compareTo(COMPLIANCE_1_4) < 0) {", "+\t\t\tSystem.err.println(\"Cannot run \"+testClass().getName()+\" at compliance \"+highestComplianceLevels()+\"!\");", "+\t\t\treturn suite;", "+\t\t}", "+\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "+\t\t\tsuite.addTest(buildTestSuite(testClass(), COMPLIANCE_1_4));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "+\t\t\tsuite.addTest(buildTestSuite(testClass(), COMPLIANCE_1_5));", "+\t\t}", "+\t\treturn suite;"]}], "num": 57581}