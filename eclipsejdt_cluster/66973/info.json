{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "919c39eb5bdf5a32a80651676c3dc8a2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e18e41f4f8c3f0bbad08ec2d2f9b29df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public boolean isPolyExpression()", "signatureAfterChange": " public boolean isPolyExpression(MethodBinding resolutionCandidate)", "diff": ["-\t*/", "+/** Variant of isPolyExpression() to be used during type inference, when a resolution candidate exists. */", "+public boolean isPolyExpression(MethodBinding resolutionCandidate) {", "-\tif (this.binding != null && this.binding instanceof ParameterizedGenericMethodBinding) {", "-\t\tParameterizedGenericMethodBinding pgmb = (ParameterizedGenericMethodBinding) this.binding;", "-\t\treturn pgmb.inferredReturnType;", "+\tif (resolutionCandidate != null) {", "+\t\tif (resolutionCandidate instanceof ParameterizedGenericMethodBinding) {", "+\t\t\tParameterizedGenericMethodBinding pgmb = (ParameterizedGenericMethodBinding) resolutionCandidate;", "+\t\t\tif (pgmb.inferredReturnType)", "+\t\t\t\treturn true; // if already determined", "+\t\t} ", "+\t\tif (resolutionCandidate.returnType != null) {", "+\t\t\t// resolution may have prematurely instantiated the generic method, we need the original, though:", "+\t\t\tMethodBinding candidateOriginal = resolutionCandidate.original();", "+\t\t\treturn candidateOriginal.returnType.mentionsAny(candidateOriginal.typeVariables(), -1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed66b714f1c28b242b50daa660dac227", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public boolean hasNonNullDefault()", "signatureAfterChange": " public boolean hasNonNullDefaultFor(int location, boolean useTypeAnnotations)", "diff": ["-public boolean hasNonNullDefault() {", "-\tif ((this.tagBits & TagBits.AnnotationNonNullByDefault) != 0)", "-\t\treturn true;", "-\tif ((this.tagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0)", "-\t\treturn false;", "-\treturn this.declaringClass.hasNonNullDefault();", "+//pre: null annotation analysis is enabled", "+public boolean hasNonNullDefaultFor(int location, boolean useTypeAnnotations) {", "+\tif (useTypeAnnotations) {", "+\t\tif (this.defaultNullness != 0)", "+\t\t\treturn (this.defaultNullness & location) != 0;", "+\t} else {", "+\t\tif ((this.tagBits & TagBits.AnnotationNonNullByDefault) != 0)", "+\t\t\treturn true;", "+\t\tif ((this.tagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0)", "+\t\t\treturn false;", "+\t}", "+\treturn this.declaringClass.hasNonNullDefaultFor(location, useTypeAnnotations);"]}], "num": 66973}