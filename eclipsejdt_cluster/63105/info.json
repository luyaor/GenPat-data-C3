{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68629620e21a7372655ebc5d52c229ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc8c48ddc82732653d03712610ced1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "b15d555969226382f7ca55d85fc45725a266fc8b", "commitAfterChange": "ea2c66d41813ffe0a73e9227d41cf335eedf7fb6", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic void tagAsAccessingInstanceStateOf(ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic void tagAsAccessingEnclosingInstanceStateOf(ReferenceBinding enclosingType, boolean typeVariableAccess)", "diff": ["-\t */", "-\tpublic void tagAsAccessingInstanceStateOf(ReferenceBinding enclosingType) {", "+\t// Some entity in the receiver scope is referencing instance data of enclosing type. Tag all intervening methods as instance methods. ", "+\tpublic void tagAsAccessingEnclosingInstanceStateOf(ReferenceBinding enclosingType, boolean typeVariableAccess) {", "-\t\t\t\tlambda.shouldCaptureInstance = true;", "+\t\t\t\tif (!typeVariableAccess)", "+\t\t\t\t\tlambda.shouldCaptureInstance = true;  // lambda can still be static, only when `this' is touched (implicitly or otherwise) it cannot be."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a773f055928eb43b3a26316a5a3c1f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic AnnotationBinding getAnnotationType(ReferenceBinding annotationType)", "signatureAfterChange": "  \tpublic AnnotationBinding getAnnotationType(ReferenceBinding annotationType, boolean requireResolved)", "diff": ["-\tpublic AnnotationBinding getAnnotationType(ReferenceBinding annotationType) {", "-\t\treturn this.unannotatedTypeSystem.getAnnotationType(annotationType); // deflect, annotation type uses cannot be type annotated.", "+\tpublic AnnotationBinding getAnnotationType(ReferenceBinding annotationType, boolean requireResolved) {", "+\t\treturn this.unannotatedTypeSystem.getAnnotationType(annotationType, requireResolved); // deflect, annotation type uses cannot be type annotated."]}], "num": 63105}