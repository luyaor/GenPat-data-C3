{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e71ea1c5d7089ced3535cbf53af598b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b659c290c376fd8fcc7d7a8852933d0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "cee72fca9d21d8ecea9da9111153a7e6090893c1", "commitAfterChange": "7acc88bea1b14ad0605dc44e25dbce0a325a851c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test000()", "signatureAfterChange": " \tpublic void test000()", "diff": ["-\t\t\t\t\t\"\t\tT oldest = null;\\n\" +", "-\t\t\t\t\t\"\t\tint maxAge = Integer.MIN_VALUE;\\n\" +", "-\t\t\t\t\t\"        for (T t : T.values()) {\\n\" + ", "+\t\t\t\t\t\"    \tT oldest = null;\\n\" +", "+\t\t\t\t\t\"    \tint maxAge = Integer.MIN_VALUE;\\n\" +", "+\t\t\t\t\t\"    \tfor (T t : T.values()) {\\n\" + ", "+\t\t\t\t\t\"            if (t == YODA) continue;// skip YODA\\n\" +", "-\t\t\t\t\t\"\t\t\t    oldest = t;\\n\" +", "-\t\t\t\t\t\"\t\t\t\tmaxAge = t.age();\\n\" +", "+\t\t\t\t\t\"               oldest = t;\\n\" +", "+\t\t\t\t\t\"               maxAge = t.age();\\n\" +", "-\t\t\t\t\t\"        System.out.println(\\\" WINNER is:\\\" + oldest);\\n\" +", "+\t\t\t\t\t\"        System.out.println(\\\" WINNER is:\\\" + T.valueOf(oldest.name()));\\n\" +", "+\t\t\t\t\t\"\tYODA(41),\\n\" +", "-\t\t\t\t\t\"\tT() { this(41); }\\n\" + ", "+\t\t\t\t\t\"\tT() { this(YODA.age()); }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc7a75c440617fa7bda9ca0bc06d101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void test027() throws Exception", "signatureAfterChange": "  \tpublic void test041_field() throws Exception", "diff": ["-\t// check locations", "-\tpublic void test027() throws Exception {", "+", "+\tpublic void test041_field() throws Exception {", "-\t\t\t\t\"\t@H java.lang.String @E[] @F[] @G[] field;\\n\" + ", "+\t\t\t\t\"\tjava.lang.@H String @E[] @F[] @G[] field;\\n\" + ", "-\t\t\t\"        target type = 0xf FIELD_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        locations = {2}\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [ARRAY, ARRAY, ARRAY]\\n\" + ", "-\t\t\t\"        target type = 0xf FIELD_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [ARRAY]\\n\" + ", "-\t\t\t\"        target type = 0xe FIELD\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "-\t\t\t\"        target type = 0xf FIELD_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        locations = {1}\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [ARRAY, ARRAY]\\n\" + "]}], "num": 54964}