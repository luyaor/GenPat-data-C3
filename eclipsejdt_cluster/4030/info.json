{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "942348e4551d19afc269cf80b5b78090", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84abc2e102269e99bcb2c0991929b596", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int[] findOverriddenInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "  int[] findOverriddenInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\t\twhile (declaringClass == declaringClass2) {", "+\t\twhile (TypeBinding.equalsEquals(declaringClass, declaringClass2)) {", "-\t\t\tif (declaringClass == declaringClass2) continue;", "+\t\t\tif (TypeBinding.equalsEquals(declaringClass, declaringClass2)) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aec1b1c2b345ebdd9e3986376bf8689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a170a70f9fd89b9996c94f318397ff4dca1db782", "commitAfterChange": "25c55f5a3b95044fb71ce56ee0bb0a797b58daa1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "signatureAfterChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "diff": ["-\t\t\tif (expressionType == castType) {", "+\t\t\tif (TypeBinding.equalsEquals(expressionType, castType)) {", "-\t\t\tif (castType == expressionType) {", "+\t\t\tif (TypeBinding.equalsEquals(castType, expressionType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a67c81060ae2855bcc2449742dd3f3cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public final boolean canBeSeenBy(InvocationSite invocationSite, Scope scope)", "signatureAfterChange": "  public final boolean canBeSeenBy(InvocationSite invocationSite, Scope scope)", "diff": ["-\tif (invocationType == this.declaringClass) return true;", "+\tif (TypeBinding.equalsEquals(invocationType, this.declaringClass)) return true;", "-\t\treturn outerInvocationType == outerDeclaringClass;", "+\t\treturn TypeBinding.equalsEquals(outerInvocationType, outerDeclaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92237c692bccd42a120a82f3d6c4143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tprivate ConstraintTypeFormula combineSuperAndSub(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": "  \tprivate ConstraintTypeFormula combineSuperAndSub(TypeBound boundS, TypeBound boundT)", "diff": ["-\t\tif (alpha == boundT.left) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\tif (TypeBinding.equalsEquals(alpha, boundT.left))", "-\t\t\tif (alpha == boundT.right) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\t\tif (TypeBinding.equalsEquals(alpha, boundT.right))"]}], "num": 4030}