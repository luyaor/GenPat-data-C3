{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "073301289d25d7fed1f91078e2319711", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11e63860c6f17acde833326bb5722efd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " \tpublic void test062()", "signatureAfterChange": " \tpublic void test062()", "diff": ["-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"Errors.java\",", "-\t\t\t\t\"public class Errors {\\n\" +", "-\t\t\t\t\"\tvoid foo() {\\n\" +", "-\t\t\t\t\"\t\tEx<String> ex = new Ex<String>();\\n\" +", "-\t\t\t\t\"\t\tex.proof(\\\"eclipse\\\");\\n\" +", "-\t\t\t\t\"\t\tex.five(\\\"eclipse\\\");\\n\" +", "-\t\t\t\t\"\t\tex.six(\\\"eclipse\\\");\\n\" +", "-\t\t\t\t\"\t\tEx ex2 = ex;\\n\" +", "-\t\t\t\t\"\t\tex2.proof(\\\"eclipse\\\");\\n\" +", "-\t\t\t\t\"\t\tex2.five(\\\"eclipse\\\");\\n\" +", "-\t\t\t\t\"\t\tex2.six(\\\"eclipse\\\");\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Top<TC> {\\n\" +", "-\t\t\t\t\"\t<TM> void proof(Object cTop) {}\\n\" +", "-\t\t\t\t\"\t<TM> void five(TC cTop) {}\\n\" +", "-\t\t\t\t\"\tvoid six(TC cTop) {}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Ex<C> extends Top<C> {\\n\" +", "-\t\t\t\t\"\t@Override void proof(Object cTop) {}\\n\" +", "-\t\t\t\t\"\t@Override void five(C cEx) {}\\n\" +", "-\t\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" +", "-\t\t\t\t\"}\"", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t?\t\"----------\\n\" + ", "+\t\t:\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Errors.java (at line 6)\\n\" + ", "+\t\t\t\"\tex.six(\\\"eclipse\\\");\\n\" + ", "+\t\t\t\"\t   ^^^\\n\" + ", "+\t\t\t\"The method six(String) is ambiguous for the type Ex<String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in Errors.java (at line 7)\\n\" + ", "+\t\t\t\"\tEx ex2 = ex;\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"Ex is a raw type. References to generic type Ex<C> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in Errors.java (at line 9)\\n\" + ", "+\t\t\t\"\tex2.five(\\\"eclipse\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method five(Object) belongs to the raw type Ex. References to generic type Ex<C> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in Errors.java (at line 10)\\n\" + ", "+\t\t\t\"\tex2.six(\\\"eclipse\\\");\\n\" + ", "+\t\t\t\"\t    ^^^\\n\" + ", "+\t\t\t\"The method six(Object) is ambiguous for the type Ex\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in Errors.java (at line 21)\\n\" + ", "+\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method six(C) of type Ex<C> has the same erasure as six(TC) of type Top<TC> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in Errors.java (at line 21)\\n\" + ", "+\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method six(C) of type Ex<C> must override or implement a supertype method\\n\" + ", "+\t\t\t\"----------\\n\";\t\t", "+\t\t\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"Errors.java\",", "+\t\t\t\t\"public class Errors {\\n\" +", "+\t\t\t\t\"\tvoid foo() {\\n\" +", "+\t\t\t\t\"\t\tEx<String> ex = new Ex<String>();\\n\" +", "+\t\t\t\t\"\t\tex.proof(\\\"eclipse\\\");\\n\" +", "+\t\t\t\t\"\t\tex.five(\\\"eclipse\\\");\\n\" +", "+\t\t\t\t\"\t\tex.six(\\\"eclipse\\\");\\n\" +", "+\t\t\t\t\"\t\tEx ex2 = ex;\\n\" +", "+\t\t\t\t\"\t\tex2.proof(\\\"eclipse\\\");\\n\" +", "+\t\t\t\t\"\t\tex2.five(\\\"eclipse\\\");\\n\" +", "+\t\t\t\t\"\t\tex2.six(\\\"eclipse\\\");\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Top<TC> {\\n\" +", "+\t\t\t\t\"\t<TM> void proof(Object cTop) {}\\n\" +", "+\t\t\t\t\"\t<TM> void five(TC cTop) {}\\n\" +", "+\t\t\t\t\"\tvoid six(TC cTop) {}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Ex<C> extends Top<C> {\\n\" +", "+\t\t\t\t\"\t@Override void proof(Object cTop) {}\\n\" +", "+\t\t\t\t\"\t@Override void five(C cEx) {}\\n\" +", "+\t\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" +", "+\t\t\t\t\"}\"", "+\t\t\t},", "+\t\t\texpectedOutput"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "313480a665e49bb6f4340c1755e9fd2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void test088()", "signatureAfterChange": " public void test088()", "diff": ["+\tString errorMessage =", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\"\tpublic class X extends Date implements Runnable{\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The serializable class X does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p\\\\X.java (at line 12)\\n\" + ", "+\t\t\"\tthis.super();\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Illegal enclosing instance specification for type Object\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in p\\\\X.java (at line 25)\\n\" + ", "+\t\t\"\tprivate void a() { System.out.println(\\\"A\\\");} \\n\" + ", "+\t\t\"\t             ^^^\\n\" + ", "+\t\t\"The method a() from the type X is never used locally\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in p\\\\X.java (at line 31)\\n\" + ", "+\t\t\"\tClass c = b.getClass();\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in p\\\\X.java (at line 39)\\n\" + ", "+\t\t\"\tMethod _getMethod = c.getMethod(\\\"d\\\",null);\\n\" + ", "+\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"The argument of type null should explicitly be cast to Class[] for the invocation of the varargs method getMethod(String, Class...) from type Class. It could alternatively be cast to Class for a varargs invocation\\n\" + ", "+\t\t\"----------\\n\";", "+\tif (System.getProperty(\"java.version\").startsWith(\"1.6\")) {", "+\t\terrorMessage =", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic class X extends Date implements Runnable{\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"The serializable class X does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in p\\\\X.java (at line 12)\\n\" + ", "+\t\t\t\"\tthis.super();\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Illegal enclosing instance specification for type Object\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in p\\\\X.java (at line 25)\\n\" + ", "+\t\t\t\"\tprivate void a() { System.out.println(\\\"A\\\");} \\n\" + ", "+\t\t\t\"\t             ^^^\\n\" + ", "+\t\t\t\"The method a() from the type X is never used locally\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in p\\\\X.java (at line 31)\\n\" + ", "+\t\t\t\"\tClass c = b.getClass();\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in p\\\\X.java (at line 39)\\n\" + ", "+\t\t\t\"\tMethod _getMethod = c.getMethod(\\\"d\\\",null);\\n\" + ", "+\t\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The argument of type null should explicitly be cast to Class[] for the invocation of the varargs method getMethod(String, Class...) from type Class. It could alternatively be cast to Class for a varargs invocation\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in p\\\\X.java (at line 39)\\n\" + ", "+\t\t\t\"\tMethod _getMethod = c.getMethod(\\\"d\\\",null);\\n\" + ", "+\t\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method getMethod(String, Class...) belongs to the raw type Class. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\";", "+\t}", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in p\\\\X.java (at line 4)\\n\" + ", "-\t\t\"\tpublic class X extends Date implements Runnable{\\n\" + ", "-\t\t\"\t             ^\\n\" + ", "-\t\t\"The serializable class X does not declare a static final serialVersionUID field of type long\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in p\\\\X.java (at line 12)\\n\" + ", "-\t\t\"\tthis.super();\\n\" + ", "-\t\t\"\t^^^^\\n\" + ", "-\t\t\"Illegal enclosing instance specification for type Object\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. WARNING in p\\\\X.java (at line 25)\\n\" + ", "-\t\t\"\tprivate void a() { System.out.println(\\\"A\\\");} \\n\" + ", "-\t\t\"\t             ^^^\\n\" + ", "-\t\t\"The method a() from the type X is never used locally\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. WARNING in p\\\\X.java (at line 31)\\n\" + ", "-\t\t\"\tClass c = b.getClass();\\n\" + ", "-\t\t\"\t^^^^^\\n\" + ", "-\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"5. WARNING in p\\\\X.java (at line 39)\\n\" + ", "-\t\t\"\tMethod _getMethod = c.getMethod(\\\"d\\\",null);\\n\" + ", "-\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The argument of type null should explicitly be cast to Class[] for the invocation of the varargs method getMethod(String, Class...) from type Class. It could alternatively be cast to Class for a varargs invocation\\n\" + ", "-\t\t\"----------\\n\");", "+\t\terrorMessage);"]}], "num": 116}