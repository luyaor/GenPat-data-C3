{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d147cebfb4fb0d9001851dfdee84e57", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f65caddb347acd474d432d384f6e6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d939c06c1bb86210ecdbf93881e5113054d8f519", "commitAfterChange": "69eeae945b65b4592f77b2b84f96eeb06060ca5b", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tpublic boolean isInsideDeprecatedCode()", "signatureAfterChange": " \t \tpublic boolean isInsideDeprecatedCode()", "diff": ["-\t\t\t\t\tif (type != null && type.isViewedAsDeprecated())", "-\t\t\t\t\t\treturn true;", "+\t\t\t\t\tif (type != null) {", "+\t\t\t\t\t\ttype.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "+\t\t\t\t\t\tif (type.isViewedAsDeprecated())", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "-\t\t\t\tif (context != null && context.isViewedAsDeprecated())", "-\t\t\t\t\treturn true;", "+\t\t\t\tif (context != null) {", "+\t\t\t\t\tcontext.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "+\t\t\t\t\tif (context.isViewedAsDeprecated()) ", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t}", "-\t\t\t\t\tif (type != null && type.isViewedAsDeprecated())", "-\t\t\t\t\t\treturn true;", "+\t\t\t\t\tif (type != null) {", "+\t\t\t\t\t\ttype.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "+\t\t\t\t\t\tif (type.isViewedAsDeprecated())", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e15deaa27d0d76c93d853bd658ccf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "75b43aaa526a1cf6912e3e54d35f6092bc9d1088", "commitAfterChange": "bbb750998e75511ba75783c9f2d763f2e32279d9", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  \tpublic boolean isInsideDeprecatedCode()", "signatureAfterChange": "  \tpublic boolean isInsideDeprecatedCode()", "diff": ["-\t\t\t\t} else {", "-\t\t\t\t\tSourceTypeBinding type = ((BlockScope)this).referenceType().binding;", "+\t\t\t\t} else if (methodScope.initializedField != null && methodScope.initializedField.isViewedAsDeprecated()) {", "-\t\t\t\t\tif (methodScope.initializedField != null && methodScope.initializedField.isViewedAsDeprecated())", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t\tSourceTypeBinding declaringType = ((BlockScope)this).referenceType().binding;", "+\t\t\t\tif (declaringType != null) {", "+\t\t\t\t\tdeclaringType.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "+\t\t\t\t\tif (declaringType.isViewedAsDeprecated())", "-\t\t\t\t\tif (type != null) {", "-\t\t\t\t\t\ttype.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "-\t\t\t\t\t\tif (type.isViewedAsDeprecated())", "-\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t}"]}], "num": 39499}