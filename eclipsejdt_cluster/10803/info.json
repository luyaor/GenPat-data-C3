{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e08991f668d73f5d29f053ea089c9713", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711979872673aae0ccec08d194a1470b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "5d4f893fa59b3511c935dd72cb6bf3884d345168", "commitAfterChange": "e73dd341e9699a6a9df4ed250d5ab3fd9ae18d61", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " public void testCompletionQualifiedExpectedType() throws JavaModelException", "signatureAfterChange": " public void testCompletionQualifiedExpectedType() throws JavaModelException", "diff": ["-\t\tassertEquals(", "-\t\t\t\"element:CompletionQualifiedExpectedType    completion:CompletionQualifiedExpectedType    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\t\"element:PX    completion:pack2.PX    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE+ R_NON_RESTRICTED),", "-\t\t\trequestor.getResults());", "+\t\tif(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "+\t\t\tassertEquals(", "+\t\t\t\t\"\",", "+\t\t\t\trequestor.getResults());", "+\t\t} else {", "+\t\t\tassertEquals(", "+\t\t\t\t\"element:CompletionQualifiedExpectedType    completion:CompletionQualifiedExpectedType    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\t\t\"element:PX    completion:pack2.PX    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE+ R_NON_RESTRICTED),", "+\t\t\t\trequestor.getResults());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db1a3acfdd5eb3686cabc6b0596af8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "5d4f893fa59b3511c935dd72cb6bf3884d345168", "commitAfterChange": "e73dd341e9699a6a9df4ed250d5ab3fd9ae18d61", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void testCompletionEmptyTypeName1() throws JavaModelException", "signatureAfterChange": " public void testCompletionEmptyTypeName1() throws JavaModelException", "diff": ["-\tassertEquals(", "-\t\t\"element:A    completion:A    relevance:\" +(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:CompletionEmptyTypeName1    completion:CompletionEmptyTypeName1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tif(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "+\t\tassertEquals(", "+\t\t\t\"\",", "+\t\t\trequestor.getResults());", "+\t} else {", "+\t\tassertEquals(", "+\t\t\t\"element:A    completion:A    relevance:\" +(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\t\"element:CompletionEmptyTypeName1    completion:CompletionEmptyTypeName1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "+\t\t\trequestor.getResults());", "+\t}"]}], "num": 10803}