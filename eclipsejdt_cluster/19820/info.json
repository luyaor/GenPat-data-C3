{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b5d7c33bcd6018b8b48d2a5a0957c08", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a40f935f1493185c4831e022f824c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "09e6a0d689d92bccdede36cccd43932276d7e4d3", "commitAfterChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public MethodBinding getSingleAbstractMethod(Scope scope)", "signatureAfterChange": " public MethodBinding getSingleAbstractMethod(Scope scope)", "diff": ["-\t\t\tif (!MethodVerifier.isParameterSubsignature(method, otherMethod, environment) || !MethodVerifier.areReturnTypesCompatible(method, otherMethod, environment)) ", "+\t\t\t", "+\t\t\tif (genericMethodSeen) { // adapt type parameters.", "+\t\t\t\totherMethod = MethodVerifier.computeSubstituteMethod(otherMethod, method, environment);", "+\t\t\t\tif (otherMethod == null)", "+\t\t\t\t\tcontinue next;", "+\t\t\t}", "+\t\t\tif (!MethodVerifier.isSubstituteParameterSubsignature(method, otherMethod, environment) || !MethodVerifier.areReturnTypesCompatible(method, otherMethod, environment)) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40982d324c41e410fb4338b167c6e906", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\t\t\t\t\tif (existingMethods[i].declaringClass != inheritedMethod.declaringClass && areMethodsEqual(existingMethods[i], inheritedMethod)) {", "+\t\t\t\t\tif (existingMethods[i].declaringClass != inheritedMethod.declaringClass && areMethodsCompatible(existingMethods[i], inheritedMethod)) {", "-\t\t\t\t\tif (areMethodsEqual(nonVisible[i], inheritedMethod))", "+\t\t\t\t\tif (areMethodsCompatible(nonVisible[i], inheritedMethod))", "-\t\t\t\t\t\tif (areMethodsEqual(current[i], inheritedMethod)) {", "+\t\t\t\t\t\tif (areMethodsCompatible(current[i], inheritedMethod)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8163b905daa56d1c62691c88fc5591", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "fdc1a95914ad55bbfb8c709b84d743d5d21781f2", "commitAfterChange": "255c17210a3eb3218269e27dd263bf73946a0d2e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\t\t\tMethodBinding[] nonVisible = (MethodBinding[]) nonVisibleDefaultMethods.get(inheritedMethod.selector);", "-\t\t\tif (nonVisible != null)", "-\t\t\t\tfor (int i = 0, l = nonVisible.length; i < l; i++)", "-\t\t\t\t\tif (areMethodsCompatible(nonVisible[i], inheritedMethod))", "-\t\t\t\t\t\tcontinue nextMethod;", "+\t\t\t\tMethodBinding[] nonVisible = (MethodBinding[]) nonVisibleDefaultMethods.get(inheritedMethod.selector);", "+\t\t\t\tif (nonVisible != null)", "+\t\t\t\t\tfor (int i = 0, l = nonVisible.length; i < l; i++)", "+\t\t\t\t\t\tif (areMethodsCompatible(nonVisible[i], inheritedMethod))", "+\t\t\t\t\t\t\tcontinue nextMethod;"]}], "num": 19820}