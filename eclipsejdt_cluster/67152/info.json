{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64bd3d3e4dbc5a603342b5e713911994", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7083fd1303f0f13167ae799752e63921", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "da0372488a7d84e7cb9c4ca0733fb42f30faa604", "commitAfterChange": "f4bb90e126352ba58699dc135199884ab2b69a00", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void complainOnFinalAssignmentsInLoop( \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void complainOnDeferredChecks(BlockScope scope, FlowInfo flowInfo)", "diff": ["-\tpublic void complainOnFinalAssignmentsInLoop(", "-\t\tBlockScope scope,", "-\t\tFlowInfo flowInfo) {", "+\tpublic void complainOnDeferredChecks(BlockScope scope, FlowInfo flowInfo) {", "+\t\t", "+\t\t// complain on final assignments in loops", "+\t\t// check inconsistent null checks", "+\t\tfor (int i = 0; i < nullCount; i++) {", "+\t\t\tExpression expression = nullReferences[i];", "+\t\t\tif (expression == null) continue;", "+\t\t\t// final local variable", "+\t\t\tLocalVariableBinding local = expression.localVariableBinding();", "+\t\t\tswitch (nullStatus[i]) {", "+\t\t\t\tcase FlowInfo.NULL :", "+\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "+\t\t\t\t\t\tnullReferences[i] = null;", "+\t\t\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, expression);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase FlowInfo.NON_NULL :", "+\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "+\t\t\t\t\t\tnullReferences[i] = null;", "+\t\t\t\t\t\tscope.problemReporter().localVariableCannotBeNull(local, expression);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d89d8c07844916a0026a88cb4c26426", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "da0372488a7d84e7cb9c4ca0733fb42f30faa604", "commitAfterChange": "f4bb90e126352ba58699dc135199884ab2b69a00", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void complainOnRedundantFinalAssignments( \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\tpublic void complainOnRedundantFinalAssignments(", "-\t\tFlowInfo flowInfo,", "-\t\tBlockScope scope) {", "+\tpublic void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope) {", "+\t\t", "+\t\t// check redundant final assignments", "+\t\t", "+\t\t// check inconsistent null checks", "+\t\tfor (int i = 0; i < nullCount; i++) {", "+\t\t\tExpression expression = nullReferences[i];", "+\t\t\tif (expression == null) continue;", "+\t\t\t// final local variable", "+\t\t\tLocalVariableBinding local = expression.localVariableBinding();", "+\t\t\tswitch (nullStatus[i]) {", "+\t\t\t\tcase FlowInfo.NULL :", "+\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "+\t\t\t\t\t\tnullReferences[i] = null;", "+\t\t\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, expression);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase FlowInfo.NON_NULL :", "+\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "+\t\t\t\t\t\tnullReferences[i] = null;", "+\t\t\t\t\t\tscope.problemReporter().localVariableCannotBeNull(local, expression);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}"]}], "num": 67152}