{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9460c188ae24c1d763efe91006356c6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ddd81a4e757337ea7de9ca651e1a4f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "43a229f8875bdbbd2ef36ab2eab7bb78009757b0", "commitAfterChange": "aed8ca051e93307e5096d0b341a609525b181cbd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t        this.valueCast = originalBinding.returnType.genericCast(scope.boxing(runtimeTimeType)); // runtimeType could be base type in boxing case", "+\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "+\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "+\t\t    \t\t: runtimeTimeType;", "+\t\t        this.valueCast = originalBinding.returnType.genericCast(targetType); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "174d9f89dbec545774ac99e715a47a25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "43a229f8875bdbbd2ef36ab2eab7bb78009757b0", "commitAfterChange": "aed8ca051e93307e5096d0b341a609525b181cbd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t        this.genericCast = originalBinding.type.genericCast(scope.boxing(runtimeTimeType)); // runtimeType could be base type in boxing case", "+\t\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "+\t\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "+\t\t\t    \t\t: runtimeTimeType;", "+\t\t\t        this.genericCast = originalBinding.type.genericCast(targetType);"]}], "num": 64371}