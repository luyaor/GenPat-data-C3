{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86df1055cc3827170eec97f0d38d290c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d48cbd40a31df5e3947d4711241e4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo, int matchRule)", "diff": ["+\t */", "+\tpublic static SearchPattern createPattern(IJavaElement element, int limitTo, int matchRule) {", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\tsearchPattern = createPackagePattern(elementName.substring(0, lastDot), limitTo, R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\tsearchPattern = createPackagePattern(elementName.substring(0, lastDot), limitTo, matchRule);", "+\t\t\t\t\t\t\tfalse, // does not need signature", "-\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\tlimitTo);", "+\t\t\t\t\t\t\tlimitTo,", "+\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\t\tmatchRule);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\t\t\t\t\t\tmatchRule);", "+\t\t\t\t\t\t\ttrue, // need signature", "-\t\t\t\t\t\t\ttrue, /* generic type */", "-\t\t\t\t\t\t\tlimitTo);", "+\t\t\t\t\t\t\tlimitTo,", "+\t\t\t\t\t\t\tmatchRule);", "+\t\t\t\tif (searchPattern == null) { // TODO (frederic) remove when new API IType.getParameterizedName() will be available", "+\t\t\t\t\tsearchPattern = new TypeReferencePattern(", "+\t\t\t\t\t\tCharOperation.concatWith(type.getPackageFragment().getElementName().toCharArray(), enclosingTypeNames(type), '.'), ", "+\t\t\t\t\t\ttype.getElementName().toCharArray(),", "+\t\t\t\t\t\ttype,", "+\t\t\t\t\t\tmatchRule);", "+\t\t\t\t}", "-\t\t\t\tsearchPattern = createPackagePattern(element.getElementName(), limitTo, R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t\t\t\tsearchPattern = createPackagePattern(element.getElementName(), limitTo, matchRule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82787c3238b6f63182c1ce79c5484392", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["+\t\treturn createPattern(element, limitTo, R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\t}", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\tsearchPattern = createPackagePattern(elementName.substring(0, lastDot), limitTo, R_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\tlimitTo);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\t\t\tR_EXACT_MATCH | R_CASE_SENSITIVE);", "-\t\t\t\t\t\t\ttrue, /* generic type */", "-\t\t\t\t\t\t\tlimitTo);", "-\t\t\t\tsearchPattern = createPackagePattern(element.getElementName(), limitTo, R_EXACT_MATCH | R_CASE_SENSITIVE);"]}], "num": 14742}