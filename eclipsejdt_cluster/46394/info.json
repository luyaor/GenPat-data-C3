{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de04100706f6a80aa99eb5415011b466", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130fcf99fc053a2a73fe51679e50d9c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "789eeb90ee0e4a5b167be3db70baae047d8e7b39", "commitAfterChange": "b604f90cdbfce3d0c990b100eefed2eb9778e66a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "signatureAfterChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "diff": ["+\tif (inheritedConstructorBinding.parameterNonNullness != null) { // this implies that annotation based null analysis is enabled", "+\t\t// copy nullness info from inherited constructor to the new constructor:", "+\t\tint len = inheritedConstructorBinding.parameterNonNullness.length;", "+\t\tSystem.arraycopy(inheritedConstructorBinding.parameterNonNullness, 0, ", "+\t\t\t\tconstructor.binding.parameterNonNullness = new Boolean[len], 0, len);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b822359ef017daccd6565188fc2f94f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "7df383b00e8453025afa0d0c65533607ef343fe1", "commitAfterChange": "92e572400d76e87cd8a411b61ccd6995a99fb8ae", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "signatureAfterChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "diff": ["+\tif (inheritedConstructorBinding.parameterNonNullness != null) { // this implies that annotation based null analysis is enabled", "+\t\t// copy nullness info from inherited constructor to the new constructor:", "+\t\tint len = inheritedConstructorBinding.parameterNonNullness.length;", "+\t\tSystem.arraycopy(inheritedConstructorBinding.parameterNonNullness, 0, ", "+\t\t\t\tconstructor.binding.parameterNonNullness = new Boolean[len], 0, len);", "+\t}"]}], "num": 46394}