{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43113f8e13838f4d3b907f96af101507", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0250014b7fcc7281e70e3064ae87cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "655865cd2962a92267f3475c9e5593885ca91441", "commitAfterChange": "f0e250f13749e7272bf06a2b15756605f80d1c3b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void consumeBinaryExpression(int op)", "signatureAfterChange": " protected void consumeBinaryExpression(int op)", "diff": ["-\tBinaryExpression exp = (BinaryExpression) expressionStack[expressionPtr];", "-\tif(assistNode != null && exp.right == assistNode) {", "-\t\tassistNodeParent = exp;", "+\tif(expressionStack[expressionPtr] instanceof BinaryExpression) {", "+\t\tBinaryExpression exp = (BinaryExpression) expressionStack[expressionPtr];", "+\t\tif(assistNode != null && exp.right == assistNode) {", "+\t\t\tassistNodeParent = exp;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "450367cd09ecf342b8525eb62a2b7194", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "df5d9d5ec101b754aa7670df0792b53f6f3f73d0", "commitAfterChange": "cbb53b020eb8f2caef12392ab027078e6626eb25", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprivate void computeExpectedTypes(AstNode parent, Scope scope)", "signatureAfterChange": " \tprivate void computeExpectedTypes(AstNode parent, Scope scope)", "diff": ["-\t\t\t", "-\t\t\tReferenceBinding binding = (ReferenceBinding)messageSend.receiverType;", "-\t\t\tboolean isStatic = messageSend.receiver.isTypeReference();", "-\t\t\t", "-\t\t\twhile(binding != null) {\t", "-\t\t\t\tcomputeExpectedTypesForMessageSend(", "-\t\t\t\t\tbinding,", "-\t\t\t\t\tmessageSend.selector,", "-\t\t\t\t\tmessageSend.arguments,", "-\t\t\t\t\t(ReferenceBinding)messageSend.receiverType,", "-\t\t\t\t\tscope,", "-\t\t\t\t\tmessageSend,", "-\t\t\t\t\tisStatic);", "-\t\t\t\tcomputeExpectedTypesForMessageSendForInterface(", "-\t\t\t\t\tbinding,", "-\t\t\t\t\tmessageSend.selector,", "-\t\t\t\t\tmessageSend.arguments,", "-\t\t\t\t\t(ReferenceBinding)messageSend.receiverType,", "-\t\t\t\t\tscope,", "-\t\t\t\t\tmessageSend,", "-\t\t\t\t\tisStatic);", "-\t\t\t\tbinding = binding.superclass();", "+", "+\t\t\tif(messageSend.receiverType instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding binding = (ReferenceBinding)messageSend.receiverType;", "+\t\t\t\tboolean isStatic = messageSend.receiver.isTypeReference();", "+\t\t\t\t", "+\t\t\t\twhile(binding != null) {\t", "+\t\t\t\t\tcomputeExpectedTypesForMessageSend(", "+\t\t\t\t\t\tbinding,", "+\t\t\t\t\t\tmessageSend.selector,", "+\t\t\t\t\t\tmessageSend.arguments,", "+\t\t\t\t\t\t(ReferenceBinding)messageSend.receiverType,", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tmessageSend,", "+\t\t\t\t\t\tisStatic);", "+\t\t\t\t\tcomputeExpectedTypesForMessageSendForInterface(", "+\t\t\t\t\t\tbinding,", "+\t\t\t\t\t\tmessageSend.selector,", "+\t\t\t\t\t\tmessageSend.arguments,", "+\t\t\t\t\t\t(ReferenceBinding)messageSend.receiverType,", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tmessageSend,", "+\t\t\t\t\t\tisStatic);", "+\t\t\t\t\tbinding = binding.superclass();", "+\t\t\t\t}"]}], "num": 42501}