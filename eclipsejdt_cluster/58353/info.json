{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7320b984e90a85af44b0f202827f0d70", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b14a01bb9aae2fe189d4b141bca865", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void test046()", "signatureAfterChange": " \tpublic void test046()", "diff": ["-\t\t\t\"     1  istore_1\\n\" + ", "-\t\t\t\"     2  iload_1\\n\" + ", "+\t\t\t\"     1  istore_1 [b]\\n\" + ", "+\t\t\t\"     2  iload_1 [b]\\n\" + ", "-\t\t\t\"     6  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"     9  invokevirtual #26 <Method java/io/PrintStream.println()V>\\n\" + ", "+\t\t\t\"     6  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     9  invokevirtual java/io/PrintStream.println()V [26]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d01f948f9a4360d7761994dc5b18d0d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "c86229e56d86bc6c43c864b0c2be3c639790cc44", "commitAfterChange": "886274eeca44ac156a0ab29fb479330630b97083", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void testBug68017negative()", "signatureAfterChange": " \tpublic void testBug68017negative()", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\t\"\t/**@return*/\\n\" + ", "-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing return type description\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\t/**@return        */\\n\" + ", "-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing return type description\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\t/**@return****/\\n\" + ", "-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing return type description\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\t\"\t*\t@return\\n\" + ", "-\t\t\t\t\"\t \t ^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing return type description\\n\" + ", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\t/**@return*/\\n\" + ", "+\t\t\t\"\t    ^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Description expected after @return\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t/**@return        */\\n\" + ", "+\t\t\t\"\t    ^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Description expected after @return\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\t/**@return****/\\n\" + ", "+\t\t\t\"\t    ^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Description expected after @return\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\t*\t@return\\n\" + ", "+\t\t\t\"\t \t ^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Description expected after @return\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e08b97a16f1732a7dd0c2c43341b0c22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \t \tpublic void test066()", "signatureAfterChange": " \t \tpublic void test066()", "diff": ["-\t\t\t\"     8  invokestatic X.boom()Z [27]\\n\" + ", "+\t\t\t\"     8  invokestatic X.boom() : boolean  [27]\\n\" + ", "-\t\t\t\"    14  getstatic java/lang/System.out Ljava/io/PrintStream; [33]\\n\" + ", "+\t\t\t\"    14  getstatic java.lang.System.out : java.io.PrintStream [33]\\n\" + ", "-\t\t\t\"    18  invokevirtual java/io/PrintStream.println(I)V [39]\\n\" + ", "+\t\t\t\"    18  invokevirtual java.io.PrintStream.println(int) : void  [39]\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 22] local: i index: 0 type: I\\n\";", "+\t\t\t\"        [pc: 2, pc: 22] local: i index: 0 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74d944784f26800be8fc7cabf2ad3fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void test084()", "signatureAfterChange": " \tpublic void test084()", "diff": ["-\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type AX is converted to AX<String> using a raw conversion. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type AX is converted to AX<String> using a raw conversion. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type AX is converted to AX<String> using a raw conversion. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type AX is converted to AX<String> using a raw conversion. References to generic type AX<P> should be parameterized\\n\" + "]}], "num": 58353}