{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1f554637e0e18116c24511842fbcf87", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc3e6fc6db2a0363160e72d7b93417f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void store(OutputStream output, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void store(OutputStream output, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tif(focusType != null) {", "+\t\tif(this.focusType != null) {", "-\t\t\thashtable.put(focusType, index);", "-\t\t\thashtable2.put(index, focusType);", "+\t\t\thashtable.put(this.focusType, index);", "+\t\t\thashtable2.put(index, this.focusType);", "-\t\tObject[] types = classToSuperclass.keySet().toArray();", "+\t\tObject[] types = this.classToSuperclass.keySet().toArray();", "-\t\t\tObject superClass = classToSuperclass.get(t);", "+\t\t\tObject superClass = this.classToSuperclass.get(t);", "-\t\ttypes = typeToSuperInterfaces.keySet().toArray();", "+\t\ttypes = this.typeToSuperInterfaces.keySet().toArray();", "-\t\t\tObject[] sp = (Object[])typeToSuperInterfaces.get(t);", "+\t\t\tObject[] sp = (Object[])this.typeToSuperInterfaces.get(t);", "-\t\tif(computeSubtypes) {", "+\t\tif(this.computeSubtypes) {", "-\t\tif(project != null) {", "-\t\t\toutput.write(project.getHandleIdentifier().getBytes());", "+\t\tif(this.project != null) {", "+\t\t\toutput.write(this.project.getHandleIdentifier().getBytes());", "-\t\tfor (int i = 0; i < missingTypes.size(); i++) {", "+\t\tfor (int i = 0; i < this.missingTypes.size(); i++) {", "-\t\t\toutput.write(((String)missingTypes.get(i)).getBytes());", "+\t\t\toutput.write(((String)this.missingTypes.get(i)).getBytes());", "-\t\t\toutput.write(flagsToBytes((Integer)typeFlags.get(t)));", "+\t\t\toutput.write(flagsToBytes((Integer)this.typeFlags.get(t)));", "-\t\t\tif(focusType != null && focusType.equals(t)) {", "+\t\t\tif(this.focusType != null && this.focusType.equals(t)) {", "-\t\t\tif(interfaces.contains(t)) {", "+\t\t\tif(this.interfaces.contains(t)) {", "-\t\t\tif(rootClasses.contains(t)) {", "+\t\t\tif(this.rootClasses.contains(t)) {", "-\t\ttypes = classToSuperclass.keySet().toArray();", "+\t\ttypes = this.classToSuperclass.keySet().toArray();", "-\t\t\tIJavaElement value = (IJavaElement)classToSuperclass.get(key);", "+\t\t\tIJavaElement value = (IJavaElement)this.classToSuperclass.get(key);", "-\t\ttypes = typeToSuperInterfaces.keySet().toArray();", "+\t\ttypes = this.typeToSuperInterfaces.keySet().toArray();", "-\t\t\tIJavaElement[] values = (IJavaElement[])typeToSuperInterfaces.get(key);", "+\t\t\tIJavaElement[] values = (IJavaElement[])this.typeToSuperInterfaces.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc5f0bdffa6192048e5310589ec88ce7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/VariablesEvaluator.java", "commitBeforeChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "commitAfterChange": "846faf5699bcd826a09451dfb06e7bb91fe5a472", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected char[] getSource()", "signatureAfterChange": " protected char[] getSource()", "diff": ["-\t\tbuffer.append(';').append(Util.LINE_SEPARATOR);", "+\t\tbuffer.append(';').append(this.context.lineSeparator);", "-\t\tbuffer.append(';').append(Util.LINE_SEPARATOR);", "+\t\tbuffer.append(';').append(this.context.lineSeparator);", "-\tbuffer.append(\" {\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$", "+\tbuffer.append(\" {\").append(this.context.lineSeparator); //$NON-NLS-1$", "-\t\tbuffer.append(';').append(Util.LINE_SEPARATOR);", "+\t\tbuffer.append(';').append(this.context.lineSeparator);", "-\tbuffer.append(\"\\tstatic {\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$", "+\tbuffer.append(\"\\tstatic {\").append(this.context.lineSeparator); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(\"\\t\\ttry {\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(\"\\t\\ttry {\").append(this.context.lineSeparator); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(';').append(Util.LINE_SEPARATOR);", "-\t\t\t\tbuffer.append(\"\\t\\t} catch (Throwable e) {\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(\"\\t\\t\\te.printStackTrace();\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(\"\\t\\t}\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(';').append(this.context.lineSeparator);", "+\t\t\t\tbuffer.append(\"\\t\\t} catch (Throwable e) {\").append(this.context.lineSeparator); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(\"\\t\\t\\te.printStackTrace();\").append(this.context.lineSeparator); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(\"\\t\\t}\").append(this.context.lineSeparator); //$NON-NLS-1$", "-\t\t\tbuffer.append(';').append(Util.LINE_SEPARATOR);", "+\t\t\tbuffer.append(';').append(this.context.lineSeparator);", "-\tbuffer.append(\"\\t}\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$", "+\tbuffer.append(\"\\t}\").append(this.context.lineSeparator); //$NON-NLS-1$", "-\tbuffer.append('}').append(Util.LINE_SEPARATOR);", "+\tbuffer.append('}').append(this.context.lineSeparator);"]}], "num": 19866}