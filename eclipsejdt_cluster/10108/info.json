{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0e903c3ee927cfb732a3313bee31c6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac94d2d139517769523fff5e518951a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void run(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "diff": ["- */", "-public void run(IProgressMonitor monitor) throws CoreException {", "-\ttry {", "-\t\tfMonitor = monitor;", "-\t\texecute();", "-\t} finally {", "-\t\tregisterDeltas();", "-}", "+\t */", "+\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tint previousDeltaCount = manager.javaModelDeltas.size();", "+\t\ttry {", "+\t\t\tfMonitor = monitor;", "+\t\t\tpushOperation(this);", "+\t\t\ttry {", "+\t\t\t\tthis.execute();", "+\t\t\t} finally {", "+\t\t\t\tif (this.isTopLevelOperation()) {", "+\t\t\t\t\tthis.runPostActions();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} finally {", "+\t\t\ttry {", "+\t\t\t\t// update JavaModel using deltas that were recorded during this operation", "+\t\t\t\tfor (int i = previousDeltaCount, size = manager.javaModelDeltas.size(); i < size; i++) {", "+\t\t\t\t\tmanager.updateJavaModel((IJavaElementDelta)manager.javaModelDeltas.get(i));", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t// fire only iff:", "+\t\t\t\t// - the operation is a top level operation", "+\t\t\t\t// - the operation did produce some delta(s)", "+\t\t\t\t// - but the operation has not modified any resource", "+\t\t\t\tif (this.isTopLevelOperation()", "+\t\t\t\t\t\t&& (manager.javaModelDeltas.size() > previousDeltaCount) ", "+\t\t\t\t\t\t&& !this.hasModifiedResource()) {", "+\t\t\t\t\tmanager.fire(null, JavaModelManager.DEFAULT_CHANGE_EVENT);", "+\t\t\t\t} // else deltas are fired while processing the resource delta", "+\t\t\t} finally {", "+\t\t\t\tpopOperation();", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6246194418235e5a33aefc25e129473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyToSignature.java", "commitBeforeChange": "26659bdfac7e0bec48a495c450ef41e6483c06ca", "commitAfterChange": "2b9d806e096b1ad1d5b618f6abd63279129f9e03", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate char[] substitute(char[] parameter, char[][] typeParameterSigs, int typeParametersLength)", "signatureAfterChange": " \tprivate void substitute(char[] parameter, char[][] typeParameterSigs, int typeParametersLength)", "diff": ["-\tprivate char[] substitute(char[] parameter, char[][] typeParameterSigs, int typeParametersLength) {", "+\t */", "+\tprivate void substitute(char[] parameter, char[][] typeParameterSigs, int typeParametersLength) {", "-\t\t\t\treturn typeArgument.toCharArray();", "+\t\t\t\tthis.signature.append(typeArgument);", "+\t\t\t\treturn;", "-\t\treturn parameter;", "+\t\tint genericStart = CharOperation.indexOf(Signature.C_GENERIC_START, parameter);", "+\t\tif (genericStart > -1) {", "+\t\t\tthis.signature.append(CharOperation.subarray(parameter, 0, genericStart));", "+\t\t\tchar[][] parameters = Signature.getTypeArguments(parameter);", "+\t\t\tthis.signature.append(Signature.C_GENERIC_START);", "+\t\t\tfor (int j = 0, paramsLength = parameters.length; j < paramsLength; j++)", "+\t\t\t\tsubstitute(parameters[j], typeParameterSigs, typeParametersLength);", "+\t\t\tthis.signature.append(Signature.C_GENERIC_END);", "+\t\t\tthis.signature.append(Signature.C_SEMICOLON);", "+\t\t} else {", "+\t\t\tthis.signature.append(parameter);", "+\t\t}"]}], "num": 10108}