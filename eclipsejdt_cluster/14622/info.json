{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9713c07d1ebbefad6540c4b0a334fdb5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7571b9ad4095ac7c0c6b4dec1c9ab947", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "signatureAfterChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "diff": ["-\t\t\t\t\t// if we are in source level < 1.5, we report an integer literal", "+\t\t\t\t\tif (end == start) {", "+\t\t\t\t\t\tthrow new InvalidInputException(INVALID_HEXA);", "+\t\t\t\t\t}", "-\t\t\t\t// hexadeciman floating point literal", "+\t\t\t\t// hexadecimal floating point literal"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5f95fc3bdce8718146c4090eb780eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "b92bafecd030777e0d6056677f8286cf640a489f", "commitAfterChange": "fb0e428ed030f082ab1d3e242c3a3df4aa9ceb3d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private Binding findSingleStaticImport(char[][] compoundName)", "signatureAfterChange": " private Binding findSingleStaticImport(char[][] compoundName)", "diff": ["+\tif (i == length) // must resolve to a member type or field, not a top level type", "+\t\treturn new ProblemReferenceBinding(compoundName, InvalidTypeForStaticImport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe8b36780a72b7d22138157e31989c6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "signatureAfterChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "diff": ["-\t\t\t\t\t// if we are in source level < 1.5, we report an integer literal", "+\t\t\t\t\tif (end == start) {", "+\t\t\t\t\t\tthrow new InvalidInputException(INVALID_HEXA);", "+\t\t\t\t\t}", "-\t\t\t\t// hexadeciman floating point literal", "+\t\t\t\t// hexadecimal floating point literal"]}], "num": 14622}