{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3f91cf51bf76a15fdd3b939e3ff2c9f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "877683771049fadad3f33e2e40544aca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": " protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding binding)", "signatureAfterChange": " protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding binding)", "diff": ["-\tboolean matchPattern = false;", "+\tchar[] sourceName = null;", "-\t\t\tmatchPattern = CharOperation.match(qualifiedPattern, getQualifiedSourceName(binding), this.isCaseSensitive);", "+\t\t\tsourceName =  getQualifiedSourceName(binding);", "-\t\t\tmatchPattern = CharOperation.match(qualifiedPattern, binding.sourceName(), this.isCaseSensitive); // need to keep binding to get source name", "+\t\t\tsourceName =  binding.sourceName();", "-\t\tmatchPattern = CharOperation.match(qualifiedPattern, getQualifiedSourceName(binding), this.isCaseSensitive);", "+\t\tsourceName =  getQualifiedSourceName(binding);", "+\tif (sourceName == null) return IMPOSSIBLE_MATCH;", "+\tif (this.isCamelCase) {", "+\t\tif (!this.isCaseSensitive || (qualifiedPattern.length>0 && sourceName.length>0 && qualifiedPattern[0] == sourceName[0])) {", "+\t\t\tif (CharOperation.camelCaseMatch(qualifiedPattern, sourceName)) {", "+\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t}", "+\t\t\tif (!this.isCaseSensitive && (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0) {", "+\t\t\t\tif (CharOperation.prefixEquals(qualifiedPattern, sourceName, this.isCaseSensitive)) {", "+\t\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\tboolean matchPattern = CharOperation.match(qualifiedPattern, sourceName, this.isCaseSensitive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8044125a5a2ef151f9362cb818ab797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type)", "diff": ["+\tif (this.isCamelCase) {", "+\t\tif (!this.isCaseSensitive || (qualifiedPattern.length>0 && fullyQualifiedTypeName.length>0 && qualifiedPattern[0] == fullyQualifiedTypeName[0])) {", "+\t\t\tif (CharOperation.camelCaseMatch(qualifiedPattern, fullyQualifiedTypeName)) {", "+\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t}", "+\t\t\tif (!this.isCaseSensitive && (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0) {", "+\t\t\t\tif (CharOperation.prefixEquals(qualifiedPattern, fullyQualifiedTypeName, this.isCaseSensitive)) {", "+\t\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 64399}