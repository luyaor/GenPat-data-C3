{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ea57939a294fe27737be8864d222a6b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e856841cd32db61de29a2dda839adb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "aead974e874b102ec762c40a6c05d7a561535bd7", "commitAfterChange": "5ed07afb542d2d2a0a496e3ab79c15b4c0d21e07", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test001c()", "signatureAfterChange": " \tpublic void test001c()", "diff": ["-\t\t\t\t\"Name clash: The method foo(T) of type JJ<T> has the same erasure as foo(U) of type I<U> but does not override it\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(T) of type JJ<T> has the same erasure as foo(Object) of type I but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da0138bf3b7a94cd352ba0e3e709b0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "aead974e874b102ec762c40a6c05d7a561535bd7", "commitAfterChange": "5ed07afb542d2d2a0a496e3ab79c15b4c0d21e07", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test002b()", "signatureAfterChange": " \tpublic void test002b()", "diff": ["-\t\t\t\"Name clash: The method foo(T) of type YY<T> has the same erasure as foo(U) of type X<U> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(T) of type YY<T> has the same erasure as foo(Object) of type X but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a2d6d10e1d58cb5ed252349eb0ee6fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "aead974e874b102ec762c40a6c05d7a561535bd7", "commitAfterChange": "5ed07afb542d2d2a0a496e3ab79c15b4c0d21e07", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test003b()", "signatureAfterChange": " \tpublic void test003b()", "diff": ["-\t\t\t\"Name clash: The method foo(T) of type YY<T> has the same erasure as foo(U) of type X<U> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(T) of type YY<T> has the same erasure as foo(Object) of type X but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3beb61fc1ff18cf98ba0f4ba20f6cf41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "aead974e874b102ec762c40a6c05d7a561535bd7", "commitAfterChange": "5ed07afb542d2d2a0a496e3ab79c15b4c0d21e07", "methodNumberBeforeChange": 1125, "methodNumberAfterChange": 1125, "signatureBeforeChange": " public void test1100()", "signatureAfterChange": " public void test1100()", "diff": ["-\t\t\"Name clash: The method foo(X<?>) of type Z has the same erasure as foo(X<?>) of type Y<T> but does not override it\\n\" + ", "+\t\t\"Name clash: The method foo(X<?>) of type Z has the same erasure as foo(X) of type Y but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b65a932b7441674248ea2f54b9e4b82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "aead974e874b102ec762c40a6c05d7a561535bd7", "commitAfterChange": "5ed07afb542d2d2a0a496e3ab79c15b4c0d21e07", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test002c()", "signatureAfterChange": " \tpublic void test002c()", "diff": ["-\t\t\t\"Name clash: The method foo(T) of type JJ<T> has the same erasure as foo(U) of type I<U> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(T) of type JJ<T> has the same erasure as foo(Object) of type I but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8c985bfe6bd3cb7ad937e843b6a25b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "aead974e874b102ec762c40a6c05d7a561535bd7", "commitAfterChange": "5ed07afb542d2d2a0a496e3ab79c15b4c0d21e07", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test001b()", "signatureAfterChange": " \tpublic void test001b()", "diff": ["-\t\t\t\"Name clash: The method foo(T) of type YY<T> has the same erasure as foo(U) of type X<U> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(T) of type YY<T> has the same erasure as foo(Object) of type X but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c94aef2b9f4c1a25c36b7565437bb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "aead974e874b102ec762c40a6c05d7a561535bd7", "commitAfterChange": "5ed07afb542d2d2a0a496e3ab79c15b4c0d21e07", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void test003c()", "signatureAfterChange": " \tpublic void test003c()", "diff": ["-\t\t\t\"Name clash: The method foo(T) of type JJ<T> has the same erasure as foo(U) of type I<U> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(T) of type JJ<T> has the same erasure as foo(Object) of type I but does not override it\\n\" + "]}], "num": 16003}