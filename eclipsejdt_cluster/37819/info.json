{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a38d07818f8fbda5e2160e5288a7a625", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f945bb6e1e8d3983088556b5012bf54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "f517623c8ff717f8d173940d5d22fbb012050f04", "commitAfterChange": "b18268c0ce6fbb737cee1ca1291ee19aeeac1ba2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tSourceTypeBinding sourceTypeBinding = scope.enclosingSourceType();", "-\t\tif (this.type == null) {", "-\t\t\tthis.resolvedType = sourceTypeBinding;", "-\t\t\tthis.type = new JavadocQualifiedTypeReference(sourceTypeBinding.compoundName, new long[sourceTypeBinding.compoundName.length], 0, 0);", "+\t\tif (scope.kind == Scope.CLASS_SCOPE) {", "+\t\t\tthis.resolvedType = type.resolveType((ClassScope)scope);", "+\t\t} else {", "+\t\t\tthis.resolvedType = type.resolveType((BlockScope)scope);", "-\t\telse {", "-\t\t\tif (scope.kind == Scope.CLASS_SCOPE) {", "-\t\t\t\tthis.resolvedType = type.resolveType((ClassScope)scope);", "-\t\t\t} else {", "-\t\t\t\tthis.resolvedType = type.resolveType((BlockScope)scope);", "-\t\t\t}", "-\t\t\tif (this.resolvedType == null) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t\tthis.superAccess = sourceTypeBinding.isCompatibleWith(this.resolvedType);", "-\t\t}", "-\t\t// will check for null after args are resolved", "+\t\t// check resolved type", "+\t\tif (this.resolvedType == null) {", "+\t\t\treturn null;", "+\t\t}", "+\t\tthis.superAccess = scope.enclosingSourceType().isCompatibleWith(this.resolvedType);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6f1a86718784268b85152be82f41a7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "f517623c8ff717f8d173940d5d22fbb012050f04", "commitAfterChange": "b18268c0ce6fbb737cee1ca1291ee19aeeac1ba2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-", "-\t\tSourceTypeBinding sourceTypeBinding = scope.enclosingSourceType();", "-\t\tif (this.receiver == null) {", "-\t\t\tthis.receiverType = sourceTypeBinding;", "-\t\t\tthis.receiver = new JavadocQualifiedTypeReference(sourceTypeBinding.compoundName, new long[sourceTypeBinding.compoundName.length], 0, 0);", "+\t\tif (scope.kind == Scope.CLASS_SCOPE) {", "+\t\t\tthis.receiverType = receiver.resolveType((ClassScope)scope);", "+\t\t} else {", "+\t\t\tthis.receiverType = receiver.resolveType((BlockScope)scope);", "-\t\telse {", "-\t\t\tif (scope.kind == Scope.CLASS_SCOPE) {", "-\t\t\t\tthis.receiverType = receiver.resolveType((ClassScope)scope);", "-\t\t\t} else {", "-\t\t\t\tthis.receiverType = receiver.resolveType((BlockScope)scope);", "-\t\t\t}", "-\t\t\tif (this.receiverType == null) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t\tthis.superAccess = sourceTypeBinding.isCompatibleWith(this.receiverType);", "-\t\t}", "-\t\tthis.qualifyingType = this.receiverType;", "+\t\t// check receiver type", "+\t\tif (this.receiverType == null) {", "+\t\t\treturn null;", "+\t\t}", "+\t\tthis.qualifyingType = this.receiverType;", "+\t\tthis.superAccess = scope.enclosingSourceType().isCompatibleWith(this.receiverType);", "+"]}], "num": 37819}