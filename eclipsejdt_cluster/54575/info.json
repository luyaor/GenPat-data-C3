{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "168d05bfd0fe706482b1b84ce092d2c9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23775597bab0cd260c6bf9e60c23e325", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "1987bebfc0499fe07d643a641d2e74ff184f5cc7", "commitAfterChange": "2b6b723d87be49aecbb1b89e893d389af560ea10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tif (this.ignoreFurtherInvestigation) {", "-\t\t\treturn;", "-\t\t}", "-\t\tsuper.generateCode(currentScope, codeStream, valueRequired);", "-\t\tthis.body.generateCode(this.scope, codeStream);", "+\t\t", "+\t\tthis.ordinal = currentScope.enclosingSourceType().addLambdaMethod(this);", "+\t\tthis.binding.selector = CharOperation.concat(TypeConstants.ANONYMOUS_METHOD, Integer.toString(this.ordinal).toCharArray());", "+\t\tint pc = codeStream.position;", "+\t\tint invokeDynamicNumber = codeStream.classFile.recordBootstrapMethod(this);", "+\t\tcodeStream.invokeDynamic(invokeDynamicNumber, 0, 1, TypeConstants.ANONYMOUS_METHOD, CharOperation.concat(\"()\".toCharArray(), this.descriptor.declaringClass.signature())); //$NON-NLS-1$", "+\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe0dc3be3b9fedd2d0ab96697146c36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "c2258f3a34b02ad7356115c6022b2790f990bcd4", "commitAfterChange": "b114726e6672732b572036987107a1d4de90980d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void generateCode( \tBlockScope currentScope, \tCodeStream codeStream, \tboolean valueRequired)", "signatureAfterChange": " public void generateCode( \tBlockScope currentScope, \tCodeStream codeStream, \tboolean valueRequired)", "diff": ["-\t\tif (this.arguments != null) {", "-\t\t\tfor (int i = 0, max = this.arguments.length; i < max; i++) {", "-\t\t\t\tthis.arguments[i].generateCode(currentScope, codeStream, true);", "-\t\t\t}", "-\t\t}", "+\t\tgenerateArguments(binding, arguments, currentScope, codeStream);", "-\tif (valueRequired) {", "+\tif (valueRequired){", "-\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "+\t\tif (this.valueCast != null) ", "+\t\t\tcodeStream.checkcast(this.valueCast);", "+\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\tswitch (this.codegenBinding.returnType.id) {", "+\t\tswitch(binding.returnType.id){", "-\t\t\tdefault :", "+\t\t\tdefault:", "-\t// TODO (philippe) need to revise codegen to include genericCast", "-\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\tcodeStream.recordPositionsFrom(pc, (int)(this.nameSourcePosition >>> 32)); // highlight selector"]}], "num": 54575}