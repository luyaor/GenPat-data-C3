{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "687e3793938c91ae736bcfd63a38c0b6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7995524fdbbb4f99f38b2b9a1f6b5ae0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "fd31dd820e0308372e0f0722459d45175ff874ed", "commitAfterChange": "5a12a220bc147ceb34370c89306997df47624c96", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tswitch (delta.getKind()) {\r", "-\t\t\t\tcase IResourceDelta.ADDED:\r", "-\t\t\t\tcase IResourceDelta.CHANGED:\r", "-\t\t\t\t\tif (element instanceof JarPackageFragmentRoot) {\r", "-\t\t\t\t\t\tJarPackageFragmentRoot root = (JarPackageFragmentRoot)element;\r", "-\t\t\t\t\t\t// index jar file only once (if the root is in its declaring project)\r", "-\t\t\t\t\t\tif (root.getJavaProject().getProject().getFullPath().isPrefixOf(root.getPath())) {\r", "-\t\t\t\t\t\t\tindexManager.indexLibrary(root.getPath(), root.getJavaProject().getProject());\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IResourceDelta.REMOVED:\r", "-\t\t\t\t\t// keep index in case it is added back later in this session\r", "-\t\t\t\t\tbreak;\r", "+\t\t\tif (element instanceof JarPackageFragmentRoot) {\r", "+\t\t\t\tJarPackageFragmentRoot root = (JarPackageFragmentRoot)element;\r", "+\t\t\t\t// index jar file only once (if the root is in its declaring project)\r", "+\t\t\t\tIPath jarPath = root.getPath();\r", "+\t\t\t\tswitch (delta.getKind()) {\r", "+\t\t\t\t\tcase IResourceDelta.ADDED:\r", "+\t\t\t\t\t\t// index the new jar\r", "+\t\t\t\t\t\tindexManager.indexLibrary(jarPath, root.getJavaProject().getProject());\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IResourceDelta.CHANGED:\r", "+\t\t\t\t\t\t// first remove the index so that it is forced to be re-indexed\r", "+\t\t\t\t\t\tindexManager.removeIndex(jarPath);\r", "+\t\t\t\t\t\t// then index the jar\r", "+\t\t\t\t\t\tindexManager.indexLibrary(jarPath, root.getJavaProject().getProject());\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IResourceDelta.REMOVED:\r", "+\t\t\t\t\t\t// the jar was physically removed: remove the index\r", "+\t\t\t\t\t\tindexManager.removeIndex(jarPath);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dafaa82854153a5e4889807b942e8f93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetThisReference.java", "commitBeforeChange": "f4235d9a7ac5aab2dff6835e5bec2b59bb167c66", "commitAfterChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (this.isImplicit || checkAccess(scope.methodScope())){", "-\t\t\tsnippetType = scope.enclosingSourceType();", "+\t\tMethodScope methodScope = scope.methodScope();", "+\t\tif (!this.isImplicit && !checkAccess(methodScope)) {", "+\t\t\treturn null;", "-\t\tif (snippetType == null) return null;", "+\t\tsnippetType = scope.enclosingSourceType();", "-\t\tif (this.delegateThis == null) return null; // internal error, field should have been found", "-\t\tif (this.delegateThis.isValidBinding()) return this.resolvedType = this.delegateThis.type;", "-\t\treturn this.resolvedType = snippetType;", "+\t\tif (this.delegateThis == null || !this.delegateThis.isValidBinding()) {", "+\t\t\t// should not happen", "+\t\t\t// if this happen we should report illegal access to this in a static context", "+\t\t\tmethodScope.problemReporter().errorThisSuperInStatic(this);", "+\t\t\treturn null;", "+\t\t}", "+\t\treturn this.resolvedType = this.delegateThis.type;"]}], "num": 19119}