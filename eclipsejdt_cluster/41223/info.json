{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e7d0dfb031d6e7a4fb86f6e15ca4a84", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae72f92d7d8c79b59841d33de558048c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic void testStringPatternNestedParam02() throws CoreException", "signatureAfterChange": " \tpublic void testStringNestedSingleArgument02() throws CoreException", "diff": ["-\tpublic void testStringPatternNestedParam02() throws CoreException {", "+\tpublic void testStringNestedSingleArgument02() throws CoreException {", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_wld [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_wld [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_wld [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_wld [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_wld [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_wld [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<?>.Member] EXACT_MATCH\",", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_wld [GS<GM<?, ?, ?>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_www [GS<GM<GM<?, ?, ?>.Member,GM<?, ?, ?>.Member,GM<?, ?, ?>.Member>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_obj [GS<GM<Object, Exception, RuntimeException>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_wld [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_wld [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_wld [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<GS<?>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<GS<GS<?>.Member>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<GS<?>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_www [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_obj [GS<Object>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_obj [GS<? extends Throwable>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgms_obj [GS<? super RuntimeException>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_wld [GS<g3.t.def.GM<?, ?, ?>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_www [GS<g3.t.def.GM<g3.t.def.GM<?, ?, ?>.Member, g3.t.def.GM<?, ?, ?>.Member, g3.t.def.GM<?, ?, ?>.Member>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_obj [GS<g3.t.def.GM<java.lang.Object, java.lang.Exception, java.lang.RuntimeException>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_wld [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_wld [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_wld [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<g3.t.def.GS<?>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<g3.t.def.GS<g3.t.def.GS<?>.Member>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<g3.t.def.GS<?>.Member>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_www [GS<?>.Member] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_obj [GS<java.lang.Object>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_obj [GS<? extends java.lang.Throwable>.Member] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgms_obj [GS<? super java.lang.RuntimeException>.Member] ERASURE_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0e294e0f00e897c0fd604218679aafa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 439, "methodNumberAfterChange": 439, "signatureBeforeChange": " \tpublic void test435()", "signatureAfterChange": " \tpublic void test435()", "diff": ["-\t\t\t\"1. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\r\\n\" + ", "-\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\r\\n\" + ", "+\t\t\t\"1. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\n\" + ", "-\t\t\t\"2. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\r\\n\" + ", "+\t\t\t\"3. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t                           ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + "]}], "num": 41223}