{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "230d7e6de62160ff001c04c7be20596f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f977275571c718bd6359684b91d4192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "a170a70f9fd89b9996c94f318397ff4dca1db782", "commitAfterChange": "25c55f5a3b95044fb71ce56ee0bb0a797b58daa1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testBinary05()", "signatureAfterChange": " \tpublic void testBinary05()", "diff": ["-\t// TODO(Stephan) : 3rd error message looks weird. We need to clone and set the bits for allocation expression or otherwise handle.", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. WARNING in Y1.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tx.<@NonNull Object>foo(new Object());\\n\" + ", "-\t\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Null type safety (type annotations): The expression of type \\'Object\\' needs unchecked conversion to conform to \\'@NonNull Object\\'\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t\t);", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96ddf39963fdea5b3dd216c2a3efec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testBinary05()", "signatureAfterChange": " \tpublic void testBinary05()", "diff": ["+\t// TODO(Stephan) : 3rd error message looks weird. We need to clone and set the bits for allocation expression or otherwise handle.", "-\t\t\t\t\"Null constraint mismatch: The type '@NonNull Object' is not a valid substitute for the type parameter 'S' which is constrained as '@Nullable'\\n\" + ", "+\t\t\t\t\"Null constraint mismatch: The type \\'@NonNull Object\\' is not a valid substitute for the type parameter \\'S\\' which is constrained as \\'@Nullable\\'\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in Y1.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tx.<@NonNull Object>foo(new Object());\\n\" + ", "+\t\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Null type safety (type annotations): The expression of type \\'Object\\' needs unchecked conversion to conform to \\'@NonNull Object\\'\\n\" + "]}], "num": 44994}