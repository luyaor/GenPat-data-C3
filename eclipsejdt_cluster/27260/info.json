{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f625fe173d0bfb91170c989b0a4d7b83", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eb7638a3e0c048794b44ea771433176", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 589, "methodNumberAfterChange": 589, "signatureBeforeChange": " \tpublic void test0584()", "signatureAfterChange": " \tpublic void test0584()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\"\tuntypedList.addAll(untypedList2);\\n\" + ", "-\t\t\t\"\t            ^^^^^^\\n\" + ", "-\t\t\t\"The method addAll(Collection<? extends capture-of ?>) in the type List<capture-of ?> is not applicable for the arguments (List<capture-of ?>)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\"\tLogger.log(\\\"Test_Lists.main: s: \\\" + s);\\n\" + ", "-\t\t\t\"\t^^^^^^\\n\" + ", "-\t\t\t\"Logger cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\");", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 18)\\n\" + ", "+    \t\t\"\tuntypedList.addAll(untypedList2);\\n\" + ", "+    \t\t\"\t            ^^^^^^\\n\" + ", "+    \t\t\"The method addAll(Collection<? extends capture#1-of ?>) in the type List<capture#1-of ?> is not applicable for the arguments (List<capture#2-of ?>)\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 22)\\n\" + ", "+    \t\t\"\tLogger.log(\\\"Test_Lists.main: s: \\\" + s);\\n\" + ", "+    \t\t\"\t^^^^^^\\n\" + ", "+    \t\t\"Logger cannot be resolved\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e72223fdbe06963a9e209993a0ef4a1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "     public void test128()", "signatureAfterChange": "     public void test128()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"\tList<String> ls1 = list;\\n\" + ", "-\t\t\t\"\t                   ^^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+    \t\t\"\tvoid foo(List list) {\\n\" + ", "+    \t\t\"\t         ^^^^\\n\" + ", "+    \t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+    \t\t\"\tList<String> ls1 = list;\\n\" + ", "+    \t\t\"\t                   ^^^^\\n\" + ", "+    \t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "+    \t\t\"\tZork z;\\n\" + ", "+    \t\t\"\t^^^^\\n\" + ", "+    \t\t\"Zork cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\");"]}], "num": 27260}