{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e399c6c602f3ffc4e80cf23c5ae588d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "213111cac9a99d3bd5df8c38ec5b934c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "ff27e2c47bba27e96f223ad4f3af6e2e2ed2e827", "commitAfterChange": "cea68c59c921f1ca5c01091f0bfe74894257a349", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " final int findInImports(String qualifier, String name, int kind)", "signatureAfterChange": " final int findInImports(String qualifier, String name, int kind)", "diff": ["-", "-\t\tint nTypes = 0;", "-\t\tif (this.astRoot != null) {", "-\t\t\tList types = this.astRoot.types();", "-\t\t\tnTypes = types != null ? types.size() : 0;", "-\t\t\tfor (int i = 0; i < nTypes; i++) {", "-\t\t\t\tAbstractTypeDeclaration type = (AbstractTypeDeclaration) types.get(i);", "-\t\t\t\tSimpleName simpleName;", "-\t\t\t\tif (type != null && (simpleName = type.getName()) != null && simpleName.toString().equals(name)) { ", "-\t\t\t\t\treturn ImportRewriteContext.RES_NAME_CONFLICT;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (nTypes <= 0 && this.compilationUnit != null) {", "-\t\t\ttry {", "-\t\t\t\tIType[] types = this.compilationUnit.getTypes();", "-\t\t\t\tnTypes = types.length;", "-\t\t\t\tfor (int i = 0; i < nTypes; i++) {", "-\t\t\t\t\tIType type = types[i];", "-\t\t\t\t\tString typeName = type.getElementName();", "-\t\t\t\t\tif (typeName != null && typeName.equals(name)) ", "-\t\t\t\t\t\treturn ImportRewriteContext.RES_NAME_CONFLICT;", "-\t\t\t\t}", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// TODO Auto-generated catch block", "-\t\t\t\te.printStackTrace();", "-\t\t\t}", "-\t\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590df1ac0abe93b541aaed04ec2b7974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "0b563e31d397e8bd32c10021c2c03216ee65589f", "commitAfterChange": "ff27e2c47bba27e96f223ad4f3af6e2e2ed2e827", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " final int findInImports(String qualifier, String name, int kind)", "signatureAfterChange": " final int findInImports(String qualifier, String name, int kind)", "diff": ["+", "+\t\tint nTypes = 0;", "+\t\tif (this.astRoot != null) {", "+\t\t\tList types = this.astRoot.types();", "+\t\t\tnTypes = types != null ? types.size() : 0;", "+\t\t\tfor (int i = 0; i < nTypes; i++) {", "+\t\t\t\tAbstractTypeDeclaration type = (AbstractTypeDeclaration) types.get(i);", "+\t\t\t\tSimpleName simpleName;", "+\t\t\t\tif (type != null && (simpleName = type.getName()) != null && simpleName.toString().equals(name)) { ", "+\t\t\t\t\treturn ImportRewriteContext.RES_NAME_CONFLICT;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (nTypes <= 0 && this.compilationUnit != null) {", "+\t\t\ttry {", "+\t\t\t\tIType[] types = this.compilationUnit.getTypes();", "+\t\t\t\tnTypes = types.length;", "+\t\t\t\tfor (int i = 0; i < nTypes; i++) {", "+\t\t\t\t\tIType type = types[i];", "+\t\t\t\t\tString typeName = type.getElementName();", "+\t\t\t\t\tif (typeName != null && typeName.equals(name)) ", "+\t\t\t\t\t\treturn ImportRewriteContext.RES_NAME_CONFLICT;", "+\t\t\t\t}", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t// TODO Auto-generated catch block", "+\t\t\t\te.printStackTrace();", "+\t\t\t}", "+\t\t}", "+"]}], "num": 62799}