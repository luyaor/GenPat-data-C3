{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfa00098515fd51ae52f154f12871379", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ffd3f2acbde1cab4b94c8593b0fef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "84ec8dce220def9122e3b7125580593971cdb44c", "commitAfterChange": "eee5c2074cc8c0ce491a40c7b46b442b2cfb6173", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": "\r public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isConstructor)", "diff": ["-public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames) {\r", "+public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isConstructor) {\r", "+\t\t\t\r", "+\t\t\t// need to add a paramater for constructor in binary type\r", "+\t\t\tIType declaringDeclaringType = type.getDeclaringType();\r", "+\t\t\tif(declaringDeclaringType != null && isConstructor) {\r", "+\t\t\t\tint length = parameterPackageNames.length;\r", "+\t\t\t\tSystem.arraycopy(parameterPackageNames, 0, parameterPackageNames = new char[length+1][], 1, length);\r", "+\t\t\t\tSystem.arraycopy(parameterTypeNames, 0, parameterTypeNames = new char[length+1][], 1, length);\r", "+\t\t\t\t\r", "+\t\t\t\tparameterPackageNames[0] = declaringDeclaringType.getPackageFragment().getElementName().toCharArray();\r", "+\t\t\t\tparameterTypeNames[0] = declaringDeclaringType.getTypeQualifiedName().toCharArray();\r", "+\t\t\t}\r", "+\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d83ff19bb4a9f30725d0f169b2942292", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "747c1eb91c4c0949e5f9ce17bdd2a765ef496fa4", "commitAfterChange": "f657f893ed970d58ce4565eab2924c903044ce31", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private final static void buildFileForName(String filename, String contents) throws java.io.IOException", "signatureAfterChange": " private final static String[] buildFileForName(String filename, String contents) throws java.io.IOException", "diff": ["-private final static void buildFileForName(String filename, String contents) throws java.io.IOException {", "+private final static String[] buildFileForName(String filename, String contents) throws java.io.IOException {", "+\tString[] result = new String[contents.length()];", "+\tresult[0] = null;", "+\tint resultCount = 1;", "+\t", "+\tStringBuffer currentToken = new StringBuffer();", "+\t\t\t\t\tresult[resultCount++] = currentToken.toString();", "+\t\t\t\t\tcurrentToken = new StringBuffer();", "+\t\t\t\tcurrentToken.append(token);", "-", "+\tif(currentToken.length() > 0) {", "+\t\tresult[resultCount++] = currentToken.toString();", "+\t}", "+\t", "+\t", "+\tSystem.arraycopy(result, 0, result = new String[resultCount], 0, resultCount);", "+\treturn result;"]}], "num": 70971}