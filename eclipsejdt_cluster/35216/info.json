{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6b54c066169ab681776a5612af7c7d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6630f08f49d3685e12b031a1a092be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tvoid m() { List<X> l = (List<X>)list(); } // unsafe cast\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from List to List<X>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"10. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"11. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "-\t\t\t\"\t            ^^^^\\n\" + ", "-\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\t\"\t            ^^^^\\n\" + ", "+\t\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"14. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "-\t\t\t\"14. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"15. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"15. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"16. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"16. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"17. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"17. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"18. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"18. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"19. ERROR in X.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc9149fa093e9c8b2b2aca02bb19db48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void test076()", "signatureAfterChange": " public void test076()", "diff": ["+// See that this test case exhibits the bug 345947", "-\t\t\"1. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\t<U> J<String> b();\\n\" + ", "+\t\t\"\t              ^^^\\n\" + ", "+\t\t\"Name clash: The method b() of type J<E> has the same erasure as b() of type I<E> but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 16)\\n\" + ", "-\t\t\"3. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 17)\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 19)\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\"5. ERROR in X.java (at line 20)\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 20)\\n\" + ", "-\t\t\"6. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 21)\\n\" + ", "-\t\t\"7. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\"8. ERROR in X.java (at line 24)\\n\" + ", "-\t\t\"8. ERROR in X.java (at line 25)\\n\" + ", "+\t\t\"9. ERROR in X.java (at line 25)\\n\" + ", "-\t\t\"9. ERROR in X.java (at line 26)\\n\" + ", "+\t\t\"10. ERROR in X.java (at line 26)\\n\" + ", "-\t\t\"10. ERROR in X.java (at line 27)\\n\" + ", "+\t\t\"11. ERROR in X.java (at line 27)\\n\" + ", "-\t\t\"11. WARNING in X.java (at line 28)\\n\" + ", "+\t\t\"12. WARNING in X.java (at line 28)\\n\" + ", "-\t\t\"12. ERROR in X.java (at line 28)\\n\" + ", "+\t\t\"13. ERROR in X.java (at line 28)\\n\" + ", "-\t\t\"13. ERROR in X.java (at line 29)\\n\" + ", "+\t\t\"14. ERROR in X.java (at line 29)\\n\" + ", "-\t\t\"14. ERROR in X.java (at line 30)\\n\" + ", "+\t\t\"15. ERROR in X.java (at line 30)\\n\" + ", "-\t\t\"15. ERROR in X.java (at line 31)\\n\" + ", "+\t\t\"16. ERROR in X.java (at line 31)\\n\" + ", "-\t\t\"16. WARNING in X.java (at line 32)\\n\" + ", "+\t\t\"17. WARNING in X.java (at line 32)\\n\" + ", "-\t\t\"17. ERROR in X.java (at line 32)\\n\" + ", "+\t\t\"18. ERROR in X.java (at line 32)\\n\" + ", "-\t\t\"18. WARNING in X.java (at line 39)\\n\" + ", "+\t\t\"19. WARNING in X.java (at line 39)\\n\" + ", "-\t\t\"19. WARNING in X.java (at line 43)\\n\" + ", "+\t\t\"20. WARNING in X.java (at line 43)\\n\" + "]}], "num": 35216}