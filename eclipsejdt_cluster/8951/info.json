{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1cd66b0966e7de39a5e87dcfe0ac4d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae69b51de097756e8a398b9a8d0775b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 152, "signatureBeforeChange": " public void javadocMissingParamTag(Argument param)", "signatureAfterChange": " public void javadocMissingParamTag(Argument param, int modifiers)", "diff": ["-public void javadocMissingParamTag(Argument param) {", "-\tString[] arguments = new String[] {String.valueOf(param.name)};", "-\tthis.handle(", "-\t\t\tIProblem.JavadocMissingParamTag,", "-\t\t\targuments,", "-\t\t\targuments,", "-\t\t\tparam.sourceStart,", "-\t\t\tparam.sourceEnd);", "+public void javadocMissingParamTag(Argument param, int modifiers) {", "+\tboolean overriding = (modifiers & (CompilerModifiers.AccImplementing+CompilerModifiers.AccOverriding)) != 0;", "+\tboolean report = (this.options.getSeverity(CompilerOptions.MissingJavadocTags) != ProblemSeverities.Ignore)", "+\t\t\t\t\t&& (!overriding || this.options.reportMissingJavadocTagsOverriding);", "+\tif (report && javadocVisibility(this.options.reportMissingJavadocTagsVisibility, modifiers)) {", "+\t\tString[] arguments = new String[] { String.valueOf(param.name) };", "+\t\tthis.handle(IProblem.JavadocMissingParamTag, arguments, arguments, param.sourceStart, param.sourceEnd);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70dfa8293b5027d577ac257fae51306e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 156, "signatureBeforeChange": " public void javadocMissingThrowsTag(TypeReference typeRef)", "signatureAfterChange": " public void javadocMissingThrowsTag(TypeReference typeRef, int modifiers)", "diff": ["-public void javadocMissingThrowsTag(TypeReference typeRef){", "-\tString[] arguments = new String[]{String.valueOf(typeRef.resolvedType.sourceName())};", "-\tthis.handle(IProblem.JavadocMissingThrowsTag, arguments, arguments, typeRef.sourceStart, typeRef.sourceEnd);", "+public void javadocMissingThrowsTag(TypeReference typeRef, int modifiers){", "+\tboolean overriding = (modifiers & (CompilerModifiers.AccImplementing+CompilerModifiers.AccOverriding)) != 0;", "+\tboolean report = (this.options.getSeverity(CompilerOptions.MissingJavadocTags) != ProblemSeverities.Ignore)", "+\t\t\t\t\t&& (!overriding || this.options.reportMissingJavadocTagsOverriding);", "+\tif (report && javadocVisibility(this.options.reportMissingJavadocTagsVisibility, modifiers)) {", "+\t\tString[] arguments = new String[] { String.valueOf(typeRef.resolvedType.sourceName()) };", "+\t\tthis.handle(IProblem.JavadocMissingThrowsTag, arguments, arguments, typeRef.sourceStart, typeRef.sourceEnd);", "+\t}"]}], "num": 8951}