{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65258fc504f50e6e647ecc47de134df5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fe6ccb08f9c8a9ba75193e23701b5c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "82f5102778189bf9bcdbbea71144f216c8634383", "commitAfterChange": "9471974fe3ca746b196cad8681aab599eb9e787d", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " public void initializeMaxLocals(MethodBinding methodBinding)", "signatureAfterChange": " public void initializeMaxLocals(MethodBinding methodBinding)", "diff": ["-\tmaxLocals = (methodBinding == null || methodBinding.isStatic()) ? 0 : 1;", "+\tif (methodBinding == null) {", "+\t\tthis.maxLocals = 0;", "+\t\treturn;", "+\t}", "+\t", "+\tthis.maxLocals = methodBinding.isStatic() ? 0 : 1;", "+\t", "+\t// take into account enum constructor synthetic name+ordinal", "+\tif (methodBinding.isConstructor() && methodBinding.declaringClass.isEnum()) {", "+\t\tthis.maxLocals += 2; // String and int (enum constant name+ordinal)", "+\t}", "+\t", "-\tif (methodBinding != null) {", "-\t\tif (methodBinding.isConstructor() && methodBinding.declaringClass.isNestedType()) {", "-\t\t\tReferenceBinding enclosingInstanceTypes[];", "-\t\t\tif ((enclosingInstanceTypes = methodBinding.declaringClass.syntheticEnclosingInstanceTypes()) != null) {", "-\t\t\t\tfor (int i = 0, max = enclosingInstanceTypes.length; i < max; i++) {", "-\t\t\t\t\tmaxLocals++; // an enclosingInstanceType can only be a reference binding. It cannot be", "-\t\t\t\t\t// LongBinding or DoubleBinding", "-\t\t\t\t}", "+\tif (methodBinding.isConstructor() && methodBinding.declaringClass.isNestedType()) {", "+\t\tReferenceBinding enclosingInstanceTypes[];", "+\t\tif ((enclosingInstanceTypes = methodBinding.declaringClass.syntheticEnclosingInstanceTypes()) != null) {", "+\t\t\tfor (int i = 0, max = enclosingInstanceTypes.length; i < max; i++) {", "+\t\t\t\tthis.maxLocals++; // an enclosingInstanceType can only be a reference binding. It cannot be", "+\t\t\t\t// LongBinding or DoubleBinding", "-\t\t\tSyntheticArgumentBinding syntheticArguments[];", "-\t\t\tif ((syntheticArguments = methodBinding.declaringClass.syntheticOuterLocalVariables()) != null) {", "-\t\t\t\tfor (int i = 0, max = syntheticArguments.length; i < max; i++) {", "-\t\t\t\t\tTypeBinding argType;", "-\t\t\t\t\tif (((argType = syntheticArguments[i].type) == LongBinding) || (argType == DoubleBinding)) {", "-\t\t\t\t\t\tmaxLocals += 2;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tmaxLocals++;", "-\t\t\t\t\t}", "+\t\t}", "+\t\tSyntheticArgumentBinding syntheticArguments[];", "+\t\tif ((syntheticArguments = methodBinding.declaringClass.syntheticOuterLocalVariables()) != null) {", "+\t\t\tfor (int i = 0, max = syntheticArguments.length; i < max; i++) {", "+\t\t\t\tTypeBinding argType;", "+\t\t\t\tif (((argType = syntheticArguments[i].type) == LongBinding) || (argType == DoubleBinding)) {", "+\t\t\t\t\tthis.maxLocals += 2;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.maxLocals++;", "-\t\tTypeBinding[] arguments;", "-\t\tif ((arguments = methodBinding.parameters) != null) {", "-\t\t\tfor (int i = 0, max = arguments.length; i < max; i++) {", "-\t\t\t\tTypeBinding argType;", "-\t\t\t\tif (((argType = arguments[i]) == LongBinding) || (argType == DoubleBinding)) {", "-\t\t\t\t\tmaxLocals += 2;", "-\t\t\t\t} else {", "-\t\t\t\t\tmaxLocals++;", "-\t\t\t\t}", "+\t}", "+\tTypeBinding[] arguments;", "+\tif ((arguments = methodBinding.parameters) != null) {", "+\t\tfor (int i = 0, max = arguments.length; i < max; i++) {", "+\t\t\tTypeBinding argType;", "+\t\t\tif (((argType = arguments[i]) == LongBinding) || (argType == DoubleBinding)) {", "+\t\t\t\tthis.maxLocals += 2;", "+\t\t\t} else {", "+\t\t\t\tthis.maxLocals++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a467982c2c7df9655c14751589ca2aa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void consumeAllocationHeader()", "signatureAfterChange": " protected void consumeAllocationHeader()", "diff": ["-\tif (currentElement == null){", "+\tif (this.currentElement == null){", "-\tif (currentToken == TokenNameLBRACE){", "+\tif (this.currentToken == TokenNameLBRACE){", "-\t\tanonymousType.sourceStart = intStack[intPtr--];", "-\t\tanonymousType.sourceEnd = rParenPos; // closing parenthesis", "-\t\tlastCheckPoint = anonymousType.bodyStart = scanner.currentPosition;", "-\t\tcurrentElement = currentElement.add(anonymousType, 0);", "-\t\tlastIgnoredToken = -1;", "-\t\tcurrentToken = 0; // opening brace already taken into account", "+\t\tanonymousType.sourceStart = this.intStack[this.intPtr--];", "+\t\tanonymousType.sourceEnd = this.rParenPos; // closing parenthesis", "+\t\tthis.lastCheckPoint = anonymousType.bodyStart = this.scanner.currentPosition;", "+\t\tthis.currentElement = this.currentElement.add(anonymousType, 0);", "+\t\tthis.lastIgnoredToken = -1;", "+\t\tthis.currentToken = 0; // opening brace already taken into account", "-\tlastCheckPoint = scanner.startPosition; // force to restart at this exact position", "-\trestartRecovery = true; // request to restart from here on", "+\tthis.lastCheckPoint = this.scanner.startPosition; // force to restart at this exact position", "+\tthis.restartRecovery = true; // request to restart from here on"]}], "num": 60889}