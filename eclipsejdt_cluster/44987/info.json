{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "052da3c84a6623011fa77962e97dfc48", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f97a22baeb185e732d8a7bd31801df7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "4371b6d8f370e30de814aa3f488aa7fff3acceb1", "commitAfterChange": "653406a482474edc2d8737f13239902108d47273", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void checkAnnotation()", "signatureAfterChange": " public void checkAnnotation()", "diff": ["-\t\tthis.annotation.matchPatternLocator(this.patternLocator, this.nodeSet);", "+\t\t// Search for pattern locator matches in annotation @throws/@exception tags", "+\t\tTypeReference[] thrownExceptions = this.annotation.thrownExceptions;", "+\t\tint throwsTagsNbre = thrownExceptions == null ? 0 : thrownExceptions.length;", "+\t\tfor (int i = 0; i < throwsTagsNbre; i++) {", "+\t\t\tTypeReference typeRef = thrownExceptions[i];", "+\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t}", "+", "+\t\t// Search for pattern locator matches in annotation @see tags", "+\t\tExpression[] references = this.annotation.references;", "+\t\tint seeTagsNbre = references == null ? 0 : references.length;", "+\t\tfor (int i = 0; i < seeTagsNbre; i++) {", "+\t\t\tExpression reference = references[i];", "+\t\t\tif (reference instanceof TypeReference) {", "+\t\t\t\tTypeReference typeRef = (TypeReference) reference;", "+\t\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\t} else if (reference instanceof AnnotationFieldReference) {", "+\t\t\t\tAnnotationFieldReference fieldRef = (AnnotationFieldReference) reference;", "+\t\t\t\tpatternLocator.match(fieldRef, nodeSet);", "+\t\t\t} else if (reference instanceof AnnotationMessageSend) {", "+\t\t\t\tAnnotationMessageSend messageSend = (AnnotationMessageSend) reference;", "+\t\t\t\tpatternLocator.match(messageSend, nodeSet);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a88a04618dab1141aaca4f9d1471af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void checkAnnotation()", "signatureAfterChange": " public void checkComment()", "diff": ["-public void checkAnnotation() {", "-\tsuper.checkAnnotation();", "-\tif (this.annotation != null) {", "-\t\t// Search for pattern locator matches in annotation @throws/@exception tags", "-\t\tTypeReference[] thrownExceptions = this.annotation.thrownExceptions;", "+public void checkComment() {", "+\tsuper.checkComment();", "+\tif (this.javadoc != null) {", "+\t\t// Search for pattern locator matches in javadoc comment @throws/@exception tags", "+\t\tTypeReference[] thrownExceptions = this.javadoc.thrownExceptions;", "-\t\t// Search for pattern locator matches in annotation @see tags", "-\t\tExpression[] references = this.annotation.references;", "+\t\t// Search for pattern locator matches in javadoc comment @see tags", "+\t\tExpression[] references = this.javadoc.references;", "-\t\t\t} else if (reference instanceof AnnotationFieldReference) {", "-\t\t\t\tAnnotationFieldReference fieldRef = (AnnotationFieldReference) reference;", "+\t\t\t} else if (reference instanceof JavadocFieldReference) {", "+\t\t\t\tJavadocFieldReference fieldRef = (JavadocFieldReference) reference;", "-\t\t\t} else if (reference instanceof AnnotationMessageSend) {", "-\t\t\t\tAnnotationMessageSend messageSend = (AnnotationMessageSend) reference;", "+\t\t\t} else if (reference instanceof JavadocMessageSend) {", "+\t\t\t\tJavadocMessageSend messageSend = (JavadocMessageSend) reference;"]}], "num": 44987}