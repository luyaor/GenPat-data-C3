{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e1b6cd616845ee5be08161d314f14ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "315bc4834dabc520c4eeaf18f8c279dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 357, "methodNumberAfterChange": 357, "signatureBeforeChange": " public void varargsConflict(MethodBinding method, MethodBinding inheritedMethod)", "signatureAfterChange": " public void varargsConflict(MethodBinding method1, MethodBinding method2, SourceTypeBinding type)", "diff": ["-public void varargsConflict(MethodBinding method, MethodBinding inheritedMethod) {", "+public void varargsConflict(MethodBinding method1, MethodBinding method2, SourceTypeBinding type) {", "-\t\t        new String(method.selector),", "-\t\t        typesAsString(method.isVarargs(), method.parameters, false),", "-\t\t        new String(inheritedMethod.declaringClass.readableName()),", "-\t\t        typesAsString(inheritedMethod.isVarargs(), inheritedMethod.parameters, false)", "+\t\t        new String(method1.selector),", "+\t\t        typesAsString(method1.isVarargs(), method1.parameters, false),", "+\t\t        new String(method1.declaringClass.readableName()),", "+\t\t        typesAsString(method2.isVarargs(), method2.parameters, false),", "+\t\t        new String(method2.declaringClass.readableName())", "-\t\t        new String(method.selector),", "-\t\t        typesAsString(method.isVarargs(), method.parameters, true),", "-\t\t        new String(inheritedMethod.declaringClass.shortReadableName()),", "-\t\t        typesAsString(inheritedMethod.isVarargs(), inheritedMethod.parameters, true)", "+\t\t        new String(method1.selector),", "+\t\t        typesAsString(method1.isVarargs(), method1.parameters, true),", "+\t\t        new String(method1.declaringClass.shortReadableName()),", "+\t\t        typesAsString(method2.isVarargs(), method2.parameters, true),", "+\t\t        new String(method2.declaringClass.shortReadableName())", "-\t\tmethod.sourceStart(),", "-\t\tmethod.sourceEnd());", "+\t\tmethod1.declaringClass == type ? method1.sourceStart() : type.sourceStart(),", "+\t\tmethod1.declaringClass == type ? method1.sourceEnd() : type.sourceEnd());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc73c4abe4cfa6ce33398357249aff24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 81, "signatureBeforeChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "signatureAfterChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "diff": ["+\tif (inheritedMethod1.declaringClass != inheritedMethod2.declaringClass) {", "+\t\tthis.handle(", "+\t\t\tIProblem.DuplicateInheritedMethods,", "+\t\t\tnew String[] {", "+\t\t        new String(inheritedMethod1.selector),", "+\t\t\t\ttypesAsString(inheritedMethod1, inheritedMethod1.original().parameters, false),", "+\t\t\t\ttypesAsString(inheritedMethod2, inheritedMethod2.original().parameters, false),", "+\t\t\t\tnew String(inheritedMethod1.declaringClass.readableName()),", "+\t\t\t\tnew String(inheritedMethod2.declaringClass.readableName()),", "+\t\t\t},", "+\t\t\tnew String[] {", "+\t\t\t\tnew String(inheritedMethod1.selector),", "+\t\t\t\ttypesAsString(inheritedMethod1, inheritedMethod1.original().parameters, true),", "+\t\t\t\ttypesAsString(inheritedMethod2, inheritedMethod2.original().parameters, true),", "+\t\t\t\tnew String(inheritedMethod1.declaringClass.shortReadableName()),", "+\t\t\t\tnew String(inheritedMethod2.declaringClass.shortReadableName()),", "+\t\t\t},", "+\t\t\ttype.sourceStart(),", "+\t\t\ttype.sourceEnd());", "+\t\treturn;", "+\t}", "+\t// Handle duplicates from same class.", "-\t\t\ttypesAsString(inheritedMethod1.isVarargs(), inheritedMethod1.original().parameters, false),", "-\t\t\ttypesAsString(inheritedMethod2.isVarargs(), inheritedMethod2.original().parameters, false)},", "+\t\t\ttypesAsString(inheritedMethod1, inheritedMethod1.original().parameters, false),", "+\t\t\ttypesAsString(inheritedMethod2, inheritedMethod2.original().parameters, false)},", "-\t\t\ttypesAsString(inheritedMethod1.isVarargs(), inheritedMethod1.original().parameters, true),", "-\t\t\ttypesAsString(inheritedMethod2.isVarargs(), inheritedMethod2.original().parameters, true)},", "+\t\t\ttypesAsString(inheritedMethod1, inheritedMethod1.original().parameters, true),", "+\t\t\ttypesAsString(inheritedMethod2, inheritedMethod2.original().parameters, true)},"]}], "num": 21794}