{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1f2974cb6c8ac2e405dcb9de9936400", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281b78f0b5d068d42573483ac0f228cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void buildSupertypes()", "signatureAfterChange": " \tprotected void buildSupertypes()", "diff": ["-\t\torg.eclipse.jdt.core.ICompilationUnit unitToLookInside = focusType.getCompilationUnit();", "-\t\tif (nameLookup != null) {", "-\t\t\torg.eclipse.jdt.core.ICompilationUnit[] workingCopies = this.hierarchy.workingCopies;", "-\t\t\torg.eclipse.jdt.core.ICompilationUnit[] unitsToLookInside;", "-\t\t\tif (unitToLookInside != null) {", "-\t\t\t\tint wcLength = workingCopies == null ? 0 : workingCopies.length;", "-\t\t\t\tif (wcLength == 0) {", "-\t\t\t\t\tunitsToLookInside = new org.eclipse.jdt.core.ICompilationUnit[] {unitToLookInside};", "-\t\t\t\t} else {", "-\t\t\t\t\tunitsToLookInside = new org.eclipse.jdt.core.ICompilationUnit[wcLength+1];", "-\t\t\t\t\tunitsToLookInside[0] = unitToLookInside;", "-\t\t\t\t\tSystem.arraycopy(workingCopies, 0, unitsToLookInside, 1, wcLength);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tunitsToLookInside = workingCopies;", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\tnameLookup.setUnitsToLookInside(unitsToLookInside); // NB: this uses a PerThreadObject, so it is thread safe", "-\t\t\t\t// resolve", "-\t\t\t\tthis.hierarchyResolver.resolve(type);", "-\t\t\t} finally {", "-\t\t\t\tnameLookup.setUnitsToLookInside(null);", "-\t\t\t}", "-\t\t} else {", "-\t\t\t// resolve", "-\t\t\tthis.hierarchyResolver.resolve(type);", "-\t\t}", "+\t\tthis.hierarchyResolver.resolve(type);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "642b5f7f0b41668e7ae4fe7473407404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "93b2da494f05ea9d7d07cce04c925af478b85ee5", "commitAfterChange": "c69071f87158dd93231fe63287bd6768307408eb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprotected void buildSupertypes()", "signatureAfterChange": "\r \tprotected void buildSupertypes()", "diff": ["-\t\tif (nameLookup != null && unitToLookInside != null) {\r", "+\t\tif (nameLookup != null) {\r", "+\t\t\t\tIWorkingCopy[] workingCopies = this.getWokingCopies();\r", "+\t\t\t\tIWorkingCopy[] unitsToLookInside;\r", "+\t\t\t\tif (unitToLookInside != null) {\r", "+\t\t\t\t\tint wcLength = workingCopies == null ? 0 : workingCopies.length;\r", "+\t\t\t\t\tif (wcLength == 0) {\r", "+\t\t\t\t\t\tunitsToLookInside = new IWorkingCopy[] {unitToLookInside};\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tunitsToLookInside = new IWorkingCopy[wcLength+1];\r", "+\t\t\t\t\t\tunitsToLookInside[0] = unitToLookInside;\r", "+\t\t\t\t\t\tSystem.arraycopy(workingCopies, 0, unitsToLookInside, 1, wcLength);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tunitsToLookInside = workingCopies;\r", "+\t\t\t\t}\r", "-\t\t\t\t\tnameLookup.setUnitsToLookInside(new IWorkingCopy[] {unitToLookInside});\r", "+\t\t\t\t\tnameLookup.setUnitsToLookInside(unitsToLookInside);\r"]}], "num": 60331}