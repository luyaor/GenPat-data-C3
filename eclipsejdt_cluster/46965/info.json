{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8c5b8dad4322c0fd607e7551d4433ba", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23acf95113c07980585469942735786d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "3d4c211d581e5ab7a648e648f6e07c2d98cd2b06", "commitAfterChange": "985d5704b5812718c29d572a9f4e88e4ef1e7e81", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void test012()", "signatureAfterChange": "  \tpublic void test012()", "diff": ["-// TODO (kent) must support static methods too... how? cannot hold onto a specific MethodBinding...", "-//\t\tthis.runConformTest(", "-//\t\t\tnew String[] {", "-//\t\t\t\t\"X.java\",", "-//\t\t\t\t\"import static java.lang.Math.max;\\n\" +", "-//\t\t\t\t\"public class X {\\n\" +", "-//\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-//\t\t\t\t\"\t\tSystem.out.println(max(1, 3));\\n\" +", "-//\t\t\t\t\"\t}\\n\" +", "-//\t\t\t\t\"}\\n\",", "-//\t\t\t},", "-//\t\t\t\"3\");", "-//", "-// another static method case", "-//\t\tthis.runConformTest( // 80280", "-//\t\t\tnew String[] {", "-//\t\t\t\t\"X.java\",", "-//\t\t\t\t\"import static p1.C.F;\\n\" +", "-//\t\t\t\t\"import p2.*;\\n\" +", "-//\t\t\t\t\"public class X implements F {}\\n\",", "-//\t\t\t\t\"p1/C.java\",", "-//\t\t\t\t\"package p1;\\n\" +", "-//\t\t\t\t\"public class C {\\n\" +", "-//\t\t\t\t\"\tpublic static int F() { return 0; }\\n\" +", "-//\t\t\t\t\"}\\n\",", "-//\t\t\t\t\"p2/F.java\",", "-//\t\t\t\t\"package p2;\\n\" +", "-//\t\t\t\t\"public interface F {}\\n\"", "-//\t\t\t},", "-//\t\t\t\"\"", "-//\t\t);", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import static java.lang.Math.max;\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tSystem.out.println(max(1, 3));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"3\");", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import static p1.C.F;\\n\" +", "+\t\t\t\t\"import p2.*;\\n\" +", "+\t\t\t\t\"public class X implements F {\" +", "+\t\t\t\t\"\tint i = F();\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"p1/C.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class C {\\n\" +", "+\t\t\t\t\"\tpublic static int F() { return 0; }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"p2/F.java\",", "+\t\t\t\t\"package p2;\\n\" +", "+\t\t\t\t\"public interface F {}\\n\"", "+\t\t\t},", "+\t\t\t\"\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dddb01067bcb15817e8a57cc3a5fd8c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "90f07ffa24358809e90a41caf7e256409b417f57", "commitAfterChange": "5b1c31ccfae0bfdb40434d9a104ce9cdaaaeb619", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void test025()", "signatureAfterChange": "  \tpublic void test025()", "diff": ["+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"interface X<T extends X> { T x(); }\\n\" +", "+\t\t\t\t\"abstract class Y<S extends X> implements X<S> { public abstract S x(); }\\n\" +", "+\t\t\t\t\"abstract class Z implements X { public abstract X x(); }\\n\"", "+\t\t\t},", "+\t\t\t\"\" // no warnings", "+\t\t);", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"interface X<T extends X> { T[] x(); }\\n\" +", "+\t\t\t\t\"abstract class Y<S extends X> implements X<S> { public abstract S[] x(); }\\n\" +", "+\t\t\t\t\"abstract class Z implements X { public abstract X[] x(); }\\n\"", "+\t\t\t},", "+\t\t\t\"\" // no warnings", "+\t\t);"]}], "num": 46965}