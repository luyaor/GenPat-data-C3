{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d3940804a9ccaebde078895846e507b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8a16a88a58f51d08bda6b12e8816f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext,  \t\tFlowInfo flowInfo, boolean checkString)", "diff": ["-", "-\tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus) {", "-", "-\t\tLocalVariableBinding local = this.localVariableBinding();", "-\t\tif (local != null) {", "-\t\t\tswitch(nullStatus) {", "-\t\t\t\tcase FlowInfo.NULL :", "-\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NULL, flowInfo);", "-\t\t\t\t\tflowInfo.markAsDefinitelyNull(local); // from thereon it is set", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase FlowInfo.NON_NULL :", "-\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NON_NULL, flowInfo);", "-\t\t\t\t\tflowInfo.markAsDefinitelyNonNull(local); // from thereon it is set", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase FlowInfo.UNKNOWN :", "-\t\t\t\t\tbreak;", "-\t\t\t}", "+ */", "+public void checkNPE(BlockScope scope, FlowContext flowContext, ", "+\t\tFlowInfo flowInfo, boolean checkString) {", "+\tLocalVariableBinding local = this.localVariableBinding();", "+\tif (local != null && ", "+\t\t\t(local.type.tagBits & TagBits.IsBaseType) == 0 &&", "+\t\t\t(checkString || local.type.id != T_JavaLangString)) {", "+\t\tif ((this.bits & IsNonNull) == 0) {", "+\t\t\tflowContext.recordUsingNullReference(scope, local, this, ", "+\t\t\t\t\tFlowContext.MAY_NULL, flowInfo);", "-\t\treturn flowInfo;", "+\t\tflowInfo.markAsComparedEqualToNonNull(local); ", "+\t\t\t// from thereon it is set", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62b9eb0db68b1f4a01b1679a5bbe1af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "diff": ["-\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NULL, flowInfo);", "+\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, ", "+\t\t\t\t\tFlowContext.CAN_ONLY_NULL_NON_NULL, flowInfo);", "-\t\t\t\t\tinitsWhenTrue.markAsDefinitelyNull(local); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsDefinitelyNonNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(local); // from thereon it is set", "-\t\t\t\t\tinitsWhenTrue.markAsDefinitelyNonNull(local); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsDefinitelyNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(local); // from thereon it is set", "-\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NON_NULL, flowInfo);", "+\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, ", "+\t\t\t\t\tFlowContext.CAN_ONLY_NULL, flowInfo);", "-\t\t\t\t\tinitsWhenTrue.markAsDefinitelyNonNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(local); // from thereon it is set"]}], "num": 62558}