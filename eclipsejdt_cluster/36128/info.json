{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3461136adc68d55202be102d8e64f8f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281b78f0b5d068d42573483ac0f228cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void buildSupertypes()", "signatureAfterChange": " \tprotected void buildSupertypes()", "diff": ["-\t\torg.eclipse.jdt.core.ICompilationUnit unitToLookInside = focusType.getCompilationUnit();", "-\t\tif (nameLookup != null) {", "-\t\t\torg.eclipse.jdt.core.ICompilationUnit[] workingCopies = this.hierarchy.workingCopies;", "-\t\t\torg.eclipse.jdt.core.ICompilationUnit[] unitsToLookInside;", "-\t\t\tif (unitToLookInside != null) {", "-\t\t\t\tint wcLength = workingCopies == null ? 0 : workingCopies.length;", "-\t\t\t\tif (wcLength == 0) {", "-\t\t\t\t\tunitsToLookInside = new org.eclipse.jdt.core.ICompilationUnit[] {unitToLookInside};", "-\t\t\t\t} else {", "-\t\t\t\t\tunitsToLookInside = new org.eclipse.jdt.core.ICompilationUnit[wcLength+1];", "-\t\t\t\t\tunitsToLookInside[0] = unitToLookInside;", "-\t\t\t\t\tSystem.arraycopy(workingCopies, 0, unitsToLookInside, 1, wcLength);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tunitsToLookInside = workingCopies;", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\tnameLookup.setUnitsToLookInside(unitsToLookInside); // NB: this uses a PerThreadObject, so it is thread safe", "-\t\t\t\t// resolve", "-\t\t\t\tthis.hierarchyResolver.resolve(type);", "-\t\t\t} finally {", "-\t\t\t\tnameLookup.setUnitsToLookInside(null);", "-\t\t\t}", "-\t\t} else {", "-\t\t\t// resolve", "-\t\t\tthis.hierarchyResolver.resolve(type);", "-\t\t}", "+\t\tthis.hierarchyResolver.resolve(type);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "696c7da54e98b2784970cfce1d6a88b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "signatureAfterChange": " \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "diff": ["-\t\tthis.searchableEnvironment =", "-\t\t\t(SearchableEnvironment) project.getSearchableNameEnvironment();", "-\t\tthis.nameLookup = project.getNameLookup();", "+\t\t", "+\t\tIType focusType = hierarchy.getType();", "+\t\torg.eclipse.jdt.core.ICompilationUnit unitToLookInside = focusType == null ? null : focusType.getCompilationUnit();", "+\t\torg.eclipse.jdt.core.ICompilationUnit[] workingCopies = this.hierarchy.workingCopies;", "+\t\torg.eclipse.jdt.core.ICompilationUnit[] unitsToLookInside;", "+\t\tif (unitToLookInside != null) {", "+\t\t\tint wcLength = workingCopies == null ? 0 : workingCopies.length;", "+\t\t\tif (wcLength == 0) {", "+\t\t\t\tunitsToLookInside = new org.eclipse.jdt.core.ICompilationUnit[] {unitToLookInside};", "+\t\t\t} else {", "+\t\t\t\tunitsToLookInside = new org.eclipse.jdt.core.ICompilationUnit[wcLength+1];", "+\t\t\t\tunitsToLookInside[0] = unitToLookInside;", "+\t\t\t\tSystem.arraycopy(workingCopies, 0, unitsToLookInside, 1, wcLength);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tunitsToLookInside = workingCopies;", "+\t\t}", "+\t\tSearchableEnvironment searchableEnvironment = (SearchableEnvironment) project.newSearchableNameEnvironment(unitsToLookInside);", "+\t\tthis.nameLookup = searchableEnvironment.nameLookup;", "-\t\t\t\tthis.searchableEnvironment,", "+\t\t\t\tsearchableEnvironment,"]}], "num": 36128}