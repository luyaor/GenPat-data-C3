{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ef5e275f287ab36bb15e29db870e612", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0014869d5209420ff909f98f1c649116", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public TypeBinding resolveType(ClassScope classScope)", "signatureAfterChange": " public TypeBinding resolveType(ClassScope classScope)", "diff": ["-\treturn this.resolvedType = classScope.convertToRawType(this.resolvedType);", "+\treturn this.resolvedType = classScope.environment().convertToRawType(this.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00a34fc7e156da7fcf6c1a3ae269862b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BuildNotifier.java", "commitBeforeChange": "268f7eb2bc7f6630ccc414ea6cd570b66584c37f", "commitAfterChange": "76066ada630300b333263778ad537b82f4d8850c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void compiled(SourceFile unit)", "signatureAfterChange": " public void compiled(SourceFile unit)", "diff": ["-\tString message = Util.bind(\"build.compiling\", unit.resource.getFullPath().removeLastSegments(1).toString()); //$NON-NLS-1$", "+\tString message = Util.bind(\"build.compiling\", unit.resource.getFullPath().removeLastSegments(1).makeRelative().toString()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b1927e4573c880305e49767a5c7b98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t    this.resolvedType = scope.createParameterizedType(classType, new TypeBinding[]{ boxedType }, null/*not a member*/);", "+\t\t    this.resolvedType = scope.environment().createParameterizedType(classType, new TypeBinding[]{ boxedType }, null/*not a member*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c5205765d65d87e2e7b1e5d1a34fa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "855d08007f38aa859b621e5e35de6b962791df5f", "commitAfterChange": "4d55f350050ba4edf3b2412d978c3ac5196dfdab", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " protected boolean resourceExists()", "signatureAfterChange": " protected boolean resourceExists()", "diff": ["-\treturn JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), this.getPath(), true) != null;", "+\treturn ", "+\t\tJavaModel.getTarget(", "+\t\t\tResourcesPlugin.getWorkspace().getRoot(), ", "+\t\t\tthis.getPath().makeRelative(), // ensure path is relative (see http://dev.eclipse.org/bugs/show_bug.cgi?id=22517)", "+\t\t\ttrue) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0574d7aea5e41b244c38b3d197e0ef30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t    \tParameterizedTypeBinding parameterizedType = scope.createParameterizedType((ReferenceBinding)currentType.erasure(), argTypes, enclosingType);", "+\t    \tParameterizedTypeBinding parameterizedType = scope.environment().createParameterizedType((ReferenceBinding)currentType.erasure(), argTypes, enclosingType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b271a6f41f4191736abebbf2ffaebe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\treturn this.resolvedType = scope.convertToRawType(type);", "+\t\t\t\t\treturn this.resolvedType = scope.environment().convertToRawType(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0783845165af62f18e8c7e388fa96a25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "7084f835caef5ab2adb5e4c9c4444ab0bb70c40d", "commitAfterChange": "f2d3caf9f49a021f049c1182aa65112ac7cc9bd8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void reportDeclaration(MethodBinding methodBinding, MatchLocator locator, SimpleSet knownMethods) throws CoreException", "signatureAfterChange": " protected void reportDeclaration(MethodBinding methodBinding, MatchLocator locator, SimpleSet knownMethods) throws CoreException", "diff": ["-\tTypeBinding[] parameters = methodBinding.parameters;", "+\tTypeBinding[] parameters = methodBinding.original().parameters;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c61856174ee25af377bf776cea48ae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f9a4225018848764cfc1723dc3aa2afabd642ddb", "commitAfterChange": "5b71fd258ccc5692becf5de077dfd1b633e668c5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tprivate static ClassLoader createClassLoader(List<File> files, ClassLoader parentCL)", "signatureAfterChange": " \t \tprivate static ClassLoader createClassLoader(List<File> files, ClassLoader parentCL)", "diff": ["-\t\t\t\turls.add(files.get(i).toURL());", "+\t\t\t\turls.add(files.get(i).toURI().toURL());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cffdf9671031ca68c10db5c10451f6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\t\t\tqualifiedType = scope.createParameterizedType((ReferenceBinding)currentType.erasure(), null, qualifiedType);", "+\t\t\t\t\tqualifiedType = scope.environment().createParameterizedType((ReferenceBinding)currentType.erasure(), null, qualifiedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8127748db2c757d2b07dda385b13c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "0c8ad3a5909a5d0c85d107049bd92d83518c3caf", "commitAfterChange": "300c7463a197a72687470692843000f6831868f0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r void removePackage(IResourceDelta sourceDelta)", "signatureAfterChange": "\r \r void removePackage(IResourceDelta sourceDelta)", "diff": ["-\t\t\t\tremove(location);\r", "+\t\t\t\tremove(location.toString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df785bb5a866272df92a611dc5574db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "410d11642750f05a6243be841d06f42ceed7a0e1", "commitAfterChange": "e69b75f122af6f64c831ddc9380ae2c446ae4d8b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprotected void elementAdded(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementAdded(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\tthis.updateRoots(element, delta);\r", "+\t\t\t\tthis.updateRoots(element.getPath(), delta);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118434c661a633753d0bfabc43f12e9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "74eb81f1ca75f368e1d462a53635a879dbafa13b", "commitAfterChange": "33db0976cc396931401ead581ca35522a55202e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\tflowInfo.addInitializationsFrom(loopingContext.initsOnBreak), // recover upstream null info", "+\t\t\t\t\tflowInfo.unconditionalCopy().addInitializationsFrom(loopingContext.initsOnBreak), ", "+\t\t\t\t\t\t// recover upstream null info"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137fb4c6b81608c8c4317c7eace19c26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "ea176c4b30f0ccecbe1ef65d5acaa7a437fc7839", "commitAfterChange": "51ed698671d4eccb2f1e7d9fc9f63f18fc20c064", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "signatureAfterChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "diff": ["-\t\t\t\tif (delta.getKind() == IResourceDelta.CHANGED && JavaProject.hasJavaNature(resource)) {", "+\t\t\t\tif (delta.getKind() == IResourceDelta.CHANGED && JavaProject.hasJavaNature(resource.getProject())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "154a224298068340d124a75c755747bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "8f32d730ad3a511e39170e7d2e2818d8a94e768e", "commitAfterChange": "0fffb8b59f919ad9a7c2f4403d47f7a863639e91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t? scope.getBinding(this.token, this.bits & RestrictiveFlagMASK, this, true /*resolve*/)", "+\t\t\t? scope.classScope().getBinding(this.token, this.bits & RestrictiveFlagMASK, this, true /*resolve*/)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164884ae1f4c947fdb7c421c5e000342", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyToSignature.java", "commitBeforeChange": "40de971d505d6c5e7e6332c239bc043eeaeddf27", "commitAfterChange": "a80ff1c3b76dcbd298c399037577157e55f1918f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void consumeType()", "signatureAfterChange": "  \tpublic void consumeType()", "diff": ["-\t\t\tthis.signature.insert(this.typeSigStart, typeParametersSig);", "+\t\t\tthis.signature.insert(this.typeSigStart, typeParametersSig.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17920554484ecb255192367f341a9309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "2707d1f2308704222e24daf7fef0fe90e8aff805", "commitAfterChange": "3451aa86d4d553eaa34865ba1fdd1f4710988fbc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private boolean checkBuffers(String errorString, String outputString, String sourceFileName, String expectedSuccessOutputString)", "signatureAfterChange": " private boolean checkBuffers(String errorString, String outputString, String sourceFileName, String expectedSuccessOutputString)", "diff": ["-\tif (errorString.length() > 0) {", "+\tif (errorString.trim().length() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aad2cb2b58f19486048ef33593bce88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "5d40d607db39c969811aa1389d4dbc7ecffbf8a1", "commitAfterChange": "33523e4b99ed8bfc74579de56a63cfc65481aa8a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tint reconcileFlags, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tint reconcileFlags, \t\tIProgressMonitor monitor)", "diff": ["-\t\tunit.setTypeRoot(workingCopy);", "+\t\tunit.setTypeRoot(workingCopy.originalFromClone());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc6cdbafa58aa785760b85e3863defe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "a4fee9474be86c01ee26ffe530c8553215f93bfb", "commitAfterChange": "93581c1ebc9d3ed91d4ca359d46c6ee1e8be01a5", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": "  public void invokeAutoCloseableClose(TypeBinding resourceType)", "signatureAfterChange": "  public void invokeAutoCloseableClose(TypeBinding resourceType)", "diff": ["-\t\t\tresourceType.isInterface() ? Opcodes.OPC_invokeinterface : Opcodes.OPC_invokevirtual,", "+\t\t\tresourceType.erasure().isInterface() ? Opcodes.OPC_invokeinterface : Opcodes.OPC_invokevirtual,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20bebfbb7e7c0d316b1d9424e37e46b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBound.java", "commitBeforeChange": "ba27cc9ad58b30d1c487594145e3ca4e45df0030", "commitAfterChange": "74d118e989117eba0163f0f707314197db0891af", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate TypeBinding safeType(TypeBinding type)", "signatureAfterChange": " \t \tprivate TypeBinding safeType(TypeBinding type)", "diff": ["-\t\t\tMethodBinding enclosingMethod = ((LocalTypeBinding) type).enclosingMethod;", "+\t\t\tMethodBinding enclosingMethod = ((LocalTypeBinding) type.original()).enclosingMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2803af1cf4ad76f8b2b6497e62fec786", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "6b76035c1856a3eca63a0bb3e8bb4b8b19d3d793", "commitAfterChange": "1fcb28880ef91146c6ad1544f3387b59e5c8bf16", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "diff": ["-\t\t\t\tTypeBinding type = method.parameters[i];", "+\t\t\t\tTypeBinding type = method.original().parameters[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "315dab7c5cea84dbbd150728c47e32e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "ce916e079f7df7322e8f085c95df150f34987aee", "commitAfterChange": "bd66f33da6dcc33c67153a2129d6fec0fda88ac8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r boolean isStructurallyChanged(IProject prereqProject, State prereqState)", "signatureAfterChange": "\r \r boolean isStructurallyChanged(IProject prereqProject, State prereqState)", "diff": ["-\tObject o = structuralBuildNumbers.get(prereqProject.getName());\r", "+\tObject o = structuralBuildNumbers.get(prereqProject.getName().toCharArray());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37cb5e62f5dbf8d2a86deb94a76b8f79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodesCollectorVisitor.java", "commitBeforeChange": "c526f10eda122472f5603082aaefe389819e487a", "commitAfterChange": "2978110db99779d239d94c1b0f5bcb0af9289202", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void endVisit(EnumConstantDeclaration node)", "signatureAfterChange": " \tpublic void endVisit(EnumConstantDeclaration node)", "diff": ["-\t\tdetachedListElement(node.bodyDeclarations());", "+\t\tdetachedListElement(node.getAnonymousClassDeclaration().bodyDeclarations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38bedc3015403b3e07810126c8895ccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "signatureAfterChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "diff": ["-\t\t\t\t\t\tThreeSets three = this.boundsPerVariable.get(alpha);", "+\t\t\t\t\t\tThreeSets three = this.boundsPerVariable.get(alpha.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d8f17b2c54e92835d30f27a00983d9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic TypeBinding[] upperBounds(InferenceVariable variable, boolean onlyProper)", "signatureAfterChange": " \tpublic TypeBinding[] upperBounds(InferenceVariable variable, boolean onlyProper)", "diff": ["-\t\tThreeSets three = this.boundsPerVariable.get(variable);", "+\t\tThreeSets three = this.boundsPerVariable.get(variable.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d99f75e689e9cea2cc5284b3c47d633", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tthis.actualReceiverType = scope.convertToRawType(this.receiver.resolvedType);", "+\t\tthis.actualReceiverType = scope.environment().convertToRawType(this.receiver.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4ef530c19e5895c58a57df01bb91ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic TypeBinding getInstantiation(InferenceVariable inferenceVariable, LookupEnvironment environment)", "signatureAfterChange": "  \tpublic TypeBinding getInstantiation(InferenceVariable inferenceVariable, LookupEnvironment environment)", "diff": ["-\t\tThreeSets three = this.boundsPerVariable.get(inferenceVariable);", "+\t\tThreeSets three = this.boundsPerVariable.get(inferenceVariable.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f7068f202e054af2cf2d49eb18112ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/HandleFactory.java", "commitBeforeChange": "69166fc4e41eda18ba3ac0adb7fbc59250ec70c0", "commitAfterChange": "55ee0265171c95e2014ca1f0a8ad4553c7329fc1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r \r \tpublic HandleFactory(IWorkspace workspace)", "signatureAfterChange": "\r \r \r \tpublic HandleFactory(IWorkspace workspace)", "diff": ["-\t\tthis.javaModel = JavaModelManager.getJavaModel(workspace);\r", "+\t\tthis.javaModel = JavaModelManager.getJavaModelManager().getJavaModel();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc127c3c3f91aedf04ebc4e09bfed51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "792caf681810140ce615d98d3abfdde62639719c", "commitAfterChange": "d72243e9032009ede789d14b49acc668f280d583", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tpublic void resolveReceiver()", "signatureAfterChange": "  \tpublic void resolveReceiver()", "diff": ["-\t\tif (enclosingReceiver != resolvedReceiverType) {", "+\t\tif (enclosingReceiver != resolvedReceiverType.unannotated()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43221e9caf50a75f4f032e6524df6fd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic boolean isInstantiated(InferenceVariable inferenceVariable)", "signatureAfterChange": "  \tpublic boolean isInstantiated(InferenceVariable inferenceVariable)", "diff": ["-\t\tThreeSets three = this.boundsPerVariable.get(inferenceVariable);", "+\t\tThreeSets three = this.boundsPerVariable.get(inferenceVariable.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43a3ae448343e97a7b71d5b5c1321bcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "ce916e079f7df7322e8f085c95df150f34987aee", "commitAfterChange": "bd66f33da6dcc33c67153a2129d6fec0fda88ac8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r void recordLastStructuralChanges(IProject prereqProject, int prereqBuildNumber)", "signatureAfterChange": "\r \r void recordLastStructuralChanges(IProject prereqProject, int prereqBuildNumber)", "diff": ["-\tstructuralBuildNumbers.put(prereqProject.getName(), new Integer(prereqBuildNumber));\r", "+\tstructuralBuildNumbers.put(prereqProject.getName().toCharArray(), new Integer(prereqBuildNumber));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43bc835d8723522d2088b822a29b90a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "260abd4c81f5e6a46979b443ec583d3f991d2708", "commitAfterChange": "c645037891fa3d611acc6db8bb378abfa3cf81c0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "signatureAfterChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "diff": ["-\t\t\t\t\treturn Constant.fromValue(field.id); // ordinal value", "+\t\t\t\t\treturn Constant.fromValue(field.original().id); // ordinal value"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48a4a0ed2992382292ef4bb53297aa0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "de22293e139c05757446740dae9a0ac47a2b6c43", "commitAfterChange": "b1786a8985cb41ac1e4b0e7995eca7204093ffb0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tclosestMatch.modifiers |= AccPrivateUsed;", "+\t\t\t\tclosestMatch.original().modifiers |= AccPrivateUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a40bc27dec756915931e3a5cd730b23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BuildNotifier.java", "commitBeforeChange": "268f7eb2bc7f6630ccc414ea6cd570b66584c37f", "commitAfterChange": "76066ada630300b333263778ad537b82f4d8850c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void aboutToCompile(SourceFile unit)", "signatureAfterChange": " public void aboutToCompile(SourceFile unit)", "diff": ["-\tString message = Util.bind(\"build.compiling\", unit.resource.getFullPath().removeLastSegments(1).toString()); //$NON-NLS-1$", "+\tString message = Util.bind(\"build.compiling\", unit.resource.getFullPath().removeLastSegments(1).makeRelative().toString()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52162adff05928d32d5d8144fba1d52e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java", "commitBeforeChange": "19e2dc2ece70f1150e1057312c39a25dc3c8aa40", "commitAfterChange": "99e41f3c8f81b472ef04c2c0a7118d5b465204da", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tConstructorDeclaration constructor = (ConstructorDeclaration) anonymousType.declarationOf(binding);", "+\t\t\tConstructorDeclaration constructor = (ConstructorDeclaration) anonymousType.declarationOf(binding.original());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ec804b94b70b6a894a433315b37534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "7a140644bb864b33a5703af3dc19c84a2bcb243d", "commitAfterChange": "0f61b5a730cd24bb7ab05a282fa3a07ec8b534a5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate static TypeBinding mergeAnnotationsIntoType(BlockScope scope, AnnotationBinding[] se8Annotations, long se8nullBits, Annotation se8NullAnnotation, \t\t\tTypeReference typeRef, TypeBinding existingType)", "signatureAfterChange": "  \tprivate static TypeBinding mergeAnnotationsIntoType(BlockScope scope, AnnotationBinding[] se8Annotations, long se8nullBits, Annotation se8NullAnnotation, \t\t\tTypeReference typeRef, TypeBinding existingType)", "diff": ["-\t\tlong prevNullBits = existingType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t// for arrays: @T X[] SE7 associates @T to the type, but in SE8 it affects the leaf component type", "+\t\tlong prevNullBits = existingType.leafComponentType().tagBits & TagBits.AnnotationNullMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5437c6d76b3e9652848f481c670c6410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "709c9629c7ca5e9f5f62caafc7b62b1f650d3793", "commitAfterChange": "3877a578e8e740594c273a29e1657cb21f5226c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "signatureAfterChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "diff": ["-\t\tthis.type.addSyntheticBridgeMethod(originalInherited, concreteMethod);", "+\t\tthis.type.addSyntheticBridgeMethod(originalInherited, concreteMethod.original());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56150e07ae928a0391f369c770226035", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\t\t\tenclosingType = (ReferenceBinding) scope.convertToRawType(enclosingType);", "+\t\t\t\t\tenclosingType = (ReferenceBinding) scope.environment().convertToRawType(enclosingType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5967978be2c3aa3178d655ca43124da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b7181f3de94480b6d1001699120338d0c39696a4", "commitAfterChange": "f24a5ac4a72ebc1e81be35babfba5deb265e592d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "signatureAfterChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "diff": ["-\tIJavaElement res = findLocalElement(methodBinding.sourceStart());", "+\tIJavaElement res = findLocalElement(methodBinding.original().sourceStart());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3f124454b32be87819082998d566b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "c4bece6f11e325ba67c44c784cdcd204e747008d", "commitAfterChange": "19d87afca91a71ae0ccf91f00d2d872641e86af5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "signatureAfterChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "diff": ["-\t\tTypeBinding rawType = environment.convertToRawType(receiverType);", "+\t\tTypeBinding rawType = environment.convertToRawType(receiverType.erasure());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6569942cd9fbf806dcdab80b7bdb8443", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void recordContinueFrom(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordContinueFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnContinue = initsOnContinue.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnContinue = initsOnContinue.mergedWith(flowInfo.copy().unconditionalInits());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68fa0d4e95beb3aa92ea662ac25a6eec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "signatureAfterChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "diff": ["-\t\tmethod.returnType = scope.createParameterizedType(", "+\t\tmethod.returnType = scope.environment().createParameterizedType("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad309f1c620729032589739e70b779a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "a28933ffb03bd99d79fd8fce531cad43e24a3c4c", "commitAfterChange": "ec654acb2b0d784f0b5dd9a8d411b88442e8fd96", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tProcessorEnvImpl env, \t\t\tIProgressMonitor progressMonitor) \tthrows CoreException", "signatureAfterChange": " \tpublic FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tProcessorEnvImpl env, \t\t\tIProgressMonitor progressMonitor) \tthrows CoreException", "diff": ["-\t\t\t\t\tsb.append(root).append(\" \"); //$NON-NLS-1$", "+\t\t\t\t\tsb.append(root.getPath()).append(\" \"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71039206a52937387b7f4b01cd6be789", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "fcd23c7f31f72a5138ea1cad062c9d8a4a84f1dc", "commitAfterChange": "21098f5e40f4c2eaaad3e643b94e7cf0a54113c9", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic final boolean isDefinedInSameUnit(ReferenceBinding type)", "signatureAfterChange": " \tpublic final boolean isDefinedInSameUnit(ReferenceBinding type)", "diff": ["-\t\t\tif (topLevelTypes[i] == enclosingType)", "+\t\t\tif (topLevelTypes[i] == enclosingType.original())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7286add3e418392b5b73acc641c400f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c67d112c20f07c2dcda11714ef23687a9781a753", "commitAfterChange": "af79dfe4ab6f88841082d7727b71d3b65b4f7778", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public TypeBinding copyAnnotations(TypeBinding annotatedType, TypeBinding unannotatedSubstite)", "signatureAfterChange": " public TypeBinding copyAnnotations(TypeBinding annotatedType, TypeBinding unannotatedSubstite)", "diff": ["-\t\treturn createParameterizedType((ReferenceBinding)unannotatedSubstite, newArguments, nullTagBits, newEnclosing);", "+\t\treturn createParameterizedType((ReferenceBinding)unannotatedSubstite.original(), newArguments, nullTagBits, newEnclosing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "732dc22e01fcbea5b2a4623f7879b033", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public TypeBinding createAnnotatedType(TypeBinding genericType, long annotationBits)", "signatureAfterChange": " public TypeBinding createAnnotatedType(TypeBinding genericType, long annotationBits)", "diff": ["-\t\tParameterizedTypeBinding parameterizedType = createParameterizedType((ReferenceBinding) genericType, typeArguments, ", "+\t\tParameterizedTypeBinding parameterizedType = createParameterizedType((ReferenceBinding) genericType.original(), typeArguments, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b37cd2b2a6f2a8b81351bd7e25c9f06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "4cbefd5ca0037578e5d1e6e4d5e9cc1d66230e61", "commitAfterChange": "799096aac19459ee2d435fdb0d7670c9935daead", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "signatureAfterChange": " \t \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "diff": ["-\t\t\tfield.modifiers |= AccLocallyUsed;", "+\t\t\tfield.original().modifiers |= AccLocallyUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb10909fb01738fb39f64d89a9dcd11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "19e2dc2ece70f1150e1057312c39a25dc3c8aa40", "commitAfterChange": "99e41f3c8f81b472ef04c2c0a7118d5b465204da", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\tscope.referenceType().declarationOf(field));", "+\t\t\t\t\t\tscope.referenceType().declarationOf(field.original()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c989831fc0c6184f2d3e3c4d1a38746", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "410d11642750f05a6243be841d06f42ceed7a0e1", "commitAfterChange": "e69b75f122af6f64c831ddc9380ae2c446ae4d8b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tprotected void elementRemoved(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementRemoved(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\tthis.updateRoots(element, delta);\r", "+\t\t\t\tthis.updateRoots(element.getPath(), delta);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8118c7af6d39416d5066060c1b607685", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t\treturn this.resolvedType = scope.convertToRawType(memberType);", "+\t\treturn this.resolvedType = scope.environment().convertToRawType(memberType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83453c514c9250f9daa397a3f6e0a76b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "7ae9e904164ab9e611ba46366de94e1b02c0e7e7", "commitAfterChange": "59758b3ac964ea48fbbbf5d314c8ed8b19dc60bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\t? flowInfo.addInitializationsFrom(condInfo.initsWhenFalse()) ", "+\t\t\t\t\t\t\t\t? flowInfo.copy().addInitializationsFrom(condInfo.initsWhenFalse()) // https://bugs.eclipse.org/bugs/show_bug.cgi?id=380927"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84721d95c469dd4c61741c38ccc5c03c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "89847a0c1a06590b3bbeee9528d77f57e2f8453c", "commitAfterChange": "25fdae674503d8fe99a15a82b42402cfb3039bdc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding checkFieldAccess(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding checkFieldAccess(BlockScope scope)", "diff": ["-\t\t\t\t&& methodScope.enclosingSourceType() == fieldBinding.declaringClass", "+\t\t\t\t&& methodScope.enclosingSourceType() == fieldBinding.original().declaringClass"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87dd1104b8defedee57ef1cde051cd37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "c47c570c9647ab277a5daba9edb2456da1d964cd", "commitAfterChange": "2634dfbc7c43218086ff593a2618892891d57559", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\t\t} else if (isNarrowing && castType.isTypeVariable()) {", "+\t\t} else if (isNarrowing && castType.leafComponentType().isTypeVariable()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "880e70e43c5458eb141816dc43bb1699", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "d74cc8c06b35228791394046e6c7725558d6ea07", "commitAfterChange": "cbd48da7303f20fe27c3bb57f06cce9208a1cb77", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void computeFolderChildren(IContainer folder, boolean isIncluded, String[] pkgName, ArrayList vChildren, char[][] inclusionPatterns, char[][] exclusionPatterns) throws JavaModelException", "signatureAfterChange": " protected void computeFolderChildren(IContainer folder, boolean isIncluded, String[] pkgName, ArrayList vChildren, char[][] inclusionPatterns, char[][] exclusionPatterns) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\tString[] newNames = Util.arrayConcat(pkgName, memberName);", "+\t\t\t\t\t\t\t\tString[] newNames = Util.arrayConcat(pkgName, memberName.intern());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e88fe086f80c6f4a2f045f0c32d1324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic boolean condition18_5_2_bullet_3_3_1(InferenceVariable alpha, TypeBinding targetType)", "signatureAfterChange": " \tpublic boolean condition18_5_2_bullet_3_3_1(InferenceVariable alpha, TypeBinding targetType)", "diff": ["-\t\tThreeSets ts = this.boundsPerVariable.get(alpha);", "+\t\tThreeSets ts = this.boundsPerVariable.get(alpha.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8facf8468aa4164eaf8c9574447990ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic static String[] getClasspathVariableNames()", "signatureAfterChange": " \tpublic static String[] getClasspathVariableNames()", "diff": ["-\t\treturn JavaModelManager.variableNames();", "+\t\treturn JavaModelManager.getJavaModelManager().variableNames();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "918f9192ea65c4d7a5db6d86f433ec25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/DeclarationImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     Collection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "signatureAfterChange": "   \t \tCollection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "diff": ["-\r", "-    Collection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)\r", "-    {\r", "-        if( annoInstances == null || annoInstances.size() == 0 ) return Collections.emptyList();\r", "-        final List<AnnotationMirror> result = new ArrayList<AnnotationMirror>(annoInstances.size());\r", "-        for( org.eclipse.jdt.core.dom.Annotation annoInstance : annoInstances){\r", "-            final AnnotationMirrorImpl annoMirror =\r", "-                        (AnnotationMirrorImpl)Factory.createAnnotationMirror(annoInstance, this, _env);\r", "-            result.add(annoMirror);\r", "-        }\r", "-        return result;\r", "-    }  \r", "+\t", "+\tCollection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "+\t{", "+\t\tif( annoInstances == null || annoInstances.size() == 0 ) return Collections.emptyList();", "+\t\tfinal List<AnnotationMirror> result = new ArrayList<AnnotationMirror>(annoInstances.size());", "+\t\tfor( org.eclipse.jdt.core.dom.Annotation annoInstance : annoInstances){", "+\t\t\tfinal AnnotationMirrorImpl annoMirror =", "+\t\t\t\t(AnnotationMirrorImpl)Factory.createAnnotationMirror(annoInstance.resolveAnnotation(), this, _env);", "+\t\t\tresult.add(annoMirror);", "+\t\t}", "+\t\treturn result;", "+\t}  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93c42ab8f70c29bb768c1ce28ecb59cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \tpublic boolean condition18_5_2_bullet_3_3_2(InferenceVariable alpha, TypeBinding targetType, InferenceContext18 ctx18)", "signatureAfterChange": "  \tpublic boolean condition18_5_2_bullet_3_3_2(InferenceVariable alpha, TypeBinding targetType, InferenceContext18 ctx18)", "diff": ["-\t\tThreeSets ts = this.boundsPerVariable.get(alpha);", "+\t\tThreeSets ts = this.boundsPerVariable.get(alpha.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97815ed1207e8a17790f3b0529b63de1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tTypeBinding[] lowerBounds(InferenceVariable variable, boolean onlyProper)", "signatureAfterChange": " \tTypeBinding[] lowerBounds(InferenceVariable variable, boolean onlyProper)", "diff": ["-\t\tThreeSets three = this.boundsPerVariable.get(variable);", "+\t\tThreeSets three = this.boundsPerVariable.get(variable.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a45ab56b4bc6104512634ebf988958e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tthis.resolvedType = scope.convertToRawType(this.type.resolvedType);", "+\t\tthis.resolvedType = scope.environment().convertToRawType(this.type.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd3ed75162af4ae53288c42d9f6b675", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tpublic TypeBinding findWrapperTypeBound(InferenceVariable variable)", "signatureAfterChange": "  \tpublic TypeBinding findWrapperTypeBound(InferenceVariable variable)", "diff": ["-\t\tThreeSets three = this.boundsPerVariable.get(variable);", "+\t\tThreeSets three = this.boundsPerVariable.get(variable.prototype());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a050b11d5cf60e0ad61896795363548b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "5c01a09bed3f1f87af178209b670be927ace999e", "commitAfterChange": "4cc5e7a582998cefb8acb28ddbb26cf16ae938cf", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "signatureAfterChange": "  \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "diff": ["-\t\t\t\tif (arg != param && !arg.isCompatibleWith(param))", "+\t\t\t\t//https://bugs.eclipse.org/bugs/show_bug.cgi?id=330445", "+\t\t\t\tif (arg != param && !arg.isCompatibleWith(param.erasure()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b12a170432ded6d45a3d86e4e8b5dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "de22293e139c05757446740dae9a0ac47a2b6c43", "commitAfterChange": "b1786a8985cb41ac1e4b0e7995eca7204093ffb0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope)", "signatureAfterChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope)", "diff": ["-\t\t\tmethod.modifiers |= AccPrivateUsed;", "+\t\t\tmethod.original().modifiers |= AccPrivateUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a9e520bf6be5ebb48ae1fca4c49b2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "19e2dc2ece70f1150e1057312c39a25dc3c8aa40", "commitAfterChange": "99e41f3c8f81b472ef04c2c0a7118d5b465204da", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tprivate char[][] findMethodParameterNames(MethodBinding method, char[][] parameterTypeNames)", "signatureAfterChange": " \tprivate char[][] findMethodParameterNames(MethodBinding method, char[][] parameterTypeNames)", "diff": ["-\t\t\t\t\tAbstractMethodDeclaration methodDecl = parsedType.declarationOf(method);", "+\t\t\t\t\tAbstractMethodDeclaration methodDecl = parsedType.declarationOf(method.original());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae6da42a54447941834bf428fe007c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.copy().unconditionalInits());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3a4a54f62eaf16cddb0639fab33363d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "709c9629c7ca5e9f5f62caafc7b62b1f650d3793", "commitAfterChange": "3877a578e8e740594c273a29e1657cb21f5226c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] otherInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] otherInheritedMethods)", "diff": ["-\tif (this.type.addSyntheticBridgeMethod(originalInherited, currentMethod) != null) {", "+\tif (this.type.addSyntheticBridgeMethod(originalInherited, currentMethod.original()) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3acfccfa721b31a7d41e4f522cbdde4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "8448e216638c2404adcd08ea4b340d88bdc6102b", "commitAfterChange": "9d5068fc09a5efce4517397a2a5cc9c7e7f725c2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\treturn \"Classpath for jar file \" + zipFile; //$NON-NLS-1$", "+\treturn \"Classpath for jar file \" + zipFile.getName(); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55a6b52e9ec477897c691c714a8ae41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "de22293e139c05757446740dae9a0ac47a2b6c43", "commitAfterChange": "b1786a8985cb41ac1e4b0e7995eca7204093ffb0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\tbinding.modifiers |= AccPrivateUsed;", "+\t\t\t\t\tbinding.original().modifiers |= AccPrivateUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c68aa921ad84c7fb0e8a8845317ccd5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\treturn this.resolvedType = scope.convertToRawType(type);", "+\t\t\t\t\treturn this.resolvedType = scope.environment().convertToRawType(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c79263f01dd66038c2526267e2980c76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\treturn this.resolvedType = scope.convertToRawType(this.resolvedType);", "+\t\t\t\treturn this.resolvedType = scope.environment().convertToRawType(this.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6b2b91d318068f2a7f192fe4a2f136", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "6a0eebe34bd6b3f3c957d0d1c92bc68d99fa8f40", "commitAfterChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\t\tAccessRestriction restriction = scope.environment().getAccessRestriction(type);", "+\t\t\tAccessRestriction restriction = scope.environment().getAccessRestriction(type.erasure());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d3d7992377503bf411e2601a4bdac0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnBreak = initsOnBreak.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnBreak = initsOnBreak.mergedWith(flowInfo.copy().unconditionalInits());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d216e20359fd54105f48c6fcce8519da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.copy().unconditionalInits());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6aad7aea8bb30c5072b171c33865fe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\t\t? initializationScope.convertToRawType(this) // enum constant is implicitly of declaring enum type", "+\t\t\t\t\t\t? initializationScope.environment().convertToRawType(this) // enum constant is implicitly of declaring enum type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7e0885bf650e245b90930ba166931dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "1e8407c421d57de44f31d65506c1b4aaba9e5875", "commitAfterChange": "191e3b632469bd60ad041cb4f98e064b2a92345c", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant)", "signatureAfterChange": " \tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant)", "diff": ["-\t\t\t\t\tconstantPool.literalIndex(", "-\t\t\t\t\t\t((StringConstant) constant).stringValue());", "+\t\t\t\t\tconstantPool.literalIndex(((StringConstant) constant).stringValue().toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e35bdb9fa9e7ed0d96284c75eba872be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DOMFinder.java", "commitBeforeChange": "542bc03686c1982d51c01449da7cc4df74fbe14e", "commitAfterChange": "488811f5b30befaaae3f5995fcfa0b0505629e6e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\tif (found(node, node) && this.resolveBinding)", "+\t\tif (found(node, node.getName()) && this.resolveBinding)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec295e219a9d11c85b714215260df3ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "6908063eba8a685f56d7ca33afe706e68d2c77b5", "commitAfterChange": "f78b6c4d80823115b2a0c851e53515d68cdcf5c5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate boolean siSuperI(TypeBinding si, TypeBinding funcI)", "signatureAfterChange": "  \tprivate boolean siSuperI(TypeBinding si, TypeBinding funcI)", "diff": ["-\t\t\tif (siSuperI(si, superIfcs[i]))", "+\t\t\tif (siSuperI(si, superIfcs[i].original()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f620e89c22a75e02b8a45b19baf7041f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7e146dda0040d3d5031d043128753827aceb3c9a", "commitAfterChange": "c9ad5551f73f2ec5555bf15eb7e58b2b54b36ce9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope blockScope, boolean checkBounds)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope blockScope, boolean checkBounds)", "diff": ["-\treturn this.resolvedType = blockScope.convertToRawType(this.resolvedType);", "+\treturn this.resolvedType = blockScope.environment().convertToRawType(this.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66e3184e99d8225695b04b19965bd0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "1045cbdc9a0204d50ecd4a1a396e7421caf1e4ee", "commitAfterChange": "367444e13a87169c6168a5b3bb22bc5c99302a2d", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": "  public void invokeAutoCloseableClose(TypeBinding resourceType)", "signatureAfterChange": "  public void invokeAutoCloseableClose(TypeBinding resourceType)", "diff": ["-\t\t\tresourceType.isInterface() ? Opcodes.OPC_invokeinterface : Opcodes.OPC_invokevirtual,", "+\t\t\tresourceType.erasure().isInterface() ? Opcodes.OPC_invokeinterface : Opcodes.OPC_invokevirtual,"]}], "num": 23476}