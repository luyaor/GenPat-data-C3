{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6672dfa92c0a4a2192ad2faae23c2222", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36e1e94b2ffb97d7affe012647f0f158", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "5dbd397b4fc5184876eeebb1e1ea9235db66fa0e", "commitAfterChange": "12bb3007708f198ce96e1ee7074598576067e3f5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "signatureAfterChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "diff": ["+\t\t\t\t\t} else if (subCandidate.isArrayType()) { // arrays have exactly one super type that is a class or interface:", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(superCandidate, scope.getJavaLangObject())) // java.lang.Object", "+\t\t\t\t\t\t\treturn TRUE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5616a988c87ea1c420b55679c166d65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "7cf8a68136e90cda676cf99c112914a22eaf96cd", "commitAfterChange": "b6bc90c50286b74cfcc0b4c67c3ded3be552505d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "signatureAfterChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "diff": ["-\t\t\t\t\tif (subCandidate instanceof ReferenceBinding) {", "-\t\t\t\t\t\tif (hasSuperType((ReferenceBinding) subCandidate, (ReferenceBinding) superCandidate))", "-\t\t\t\t\t\t\treturn TRUE;", "-\t\t\t\t\t} else if (subCandidate.isArrayType()) { // arrays have exactly one super type that is a class or interface:", "-\t\t\t\t\t\tif (TypeBinding.equalsEquals(superCandidate, scope.getJavaLangObject())) // java.lang.Object", "-\t\t\t\t\t\t\treturn TRUE;", "-\t\t\t\t\t}", "+\t\t\t\t\tif (subCandidate.isSubtypeOf(superCandidate))", "+\t\t\t\t\t\treturn TRUE;"]}], "num": 55124}