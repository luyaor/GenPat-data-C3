{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a4cb705455688ec4c6e39181ad07837", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68bc359d236f9cede4c61bdf75196e39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "2d1be1f1f4a58e88e50c3b86fdfc977ad3b4dc33", "commitAfterChange": "0ac8f989e8e30ba627dfaa54489b47b0049b464d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testPerfIndexing() throws IOException, CoreException", "signatureAfterChange": "  \tpublic void testPerfIndexing() throws CoreException", "diff": ["-\tpublic void testPerfIndexing() throws IOException, CoreException {", "+\tpublic void testPerfIndexing() throws CoreException {", "-\t\tstartMeasuring();", "+\t\tINDEX_MANAGER.discardJobs(null); // discard all previous index jobs", "+\t\tINDEX_MANAGER.performConcurrentJob(new DoNothing(), IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, null);", "+\t\tINDEX_MANAGER.request(new Measuring(true/*start measuring*/));", "+\t\tfor (int i=0, length=ALL_PROJECTS.length; i<length; i++) {", "+\t\t\tINDEX_MANAGER.indexAll(ALL_PROJECTS[i].getProject());", "+\t\t}", "-\t\tstopMeasuring();", "-\t\tcommitMeasurements();", "-\t\tassertPerformance();", "+\t\tINDEX_MANAGER.request(new Measuring(false /*end measuring*/));", "+\t\tINDEX_MANAGER.performConcurrentJob(new DoNothing(), IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, null);", "+\t\tassertEquals(\"Index manager should not have remaining jobs!\", 0, INDEX_MANAGER.awaitingJobsCount()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6355f7225a0b2437e80dd2cedcd0428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testPerfIndexing() throws CoreException", "signatureAfterChange": " \tpublic void testIndexing() throws CoreException", "diff": ["-\tpublic void testPerfIndexing() throws CoreException {", "-\t\ttagAsSummary(\"Search>Indexing\", Dimension.CPU_TIME, true/*put in fingerprint*/);", "-//\t\tINDEX_MANAGER.discardJobs(null); // discard all previous index jobs", "+\tpublic void testIndexing() throws CoreException {", "+\t\ttagAsSummary(\"Search>Indexing\", true); // put in fingerprint", "+\t", "-//\t\tINDEX_MANAGER.performConcurrentJob(new DoNothing(), IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, null);", "-//\t\tassertEquals(\"Index manager should not have remaining jobs!\", 0, INDEX_MANAGER.awaitingJobsCount()); //$NON-NLS-1$", "+\t\t// Clean memory", "+\t\trunGc();", "+\t", "-//\t\tINDEX_MANAGER.enable();", "-//\t\tINDEX_MANAGER.performConcurrentJob(new DoNothing(), IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, null);", "-//\t\tassertEquals(\"Index manager should not have remaining jobs!\", 0, INDEX_MANAGER.awaitingJobsCount()); //$NON-NLS-1$", "-\t\t// Commit measures", "+\t\t// Commit", "-//\t\tINDEX_MANAGER.performConcurrentJob(new DoNothing(), IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, null);", "-//\t\tassertEquals(\"Index manager should not have remaining jobs!\", 0, INDEX_MANAGER.awaitingJobsCount()); //$NON-NLS-1$", "-\t}"]}], "num": 35403}