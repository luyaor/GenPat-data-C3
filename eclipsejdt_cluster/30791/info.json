{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1ccf112891df0b6e69081b63269aa4b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2575690e8af6e9385621f1c95387efa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 1145, "methodNumberAfterChange": 1145, "signatureBeforeChange": " public void test1117()", "signatureAfterChange": " public void test1117() throws Exception", "diff": ["-public void test1117() {", "+public void test1117() throws Exception {", "-\ttry {", "-\t\tFile f = new File(OUTPUT_DIR + File.separator + \"B.class\");", "-\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\tint index = result.indexOf(expectedOutput);", "-\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t}", "-\t\tif (index == -1) {", "-\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t}", "-\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\tassertTrue(false);", "-\t} catch (IOException e) {", "-\t\tassertTrue(false);", "-\t}\t\t\t", "+\tFile f = new File(OUTPUT_DIR + File.separator + \"B.class\");", "+\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\tint index = result.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(result, 3));", "+\t}", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "+\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f55ff9c77445dd106280f7a3c8d2a472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 1068, "methodNumberAfterChange": 1068, "signatureBeforeChange": " public void test1040()", "signatureAfterChange": " public void test1040() throws Exception", "diff": ["-public void test1040() {", "+public void test1040() throws Exception {", "-\ttry {", "-\t\tFile f = new File(OUTPUT_DIR + File.separator + \"B.class\");", "-\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\tint index = result.indexOf(expectedOutput);", "-\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t}", "-\t\tif (index == -1) {", "-\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t}", "-\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\tassertTrue(false);", "-\t} catch (IOException e) {", "-\t\tassertTrue(false);", "-\t}\t\t\t", "+\tFile f = new File(OUTPUT_DIR + File.separator + \"B.class\");", "+\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\tint index = result.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(result, 3));", "+\t}", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "+\t}\t\t"]}], "num": 30791}