{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88786a875d51c5db863f5c092b2ec73c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "270b0988c06cf5a3c79f567b6cdf07cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic FlowContext getTargetContextForContinueLabel(char[] labelName)", "signatureAfterChange": " \tpublic FlowContext getTargetContextForContinueLabel(char[] labelName)", "diff": ["-\t\tFlowContext current = this,", "-\t\t\tlastContinuable = null,", "-\t\t\tlastNonReturningSubRoutine = null;", "+", "+\t\tFlowContext current = this;", "+\t\tFlowContext lastContinuable = null;", "+\t\tFlowContext lastNonReturningSubRoutine = null;", "+", "+\t\t\t", "-\t\t\tif (((currentLabelName = current.labelName()) != null)", "-\t\t\t\t&& CharOperation.equals(currentLabelName, labelName)) {", "+\t\t\tif ((currentLabelName = current.labelName()) != null && CharOperation.equals(currentLabelName, labelName)) {", "+", "+\t\t\t\t// matching label found\t\t\t\t\t", "-\t\t\t\t\t&& (current.associatedNode.concreteStatement()", "-\t\t\t\t\t\t== lastContinuable.associatedNode)) {", "+\t\t\t\t\t&& (current.associatedNode.concreteStatement()\t== lastContinuable.associatedNode)) {", "+\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ce99cf94d682d72e197c1ee8ab6e12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " protected void consumeCastExpressionLL1()", "signatureAfterChange": " protected void consumeCastExpressionLL1()", "diff": ["-\tExpression cast,exp;", "+\tExpression cast;", "+\tExpression exp;", "-\t\t\tthis.expressionStack[this.expressionPtr]);", "+\t\t\t(TypeReference) this.expressionStack[this.expressionPtr]);"]}], "num": 35093}