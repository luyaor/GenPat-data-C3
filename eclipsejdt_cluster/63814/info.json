{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "044b9dce61688dc8a2edbf5c06706b25", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ccab64f33c863a3d29450f3eb159d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "5a8e0ebcbe7a48bae1be079e6a906d2255f8238d", "commitAfterChange": "f746ae56082e88bc2dddd35d7563e5b9b706f5c1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " private void readHeaderInfo(FileInputStream stream) throws IOException", "signatureAfterChange": " private void readHeaderInfo(FileInputStream stream) throws IOException", "diff": ["-", "+\tlong fileLength = this.indexFile.length();", "+\tif (this.numberOfChunks > fileLength ) {", "+\t\t// not an accurate check, but good enough https://bugs.eclipse.org/bugs/show_bug.cgi?id=350612", "+\t\tif (DEBUG)", "+\t\t\tSystem.out.println(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "+\t}", "+\tif (size > fileLength) {", "+\t\t//  not an accurate check, but good enough  https://bugs.eclipse.org/bugs/show_bug.cgi?id=350612", "+\t\tif (DEBUG)", "+\t\t\tSystem.out.println(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c583c8437a60b486e120b5f7fb5b81e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": " private void initializeFrom(DiskIndex diskIndex, File newIndexFile) throws IOException", "signatureAfterChange": " private void initializeFrom(DiskIndex diskIndex, File newIndexFile) throws IOException", "diff": ["-\t\t\tSystem.out.println(\"initializeFrom - Failed to delete temp index \" + this.fileName); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"initializeFrom - Failed to delete temp index \" + this.indexFile); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"initializeFrom - Failed to create temp index \" + this.fileName); //$NON-NLS-1$", "-\t\tthrow new IOException(\"Failed to create temp index \" + this.fileName); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"initializeFrom - Failed to create temp index \" + this.indexFile); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Failed to create temp index \" + this.indexFile); //$NON-NLS-1$"]}], "num": 63814}