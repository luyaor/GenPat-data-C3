{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20c2d05b204af110f7e59f38e2c1e679", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "377c028a80cd70e3d8ebf23fc93bac7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "381b0c5e3a54bec6f421d38d7ee5fd38c998afc2", "commitAfterChange": "140563af50526c3e1d6be899503d29113c538e25", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "signatureAfterChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "diff": ["-\t\t\t        // no free spot found, need to grow", "-\t\t\t        System.arraycopy(constraintSubstitutes, 0, constraintSubstitutes = new TypeBinding[2*length], 0, length);", "+\t\t\t        // no free spot found, need to grow by one", "+\t\t\t        System.arraycopy(constraintSubstitutes, 0, constraintSubstitutes = new TypeBinding[length+1], 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c3f89711408c38058a204a812f9504b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ConfigurableOption.java", "commitBeforeChange": "3dfab3ddcba8c423c4ffc744c5543f629e5c3748", "commitAfterChange": "18a551ac689f1219a6d3f44455c48ebf82acddba", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \t\r \tpublic static String[] getIDs(String componentName,Locale locale)", "signatureAfterChange": "\r \t\r \tpublic static String[] getIDs(String componentName,Locale locale)", "diff": ["-\t\t\t\t\t\tif(partialResult.length <= order)\r", "-\t\t\t\t\t\t\tSystem.arraycopy(partialResult,0,partialResult = new String[order+1],0,partialResult.length);\r", "+\t\t\t\t\t\tint length = partialResult.length;\r", "+\t\t\t\t\t\tif(length <= order)\r", "+\t\t\t\t\t\t\tSystem.arraycopy(partialResult,0,partialResult = new String[order+1],0,length);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b31909de0a363e4fbc1dd127939fbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public FieldBinding[] availableFields()", "signatureAfterChange": "  public FieldBinding[] availableFields()", "diff": ["-\t", "+", "-\t", "-\tfor (int i = 0; i < fields.length;i++) {", "+\tfor (int i = 0; i < fields.length; i++) {", "-\t", "-\tSystem.arraycopy(availableFields, 0, availableFields = new FieldBinding[count], 0, count);", "+\tif (count < availableFields.length)", "+\t\tSystem.arraycopy(availableFields, 0, availableFields = new FieldBinding[count], 0, count);"]}], "num": 55493}