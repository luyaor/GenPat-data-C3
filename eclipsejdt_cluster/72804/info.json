{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b85b73d5d679edb3deaee350c56886c5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b58318d69fac116bea9baae732871bfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "9a002308afd4fa88fcf783c9675d5e0ce74b8153", "commitAfterChange": "e8cc0ae635ad89b28bebca1f5385768f9625249f", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 249, "signatureBeforeChange": " public void test0245() throws JavaModelException", "signatureAfterChange": " public void test0245() throws JavaModelException", "diff": ["-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=83005", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=101456", "+    this.wc = getWorkingCopy(", "+            \"/Completion/src/test/SnapshotImpl.java\",", "+            \"class SnapshotImpl extends AbstractSnapshot<SnapshotImpl, ProviderImpl> {}\");", "+    getWorkingCopy(", "+            \"/Completion/src/test/Snapshot.java\",", "+            \"public interface Snapshot<S extends Snapshot> {}\");", "+    getWorkingCopy(", "+            \"/Completion/src/test/SnapshotProvider.java\",", "+            \"interface SnapshotProvider<S extends Snapshot> {}\");", "+    getWorkingCopy(", "+            \"/Completion/src/test/AbstractSnapshot.java\",", "+            \"abstract class AbstractSnapshot<S extends Snapshot, P extends SnapshotProvider<S>> implements Snapshot<S> {}\");", "+    getWorkingCopy(", "+            \"/Completion/src/test/ProviderImpl.java\",", "+            \"class ProviderImpl implements SnapshotProvider<SnapshotImpl> {}\");", "+", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"ProviderImp\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+", "+\tassertResults(\"\", requestor.getResults());", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3439277ab4f5e17376c8d4195a1a5da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43376e039f3b408b15eaff059a7746b22171766c", "commitAfterChange": "6ce150229a43c564ac0ba19e83d7a18e9ed0cfed", "methodNumberBeforeChange": 611, "methodNumberAfterChange": 611, "signatureBeforeChange": " public void testBug99811() throws JavaModelException", "signatureAfterChange": " public void testBug99811() throws JavaModelException", "diff": ["-    this.wc = getWorkingCopy(", "-            \"/Completion/src/test/A.java\",", "-            \"public abstract class A implements I {}\");", "-    getWorkingCopy(", "-            \"/Completion/src/test/I.java\",", "-            \"public interface I {\\n\"+", "-            \"  public class M extends A {}\\n\"+", "+\tICompilationUnit aType = null;", "+    try {", "+    \tthis.wc = getWorkingCopy(", "+\t            \"/Completion/src/test/A.java\",", "+\t            \"public abstract class A implements I {}\");", "+    \t", "+\t    aType = getWorkingCopy(", "+\t            \"/Completion/src/test/I.java\",", "+\t            \"public interface I {\\n\"+", "+\t            \"  public class M extends A {}\\n\"+", "+\t            \"}\");", "+\t", "+\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t    String str = this.wc.getSource();", "+\t    String completeBehind = \"A\";", "+\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t\tassertResults(\"\", requestor.getResults());", "+\t} finally {", "+\t\tif(aType != null) {", "+\t\t\taType.discardWorkingCopy();", "+\t\t}", "+\t}", "+}", "-", "-    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-    String str = this.wc.getSource();", "-    String completeBehind = \"A\";", "-    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-", "-\tassertResults(\"\", requestor.getResults());"]}], "num": 72804}