{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d792cd8d972d506b39a5e602c945bd2e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02389b524a8eb670a555f1cdc5d92768", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tif (constant != NotAConstant) {", "+\t\tif (constant != Constant.NotAConstant) {", "-\t\t\t\t\tif (fieldBinding.isConstantValue()) {", "+\t\t\t\t\tConstant fieldConstant = fieldBinding.constant();", "+\t\t\t\t\tif (fieldConstant != Constant.NotAConstant) {", "-\t\t\t\t\t\t\tcodeStream.generateConstant(fieldBinding.constant(), implicitConversion);", "+\t\t\t\t\t\t\tcodeStream.generateConstant(fieldConstant, implicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31ade24ecd89306eff419f69aebcd22d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "204dbb0f962baec45cc155adc0f25897806fc936", "commitAfterChange": "8d7962f9f430b3236797be4f077716228c08370e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static final Constant getConstantFor( \t\tFieldBinding binding, \t\tReference reference, \t\tboolean isImplicit, \t\tScope referenceScope)", "signatureAfterChange": " \tpublic static final Constant getConstantFor( \t\tFieldBinding binding, \t\tReference reference, \t\tboolean isImplicit, \t\tScope referenceScope)", "diff": ["-\t\t\treturn binding.constant = NotAConstant;", "+\t\t\tbinding.setConstant(NotAConstant);", "+\t\t\treturn NotAConstant;", "-\t\tif (binding.constant != null) {", "+\t\tConstant fieldConstant = binding.constant();", "+\t\tif (fieldConstant != null) {", "-\t\t\t\treturn binding.constant;", "+\t\t\t\treturn fieldConstant;", "-\t\t\treturn binding.constant;", "+\t\t\treturn binding.constant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c4a5fe033456eb10a71d522a186b2e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "179d5d1c5c2a0bb83cd907094171a8fb72cf869e", "commitAfterChange": "f246a782ff9e1c63db1d8c4bda365d0fe5fb4e27", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": "\r \r \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\tif (exceptionArgument.constant != NotAConstant) {\r", "-\t\t\t\t\tcodeStream.invokeJavaLangAssertionErrorConstructor(exceptionArgument.constant.typeID());\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tcodeStream.invokeJavaLangAssertionErrorConstructor(exceptionArgument.implicitConversion & 0xF);\r", "-\t\t\t\t}\r", "+\t\t\t\tcodeStream.invokeJavaLangAssertionErrorConstructor(exceptionArgument.implicitConversion & 0xF);\r"]}], "num": 42163}