{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec2b08bea18cc2b031cfca1194d030cb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f6e8dcbed600566645c9952beda16f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems)", "signatureAfterChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems, Map unknownElements)", "diff": ["+\t */", "+\tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems, Map unknownElements) {", "-\t\t\t\t\tIClasspathEntry entry = ClasspathEntry.elementDecode((Element)node, this);", "+\t\t\t\t\tIClasspathEntry entry = ClasspathEntry.elementDecode((Element)node, this, unknownElements);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6791eccd59f6c453f68f6f6cf3011271", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems)", "signatureAfterChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems)", "diff": ["+\t\treturn decodeClasspath(xmlClasspath, createMarker, logProblems, null/*not interested in unknown elements*/);", "+\t}", "-\t\t\t\t\tIClasspathEntry entry = ClasspathEntry.elementDecode((Element)node, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b7d1a944c0f40775d37d5d0ba601359", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0efae52576e07ebd224a2451d252dd1a61534d03", "commitAfterChange": "8722bacd2644840da886ad1d13785a049b5d8dcf", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getRawClasspath(boolean createMarkers, boolean logProblems) throws JavaModelException", "diff": ["+\t */", "+\tpublic IClasspathEntry[] getRawClasspath(boolean createMarkers, boolean logProblems) throws JavaModelException {", "+", "-\t\tclasspath = this.readClasspathFile(false/*don't create markers*/, true/*log problems*/);", "+\t\tclasspath = this.readClasspathFile(createMarkers, logProblems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d041803fc48ebc2c3b88bd8aaba34c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getClasspath() throws JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedVariable) throws JavaModelException", "diff": ["-\t */\r", "-\tpublic IClasspathEntry[] getClasspath() throws JavaModelException {\r", "-\t\treturn getRawClasspath();\r", "-\t}\r", "+\t\treturn this.getResolvedClasspath(ignoreUnresolvedVariable, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa827ade0ee744d907a0865320a4987", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems)", "signatureAfterChange": " \t \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems, Map unknownElements)", "diff": ["+\t", "+\tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems, Map unknownElements) {", "-\t\t\treturn decodeClasspath(xmlClasspath, createMarker, logProblems);", "+\t\t\treturn decodeClasspath(xmlClasspath, createMarker, logProblems, unknownElements);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db91e579393c56d96608dfa270c16334", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "20f3c6b2ac321556137e2b18fa2ce6e70e8f1c79", "commitAfterChange": "e1ff8b4ebacb65697fbb997ed3ab4149c3b431ff", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic IPath getOutputLocation() throws JavaModelException", "signatureAfterChange": " \tpublic IPath getOutputLocation(boolean createMarkers, boolean logProblems) throws JavaModelException", "diff": ["+\t */", "+\tpublic IPath getOutputLocation(boolean createMarkers, boolean logProblems) throws JavaModelException {", "-\t\tthis.getRawClasspath();", "+\t\tthis.getRawClasspath(createMarkers, logProblems);"]}], "num": 71374}