{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da7ed424d8a8a2459de0bb706cbe31cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e288f5d430249a42a28bc436382ebc45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9ded7575c156d5aa8d3f91391c6974c211262bec", "commitAfterChange": "4633416c1bc83f78e0f1a8be57a963ab252b187d", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t&& method.areParametersEqual(otherMethod)) {", "+\t\t\t\t\t\t&& lookupEnvironment.methodVerifier().doesMethodOverride(otherMethod, method)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea79dcb0a272f147a86165afa8b05b35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9ded7575c156d5aa8d3f91391c6974c211262bec", "commitAfterChange": "4633416c1bc83f78e0f1a8be57a963ab252b187d", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "diff": ["-\t\t\t\t\t&& method.areParametersEqual(otherMethod)) {", "+\t\t\t\t\t&& lookupEnvironment.methodVerifier().doesMethodOverride(otherMethod, method)) {"]}], "num": 32731}