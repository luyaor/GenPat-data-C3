{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f44199b2109f88d8e2236a16c47a570", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53184b079824db2c9c20ce0b254857dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "59ccdbf9540bdb894570a3ebe1e5cfa637624073", "commitAfterChange": "29911619e9eb038f230f09e2190cd9ca1e9cfd72", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\tif (this.isDefaultConstructor) break checkUnused;", "+\t\tif ((this.bits & ASTNode.IsDefaultConstructor) != 0) break checkUnused;", "-\t\tthis.needFreeReturn = (flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0;", "+\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\t\t\tthis.bits |= ASTNode.NeedFreeReturn;", "+\t\t}", "-\t\t\t\t\t\tthis.isDefaultConstructor ? (ASTNode) this.scope.referenceType() : this);", "+\t\t\t\t\t\t((this.bits & ASTNode.IsDefaultConstructor) != 0) ? (ASTNode) this.scope.referenceType() : this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80ba3ba700ba08a56098e670d8d450e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tthis.tryBlockExit = false;", "-\t\t\t\tthis.tryBlockExit = (tryInfo.tagBits & FlowInfo.UNREACHABLE) != 0;", "+\t\t\t\tif ((tryInfo.tagBits & FlowInfo.UNREACHABLE) != 0)", "+\t\t\t\t\tthis.bits |= IsTryBlockExiting;", "-\t\t\t\tthis.isSubRoutineEscaping = true;", "+\t\t\t\tthis.bits |= IsSubRoutineEscaping;", "-\t\t\t\tthis.tryBlockExit = false;", "-\t\t\t\tthis.tryBlockExit = (tryInfo.tagBits & FlowInfo.UNREACHABLE) != 0;", "+\t\t\t\tif ((tryInfo.tagBits & FlowInfo.UNREACHABLE) != 0)", "+\t\t\t\t\tthis.bits |= IsTryBlockExiting;"]}], "num": 65308}