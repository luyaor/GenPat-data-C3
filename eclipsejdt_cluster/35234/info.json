{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8006c84938a67bc0b9baf7d3a5668c1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b9082f14a0b6cdd62a457062fb6122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "cf0d5d9274e542d3b08cb94b55b0a1fea4dbee32", "commitAfterChange": "fa6dd85ee31824ee89ad9c33b4c55aa204938a61", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void addPossibleMatch(AstNode node)", "signatureAfterChange": " public void addPossibleMatch(AstNode node)", "diff": ["+", "+\t// remove existing node at same position from set", "+\t// (case of recovery that created the same node several time", "+\t// see http://bugs.eclipse.org/bugs/show_bug.cgi?id=29366)", "+\tlong key = (((long) node.sourceStart) << 32) + node.sourceEnd;", "+\tAstNode existing = (AstNode)this.potentialMatchingNodesKeys.get(key);", "+\tif (existing != null && existing.getClass().equals(node.getClass())) {", "+\t\tthis.potentialMatchingNodes.remove(existing);", "+\t}", "+", "+\t// add node to set", "+\tthis.potentialMatchingNodesKeys.put(key, node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14f97eb8912073c27ea296d7ccd0f1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "cf0d5d9274e542d3b08cb94b55b0a1fea4dbee32", "commitAfterChange": "fa6dd85ee31824ee89ad9c33b4c55aa204938a61", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void addTrustedMatch(AstNode node)", "signatureAfterChange": " public void addTrustedMatch(AstNode node)", "diff": ["+\t", "+\t// remove existing node at same position from set", "+\t// (case of recovery that created the same node several time", "+\t// see http://bugs.eclipse.org/bugs/show_bug.cgi?id=29366)", "+\tlong key = (((long) node.sourceStart) << 32) + node.sourceEnd;", "+\tAstNode existing = (AstNode)this.matchingNodesKeys.get(key);", "+\tif (existing != null && existing.getClass().equals(node.getClass())) {", "+\t\tthis.matchingNodes.remove(existing);", "+\t}", "+\t", "+\t// add node to set", "+\tthis.matchingNodesKeys.put(key, node);"]}], "num": 35234}