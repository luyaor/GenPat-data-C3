{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f5cceb832ae8d429171ad1d07146097", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae598a94a698e2b5873e5bce973da82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "4ec792676ab55ca030f53c6c5068761e1f39e77d", "commitAfterChange": "1a46f9d74305471f9063d0ab3dfb4390a95b0823", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static File createAndAddAnnotationJar( IJavaProject project ) \t\tthrows IOException, JavaModelException", "signatureAfterChange": " \tpublic static File createAndAddAnnotationJar( IJavaProject project ) \t\tthrows IOException, JavaModelException", "diff": ["-\t\t", "+\t\t\t// The jar file will be created in the state location, e.g., .metadata/", "-\t\t\t", "-\t\t\tFileFilter filter = new PackageFileFilter(", "-\t\t\t\t\tANNOTATIONS_PKG, getPluginClassesDir());", "-\t\t\tMap<File, FileFilter> files = Collections.singletonMap(", "-\t\t\t\t\tnew File(getPluginClassesDir()), filter);", "-\t\t\tzip( classesJarPath, files );", "+\t\t\tif (null != getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/bin\") )) {", "+\t\t\t\t// We're in a dev environment, where we jar up the classes from the plugin project", "+\t\t\t\tFileFilter filter = new PackageFileFilter(", "+\t\t\t\t\t\tANNOTATIONS_PKG, getPluginClassesDir());", "+\t\t\t\tMap<File, FileFilter> files = Collections.singletonMap(", "+\t\t\t\t\t\tnew File(getPluginClassesDir()), filter);", "+\t\t\t\tzip( classesJarPath, files );", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\t// We're in a releng environment, where we copy the already-built jar", "+\t\t\t\tFile aptJarFile = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/apt.jar\")); ", "+\t\t\t\tif(null == aptJarFile) {", "+\t\t\t\t\tthrow new FileNotFoundException(\"Could not find apt.jar file in org.eclipse.jdt.apt.tests plugin\");", "+\t\t\t\t}", "+\t\t\t\tmoveFile(aptJarFile, classesJarPath);", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab2520ed5c0b2687fd810281ef9a3251", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "commitAfterChange": "8a3cbdf1db434ade029724481c4ce0338046043a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "diff": ["+\t\tif (this._binaryTypes != null) {", "+\t\t\tfor (BinaryTypeBinding typeBinding : _binaryTypes) {", "+\t\t\t\tTypeElement element = (TypeElement)Factory.newElement(typeBinding);", "+\t\t\t\tif (null == element) {", "+\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + typeBinding); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\telements.add(element);", "+\t\t\t}", "+\t\t}"]}], "num": 43055}