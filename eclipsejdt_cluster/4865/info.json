{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d02425fdef3c1a8efb0563366db8463f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5e398864d90fee8a0dfcb6b96782fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "73a3572f1ed828d7a770d67850f907fae70bd464", "commitAfterChange": "50431e234c5ece34d7b8d3e0af32a86a5079d5cd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\tboolean versionIDRequired = false;", "-", "+\t\tboolean printVersionRequired = false;", "+\t\t", "-\t\t\t\t|| currentArg.equals(\"-v\")) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tversionIDRequired = true;", "-\t\t\t\tcontinue;", "+\t\t\t\t|| currentArg.equals(\"-v\")) { //$NON-NLS-1$", "+\t\t\t\tprintVersionRequired = true;", "+\t\t\t\tproceed = false;", "+\t\t\t\treturn;", "+\t\t\tif (currentArg.equals(\"-showversion\")) { //$NON-NLS-1$", "+\t\t\t\tprintVersionRequired = true;", "+\t\t\t\tcontinue;", "+\t\t\t}\t\t\t", "-\t\t\tif (currentArg.equals(\"-help\")) { //$NON-NLS-1$", "+\t\t\tif (currentArg.equals(\"-help\") || currentArg.equals(\"-?\")) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"packageDefaultMethod\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"pkgDefaultMethod\") || token.equals(\"packageDefaultMethod\")/*backward compatible*/ ) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"interfaceNonInherited\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"intfNonInherited\") || token.equals(\"interfaceNonInherited\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"noImplicitStringConversion\")) {//$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"charConcat\") || token.equals(\"noImplicitStringConversion\")/*backward compatible*/) {//$NON-NLS-1$", "-", "-\t\t/*", "-\t\t * Standalone options", "-\t\t */", "-\t\tif (versionIDRequired) {", "-\t\t\tout.println(Main.bind(\"misc.version\",  //$NON-NLS-1$", "-\t\t\t\tnew String[]{", "-\t\t\t\t\tMain.bind(\"compiler.name\"), //$NON-NLS-1$", "-\t\t\t\t\tMain.bind(\"compiler.version\"), //$NON-NLS-1$", "-\t\t\t\t\tMain.bind(\"compiler.copyright\") })); //$NON-NLS-1$", "-\t\t\tproceed = false;", "-\t\t\treturn;", "-\t\t}", "-", "-\t\tif (printUsageRequired) {", "+\t\tif (printUsageRequired || filesCount == 0) {", "+\t\t} else {", "+\t\t\tif (printVersionRequired) {", "+\t\t\t\tprintVersion();", "+\t\t\t\tif (!proceed) return;", "+\t\t\t}", "-\t\tif (filenames == null) {", "-\t\t\tprintUsage();", "-\t\t\treturn;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd1c0f4788b8b09e89225f55369433c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "c7a9edf536467451ba659d7e03ac6c483c5c0cfe", "commitAfterChange": "e6bf96fd82847410c46479a652f4e58f9a6dd052", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "-\t\t\t\t\t} else if (token.equals(\"maskedCatchBlocks\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"maskedCatchBlock\") || token.equals(\"maskedCatchBlocks\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"unusedLocals\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"unusedLocal\") || token.equals(\"unusedLocals\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"unusedArguments\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"unusedArgument\") || token.equals(\"unusedArguments\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"unusedImports\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"unusedImport\") || token.equals(\"unusedImports\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t} else if (token.equals(\"unusedPrivate\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}], "num": 4865}