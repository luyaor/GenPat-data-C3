{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1cbfb99afa14c3a81f985836ea01948", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5371a8c1836c8663d8517bb5c7422862", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MultiOperation.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected void verifyRenaming(IJavaElement element) throws JavaModelException", "signatureAfterChange": " \tprotected void verifyRenaming(IJavaElement element) throws JavaModelException", "diff": ["-\t", "+\t    IJavaProject project = element.getJavaProject();", "+\t    String sourceLevel = project.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t    String complianceLevel = project.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "-\t\t\t\tisValid = JavaConventions.validatePackageName(newName).getSeverity() != IStatus.ERROR;", "+\t\t\t\tisValid = JavaConventions.validatePackageName(newName, sourceLevel, complianceLevel).getSeverity() != IStatus.ERROR;", "-\t\t\t\tisValid = JavaConventions.validateCompilationUnitName(newName).getSeverity() != IStatus.ERROR;", "+\t\t\t\tisValid = JavaConventions.validateCompilationUnitName(newName,sourceLevel, complianceLevel).getSeverity() != IStatus.ERROR;", "-\t\t\t\tisValid = JavaConventions.validateIdentifier(newName).getSeverity() != IStatus.ERROR;", "+\t\t\t\tisValid = JavaConventions.validateIdentifier(newName, sourceLevel, complianceLevel).getSeverity() != IStatus.ERROR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc06fe99244f80eb063698a7580ec408", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/EncodedFileOutputStream.java", "commitBeforeChange": "6a6a9c5ecab638cf968cf598ab3f2aad56cf0138", "commitAfterChange": "06158a1e7307576c7e89eca6088d58a19d2fd064", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void close() throws IOException", "signatureAfterChange": " \t \t@Override \tpublic void close() throws IOException", "diff": ["+\t\t\t", "+\t\t\t// Need to check for source control on the resources encoding file", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=190268", "+\t\t\tIWorkspace ws = ResourcesPlugin.getWorkspace();", "+\t\t\t", "+\t\t\t// Yuck -- we need to hardcode the location of the prefs file for file encoding", "+\t\t\tIFile resourceFile = _file.getProject().getFile(\".settings/org.eclipse.core.resources.prefs\"); //$NON-NLS-1$", "+\t\t\tIStatus result = ws.validateEdit(new IFile[]{resourceFile}, IWorkspace.VALIDATE_PROMPT);", "+\t\t\tif (result.getSeverity() == IStatus.CANCEL) {", "+\t\t\t\t// User cancelled the checkout. Don't try to edit the encoding for the file", "+\t\t\t\treturn;", "+\t\t\t}"]}], "num": 53051}