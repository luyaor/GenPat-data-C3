{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f1d389a1998ba8b3b948dcc1140e2d4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db522cfe56331df74345d77af2691db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatchSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic PotentialMatch[] getPotentialMatches(IPackageFragmentRoot[] roots)", "signatureAfterChange": " public PotentialMatch[] getPotentialMatches(IPackageFragmentRoot[] roots)", "diff": ["-\t", "-\tpublic PotentialMatch[] getPotentialMatches(IPackageFragmentRoot[] roots) {", "-\t\tPotentialMatch[] result = new PotentialMatch[this.elementCount];", "-\t\tint index = 0;", "-\t\tfor (int i = 0, length = roots.length; i < length; i++) {", "-\t\t\tIPackageFragmentRoot root = roots[i];", "-\t\t\tchar[] path = root.getPath().toString().toCharArray();", "-\t\t\tObjectVector potentialMatches = (ObjectVector)this.rootsToPotentialMatches.get(path);", "-\t\t\tif (potentialMatches != null) {", "-\t\t\t\tpotentialMatches.copyInto(result, index);", "-\t\t\t\tindex += potentialMatches.size();", "-\t\t\t}", "-\t\t}", "-\t\tif (index < this.elementCount) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tresult, ", "-\t\t\t\t0, ", "-\t\t\t\tresult = new PotentialMatch[index],", "-\t\t\t\t0,", "-\t\t\t\tindex);", "-\t\t}", "-\t\treturn result;", "-\t}", "+}", "+public PotentialMatch[] getPotentialMatches(IPackageFragmentRoot[] roots) {", "+\tPotentialMatch[] result = new PotentialMatch[this.elementCount];", "+\tint index = 0;", "+\tfor (int i = 0, length = roots.length; i < length; i++) {", "+\t\tObjectVector potentialMatches = (ObjectVector) this.rootsToPotentialMatches.get(roots[i].getPath());", "+\t\tif (potentialMatches != null) {", "+\t\t\tpotentialMatches.copyInto(result, index);", "+\t\t\tindex += potentialMatches.size();", "+\t\t}", "+\t}", "+\tif (index < this.elementCount)", "+\t\tSystem.arraycopy(result, 0, result = new PotentialMatch[index], 0, index);", "+\treturn result;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be494272e76d5939224fdbdebcc0aee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatchSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void add(PotentialMatch potentialMatch)", "signatureAfterChange": "  public void add(PotentialMatch potentialMatch)", "diff": ["-\t", "-\tpublic void add(PotentialMatch potentialMatch) {", "-\t\tIPackageFragmentRoot root = potentialMatch.openable.getPackageFragmentRoot();", "-\t\tchar[] path = root.getPath().toString().toCharArray();", "-\t\tObjectVector potentialMatches = (ObjectVector)this.rootsToPotentialMatches.get(path);", "-\t\tif (potentialMatches == null) {", "-\t\t\tpotentialMatches = new ObjectVector();", "-\t\t\tthis.rootsToPotentialMatches.put(path, potentialMatches);", "-\t\t\tpotentialMatches.add(potentialMatch);", "-\t\t\tthis.elementCount++;", "-\t\t} else if (!potentialMatches.contains(potentialMatch)) {", "-\t\t\tpotentialMatches.add(potentialMatch);", "-\t\t\tthis.elementCount++;", "-\t\t}", "-\t}", "+", "+public void add(PotentialMatch potentialMatch) {", "+\tIPath path = potentialMatch.openable.getPackageFragmentRoot().getPath();", "+\tObjectVector potentialMatches = (ObjectVector) this.rootsToPotentialMatches.get(path);", "+\tif (potentialMatches != null) {", "+\t\tif (potentialMatches.contains(potentialMatch)) return;", "+\t} else {", "+\t\tthis.rootsToPotentialMatches.put(path, potentialMatches = new ObjectVector());", "+\t}", "+", "+\tpotentialMatches.add(potentialMatch);", "+\tthis.elementCount++;", "+}"]}], "num": 30504}