{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "318a1c1700ec4ab468f9ccae4064ab99", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374f3e92eb9d8aa9ce36fd13a1ca7431", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 114, "signatureBeforeChange": "  \tpublic Type convertType(TypeReference typeReference)", "signatureAfterChange": "  \tpublic Type convertType(TypeReference typeReference)", "diff": ["-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions = typeReference.getAnnotationsOnDimensions();", "-\t\t\t\ttype = this.ast.newArrayType(type, dimensions);", "-\t\t\t\ttype.setSourceRange(sourceStart, length);", "-\t\t\t\tArrayType subarrayType = (ArrayType) type;", "-\t\t\t\tint index = dimensions - 1;", "-\t\t\t\twhile (index > 0) {", "-\t\t\t\t\tif (annotationsOnDimensions != null && (annotations = annotationsOnDimensions[index]) != null) {", "-\t\t\t\t\t\tannotateType(subarrayType, annotations);", "-\t\t\t\t\t}", "-\t\t\t\t\tsubarrayType = (ArrayType) subarrayType.getComponentType();", "-\t\t\t\t\tint end = retrieveProperRightBracketPosition(index, sourceStart);", "-\t\t\t\t\tsubarrayType.setSourceRange(sourceStart, end - sourceStart + 1);", "-\t\t\t\t\tindex--;", "-\t\t\t\t}", "-\t\t\t\tif (annotationsOnDimensions != null && (annotations = annotationsOnDimensions[0]) != null) {", "-\t\t\t\t\tannotateType(subarrayType, annotations);", "-\t\t\t\t}", "+\t\t\t\ttype = convertToArray(type, sourceStart, length, dimensions, typeReference.getAnnotationsOnDimensions());", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions = typeReference.getAnnotationsOnDimensions();", "-\t\t\t\ttype = this.ast.newArrayType(type, dimensions);", "+\t\t\t\ttype = convertToArray(type, sourceStart, -1, dimensions, typeReference.getAnnotationsOnDimensions());", "-\t\t\t\t}", "-\t\t\t\tint end = retrieveEndOfDimensionsPosition(sourceStart+length, this.compilationUnitSourceLength);", "-\t\t\t\tif (end != -1) {", "-\t\t\t\t\ttype.setSourceRange(sourceStart, end - sourceStart + 1);", "-\t\t\t\t} else {", "-\t\t\t\t\ttype.setSourceRange(sourceStart, length);", "-\t\t\t\t}", "-\t\t\t\tArrayType subarrayType = (ArrayType) type;", "-\t\t\t\tint index = dimensions - 1;", "-\t\t\t\twhile (index > 0) {", "-\t\t\t\t\tif (annotationsOnDimensions != null  && (annotations = annotationsOnDimensions[index]) != null) {", "-\t\t\t\t\t\tannotateType(subarrayType, annotations);", "-\t\t\t\t\t}", "-\t\t\t\t\tsubarrayType = (ArrayType) subarrayType.getComponentType();", "-\t\t\t\t\tend = retrieveProperRightBracketPosition(index, sourceStart);", "-\t\t\t\t\tsubarrayType.setSourceRange(sourceStart, end - sourceStart + 1);", "-\t\t\t\t\tindex--;", "-\t\t\t\t}", "-\t\t\t\tif (annotationsOnDimensions != null  && (annotations = annotationsOnDimensions[0]) != null) {", "-\t\t\t\t\tannotateType(subarrayType, annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "416524e25d6ea0db970122f06a72b8a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "82286041004c3a1c8b03ed85a8b5ba0c85e39f08", "commitAfterChange": "c3894f02481a65e7c5a6b2e211e3716b20cd9dd8", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 101, "signatureBeforeChange": "  \tpublic Type convertType(TypeReference typeReference)", "signatureAfterChange": "  \tpublic Type convertType(TypeReference typeReference)", "diff": ["+", "+\t\torg.eclipse.jdt.internal.compiler.ast.Annotation[] annotations;", "+\t\t\t}", "+\t\t\tif (typeReference.annotations != null && (annotations = typeReference.annotations[0]) != null) {", "+\t\t\t\tannotateType(wildcardType, annotations);", "+\t\t\t\tif (typeReference.annotations != null && (annotations = typeReference.annotations[0]) != null) {", "+\t\t\t\t\tannotateType(primitiveType, annotations);", "+\t\t\t\t}", "+\t\t\t\t\t\tif (typeReference.annotations != null && (annotations = typeReference.annotations[0]) != null) {", "+\t\t\t\t\t\t\tannotateType(simpleType, annotations);", "+\t\t\t\t\t\t}", "+\t\t\t\tif (typeReference.annotations != null && (annotations = typeReference.annotations[0]) != null) {", "+\t\t\t\t\tannotateType(simpleType, annotations);", "+\t\t\t\t}", "+\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions = typeReference.getAnnotationsOnDimensions();", "+\t\t\t\t\tif (annotationsOnDimensions != null && (annotations = annotationsOnDimensions[index]) != null) {", "+\t\t\t\t\t\tannotateType(subarrayType, annotations);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (annotationsOnDimensions != null && (annotations = annotationsOnDimensions[0]) != null) {", "+\t\t\t\t\tannotateType(subarrayType, annotations);", "-\t\t\t\t\t\tName qualifiedName = this.setQualifiedNameNameAndSourceRanges(name, positions, typeReference);", "+\t\t\t\t\t\tName qualifiedName = this.setQualifiedNameNameAndSourceRanges(name, positions, typeReference, typeReference.annotations);", "+\t\t\t\t\t\tsimpleType.setFlags(simpleType.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t\t\tif (endingIndex == 0 && typeReference.annotations != null && (annotations = typeReference.annotations[0]) != null) {", "+\t\t\t\t\t\t\t\tannotateType(simpleType, annotations);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (typeReference.annotations != null && (annotations = typeReference.annotations[startingIndex]) != null) {", "+\t\t\t\t\t\t\t\t\tannotateType(qualifiedType, annotations);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\tfinal Name qualifiedName = this.setQualifiedNameNameAndSourceRanges(name, positions, typeReference);", "+\t\t\t\tfinal Name qualifiedName = this.setQualifiedNameNameAndSourceRanges(name, positions, typeReference, typeReference.annotations);", "+\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions = typeReference.getAnnotationsOnDimensions();", "+\t\t\t\t\tif (annotationsOnDimensions != null  && (annotations = annotationsOnDimensions[index]) != null) {", "+\t\t\t\t\t\tannotateType(subarrayType, annotations);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (annotationsOnDimensions != null  && (annotations = annotationsOnDimensions[0]) != null) {", "+\t\t\t\t\tannotateType(subarrayType, annotations);"]}], "num": 60771}