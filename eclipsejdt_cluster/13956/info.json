{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a84792cb379ef601834cc608a3e802bd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c2f0854080960515e3bc497b3d532fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "da5d5f5dcaeaf009feb139b87f69fd7bf09595b3", "commitAfterChange": "65f5152e309a08bb91b2b35f96e93b2fa93bae4f", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public ICompilerRequestor getBatchRequestor()", "signatureAfterChange": " public ICompilerRequestor getBatchRequestor()", "diff": ["-\treturn new ICompilerRequestor() {", "-\t\tint lineDelta = 0;", "-\t\tpublic void acceptResult(CompilationResult compilationResult) {", "-\t\t\tif (compilationResult.lineSeparatorPositions != null) {", "-\t\t\t\tint unitLineCount = compilationResult.lineSeparatorPositions.length;", "-\t\t\t\tthis.lineDelta += unitLineCount;", "-\t\t\t\tif (Main.this.showProgress && this.lineDelta > 2000) {", "-\t\t\t\t\t// in -log mode, dump a dot every 2000 lines compiled", "-\t\t\t\t\tMain.this.logger.logProgress();", "-\t\t\t\t\tthis.lineDelta = 0;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tMain.this.logger.startLoggingSource(compilationResult);", "-\t\t\tif (compilationResult.hasProblems() || compilationResult.hasTasks()) {", "-\t\t\t\tMain.this.logger.logProblems(compilationResult.getAllProblems(), compilationResult.compilationUnit.getContents(), Main.this);", "-\t\t\t}", "-\t\t\toutputClassFiles(compilationResult);", "-\t\t\tMain.this.logger.endLoggingSource();", "-\t\t}", "-\t};", "+    return new BatchCompilerRequestor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7946e2caccee0c3c6a8e3a8e0b4128a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "89b5443004d9ddbeb89e7694fbe0c5e6bd87d8cd", "commitAfterChange": "77977ef4d2299bee1b96b81654af812c0dcdac27", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tIProgressMonitor monitor)", "-\t\tthrows JavaModelException {", "+\t\tIProgressMonitor monitor) throws JavaModelException {", "-\t\t\t\t\ttrue); // generate code\t\t\t\t\t", "+\t\t\t\t\ttrue); // generate code", "+\t\t\tif (resolver.hasCompilationAborted) {", "+\t\t\t\t// the bindings could not be resolved due to missing types in name environment", "+\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=86541", "+\t\t\t\tCompilationUnitDeclaration unitDeclaration = parse(sourceUnit, nodeSearcher, options);", "+\t\t\t\tfinal int problemCount = unit.compilationResult.problemCount;", "+\t\t\t\tif (problemCount != 0) {", "+\t\t\t\t\tunitDeclaration.compilationResult.problems = new IProblem[problemCount];", "+\t\t\t\t\tSystem.arraycopy(unit.compilationResult.problems, 0, unitDeclaration.compilationResult.problems, 0, problemCount);", "+\t\t\t\t\tunitDeclaration.compilationResult.problemCount = problemCount;", "+\t\t\t\t}", "+\t\t\t\treturn unitDeclaration;", "+\t\t\t}"]}], "num": 13956}