{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "455ff2f2befed3280df8724030afd4b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "146154180352ee0ce58267671d73e51d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "d7b968f8074ad4e44b5a08309dcb414a4be941a4", "commitAfterChange": "b64275d5d6005c49a64e53460529203088ebb2bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["+\t\t\t}", "+\t\t}", "+\t\tfinal Object bracePositionForLambdaDeclarationOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_LAMBDA_BODY);", "+\t\tif (bracePositionForLambdaDeclarationOption != null) {", "+\t\t\ttry {", "+\t\t\t\tthis.brace_position_for_lambda_body = (String) bracePositionForLambdaDeclarationOption;", "+\t\t\t} catch(ClassCastException e) {", "+\t\t\t\tthis.brace_position_for_lambda_body = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tfinal Object insertSpaceAfterLambdaArrowOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_LAMBDA_ARROW);", "+\t\tif (insertSpaceAfterLambdaArrowOption != null) {", "+\t\t\tthis.insert_space_after_lambda_arrow = JavaCore.INSERT.equals(insertSpaceAfterLambdaArrowOption);", "+\t\t}", "+\t\t}", "+\t\tfinal Object insertSpaceBeforeLambdaArrowOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_LAMBDA_ARROW);", "+\t\tif (insertSpaceBeforeLambdaArrowOption != null) {", "+\t\t\tthis.insert_space_before_lambda_arrow = JavaCore.INSERT.equals(insertSpaceBeforeLambdaArrowOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71836121f322911636f9e2135e26e546", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "a0ba89052fec8c756eedff558bf8224c40301ffb", "commitAfterChange": "1868de2d5962c8f1b6e907bc19b7e062c361593d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object insertSpaceAfterAndInWildcardOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_AND_IN_WILDCARD);", "+\t\tfinal Object insertSpaceAfterAndInWildcardOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_AND_IN_TYPE_PARAMETER);", "-\t\t\tthis.insert_space_after_and_in_wilcard = JavaCore.INSERT.equals(insertSpaceAfterAndInWildcardOption);", "+\t\t\tthis.insert_space_after_and_in_type_parameter = JavaCore.INSERT.equals(insertSpaceAfterAndInWildcardOption);", "-\t\tfinal Object insertSpaceBeforeAndInWildcardOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_AND_IN_WILDCARD);", "+\t\tfinal Object insertSpaceBeforeAndInWildcardOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_AND_IN_TYPE_PARAMETER);", "-\t\t\tthis.insert_space_before_and_in_wilcard = JavaCore.INSERT.equals(insertSpaceBeforeAndInWildcardOption);", "+\t\t\tthis.insert_space_before_and_in_type_parameter = JavaCore.INSERT.equals(insertSpaceBeforeAndInWildcardOption);"]}], "num": 57734}