{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce423af8b8c56421ebd72861285e3f52", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833a42db3dfe9e8f459bc40039a57015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d182faf3c9939796c87e77e82df5eea1b2c4bb75", "commitAfterChange": "8ef2e19ed4ad065a565f0c2b4b16065aa807e82f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "signatureAfterChange": "      \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "diff": ["-\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operator) {", "-\t\t\t\tthis.scribe.space();", "+\t\t\tif (initialization instanceof ArrayInitializer) {", "+\t\t\t\tformatArrayInitializer((ArrayInitializer) initialization, scope, this.preferences.insert_space_after_assignment_operator || this.preferences.insert_space_before_opening_brace_in_array_initializer);", "+\t\t\t} else {", "+\t\t\t\tif (this.preferences.insert_space_after_assignment_operator) {", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t}", "+\t\t\t\tinitialization.traverse(this, scope);", "-\t\t\tinitialization.traverse(this, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b0742631af519bdfa70a1f898bb0c73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d182faf3c9939796c87e77e82df5eea1b2c4bb75", "commitAfterChange": "8ef2e19ed4ad065a565f0c2b4b16065aa807e82f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": " \t \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\t\tif (!(initialization instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operator) {", "-\t\t\t\tthis.scribe.space();", "+\t\t\tif (initialization instanceof ArrayInitializer) {", "+\t\t\t\tformatArrayInitializer((ArrayInitializer) initialization, scope, this.preferences.insert_space_after_assignment_operator || this.preferences.insert_space_before_opening_brace_in_array_initializer);", "+\t\t\t} else {", "+\t\t\t\tif (this.preferences.insert_space_after_assignment_operator) {", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t}", "+\t\t\t\tinitialization.traverse(this, scope);", "-\t\t\tinitialization.traverse(this, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc30d0b6284cebedb82feac73a0ae30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d182faf3c9939796c87e77e82df5eea1b2c4bb75", "commitAfterChange": "8ef2e19ed4ad065a565f0c2b4b16065aa807e82f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "diff": ["-\t\tif (!(assignment.expression instanceof ArrayInitializer) && this.preferences.insert_space_after_assignment_operator) {", "-\t\t\tthis.scribe.space();", "+\t\tif (assignment.expression instanceof ArrayInitializer) {", "+\t\t\tformatArrayInitializer((ArrayInitializer) assignment.expression, scope, this.preferences.insert_space_after_assignment_operator || this.preferences.insert_space_before_opening_brace_in_array_initializer);", "+\t\t} else {", "+\t\t\tif (this.preferences.insert_space_after_assignment_operator) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "+\t\t\tassignment.expression.traverse(this, scope);", "-\t\tassignment.expression.traverse(this, scope);"]}], "num": 36610}