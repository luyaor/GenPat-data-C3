{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab07b6a67d014d15d71e1763f679c325", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c6615d8cbdd9b99e6285405d74abdf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "60e138d2828b37f2615e0cced57acea3adb47644", "commitAfterChange": "3c340a30d5ee47c28968789969de0fd1189f5b30", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r protected boolean matchesType(char[][][] declaringTypes, ReferenceBinding receiverType)", "signatureAfterChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["-protected boolean matchesType(char[][][] declaringTypes, ReferenceBinding receiverType) {\r", "-\t\treturn true; // we were not able to compute the declaring types, default to true\r", "-\t\t\t\treturn true;\r", "-\t\treturn false;\r", "+ */\r", "+protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "+\tif (type == null) return INACCURATE_MATCH;\r", "+\tif (this.matchesType(\r", "+\t\t\tsimpleNamePattern, \r", "+\t\t\tqualificationPattern, \r", "+\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "+\t\t\t\ttype.qualifiedSourceName() : \r", "+\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.'))) {\r", "+\t\treturn ACCURATE_MATCH;\r", "+\t} else {\r", "+\t\treturn IMPOSSIBLE_MATCH;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b0c861d540da5614e578cbd7abccc96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r protected boolean matchesType(char[][][] declaringTypes, ReferenceBinding receiverType)", "signatureAfterChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["-protected boolean matchesType(char[][][] declaringTypes, ReferenceBinding receiverType) {\r", "-\t\treturn true; // we were not able to compute the declaring types, default to true\r", "-\t\t\t\treturn true;\r", "-\t\treturn false;\r", "+ */\r", "+protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "+\tif (type == null) return INACCURATE_MATCH;\r", "+\tif (this.matchesType(\r", "+\t\t\tsimpleNamePattern, \r", "+\t\t\tqualificationPattern, \r", "+\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "+\t\t\t\ttype.qualifiedSourceName() : \r", "+\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.'))) {\r", "+\t\treturn ACCURATE_MATCH;\r", "+\t} else {\r", "+\t\treturn IMPOSSIBLE_MATCH;\r"]}], "num": 54462}