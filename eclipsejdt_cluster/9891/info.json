{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9285704230f65fdc297ed107e1dde095", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b6c0d2812f46e7dbc13f8ffbf092bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public void test100()", "signatureAfterChange": " public void test100()", "diff": ["+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString = ", "+\t\t\"public class Bug {\\n\" + ", "+\t\t\"  static boolean bold = false;\\n\" + ", "+\t\t\"  <clinit>() {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  public Bug() {\\n\" + ", "+\t\t\"    super();\\n\" + \t\t", "+\t\t\"  }\\n\" + ", "+\t\t\"  public static void main(String[] arguments) {\\n\" + ", "+\t\t\"    Shell shell = new Shell((((SWT.MENU | SWT.RESIZE) | SWT.TITLE) | SWT.H_SCROLL));\\n\" + ", "+\t\t\"    StyledText text = new StyledText(shell, SWT.WRAP);\\n\" + ", "+\t\t\"    shell.addListener(SWT.Resize, new Listener() {\\n\" + ", "+\t\t\"  () {\\n\" + ", "+\t\t\"    super();\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  public void handleEvent(Event e) {\\n\" + ", "+\t\t\"    text.setBounds(shell.getClientArea());\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"});\\n\" + ", "+\t\t\"    shell.addListener(SWT.KeyDown, new Listener() {\\n\" + ", "+\t\t\"  public void handleEvent(Event e) {\\n\" + ", "+\t\t\"    bold = (! bold);\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"});\\n\" + ", "+\t\t\"    text.addLineStyleListener(new LineStyleListener() {\\n\" + ", "+\t\t\"  () {\\n\" + ", "+\t\t\"    super();\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  public void lineGetStyle(LineStyleEvent event) {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"});\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\";", "+\t", "-\t\texpectedFullUnitToString,\t\t", "-\t\texpectedCompletionDietUnitToString,", "-\t\ttestName);", "+\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,\t\t", "+\t\texpectedFullUnitToString,", "+\t\texpectedCompletionDietUnitToString, testName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "922edc70d033bfa10b3e8d40cfe18c0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "c643d728d2e9e02e64e38383ffd6f16606630706", "commitAfterChange": "63388558ea06565be17a1534cd08a874e27b0880", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void test002() throws CoreException", "signatureAfterChange": " public void test002() throws CoreException", "diff": ["-\t\tsortUnit(this.getCompilationUnit(\"/P/src/p/X.java\"));", "+\t\tString expectedSource = \"package p;\\n\" +\r\t\t\t\"public class X {\\n\" +\r\t\t\t\"\t\\n\" +\r\t\t\t\"\tclass D {\\n\" +\r\t\t\t\"\t\tString toString() {\\n\" +\r\t\t\t\"\t\t\treturn \\\"HELLO\\\";\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\tObject a1 = new Object() { }, o1 = null;\\n\" +\r\t\t\t\"\tint i, j, k;\\n\" +\r\t\t\t\"\tObject bar() {\\n\" +\r\t\t\t\"\t\tSystem.out.println();\\n\" +\r\t\t\t\"\t\tObject o = new Object() {    };\\n\" +\r\t\t\t\"\t\tSystem.out.println(o);\\n\" +\r\t\t\t\"\t\tclass C {\\n\" +\r\t\t\t\"\t\t\tvoid bar4() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar5() {}\\n\" +\r\t\t\t\"\t\t\tvoid bar6() {}\\n\" +\r\t\t\t\"\t\t}\\n\" +\r\t\t\t\"\t\treturn new C();\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"\tObject bar3() {\\n\" +\r\t\t\t\"\t\tSystem.out.println();\\n\" +\r\t\t\t\"\t\tObject o = new Object() {        };\\n\" +\r\t\t\t\"\t\tSystem.out.println(o);\\n\" +\r\t\t\t\"\t\treturn o;\\n\" +\r\t\t\t\"\t}\\n\" +\r\t\t\t\"}\";", "+\t\tsortUnit(this.getCompilationUnit(\"/P/src/p/X.java\"), expectedSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b7afb15992ebee3ce03316cf3724b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  public void test99()", "signatureAfterChange": "  public void test99()", "diff": ["+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString = ", "+\t\t\"class X {\\n\" + ", "+\t\t\"  {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  X() {\\n\" + ", "+\t\t\"    super();\\n\" + \t\t", "+\t\t\"  }\\n\" + ", "+\t\t\"  public void addThreadFilter(IJavaThread thread) {\\n\" + ", "+\t\t\"    restricts breakpoint;\\n\" + ", "+\t\t\"    given thread;\\n\" + ", "+\t\t\"    any other;\\n\" + ", "+\t\t\"    specified = ;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  public void removeThreadFilter(IJavaThread thread) {\\n\" + ", "+\t\t\"    removes the;\\n\" + ", "+\t\t\"    thread restriction;\\n\" + ", "+\t\t\"    will need = (re - create);\\n\" + ", "+\t\t\"    request as;\\n\" + ", "+\t\t\"    does not;\\n\" + ", "+\t\t\"    the removal;\\n\" + ", "+\t\t\"    thread = ;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  public IJavaThread[] getThreadFilters() {\\n\" + ", "+\t\t\"    return the;\\n\" + ", "+\t\t\"    of threads;\\n\" + ", "+\t\t\"    breakpoint is;\\n\" + ", "+\t\t\"    restricted to;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\";", "+\t\t", "-\t\texpectedFullUnitToString,\t\t", "-\t\texpectedCompletionDietUnitToString,", "-\t\ttestName);", "+\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,\t\t", "+\t\texpectedFullUnitToString,", "+\t\texpectedCompletionDietUnitToString, testName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d833930c007abd1ba20e74493f57bf52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  public void test75()", "signatureAfterChange": "  public void test75()", "diff": ["+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString =", "+\t\t\"package ZKentTest;\\n\" + ", "+\t\t\"import java.awt.color.*;\\n\" + ", "+\t\t\"public class A {\\n\" + ", "+\t\t\"  int[] ii;\\n\" + ", "+\t\t\"  public A() {\\n\" + ", "+\t\t\"    super();\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  A foo(int i) {\\n\" + ", "+\t\t\"    return this;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  int bar() {\\n\" + ", "+\t\t\"    class Local {\\n\" + ", "+\t\t\"      Local() {\\n\" + ", "+\t\t\"        super();\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"      int hello() {\\n\" + ", "+\t\t\"        fo = ;\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"      int world() {\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"      void foo() {\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"    }\\n\" + ", "+\t\t\"    int hello;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\";", "+\t\t", "-\t\texpectedFullUnitToString,\t\t", "-\t\texpectedCompletionDietUnitToString,", "-\t\ttestName);", "+\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,\t\t", "+\t\texpectedFullUnitToString,", "+\t\texpectedCompletionDietUnitToString, testName);"]}], "num": 9891}