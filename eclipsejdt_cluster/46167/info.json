{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5689f46f425781da26cc770e2c6bccb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3507316f3d24c7614ae4c03fcb0b72d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testAddImports_bug24804_5() throws Exception", "signatureAfterChange": " \tpublic void testImportGroupMatchingQualifiedName() throws Exception", "diff": ["+\t */", "+\tpublic void testImportGroupMatchingQualifiedName() throws Exception {", "+\t\tICompilationUnit cu = createCompilationUnit(\"pack1\", \"C\");", "+", "+\t\tString[] order = new String[] { \"#android.R.doFoo\", \"android.R\", \"java\", \"android\" };", "+", "+\t\tImportRewrite imports = newImportsRewrite(cu, order, 999, 999, false);", "+\t\timports.setUseContextToFilterImplicitImports(true);", "+\t\timports.addImport(\"android.R\");", "+\t\timports.addImport(\"java.util.List\");", "+\t\timports.addImport(\"android.Foo\");", "+\t\timports.addStaticImport(\"android.R\", \"doFoo\", false);", "+", "+\t\tapply(imports);", "+", "+\t\tStringBuffer expected = new StringBuffer();", "+\t\texpected.append(\"package pack1;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import static android.R.doFoo;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import android.R;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import java.util.List;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import android.Foo;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"public class C {}\");", "+\t\tassertEqualString(cu.getSource(), expected.toString());", "+\t}", "-", "-\tpublic void testAddImports_bug24804_5() throws Exception {", "-", "-\t\tIPackageFragment pack1= this.sourceFolder.createPackageFragment(\"pack1\", false, null);", "-\t\tStringBuffer buf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.lang.AssertionError; //test\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"import java.lang.System;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tICompilationUnit cu= pack1.createCompilationUnit(\"C.java\", buf.toString(), false, null);", "-", "-\t\tString[] order= new String[] { \"java\" };", "-", "-\t\tImportRewrite imports= newImportsRewrite(cu, order, 1, 1, false);", "-\t\timports.addImport(\"java.io.Exception\");", "-", "-\t\tapply(imports);", "-", "-\t\tbuf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.io.*;\\n\");", "-\t\tbuf.append(\"//test\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tassertEqualString(cu.getSource(), buf.toString());", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b52f460633dc232c67b2d08abf187d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/StandardVMLauncher.java", "commitBeforeChange": "37843798fe45653980f2b49b68c9aaf82a2a678a", "commitAfterChange": "113049ad9ea4e67ef301103493e4ca8a20365c97", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public String[] getCommandLine()", "signatureAfterChange": " public String[] getCommandLine()", "diff": ["-\tif (System.getProperty(\"java.vm.version\").startsWith(\"1.4.2\")) {", "-\t\tcommandLine.addElement(", "-\t\t\tthis.vmPath + ", "-\t\t\t(this.vmPath.endsWith(File.separator) ? \"\" : File.separator) + ", "-\t\t\t\"bin\" + ", "-\t\t\tFile.separator + ", "-\t\t\t\"java\");", "-\t} else {", "-\t\tString vmLocation = this.vmPath + ", "-\t\t\t(this.vmPath.endsWith(File.separator) ? \"\" : File.separator) + ", "-\t\t\t\"bin\" + ", "-\t\t\tFile.separator + ", "-\t\t\t\"javaw\";", "-\t\tfinal String osName = System.getProperty(\"os.name\");", "-\t\tif (osName.indexOf(\"win32\") != -1) {", "-\t\t\tvmLocation += \".exe\";", "-\t\t}", "-\t\tif (!new File(vmLocation).exists()) {", "-\t\t\tvmLocation = ", "-\t\t\t\tthis.vmPath + ", "-\t\t\t\t(this.vmPath.endsWith(File.separator) ? \"\" : File.separator) + ", "-\t\t\t\t\"bin\" + ", "-\t\t\t\tFile.separator + ", "-\t\t\t\t\"java\";", "-\t\t}", "-\t\tcommandLine.addElement(vmLocation);", "-\t}", "+\tStringBuffer vmLocation = new StringBuffer(this.vmPath);", "+\tvmLocation", "+\t\t.append(this.vmPath.endsWith(File.separator) ? \"\" : File.separator)", "+\t\t.append(\"bin\")", "+\t\t.append(File.separator)", "+\t\t.append(\"java\");", "+\tcommandLine.addElement(String.valueOf(vmLocation));", "-\tcommandLine.addElement(\"-Xbootclasspath:\" + buildBootClassPath());", "+\tcommandLine.addElement(\"-Xbootclasspath/a:\" + buildBootClassPath());"]}], "num": 46167}