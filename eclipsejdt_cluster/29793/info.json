{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9a8ef40b145cb365e400a1a02ec09c6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd34be42e6eaa5c92316f29094111b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "8e33f97ee39e8610c3480bf6c8dc09b52195779b", "commitAfterChange": "fe0ff13a85af207787c3e61a795f2b7238947d6c", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": " protected void pushIdentifier()", "signatureAfterChange": " protected void pushIdentifier()", "diff": ["-\t};", "+\t}", "-\t};", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d9bfd5ef4cbca8faf7e53f4376ed07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "d960babe998acb7fa00822d4abe32ae4e44701ca", "commitAfterChange": "b3259a85709d3572dbc66af8429669a5ffb6c93e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public String toString(int tab)", "signatureAfterChange": "\r \r \tpublic String toString(int tab)", "diff": ["-}\r", "-public String toString(int tab){\r", "-\t/* slow code */\r", "-\tString s = tabString(tab);\r", "-\tif (qualification != null) \r", "-\t\ts = s + qualification.toStringExpression() + \".\" ; //$NON-NLS-1$\r", "-\tif (accessMode == This){\r", "-\t\ts = s + \"this(\"; //$NON-NLS-1$\r", "-\t} else {\r", "-\t\ts = s + \"super(\"; //$NON-NLS-1$\r", "-\tif (arguments != null)\r", "-\t\tfor (int i=0 ; i < arguments.length ; i++)\r", "-\t\t{\ts = s + arguments[i].toStringExpression();\r", "-\t\t\tif (i != arguments.length-1) s = s + \", \";};; //$NON-NLS-1$\r", "-\ts = s+\")\" ; //$NON-NLS-1$\r", "-\treturn s;}\r", "+\r", "+\tpublic String toString(int tab) {\r", "+\r", "+\t\tString s = tabString(tab);\r", "+\t\tif (qualification != null)\r", "+\t\t\ts = s + qualification.toStringExpression() + \".\"; //$NON-NLS-1$\r", "+\t\tif (accessMode == This) {\r", "+\t\t\ts = s + \"this(\"; //$NON-NLS-1$\r", "+\t\t} else {\r", "+\t\t\ts = s + \"super(\"; //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tif (arguments != null)\r", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {\r", "+\t\t\t\ts = s + arguments[i].toStringExpression();\r", "+\t\t\t\tif (i != arguments.length - 1)\r", "+\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\ts = s + \")\"; //$NON-NLS-1$\r", "+\t\treturn s;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af429a65f778fb0d5c85f3604ee828bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "816b4c1b9cac7ff8ff32a98394f63017de79e76e", "commitAfterChange": "c9c7ee224df6017fe069441025ead9832fa01f51", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public String toStringExpression()", "signatureAfterChange": "\r \r \tpublic String toStringExpression()", "diff": ["-}\r", "-public String toStringExpression() {\r", "-\t/* slow code */\r", "-\r", "-\tString s = \"new \" + type.toString(0); //$NON-NLS-1$\r", "-\tif (arguments == null)\r", "-\t\ts = s + \"()\" ; //$NON-NLS-1$\r", "-\telse\r", "-\t{\ts = s + \"(\"; //$NON-NLS-1$\r", "-\t\tfor (int i = 0 ; i < arguments.length ; i++)\r", "-\t\t{\ts = s + arguments[i].toStringExpression();\r", "-\t\t\tif (i == (arguments.length-1))\r", "-\t\t\t\ts = s + \")\" ; //$NON-NLS-1$\r", "-\t\t\telse\r", "-\t\t\t\ts = s + \", \"; };}; //$NON-NLS-1$\r", "-\treturn s ;}\r", "+\r", "+\tpublic String toStringExpression() {\r", "+\r", "+\t\tString s = \"new \" + type.toString(0); //$NON-NLS-1$\r", "+\t\tif (arguments == null)\r", "+\t\t\ts = s + \"()\"; //$NON-NLS-1$\r", "+\t\telse {\r", "+\t\t\ts = s + \"(\"; //$NON-NLS-1$\r", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {\r", "+\t\t\t\ts = s + arguments[i].toStringExpression();\r", "+\t\t\t\tif (i == (arguments.length - 1))\r", "+\t\t\t\t\ts = s + \")\"; //$NON-NLS-1$\r", "+\t\t\t\telse\r", "+\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn s;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f17d1227816851723b3a8a67aa1fac7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "8e33f97ee39e8610c3480bf6c8dc09b52195779b", "commitAfterChange": "fe0ff13a85af207787c3e61a795f2b7238947d6c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\t\t\t\t\t\t\tlength += expressionLengthStack[expressionLengthPtr-1];;\t", "+\t\t\t\t\t\t\tlength += expressionLengthStack[expressionLengthPtr-1];", "-\t\t\t\t\t};", "+\t\t\t\t\t}"]}], "num": 29793}