{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40058d2ee876fe3830d23858c1183875", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61651d16fff9c8f0e997e5941a933f5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "commitAfterChange": "c3fe3a5d67fbf0c540d6fc63f233f6806516af9c", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void test044()", "signatureAfterChange": " \tpublic void test044()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t\\n\" + ", "-\t\t\t\t\"\tfinal void foo() {}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"class XS extends X {\\n\" + ", "-\t\t\t\t\"\t@Override\\n\" + ", "-\t\t\t\t\"\tvoid foo() {}\\n\" + ", "-\t\t\t\t\"}\\n\"", "+\t\t\t\t\"public class X { final void foo() {} }\\n\" + ", "+\t\t\t\t\"class XS extends X { @Override void foo() {} }\\n\"", "-\t\t\t\"1. ERROR in X.java (at line 7)\\r\\n\" + ", "-\t\t\t\"\tvoid foo() {}\\r\\n\" + ", "-\t\t\t\"\t     ^^^^^\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass XS extends X { @Override void foo() {} }\\n\" + ", "+\t\t\t\"\t                                    ^^^^^\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\"", "+\t\t);", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X { public void foo() {} }\\n\" + ", "+\t\t\t\t\"class XS extends X { @Override void foo() {} }\\n\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass XS extends X { @Override void foo() {} }\\n\" + ", "+\t\t\t\"\t                                    ^^^^^\\n\" + ", "+\t\t\t\"Cannot reduce the visibility of the inherited method from X\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t);", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X { void foo() {} }\\n\" + ", "+\t\t\t\t\"class XS extends X { @Override void foo() throws ClassNotFoundException {} }\\n\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass XS extends X { @Override void foo() throws ClassNotFoundException {} }\\n\" + ", "+\t\t\t\"\t                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Exception ClassNotFoundException is not compatible with throws clause in X.foo()\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t);", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X { void foo() {} }\\n\" + ", "+\t\t\t\t\"class XS extends X { @Override int foo() {} }\\n\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass XS extends X { @Override int foo() {} }\\n\" + ", "+\t\t\t\"\t                                   ^^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with X.foo()\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass XS extends X { @Override int foo() {} }\\n\" + ", "+\t\t\t\"\t                                   ^^^^^\\n\" + ", "+\t\t\t\"The method foo() of type XS must override a superclass method\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7bb83d55cb64d017bb8b6afa0d02900", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "66655f5e1f98e14cb994324b511a6633d4950147", "commitAfterChange": "05ac7a532e5c7862447e6e0fc351f30875c4dd96", "methodNumberBeforeChange": 923, "methodNumberAfterChange": 923, "signatureBeforeChange": " public void _test0917()", "signatureAfterChange": " public void test0917()", "diff": ["-public void _test0917() {", "+public void test0917() {", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"  class X1<T> { \\n\" + ", "-\t\t\t\"      public static Class clazz = T.getClass();\\n\" + ", "-\t\t\t\"  }\\n\" + ", "-\t\t\t\"  class X2<T> { }\\n\" + ", "-\t\t\t\"  class X3<T> extends X2<T.clazz> { }\\n\" + ", "-\t\t\t\"}\\n\",", "+\t\t\t\"public class X<T extends A> extends X2<T.M> { }\\n\" +", "+\t\t\t\"class X2<T> { }\\n\" +", "+\t\t\t\"class A { static class M {} }\"", "-\t\t\"ERR\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\tpublic class X<T extends A> extends X2<T.M> { }\\n\" + ", "+\t\t\"\t                                       ^^^\\n\" + ", "+\t\t\"Illegal qualified access from the type parameter T\\n\" + ", "+\t\t\"----------\\n\"", "+\t\t// cannot select from a type variable", "+\t);", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X<T> extends X2<T.clazz> { }\\n\" +", "+\t\t\t\"class X2<T> { }\\n\"", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\tpublic class X<T> extends X2<T.clazz> { }\\n\" + ", "+\t\t\"\t                             ^^^^^^^\\n\" + ", "+\t\t\"Illegal qualified access from the type parameter T\\n\" + ", "+\t\t\"----------\\n\"", "+\t\t// cannot select from a type variable", "+\t);", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X<T> { Class<T> c = T.class; }\"", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\tpublic class X<T> { Class<T> c = T.class; }\\n\" + ", "+\t\t\"\t                                 ^^^^^^^\\n\" + ", "+\t\t\"Illegal class literal for the type parameter T\\n\" + ", "+\t\t\"----------\\n\"", "+\t\t// cannot select from a type variable", "+\t);", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X<T> extends X2<T.class> { }\\n\" +", "+\t\t\t\"class X2<T> { }\\n\"", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\tpublic class X<T> extends X2<T.class> { }\\n\" + ", "+\t\t\"\t                               ^^^^^\\n\" + ", "+\t\t\"Syntax error on token \\\"class\\\", Identifier expected\\n\" + ", "+\t\t\"----------\\n\"", "+\t\t// cannot select from a type variable", "+\t);"]}], "num": 72445}