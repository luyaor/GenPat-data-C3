{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e9ccc27cf547770d3ccd7c56dde0e54", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5ffeaffbb302bb341d3fb593fe2881", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected void updateMatch(TypeBinding[] argumentsBinding, MatchLocator locator, char[][] patternArguments, boolean hasTypeParameters)", "signatureAfterChange": " protected void updateMatch(TypeBinding[] argumentsBinding, MatchLocator locator, char[][] patternArguments, boolean hasTypeParameters)", "diff": ["-\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "+\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && TypeBinding.equalsEquals(wildcardBinding.bound, patternBinding)) {", "-\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "+\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && TypeBinding.equalsEquals(wildcardBinding.bound, patternBinding)) {", "-\t\t\t\t\t} else if (argumentBinding == patternBinding)", "+\t\t\t\t\t} else if (TypeBinding.equalsEquals(argumentBinding, patternBinding))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd47ed2acaf991f021019c8dc7f146c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\t\t\t\t\tif (refs[r].resolvedType == toCheck) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(refs[r].resolvedType, toCheck)) {", "-\t\t\t\t\t\t\tif (refs[r].resolvedType == inheritedInterface) {", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(refs[r].resolvedType, inheritedInterface)) {", "-\t\t\t\t\t\t\tif (refs[r].resolvedType == inheritedInterface) {", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(refs[r].resolvedType, inheritedInterface)) {"]}], "num": 28974}