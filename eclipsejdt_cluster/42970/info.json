{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57bf9011fbb73296f23449c50d3bd3f0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "652379f550afb64ece30e03d3714f660", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void manageSyntheticReadAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticReadAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif (delegateThis != null) {", "-\t\tif (binding.declaringClass != this.delegateThis.type", "-\t\t\t&& binding.declaringClass != null", "-\t\t\t&& binding.constant == NotAConstant", "+\tif (this.delegateThis != null) {", "+\t\tif (this.binding.declaringClass != this.delegateThis.type", "+\t\t\t&& this.binding.declaringClass != null", "+\t\t\t&& this.binding.constant == NotAConstant", "-\t\t\t\t\t&& !binding.isStatic()", "-\t\t\t\t\t&& binding.declaringClass.id != T_Object) // no change for Object fields (if there was any)", "-\t\t\t\t|| !binding.declaringClass.canBeSeenBy(currentScope))){", "-\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(binding, (ReferenceBinding)this.delegateThis.type);", "+\t\t\t\t\t&& !this.binding.isStatic()", "+\t\t\t\t\t&& this.binding.declaringClass.id != T_Object) // no change for Object fields (if there was any)", "+\t\t\t\t|| !this.binding.declaringClass.canBeSeenBy(currentScope))){", "+\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(this.binding, (ReferenceBinding)this.delegateThis.type);", "-\t} else if (binding.declaringClass != this.receiverType", "+\t} else if (this.binding.declaringClass != this.receiverType", "-\t\t&& binding.declaringClass != null // array.length", "-\t\t&& binding.constant == NotAConstant", "+\t\t&& this.binding.declaringClass != null // array.length", "+\t\t&& this.binding.constant == NotAConstant", "-\t\t\t\t&& binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)", "-\t\t\t|| !binding.declaringClass.canBeSeenBy(currentScope))){", "-\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(binding, (ReferenceBinding) this.receiverType);", "+\t\t\t\t&& this.binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)", "+\t\t\t|| !this.binding.declaringClass.canBeSeenBy(currentScope))){", "+\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(this.binding, (ReferenceBinding) this.receiverType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a569fdea0d3b40824f46a90a0e897475", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticWriteAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticWriteAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif (delegateThis != null) {", "-\t\tif (binding.declaringClass != this.delegateThis.type", "-\t\t\t&& binding.declaringClass != null", "-\t\t\t&& binding.constant == NotAConstant", "+\tif (this.delegateThis != null) {", "+\t\tif (this.binding.declaringClass != this.delegateThis.type", "+\t\t\t&& this.binding.declaringClass != null", "+\t\t\t&& this.binding.constant == NotAConstant", "-\t\t\t\t\t&& !binding.isStatic()", "-\t\t\t\t\t&& binding.declaringClass.id != T_Object) // no change for Object fields (if there was any)", "-\t\t\t\t|| !binding.declaringClass.canBeSeenBy(currentScope))){", "-\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(binding, (ReferenceBinding)this.delegateThis.type);", "+\t\t\t\t\t&& !this.binding.isStatic()", "+\t\t\t\t\t&& this.binding.declaringClass.id != T_Object) // no change for Object fields (if there was any)", "+\t\t\t\t|| !this.binding.declaringClass.canBeSeenBy(currentScope))){", "+\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(this.binding, (ReferenceBinding)this.delegateThis.type);", "-\t} else if (binding.declaringClass != this.receiverType", "+\t} else if (this.binding.declaringClass != this.receiverType", "-\t\t&& binding.declaringClass != null // array.length", "-\t\t&& binding.constant == NotAConstant", "+\t\t&& this.binding.declaringClass != null // array.length", "+\t\t&& this.binding.constant == NotAConstant", "-\t\t\t\t&& binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)", "-\t\t\t|| !binding.declaringClass.canBeSeenBy(currentScope))){", "-\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(binding, (ReferenceBinding) this.receiverType);", "+\t\t\t\t&& this.binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)", "+\t\t\t|| !this.binding.declaringClass.canBeSeenBy(currentScope))){", "+\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedFieldBinding(this.binding, (ReferenceBinding) this.receiverType);"]}], "num": 42970}