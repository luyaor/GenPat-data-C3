{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3fb7e748dc033c4e1976bd769e1071f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be98dabc4d203fc2775c616183b599f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "3531eaec8c87d2f6d3b0a52648ee1d63b2a2b44c", "commitAfterChange": "808d70d92e6d6e6f5c641ec34cc060e94b85a72e", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 185, "signatureBeforeChange": " public void testBug100695a() throws CoreException", "signatureAfterChange": " public void testBug100695a() throws CoreException", "diff": ["-\tassertNotNull(\"There should be working copies!\", workingCopies);", "-\tassertEquals(\"Invalid number of working copies kept between tests!\", 1, workingCopies.length);", "+\tworkingCopies = new ICompilationUnit[1];", "+\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b100695/Test.java\",", "+\t\t\"package b100695;\\n\" + ", "+\t\t\"public class Test {\\n\" + ", "+\t\t\"\tClass<Class>[] foo;\\n\" + ", "+\t\t\"\tClass<Class>[] bar = foo;\\n\" + ", "+\t\t\"\tTest() {\\n\" + ", "+\t\t\"\t\tfoo = null;\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ade3e59c63d1c0f410a7a489070bfbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "3531eaec8c87d2f6d3b0a52648ee1d63b2a2b44c", "commitAfterChange": "808d70d92e6d6e6f5c641ec34cc060e94b85a72e", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void testBug96763b() throws CoreException", "signatureAfterChange": " public void testBug96763b() throws CoreException", "diff": ["-\tassertNotNull(\"There should be working copies!\", workingCopies);", "-\tassertEquals(\"Invalid number of working copies kept between tests!\", 1, workingCopies.length);", "+\tworkingCopies = new ICompilationUnit[1];", "+\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b96763/Test.java\",", "+\t\t\"package b96763;\\n\" + ", "+\t\t\"class Test<T> {\\n\" + ", "+\t\t\"    public void first(Exception num) {}\\n\" + ", "+\t\t\"    public void second(T t) {}\\n\" + ", "+\t\t\"}\\n\" + ", "+\t\t\"class Sub extends Test<Exception> {\\n\" + ", "+\t\t\"    public void first(Exception num) {}\\n\" + ", "+\t\t\"    public void second(Exception t) {}\\n\" + ", "+\t\t\"}\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826e931c7d483808c43f74c56a10b4e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "3531eaec8c87d2f6d3b0a52648ee1d63b2a2b44c", "commitAfterChange": "808d70d92e6d6e6f5c641ec34cc060e94b85a72e", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void testBug81084string() throws CoreException, JavaModelException", "signatureAfterChange": " public void testBug81084string() throws CoreException, JavaModelException", "diff": ["-\tassertNotNull(\"There should be working copies!\", workingCopies);", "-\tassertEquals(\"Invalid number of working copies kept between tests!\", 1, workingCopies.length);", "+\tworkingCopies = new ICompilationUnit[1];", "+\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b81084a/Test.java\",", "+\t\t\"package b81084a;\\n\" + ", "+\t\t\"class List<E> {}\\n\" + ", "+\t\t\"public class Test {\\n\" + ", "+\t\t\"\tclass Element{}\\n\" + ", "+\t\t\"\tstatic class Inner {\\n\" + ", "+\t\t\"\t\tprivate final List<Element> fList1;\\n\" + ", "+\t\t\"\t\tprivate final List<Test.Element> fList2;\\n\" + ", "+\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" + ", "+\t\t\"\t\t\tfList1 = list;\\n\" + ", "+\t\t\"\t\t\tfList2 = list;\\n\" + ", "+\t\t\"\t\t}\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871db42093fd4243f5e134e4d9b24fb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "3531eaec8c87d2f6d3b0a52648ee1d63b2a2b44c", "commitAfterChange": "808d70d92e6d6e6f5c641ec34cc060e94b85a72e", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void testBug79378b() throws CoreException", "signatureAfterChange": " public void testBug79378b() throws CoreException", "diff": ["-\tassertNotNull(\"There should be working copies!\", workingCopies);", "-\tassertEquals(\"Invalid number of working copies kept between tests!\", 1, workingCopies.length);", "+\tworkingCopies = new ICompilationUnit[1];", "+\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b79378/A.java\",", "+\t\t\"package b79378;\\n\" + ", "+\t\t\"public class Test {\\n\" + ", "+\t\t\"\tvoid foo79378(String s, RuntimeException[] exceptions) {}\\n\" + ", "+\t\t\"\tvoid foo79378(RuntimeException[] exceptions) {}\\n\" + ", "+\t\t\"\tvoid call() {\\n\" + ", "+\t\t\"\t\tString s= null; \\n\" + ", "+\t\t\"\t\tException[] exceptions= null;\\n\" + ", "+\t\t\"\t\tfoo79378(s, exceptions);\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb7f0ff6341ec9b9e955af087278e972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "3531eaec8c87d2f6d3b0a52648ee1d63b2a2b44c", "commitAfterChange": "808d70d92e6d6e6f5c641ec34cc060e94b85a72e", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void testBug83285b() throws CoreException", "signatureAfterChange": " \tpublic void testBug83285b() throws CoreException", "diff": ["-\t\tassertNotNull(\"Problem in tests processing\", workingCopies);", "-\t\tassertEquals(\"Problem in tests processing\", 1, workingCopies.length);", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearch/src/b83285/A.java\",", "+\t\t\t\"package b83285;\\n\" + ", "+\t\t\t\"class A {\\n\" + ", "+\t\t\t\"\tA(char c) {}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class B {\\n\" + ", "+\t\t\t\"\tB(Exception ex) {}\\n\" + ", "+\t\t\t\"\tvoid foo() {} \\n\" + ", "+\t\t\t\"\tclass C { \\n\" + ", "+\t\t\t\"\t    /**\\n\" + ", "+\t\t\t\"\t     * Link {@link #B(Exception)} OK\\n\" + ", "+\t\t\t\"\t     * Link {@link #C(String)} OK\\n\" + ", "+\t\t\t\"\t     * Link {@link #foo()} OK\\n\" + ", "+\t\t\t\"\t     * Link {@link #bar()} OK\\n\" + ", "+\t\t\t\"\t     */\\n\" + ", "+\t\t\t\"\t    public C(String str) {}\\n\" + ", "+\t\t\t\"\t\tvoid bar() {}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\"", "+\t\t);"]}], "num": 44910}