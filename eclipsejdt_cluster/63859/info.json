{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3845c864d4ca677c4baf420f46b74a0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "316b56b7b92cd69230bbe1fe31ac5dfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate static boolean resolveSubstituteConstraints(Scope scope, TypeVariableBinding[] typeVariables, InferenceContext inferenceContext, boolean considerEXTENDSConstraints)", "signatureAfterChange": "  \tprivate static boolean resolveSubstituteConstraints(Scope scope, TypeVariableBinding[] typeVariables, InferenceContext inferenceContext, boolean considerEXTENDSConstraints)", "diff": ["-\t\t\t\t\tif (glb != null) mostSpecificSubstitute = glb[0]; // TODO (philippe) need to improve", "-\t\t\t\t\t\t//TypeBinding mostSpecificSubstitute = scope.greaterLowerBound(bounds);", "-\t\t\t\t\t\tif (mostSpecificSubstitute != null) {", "-\t\t\t\t\t\t\tsubstitutes[i] = mostSpecificSubstitute;", "+\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=341795 - Per 15.12.2.8, we should fully apply glb", "+\t\t\t\t\tif (glb != null) {", "+\t\t\t\t\t\tif (glb.length == 1) {", "+\t\t\t\t\t\t\tmostSpecificSubstitute = glb[0];", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tTypeBinding [] otherBounds = new TypeBinding[glb.length - 1];", "+\t\t\t\t\t\t\tSystem.arraycopy(glb, 1, otherBounds, 0, glb.length - 1);", "+\t\t\t\t\t\t\tmostSpecificSubstitute = scope.environment().createWildcard(null, 0, glb[0], otherBounds, Wildcard.EXTENDS);", "+\t\t\t\t\tif (mostSpecificSubstitute != null) {", "+\t\t\t\t\t\tsubstitutes[i] = mostSpecificSubstitute;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e9e3ea18c2976e7295a986b8fa35fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "3e104a2ad2daae13b366a9a1eee4b2527591ce40", "commitAfterChange": "80124b8e78c2f4cdfd849f3bbbfe3f59078f0726", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private void fixSupertypeBindings()", "signatureAfterChange": " private void fixSupertypeBindings()", "diff": ["-\t\t\t\tif (superclass != null) ", "-\t\t\t\t\t((SourceTypeBinding) typeBinding).superclass = (ReferenceBinding) superclass;", "+\t\t\t\tif (superclass != null) {", "+\t\t\t\t\t// ensure we are not creating a cycle (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=215681 )", "+\t\t\t\t\tif (!(subTypeOfType((ReferenceBinding) superclass, typeBinding))) {", "+\t\t\t\t\t\t((SourceTypeBinding) typeBinding).superclass = (ReferenceBinding) superclass;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\t\t\tif (superInterface != null)", "-\t\t\t\t\t\t\tinterfaceBindings[index++] = superInterface;", "+\t\t\t\t\t\tif (superInterface != null) {", "+\t\t\t\t\t\t\t// ensure we are not creating a cycle (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=215681 )", "+\t\t\t\t\t\t\tif (!(subTypeOfType(superInterface, typeBinding))) {", "+\t\t\t\t\t\t\t\tinterfaceBindings[index++] = superInterface;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}], "num": 63859}