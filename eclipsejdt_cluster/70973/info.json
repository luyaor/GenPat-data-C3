{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c91f4a22171571d7b1d5fe18191528f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23264c8fcd3903103dd000c5b6026e77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExceptionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tCollection inputVariables(final InferenceContext18 context)", "signatureAfterChange": "  \tCollection inputVariables(final InferenceContext18 context)", "diff": ["-\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope); // TODO derive with target type?", "+\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope, true); // TODO derive with target type?", "-\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope); // TODO derive with target type?", "+\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope, true); // TODO derive with target type?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbab6b2618035baa229931d19151526c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tCollection inputVariables(final InferenceContext18 context)", "signatureAfterChange": "  \tCollection inputVariables(final InferenceContext18 context)", "diff": ["-", "-\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope); // TODO derive with target type?", "+\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope, true); // TODO derive with target type?", "-\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope);", "+\t\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(context.scope, true);"]}], "num": 70973}