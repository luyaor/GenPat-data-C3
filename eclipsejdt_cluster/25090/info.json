{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd1a264a3a947884f964fd2572217226", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4564b4b60a13362e07f38c89c883041", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "e657b912c1ef94d48e9749f2cbf91c83fff8728f", "commitAfterChange": "a34df737b5102c35af6a4e4a81e1b17f0f972c06", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type)", "diff": ["-protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {", "+protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type) {", "+\tif (qualifiedPattern == null) return ACCURATE_MATCH;", "+", "+\t// NOTE: if case insensitive search then qualifiedPattern is assumed to be lowercase", "-", "-\t// NOTE: if case insensitive search then simpleNamePattern & qualificationPattern are assumed to be lowercase", "-\tchar[] pattern;", "-\tif (simpleNamePattern == null) {", "-\t\tif (qualificationPattern == null) return ACCURATE_MATCH;", "-\t\tpattern = CharOperation.concat(qualificationPattern, ONE_STAR, '.');", "-\t} else {", "-\t\tpattern = qualificationPattern == null", "-\t\t\t? CharOperation.concat(ONE_STAR, simpleNamePattern)", "-\t\t\t: CharOperation.concat(qualificationPattern, simpleNamePattern, '.');", "-\t}", "-\treturn CharOperation.match(pattern, fullyQualifiedTypeName, this.isCaseSensitive)", "+\treturn CharOperation.match(qualifiedPattern, fullyQualifiedTypeName, this.isCaseSensitive)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e40df5a67fc29e433ecc83ce19952a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "e657b912c1ef94d48e9749f2cbf91c83fff8728f", "commitAfterChange": "a34df737b5102c35af6a4e4a81e1b17f0f972c06", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean checkTypeName(char[] simpleName, char[] qualification, char[] fullyQualifiedTypeName, boolean isCaseSensitive)", "signatureAfterChange": " boolean checkTypeName(char[] simpleName, char[] qualification, char[] fullyQualifiedTypeName, boolean isCaseSensitive)", "diff": ["-\tchar[] wildcardPattern;", "-\tif (simpleName == null) {", "-\t\tif (qualification == null) return true;", "-\t\twildcardPattern = CharOperation.concat(qualification, ONE_STAR, '.');", "-\t} else {", "-\t\twildcardPattern = qualification == null", "-\t\t\t? CharOperation.concat(ONE_STAR, simpleName)", "-\t\t\t: CharOperation.concat(qualification, simpleName, '.');", "-\t}", "+\tchar[] wildcardPattern = PatternLocator.qualifiedPattern(simpleName, qualification);", "+\tif (wildcardPattern == null) return true;"]}], "num": 25090}