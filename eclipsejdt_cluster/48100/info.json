{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbb7037cf52dda0e94eeae14a8a803a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a3e8893a7568fbada086b21ed9b15f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private void buildFromPotentialSubtypes(String[] allPotentialSubTypes)", "signatureAfterChange": " private void buildFromPotentialSubtypes(String[] allPotentialSubTypes)", "diff": ["-\t\ttry {", "-\t\t\tIResource underlyingResource;", "-\t\t\tif (focusCU instanceof WorkingCopy) {", "-\t\t\t\tunderlyingResource = ((WorkingCopy)focusCU).getOriginalElement().getUnderlyingResource();", "-\t\t\t} else {", "-\t\t\t\tunderlyingResource = focusCU.getUnderlyingResource();", "-\t\t\t}", "-\t\t\tfocusPath = underlyingResource.getFullPath().toString();", "-\t\t} catch (JavaModelException e) {", "-\t\t\t// type does not exist", "-\t\t\treturn;", "-\t\t}", "+\t\tfocusPath = focusCU.getPath().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e8e40372ddd70b96c960d1d23712b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private ProcessorEnvImpl( \t\t\tfinal IFile[] filesWithAnnotations, \t\t\tfinal IFile[] additionalFiles,  \t\t\tfinal ICompilationUnit[] units, \t\t\tfinal IJavaProject javaProj, \t\t\tfinal Phase phase)", "signatureAfterChange": "     ProcessorEnvImpl( \t\t\tfinal ICompilationParticipantResult[] filesWithAnnotations, \t\t\tfinal IFile[] additionalFiles, \t\t\tfinal IJavaProject javaProj)", "diff": ["-    private ProcessorEnvImpl(", "-\t\t\tfinal IFile[] filesWithAnnotations,", "-\t\t\tfinal IFile[] additionalFiles, ", "-\t\t\tfinal ICompilationUnit[] units,", "-\t\t\tfinal IJavaProject javaProj,", "-\t\t\tfinal Phase phase) {", "+    ProcessorEnvImpl(", "+\t\t\tfinal ICompilationParticipantResult[] filesWithAnnotations,", "+\t\t\tfinal IFile[] additionalFiles,", "+\t\t\tfinal IJavaProject javaProj) {", "-    \tsuper(null, null, javaProj, phase);", "-    ", "-\t\t_unit = null;", "-\t\t_units = units;", "+    \tsuper(null, null, javaProj, Phase.BUILD);", "-\t\t_allProblems = new HashMap<IFile, List<IProblem>>();", "+\t\t_problems = new ArrayList<APTProblem>();", "-\t\tinitOptions(javaProj);"]}], "num": 48100}