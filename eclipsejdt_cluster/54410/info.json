{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f013a7dfe492664bf6c3d3d6a621534", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5e398864d90fee8a0dfcb6b96782fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "73a3572f1ed828d7a770d67850f907fae70bd464", "commitAfterChange": "50431e234c5ece34d7b8d3e0af32a86a5079d5cd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\tboolean versionIDRequired = false;", "-", "+\t\tboolean printVersionRequired = false;", "+\t\t", "-\t\t\t\t|| currentArg.equals(\"-v\")) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tversionIDRequired = true;", "-\t\t\t\tcontinue;", "+\t\t\t\t|| currentArg.equals(\"-v\")) { //$NON-NLS-1$", "+\t\t\t\tprintVersionRequired = true;", "+\t\t\t\tproceed = false;", "+\t\t\t\treturn;", "+\t\t\tif (currentArg.equals(\"-showversion\")) { //$NON-NLS-1$", "+\t\t\t\tprintVersionRequired = true;", "+\t\t\t\tcontinue;", "+\t\t\t}\t\t\t", "-\t\t\tif (currentArg.equals(\"-help\")) { //$NON-NLS-1$", "+\t\t\tif (currentArg.equals(\"-help\") || currentArg.equals(\"-?\")) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"packageDefaultMethod\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"pkgDefaultMethod\") || token.equals(\"packageDefaultMethod\")/*backward compatible*/ ) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"interfaceNonInherited\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"intfNonInherited\") || token.equals(\"interfaceNonInherited\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t} else if (token.equals(\"noImplicitStringConversion\")) {//$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"charConcat\") || token.equals(\"noImplicitStringConversion\")/*backward compatible*/) {//$NON-NLS-1$", "-", "-\t\t/*", "-\t\t * Standalone options", "-\t\t */", "-\t\tif (versionIDRequired) {", "-\t\t\tout.println(Main.bind(\"misc.version\",  //$NON-NLS-1$", "-\t\t\t\tnew String[]{", "-\t\t\t\t\tMain.bind(\"compiler.name\"), //$NON-NLS-1$", "-\t\t\t\t\tMain.bind(\"compiler.version\"), //$NON-NLS-1$", "-\t\t\t\t\tMain.bind(\"compiler.copyright\") })); //$NON-NLS-1$", "-\t\t\tproceed = false;", "-\t\t\treturn;", "-\t\t}", "-", "-\t\tif (printUsageRequired) {", "+\t\tif (printUsageRequired || filesCount == 0) {", "+\t\t} else {", "+\t\t\tif (printVersionRequired) {", "+\t\t\t\tprintVersion();", "+\t\t\t\tif (!proceed) return;", "+\t\t\t}", "-\t\tif (filenames == null) {", "-\t\t\tprintUsage();", "-\t\t\treturn;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bdd11ff139205e0e1d2a718195e3e78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "d6e67d4c8518637d8a6205904d99263fcf72b512", "commitAfterChange": "25c3603d7bf5d103d47b791d11767b16968f4a1d", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["+\tfinal int INSIDE_PROCESSOR_PATH_start = 17;", "+\tfinal int INSIDE_PROCESSOR_start = 18;", "+\tfinal int INSIDE_S_start = 19;", "+\tthis.expandedCommandLine = newCommandLineArgs;", "+\t\t\t\t// annotation processing", "+\t\t\t\tif (currentArg.startsWith(\"-A\")) { //$NON-NLS-1$", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tif (currentArg.equals(\"-processorpath\")) { //$NON-NLS-1$", "+\t\t\t\t\tmode = INSIDE_PROCESSOR_PATH_start;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tif (currentArg.equals(\"-processor\")) { //$NON-NLS-1$", "+\t\t\t\t\tmode = INSIDE_PROCESSOR_start;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tif (currentArg.equals(\"-proc:only\")) { //$NON-NLS-1$", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_GenerateClassFiles,", "+\t\t\t\t\t\tCompilerOptions.DISABLED);", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tif (currentArg.equals(\"-proc:none\")) { //$NON-NLS-1$", "+\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\tCompilerOptions.OPTION_Process_Annotations,", "+\t\t\t\t\t\tCompilerOptions.DISABLED);", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tif (currentArg.equals(\"-s\")) { //$NON-NLS-1$", "+\t\t\t\t\tmode = INSIDE_S_start;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\tif (currentArg.equals(\"-XprintProcessorInfo\") //$NON-NLS-1$", "+\t\t\t\t\t\t|| currentArg.equals(\"-XprintRounds\")) { //$NON-NLS-1$ ", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "-\t\t\t\t// continue; fall through on purpose", "+\t\t\t\tbreak;", "+\t\t\tcase INSIDE_PROCESSOR_PATH_start :", "+\t\t\t\t// nothing to do here. This is consumed again by the AnnotationProcessorManager", "+\t\t\t\tmode = DEFAULT;", "+\t\t\t\tcontinue;", "+\t\t\tcase INSIDE_PROCESSOR_start :", "+\t\t\t\t// nothing to do here. This is consumed again by the AnnotationProcessorManager", "+\t\t\t\tmode = DEFAULT;", "+\t\t\t\tcontinue;", "+\t\t\tcase INSIDE_S_start :", "+\t\t\t\t// nothing to do here. This is consumed again by the AnnotationProcessorManager", "+\t\t\t\tmode = DEFAULT;", "+\t\t\t\tcontinue;\t\t\t", "-\tif (filesCount != 0)", "+\tif (filesCount != 0) {", "+\t}"]}], "num": 54410}