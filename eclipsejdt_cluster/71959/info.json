{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e2a546dc200277f301b75dd63a1f954", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2a2d56010453f14ff24dfc25be8cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BuildNotifier.java", "commitBeforeChange": "54ba66d9d78ab42f826307bbdbfd4052bc565f16", "commitAfterChange": "3badf84171cbba8161f3e622b35064462f96fa86", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected String problemsMessage()", "signatureAfterChange": " protected String problemsMessage()", "diff": ["-\tif (newErrorCount == 0 && fixedErrorCount == 0) return \"\"; //$NON-NLS-1$", "-\tif (fixedErrorCount == 0)", "-\t\treturn '(' + (newErrorCount == 1", "-\t\t\t? Util.bind(\"build.oneErrorFound\") //$NON-NLS-1$", "-\t\t\t: Util.bind(\"build.errorsFound\", String.valueOf(newErrorCount))) + ')'; //$NON-NLS-1$", "-\tif (newErrorCount == 0)", "-\t\treturn '(' + (fixedErrorCount == 1", "-\t\t\t? Util.bind(\"build.oneErrorFixed\") //$NON-NLS-1$", "-\t\t\t: Util.bind(\"build.errorsFixed\", String.valueOf(fixedErrorCount))) + ')'; //$NON-NLS-1$", "-\treturn", "-\t\t'(' + (fixedErrorCount == 1", "-\t\t\t? Util.bind(\"build.oneErrorFixed\") //$NON-NLS-1$", "-\t\t\t: Util.bind(\"build.errorsFixed\", String.valueOf(fixedErrorCount))) //$NON-NLS-1$", "-\t\t+ \", \" //$NON-NLS-1$", "-\t\t+ (newErrorCount == 1", "-\t\t\t? Util.bind(\"build.oneErrorFound\") //$NON-NLS-1$", "-\t\t\t: Util.bind(\"build.errorsFound\", String.valueOf(newErrorCount))) + ')'; //$NON-NLS-1$", "+\tint numNew = newErrorCount + newWarningCount;", "+\tint numFixed = fixedErrorCount + fixedWarningCount;", "+\tif (numNew == 0 && numFixed == 0) return \"\"; //$NON-NLS-1$", "+", "+\tStringBuffer buffer = new StringBuffer();", "+\tbuffer.append('(');", "+\tif (numNew == 0) {", "+\t\t// (Fixed: x errors, y warnings)", "+\t\tbuffer.append(Util.bind(\"build.fixedHeader\")); //$NON-NLS-1$", "+\t\tbuffer.append(' ');", "+\t\tif (fixedErrorCount > 0) {", "+\t\t\tif (fixedErrorCount == 1)", "+\t\t\t\tbuffer.append(Util.bind(\"build.oneError\")); //$NON-NLS-1$", "+\t\t\telse", "+\t\t\t\tbuffer.append(Util.bind(\"build.multipleErrors\", String.valueOf(fixedErrorCount))); //$NON-NLS-1$", "+\t\t\tif (fixedWarningCount > 0)", "+\t\t\t\tbuffer.append(',').append(' ');", "+\t\t}", "+\t\tif (fixedWarningCount > 0) {", "+\t\t\tif (fixedWarningCount == 1)", "+\t\t\t\tbuffer.append(Util.bind(\"build.oneWarning\")); //$NON-NLS-1$", "+\t\t\telse", "+\t\t\t\tbuffer.append(Util.bind(\"build.multipleWarnings\", String.valueOf(fixedWarningCount))); //$NON-NLS-1$", "+\t\t}", "+\t} else if (numFixed == 0) {", "+\t\t// (Found: x errors, y warnings)", "+\t\tbuffer.append(Util.bind(\"build.foundHeader\")); //$NON-NLS-1$", "+\t\tbuffer.append(' ');", "+\t\tif (newErrorCount > 0) {", "+\t\t\tif (newErrorCount == 1)", "+\t\t\t\tbuffer.append(Util.bind(\"build.oneError\")); //$NON-NLS-1$", "+\t\t\telse", "+\t\t\t\tbuffer.append(Util.bind(\"build.multipleErrors\", String.valueOf(newErrorCount))); //$NON-NLS-1$", "+\t\t\tif (newWarningCount > 0)", "+\t\t\t\tbuffer.append(',').append(' ');", "+\t\t}", "+\t\tif (newWarningCount > 0) {", "+\t\t\tif (newWarningCount == 1)", "+\t\t\t\tbuffer.append(Util.bind(\"build.oneWarning\")); //$NON-NLS-1$", "+\t\t\telse", "+\t\t\t\tbuffer.append(Util.bind(\"build.multipleWarnings\", String.valueOf(newWarningCount))); //$NON-NLS-1$", "+\t\t}", "+\t} else {", "+\t\t// (Found/fixed: x/y errors, x/y warnings)", "+\t\tbuffer.append(Util.bind(\"build.foundFixedHeader\")); //$NON-NLS-1$", "+\t\tbuffer.append(' ');", "+", "+\t\tif (newErrorCount > 0 || fixedErrorCount > 0) {", "+\t\t\tString plusMinus = String.valueOf(newErrorCount) + \"/\" + String.valueOf(fixedErrorCount); //$NON-NLS-1$", "+\t\t\tbuffer.append(Util.bind(\"build.multipleErrors\", plusMinus)); //$NON-NLS-1$", "+\t\t\tif (fixedWarningCount > 0 || newWarningCount > 0)", "+\t\t\t\tbuffer.append(',').append(' ');", "+\t\t}", "+\t\tif (newWarningCount > 0 || fixedWarningCount > 0) {", "+\t\t\tString plusMinus = String.valueOf(newWarningCount) + \"/\" + String.valueOf(fixedWarningCount); //$NON-NLS-1$", "+\t\t\tbuffer.append(Util.bind(\"build.multipleWarnings\", plusMinus)); //$NON-NLS-1$", "+\t\t}", "+\t}", "+\tbuffer.append(')');", "+\treturn buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33ecebd3f0e49233e4369312632f0d61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BuildNotifier.java", "commitBeforeChange": "9df5be4a36832dc62c270f51baaa2d061d29fa15", "commitAfterChange": "66711177c60015220094d37d3722607c867721b9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected String problemsMessage()", "signatureAfterChange": " protected String problemsMessage()", "diff": ["+\tboolean displayBoth = numNew > 0 && numFixed > 0;", "-\tif (numNew == 0) {", "-\t\t// (Fixed: x errors, y warnings)", "-\t\tbuffer.append(Util.bind(\"build.fixedHeader\")); //$NON-NLS-1$", "-\t\tbuffer.append(' ');", "-\t\tif (fixedErrorCount > 0) {", "-\t\t\tif (fixedErrorCount == 1)", "-\t\t\t\tbuffer.append(Util.bind(\"build.oneError\")); //$NON-NLS-1$", "-\t\t\telse", "-\t\t\t\tbuffer.append(Util.bind(\"build.multipleErrors\", String.valueOf(fixedErrorCount))); //$NON-NLS-1$", "-\t\t\tif (fixedWarningCount > 0)", "-\t\t\t\tbuffer.append(',').append(' ');", "-\t\t}", "-\t\tif (fixedWarningCount > 0) {", "-\t\t\tif (fixedWarningCount == 1)", "-\t\t\t\tbuffer.append(Util.bind(\"build.oneWarning\")); //$NON-NLS-1$", "-\t\t\telse", "-\t\t\t\tbuffer.append(Util.bind(\"build.multipleWarnings\", String.valueOf(fixedWarningCount))); //$NON-NLS-1$", "-\t\t}", "-\t} else if (numFixed == 0) {", "-\t\t// (Found: x errors, y warnings)", "+\tif (numNew > 0) {", "+\t\t// (Found x errors + y warnings)", "-\t\tif (newErrorCount > 0) {", "+\t\tif (displayBoth || newErrorCount > 0) {", "-\t\t\tif (newWarningCount > 0)", "-\t\t\t\tbuffer.append(',').append(' ');", "+\t\t\tif (displayBoth || newWarningCount > 0)", "+\t\t\t\tbuffer.append(\" + \"); //$NON-NLS-1$", "-\t\tif (newWarningCount > 0) {", "+\t\tif (displayBoth || newWarningCount > 0) {", "-\t} else {", "-\t\t// (Found/fixed: x/y errors, x/y warnings)", "-\t\tbuffer.append(Util.bind(\"build.foundFixedHeader\")); //$NON-NLS-1$", "+\t\tif (numFixed > 0)", "+\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t}", "+\tif (numFixed > 0) {", "+\t\t// (Fixed x errors + y warnings) or (Found x errors + y warnings, Fixed x + y)", "+\t\tbuffer.append(Util.bind(\"build.fixedHeader\")); //$NON-NLS-1$", "-", "-\t\tif (newErrorCount > 0 || fixedErrorCount > 0) {", "-\t\t\tString plusMinus = String.valueOf(newErrorCount) + \"/\" + String.valueOf(fixedErrorCount); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"build.multipleErrors\", plusMinus)); //$NON-NLS-1$", "-\t\t\tif (fixedWarningCount > 0 || newWarningCount > 0)", "-\t\t\t\tbuffer.append(',').append(' ');", "-\t\t}", "-\t\tif (newWarningCount > 0 || fixedWarningCount > 0) {", "-\t\t\tString plusMinus = String.valueOf(newWarningCount) + \"/\" + String.valueOf(fixedWarningCount); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"build.multipleWarnings\", plusMinus)); //$NON-NLS-1$", "+\t\tif (displayBoth) {", "+\t\t\tbuffer.append(String.valueOf(fixedErrorCount));", "+\t\t\tbuffer.append(\" + \"); //$NON-NLS-1$", "+\t\t\tbuffer.append(String.valueOf(fixedWarningCount));", "+\t\t} else {", "+\t\t\tif (fixedErrorCount > 0) {", "+\t\t\t\tif (fixedErrorCount == 1)", "+\t\t\t\t\tbuffer.append(Util.bind(\"build.oneError\")); //$NON-NLS-1$", "+\t\t\t\telse", "+\t\t\t\t\tbuffer.append(Util.bind(\"build.multipleErrors\", String.valueOf(fixedErrorCount))); //$NON-NLS-1$", "+\t\t\t\tif (fixedWarningCount > 0)", "+\t\t\t\t\tbuffer.append(\" + \"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (fixedWarningCount > 0) {", "+\t\t\t\tif (fixedWarningCount == 1)", "+\t\t\t\t\tbuffer.append(Util.bind(\"build.oneWarning\")); //$NON-NLS-1$", "+\t\t\t\telse", "+\t\t\t\t\tbuffer.append(Util.bind(\"build.multipleWarnings\", String.valueOf(fixedWarningCount))); //$NON-NLS-1$", "+\t\t\t}"]}], "num": 71959}