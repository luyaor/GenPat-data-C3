{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c9a881391d8af78aee68a6ad5a10e1e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36cfa99621fc50650fd2d34eb5746975", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "99c2e25ae0d73d23014ede292757d62545eec1b5", "commitAfterChange": "ee3e92a740c438d4455b4c3423c42bacaa4600fe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public static Test suite()", "signatureAfterChange": "   public static Test suite()", "diff": ["-", "-\tTestSuite suite = new Suite(JavaElementDeltaTests.class.getName());", "-\t", "-\t// add/remove/open/close projects", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveAddJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveAddBinaryProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddJavaNature\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddJavaNatureAndClasspath\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveJavaNature\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testOpenJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCloseJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddTwoJavaProjects\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddTwoJavaProjectsWithExtraSetClasspath\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testDeleteProjectSetCPAnotherProject\"));", "+\treturn buildTestSuite(JavaElementDeltaTests.class);", "+}", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRenameJavaProject\"));", "-", "-\t// non-java projects", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddNonJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveNonJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveNonJavaProjectUpdateDependent1\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveNonJavaProjectUpdateDependent2\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveNonJavaProjectUpdateDependent3\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testOpenNonJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCloseNonJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCloseNonJavaProjectUpdateDependent\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRenameNonJavaProject\"));", "-\t", "-\t// package fragment roots", "-\tsuite.addTest(new JavaElementDeltaTests(\"testDeleteInnerJar\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testNestedRootParentMove\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testPackageFragmentRootRemoveAndAdd\"));", "-\t", "-\t// packages", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddPackageSourceIsBin\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRenameOuterPkgFragment\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testPackageFragmentAddAndRemove\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testPackageFragmentMove\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCopyAndOverwritePackage\"));", "-\t", "-\t// compilation units", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddCuInDefaultPkg1\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddCuInDefaultPkg2\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testMoveCuInEnclosingPkg\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCompilationUnitRemoveAndAdd\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddCuAfterProjectOpen\"));", "-\t", "-\t// commit/save working copies", "-\tsuite.addTest(new JavaElementDeltaTests(\"testModifyMethodBodyAndSave\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRenameMethodAndSave\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testSaveWorkingCopy\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testWorkingCopyCommit\"));", "-//\tsuite.addTest(new JavaElementDeltaTests(\"testAddCommentAndCommit\"));", "-\t", "-\t// managed working copies", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCreateWorkingCopy\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testDestroyWorkingCopy\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCreateSharedWorkingCopy\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testDestroySharedWorkingCopy\"));", "-\t", "-\t// non-java resources", "-\tsuite.addTest(new JavaElementDeltaTests(\"testMoveResInDotNamedFolder\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testMoveTwoResInRoot\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testMergeResourceDeltas\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddFileToNonJavaProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testDeleteNonJavaFolder\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddInvalidSubfolder\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testCUNotOnClasspath\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testNonJavaResourceRemoveAndAdd\"));", "-\t", "-\t// listeners", "-//\tsuite.addTest(new JavaElementDeltaTests(\"testListenerAutoBuild\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testListenerReconcile\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testListenerPostChange\"));", "-\t", "-\t// classpath", "-\tsuite.addTest(new JavaElementDeltaTests(\"testSetClasspathVariable1\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testSetClasspathVariable2\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testChangeRootKind\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testOverwriteClasspath\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveCPEntryAndRoot1\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveCPEntryAndRoot2\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testRemoveCPEntryAndRoot3\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testAddDotClasspathFile\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testSetClasspathOnFreshProject\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testChangeExportFlag\"));", "-\t", "-\t// batch operations", "-\tsuite.addTest(new JavaElementDeltaTests(\"testBatchOperation\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testModifyProjectDescriptionAndRemoveFolder\"));", "-\t", "-\t// build", "-\tsuite.addTest(new JavaElementDeltaTests(\"testBuildProjectUsedAsLib\"));", "-\t", "-\t// output locations", "-\tsuite.addTest(new JavaElementDeltaTests(\"testModifyOutputLocation1\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testModifyOutputLocation2\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testModifyOutputLocation3\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testModifyOutputLocation4\"));", "-\tsuite.addTest(new JavaElementDeltaTests(\"testChangeCustomOutput\"));", "-\t", "-\treturn suite;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06c1439b2e711fbd145e693550d8523", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AllJavaModelTests.java", "commitBeforeChange": "04e492585ec94bbdfe8f3ba07279d9329063465d", "commitAfterChange": "3197772a63ef20d756d7f45892d94bccedcb3d16", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["+", "-\t// Enter each test here, grouping the tests that are related", "-", "-\tgetAllTestClasses();", "+\tClass[] classes = getAllTestClasses();", "-", "-\t// creation of method", "-\tsuite.addTest(CreateMembersTests.suite());", "-\t// Java Naming convention tests", "-\tsuite.addTest(JavaConventionTests.suite());", "-", "-\t// Project & Root API unit tests", "-\tsuite.addTest(JavaProjectTests.suite());", "-", "-\t// Compilation unit tests", "-\tsuite.addTest(CompilationUnitTests.suite());", "-", "-\t// Source attachment tests", "-\tsuite.addTest(AttachSourceTests.suite());", "-\t", "-\t// Java search tests", "-\tsuite.addTest(RunJavaSearchTests.suite());", "-\t\t", "-\t// Working copy tests", "-\tsuite.addTest(WorkingCopyTests.suite());", "-\tsuite.addTest(WorkingCopyNotInClasspathTests.suite());", "-\tsuite.addTest(HierarchyOnWorkingCopiesTests.suite());", "-\t", "-\t// test IJavaModel", "-\tsuite.addTest(JavaModelTests.suite());", "-", "-\t// tests to check the encoding", "-\tsuite.addTest(EncodingTests.suite());", "-\t", "-\t// test class name with special names like names containing '$'", "-\tsuite.addTest(ClassNameTests.suite());", "-\t", "-\t// IBuffer tests", "-\tsuite.addTest(BufferTests.suite());", "-", "-\t// Name lookup tests", "-\tsuite.addTest(NameLookupTests2.suite());", "-", "-\t// Classpath and output location tests", "-\tsuite.addTest(ClasspathTests.suite());", "-", "-\t// Delta tests", "-\tsuite.addTest(JavaElementDeltaTests.suite());", "-\tsuite.addTest(ExternalJarDeltaTests.suite());", "-", "-\t// Java element existence tests", "-\tsuite.addTest(ExistenceTests.suite());", "-\t", "-\t// Support for \"open on\" feature tests", "-\tsuite.addTest(ResolveTests.suite());", "-\tsuite.addTest(ResolveTests_1_5.suite());", "-\t", "-\t// Support for completion tests", "-\tsuite.addTest(CompletionTests.suite());", "-\tsuite.addTest(CompletionTests2.suite());", "-\tsuite.addTest(SnippetCompletionTests.suite());", "-\tsuite.addTest(CompletionTests_1_5.suite());", "-\tsuite.addTest(SelectionJavadocModelTests.suite());", "-\t", "-\t// Prefix and suffix tests", "-\tsuite.addTest(NamingConventionTests.suite());", "-\t", "-\t// Code correction tests", "-\tsuite.addTest(CodeCorrectionTests.suite());", "-\t", "-\t// Options tests", "-\tsuite.addTest(OptionTests.suite());", "-\t", "-\t// Type hierarchy tests", "-\tsuite.addTest(TypeHierarchyTests.suite());", "-\tsuite.addTest(TypeHierarchyNotificationTests.suite());", "-\tsuite.addTest(TypeHierarchySerializationTests.suite());", "-\t", "-\t// Resolve type tests", "-\tsuite.addTest(TypeResolveTests.suite());", "-", "-\t// Reconciler tests", "-\tsuite.addTest(ReconcilerTests.suite());", "-", "-\t// Copy and move operation tests", "-\tsuite.addTest(CopyMoveElementsTests.suite());", "-\tsuite.addTest(CopyMoveResourcesTests.suite());", "-", "-\t// Rename tests", "-\tsuite.addTest(RenameTests.suite());", "-\t", "-\t// Exclusion patterns tests", "-\tsuite.addTest(ExclusionPatternsTests.suite());", "-\t", "-\t// Inclusion patterns tests", "-\tsuite.addTest(InclusionPatternsTests.suite());", "-\t", "-\t// Signature tests", "-\tsuite.addTest(SignatureTests.suite());", "-\t", "-\t// Variable initializers and container initializers tests", "-\tsuite.addTest(ClasspathInitializerTests.suite());", "-", "-\t// Java Model Factory tests", "-\tsuite.addTest(FactoryTests.suite());", "-\t\t\t", "-\t// Java Element persistence tests", "-\tsuite.addTest(MementoTests.suite());", "-\t", "-\t// Java Element sorting tests", "-\tsuite.addTest(SortCompilationUnitElementsTests.suite());", "-", "-\t// Package fragment root manipulation tests", "-\tsuite.addTest(RootManipulationsTests.suite());", "-\t", "-\t// Owverflowing cache tests", "-\tsuite.addTest(OverflowingCacheTests.suite());", "-\t", "-\t// Working copy owner tests", "-\tsuite.addTest(WorkingCopyOwnerTests.suite());", "-", "-\t// Delete Java element tests", "-\tsuite.addTest(DeleteTests.suite());", "-\t", "-\t// Local element tests", "-\tsuite.addTest(LocalElementTests.suite());", "-\t", "-\t// Get source tests", "-\tsuite.addTest(GetSourceTests.suite());", "-\t\t", "-\t// Create packages tests", "-\tsuite.addTest(CreatePackageTests.suite());", "-", "-\t// Create compilation units tests", "-\tsuite.addTest(CreateCompilationUnitTests.suite());", "-\t", "-\t// Create search participant tests", "-\tsuite.addTest(SearchParticipantTests.suite());", "-\t", "-\t// Class file tests", "-\tsuite.addTest(ClassFileTests.suite());", "-", "-\tincludeDeprecatedJDOMTests(suite);", "+\tfor (int i = 0, length = classes.length; i < length; i++) {", "+\t\tClass clazz = classes[i];", "+\t\tMethod suiteMethod;", "+\t\ttry {", "+\t\t\tsuiteMethod = clazz.getDeclaredMethod(\"suite\", new Class[0]);", "+\t\t} catch (NoSuchMethodException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tcontinue;", "+\t\t}", "+\t\tObject test;", "+\t\ttry {", "+\t\t\ttest = suiteMethod.invoke(null, new Object[0]);", "+\t\t} catch (IllegalAccessException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tcontinue;", "+\t\t} catch (InvocationTargetException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tcontinue;", "+\t\t}", "+\t\tsuite.addTest((Test) test);", "+\t}", "-}"]}], "num": 48582}