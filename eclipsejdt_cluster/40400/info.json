{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f246866858285c6d0111401a318cc82d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f661a08491376c66874de0d8ce6097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "3ad9be41ed4dda741568679056b3faf6f8d0f62e", "commitAfterChange": "0cef88990b851def8b3e927443996ca444d24266", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate void checkAndSetModifiers()", "signatureAfterChange": " \t \tprivate void checkAndSetModifiers()", "diff": ["-\t\t\tMethodScope methodScope = methodScope();", "-\t\t\tReferenceContext refContext = methodScope.referenceContext;", "-\t\t\tif (refContext instanceof TypeDeclaration) {", "-\t\t\t    ", "-\t\t\t\tSourceTypeBinding type = ((TypeDeclaration) refContext).binding;", "-", "-\t\t\t\t// inside field declaration ? check field modifier to see if deprecated", "-\t\t\t\tif (methodScope.initializedField != null) {", "-\t\t\t\t\t\t// currently inside this field initialization", "-\t\t\t\t\tif (methodScope.initializedField.isViewedAsDeprecated() && !sourceType.isDeprecated()){", "-\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (type.isStrictfp())", "-\t\t\t\t\t\tmodifiers |= AccStrictfp;", "-\t\t\t\t\tif (type.isViewedAsDeprecated() && !sourceType.isDeprecated()) ", "-\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "-\t\t\t\t}\t\t\t\t\t", "-\t\t\t} else {", "-\t\t\t\tMethodBinding method = ((AbstractMethodDeclaration) refContext).binding;", "-\t\t\t\tif (method != null){", "-\t\t\t\t\tif (method.isStrictfp())", "-\t\t\t\t\t\tmodifiers |= AccStrictfp;", "-\t\t\t\t\tif (method.isViewedAsDeprecated() && !sourceType.isDeprecated())", "-\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\tScope scope = this;", "+\t\t\tdo {", "+\t\t\t\tswitch (scope.kind) {", "+\t\t\t\t\tcase METHOD_SCOPE :", "+\t\t\t\t\t\tMethodScope methodScope = (MethodScope) scope;", "+\t\t\t\t\t\tif (methodScope.isInsideInitializer()) {", "+\t\t\t\t\t\t\tSourceTypeBinding type = ((TypeDeclaration) methodScope.referenceContext).binding;", "+\t\t\t", "+\t\t\t\t\t\t\t// inside field declaration ? check field modifier to see if deprecated", "+\t\t\t\t\t\t\tif (methodScope.initializedField != null) {", "+\t\t\t\t\t\t\t\t\t// currently inside this field initialization", "+\t\t\t\t\t\t\t\tif (methodScope.initializedField.isViewedAsDeprecated() && !sourceType.isDeprecated()){", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (type.isStrictfp())", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccStrictfp;", "+\t\t\t\t\t\t\t\tif (type.isViewedAsDeprecated() && !sourceType.isDeprecated()) ", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tMethodBinding method = ((AbstractMethodDeclaration) methodScope.referenceContext).binding;", "+\t\t\t\t\t\t\tif (method != null){", "+\t\t\t\t\t\t\t\tif (method.isStrictfp())", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccStrictfp;", "+\t\t\t\t\t\t\t\tif (method.isViewedAsDeprecated() && !sourceType.isDeprecated())", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase CLASS_SCOPE :", "+\t\t\t\t\t\t// local member", "+\t\t\t\t\t\tif (enclosingType.isStrictfp())", "+\t\t\t\t\t\t\tmodifiers |= AccStrictfp;", "+\t\t\t\t\t\tif (enclosingType.isViewedAsDeprecated() && !sourceType.isDeprecated())", "+\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\tbreak;", "-\t\t\t}", "+\t\t\t\tscope = scope.parent;", "+\t\t\t} while (scope != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d088fc24db0f7af32a46fa748b464977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic int getModifiers()", "signatureAfterChange": " \tpublic int getDeclarationModifiers()", "diff": ["+\t */", "+\tpublic int getDeclarationModifiers(){", "+\t\tswitch(this.kind){", "+\t\t\tcase Scope.BLOCK_SCOPE :", "+\t\t\tcase Scope.METHOD_SCOPE :", "+\t\t\t\tMethodScope methodScope = methodScope();", "+\t\t\t\tif (!methodScope.isInsideInitializer()){", "+\t\t\t\t\t// check method modifiers to see if deprecated", "+\t\t\t\t\tMethodBinding context = ((AbstractMethodDeclaration)methodScope.referenceContext).binding;", "+\t\t\t\t\tif (context != null) {", "+\t\t\t\t\t\treturn context.modifiers;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tSourceTypeBinding type = ((BlockScope)this).referenceType().binding;", "+", "+\t\t\t\t\t// inside field declaration ? check field modifier to see if deprecated", "+\t\t\t\t\tif (methodScope.fieldDeclarationIndex != MethodScope.NotInFieldDecl) {", "+\t\t\t\t\t\tfor (int i = 0; i < type.fields.length; i++){", "+\t\t\t\t\t\t\tif (type.fields[i].id == methodScope.fieldDeclarationIndex) {", "+\t\t\t\t\t\t\t\t// currently inside this field initialization", "+\t\t\t\t\t\t\t\treturn type.fields[i].modifiers;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (type != null) {", "+\t\t\t\t\t\treturn type.modifiers;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase Scope.CLASS_SCOPE :", "+\t\t\t\tReferenceBinding context = ((ClassScope)this).referenceType().binding;", "+\t\t\t\tif (context != null) {", "+\t\t\t\t\treturn context.modifiers;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\treturn -1;", "+\t}", "-", "-\tpublic int getModifiers(){", "-\t\tswitch(this.kind){", "-\t\t\tcase Scope.BLOCK_SCOPE :", "-\t\t\tcase Scope.METHOD_SCOPE :", "-\t\t\t\tMethodScope methodScope = methodScope();", "-\t\t\t\tif (!methodScope.isInsideInitializer()){", "-\t\t\t\t\t// check method modifiers to see if deprecated", "-\t\t\t\t\tMethodBinding context = ((AbstractMethodDeclaration)methodScope.referenceContext).binding;", "-\t\t\t\t\tif (context != null) {", "-\t\t\t\t\t\treturn context.modifiers;", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tSourceTypeBinding type = ((BlockScope)this).referenceType().binding;", "-", "-\t\t\t\t\t// inside field declaration ? check field modifier to see if deprecated", "-\t\t\t\t\tif (methodScope.fieldDeclarationIndex != MethodScope.NotInFieldDecl) {", "-\t\t\t\t\t\tfor (int i = 0; i < type.fields.length; i++){", "-\t\t\t\t\t\t\tif (type.fields[i].id == methodScope.fieldDeclarationIndex) {", "-\t\t\t\t\t\t\t\t// currently inside this field initialization", "-\t\t\t\t\t\t\t\treturn type.fields[i].modifiers;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (type != null) {", "-\t\t\t\t\t\treturn type.modifiers;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase Scope.CLASS_SCOPE :", "-\t\t\t\tReferenceBinding context = ((ClassScope)this).referenceType().binding;", "-\t\t\t\tif (context != null) {", "-\t\t\t\t\treturn context.modifiers;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t}", "-\t\treturn -1;"]}], "num": 40400}