{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bade71e1bbac992aae43e781708a3801", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366ed67e60c975b9b0e3d4932e40a775", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "f2ff53b9c5467491559775afe1992655f55a63fe", "commitAfterChange": "b38f964c0abc42b760a66a064dc1b2f95aca317b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void testExternalJarChange() throws JavaModelException, IOException", "signatureAfterChange": " public void testExternalJarChange() throws JavaModelException, IOException", "diff": ["+ */", "+public void testExternalJarChange() throws JavaModelException, IOException {", "+\t// setup", "+\tIPath projectPath = env.addProject(\"Project\"); //$NON-NLS-1$", "+\tenv.addExternalJars(projectPath, Util.getJavaClassLibs());", "+\tIPath root = env.getPackageFragmentRootPath(projectPath, \"\"); //$NON-NLS-1$", "+\tIPath classTest = env.addClass(root, \"p\", \"X\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\"package p;\\n\"+ //$NON-NLS-1$", "+\t\t\"public class X {\\n\" + //$NON-NLS-1$", "+\t\t\"  void foo() {\\n\" + //$NON-NLS-1$", "+\t\t\"    new q.Y().bar();\\n\" + //$NON-NLS-1$", "+\t\t\"  }\\n\" + //$NON-NLS-1$", "+\t\t\"}\" //$NON-NLS-1$", "+\t);", "+\tString externalJar = Util.getOutputDirectory() + File.separator + \"test.jar\"; //$NON-NLS-1$", "+\tUtil.createJar(", "+\t\tnew String[] {", "+\t\t\t\"q/Y.java\", //$NON-NLS-1$", "+\t\t\t\"package q;\\n\" + //$NON-NLS-1$", "+\t\t\t\"public class Y {\\n\" + //$NON-NLS-1$", "+\t\t\t\"}\" //$NON-NLS-1$", "+\t\t},", "+\t\tnew HashMap(),", "+\t\texternalJar", "+\t);", "+\tlong lastModified = new java.io.File(externalJar).lastModified();", "+\tenv.addExternalJar(projectPath, externalJar);", "+\t", "+\t// build -> expecting problems", "+\tfullBuild();", "+\texpectingProblemsFor(", "+\t\tclassTest,", "+\t\t\"Problem : The method bar() is undefined for the type Y [ resource : </Project/p/X.java> range : <57,60> category : <50> severity : <2>]\"", "+\t);", "+\t", "+\ttry {", "+\t\tThread.sleep(1000);", "+\t} catch(InterruptedException e) {", "-\t */", "-\tpublic void testExternalJarChange() throws JavaModelException, IOException {", "-\t\t// setup", "-\t\tIPath projectPath = env.addProject(\"Project\"); //$NON-NLS-1$", "-\t\tenv.addExternalJars(projectPath, Util.getJavaClassLibs());", "-\t\tIPath root = env.getPackageFragmentRootPath(projectPath, \"\"); //$NON-NLS-1$", "-\t\tIPath classTest = env.addClass(root, \"p\", \"X\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p;\\n\"+ //$NON-NLS-1$", "-\t\t\t\"public class X {\\n\" + //$NON-NLS-1$", "-\t\t\t\"  void foo() {\\n\" + //$NON-NLS-1$", "-\t\t\t\"    new q.Y().bar();\\n\" + //$NON-NLS-1$", "+\t// fix jar", "+\tUtil.createJar(", "+\t\tnew String[] {", "+\t\t\t\"q/Y.java\", //$NON-NLS-1$", "+\t\t\t\"package q;\\n\" + //$NON-NLS-1$", "+\t\t\t\"public class Y {\\n\" + //$NON-NLS-1$", "+\t\t\t\"  public void bar() {\\n\" + //$NON-NLS-1$", "-\t\t);", "-\t\tString externalJar = Util.getOutputDirectory() + File.separator + \"test.jar\"; //$NON-NLS-1$", "-\t\tUtil.createJar(", "-\t\t\tnew String[] {", "-\t\t\t\t\"q/Y.java\", //$NON-NLS-1$", "-\t\t\t\t\"package q;\\n\" + //$NON-NLS-1$", "-\t\t\t\t\"public class Y {\\n\" + //$NON-NLS-1$", "-\t\t\t\t\"}\" //$NON-NLS-1$", "-\t\t\t},", "-\t\t\tnew HashMap(),", "-\t\t\texternalJar", "-\t\t);", "-\t\tlong lastModified = new java.io.File(externalJar).lastModified();", "-\t\tenv.addExternalJar(projectPath, externalJar);", "-\t\t", "-\t\t// build -> expecting problems", "-\t\tfullBuild();", "-\t\texpectingProblemsFor(classTest);", "-\t\t", "-\t\ttry {", "-\t\t\tThread.sleep(1000);", "-\t\t} catch(InterruptedException e) {", "-\t\t}", "-\t\t// fix jar", "-\t\tUtil.createJar(", "-\t\t\tnew String[] {", "-\t\t\t\t\"q/Y.java\", //$NON-NLS-1$", "-\t\t\t\t\"package q;\\n\" + //$NON-NLS-1$", "-\t\t\t\t\"public class Y {\\n\" + //$NON-NLS-1$", "-\t\t\t\t\"  public void bar() {\\n\" + //$NON-NLS-1$", "-\t\t\t\t\"  }\\n\" + //$NON-NLS-1$", "-\t\t\t\t\"}\" //$NON-NLS-1$", "-\t\t\t},", "-\t\t\tnew HashMap(),", "-\t\t\texternalJar", "-\t\t);", "-\t\t", "-\t\tnew java.io.File(externalJar).setLastModified(lastModified + 1000); // to be sure its different", "-\t\t// refresh project and rebuild -> expecting no problems", "-\t\tIJavaProject project = JavaCore.create(ResourcesPlugin.getWorkspace().getRoot().getProject(\"Project\")); //$NON-NLS-1$", "-\t\tproject.getJavaModel().refreshExternalArchives(new IJavaElement[] {project}, null);", "-\t\tincrementalBuild();", "-\t\texpectingNoProblems();", "-\t\t", "-\t}", "+\t\t},", "+\t\tnew HashMap(),", "+\t\texternalJar", "+\t);", "+\tnew java.io.File(externalJar).setLastModified(lastModified + 1000); // to be sure its different", "+\t// refresh project and rebuild -> expecting no problems", "+\tIJavaProject project = JavaCore.create(ResourcesPlugin.getWorkspace().getRoot().getProject(\"Project\")); //$NON-NLS-1$", "+\tproject.getJavaModel().refreshExternalArchives(new IJavaElement[] {project}, null);", "+\tincrementalBuild();", "+\texpectingNoProblems();", "+\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb503c334497354141c24acefc1c8e4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void test_nonnull_parameter_012()", "signatureAfterChange": " public void test_nonnull_parameter_012()", "diff": ["-\t\tmismatch_NonNull_Null(\"Object\") +", "+\t\tmismatch_NonNull_Null(\"Object\", \"T\") +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79ec52d8e193df84a7d8c8fca0ad451", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "988db3ec863dadeb2db80ab85efafc59fca27d63", "commitAfterChange": "bba7694c48471620eaabd1cb9ca1daab01462bcd", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test038()", "signatureAfterChange": " public void test038()", "diff": ["-\t\tcustomOptions);", "+\t\tcustomOptions,", "+\t\t\"java.lang.ClassNotFoundException\");"]}], "num": 60373}