{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bffaeedde37c07f9120ed396ad65d137", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a3f553dd7d7fedece37d48f4d4642b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3ba9aa9377302a1ccdd5ae8438326a9b39c90889", "commitAfterChange": "25a4c603c1f482ad385999879af859a3ed5010ab", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindMemberTypes(", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof PackageBinding) {", "+\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(astNode.sourceStart, (int) completionPosition);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// replace to the end of the completion identifier", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da467638be18726b95107a109309a5c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\tcomputeExpectedTypes(astNodeParent, scope);", "+\t\t\tcomputeExpectedTypes(astNodeParent, astNode, scope);", "-\t\t\t\tfindTypesAndPackages(completionToken, scope);", "+\t\t\t\tfindTypesAndPackages(completionToken, scope.parent);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if(astNode instanceof CompletionOnParameterizedQualifiedTypeReference) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnParameterizedQualifiedTypeReference ref = (CompletionOnParameterizedQualifiedTypeReference) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsideQualifiedReference = true;", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tassistNodeIsClass = ref.isClass();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tassistNodeIsException = ref.isException();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tassistNodeIsInterface = ref.isInterface();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompletionToken = ref.completionIdentifier;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlong completionPosition = ref.sourcePositions[ref.tokens.length];", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompletionToken,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5db9e4a1a732e47d1bce6339ac6f67b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "add2e09bc88bdef923e6e3e79386b09d19b0c6d4", "commitAfterChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "diff": ["+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if(astNode instanceof CompletionOnMarkerAnnotationName) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMarkerAnnotationName annot = (CompletionOnMarkerAnnotationName) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsAnnotation = true;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(annot.type instanceof CompletionOnSingleTypeReference) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnSingleTypeReference type = (CompletionOnSingleTypeReference) annot.type;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = type.token;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if(annot.type instanceof CompletionOnQualifiedTypeReference) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnQualifiedTypeReference type = (CompletionOnQualifiedTypeReference) annot.type;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = type.completionIdentifier;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}"]}], "num": 4156}