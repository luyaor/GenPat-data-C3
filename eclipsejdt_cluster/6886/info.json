{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03bcfe7373c21cfca9b4372ce3fd5ded", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4bfe213c9aaac252da83a7c23e6c890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected IDOMNode generateSyntaxIncorrectDOM()", "signatureAfterChange": " protected String generateSyntaxIncorrectAST()", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected IDOMNode generateSyntaxIncorrectDOM() {", "-\t//create some dummy source to generate a dom node", "+protected String generateSyntaxIncorrectAST() {", "+\t//create some dummy source to generate an ast node", "-\tbuff.append(fSource);", "+\tbuff.append(this.source);", "-\tIDOMCompilationUnit domCU = (new DOMFactory()).createCompilationUnit(buff.toString(), \"A.java\"); //$NON-NLS-1$", "-\tIDOMNode node = (IDOMNode) domCU.getChild(\"A\").getChildren().nextElement(); //$NON-NLS-1$", "-\tif (node != null) {", "-\t\tnode.remove();", "-\t}", "-\treturn node;", "+\tASTParser parser = ASTParser.newParser(AST.JLS3);", "+\tparser.setSource(buff.toString().toCharArray());", "+\tCompilationUnit compilationUnit = (CompilationUnit) parser.createAST(null);", "+\tTypeDeclaration typeDeclaration = (TypeDeclaration) compilationUnit.types().iterator().next();", "+\tList bodyDeclarations = typeDeclaration.bodyDeclarations();", "+\tif (bodyDeclarations.size() != 0)", "+\t\tthis.createdNode = (ASTNode) bodyDeclarations.iterator().next();", "+\treturn buff.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb45c2197da8941b7ef47720cba37095", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprivate String updatedContent(ICompilationUnit cu, PackageFragment dest, String newName) throws JavaModelException", "signatureAfterChange": " \tprivate String updatedContent(ICompilationUnit cu, PackageFragment dest, String newName) throws JavaModelException", "diff": ["-    // TODO - JDOM - remove once model ported off of JDOM", "-\t\t\tIDOMCompilationUnit cuDOM = null;", "-\t\t\tIBuffer buffer = cu.getBuffer();", "-\t\t\tif (buffer == null) return null;", "-\t\t\tchar[] contents = buffer.getCharacters();", "-\t\t\tif (contents == null) return null;", "-\t\t\tcuDOM = fFactory.createCompilationUnit(contents, typeName);", "-\t\t\tupdateTypeName(cu, cuDOM, cu.getElementName(), newName);", "-\t\t\tupdatePackageStatement(cuDOM, destPackageName);", "-\t\t\treturn cuDOM.getContents();", "+\t\t\t// ensure cu is consistent (noop if already consistent)", "+\t\t\tcu.makeConsistent(this.progressMonitor);", "+\t\t\tthis.parser.setSource(cu);", "+\t\t\tCompilationUnit astCU = (CompilationUnit) this.parser.createAST(this.progressMonitor);", "+\t\t\tIDocument document = getDocument(cu);", "+\t\t\tupdateTypeName(cu, astCU, cu.getElementName(), newName, document);", "+\t\t\tupdatePackageStatement(astCU, destPackageName, document);", "+\t\t\treturn document.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2f3b6f73bbe4c03228530c725ea327f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void generateNewCompilationUnitDOM(ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " protected abstract SimpleName rename(ASTNode node, SimpleName newName);", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected void generateNewCompilationUnitDOM(ICompilationUnit cu) throws JavaModelException {", "-\tIBuffer buffer = cu.getBuffer();", "-\tif (buffer == null) return;", "-\tchar[] prevSource = buffer.getCharacters();", "-\tif (prevSource == null) return;", "-", "-\t// create a JDOM for the compilation unit", "-\tfCUDOM = (new DOMFactory()).createCompilationUnit(prevSource, cu.getElementName());", "-\tIDOMNode parent = ((JavaElement) getParentElement()).findNode(fCUDOM);", "-\tif (parent == null) {", "-\t\t//#findNode does not work for autogenerated CUs as the contents are empty", "-\t\tparent = fCUDOM;", "-\t}", "-\tIDOMNode child = deprecatedGenerateElementDOM();", "-\tif (child != null) {", "-\t\tinsertDOMNode(parent, child);", "-\t}", "-\tworked(1);", "-}", "+protected abstract SimpleName rename(ASTNode node, SimpleName newName);"]}], "num": 6886}