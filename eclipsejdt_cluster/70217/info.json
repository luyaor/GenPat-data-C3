{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "080427fc8526909d1c0ae5c701e02a9e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a60554155d5dcfd164b7a1b8d07026d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "7fcda725e57776ddb850f6e0923a37be77d4220a", "commitAfterChange": "a6e6bfb150ee78b02c696c163d3f66a811019e6b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "signatureAfterChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "diff": ["-\t\t\tIPackageFragment[] fragments= (IPackageFragment[]) this.packageFragments.get(Signature.getSimpleNames(name));", "-\t\t\tif (fragments != null) {", "-\t\t\t\tIPackageFragment[] result = new IPackageFragment[fragments.length];", "-\t\t\t\tint resultLength = 0; ", "-\t\t\t\tfor (int i= 0; i < fragments.length; i++) {", "-\t\t\t\t\tIPackageFragment packageFragment= fragments[i];", "-\t\t\t\t\tresult[resultLength++] = packageFragment;", "+\t\t\tString[] pkgName = Signature.getSimpleNames(name);", "+\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.get(pkgName);", "+\t\t\tif (roots != null) {", "+\t\t\t\tIPackageFragment[] result = new IPackageFragment[roots.length];", "+\t\t\t\tfor (int i= 0; i < roots.length; i++) {", "+\t\t\t\t\tresult[i] = ((PackageFragmentRoot) roots[i]).getPackageFragment(pkgName);", "-\t\t\t\tif (resultLength > 0) {", "-\t\t\t\t\tSystem.arraycopy(result, 0, result = new IPackageFragment[resultLength], 0, resultLength);", "-\t\t\t\t\treturn result;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "+\t\t\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b222b881b733511c44409284c1f91c0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "55c6ab9c45d49f1f177c61cec69726a778e34111", "commitAfterChange": "9e53891494288567535baf6ce8385d425d9822fd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies)", "signatureAfterChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies)", "diff": ["+\t\t\tHashSet visited = new HashSet();", "+\t\t\t\t", "+\t\t\t\tPackageFragment pkg = (PackageFragment) unitToLookInside.getParent();", "+\t\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot) pkg.getParent();", "+\t\t\t\tif (visited.contains(root)) continue;", "+\t\t\t\tString[] pkgName = pkg.names;", "+\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) packageFragments.get(pkgName);", "+\t\t\t\tif (roots == null) {", "+\t\t\t\t\tpackageFragments.put(pkgName, new IPackageFragmentRoot[] {root});", "+\t\t\t\t} else {", "+\t\t\t\t\tint rootLength = roots.length;", "+\t\t\t\t\tSystem.arraycopy(roots, 0, roots = new IPackageFragmentRoot[rootLength+1], 0, rootLength);", "+\t\t\t\t\troots[rootLength] = root;", "+\t\t\t\t\tpackageFragments.put(pkgName, roots);", "+\t\t\t\t}", "+\t\t\t\tvisited.add(root);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e40c5107689a910ce7fd87b5fc4f1af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "7fcda725e57776ddb850f6e0923a37be77d4220a", "commitAfterChange": "a6e6bfb150ee78b02c696c163d3f66a811019e6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "signatureAfterChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "diff": ["-\t\tIPackageFragment[] frags= (IPackageFragment[]) this.packageFragments.get(pkgName);", "-\t\tif (frags != null) {", "-\t\t\tfor (int i= 0; i < frags.length; i++) {", "-\t\t\t\tIPackageFragment frag= frags[i];", "-\t\t\t\tif (!(frag instanceof JarPackageFragment)) {", "-\t\t\t\t\tICompilationUnit cu= frag.getCompilationUnit(cuName);", "-\t\t\t\t\tif (cu != null && cu.exists()) {", "+\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.get(pkgName);", "+\t\tif (roots != null) {", "+\t\t\tfor (int i= 0; i < roots.length; i++) {", "+\t\t\t\tPackageFragmentRoot root= (PackageFragmentRoot) roots[i];", "+\t\t\t\tif (!root.isArchive()) {", "+\t\t\t\t\tICompilationUnit cu = root.getPackageFragment(pkgName).getCompilationUnit(cuName);", "+\t\t\t\t\tif (cu.exists()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4ecd59de3ca1663018b068a924e8e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected ICompilationUnit getCompilationUnit(String projectName, String packageName, String unitName) throws JavaModelException", "signatureAfterChange": " \tprotected ICompilationUnit getCompilationUnit(String projectName, String packageName, String unitName) throws JavaModelException", "diff": ["-\t\tIPackageFragmentRoot[] fragmentRoots = javaProject.getPackageFragmentRoots();", "-\t\tint length = fragmentRoots.length;", "-\t\tfor (int i=0; i<length; i++) {", "-\t\t\tif (fragmentRoots[i] instanceof JarPackageFragmentRoot) continue;", "-\t\t\tIJavaElement[] packages= fragmentRoots[i].getChildren();", "-\t\t\tfor (int k= 0; k < packages.length; k++) {", "-\t\t\t\tIPackageFragment pack = (IPackageFragment) packages[k];", "-\t\t\t\tif (pack.getElementName().equals(packageName)) {", "-\t\t\t\t\tICompilationUnit[] units = pack.getCompilationUnits();", "-\t\t\t\t\tfor (int u=0; u<units.length; u++) {", "-\t\t\t\t\t\tif (units[u].getElementName().equals(unitName))", "-\t\t\t\t\t\t\treturn units[u];", "-\t\t\t\t\t}", "+\t\tIType type = javaProject.findType(packageName, unitName);", "+\t\tif (type != null) {", "+\t\t\treturn type.getCompilationUnit();", "+\t\t}", "+\t\treturn null;", "+\t}"]}], "num": 70217}