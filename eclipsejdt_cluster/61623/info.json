{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8b8ff3424f2a34f51569d0bd6b9a066", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf323bc5996416580d1446cd9a5f08e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "4dd4298e54cdb8e3a760f2a27e21018a12393e22", "commitAfterChange": "7dddcf3cd8a65acd62db0614dd8c16c0f82c07f1", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprivate int printJavadocBlockNodesNewLines(FormatJavadocBlock block, FormatJavadocNode node, int previousEnd)", "signatureAfterChange": "  \tprivate int printJavadocBlockNodesNewLines(FormatJavadocBlock block, FormatJavadocNode node, int previousEnd)", "diff": ["-\t\t    \t\tlength += inlinedBlock.tagEnd - inlinedBlock.sourceStart + 1;  // tag length", "-\t\t\t    \tif (nodeStart > (previousEnd+1)) {", "-\t\t\t    \t\tlength++; // include space between nodes", "-\t\t\t    \t}", "-\t\t\t\t\tthis.scanner.resetTo(text.sourceStart , node.sourceEnd);", "+\t\t\t\t\tif (text != null) {", "+\t\t\t    \t\tlength += inlinedBlock.tagEnd - inlinedBlock.sourceStart + 1;  // tag length", "+\t\t\t\t    \tif (nodeStart > (previousEnd+1)) {", "+\t\t\t\t    \t\tlength++; // include space between nodes", "+\t\t\t\t    \t}", "+\t\t\t\t\t\tthis.scanner.resetTo(text.sourceStart , node.sourceEnd);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "589bd8e74ca0364e1ddffffb1c52483b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "50b8b0acb5228e84131dfeba9c21f872ddd0e6e0", "commitAfterChange": "dde29313645bb8126a58151e5c083fccc6ec2f84", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": "\r protected void addAffectedChild(JavaElementDelta child)", "diff": ["+\t\t\t\t\t\t// add the non-java resource deltas if needed\r", "+\t\t\t\t\t\t// note that the child delta always takes precedence over this existing child delta\r", "+\t\t\t\t\t\t// as non-java resource deltas are always created last (by the DeltaProcessor)\r", "+\t\t\t\t\t\tIResourceDelta[] resDeltas = child.getResourceDeltas();\r", "+\t\t\t\t\t\tif (resDeltas != null) {\r", "+\t\t\t\t\t\t\t((JavaElementDelta)existingChild).resourceDeltas = resDeltas;\r", "+\t\t\t\t\t\t\t((JavaElementDelta)existingChild).resourceDeltasCounter = child.resourceDeltasCounter;\r", "+\t\t\t\t\t\t}\r"]}], "num": 61623}