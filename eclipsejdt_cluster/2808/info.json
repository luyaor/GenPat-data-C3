{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f41b280cb6d665af003af3799bb72b67", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "521610d742af9ab4a523c92bf60e6fe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprotected CompilationUnit createAST3(ICompilationUnit cu, boolean statementsRecovery)", "signatureAfterChange": " \t \tprotected CompilationUnit createAST3(ICompilationUnit cu, boolean statementsRecovery)", "diff": ["-\t\tASTParser parser= ASTParser.newParser(AST.JLS3);", "+\t\treturn createAST(AST.JLS3, cu, statementsRecovery);", "+\t}", "-\t\tparser.setResolveBindings(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c123b3808a690dc2ca33f7b0337470f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "commitAfterChange": "1b6c294391226cfde58f43f4cff9ad65bab6672e", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 67, "signatureBeforeChange": " \t \tpublic ASTNode runConversion(int astLevel, char[] source, String unitName, IJavaProject project)", "signatureAfterChange": " \t \tpublic ASTNode runConversion(int astLevel, char[] source, String unitName, IJavaProject project)", "diff": ["-\t\tASTParser parser = ASTParser.newParser(astLevel);", "-\t\tparser.setSource(source);", "-\t\tparser.setUnitName(unitName);", "-\t\tparser.setProject(project);", "-\t\treturn parser.createAST(null);", "+\t\treturn runConversion(astLevel, source, unitName, project, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb305c9ea0fcf6a32758491ada7f00cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic ASTNode runConversion(int astLevel, ICompilationUnit unit, boolean resolveBindings, boolean statementsRecovery)", "signatureAfterChange": "  \tpublic ASTNode runConversion(int astLevel, ICompilationUnit unit, boolean resolveBindings, boolean statementsRecovery)", "diff": ["-\t", "+", "+\t\treturn runConversion(astLevel, unit, resolveBindings, statementsRecovery, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb99de466861e3f232872e33f48de85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "0a52fc66fb4db2fd9981d577d974e91228093601", "commitAfterChange": "76d395ddd90431ef7cb4486078cb51e978a5ad63", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["+", "-\t\tStringBuffer indentationBuffer = printJavadocIndentationBuffer(block, firstColumn);", "-\t\t\t\t\t\toverEndLine = (this.column + getTextLength(block, htmlTag)) > (this.formatter.preferences.comment_line_length+1);", "+\t\t\t\t\t\toverEndLine = (this.column + getTextLength(block, htmlTag, false)) > (this.formatter.preferences.comment_line_length+1);", "-\t\t\t\t\t\t\tthis.column += getTextLength(block, htmlTag);", "+\t\t\t\t\t\t\tint additionalLength = printJavadocHtmlImmutableTag(htmlTag, block, overEndLine);", "+\t\t\t\t\t\t\tthis.column += getTextLength(block, htmlTag, true) - additionalLength;", "-\t\t\t\t\t\t\tif (overEndLine) {", "-\t\t\t\t\t\t\t\t// need to indent", "-\t\t\t\t\t\t\t\tif (indentationBuffer != null) {", "-\t\t\t\t\t\t\t\t\taddInsertEdit(node.sourceStart, indentationBuffer.toString());", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c454220ee5fda9b39511c6d7246f88ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0c8d3633f61f58e086a6550fc6a80c1ca119e1ce", "commitAfterChange": "b38764da707cc96f96750b2abc87c30eb0ae9f0a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\tif(delta != null) {", "+\t\t\t\t\tif(isAffectedBy(delta)) { // avoid populating for SYNC or MARKER deltas", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tboolean hasExternalJarToRefresh = false;", "-\t\t\t\t\t\tif (this.refreshedElements != null) {", "-\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\thasExternalJarToRefresh = createExternalArchiveDelta(null);", "-\t\t\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\tif (isAffectedBy(delta)) {", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tif (this.refreshedElements != null) {", "+\t\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(null);", "+\t\t\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (delta != null) {", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (hasExternalJarToRefresh) {", "-\t\t\t\t\t\t\t\tthis.manager.fire(null, ElementChangedEvent.POST_CHANGE);", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} finally {", "+\t\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported ", "+\t\t\t\t\t\t\tthis.manager.javaProjectsCache = null;", "+\t\t\t\t\t\t\tthis.removedRoots = null;", "-\t\t\t\t\t} finally {", "-\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported ", "-\t\t\t\t\t\tthis.manager.javaProjectsCache = null;", "-\t\t\t\t\t\tthis.removedRoots = null;"]}], "num": 2808}