{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "146f5b48fb86305af1d1590e51542adf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235ab5692480f30867cb61c6bfdcf37e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "78d640f6bd5ff8e757b4b457bee3d92d7c8352e1", "commitAfterChange": "abfcb7bb2bf20458fc372ec46b98225419a0c876", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 169, "signatureBeforeChange": " public void inheritedMethodReducesVisibility(SourceTypeBinding type, MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "signatureAfterChange": " public void inheritedMethodReducesVisibility(SourceTypeBinding type, MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "diff": ["-public void inheritedMethodReducesVisibility(SourceTypeBinding type, MethodBinding concreteMethod, MethodBinding[] abstractMethods) {", "-\t\ttype.sourceStart(),", "-\t\ttype.sourceEnd());", "+}", "+public void inheritedMethodReducesVisibility(SourceTypeBinding type, MethodBinding concreteMethod, MethodBinding[] abstractMethods) {", "+\tinheritedMethodReducesVisibility(type.sourceStart(), type.sourceEnd(), concreteMethod, abstractMethods);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30930acdb11748f93bbc4eb9dfa5a2b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "af5208ad650bb16626635d58b15cab85ed3b6304", "commitAfterChange": "45055dc97c3da6c433b9c6b3534e9f01054887be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void assertTypesEqual(String message, String expected, IType[] types)", "signatureAfterChange": " protected void assertTypesEqual(String message, String expected, IType[] types)", "diff": ["-\tthis.sortTypes(types);", "+\tassertTypesEqual(message, expected, types, true);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e777b294733f406a55fc358e5ce284", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/AccessRuleSet.java", "commitBeforeChange": "55369835f4de509d18e116254a7a5ee5fbfb9076", "commitAfterChange": "f05031de41d597efaafe7979f6d5919cb0b41f1c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": " \t \tpublic String toString()", "diff": ["+\t\treturn toString(true/*wrap lines*/);", "+\t}", "-\t\tbuffer.append(\"AccessRuleSet {\\n\"); //$NON-NLS-1$", "-\t\t\tbuffer.append('\\t');", "-\t\t\tbuffer.append('\\n');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b129ce4ef5b3e2daa01d2bb7431d4c5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "38cb224047de4121a0ae69054f2ef8e6cd34249a", "commitAfterChange": "053392445b1e4386796a9119a1bee84b8fe1860f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException", "diff": ["-\t\tIMarker marker;", "-\t\t\tmarker = resource.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);", "+\t\t\tIMarker marker = resource.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);", "-\t\t\t\t});", "-\t\t} else {", "-\t\t\tmarker = resource.createMarker(IJavaModelMarker.TASK_MARKER);", "-\t\t\tint priority = IMarker.PRIORITY_NORMAL;", "-\t\t\tString compilerPriority = problem.getArguments()[2];", "-\t\t\tif (JavaCore.COMPILER_TASK_PRIORITY_HIGH.equals(compilerPriority))", "-\t\t\t\tpriority = IMarker.PRIORITY_HIGH;", "-\t\t\telse if (JavaCore.COMPILER_TASK_PRIORITY_LOW.equals(compilerPriority))", "-\t\t\t\tpriority = IMarker.PRIORITY_LOW;", "-\t\t\tmarker.setAttributes(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\tIMarker.MESSAGE, ", "-\t\t\t\t\tIMarker.PRIORITY, ", "-\t\t\t\t\tIMarker.DONE, ", "-\t\t\t\t\tIMarker.CHAR_START, ", "-\t\t\t\t\tIMarker.CHAR_END, ", "-\t\t\t\t\tIMarker.LINE_NUMBER},", "-\t\t\t\tnew Object[] { ", "-\t\t\t\t\tproblem.getMessage(),", "-\t\t\t\t\tnew Integer(priority),", "-\t\t\t\t\tnew Boolean(false),", "-\t\t\t\t\tnew Integer(problem.getSourceStart()),", "-\t\t\t\t\tnew Integer(problem.getSourceEnd() + 1),", "-\t\t\t\t\tnew Integer(problem.getSourceLineNumber()),"]}], "num": 33041}