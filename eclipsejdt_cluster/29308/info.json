{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b88c0102d2e260b9d645347d3f623e5e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f4871d533fc493279ce044f978fb604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "e6009de9b4d4a2d7c4c60a3948647861fa518186", "commitAfterChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate boolean detectCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["-\tprivate boolean detectCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference) {", "+\tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference) {", "-\t\t\t\thasCycle |= detectCycle(sourceType, parentType, reference);", "+\t\t\t\thasCycle |= detectHierarchyCycle(sourceType, parentType, reference);", "-\t\t\t\t\thasCycle |= detectCycle(sourceType, anInterface, reference);", "+\t\t\t\t\thasCycle |= detectHierarchyCycle(sourceType, anInterface, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba52d2bfd8d3e2a3bba964a57362ca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a6c016e4b9174d429d2989715c74cf56e42ef6bb", "commitAfterChange": "c9f804b2e84f02e4cfe425f0463c67be2149642c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "signatureAfterChange": "  \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "diff": ["-\t\t\tif (superType == null) return null;", "-\t", "-\t\t\tcompilationUnitScope().recordSuperTypeReference(superType); // to record supertypes", "-\t\t\tif (superType.isParameterizedType())", "-\t\t\t\treturn superType; // already checked cycle before resolving its type variables", "-", "-\t\t\t// must detect cycles & force connection up the hierarchy... also handle cycles with binary types.", "-\t\t\t// must be guaranteed that the superType knows its entire hierarchy", "-\t\t\tif (detectCycle(referenceContext.binding, superType, typeReference))", "-\t\t\t\treturn null; // cycle error was already reported"]}], "num": 29308}