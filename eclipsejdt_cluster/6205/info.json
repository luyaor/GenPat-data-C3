{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3f59c31ec7b8136f6db43c9a5379531", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5947b35a640a7ce13432d498f03cc57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-protected void decodeIndexEntry(IEntryResult entryResult) {", "-\tchar[] word = entryResult.getWord();", "-\tint size = word.length;", "-", "-\tthis.decodedClassOrInterface = word[TYPE_DECL_LENGTH];", "-\tint oldSlash = TYPE_DECL_LENGTH + 1;", "-\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash + 1);", "-\tthis.decodedPackage = (slash == oldSlash + 1)", "-\t\t? CharOperation.NO_CHAR", "-\t\t: CharOperation.subarray(word, oldSlash + 1, slash);", "-\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "-", "-\tif (slash+1 < size) {", "-\t\tthis.decodedEnclosingTypeNames = (slash + 3 == size && word[slash + 1] == ONE_ZERO[0])", "-\t\t\t? ONE_ZERO_CHAR", "-\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(word, slash+1, size-1));", "-\t} else {", "-\t\tthis.decodedEnclosingTypeNames = CharOperation.NO_CHAR_CHAR;", "-\t}", "-}", "+public void decodeIndexKey(char[] key) {", "+\tint size = key.length;", "+", "+\tthis.classOrInterface = key[0];", "+\tint oldSlash = 1;", "+\tint slash = CharOperation.indexOf(SEPARATOR, key, oldSlash + 1);", "+\tthis.pkg = (slash == oldSlash + 1)", "+\t\t? CharOperation.NO_CHAR", "+\t\t: CharOperation.subarray(key, oldSlash + 1, slash);", "+\tthis.simpleName = CharOperation.subarray(key, slash + 1, slash = CharOperation.indexOf(SEPARATOR, key, slash + 1));", "+", "+\tif (slash+1 < size) {", "+\t\tthis.enclosingTypeNames = (slash + 3 == size && key[slash + 1] == ONE_ZERO[0])", "+\t\t\t? ONE_ZERO_CHAR", "+\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(key, slash+1, size-1));", "+\t} else {", "+\t\tthis.enclosingTypeNames = CharOperation.NO_CHAR_CHAR;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb6dc20541d8c4a3d2ec01e49229eb87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-protected void decodeIndexEntry(IEntryResult entryResult){", "-\tchar[] word = entryResult.getWord();", "-\tint size = word.length;", "+public void decodeIndexKey(char[] key) {", "+\tint size = key.length;", "-\tthis.decodedClassOrInterface = word[TYPE_DECL_LENGTH];", "-\tint oldSlash = TYPE_DECL_LENGTH + 1;", "-\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash + 1);", "+\tthis.classOrInterface = key[0];", "+\tint oldSlash = 1;", "+\tint slash = CharOperation.indexOf(SEPARATOR, key, oldSlash + 1);", "-\t\t: CharOperation.subarray(word, oldSlash+1, slash);", "-\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "+\t\t: CharOperation.subarray(key, oldSlash+1, slash);", "+\tthis.simpleName = CharOperation.subarray(key, slash + 1, slash = CharOperation.indexOf(SEPARATOR, key, slash + 1));", "-\t\tdecodedEnclosingTypeNames = (slash + 3 == size && word[slash + 1] == ONE_ZERO[0])", "+\t\tdecodedEnclosingTypeNames = (slash + 3 == size && key[slash + 1] == ONE_ZERO[0])", "-\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(word, slash + 1, size - 1));", "+\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(key, slash + 1, size - 1));", "-\tthis.decodedQualification = CharOperation.concatWith(pkgName, decodedEnclosingTypeNames, '.');", "+\tthis.qualification = CharOperation.concatWith(pkgName, decodedEnclosingTypeNames, '.');"]}], "num": 6205}