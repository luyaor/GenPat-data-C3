{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74522aea779ae5bace6fa48f46bb59c9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af7b255cb5338071904e0157b13adb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\tSystem.out.print(\"\\tMatch rule: \"); //$NON-NLS-1$", "-\t\tif ((match.getMatchRule() & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "-\t\t\tif ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "-\t\t\t\tSystem.out.println(\"EQUIVALENT + ERASURE\"); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t} else if ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\tSystem.out.print(\"\\tRule: \"); //$NON-NLS-1$", "+\t\tif (match.isExact()) {", "+\t\t\tSystem.out.println(\"EXACT\"); //$NON-NLS-1$", "+\t\t} else if (match.isEquivalent()) {", "+\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t} else if (match.isErasure()) {", "-\t\t\tSystem.out.println(\"PERFECT\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"INVALID RULE\"); //$NON-NLS-1$", "+\t\tSystem.out.println(\"\\tRaw: \"+match.isRaw()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da3c58da39ae48940a9c2ab86545f47b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic void acceptSearchMatch(SearchMatch match) throws CoreException", "signatureAfterChange": " \t\tpublic void acceptSearchMatch(SearchMatch match) throws CoreException", "diff": ["-\t\t\t\t\tswitch (match.getAccuracy()) {", "-\t\t\t\t\t\tcase SearchMatch.A_ACCURATE:", "-\t\t\t\t\t\t\tif (this.showRule) {", "-\t\t\t\t\t\t\t\tint rule = match.getMatchRule();", "-\t\t\t\t\t\t\t\tif ((rule & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "-\t\t\t\t\t\t\t\t\tline.append(\"EQUIVALENT_\");", "-\t\t\t\t\t\t\t\t\tif ((rule & SearchPattern.R_ERASURE_MATCH) != 0)", "-\t\t\t\t\t\t\t\t\t\tline.append(\"ERASURE_\");", "-\t\t\t\t\t\t\t\t} else if ((rule & SearchPattern.R_ERASURE_MATCH) != 0) {", "-\t\t\t\t\t\t\t\t\tline.append(\"ERASURE_\");", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tline.append(\"EXACT_\");", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tline.append(\"MATCH\");", "+\t\t\t\t\tif (match.getAccuracy() == SearchMatch.A_ACCURATE) {", "+\t\t\t\t\t\tif (this.showRule) {", "+\t\t\t\t\t\t\tif (match.isExact()) {", "+\t\t\t\t\t\t\t\tline.append(\"EXACT_\");", "+\t\t\t\t\t\t\t} else if (match.isEquivalent()) {", "+\t\t\t\t\t\t\t\tline.append(\"EQUIVALENT_\");", "+\t\t\t\t\t\t\t} else if (match.isErasure()) {", "+\t\t\t\t\t\t\t\tline.append(\"ERASURE_\");", "-\t\t\t\t\t\t\t\tline.append(\"EXACT_MATCH\");", "+\t\t\t\t\t\t\t\tline.append(\"INVALID_RULE_\");", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase SearchMatch.A_INACCURATE:", "-\t\t\t\t\t\t\tline.append(\"POTENTIAL_MATCH\");", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tif (match.isRaw()) {", "+\t\t\t\t\t\t\t\tline.append(\"RAW_\");", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tline.append(\"EXACT_\");", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tline.append(\"MATCH\");", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tline.append(\"POTENTIAL_MATCH\");"]}], "num": 58849}