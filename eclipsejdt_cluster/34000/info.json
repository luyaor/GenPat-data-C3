{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f11e9ca97050aac3c82e3e0f4ca3ced8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3260cc55468af3a77bbe8c5a6fb38147", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "4020c98214bab208cbde4dc18107a41e64955fa0", "commitAfterChange": "ee8bf0fe9fa07676924688b12f84c7853a8f35be", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\tBinaryTypeBinding focusBinaryBinding = null;", "+\t\tReferenceBinding focusBinaryBinding = null;", "+\t\t", "+\t\t// if no potential subtype was a real subtype of the binary focus type, no need to go further", "+\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=54043)", "+\t\tif (focusBinaryBinding == null && focus != null && focus.isBinary()) {", "+\t\t\tchar[] fullyQualifiedName = focus.getFullyQualifiedName().toCharArray();", "+\t\t\tfocusBinaryBinding = this.lookupEnvironment.getCachedType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\tif (focusBinaryBinding == null) return;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746ab80da4e6f0653ef41685cf5ed806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "4020c98214bab208cbde4dc18107a41e64955fa0", "commitAfterChange": "ee8bf0fe9fa07676924688b12f84c7853a8f35be", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "signatureAfterChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding)", "diff": ["-private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding) {", "+ */", "+private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding) {", "-\t\t} else if (focus.isBinary()) {", "-\t\t\t// may have been resolved indirectly, should then be in type cache", "-\t\t\t// TODO (jerome) review this fix for bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=54043", "-\t\t\tchar[] fullyQualifiedName = focus.getFullyQualifiedName().toCharArray();", "-\t\t\tthis.focusType = this.lookupEnvironment.getCachedType(CharOperation.splitOn('.', fullyQualifiedName));", "-\t\t\tif (this.focusType == null) return;"]}], "num": 34000}