{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79838053fc5c10279db5a18f70c7d6ec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b82a7f7ec7fa5e8519a24e956ad8709b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IntLiteral.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void computeConstant()", "signatureAfterChange": " public void computeConstant()", "diff": ["-\tif (this == One) {\tconstant = Constant.One; return ;}", "+\tif (this == One) {\tconstant = IntConstant.fromValue(1); return ;}", "-\t\tif (length == 1) {\tconstant = Constant.fromValue(0); return ;}", "+\t\tif (length == 1) {\tconstant = IntConstant.fromValue(0); return ;}", "-\t\t\t\tconstant = Constant.fromValue(value = (int)computedValue);", "+\t\t\t\tconstant = IntConstant.fromValue(value = (int)computedValue);", "-\tconstant = Constant.fromValue(value = (int)computedValue);", "+\tconstant = IntConstant.fromValue(value = (int)computedValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf67af2aa16460c683d2580561736d02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LongLiteral.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void computeConstant()", "signatureAfterChange": " public void computeConstant()", "diff": ["-\t\t\tconstant = Constant.fromValue(0L);", "+\t\t\tconstant = LongConstant.fromValue(0L);", "-\t\t\t\tconstant = Constant.fromValue(value = 0L);", "+\t\t\t\tconstant = LongConstant.fromValue(value = 0L);", "-\tconstant = Constant.fromValue(value = computedValue);", "+\tconstant = LongConstant.fromValue(value = computedValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef7828311cab3f381a0de8fce35f665b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "e5e6f9097f2c3bf7294bd658643d6be9f7aaa5ef", "commitAfterChange": "d00bc48524f3df289951f11fca95cb39820be47f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public static final Constant computeConstantOperation(Constant cst, int id, int operator)", "signatureAfterChange": "\r public static final Constant computeConstantOperation(Constant cst, int id, int operator)", "diff": ["-\t\tcase NOT\t: \tif ( cst.booleanValue() == true ) return Constant.fromValue(false);\r", "-\t\t\t\t\t\treturn Constant.fromValue(true);\r", "-\t\tcase PLUS\t:\treturn cst ; //apriori we do not need to clone it\r", "+\t\tcase NOT\t: \t\r", "+\t\t\t\t\t\treturn Constant.fromValue(!cst.booleanValue());\r", "+\t\tcase PLUS\t:\treturn cst ; \r"]}], "num": 6838}