{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae414729583f04085ff08aca43d2c105", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8adcbf6f9282547e5e5d0ad9e03b579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LambdaExpressionsTest.java", "commitBeforeChange": "7b3309da9229750686e478a0bba24cf03c887fb9", "commitAfterChange": "e72851f7c02ccfbc91816922dcb863357cca4426", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " public void test436542() throws Exception", "signatureAfterChange": " public void test436542() throws Exception", "diff": ["-\tString jreDirectory = Util.getJREDirectory();", "-\tString jfxJar = Util.toNativePath(jreDirectory + \"/lib/ext/jfxrt.jar\");", "-\t\t\t\"import javafx.collections.ListChangeListener;\\n\" + ", "-\t\t\t\"import javafx.collections.ObservableList;\\n\" + ", "-\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\"\t\tSystem.out.println(\\\"Success\\\");\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "+\t\t\t\"    public static void main(String[] args) {\\n\" + ", "+\t\t\t\"        System.out.println(\\\"Success\\\");\\n\" + ", "+\t\t\t\"    }\\n\" + ", "-\t\t\t\"    /**\\n\" + ", "-\t\t\t\"     * \\\"Binds\\\" the destination list to the observable source list with a transformation function applied.\\n\" + ", "-\t\t\t\"     * Whenever the source list changes, the destination list is altered to match by applying\\n\" + ", "-\t\t\t\"     * the given function to each element in the source list.\\n\" + ", "-\t\t\t\"     */\\n\" + ", "-\t\t\t\"        dest.clear();\\n\" + ", "-\t\t\t\"            while (changes.next()) {\\n\" + ", "-\t\t\t\"                if (changes.wasPermutated() || changes.wasUpdated()) {\\n\" + ", "-\t\t\t\"                    // Same code for updated, replaced and permutation, just recalc the range:\\n\" + ", "-\t\t\t\"                    for (int i = changes.getFrom(); i < changes.getTo(); i++)\\n\" + ", "-\t\t\t\"                        dest.set(i, func.apply(src.get(i)));\\n\" + ", "-\t\t\t\"                } else {\\n\" + ", "-\t\t\t\"                    for (int i = 0; i < changes.getRemovedSize(); i++)\\n\" + ", "-\t\t\t\"                        dest.remove(changes.getFrom());\\n\" + ", "-\t\t\t\"                    for (int i = 0; i < changes.getAddedSubList().size();i++)\\n\" + ", "-\t\t\t\"                        dest.add(i + changes.getFrom(), func.apply(changes.getAddedSubList().get(i)));\\n\" + ", "-\t\t\t\"                }\\n\" + ", "-\t\t\t\"            }\\n\" + ", "+\t\t\t\"            for (int i = changes.getFrom(); i < changes.getTo(); i++)\\n\" + ", "+\t\t\t\"                dest.set(i, func.apply(src.get(i)));\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    public interface ObservableList<E> extends List<E> {\\n\" + ", "+\t\t\t\"        public void addListener(ListChangeListener<? super E> listener);\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    @FunctionalInterface\\n\" + ", "+\t\t\t\"    public interface ListChangeListener<E> {\\n\" + ", "+\t\t\t\"        public abstract static class Change<E> {\\n\" + ", "+\t\t\t\"            public abstract int getFrom();\\n\" + ", "+\t\t\t\"            public abstract int getTo();\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"        public void onChanged(Change<? extends E> c);\\n\" + ", "-\t\tUtil.concatWithClassLibs(new String[]{jfxJar,OUTPUT_DIR}, false),", "+\t\tUtil.concatWithClassLibs(new String[]{OUTPUT_DIR}, false),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eecdf99de86495bd4675305930596843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "2d9b05bb71b127652760933dafce873a5ec0cb28", "commitAfterChange": "0e036eabfb3d0e92b314882ef7004877396ca0ce", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public void test039()", "signatureAfterChange": " public void test039()", "diff": ["-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" +", "-\t\tFile.separator + \"src2\" +", "-\t\tFile.separator + \"Y.java\\n\" + ", "+\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java\\n\" + ", "-\t\t\"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" +", "-\t\tFile.separator + \"src2\" +", "-\t\tFile.separator + \"Y.java\\n\" + ", "+\t\t\"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java\\n\" + ", "-\t\t\"3. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" +", "-\t\tFile.separator + \"src2\" +", "-\t\tFile.separator + \"Y.java\\n\" + ", "+\t\t\"3. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java\\n\" + ", "-\t\t\"4. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" +", "-\t\tFile.separator + \"src2\" +", "-\t\tFile.separator + \"Y.java\\n\" + ", "+\t\t\"4. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java\\n\" + "]}], "num": 34082}