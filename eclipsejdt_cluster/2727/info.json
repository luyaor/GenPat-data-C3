{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48e4dd55a789f8033215dd660b0209aa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3942df4d9676854dfed05ade2c0f599a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AstNode.java", "commitBeforeChange": "eda0d2ebba486b7670a29ef73a4bc1f60b2dd48f", "commitAfterChange": "334d154ee7a7468d74205b6124c3abdc73bd30b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope)", "signatureAfterChange": " \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope)", "diff": ["-\t\treturn field.isViewedAsDeprecated()", "-\t\t\t&& !scope.isDefinedInSameUnit(field.declaringClass);", "+\t\tif (!field.isViewedAsDeprecated()) return false;", "+", "+\t\t// inside same unit - no report", "+\t\tif (scope.isDefinedInSameUnit(field.declaringClass)) return false;", "+\t\t", "+\t\t// if context is deprecated, may avoid reporting", "+\t\tif (!scope.environment().options.reportDeprecationInsideDeprecatedCode && scope.isInsideDeprecatedCode()) return false;", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb2cfea4c102d9e6b290dbb20fc65e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AstNode.java", "commitBeforeChange": "eda0d2ebba486b7670a29ef73a4bc1f60b2dd48f", "commitAfterChange": "334d154ee7a7468d74205b6124c3abdc73bd30b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope)", "signatureAfterChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope)", "diff": ["-\t\treturn method.isViewedAsDeprecated()", "-\t\t\t&& !scope.isDefinedInSameUnit(method.declaringClass);", "+", "+\t\tif (!method.isViewedAsDeprecated()) return false;", "+", "+\t\t// inside same unit - no report", "+\t\tif (scope.isDefinedInSameUnit(method.declaringClass)) return false;", "+\t\t", "+\t\t// if context is deprecated, may avoid reporting", "+\t\tif (!scope.environment().options.reportDeprecationInsideDeprecatedCode && scope.isInsideDeprecatedCode()) return false;", "+\t\treturn true;"]}], "num": 2727}