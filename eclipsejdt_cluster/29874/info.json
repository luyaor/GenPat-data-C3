{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2eadd8a2fbb80d6eabba786ba381a24d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f776c4ee9c6d4fb059236c5b2561bb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "fbfdac6d7ce3e57d87b2a41c24ca19b307df27cb", "commitAfterChange": "1f2bb3880562da32cc48ce4bb6e920301c0ee336", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["-", "-\t\t\t\t// remember timestamp of jars that were removed (in case they are added as external jar in the same operation)", "-\t\t\t\tfor (int j = 0, length = pkgFragmentRoots.length; j < length; j++) {", "-\t\t\t\t\tPackageFragmentRoot root = pkgFragmentRoots[j];", "-\t\t\t\t\tif (root.isArchive() && !root.isExternal()) {", "-\t\t\t\t\t\tURI location = root.resource().getLocationURI();", "-\t\t\t\t\t\tFile file = null;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tIFileStore fileStore = EFS.getStore(location);", "-\t\t\t\t\t\t\tfile = fileStore.toLocalFile(EFS.NONE, null);", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\t// continue", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (file == null)", "-\t\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t\tlong timeStamp = DeltaProcessor.getTimeStamp(file);", "-\t\t\t\t\t\tIPath externalPath = new org.eclipse.core.runtime.Path(file.getAbsolutePath());", "-\t\t\t\t\t\tstate.getExternalLibTimeStamps().put(externalPath, new Long(timeStamp));", "-\t\t\t\t\t}", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa7c717038cbbf6a9c4e1559f9356d0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexedFile.java", "commitBeforeChange": "741bf55b52d5676bf4be39f83254215d83172c64", "commitAfterChange": "4829608740e6817504fd33b0b1b3896be537e268", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic IndexedFile(String pathOrInfo, int fileNum)", "signatureAfterChange": "  \tpublic IndexedFile(String path, int fileNum)", "diff": ["-\tpublic IndexedFile(String pathOrInfo, int fileNum) {", "+\tpublic IndexedFile(String path, int fileNum) {", "-\t\tthis.properties= null; // initialized when needed", "-\t\tint dp= pathOrInfo.indexOf(INFO_BEGIN);", "-\t\tif (dp == -1)", "-\t\t\tpath= pathOrInfo;", "-\t\telse {", "-\t\t\tString fileInfo= pathOrInfo;", "-\t\t\tpath= fileInfo.substring(0, dp);", "-\t\t\tString props= fileInfo.substring(dp, fileInfo.length());", "-\t\t\tStringTokenizer t= new StringTokenizer(props.substring(1, props.length() - 1), INFO_SEPARATOR);", "-\t\t\twhile (t.hasMoreTokens()) {", "-\t\t\t\tString g= t.nextToken();", "-\t\t\t\ttry {", "-\t\t\t\t\tint dpt= g.indexOf(INFO_VALUE_SEPARATOR);", "-\t\t\t\t\tsetProperty(g.substring(0, dpt), g.substring(dpt + 1, g.length()));", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\tthis.path= path;"]}], "num": 29874}