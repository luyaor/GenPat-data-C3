{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51c803d9a8a840a5648eecc1b2d2f25f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20969a35d2443c429635323b90b77269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "ed45f69d40b17b59915e726fa4a306f40a296886", "commitAfterChange": "3168f520c145ac4dd47d54a812acd1c888ed8ea9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType)", "signatureAfterChange": " \t \tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType)", "diff": ["-\t\tthis.valueIfTrue.checkAgainstFinalTargetType(targetType);", "-\t\tthis.valueIfFalse.checkAgainstFinalTargetType(targetType);", "-\t\tthis.resolvedType = targetType;", "-\t\treturn targetType;", "+\t\tif (isPolyExpression()) {", "+\t\t\tthis.valueIfTrue.checkAgainstFinalTargetType(targetType);", "+\t\t\tthis.valueIfFalse.checkAgainstFinalTargetType(targetType);", "+\t\t\tthis.resolvedType = targetType;", "+\t\t}", "+\t\treturn this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3690937e093224d9a3145fa6b8b8d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BinaryFileOutputStream.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate void saveToDisk(InputStream toSave, boolean create) throws IOException", "signatureAfterChange": " \t \tprivate void saveToDisk(InputStream toSave, boolean create) throws IOException", "diff": ["-\t\t\tAptPlugin.log(ce, \"Could not create generated file\"); //$NON-NLS-1$", "-\t\t\tthrow new IOException(ce.getMessage());", "+\t\t\tif (_file.exists()) {", "+\t\t\t\t// Do nothing. This is a case-insensitive file system mismatch,", "+\t\t\t\t// and the underlying platform has saved the contents already.", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tAptPlugin.log(ce, \"Could not create generated file\"); //$NON-NLS-1$", "+\t\t\t\tthrow new IOException(ce.getMessage());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5687da50af4246ea64d3f255ad6b7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t// default is to report a match as a regular ref.", "-\tthis.matchReportReference(importRef, element, accuracy, locator);", "+\tif (locator.encloses(element)) {", "+\t\t// default is to report a match as a regular ref.", "+\t\tthis.matchReportReference(importRef, element, accuracy, locator);", "+\t}"]}], "num": 50337}