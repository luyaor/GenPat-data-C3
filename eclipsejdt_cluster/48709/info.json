{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "502723d3b5c47eedcb7e45be7421c0d5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b9474e82dd983b2f02eda0fb86bedb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "1b07739f9c8457dbcb0b9d2fe79d964b9c57b61f", "commitAfterChange": "b04265304d1dc524aca72cb541df0fdc355d218a", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "diff": ["+\t\t\ttypeInfo.anonymousMember = typeDeclaration.allocation != null && typeDeclaration.allocation.enclosingInstance != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845ad60837576fa82173442716af8ad8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "83a8a3171c136f3d1c745fbc6bc7fb39eeacdff1", "commitAfterChange": "7cbfac0f262651a92552aa1b245acf5ef1db3bb0", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  @Override protected void consumeReferenceExpression(ReferenceExpression referenceExpression)", "signatureAfterChange": "  @Override protected void consumeReferenceExpression(ReferenceExpression referenceExpression)", "diff": ["+\t} else if ((this.patternFineGrain & IJavaSearchConstants.METHOD_REFERENCE_EXPRESSION) != 0) {", "+\t\tthis.patternLocator.match(referenceExpression, this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b04bdfd15e5feefc8f0e7cce1f549423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "commitAfterChange": "447dafd45d9eea3d096b0cc1d1d11fe893f03ec0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public MatchLocator( \tSearchPattern pattern, \tSearchRequestor requestor, \tIJavaSearchScope scope, \tIProgressMonitor progressMonitor)", "signatureAfterChange": "  public MatchLocator( \tSearchPattern pattern, \tSearchRequestor requestor, \tIJavaSearchScope scope, \tIProgressMonitor progressMonitor)", "diff": ["+\tthis.patternFineGrain = this.patternLocator == null ? 0 : this.patternLocator.fineGrain();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc89072c540fc7430b85b480045fdafa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ImportMatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  protected ImportMatchLocatorParser(ProblemReporter problemReporter, MatchLocator locator)", "signatureAfterChange": "  protected ImportMatchLocatorParser(ProblemReporter problemReporter, MatchLocator locator)", "diff": ["+", "+\tthis.reportImportMatch = this.patternFineGrain == 0 || (this.patternFineGrain & IJavaSearchConstants.IMPORT_DECLARATION_TYPE_REFERENCE) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "def9a2dfb52efc0817b2af1eb6846ce9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "cbbe8b69b29b99c8c679b98644156abe11f1564d", "commitAfterChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " public boolean matchesDecodedKey(SearchPattern decodedPattern)", "signatureAfterChange": " public boolean matchesDecodedKey(SearchPattern decodedPattern)", "diff": ["-\treturn matchesName(this.simpleName, pattern.simpleName) && matchesName(this.qualification, pattern.qualification);", "+\treturn matchesName(this.simpleName, pattern.simpleName) &&", "+\t\t(this.qualification == null || this.packagePattern == null || this.packagePattern.matchesName(this.qualification, pattern.qualification));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e90adfd474d2751609b77349da6164cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CommentRecorderParser.java", "commitBeforeChange": "6defd2b79520062f5150164ded77c2d030acc168", "commitAfterChange": "d351702f3561d64a024c15ffbed0faad48ce2838", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void checkComment()", "signatureAfterChange": " \tpublic void checkComment()", "diff": ["+\t\t\t// do not report problem before last parsed comment while recovering code...", "+\t\t\tthis.javadocParser.reportProblems = this.currentElement == null || commentSourceEnd > this.lastJavadocEnd;", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffccd15d9813e8fe938fb6db4409d57b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "b70c37ecf76f05e7ae76a32ba47dec687904996c", "commitAfterChange": "991f76a3733441af275e22b3c172d2ee3c84bb0e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void updateDocComment()", "signatureAfterChange": " \tprotected void updateDocComment()", "diff": ["-\t\t// Set inherited positions", "+\t\t// Set positions", "+\t\tthis.docComment.valuePositions = this.validValuePositions != -1 ? this.validValuePositions : this.invalidValuePositions;"]}], "num": 48709}