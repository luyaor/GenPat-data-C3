{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b33bb5dea29d4913451f26c7ee315891", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f4c83113a17c3128b4dba3e2ad76902", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "b32bff89b335f9213e72a23b143872f67ac07452", "commitAfterChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve, boolean invisibleFieldsOk)", "diff": ["-\tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve) {", "+\tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve, boolean invisibleFieldsOk) {", "+\t\t\tif (invisibleFieldsOk) {", "+\t\t\t\treturn field;", "+\t\t\t}", "+\t\t\t\tif (invisibleFieldsOk) {", "+\t\t\t\t\treturn field;", "+\t\t\t\t}", "+\t\t\t\t\tif (invisibleFieldsOk) {", "+\t\t\t\t\t\treturn field;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a35108b63fcc17900dd6ba7fee5695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f3bba67d7292a507e1b3691e11f35ff1c9658d01", "commitAfterChange": "5ba107df633d1beada69a1a39d8b4efe7c8b77f6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tpublic FieldBinding findField(\r \t\tTypeBinding receiverType,\r \t\tchar[] fieldName,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite)", "diff": ["-\tpublic FieldBinding findField(\r", "-\t\tTypeBinding receiverType,\r", "-\t\tchar[] fieldName,\r", "-\t\tInvocationSite invocationSite) {\r", "-\t\tif (receiverType.isBaseType())\r", "-\t\t\treturn null;\r", "+\tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite) {\r", "+\t\tif (receiverType.isBaseType()) return null;\r", "+\r", "+// replaces call to addTypeReference which should be here\r", "+\t\tcompilationUnitScope().recordTypeReference(receiverType);\r", "+\r", "+\r", "+\r"]}], "num": 25672}