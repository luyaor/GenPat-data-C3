{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "321c33ca4216ca79af43030d5ae9603b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56066b1d6040fcc6421d9e4d8ec0a437", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " public void test401789_401790a()", "signatureAfterChange": " public void test401789_401790a()", "diff": ["-\t\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\t\"\tthis(X::goo);\\n\" + ", "-\t\t\t\t\"\t     ^^^^^^\\n\" + ", "-\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\t\"4. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\t\"5. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\t\"\tfoo(X::goo);\\n\" + ", "-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"6. ERROR in X.java (at line 19)\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\t\t\"7. ERROR in X.java (at line 20)\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 20)\\n\" + ", "-\t\t\t\t\"8. ERROR in X.java (at line 20)\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 20)\\n\" + ", "-\t\t\t\t\"9. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 21)\\n\" + ", "-\t\t\t\t\"10. ERROR in X.java (at line 26)\\n\" + ", "+\t\t\t\t\"8. ERROR in X.java (at line 26)\\n\" + ", "-\t\t\t\t\"11. ERROR in X.java (at line 26)\\n\" + ", "-\t\t\t\t\"\tsuper(X::goo);\\n\" + ", "-\t\t\t\t\"\t      ^^^^^^\\n\" + ", "-\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"12. ERROR in X.java (at line 29)\\n\" + ", "+\t\t\t\t\"9. ERROR in X.java (at line 29)\\n\" + ", "-\t\t\t\t\"13. ERROR in X.java (at line 31)\\n\" + ", "+\t\t\t\t\"10. ERROR in X.java (at line 31)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de69af8b77050facb67b7b4455bbc4c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "72398fb1bfc9de8f8d1c235c08849e28d61cb9f4", "commitAfterChange": "a52f17f8883dd812875c341ff752527a9011d961", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": " public void test401939b()", "signatureAfterChange": " public void test401939b()", "diff": ["-\t\t\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { while (TRUE) throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 16)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { while (NIJAM) throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 17)\\n\" + ", "-\t\t\t\t\"5. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { if (TRUE) throw new Exception(); else throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"6. ERROR in X.java (at line 19)\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\t\t\"7. ERROR in X.java (at line 20)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { if (true) throw new Exception(); else throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"8. ERROR in X.java (at line 21)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { if (false) throw new Exception(); else throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"9. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 22)\\n\" + "]}], "num": 4651}