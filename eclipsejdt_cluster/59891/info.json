{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "112642c7d5f0083fecb130d447547b97", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed2c117496849b0e6ee0c993fca9de5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "fe024fd7797ce73b0a83969f685073606863b79e", "commitAfterChange": "124641ac651bbea2bd062a9605817d39b473bf0e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\tCompilationUnit compilationUnit = new CompilationUnit(source, name);", "+\t\tthis.compilationUnit = new CompilationUnit(source, name);", "-\t\t\tthis.cu = parser.parseCompilationUnit(compilationUnit, true/*full parse*/, null/*no progress*/);", "-\t\t\t// this.document.shouldIndexResolvedDocument = this.cu.hasFunctionalTypes();", "+\t\t\tif (parser.parseCompilationUnit(this.compilationUnit, true, null).hasFunctionalTypes())", "+\t\t\t\tthis.document.requireIndexingResolvedDocument();", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b832c190dcec2c48618977ff52de6df8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "commitAfterChange": "6917637e4d94d6b430f2f9b2341abe83418f5e26", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic boolean equals(Object o)", "signatureAfterChange": " \t \tpublic boolean equals(Object o)", "diff": ["-\t\t\tCompilationUnit thisCU = (CompilationUnit) this.getCompilationUnit();", "-\t\t\tCompilationUnit thatCU = (CompilationUnit) that.getCompilationUnit();", "-\t\t\treturn thisCU.getElementName().equals(thatCU.getElementName()) && thisCU.parent.equals(thatCU.parent);", "+\t\t\tITypeRoot thisTR = this.getTypeRoot();", "+\t\t\tITypeRoot thatTR = that.getTypeRoot();", "+\t\t\treturn thisTR.getElementName().equals(thatTR.getElementName()) && thisTR.getParent().equals(thatTR.getParent());"]}], "num": 59891}