{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9a69ae45fc641966de207964ef767f8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6913b4df3fde76f405df2bbd0bc98100", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/DeleteTests.java", "commitBeforeChange": "e7fbe3d2e46c3f4c5a40be9178ef6e8a36680f90", "commitAfterChange": "01f17876d50bd632100cd19774bf74ad112ea3f6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testDeleteMultipleMembersFromVariousCUs() throws CoreException", "signatureAfterChange": " public void testDeleteMultipleMembersFromVariousCUs() throws CoreException", "diff": ["-\tcreateFolder(\"P/a/b/c\");", "-\tcreateFile(", "-\t\t\"P/a/b/c/X.java\",", "-\t\t\"package a.b.c;\\n\" +", "-\t\t\"import java.util.Vector;\\n\" +", "-\t\t\"import java.util.Enumeration;\\n\" +", "-\t\t\"public class X {\\n\" +", "-\t\t\"  public static void main(String[] args) {\\n\" +", "-\t\t\"    System.out.println(\\\"Hello World\\\");\\n\" +", "-\t\t\"  }\\n\" +", "-\t\t\"  static class Bar {\\n\" +", "-\t\t\"    private final java.lang.String test = \\\"testminor\\\";\\n\" +", "-\t\t\"    public Bar() {\\n\" +", "-\t\t\"      super();\\n\" +", "-\t\t\"    }\\n\" +", "-\t\t\"    private void test() {\\n\" +", "-\t\t\"    }\\n\" +", "-\t\t\"  }\\n\" +", "-\t\t\"}\"", "-\t);", "-\tcreateFile(", "-\t\t\"P/a/b/Y.java\",", "-\t\t\"package a.b;\\n\" +", "-\t\t\"public class Y {\\n\" +", "-\t\t\"  int foo;\\n\" +", "-\t\t\"  public static void main(String[] args) {\\n\" +", "-\t\t\"    System.out.println(\\\"Hello World\\\");\\n\" +", "-\t\t\"  }\\n\" +", "-\t\t\"}\"", "-\t);", "-\t", "-\t// elements to be deleted:", "-\t// from a/b/c/X.java:", "-\t//   java.util.Vector", "-\t//\t  main", "-\t//   Bar (inner type)", "-\t//\t    Bar (constructor)", "-\t//\t    test", "-\t//   Bar (inner type, same as above)", "-", "-\t// from a/b/Y.java", "-\t//   foo", "-\t//   main", "-\t", "-\tICompilationUnit cuX = getCompilationUnit(\"P/a/b/c/X.java\");", "-\tIType typeX = cuX.getType(\"X\");", "-\tIType typeBar = typeX.getType(\"Bar\");", "-", "-\tIJavaElement[] toBeDeleted = new IJavaElement[8];", "-\ttoBeDeleted[0] = cuX.getImport(\"java.util.Vector\");", "-\ttoBeDeleted[1] = typeX.getMethod(\"main\", new String[] {\"[QString;\"});", "-\ttoBeDeleted[2] = typeBar;", "-\ttoBeDeleted[3] = typeBar.getMethod(\"Bar\", new String[] {});", "-\ttoBeDeleted[4] = typeBar.getMethod(\"test\", new String[] {});", "-\ttoBeDeleted[5] = typeBar;", "-\t", "-\tICompilationUnit cuY = getCompilationUnit(\"P/a/b/Y.java\");", "-\tIType typeY = cuY.getType(\"Y\");", "-\t", "-\ttoBeDeleted[6] = typeY.getField(\"foo\");", "-\ttoBeDeleted[7] = typeY.getMethod(\"main\", new String[] {\"[QString;\"});", "-\t", "+\t\tcreateFolder(\"P/a/b/c\");", "+\t\tcreateFile(", "+\t\t\t\"P/a/b/c/X.java\",", "+\t\t\t\"package a.b.c;\\n\" +", "+\t\t\t\"import java.util.Vector;\\n\" +", "+\t\t\t\"import java.util.Enumeration;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"  public static void main(String[] args) {\\n\" +", "+\t\t\t\"    System.out.println(\\\"Hello World\\\");\\n\" +", "+\t\t\t\"  }\\n\" +", "+\t\t\t\"  static class Bar {\\n\" +", "+\t\t\t\"    private final java.lang.String test = \\\"testminor\\\";\\n\" +", "+\t\t\t\"    public Bar() {\\n\" +", "+\t\t\t\"      super();\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"    private void test() {\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"  }\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tcreateFile(", "+\t\t\t\"P/a/b/Y.java\",", "+\t\t\t\"package a.b;\\n\" +", "+\t\t\t\"public class Y {\\n\" +", "+\t\t\t\"  int foo;\\n\" +", "+\t\t\t\"  public static void main(String[] args) {\\n\" +", "+\t\t\t\"    System.out.println(\\\"Hello World\\\");\\n\" +", "+\t\t\t\"  }\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\t", "+\t\t// elements to be deleted:", "+\t\t// from a/b/c/X.java:", "+\t\t//   java.util.Vector", "+\t\t//\t  main", "+\t\t//   Bar (inner type)", "+\t\t//\t    Bar (constructor)", "+\t\t//\t    test", "+\t\t//   Bar (inner type, same as above)", "+\t", "+\t\t// from a/b/Y.java", "+\t\t//   foo", "+\t\t//   main", "+\t\t", "+\t\tICompilationUnit cuX = getCompilationUnit(\"P/a/b/c/X.java\");", "+\t\tIType typeX = cuX.getType(\"X\");", "+\t\tIType typeBar = typeX.getType(\"Bar\");", "+\t", "+\t\tIJavaElement[] toBeDeleted = new IJavaElement[8];", "+\t\ttoBeDeleted[0] = cuX.getImport(\"java.util.Vector\");", "+\t\ttoBeDeleted[1] = typeX.getMethod(\"main\", new String[] {\"[QString;\"});", "+\t\ttoBeDeleted[2] = typeBar;", "+\t\ttoBeDeleted[3] = typeBar.getMethod(\"Bar\", new String[] {});", "+\t\ttoBeDeleted[4] = typeBar.getMethod(\"test\", new String[] {});", "+\t\ttoBeDeleted[5] = typeBar;", "+\t\t", "+\t\tICompilationUnit cuY = getCompilationUnit(\"P/a/b/Y.java\");", "+\t\tIType typeY = cuY.getType(\"Y\");", "+\t\t", "+\t\ttoBeDeleted[6] = typeY.getField(\"foo\");", "+\t\ttoBeDeleted[7] = typeY.getMethod(\"main\", new String[] {\"[QString;\"});", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b7a8205f12258c49218029c37d129e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTests.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t} else {", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectFieldType1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectFieldType2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectFieldType3\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectLocalVariableType1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectLocalVariableType2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectImport1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectImport2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectImport3\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperClass1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperClass2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperInterface1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperInterface2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectException1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectException2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectMethod1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectMethod2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectField1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectField2\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectLocalVariable1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectArgument1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectReturnType1\"));", "-\t\tsuite.addTest(new CodeCorrectionTests(\"testCorrectReturnType2\"));", "-\t\t", "-\t\treturn suite;", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectFieldType1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectFieldType2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectFieldType3\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectLocalVariableType1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectLocalVariableType2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectImport1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectImport2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectImport3\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperClass1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperClass2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperInterface1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectSuperInterface2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectException1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectException2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectMethod1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectMethod2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectField1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectField2\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectLocalVariable1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectArgument1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectReturnType1\"));", "+\tsuite.addTest(new CodeCorrectionTests(\"testCorrectReturnType2\"));", "+", "+\treturn suite;"]}], "num": 53573}