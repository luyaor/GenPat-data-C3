{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d1322f3e86ad3ee0f46bfff0e2cf8dc", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "486144cd78b7c19346b4f233804be4ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public int literalIndex(long key)", "signatureAfterChange": " public int literalIndex(long key)", "diff": ["+\t\tif (currentOffset + 8 >= poolContent.length) {", "+\t\t\tresizePoolContents(8);", "+\t\t}", "-\t\t\ttry {", "-\t\t\t\tpoolContent[currentOffset++] = (byte) (key >>> (56 - (i << 3)));", "-\t\t\t} catch (IndexOutOfBoundsException e) { //currentOffset has been ++ already (see the -1)", "-\t\t\t\tint length = poolContent.length;", "-\t\t\t\tSystem.arraycopy(poolContent, 0, (poolContent = new byte[(length << 1) + CONSTANTPOOL_INITIAL_SIZE]), 0, length);", "-\t\t\t\tpoolContent[currentOffset - 1] = (byte) (key >>> (56 - (i << 3)));", "-\t\t\t}", "+\t\t\tpoolContent[currentOffset++] = (byte) (key >>> (56 - (i << 3)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b6565c4c08b21f01db3c1601f0b8112", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public int literalIndex(float key)", "signatureAfterChange": " public int literalIndex(float key)", "diff": ["+\t\tif (currentOffset + 4 >= poolContent.length) {", "+\t\t\tresizePoolContents(4);", "+\t\t}", "-\t\t\ttry {", "-\t\t\t\tpoolContent[currentOffset++] = (byte) (temp >>> (24 - i * 8));", "-\t\t\t} catch (IndexOutOfBoundsException e) { //currentOffset has been ++ already (see the -1)", "-\t\t\t\tint length = poolContent.length;", "-\t\t\t\tSystem.arraycopy(poolContent, 0, (poolContent = new byte[length * 2 + CONSTANTPOOL_INITIAL_SIZE]), 0, length);", "-\t\t\t\tpoolContent[currentOffset - 1] = (byte) (temp >>> (24 - i * 8));", "-\t\t\t}", "+\t\t\tpoolContent[currentOffset++] = (byte) (temp >>> (24 - i * 8));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba7b3e0be4f57d4114df48a6d4b97f50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public int literalIndex(double key)", "signatureAfterChange": " public int literalIndex(double key)", "diff": ["+\t\tint length = poolContent.length;", "+\t\tif (currentOffset + 8 >= length) {", "+\t\t\tresizePoolContents(8);", "+\t\t}", "-\t\t\ttry {", "-\t\t\t\tpoolContent[currentOffset++] = (byte) (temp >>> (56 - (i << 3)));", "-\t\t\t} catch (IndexOutOfBoundsException e) { //currentOffset has been ++ already (see the -1)", "-\t\t\t\tint length = poolContent.length;", "-\t\t\t\tSystem.arraycopy(poolContent, 0, (poolContent = new byte[(length << 1) + CONSTANTPOOL_INITIAL_SIZE]), 0, length);", "-\t\t\t\tpoolContent[currentOffset - 1] = (byte) (temp >>> (56 - (i << 3)));", "-\t\t\t}", "+\t\t\tpoolContent[currentOffset++] = (byte) (temp >>> (56 - (i << 3)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c03c8dc1197921abe739cbdb7407ee64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public int literalIndex(int key)", "signatureAfterChange": " public int literalIndex(int key)", "diff": ["+\t\tif (currentOffset + 4 >= poolContent.length) {", "+\t\t\tresizePoolContents(4);", "+\t\t}", "-\t\t\ttry {", "-\t\t\t\tpoolContent[currentOffset++] = (byte) (key >>> (24 - i * 8));", "-\t\t\t} catch (IndexOutOfBoundsException e) { //currentOffset has been ++ already (see the -1)", "-\t\t\t\tint length = poolContent.length;", "-\t\t\t\tSystem.arraycopy(poolContent, 0, (poolContent = new byte[length * 2 + CONSTANTPOOL_INITIAL_SIZE]), 0, length);", "-\t\t\t\tpoolContent[currentOffset - 1] = (byte) (key >>> (24 - i * 8));", "-\t\t\t}", "+\t\t\tpoolContent[currentOffset++] = (byte) (key >>> (24 - i * 8));"]}], "num": 14839}