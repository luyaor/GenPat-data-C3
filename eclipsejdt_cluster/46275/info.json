{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "941a082b9f9edb9ee38c79f764beb07c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf5245f406a7431a4af0c3e85ea7027", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 247, "signatureBeforeChange": "\t\t \tpublic void test243()", "signatureAfterChange": "\t\t \tpublic void test243()", "diff": ["-\t\t\t\t\"    public A foo() { return this; }\\n\" +", "+\t\t\t\t\"    @Override public A foo() { return this; }\\n\" +", "-\t\t\t\t\"    public X foo() { return new X(); }\\n\" +", "-\t\t\t\t\"    public B foo() { return this; }\\n\" +", "+\t\t\t\t\"    @Override public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\"    @Override public B foo() { return this; }\\n\" +", "-\t\t\t\t\"    public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\"    @Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\"1. WARNING in SubTypes.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic A foo() { return this; }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "-\t\t\t\"The method foo() of type A should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in SubTypes.java (at line 5)\\n\" + ", "-\t\t\t\"\tpublic X foo() { return new X(); }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\"3. ERROR in SubTypes.java (at line 6)\\n\" + ", "-\t\t\t\"\tpublic B foo() { return this; }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" + ", "+\t\t\t\"\t@Override public B foo() { return this; }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\"4. ERROR in SubTypes.java (at line 9)\\n\" + ", "-\t\t\t\"\tpublic X foo() { return new X(); }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" + ", "+\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e089f129ab763aad44f5bb100a29971", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "32f757dfe8da946b3f43d9a2940c80a3241b7487", "commitAfterChange": "362a367dfb78f3dcbcec97d2d2301a9c64da2876", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic void _test052()", "signatureAfterChange": " \tpublic void test052a()", "diff": ["-\tpublic void _test052() {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=91728", "+\tpublic void test052a() {", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"public class A<T> {\\n\" + ", "-\t\t\t\t\"\tpublic <U> A<U> test() { return null; }\\n\" + ", "-\t\t\t\t\"\tpublic <U> A<U> test2() { return null; }\\n\" + ", "-\t\t\t\t\"\tpublic <U> A<U> test3() { return null; }\\n\" + ", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class B extends A<X> {\\n\" + ", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"A.java\",", "+\t\t\t\t\t\"public class A<T> {\\n\" + ", "+\t\t\t\t\t\"\tpublic <U> A<U> test() { return null; }\\n\" + ", "+\t\t\t\t\t\"\tpublic <U> A<U> test2() { return null; }\\n\" + ", "+\t\t\t\t\t\"\tpublic <U> A<U> test3() { return null; }\\n\" + ", "+\t\t\t\t\t\"}\\n\" +", "+\t\t\t\t\t\"class B extends A<X> {\\n\" + ", "+\t\t\t\t\t\"\t@Override public B test() { return null; }\\n\" + ", "+\t\t\t\t\t\"\t@Override public A test2() { return null; }\\n\" + ", "+\t\t\t\t\t\"\t@Override public A<X> test3() { return null; }\\n\" + ", "+\t\t\t\t\t\"}\\n\" +", "+\t\t\t\t\t\"class X{}\\n\"", "+\t\t\t\t},", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in A.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t                 ^\\n\" + ", "+\t\t\t\t\"Type safety: The return type B for test() from the type B needs unchecked conversion to conform to A<Object> from the type A<X>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in A.java (at line 8)\\n\" + ", "+\t\t\t\t\"\t                 ^\\n\" + ", "+\t\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in A.java (at line 8)\\n\" + ", "+\t\t\t\t\"\t@Override public A test2() { return null; }\\n\" + ", "+\t\t\t\t\"\t                 ^\\n\" + ", "+\t\t\t\t\"Type safety: The return type A for test2() from the type B needs unchecked conversion to conform to A<U> from the type A<T>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in A.java (at line 9)\\n\" + ", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class X{}\\n\"", "-\t\t\t},", "-\t\t\t\"1. WARNING in A.java (at line 7)\\r\\n\" + ", "-\t\t\t\"\t@Override public B test() { return null; }\\r\\n\" + ", "-\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\"Type safety: The return type B for test() from the type B needs unchecked conversion to conform to A<U> from the type A<T>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in A.java (at line 8)\\n\" + ", "-\t\t\t\"\t@Override public A test2() { return null; }\\n\" + ", "-\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\"Type safety: The return type A for test2() from the type B needs unchecked conversion to conform to A<U> from the type A<T>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in A.java (at line 9)\\r\\n\" + ", "-\t\t\t\"\t@Override public A<X> test3() { return null; }\\r\\n\" + ", "-\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\"Type safety: The return type A<X> for test3() from the type B needs unchecked conversion to conform to A<U> from the type A<T>\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t\t// warning: test() in B overrides <U>test() in A; return type requires unchecked conversion", "-\t\t\t// warning: test2() in B overrides <U>test2() in A; return type requires unchecked conversion", "-\t\t\t// warning: test3() in B overrides <U>test3() in A; return type requires unchecked conversion", "-\t\t);", "+\t\t\t\t\"\t                 ^\\n\" + ", "+\t\t\t\t\"Type safety: The return type A<X> for test3() from the type B needs unchecked conversion to conform to A<Object> from the type A<X>\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t\t// warning: test() in B overrides <U>test() in A; return type requires unchecked conversion", "+\t\t\t\t// warning: test2() in B overrides <U>test2() in A; return type requires unchecked conversion", "+\t\t\t\t// warning: test3() in B overrides <U>test3() in A; return type requires unchecked conversion", "+\t\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "affd51c2fb8558b791e0f30b8ef3a20e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "332f2b4bbc61519d48f9e1634468f589fe6ec357", "commitAfterChange": "1dac44e6f5251febeac5322fb143c153ef780c6a", "methodNumberBeforeChange": 636, "methodNumberAfterChange": 636, "signatureBeforeChange": " \tpublic void test632()", "signatureAfterChange": " \tpublic void test632()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tlhs.add(rhs.get(0));\\n\" + ", "-\t\t\t\"\t    ^^^\\n\" + ", "-\t\t\t\"The method add(capture-of ? super Object[]) in the type Vector<capture-of ? super Object[]> is not applicable for the arguments (capture-of ? extends Object[])\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 17)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 22)\\n\" + "]}], "num": 46275}