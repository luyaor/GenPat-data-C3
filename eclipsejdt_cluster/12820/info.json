{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52c2c137b6711d04572ec1fced5d65fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "136680dd3cb254b2d3159a356be0fa96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "\r \r \tprotected void consumeExitVariableWithoutInitialization()", "signatureAfterChange": "\r protected void consumeExitVariableWithoutInitialization()", "diff": ["-\r", "-\tprotected void consumeExitVariableWithoutInitialization() {\r", "-\t\t// ExitVariableWithoutInitialization ::= $empty\r", "-\t\t// do nothing by default\r", "-\t}\r", "+}\r", "+protected void consumeExitVariableWithoutInitialization() {\r", "+\t// ExitVariableWithoutInitialization ::= $empty\r", "+\t// do nothing by default\r", "+\t((AbstractVariableDeclaration) astStack[astPtr]).declarationSourceEnd = scanner.currentPosition - 1;\t\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada2597c58f8ecd6de4b624a343757d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope)", "signatureAfterChange": " protected void consumeLocalVariableDeclaration()", "diff": ["-\tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope) {", "-\t\tpatternLocator.match(localDeclaration, nodeSet);", "-\t\treturn true;", "-\t}", "+protected void consumeLocalVariableDeclaration() {", "+\tsuper.consumeLocalVariableDeclaration();", "+", "+\t// this is always a LocalDeclaration", "+\tthis.patternLocator.match((LocalDeclaration) this.astStack[this.astPtr], this.nodeSet);", "+}"]}], "num": 12820}