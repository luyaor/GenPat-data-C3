{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07b8a053009cce2ac26f1749c60bc707", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b86585f939e342db7f36e6c05d32f773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "48d2e5271b9ec9e3f9d53b669ddceb5e8a4c0aff", "commitAfterChange": "a78da08c77ccead3814d2a0c0dfa686cde302733", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprivate void saveContent(PackageFragment dest, String destName, ASTRewrite rewrite, String sourceEncoding, IFile destFile) throws JavaModelException", "signatureAfterChange": " \tprivate void saveContent(PackageFragment dest, String destName, TextEdit edits, String sourceEncoding, IFile destFile) throws JavaModelException", "diff": ["-\tprivate void saveContent(PackageFragment dest, String destName, ASTRewrite rewrite, String sourceEncoding, IFile destFile) throws JavaModelException {", "+\tprivate void saveContent(PackageFragment dest, String destName, TextEdit edits, String sourceEncoding, IFile destFile) throws JavaModelException {", "-\t\t// note this doesn't interfer with repository providers as this is a new resource that cannot be under", "+\t\t// note this doesn't interfere with repository providers as this is a new resource that cannot be under", "-\t\tIDocument document = getDocument(destCU);", "-\t\tTextEdit edits = rewrite.rewriteAST(document, null);", "-\t\ttry {", "-\t\t\tedits.apply(document);", "-\t\t} catch (BadLocationException e) {", "-\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.INVALID_CONTENTS);", "-\t\t}", "+\t\tapplyTextEdit(destCU, edits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efa3237450bd85e921e81ed121bfca75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "8ddb90194cdf45633ca959a6158f4f155e521349", "commitAfterChange": "643916268f3a91ca4c5f66ed9ee10039a3a4064f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding)", "signatureAfterChange": " private void reportHierarchy(IType focus, TypeDeclaration focusLocalType, ReferenceBinding binaryTypeBinding)", "diff": ["-private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding) {", "+private void reportHierarchy(IType focus, TypeDeclaration focusLocalType, ReferenceBinding binaryTypeBinding) {", "-\t\t\tMember declaringMember = ((Member)focus).getOuterMostLocalContext();", "-\t\t\tif (declaringMember == null) {", "+\t\t\tif (focusLocalType != null) {", "+\t\t\t\t// anonymous or local type", "+\t\t\t\tthis.focusType = focusLocalType.binding;", "+\t\t\t} else {", "-\t\t\t} else {", "-\t\t\t\t// anonymous or local type", "-\t\t\t\tif (parsedUnit != null) {", "-\t\t\t\t\tTypeDeclaration typeDecl = new ASTNodeFinder(parsedUnit).findType(focus);", "-\t\t\t\t\tif (typeDecl != null) {", "-\t\t\t\t\t\tthis.focusType = typeDecl.binding;", "-\t\t\t\t\t}", "-\t\t\t\t} "]}], "num": 46318}