{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4354eff3dc9f4d96e83593eb28c8cc4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6353ab5dec8246c81c9f58ab5cca6e4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "9d422f535f1cf1a8b8f8401815db736b124961e4", "commitAfterChange": "13ebf03f7d31f9fda8d23c3fe70da0f01fcad14a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " public synchronized void removeIndex(IPath path)", "signatureAfterChange": " public synchronized void removeIndex(IPath path)", "diff": ["-\tIIndex index = (IIndex)this.indexes.get(path);", "-\tif (index == null) return;", "-\tindex.getIndexFile().delete();", "+\tString indexName = computeIndexName(path);", "+\tFile indexFile = new File(indexName);", "+\tif (indexFile.exists())", "+\t\tindexFile.delete();", "+\tObject o = this.indexes.get(path);", "+\tif (o instanceof IIndex)", "+\t\tthis.monitors.remove(o);", "-\tthis.monitors.remove(index);", "+\tupdateIndexState(indexName, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b680734fe51462c583ad62c12f9b0121", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "6742a17d1caafc5993ac9b9729f35ed214601070", "commitAfterChange": "62e4b78bb9ee6e7ba05f701d984b5c8f51c919e3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      \tpublic PackageDeclaration getPackage(String name)", "signatureAfterChange": "      \tpublic PackageDeclaration getPackage(String name)", "diff": ["-\t\t\tif (pkgInfoUnit != null) {", "-\t\t\t\tIPackageDeclaration[] decls = pkgInfoUnit.getPackageDeclarations();", "-\t\t\t\tif (decls.length > 0) {", "-\t\t\t\t\t// TODO: here we would like to return a PackageDeclarationImpl based on package-info.java.", "+\t\t\tif (pkgInfoUnit != null || pkgInfoClassFile != null) {", "+\t\t\t\tString key = getPackageBindingKey(name);", "+\t\t\t\tIPackageBinding packageBinding = (IPackageBinding)getBindingFromKey(key, compUnit);", "+\t\t\t\tif (null != packageBinding) {", "+\t\t\t\t\treturn new PackageDeclarationImpl(packageBinding, null, this, true, pkgFrags);", "-\t\t\t}", "-\t\t\tif (pkgInfoClassFile != null) {", "-\t\t\t\t// TODO: how can we access the annotations on a package-info.class?", "-\t\t\t\t// Hopefully this will be a rare situation: a binary package containing only a package-info."]}], "num": 44058}