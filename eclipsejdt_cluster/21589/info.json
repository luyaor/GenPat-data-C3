{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59c85c04810cabcfedb6cd46d47eba06", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c4dbe62860b56f4fee3cd3a6cc97c4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\t\t\t\treturn Util.bind(\"status.coreException\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_coreException; ", "-\t\t\t\t\treturn Util.bind(\"build.initializationError\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.build_initializationError; ", "-\t\t\t\t\treturn Util.bind(\"build.serializationError\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.build_serializationError; ", "-\t\t\t\t\treturn Util.bind(\"status.cannotUseDeviceOnPath\", getPath().toString()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_cannotUseDeviceOnPath, getPath().toString()); ", "-\t\t\t\t\treturn Util.bind(\"status.JDOMError\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_JDOMError; ", "-\t\t\t\t\treturn Util.bind(\"element.doesNotExist\",((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.element_doesNotExist, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\treturn Util.bind(\"element.notOnClasspath\",((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.element_notOnClasspath, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\treturn Util.bind(\"status.evaluationError\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_evaluationError, string); ", "-\t\t\t\t\treturn Util.bind(\"status.indexOutOfBounds\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_indexOutOfBounds; ", "-\t\t\t\t\treturn Util.bind(\"status.invalidContents\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_invalidContents; ", "-\t\t\t\t\treturn Util.bind(\"status.invalidDestination\", ((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidDestination, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\tStringBuffer buff= new StringBuffer(Util.bind(\"operation.notSupported\")); //$NON-NLS-1$", "+\t\t\t\t\tStringBuffer buff= new StringBuffer(Messages.operation_notSupported); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidName\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidName, string); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidPackage\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidPackage, string); ", "-\t\t\t\t\t\treturn Util.bind(\"status.invalidPath\", getPath() == null ? \"null\" : getPath().toString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\treturn Messages.bind(", "+\t\t\t\t\t\t\tMessages.status_invalidPath,", "+\t\t\t\t\t\t\tnew String[] {getPath() == null ? \"null\" : getPath().toString()} //$NON-NLS-1$", "+\t\t\t\t\t\t); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidProject\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidProject, string); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidResource\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidResource, string); ", "-\t\t\t\t\treturn Util.bind(\"status.invalidResourceType\", string); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_invalidResourceType, string); ", "-\t\t\t\t\t\treturn Util.bind(\"status.invalidSibling\", string); //$NON-NLS-1$", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_invalidSibling, string); ", "-\t\t\t\t\t\treturn Util.bind(\"status.invalidSibling\", ((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_invalidSibling, ((JavaElement)elements[0]).toStringWithAncestors()); ", "-\t\t\t\t\treturn Util.bind(\"status.IOException\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_IOException; ", "-\t\t\t\t\t\t\treturn Util.bind(\"operation.cannotRenameDefaultPackage\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn Messages.operation_cannotRenameDefaultPackage; ", "-\t\t\t\t\t\treturn Util.bind(\"status.nameCollision\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_nameCollision, \"\");  //$NON-NLS-1$", "-\t\t\t\t\treturn Util.bind(\"operation.needElements\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needElements; ", "-\t\t\t\t\treturn Util.bind(\"operation.needName\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needName; ", "-\t\t\t\t\treturn Util.bind(\"operation.needPath\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needPath; ", "-\t\t\t\t\treturn Util.bind(\"operation.needString\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.operation_needString; ", "-\t\t\t\t\treturn Util.bind(\"operation.pathOutsideProject\", string, ((JavaElement)elements[0]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.operation_pathOutsideProject, new String[] {string, ((JavaElement)elements[0]).toStringWithAncestors()}); ", "-\t\t\t\t\t\treturn Util.bind(\"status.defaultPackageReadOnly\"); //$NON-NLS-1$", "+\t\t\t\t\t\treturn Messages.status_defaultPackageReadOnly; ", "-\t\t\t\t\treturn  Util.bind(\"status.readOnly\", name); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_readOnly, name); ", "-\t\t\t\t\treturn Util.bind(\"operation.needAbsolutePath\", getPath().toString()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.operation_needAbsolutePath, getPath().toString()); ", "-\t\t\t\t\treturn Util.bind(\"status.targetException\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_targetException; ", "-\t\t\t\t\treturn Util.bind(\"status.updateConflict\"); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.status_updateConflict; ", "-\t\t\t\t\treturn Util.bind(\"status.noLocalContents\", getPath().toString()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.status_noLocalContents, getPath().toString()); ", "-\t\t\t\t\treturn Util.bind(\"classpath.unboundContainerPath\", description, javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_unboundContainerPath, new String[] {description, javaProject.getElementName()}); ", "-\t\t\t\t\treturn Util.bind(\"classpath.invalidContainer\", description, javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_invalidContainer, new String[] {description, javaProject.getElementName()}); ", "-\t\t\t\treturn Util.bind(\"classpath.unboundVariablePath\", path.makeRelative().toString(), javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_unboundVariablePath, new String[] {path.makeRelative().toString(), javaProject.getElementName()}); ", "-\t\t\t\treturn Util.bind(\"classpath.cycle\", javaProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_cycle, javaProject.getElementName()); ", "-\t\t\t\treturn Util.bind(\"classpath.disabledInclusionExclusionPatterns\", newPath.makeRelative().toString(), projectName); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_disabledInclusionExclusionPatterns, new String[] {newPath.makeRelative().toString(), projectName}); ", "-\t\t\t\treturn Util.bind(\"classpath.disabledMultipleOutputLocations\", newPath.makeRelative().toString(), projectName); //$NON-NLS-1$", "+\t\t\t\treturn Messages.bind(Messages.classpath_disabledMultipleOutputLocations, new String[] {newPath.makeRelative().toString(), projectName}); ", "-\t\t\t\t\treturn Util.bind(\"classpath.incompatibleLibraryJDKLevel\", new String[]{\t//$NON-NLS-1$", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_incompatibleLibraryJDKLevel, new String[]{\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f60a530100a74b09fbd838206d50f134", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate void disassemble(IInnerClassesAttribute innerClassesAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(IInnerClassesAttribute innerClassesAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\tbuffer.append(Util.bind(\"disassembler.innerattributesheader\")); //$NON-NLS-1$", "+\t\tbuffer.append(Messages.disassembler_innerattributesheader); ", "-\t\t\t\t.append(Util.bind(\"disassembler.openinnerclassentry\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.inner_class_info_name\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_openinnerclassentry) ", "+\t\t\t\t.append(Messages.disassembler_inner_class_info_name) ", "+\t\t\t\t.append(Messages.disassembler_constantpoolindex) ", "-\t\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "+\t\t\t\t\t.append(Messages.disassembler_space) ", "-\t\t\t\t.append(Util.bind(\"disassembler.comma\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.outer_class_info_name\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_comma) ", "+\t\t\t\t.append(Messages.disassembler_space) ", "+\t\t\t\t.append(Messages.disassembler_outer_class_info_name) ", "+\t\t\t\t.append(Messages.disassembler_constantpoolindex) ", "-\t\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "+\t\t\t\t\t.append(Messages.disassembler_space) ", "-\t\t\tbuffer.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.disassembler_space); ", "-\t\t\t\t.append(Util.bind(\"disassembler.inner_name\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_inner_name) ", "+\t\t\t\t.append(Messages.disassembler_constantpoolindex) ", "-\t\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "+\t\t\t\t\t.append(Messages.disassembler_space) ", "-\t\t\t\t.append(Util.bind(\"disassembler.comma\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.inner_accessflags\")) //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_comma) ", "+\t\t\t\t.append(Messages.disassembler_space) ", "+\t\t\t\t.append(Messages.disassembler_inner_accessflags) ", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_space); ", "-\t\t\t\t.append(Util.bind(\"disassembler.closeinnerclassentry\")) //$NON-NLS-1$", "-\t\t\t\t.append(Util.bind(\"disassembler.comma\")); //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_closeinnerclassentry) ", "+\t\t\t\t.append(Messages.disassembler_comma); ", "-\t\t\t.append(Util.bind(\"disassembler.openinnerclassentry\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.inner_class_info_name\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t.append(Messages.disassembler_openinnerclassentry) ", "+\t\t\t.append(Messages.disassembler_inner_class_info_name) ", "+\t\t\t.append(Messages.disassembler_constantpoolindex) ", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_space) ", "-\t\t\t.append(Util.bind(\"disassembler.comma\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.outer_class_info_name\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t.append(Messages.disassembler_comma) ", "+\t\t\t.append(Messages.disassembler_space) ", "+\t\t\t.append(Messages.disassembler_outer_class_info_name) ", "+\t\t\t.append(Messages.disassembler_constantpoolindex) ", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_space) ", "-\t\tbuffer.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\tbuffer.append(Messages.disassembler_space); ", "-\t\t\t.append(Util.bind(\"disassembler.inner_name\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t.append(Messages.disassembler_inner_name) ", "+\t\t\t.append(Messages.disassembler_constantpoolindex) ", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "+\t\t\t\t.append(Messages.disassembler_space) ", "-\t\t\t.append(Util.bind(\"disassembler.comma\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"disassembler.inner_accessflags\")) //$NON-NLS-1$", "+\t\t\t.append(Messages.disassembler_comma) ", "+\t\t\t.append(Messages.disassembler_space) ", "+\t\t\t.append(Messages.disassembler_inner_accessflags) ", "-\t\t\t.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\t\t.append(Messages.disassembler_space); ", "-\t\tbuffer.append(Util.bind(\"disassembler.closeinnerclassentry\")); //$NON-NLS-1$", "+\t\tbuffer.append(Messages.disassembler_closeinnerclassentry); "]}], "num": 21589}