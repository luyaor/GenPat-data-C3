{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9dfe000e76762cf68fbf7439be3bbf39", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b58982666f4575198437c8943ef028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int matchLevel(Binding binding)", "signatureAfterChange": " public int matchLevel(Binding binding)", "diff": ["-\tTypeBinding type = (TypeBinding)binding;", "+\tTypeBinding type = (TypeBinding) binding;", "-\t// class or interface", "-\t\t\tif (type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\tif (type.isInterface()) return IMPOSSIBLE_MATCH;", "-\t\t\tif (!type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\tif (!type.isInterface()) return IMPOSSIBLE_MATCH;", "+\t\tcase TYPE_SUFFIX: // nothing", "-\treturn this.matchLevelForType(this.simpleName, this.qualification, type);", "+\treturn matchLevelForType(this.simpleName, this.qualification, type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f809a24130eb01f8089f762f3702aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "signatureAfterChange": " public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "diff": ["-", "-\t// fully qualified name", "-\tchar[] typeName = (char[])type.getName().clone();", "+\tchar[] typeName = (char[]) type.getName().clone();", "-\tif (!this.matchesType(this.simpleName, this.qualification, typeName)) {", "-\t\treturn false;", "-\t}", "+\tif (!matchesType(this.simpleName, this.qualification, typeName)) return false;", "-\t// class or interface", "-\t\t\tif (type.isInterface())", "-\t\t\t\treturn false;", "-\t\t\tbreak;", "+\t\t\treturn !type.isInterface();", "-\t\t\tif (!type.isInterface())", "-\t\t\t\treturn false;", "-\t\t\tbreak;", "+\t\t\treturn type.isInterface();", "+\t\tcase TYPE_SUFFIX: // nothing", "-\t"]}], "num": 13001}