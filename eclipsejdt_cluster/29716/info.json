{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4f799a321290e681c1b4abbada37bd0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff32933964b3639579ac29c2811e38f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "diff": ["+\t\t\t\tReferenceBinding substitutedEnclosing = originalType.enclosingType();", "+\t\t\t\tif (substitutedEnclosing != null) {", "+\t\t\t\t\tsubstitutedEnclosing = (ReferenceBinding) this.substitute(substitutedEnclosing);", "+\t\t\t\t}\t\t\t\t", "-\t\t\t\treturn this.environment.createRawType(originalParameterizedType.type, originalParameterizedType.enclosingType());", "+\t\t\t\treturn this.environment.createRawType(originalParameterizedType.type, substitutedEnclosing);", "-\t            return this.environment.createRawType((ReferenceBinding)originalType, null);", "+\t\t\t\tsubstitutedEnclosing = originalType.enclosingType();", "+\t\t\t\tif (substitutedEnclosing != null) {", "+\t\t\t\t\tsubstitutedEnclosing = (ReferenceBinding) this.substitute(substitutedEnclosing);", "+\t\t\t\t}\t\t\t\t", "+\t            return this.environment.createRawType((ReferenceBinding)originalType, substitutedEnclosing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94671b65c6017d1cbfe4eb87e545eae1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "16915e9c0afdeb5e545794cd2c3b24bc7875ce66", "commitAfterChange": "df4a3da6e8d30ada6824d136133377b3a37cfebb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tTypeBinding substituteInferenceVariable(InferenceVariable var, TypeBinding substituteType)", "signatureAfterChange": "  \tTypeBinding substituteInferenceVariable(InferenceVariable var, TypeBinding substituteType)", "diff": ["+\t\t\tTypeBinding currentFirstBound = null;", "+\t\t\tif (this.firstBound != null) {", "+\t\t\t\tcurrentFirstBound = this.firstBound.substituteInferenceVariable(var, substituteType);", "+\t\t\t\thaveSubstitution |= TypeBinding.notEquals(this.firstBound, currentFirstBound);", "+\t\t\t}", "+\t\t\t\tif (currentFirstBound != null)", "+\t\t\t\t\tnewCapture.firstBound = Scope.substitute(substitution, currentFirstBound);"]}], "num": 29716}