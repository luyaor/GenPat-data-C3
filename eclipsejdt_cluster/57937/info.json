{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfb0f22802292a9d410c835c1f5e981e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0607e224b976343a24d1bb168af85c96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "f8da33d36ca2a5b95dcb1b251fe713aa575aecda", "commitAfterChange": "9baf80dbc090f318368e0d80ba44423a7e05244d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "signatureAfterChange": " public void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["-", "-\tboolean isReportingUnusedArgument = false;", "-", "-\tif (referenceContext instanceof AbstractMethodDeclaration) {", "-\t\tAbstractMethodDeclaration methodDecl = (AbstractMethodDeclaration)referenceContext;", "-\t\tMethodBinding method = methodDecl.binding;", "-\t\tif (!(method.isAbstract()", "-\t\t\t\t|| (method.isImplementing() && !compilerOptions().reportUnusedParameterWhenImplementingAbstract) ", "-\t\t\t\t|| (method.isOverriding() && !method.isImplementing() && !compilerOptions().reportUnusedParameterWhenOverridingConcrete)", "-\t\t\t\t|| method.isMain())) {", "-\t\t\tisReportingUnusedArgument = true;", "-\t\t}", "-\t}", "-", "-\t\t// do not report fake used variable", "-\t\tif (isReportingUnusedArgument", "-\t\t\t\t&& local.useFlag == LocalVariableBinding.UNUSED", "-\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0)) { // declaration is reachable", "-\t\t\tthis.problemReporter().unusedArgument(local.declaration);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e444df824a999c20f8014c4d3932935", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/AptPlugin.java", "commitBeforeChange": "07500b3aefa58aecd5e846627b7c70382793f29f", "commitAfterChange": "641c18a6fa8d154329ae2bcdac1ab25ff8b18f71", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void start(BundleContext context) throws Exception", "signatureAfterChange": " \t \tpublic void start(BundleContext context) throws Exception", "diff": ["+\t", "+\t\t// TODO: can move this into AptProject.", "-\t", "-\t\tfinal IWorkspaceRoot root = workspace.getRoot();", "-\t\tif(root != null){", "-\t\t\tfinal IProject[] projects = root.getProjects();", "-\t\t\ttry{", "-\t\t\t\tfor( IProject proj : projects ){", "-\t\t\t\t\tif(DEBUG)", "-\t\t\t\t\t\ttrace(\"updating project \" + proj.getName() ); //$NON-NLS-1$", "-\t\t\t\t\tif( proj.hasNature(JavaCore.NATURE_ID) && proj.exists() && ", "-\t\t\t\t\t\tproj.isOpen() && AptConfig.isEnabled(JavaCore.create( proj ))){", "-\t\t\t\t\t\tfinal GeneratedFileManager mgr = GeneratedFileManager.getGeneratedFileManager(proj);", "-\t\t\t\t\t\tmgr.ensureGeneratedSourceFolder(null);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tcatch( JavaModelException e) { e.printStackTrace(); }", "-\t\t}", "-\t\tif( DEBUG )", "-\t\t\ttrace(\"addded listener\"); //$NON-NLS-1$"]}], "num": 57937}