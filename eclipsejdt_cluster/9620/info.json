{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5df2f76fa22ba3d32702bc060ac6e34e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0876118a4d6d643c475820ef15473a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "ee7d00c6fce3f5ac075ad1ae838556503fe6ca33", "commitAfterChange": "42a20f90363fe2e676c07d56364d6cc6b90a9458", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprivate Expression newAnnotationValue(AST ast, Object value, ImportRewriteContext context)", "signatureAfterChange": "  \tprivate Expression newAnnotationValue(AST ast, Object value, ImportRewriteContext context)", "diff": ["-\t\t\tresult.setType(createType((Type) null, (ITypeBinding) value, ast, context));", "+\t\t\tresult.setType(addImport( (ITypeBinding) value, ast, context));", "-\t\t\tType type = createType((Type) null, variable.getType(), ast, context);", "+\t\t\tType type = addImport(variable.getType(), ast, context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd7a15560655870467389d23138ce9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "56c8c49d1b1cb476ad21ea6a6c6aa0c1958161bf", "commitAfterChange": "4412fcf3d168e3c5cc3b92c0b70e5bcf2376f3fc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testCustomizedBuffer() throws JavaModelException", "signatureAfterChange": " public void testCustomizedBuffer() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Should be an IOpenable\", customizedCopy instanceof IOpenable);", "-\t\tassertTrue(\"Unexpected buffer\", ((IOpenable)customizedCopy).getBuffer() instanceof TestBuffer);", "+\t\tassertTrue(\"Unexpected buffer\", customizedCopy.getBuffer() instanceof TestBuffer);"]}], "num": 9620}