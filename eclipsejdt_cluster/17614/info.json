{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9422ce06be8c44c0487250bcebe1e37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb0793af7d71e96931a4523630a92dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public char[] shortReadableName()", "signatureAfterChange": "  public char[] shortReadableName()", "diff": ["-\tif (isMemberType())", "-\t\treturn CharOperation.concat(enclosingType().shortReadableName(), sourceName, '.');", "-\treturn sourceName;", "+    char[] shortReadableName;", "+\tif (isMemberType()) {", "+\t\tshortReadableName = CharOperation.concat(enclosingType().shortReadableName(), sourceName, '.');", "+\t} else {", "+\t\tshortReadableName = this.sourceName;", "+\t}", "+\tTypeVariableBinding[] typeVars;", "+\tif ((typeVars = this.typeVariables()) != NoTypeVariables) {", "+\t    StringBuffer nameBuffer = new StringBuffer(10);", "+\t    nameBuffer.append(shortReadableName).append('<');", "+\t    for (int i = 0, length = typeVars.length; i < length; i++) {", "+\t        if (i > 0) nameBuffer.append(',');", "+\t        nameBuffer.append(typeVars[i].shortReadableName());", "+\t    }", "+\t    nameBuffer.append('>');", "+\t\tint nameLength = nameBuffer.length();", "+\t\tshortReadableName = new char[nameLength];", "+\t\tnameBuffer.getChars(0, nameLength, shortReadableName, 0);\t    ", "+\t}", "+\treturn shortReadableName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7547ffcf7a19ef5442728b3c4bfb47b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "a3da1013b6fe549ad5c2ee5b7dc726eba38ff59e", "commitAfterChange": "30692448718de71df165cc52c018bee7df31a8fb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "signatureAfterChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar[][] typeParameterSignatures, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "diff": ["+\tchar[][] typeParameterSignatures,", "+\t", "+\tchar[] typeParameters = CharOperation.NO_CHAR;", "+\tint typeParametersLength = 0;", "+\tif (typeParameterSignatures != null) {", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tfor (int i = 0, length = typeParameterSignatures.length; i < length; i++) {", "+\t\t\tchar[] typeParameter = typeParameterSignatures[i];", "+\t\t\tbuffer.append(typeParameter);", "+\t\t\ttypeParametersLength += typeParameter.length;", "+\t\t\tif (i != length-1) {", "+\t\t\t\tbuffer.append(',');", "+\t\t\t\ttypeParametersLength++;", "+\t\t\t}", "+\t\t}", "+\t\ttypeParameters = new char[typeParametersLength];", "+\t\tbuffer.getChars(0, typeParametersLength, typeParameters, 0);", "+\t}", "-\t// superSimpleName / superQualification / simpleName / enclosingTypeName / packageName / superClassOrInterface classOrInterface modifiers", "+\t// superSimpleName / superQualification / simpleName / enclosingTypeName / typeParameters / packageName / superClassOrInterface classOrInterface modifiers", "-\tchar[] result = new char[superLength + superQLength + simpleLength + enclosingLength + packageLength + 8];", "+\tchar[] result = new char[superLength + superQLength + simpleLength + enclosingLength + typeParametersLength + packageLength + 9];", "+\t}", "+\tresult[pos++] = SEPARATOR;", "+\tif (typeParametersLength > 0) {", "+\t\tSystem.arraycopy(typeParameters, 0, result, pos, typeParametersLength);", "+\t\tpos += typeParametersLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b580ecf364de0e1b442aab8585c78b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public char[] readableName()", "signatureAfterChange": "  public char[] readableName()", "diff": ["-public char[] readableName() /*java.lang.Object*/ {", "-\tif (isMemberType())", "-\t\treturn CharOperation.concat(enclosingType().readableName(), sourceName, '.');", "-\treturn CharOperation.concatWith(compoundName, '.');", "+public char[] readableName() /*java.lang.Object,  p.X<T> */ {", "+    char[] readableName;", "+\tif (isMemberType()) {", "+\t\treadableName = CharOperation.concat(enclosingType().readableName(), sourceName, '.');", "+\t} else {", "+\t\treadableName = CharOperation.concatWith(compoundName, '.');", "+\t}", "+\tTypeVariableBinding[] typeVars;", "+\tif ((typeVars = this.typeVariables()) != NoTypeVariables) {", "+\t    StringBuffer nameBuffer = new StringBuffer(10);", "+\t    nameBuffer.append(readableName).append('<');", "+\t    for (int i = 0, length = typeVars.length; i < length; i++) {", "+\t        if (i > 0) nameBuffer.append(',');", "+\t        nameBuffer.append(typeVars[i].readableName());", "+\t    }", "+\t    nameBuffer.append('>');", "+\t\tint nameLength = nameBuffer.length();", "+\t\treadableName = new char[nameLength];", "+\t\tnameBuffer.getChars(0, nameLength, readableName, 0);  ", "+\t}", "+\treturn readableName;"]}], "num": 17614}