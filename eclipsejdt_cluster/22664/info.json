{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "404be6b7a01136c40b072954f7572e90", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a8a53c6e31f7d09dd432ff2e6007af7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "306e7b103a906df37630519d508932b224bba2de", "commitAfterChange": "49d3c15c35a4bc8bd86c8e6e22822fa38dc362fd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CodeSnippetCompiler( \t\tINameEnvironment environment,  \t\tIErrorHandlingPolicy policy,  \t\tMap settings,  \t\tICompilerRequestor requestor,  \t\tIProblemFactory problemFactory, \t\tEvaluationContext evaluationContext, \t\tint codeSnippetStart, \t\tint codeSnippetEnd)", "signatureAfterChange": " \tpublic CodeSnippetCompiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tEvaluationContext evaluationContext, \t\tint codeSnippetStart, \t\tint codeSnippetEnd)", "diff": ["- */", "-public CodeSnippetCompiler(", "-\t\tINameEnvironment environment, ", "-\t\tIErrorHandlingPolicy policy, ", "-\t\tMap settings, ", "-\t\tICompilerRequestor requestor, ", "+\t */", "+\tpublic CodeSnippetCompiler(", "+\t\tINameEnvironment environment,", "+\t\tIErrorHandlingPolicy policy,", "+\t\tMap settings,", "+\t\tICompilerRequestor requestor,", "-\tsuper(environment, policy, settings, requestor, problemFactory);", "-\tthis.parser = ", "-\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.assertMode, codeSnippetStart, codeSnippetEnd);", "-\tthis.parseThreshold = 1; // fully parse only the code snippet compilation unit", "-}", "+\t\tsuper(environment, policy, settings, requestor, problemFactory);", "+\t\tthis.parser =", "+\t\t\tnew CodeSnippetParser(", "+\t\t\t\tproblemReporter,", "+\t\t\t\tevaluationContext,", "+\t\t\t\tthis.options.parseLiteralExpressionsAsConstants,", "+\t\t\t\tthis.options.sourceLevel >= CompilerOptions.JDK1_4,", "+\t\t\t\tcodeSnippetStart,", "+\t\t\t\tcodeSnippetEnd);", "+\t\tthis.parseThreshold = 1;", "+\t\t// fully parse only the code snippet compilation unit", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9855d109a26e83a07633de20f377b107", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tif (this.jdk15 && CharOperation.equals(tag, TAG_VALUE)) {", "+\t\t\t\t\t\tif (this.sourceLevel >= ClassFileConstants.JDK1_5 && CharOperation.equals(tag, TAG_VALUE)) {"]}], "num": 22664}