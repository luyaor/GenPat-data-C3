{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f2ef9d85de82bbba6f8b4a905ff20f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3dced92d3fa84291f029c55380bb11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  protected void removeSecondaryTypes() throws CoreException", "signatureAfterChange": "  protected void removeSecondaryTypes() throws CoreException", "diff": ["-\t\tfor (int i = 0, length = secondaryTypesToRemove.size(); i < length; i++)", "-\t\t\tremoveClassFile((IPath) secondaryTypesToRemove.get(i));", "+\t\tObject[] keyTable = secondaryTypesToRemove.keyTable;", "+\t\tObject[] valueTable = secondaryTypesToRemove.valueTable;", "+\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {", "+\t\t\tIContainer outputFolder = (IContainer) keyTable[i];", "+\t\t\tif (outputFolder != null) {", "+\t\t\t\tArrayList paths = (ArrayList) valueTable[i];", "+\t\t\t\tfor (int j = 0, m = paths.size(); j < m; j++)", "+\t\t\t\t\tremoveClassFile((IPath) paths.get(j), outputFolder);", "+\t\t\t}", "+\t\t}", "-\t\tif (previousLocations != null && previousLocations.size() > 1)", "-\t\t\tthis.previousLocations = null; // cannot optimize recompile case when a secondary type is deleted", "+\t\tif (previousSourceFiles != null && previousSourceFiles.size() > 1)", "+\t\t\tthis.previousSourceFiles = null; // cannot optimize recompile case when a secondary type is deleted"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bed0b129598f613b5fa6eed7cbc2e45c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  private SimpleLookupTable findDeltas()", "signatureAfterChange": "  private SimpleLookupTable findDeltas()", "diff": ["-\tObject[] keyTable = binaryResources.keyTable;", "-\tObject[] valueTable = binaryResources.valueTable;", "+\tObject[] keyTable = binaryLocationsPerProject.keyTable;", "+\tObject[] valueTable = binaryLocationsPerProject.valueTable;", "-\t\t\t\tIResource[] classFoldersAndJars = (IResource[]) valueTable[i];", "-\t\t\t\tif (classFoldersAndJars.length <= 1)", "-\t\t\t\t\tcontinue nextProject; // project has no structural changes in its output folder", "-\t\t\t\tclassFoldersAndJars[0] = null; // skip the output folder", "+\t\t\t\tClasspathLocation[] classFoldersAndJars = (ClasspathLocation[]) valueTable[i];", "+\t\t\t\tboolean canSkip = true;", "+\t\t\t\tfor (int j = 0, m = classFoldersAndJars.length; j < m; j++) {", "+\t\t\t\t\tif (classFoldersAndJars[j].isOutputFolder())", "+\t\t\t\t\t\tclassFoldersAndJars[j] = null; // can ignore output folder since project was not structurally changed", "+\t\t\t\t\telse", "+\t\t\t\t\t\tcanSkip = false;", "+\t\t\t\t}", "+\t\t\t\tif (canSkip) continue nextProject; // project has no structural changes in its output folders"]}], "num": 35736}