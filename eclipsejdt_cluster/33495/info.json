{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18a27db6e50a5dc581f1807b07c88f67", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d0e2a80f1507b8f8739fda5bc00684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "commitAfterChange": "b7f468690a70977c68b74d1aeee81bdba359d238", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void createOutputTestDirectory(String suffixPath)", "signatureAfterChange": " \tprotected void createOutputTestDirectory(String suffixPath)", "diff": ["-\t\tthis.outputTestDirectoryPath = ", "-\t\t\t((IPath) this.outputRootDirectoryPath.clone()).append(suffixPath);", "-\t\tFile dir = this.outputTestDirectoryPath.toFile();", "-\t\tif (!dir.exists()) {", "-\t\t\tdir.mkdirs();", "+\t\tthis.outputTestDirectory =  new File(this.outputRootDirectoryPath.toFile(), suffixPath);", "+\t\tif (!this.outputTestDirectory.exists()) {", "+\t\t\tthis.outputTestDirectory.mkdirs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c49e8298d9436cba70e500f153a167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "0727a0a8c9c54eadeab1063076b7f4ac82d6a00b", "commitAfterChange": "a2289c8ffc926e20e6e4969b658db049f5aad071", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 227, "signatureBeforeChange": " \tprotected void startLogListening()", "signatureAfterChange": " \tprotected void startLogListening(ILog logToListen)", "diff": ["-\t\tILog log = JavaCore.getPlugin().getLog();", "-\t\tif (this.logListener != null) {", "-\t\t\tlog.removeLogListener(this.logListener);", "-\t\t}", "+\t}", "+\tprotected void startLogListening(ILog logToListen) {", "+\t\tstopLogListening(); // cleanup if we forgot to stop listening", "+\t\tthis.log = logToListen;", "-\t\tlog.addLogListener(this.logListener);", "+\t\tif (logToListen == null) {", "+\t\t\tPlatform.addLogListener(this.logListener);", "+\t\t} else {", "+\t\t\tthis.log.addLogListener(this.logListener);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94160083c41d1132d4db2db2ca91250", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "commitAfterChange": "b7f468690a70977c68b74d1aeee81bdba359d238", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected void writeFiles(String[] testFiles)", "signatureAfterChange": " \tprotected void writeFiles(String[] testFiles)", "diff": ["-\t\t\tIPath filePath = ", "-\t\t\t\t((IPath) this.outputTestDirectoryPath.clone()).append(fileName);", "+\t\t\tFile file = new File(this.outputTestDirectory, fileName);", "-\t\t\t\tFile dir = filePath.removeLastSegments(1).toFile();", "+\t\t\t\tFile dir = file.getParentFile();", "-\t\t\tUtil.writeToFile(contents, filePath.toString());", "+\t\t\tUtil.writeToFile(contents, file.getPath());"]}], "num": 33495}