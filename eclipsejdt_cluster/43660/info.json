{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "beac59ffd66cca095b14aba28f92ba5b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5481106f6f3abe5e7bcbda9873273220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocFlattener.java", "commitBeforeChange": "4c909758dccf4ee3c4897b3d8d65f492795c9578", "commitAfterChange": "e56e767173dc5b5ba970e3e7ca9256e9541ebffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public boolean visit(ArrayType node)", "signatureAfterChange": " public boolean visit(ArrayType node)", "diff": ["-\t\tfor (int i = 0;  i < node.getDimensions(); ++i) {", "-\t\t\t((Dimension) node.dimensions().get(i)).accept(this);", "+\t\tint noOfDimensions = node.getDimensions();", "+\t\tList dimensions = node.dimensions();", "+\t\tfor (int i = 0;  i < noOfDimensions; ++i) {", "+\t\t\t((Dimension) dimensions.get(i)).accept(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2204cc72fd754af497f484d9d534bc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\t\tif (reader.isNestedType()) {", "+\t\t\tboolean isNestedType = reader.isNestedType();", "+\t\t\tif (isNestedType) {", "+\t\t\t\t\tboolean isConstructor = method.isConstructor();", "-\t\t\t\t\tchar[][] parameterTypes = decodeParameterTypes(descriptor);", "+\t\t\t\t\tchar[][] parameterTypes = decodeParameterTypes(descriptor, isConstructor && isNestedType);", "-\t\t\t\t\tif (method.isConstructor()) {", "+\t\t\t\t\tif (isConstructor) {"]}], "num": 43660}