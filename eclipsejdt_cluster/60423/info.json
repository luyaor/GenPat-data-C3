{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f2a0821a45211f4d9bfd62045155c2c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ec14e134d76af925a032bce635a8f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public PrimitiveType getPrimitiveType(PrimitiveType.Kind kind)", "signatureAfterChange": "      public PrimitiveType getPrimitiveType(PrimitiveType.Kind kind)", "diff": ["-            case BOOLEAN: return PrimitiveTypeImpl.PRIMITIVE_BOOLEAN;", "-            case BYTE:    return PrimitiveTypeImpl.PRIMITIVE_BYTE;", "-            case CHAR:    return PrimitiveTypeImpl.PRIMITIVE_CHAR;", "-            case DOUBLE:  return PrimitiveTypeImpl.PRIMITIVE_DOUBLE;", "-            case FLOAT:   return PrimitiveTypeImpl.PRIMITIVE_FLOAT;", "-            case INT:     return PrimitiveTypeImpl.PRIMITIVE_INT;", "-            case LONG:    return PrimitiveTypeImpl.PRIMITIVE_LONG;", "-            case SHORT:   return PrimitiveTypeImpl.PRIMITIVE_SHORT;", "+            case BOOLEAN: return _env.getBooleanType();", "+            case BYTE:    return _env.getByteType();", "+            case CHAR:    return _env.getCharType();", "+            case DOUBLE:  return _env.getDoubleType();", "+            case FLOAT:   return _env.getFloatType();", "+            case INT:     return _env.getIntType();", "+            case LONG:    return _env.getLongType();", "+            case SHORT:   return _env.getShortType();", "+          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4924c35901f2d6546dcfd19761e5a5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public static ITypeBinding getTypeBinding(TypeMirror type)         throws NonEclipseImplementationException", "signatureAfterChange": "      private static ITypeBinding getTypeBinding(TypeMirror type)         throws NonEclipseImplementationException", "diff": ["-    public static ITypeBinding getTypeBinding(TypeMirror type)", "+    private static ITypeBinding getTypeBinding(TypeMirror type)", "-        if( type instanceof EclipseMirrorImpl ){", "-            final EclipseMirrorImpl impl = (EclipseMirrorImpl)type;", "-            switch(impl.kind() )", "-            {", "-                case TYPE_PRIMITIVE: return ((PrimitiveTypeImpl)type).getTypeBinding();", "-                case TYPE_VOID:  \t return ((VoidTypeImpl)type).getTypeBinding();", "-                case TYPE_ERROR: \t return null;", "-                case TYPE_ARRAY: \t return ((ArrayTypeImpl)type).getArrayBinding();", "-                case TYPE_WILDCARD:  return ((WildcardTypeImpl)type).getWildcardBinding();", "-                case TYPE_PARAMETER_VARIABLE: return ((TypeParameterDeclarationImpl)type).getDeclarationBinding();", "-                default: return ((TypeDeclarationImpl)type).getTypeBinding();", "-            }", "+        if( type instanceof EclipseMirrorType ){", "+            return ((EclipseMirrorType)type).getTypeBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d969411c7abea4ae6f76adcd27c8557f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public ArrayType getArrayType(TypeMirror componentType)", "signatureAfterChange": "          public ArrayType getArrayType(TypeMirror componentType)", "diff": ["-        if( componentType instanceof EclipseMirrorImpl ){", "-            final EclipseMirrorImpl impl = (EclipseMirrorImpl)componentType;", "+        if( componentType instanceof EclipseMirrorType ){", "+            final EclipseMirrorType impl = (EclipseMirrorType)componentType;", "-                case TYPE_ERROR:", "-                    throw new IllegalArgumentException(\"cannot create an array from error type\"); //$NON-NLS-1$", "-                case TYPE_VOID:", "-                    throw new IllegalArgumentException(\"cannot create an array from void type\"); //$NON-NLS-1$", "-                case TYPE_PRIMITIVE:", "-                    leaf = ((PrimitiveTypeImpl)componentType).getTypeBinding();", "-                    dimension = 1;", "-                    break;", "+                case TYPE_ERROR: case TYPE_VOID:", "+                    throw new IllegalArgumentException(\"Illegal element type for array\"); //$NON-NLS-1$", "-                    final ITypeBinding array = ((ArrayTypeImpl)componentType).getArrayBinding();", "+                    final ITypeBinding array = ((ArrayTypeImpl)componentType).getTypeBinding();", "-                case TYPE_WILDCARD:", "-                    leaf = ((WildcardTypeImpl)componentType).getWildcardBinding();", "+                default:", "+                    leaf = impl.getTypeBinding();", "-                default:", "-                    leaf = ((TypeDeclarationImpl)componentType).getTypeBinding();", "-                    dimension = 1;"]}], "num": 60423}