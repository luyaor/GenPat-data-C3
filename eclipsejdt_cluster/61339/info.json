{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80789e80474e2c48329379cdc57a3326", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "413f958d41f75538354ca5cad8db107b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "0660a80b4f83507ec084149491c197acba246b67", "commitAfterChange": "593a2bfc58d2fd5243ade8b5af13c44714cac2ea", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " public void test094()", "signatureAfterChange": " public void test094()", "diff": ["-\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tvoid foo(Y[] array)\\n\" + ", "+\t\t\"\t         ^\\n\" + ", "+\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"The method addAll(Collection<? extends Y<X>>) in the type ArrayList\" +", "-\t\t\t\"<Y<X>> is not applicable for the arguments (List<Y>)\\n\" + ", "+\t\t\"The method addAll(Collection<? extends Y<X>>) in the type ArrayList<Y<X>> is not applicable for the arguments (List<Y>)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "982f810fce05eb1dec08c97dc1589122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "39cfeabaf2630f8aaf01c3058d94b243711e01e5", "commitAfterChange": "7a4894572c8dc97616c8aa59652842aae37320e6", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": " public void test410114() throws IOException", "signatureAfterChange": " public void test410114() throws IOException", "diff": ["+\t\t\t\t\t\"            i = Y.Z:: new;\\n\" +", "+\t\t\t\t\t\"            i.foo(new Y<String>());\\n\" +", "+\t\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\t\"2. WARNING in Y.java (at line 14)\\n\" + ", "+\t\t\t\t\t\t\"\ti = Y.Z:: new;\\n\" + ", "+\t\t\t\t\t\t\"\t    ^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\t\"Type safety: The constructor Y.Z(Y) belongs to the raw type Y.Z. References to generic type Y<T>.Z<K> should be parameterized\\n\" + "]}], "num": 61339}