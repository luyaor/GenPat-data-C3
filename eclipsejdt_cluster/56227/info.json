{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d0b49bae2eddc25044e408041a37ffd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d5dcdd53d0bf175f12c38b7dcd6b8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "058f4956c302999db0dab277cf91883f2d016e2b", "commitAfterChange": "27d9d524a3b624cfc1260a727d1dfb92d53ae22a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "diff": ["-\t\t\tif ((left.bits & UnnecessaryCastMask) == 0 && left.resolvedType.isBaseType()) {", "+\t\t\tif ((left.bits & UnnecessaryCastMASK) == 0 && left.resolvedType.isBaseType()) {", "-\t\t\tif ((right.bits & UnnecessaryCastMask) == 0 && right.resolvedType.isBaseType()) {", "+\t\t\tif ((right.bits & UnnecessaryCastMASK) == 0 && right.resolvedType.isBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecfbb3ccd9f6918f44f8e7221a693a67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "diff": ["-\t\t\tif ((left.bits & UnnecessaryCastMASK) == 0 && left.resolvedType.isBaseType()) {", "+\t\t\tif ((left.bits & UnnecessaryCast) == 0 && left.resolvedType.isBaseType()) {", "-\t\t\tif ((right.bits & UnnecessaryCastMASK) == 0 && right.resolvedType.isBaseType()) {", "+\t\t\tif ((right.bits & UnnecessaryCast) == 0 && right.resolvedType.isBaseType()) {"]}], "num": 56227}