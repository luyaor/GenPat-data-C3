{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c10b6bb43688cc7221364c54d61800f0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ae2825ae219af5a0cebeb3aabdcb6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "  \tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\tbuffer.append(Util.bind(\"disassembler.constantpoolheader\")); //$NON-NLS-1$", "+\t\tbuffer.append(Messages.disassembler_constantpoolheader); ", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.class\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassInfoNameIndex()),", "-\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassInfoName())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_class,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassInfoNameIndex()),", "+\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassInfoName())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.double\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tDouble.toString(constantPoolEntry.getDoubleValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_double,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tDouble.toString(constantPoolEntry.getDoubleValue())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.fieldref\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_fieldref,", "+\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tnew String(constantPoolEntry.getFieldDescriptor())})); //$NON-NLS-1$", "+\t\t\t\t\t\t\tnew String(constantPoolEntry.getFieldDescriptor())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.float\", //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_float,", "-\t\t\t\t\t\t\tFloat.toString(constantPoolEntry.getFloatValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\t\tFloat.toString(constantPoolEntry.getFloatValue())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.integer\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_integer,", "+\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getIntegerValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getIntegerValue())}));", "-\t\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.interfacemethodref\", //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "+\t\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_interfacemethodref,", "+\t\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.long\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tLong.toString(constantPoolEntry.getLongValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_long,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tLong.toString(constantPoolEntry.getLongValue())}));", "-\t\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.methodref\", //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "+\t\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_methodref,", "+\t\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.name_and_type\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tInteger.toString(nameIndex),", "-\t\t\t\t\t\t\tInteger.toString(typeIndex),", "-\t\t\t\t\t\t\tString.valueOf(nameValue),", "-\t\t\t\t\t\t\tString.valueOf(typeValue)})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_name_and_type,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(nameIndex),", "+\t\t\t\t\t\t\t\tInteger.toString(typeIndex),", "+\t\t\t\t\t\t\t\tString.valueOf(nameValue),", "+\t\t\t\t\t\t\t\tString.valueOf(typeValue)}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.string\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getStringIndex()),", "-\t\t\t\t\t\t\tconstantPoolEntry.getStringValue()})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_string,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getStringIndex()),", "+\t\t\t\t\t\t\t\tconstantPoolEntry.getStringValue()}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.utf8\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tnew String(constantPoolEntry.getUtf8Value())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_utf8,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getUtf8Value())}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec84943df9a9361e4ea940d3e258e0c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "85a51230859ba76a62ce4d566f4cbd47aac06488", "commitAfterChange": "3885d0327ef37626bb68aa8a0a9e1a4a5bb4ba7a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void disassemble(IClassFileAttribute classFileAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "  \tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["+\tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "+\t\tint length = constantPool.getConstantPoolCount();", "+\t\tbuffer.append(Util.bind(\"disassembler.constantpoolheader\")); //$NON-NLS-1$", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\tfor (int i = 1; i < length; i++) {", "+\t\t\tIConstantPoolEntry constantPoolEntry = constantPool.decodeEntry(i);", "+\t\t\tswitch (constantPool.getEntryKind(i)) {", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Class :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.class\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassInfoNameIndex()),", "+\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassInfoName())})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Double :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.double\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tDouble.toString(constantPoolEntry.getDoubleValue())})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Fieldref :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.fieldref\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "+\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "+\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "+\t\t\t\t\t\t\tgetFieldRefNameAndType(constantPoolEntry)})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Float :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.float\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tFloat.toString(constantPoolEntry.getFloatValue())})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Integer :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.integer\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getIntegerValue())})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_InterfaceMethodref :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.interfacemethodref\", //$NON-NLS-1$", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "+\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "+\t\t\t\t\t\t\t\tgetMethodRefNameAndType(constantPoolEntry)})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Long :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.long\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tLong.toString(constantPoolEntry.getLongValue())})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Methodref :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.methodref\", //$NON-NLS-1$", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "+\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "+\t\t\t\t\t\t\t\tgetMethodRefNameAndType(constantPoolEntry)})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_NameAndType :", "+\t\t\t\t\tint nameIndex = constantPoolEntry.getNameAndTypeInfoNameIndex();", "+\t\t\t\t\tint typeIndex = constantPoolEntry.getNameAndTypeInfoDescriptorIndex();", "+\t\t\t\t\tIConstantPoolEntry entry = constantPool.decodeEntry(nameIndex);", "+\t\t\t\t\tchar[] nameValue = (char[]) entry.getUtf8Value().clone();", "+\t\t\t\t\tentry = constantPool.decodeEntry(typeIndex);", "+\t\t\t\t\tchar[] typeValue = (char[])  entry.getUtf8Value().clone();", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.name_and_type\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tInteger.toString(nameIndex),", "+\t\t\t\t\t\t\tInteger.toString(typeIndex),", "+\t\t\t\t\t\t\tString.valueOf(nameValue),", "+\t\t\t\t\t\t\tString.valueOf(typeValue)})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_String :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.string\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getStringIndex()),", "+\t\t\t\t\t\t\tconstantPoolEntry.getStringValue()})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IConstantPoolConstant.CONSTANT_Utf8 :", "+\t\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.utf8\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\tnew String(constantPoolEntry.getUtf8Value())})); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tif (i < length - 1) {", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 60793}