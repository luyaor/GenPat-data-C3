{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff77bcb7c3805efcfaf587262c052b60", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2ec37e3ba4923b8a801b0d9cba6b51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "8975a4993759f4f0cb2d8fff2da5bbb83e0cb45e", "commitAfterChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification, boolean isDeclaration, int start, int end)", "signatureAfterChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] genericTypeSignature, int start, int end)", "diff": ["-protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification, boolean isDeclaration, int start, int end) {", "+protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] genericTypeSignature, int start, int end) {", "+\t\tif(type != null && genericTypeSignature != null) {", "+\t\t\tif(type.isBinary()) {", "+\t\t\t\ttype = new ParameterizedBinaryType((JavaElement)type.getParent(), type.getElementName(), new String(genericTypeSignature));", "+\t\t\t} else {", "+\t\t\t\ttype = new ParameterizedSourceType((JavaElement)type.getParent(), type.getElementName(), new String(genericTypeSignature));", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5d7a8aae8d432b72811f57eae1e281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, int start, int end)", "signatureAfterChange": " public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, char[] uniqueKey, int start, int end)", "diff": ["-public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, int start, int end) {", "+public void acceptField(char[] declaringTypePackageName, char[] declaringTypeName, char[] name, boolean isDeclaration, char[] uniqueKey, int start, int end) {", "+\t\t\t\tif(uniqueKey != null) {", "+\t\t\t\t\tif(field.isBinary()) {", "+\t\t\t\t\t\tfield = new ParameterizedBinaryField(", "+\t\t\t\t\t\t\t\t(JavaElement)field.getParent(),", "+\t\t\t\t\t\t\t\tfield.getElementName(),", "+\t\t\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfield = new ParameterizedSourceField(", "+\t\t\t\t\t\t\t\t(JavaElement)field.getParent(),", "+\t\t\t\t\t\t\t\tfield.getElementName(),", "+\t\t\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49b75e5e26d18dbedc0e399c5d67f16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "a5c56b9d9a1a6a7a2412b9e4fe79595e9a454729", "commitAfterChange": "808f8a4c125739a8b2d2237ba90c04dc1390f0b7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] genericTypeSignature, int start, int end)", "signatureAfterChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] uniqueKey, int start, int end)", "diff": ["-protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] genericTypeSignature, int start, int end) {", "+protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] uniqueKey, int start, int end) {", "-\t\tif(type != null && genericTypeSignature != null) {", "+\t\tif(type != null && uniqueKey != null) {", "-\t\t\t\ttype = new ParameterizedBinaryType((JavaElement)type.getParent(), type.getElementName(), new String(genericTypeSignature));", "+\t\t\t\ttype = new ParameterizedBinaryType((JavaElement)type.getParent(), type.getElementName(), new String(uniqueKey));", "-\t\t\t\ttype = new ParameterizedSourceType((JavaElement)type.getParent(), type.getElementName(), new String(genericTypeSignature));", "+\t\t\t\ttype = new ParameterizedSourceType((JavaElement)type.getParent(), type.getElementName(), new String(uniqueKey));"]}], "num": 20626}