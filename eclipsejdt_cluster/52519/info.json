{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f96914e4abced15ac02474b1f42f87f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37b8d240ecf80aee3889815ae06fba1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " public void test0084() throws JavaModelException", "signatureAfterChange": " public void test0084() throws JavaModelException", "diff": ["-\t\t\t\t\"foo[METHOD_REF]{foo(), Lpkgstaticimport.MyClass0084;, ()I, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"foo[METHOD_REF]{foo(), Lpkgstaticimport.MyClass0084;, (I)I, foo, (i), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"foo[METHOD_REF]{foo(), Lpkgstaticimport.MyClass0084;, ()I, foo, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_NAME + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"foo[METHOD_REF]{foo(), Lpkgstaticimport.MyClass0084;, (I)I, foo, (i), \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_NAME + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7acaa8af26f28a725e68d6c4f6ea2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testCatchClauseExceptionRef10() throws JavaModelException", "signatureAfterChange": " public void testCatchClauseExceptionRef10() throws JavaModelException", "diff": ["-\t\t\t\"IZZBException[TYPE_REF]{IZZBException, test, Ltest.IZZBException;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXCEPTION + R_EXPECTED_TYPE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"IZZException[TYPE_REF]{IZZException, test, Ltest.IZZException;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXCEPTION + R_EXACT_EXPECTED_TYPE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"IZZBException[TYPE_REF]{IZZBException, test, Ltest.IZZBException;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXCEPTION + R_EXPECTED_TYPE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"IZZException[TYPE_REF]{IZZException, test, Ltest.IZZException;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXCEPTION + R_EXACT_EXPECTED_TYPE + R_NON_RESTRICTED) + \"}\","]}], "num": 52519}