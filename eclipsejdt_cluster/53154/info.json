{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7f3c87bb7699ca075bd8761966e76d2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2345a2ea10c38caefdc6ec41441e7198", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "diff": ["+\t\t\t\tIPath newSourcePath = newResolvedPath[index].getSourceAttachmentPath();", "-\t\t\t\t\t\tnewResolvedPath[index].getSourceAttachmentPath());", "+\t\t\t\t\t\tnewSourcePath,", "+\t\t\t\t\t\tnull/*not a source root path*/);", "-\t\t\t\t\t\tnewResolvedPath[index].getSourceAttachmentRootPath());", "+\t\t\t\t\t\tnewResolvedPath[index].getSourceAttachmentRootPath(),", "+\t\t\t\t\t\tnewSourcePath/*in case both root paths are null*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796713e7b9cb3cb213239fb7dab201b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "03026f75f39f11c89ea1f29e4a5f2b9760be3045", "commitAfterChange": "fa3a52963a70298064a79818b9188ed1e3795a34", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\t \t \tpublic static CompilationUnitDeclaration parse(char[] source, NodeSearcher nodeSearcher, Map settings)", "signatureAfterChange": "\t \t \tpublic static CompilationUnitDeclaration parse(char[] source, NodeSearcher nodeSearcher, Map settings)", "diff": ["-\t\tCompilationUnitDeclaration compilationUnitDeclaration = parser.dietParse(sourceUnit, new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit));", "+\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit);", "+\t\tCompilationUnitDeclaration compilationUnitDeclaration = parser.dietParse(sourceUnit, compilationResult);", "-\t\t\tparser.scanner.setSource(source);", "+\t\t\tparser.scanner.setSource(compilationResult);"]}], "num": 53154}