{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6af394f4c6594f3430795e084c3e9e0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21aba6c38a585f4d1415ddbc010f7a2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "47739dd01ce3511bb65f97cf5d8d29eba2c1e0de", "commitAfterChange": "b6778739eea8aed96c7d00db41320dfa550006fe", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void test036()", "signatureAfterChange": " public void test037()", "diff": ["-// javac incorrectly accepts it", "-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"Test231.java\",", "-\t\t\t\"public class Test231 implements Test231i\\n\" + ", "-\t\t\t\"{\\n\" + ", "-\t\t\t\"\tvoid\tfoo()\\n\" + ", "-\t\t\t\"\t{\\n\" + ", "-\t\t\t\"\t\tnew Object()\\n\" + ", "-\t\t\t\"\t\t{\\n\" + ", "-\t\t\t\"\t\t\tTest231i\tbar()\\n\" + ", "-\t\t\t\"\t\t\t{\\n\" + ", "-\t\t\t\"\t\t\t\treturn\t(Test231i)this;\\n\" + ", "-\t\t\t\"\t\t\t}\\n\" + ", "-\t\t\t\"\t\t};\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"interface Test231i\\n\" + ", "-\t\t\t\"{\\n\" + ", "-\t\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in Test231.java (at line 9)\\n\" + ", "-\t\t\"\treturn\t(Test231i)this;\\n\" + ", "-\t\t\"\t      \t^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Cannot cast from new Object(){} to Test231i\\n\" + ", "-\t\t\"----------\\n\");", "-}", "+// javac incorrectly rejects the cast", "+public void test037() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"    static class BB<T, S> { }\\n\" + ", "+\t\t\t\"    static class BD<T> extends BB<T, T> { }\\n\" + ", "+\t\t\t\"    void f() {\\n\" + ", "+\t\t\t\"        BB<? extends Number, ? super Integer> bb = null;\\n\" + ", "+\t\t\t\"        Object o = (BD<Number>) bb;\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    Zork z;\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tObject o = (BD<Number>) bb;\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The cast from X.BB<capture-of ? extends Number,capture-of ? super Integer> to X.BD<Number> is actually checking against the erased type X.BD\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ed1938748909035f83505f34a17034", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "285d9f55145724991833663a691553a09e2c72de", "commitAfterChange": "b36a137cc1f0fb3b34ff097a37fce4ecbf12fde7", "methodNumberBeforeChange": 724, "methodNumberAfterChange": 724, "signatureBeforeChange": " public void test0706()", "signatureAfterChange": " public void test0706()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\"\t\tBB bb = new BB();\\n\" + ", "-\t\t\t\"\t\tbb.<Object>test();\\n\" + ", "-\t\t\t\"\t\t((AA<CC>) bb).test();\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"class AA<T> { AA<Object> test() {return null;} }\\n\" + ", "-\t\t\t\"class BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "-\t\t\t\"class CC {}\\n\",", "-\t\t},", "-\t\t\"\"", "-\t);", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_7) {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tvoid foo() {\\n\" + ", "+\t\t\t\t\"\t\tBB bb = new BB();\\n\" + ", "+\t\t\t\t\"\t\tbb.<Object>test();\\n\" + ", "+\t\t\t\t\"\t\t((AA<CC>) bb).test();\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"class AA<T> { AA<Object> test() {return null;} }\\n\" + ", "+\t\t\t\t\"class BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\t\"class CC {}\\n\",", "+\t\t\t},", "+\t\t\t\"\");", "+\t\treturn;", "+\t}", "+\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tvoid foo() {\\n\" + ", "+\t\t\t\t\"\t\tBB bb = new BB();\\n\" + ", "+\t\t\t\t\"\t\tbb.<Object>test();\\n\" + ", "+\t\t\t\t\"\t\t((AA<CC>) bb).test();\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"class AA<T> { AA<Object> test() {return null;} }\\n\" + ", "+\t\t\t\t\"class BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\t\"class CC {}\\n\",", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" + ", "+\t\t\t\"\tbb.<Object>test();\\r\\n\" + ", "+\t\t\t\"\t           ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\");\t"]}], "num": 7271}