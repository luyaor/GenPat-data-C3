{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4b022a9533be49c0444b4e524bb7c2b", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24e83c6f6f84c56dca2c82657533d87e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int indexOfWellKnownMethods(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethods(MethodBinding methodBinding)", "diff": ["-\t\t\t} else\r", "-\t\t\t\tif ((firstChar == 'g') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangReflectConstructor) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetConstructor) && CharOperation.equals(methodBinding.parameters[0].constantPoolName(), QualifiedNamesConstants.ArrayJavaLangClassConstantPoolName)) {\r", "+\t\t\t} else if ((firstChar == 'g') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangReflectConstructor) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetConstructor) && CharOperation.equals(methodBinding.parameters[0].constantPoolName(), QualifiedNamesConstants.ArrayJavaLangClassConstantPoolName)) {\r", "-\t\t\t\t}\r", "+\t\t\t} else if ((firstChar == 'd') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_boolean) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.DesiredAssertionStatus)) {\r", "+\t\t\t\t\treturn DESIREDASSERTIONSTATUS_CLASS_METHOD;\r", "+\t\t\t}\r", "+\t\tcase T_JavaLangAssertionError :\r", "+\t\t\tif ((firstChar == '<') && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init)) {\r", "+\t\t\t\tswitch (methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\treturn ASSERTIONERROR_DEFAULT_CONSTR_METHOD;\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_BOOLEAN_METHOD;\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_CHAR_METHOD;\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_DOUBLE_METHOD;\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\tcase T_byte :\r", "+\t\t\t\t\t\t\tcase T_short :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_INT_METHOD;\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_FLOAT_METHOD;\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_LONG_METHOD;\r", "+\t\t\t\t\t\t\tdefault:\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_OBJECT_METHOD;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6783550f5ef6ed4957d599472e3ba085", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int indexOfWellKnownMethods(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethods(MethodBinding methodBinding)", "diff": ["-\t\t\t} else\r", "-\t\t\t\tif ((firstChar == 'g') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangReflectConstructor) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetConstructor) && CharOperation.equals(methodBinding.parameters[0].constantPoolName(), QualifiedNamesConstants.ArrayJavaLangClassConstantPoolName)) {\r", "+\t\t\t} else if ((firstChar == 'g') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangReflectConstructor) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetConstructor) && CharOperation.equals(methodBinding.parameters[0].constantPoolName(), QualifiedNamesConstants.ArrayJavaLangClassConstantPoolName)) {\r", "-\t\t\t\t}\r", "+\t\t\t} else if ((firstChar == 'd') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_boolean) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.DesiredAssertionStatus)) {\r", "+\t\t\t\t\treturn DESIREDASSERTIONSTATUS_CLASS_METHOD;\r", "+\t\t\t}\r", "+\t\tcase T_JavaLangAssertionError :\r", "+\t\t\tif ((firstChar == '<') && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init)) {\r", "+\t\t\t\tswitch (methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\treturn ASSERTIONERROR_DEFAULT_CONSTR_METHOD;\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_BOOLEAN_METHOD;\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_CHAR_METHOD;\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_DOUBLE_METHOD;\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\tcase T_byte :\r", "+\t\t\t\t\t\t\tcase T_short :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_INT_METHOD;\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_FLOAT_METHOD;\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_LONG_METHOD;\r", "+\t\t\t\t\t\t\tdefault:\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_OBJECT_METHOD;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fe0f50825a78da3055b26b49571d8e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int indexOfWellKnownMethods(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethods(MethodBinding methodBinding)", "diff": ["-\t\t\t} else\r", "-\t\t\t\tif ((firstChar == 'g') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangReflectConstructor) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetConstructor) && CharOperation.equals(methodBinding.parameters[0].constantPoolName(), QualifiedNamesConstants.ArrayJavaLangClassConstantPoolName)) {\r", "+\t\t\t} else if ((firstChar == 'g') && (methodBinding.parameters.length == 1) && (methodBinding.returnType.id == T_JavaLangReflectConstructor) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.GetConstructor) && CharOperation.equals(methodBinding.parameters[0].constantPoolName(), QualifiedNamesConstants.ArrayJavaLangClassConstantPoolName)) {\r", "-\t\t\t\t}\r", "+\t\t\t} else if ((firstChar == 'd') && (methodBinding.parameters.length == 0) && (methodBinding.returnType.id == T_boolean) && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.DesiredAssertionStatus)) {\r", "+\t\t\t\t\treturn DESIREDASSERTIONSTATUS_CLASS_METHOD;\r", "+\t\t\t}\r", "+\t\tcase T_JavaLangAssertionError :\r", "+\t\t\tif ((firstChar == '<') && CharOperation.equals(methodBinding.selector, QualifiedNamesConstants.Init)) {\r", "+\t\t\t\tswitch (methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\treturn ASSERTIONERROR_DEFAULT_CONSTR_METHOD;\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_BOOLEAN_METHOD;\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_CHAR_METHOD;\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_DOUBLE_METHOD;\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\tcase T_byte :\r", "+\t\t\t\t\t\t\tcase T_short :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_INT_METHOD;\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_FLOAT_METHOD;\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_LONG_METHOD;\r", "+\t\t\t\t\t\t\tdefault:\r", "+\t\t\t\t\t\t\t\treturn ASSERTIONERROR_CONSTR_OBJECT_METHOD;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r"]}], "num": 68169}