{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "800917de8c4db3503b679564b392eb53", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81852b0679afbe5cd7f6d543171897ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e8d96e56e13118d9f9047fcbd38a9ee4769bcc83", "commitAfterChange": "0e8f4e0ca4c462961b44d5a44fb8fe6d622a551b", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " protected void validateOptions(boolean didSpecifyCompliance) throws InvalidInputException", "signatureAfterChange": " protected void validateOptions(boolean didSpecifyCompliance) throws InvalidInputException", "diff": ["-\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "-\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t\tif (this.didSpecifySource) {", "+\t\t\t\tObject source = this.options.get(CompilerOptions.OPTION_Source);", "+\t\t\t\tif (CompilerOptions.VERSION_1_3.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t\t\t} else if (CompilerOptions.VERSION_1_4.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t\t}", "-\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "-\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "+\t\t\tif (this.didSpecifySource) {", "+\t\t\t\tObject source = this.options.get(CompilerOptions.OPTION_Source);", "+\t\t\t\tif (CompilerOptions.VERSION_1_3.equals(source)", "+\t\t\t\t\t\t|| CompilerOptions.VERSION_1_4.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\t\t} else if (CompilerOptions.VERSION_1_5.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "+\t\t\t}", "-\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);", "-\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\tif (this.didSpecifySource) {", "+\t\t\t\tObject source = this.options.get(CompilerOptions.OPTION_Source);", "+\t\t\t\tif (CompilerOptions.VERSION_1_3.equals(source)", "+\t\t\t\t\t\t|| CompilerOptions.VERSION_1_4.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\t\t} else if (CompilerOptions.VERSION_1_5.equals(source)", "+\t\t\t\t\t\t|| CompilerOptions.VERSION_1_6.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\t}", "-\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_7);", "-\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_7);", "+\t\t\tif (this.didSpecifySource) {", "+\t\t\t\tObject source = this.options.get(CompilerOptions.OPTION_Source);", "+\t\t\t\tif (CompilerOptions.VERSION_1_3.equals(source)", "+\t\t\t\t\t\t|| CompilerOptions.VERSION_1_4.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\t\t} else if (CompilerOptions.VERSION_1_5.equals(source)", "+\t\t\t\t\t\t|| CompilerOptions.VERSION_1_6.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\t\t} else if (CompilerOptions.VERSION_1_7.equals(source)) {", "+\t\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_7);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_7);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_7);", "+\t\t\t}", "-\t}", "-\tif (this.didSpecifySource) {", "+\t} else if (this.didSpecifySource) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d959d829e0a62ec5dac3b55f2898e242", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\tsourceType.qualifiedPackageName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.modifiers,", "-\t\t\t\t\t\tthis.startPosition - this.offset, ", "-\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\trelevance);", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\tproposal.setDeclarationSignature(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setSignature(getSignature(sourceType));", "+\t\t\t\t\t\tproposal.setPackageName(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setTypeName(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setCompletion(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setFlags(sourceType.modifiers);", "+\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\tsourceType.qualifiedPackageName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.sourceName(),", "-\t\t\t\t\t\tsourceType.modifiers,", "-\t\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\trelevance);", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\tproposal.setDeclarationSignature(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setSignature(getSignature(sourceType));", "+\t\t\t\t\t\tproposal.setPackageName(sourceType.qualifiedPackageName());", "+\t\t\t\t\t\tproposal.setTypeName(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setCompletion(sourceType.sourceName());", "+\t\t\t\t\t\tproposal.setFlags(sourceType.modifiers | Flags.AccInterface);", "+\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\t\t\t\tpackageName,", "-\t\t\t\t\t\t\t\t\ttypeName,", "-\t\t\t\t\t\t\t\t\tcompletionName,", "-\t\t\t\t\t\t\t\t\trefBinding.modifiers,", "-\t\t\t\t\t\t\t\t\tthis.startPosition - this.offset, ", "-\t\t\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(refBinding));", "+\t\t\t\t\t\t\t\t\tproposal.setPackageName(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeName);", "+\t\t\t\t\t\t\t\t\tproposal.setCompletion(completionName);", "+\t\t\t\t\t\t\t\t\tproposal.setFlags(refBinding.modifiers);", "+\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\t\t\t\tpackageName,", "-\t\t\t\t\t\t\t\t\ttypeName,", "-\t\t\t\t\t\t\t\t\tcompletionName,", "-\t\t\t\t\t\t\t\t\trefBinding.modifiers,", "-\t\t\t\t\t\t\t\t\tthis.startPosition - this.offset, ", "-\t\t\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(refBinding));", "+\t\t\t\t\t\t\t\t\tproposal.setPackageName(packageName);", "+\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeName);", "+\t\t\t\t\t\t\t\t\tproposal.setCompletion(completionName);", "+\t\t\t\t\t\t\t\t\tproposal.setFlags(refBinding.modifiers | Flags.AccInterface);", "+\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa6c7aa9c7e787573fc0b3eae0eefe39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "bc36c6c80fea8051d7058a5b477375cffbc00908", "commitAfterChange": "6f60569d194de3bca836674a443f538feb4384aa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": " \t \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\tfindKeywordsForMember(this.completionToken, field.modifiers);", "+\t\t\tif(!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\t\tfindKeywordsForMember(this.completionToken, field.modifiers);", "+\t\t\t}", "-\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "-\t\t\t\tproposeNewMethod(this.completionToken, scope.enclosingSourceType());", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {", "+\t\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "+\t\t\t\t}", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "+\t\t\t\t\tproposeNewMethod(this.completionToken, scope.enclosingSourceType());", "+\t\t\t\t}", "-\t\t\t\tfindKeywordsForMember(this.completionToken, method.modifiers);", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\t\t\tfindKeywordsForMember(this.completionToken, method.modifiers);", "+\t\t\t\t}", "-\t\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "-\t\t\t\t\tproposeNewMethod(this.completionToken, scope.enclosingSourceType());", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {", "+\t\t\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "+\t\t\t\t\t}", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "+\t\t\t\t\t\tproposeNewMethod(this.completionToken, scope.enclosingSourceType());", "+\t\t\t\t\t}", "-\t\t\t\t\t\tthis.findEnumConstant(this.completionToken, (SwitchStatement) astNodeParent);", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\t\t\t\tthis.findEnumConstant(this.completionToken, (SwitchStatement) astNodeParent);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords);", "-\t\t\t\t\t\tif(singleNameReference.canBeExplicitConstructor){", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif(singleNameReference.canBeExplicitConstructor && !this.requestor.isIgnored(CompletionProposal.METHOD_REF)){", "-\t\t\t\t\t\t\t\tfindMemberTypes(", "-\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tfindMemberTypes(this.completionToken, receiverType, scope, scope.enclosingSourceType(), false, new ObjectVector());", "-\t", "-\t\t\t\t\t\t\t\t\tfindClassField(this.completionToken, (TypeBinding) qualifiedBinding, scope);", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\t\tfindMemberTypes(this.completionToken, receiverType, scope, scope.enclosingSourceType(), false, new ObjectVector());", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\t\t\t\t\t\t\tfindClassField(this.completionToken, (TypeBinding) qualifiedBinding, scope);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif((scope instanceof MethodScope && !((MethodScope)scope).isStatic)", "-\t\t\t\t\t\t\t\t\t\t|| ((methodScope = scope.enclosingMethodScope()) != null && !methodScope.isStatic)) {", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.KEYWORD) &&", "+\t\t\t\t\t\t\t\t\t\t\t((scope instanceof MethodScope && !((MethodScope)scope).isStatic)", "+\t\t\t\t\t\t\t\t\t\t\t|| ((methodScope = scope.enclosingMethodScope()) != null && !methodScope.isStatic))) {", "-\t\t\t\t\t\t\t\t\tfindFields(", "-\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\treceiverType,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "-\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "-\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\tref,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\t\t\t\t\t\t\tfindFields(", "+\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\treceiverType,", "+\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\t\t\tref,", "+\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tfindMethods(", "-\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\treceiverType,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "-\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tref,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF)) {", "+\t\t\t\t\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\t\t\treceiverType,", "+\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\tref,", "+\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t\t}", "-\t", "-\t\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\t\t\t\t\t\tfindMemberTypes(", "-\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "-\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t\t\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW});", "+\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW});", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\tfindImplicitMessageSends(this.completionToken, argTypes, scope, messageSend, scope);", "+\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tfindImplicitMessageSends(this.completionToken, argTypes, scope, messageSend, scope);", "+\t\t\t\t\t\t\t\t\t\t\t}", "-\t", "-\t\t\t\t\t\t\t\t\t\t\tfindMethods(", "-\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\t\t\targTypes,", "-\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "-\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\t\t\tmessageSend,", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\t\t\tmessageSend.receiver instanceof SuperReference,", "-\t\t\t\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tfindMethods(", "+\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector(),", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmessageSend,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmessageSend.receiver instanceof SuperReference,", "+\t\t\t\t\t\t\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd, false);", "-\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\tCompletionOnExplicitConstructorCall constructorCall =", "-\t\t\t\t\t\t\t\t\t\t\t\t(CompletionOnExplicitConstructorCall) astNode;", "-\t\t\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =", "-\t\t\t\t\t\t\t\t\t\t\t\tcomputeTypes(constructorCall.arguments, (BlockScope) scope);", "-\t\t\t\t\t\t\t\t\t\t\tfindConstructors(", "-\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\t\t\t\t\t\t\t\targTypes,", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\tconstructorCall,", "-\t\t\t\t\t\t\t\t\t\t\t\tfalse);", "-\t", "+\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd, false);", "+\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnExplicitConstructorCall constructorCall =", "+\t\t\t\t\t\t\t\t\t\t\t\t\t(CompletionOnExplicitConstructorCall) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\tTypeBinding[] argTypes =", "+\t\t\t\t\t\t\t\t\t\t\t\t\tcomputeTypes(constructorCall.arguments, (BlockScope) scope);", "+\t\t\t\t\t\t\t\t\t\t\t\tfindConstructors(", "+\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tconstructorCall,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\tif(ref.isClass()) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tif(!ref.isAbstract()) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF)", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& ref.isClass()", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !ref.isAbstract()) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\tif(!ref.isFinal() && !ref.isEnum()){", "+\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION)", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !ref.isFinal()", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !ref.isEnum()){", "-\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnClassLiteralAccess access = (CompletionOnClassLiteralAccess) astNode;", "-\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(access.classStart, access.sourceEnd);", "-\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = access.completionIdentifier;", "-\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(this.completionToken, (TypeBinding) qualifiedBinding, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnClassLiteralAccess access = (CompletionOnClassLiteralAccess) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(access.classStart, access.sourceEnd);", "+\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = access.completionIdentifier;", "+\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(this.completionToken, (TypeBinding) qualifiedBinding, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMethodName method = (CompletionOnMethodName) astNode;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(method.sourceStart, method.selectorEnd);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tFieldBinding[] fields = scope.enclosingSourceType().fields();", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tchar[][] excludeNames = new char[fields.length][];", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0 ; i < fields.length ; i++){", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcludeNames[i] = fields[i].name;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = method.selector;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(this.completionToken, method.returnType, excludeNames, FIELD, method.modifiers);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnFieldName) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnFieldName field = (CompletionOnFieldName) astNode;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.VARIABLE_DECLARATION)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMethodName method = (CompletionOnMethodName) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(method.sourceStart, method.selectorEnd);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = field.realName;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = method.selector;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(field.realName, field.type, excludeNames, FIELD, field.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(this.completionToken, method.returnType, excludeNames, FIELD, method.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnFieldName) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.VARIABLE_DECLARATION)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnFieldName field = (CompletionOnFieldName) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFieldBinding[] fields = scope.enclosingSourceType().fields();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchar[][] excludeNames = new char[fields.length][];", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0 ; i < fields.length ; i++){", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcludeNames[i] = fields[i].name;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = field.realName;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(field.realName, field.type, excludeNames, FIELD, field.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLocalDeclaration variable = (LocalDeclaration) astNode;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLocalVariableBinding[] locals = ((BlockScope)scope).locals;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchar[][] excludeNames = new char[locals.length][];", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tint localCount = 0;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0 ; i < locals.length ; i++){", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(locals[i] != null) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcludeNames[localCount++] = locals[i].name;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.VARIABLE_DECLARATION)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLocalDeclaration variable = (LocalDeclaration) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLocalVariableBinding[] locals = ((BlockScope)scope).locals;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchar[][] excludeNames = new char[locals.length][];", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tint localCount = 0;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0 ; i < locals.length ; i++){", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(locals[i] != null) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcludeNames[localCount++] = locals[i].name;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSystem.arraycopy(excludeNames, 0, excludeNames = new char[localCount][], 0, localCount);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(variable instanceof CompletionOnLocalName){", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = ((CompletionOnLocalName) variable).realName;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(this.completionToken, variable.type, excludeNames, LOCAL, variable.modifiers);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnArgumentName arg = (CompletionOnArgumentName) variable;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = arg.realName;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(this.completionToken, variable.type, excludeNames, arg.isCatchArgument ? LOCAL : ARGUMENT, variable.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSystem.arraycopy(excludeNames, 0, excludeNames = new char[localCount][], 0, localCount);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(variable instanceof CompletionOnLocalName){", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = ((CompletionOnLocalName) variable).realName;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(this.completionToken, variable.type, excludeNames, LOCAL, variable.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnArgumentName arg = (CompletionOnArgumentName) variable;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = arg.realName;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(this.completionToken, variable.type, excludeNames, arg.isCatchArgument ? LOCAL : ARGUMENT, variable.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnKeyword keyword = (CompletionOnKeyword)astNode;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnKeyword keyword = (CompletionOnKeyword)astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnParameterizedQualifiedTypeReference ref = (CompletionOnParameterizedQualifiedTypeReference) astNode;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.insideQualifiedReference = true;", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsClass = ref.isClass();", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsException = ref.isException();", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsInterface = ref.isInterface();", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = ref.completionIdentifier;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlong completionPosition = ref.sourcePositions[ref.tokens.length];", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindMemberTypes(", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnParameterizedQualifiedTypeReference ref = (CompletionOnParameterizedQualifiedTypeReference) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.insideQualifiedReference = true;", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsClass = ref.isClass();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsException = ref.isException();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsInterface = ref.isInterface();", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = ref.completionIdentifier;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlong completionPosition = ref.sourcePositions[ref.tokens.length];", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMemberValueName memberValuePair = (CompletionOnMemberValueName) astNode;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAnnotation annotation = (Annotation) astNodeParent;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = memberValuePair.name;", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.findAnnotationAttributes(this.completionToken, annotation.memberValuePairs(), (ReferenceBinding)annotation.resolvedType);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.ANNOTATION_ATTRIBUTE_REF)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMemberValueName memberValuePair = (CompletionOnMemberValueName) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAnnotation annotation = (Annotation) astNodeParent;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = memberValuePair.name;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.findAnnotationAttributes(this.completionToken, annotation.memberValuePairs(), (ReferenceBinding)annotation.resolvedType);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}"]}], "num": 979}