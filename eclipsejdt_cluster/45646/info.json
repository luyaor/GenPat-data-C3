{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c569d5b87b7cabddb777098c35fc161", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f189f7d6544f38a0bc381b62e3bd51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "d4ec2cadb3e7536bb815d2a43adb7b51f267f01a", "commitAfterChange": "78310b6881d29e4104dd5ac0bf79c342409c9931", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprivate Expression newAnnotationValue(AST ast, Object value, ImportRewriteContext context)", "signatureAfterChange": "  \tprivate Expression addAnnotation(AST ast, Object value, ImportRewriteContext context)", "diff": ["-", "-\tprivate Expression newAnnotationValue(AST ast, Object value, ImportRewriteContext context) {", "+\tprivate Expression addAnnotation(AST ast, Object value, ImportRewriteContext context) {", "-\t\t\treturn newAnnotation(ast, (IAnnotationBinding) value, context);", "+\t\t\treturn addAnnotation((IAnnotationBinding) value, ast, context);", "-\t\t\t\treturn newAnnotationValue(ast, values[0], context);", "+\t\t\t\treturn addAnnotation(ast, values[0], context);", "-\t\t\t\texpressions.add(newAnnotationValue(ast, values[i], context));", "+\t\t\t\texpressions.add(addAnnotation(ast, values[i], context));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "564d1976a0f8afe2dd273d0959f48a64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "ee7d00c6fce3f5ac075ad1ae838556503fe6ca33", "commitAfterChange": "42a20f90363fe2e676c07d56364d6cc6b90a9458", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tprivate void annotateType(AnnotatableType type, IAnnotationBinding [] annotationBindings, AST ast, ImportRewriteContext context)", "signatureAfterChange": "  \tprivate void annotateList(List annotations, IAnnotationBinding [] annotationBindings, AST ast, ImportRewriteContext context)", "diff": ["+\tprivate void annotateList(List annotations, IAnnotationBinding [] annotationBindings, AST ast, ImportRewriteContext context) {", "+\t\tfor (int i = 0; i< annotationBindings.length; i++) {", "+\t\t\tAnnotation annotation = newAnnotation(ast, annotationBindings[i], context);", "+\t\t\tif (annotation != null) annotations.add(annotation);", "+\t\t}", "+\t}", "-\tprivate void annotateType(AnnotatableType type, IAnnotationBinding [] annotationBindings, AST ast, ImportRewriteContext context) {", "-\t\tfor (int i = 0; i< annotationBindings.length; i++) {", "-\t\t\tAnnotation annotation = newAnnotation(ast, annotationBindings[i], context);", "-\t\t\tif (annotation != null) type.annotations().add(annotation);"]}], "num": 45646}