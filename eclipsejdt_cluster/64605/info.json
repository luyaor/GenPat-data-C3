{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21043035210c99a918184e5b4fa0184b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f16927fbb6e8a95bc7af11bf153c35f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "70000ab48e563f19622aff0c653f3b2bb65b1ad9", "commitAfterChange": "f34862ac9f7a60551d93968b3f9930cb2fb89be9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void decodeIndexKey(char[] key)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-\tint start = slash + 1;", "-\tslash = CharOperation.indexOf(SEPARATOR, key, start);", "-\tthis.pkg = slash == start ? CharOperation.NO_CHAR : internedPackageNames.add(CharOperation.subarray(key, start, slash));", "+\tint start = ++slash;", "+\tif (key[start] == SEPARATOR) {", "+\t\tthis.pkg = CharOperation.NO_CHAR;", "+\t} else {", "+\t\tslash = CharOperation.indexOf(SEPARATOR, key, start);", "+\t\tthis.pkg = internedPackageNames.add(CharOperation.subarray(key, start, slash));", "+\t}", "-\tslash = CharOperation.indexOf(SEPARATOR, key, start = slash + 1);", "-\tif (slash == start) {", "+\t// Continue key read by the end to decode modifiers", "+\tint last = key.length-1;", "+\tthis.secondary = key[last] == 'S';", "+\tif (this.secondary) {", "+\t\tlast -= 2;", "+\t}", "+\tthis.modifiers = key[last-1] + (key[last]<<16);", "+\tdecodeModifiers();", "+", "+\t// Retrieve enclosing type names", "+\tstart = slash + 1;", "+\tlast -= 2; // position of ending slash", "+\tif (start == last) {", "-\t\tchar[] names = CharOperation.subarray(key, start, slash);", "-\t\tthis.enclosingTypeNames = CharOperation.equals(ONE_ZERO, names) ? ONE_ZERO_CHAR : CharOperation.splitOn('.', names);", "+\t\tif (last == (start+1) && key[start] == ZERO_CHAR) {", "+\t\t\tthis.enclosingTypeNames = ONE_ZERO_CHAR;", "+\t\t} else {", "+\t\t\tthis.enclosingTypeNames = CharOperation.splitOn('.', key, start, last);", "+\t\t}", "-", "-\tslash = CharOperation.indexOf(SEPARATOR, key, start = slash + 1);", "-\tint last = key.length;", "-\tif (slash > 0) { // secondary", "-\t\tthis.secondary = key[slash+1] == 'S';", "-\t\tlast = slash;", "-\t}", "-\tthis.modifiers = key[last-2] + (key[last-1]<<16);", "-\tdecodeModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a47ff020e52fa2a106563f69ae40ceb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "70000ab48e563f19622aff0c653f3b2bb65b1ad9", "commitAfterChange": "f34862ac9f7a60551d93968b3f9930cb2fb89be9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void decodeIndexKey(char[] key)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-\tslash = CharOperation.indexOf(SEPARATOR, key, start = slash + 1);", "-\tif (slash == start) {", "+\tstart = ++slash;", "+\tif (key[start] == SEPARATOR) {", "-\t\tchar[] names = CharOperation.subarray(key, start, slash);", "-\t\tthis.enclosingTypeName = CharOperation.equals(ONE_ZERO, names) ? ONE_ZERO : names;", "+\t\tslash = CharOperation.indexOf(SEPARATOR, key, start);", "+\t\tif (slash == (start+1) && key[start] == ZERO_CHAR) {", "+\t\t\tthis.enclosingTypeName = ONE_ZERO;", "+\t\t} else {", "+\t\t\tchar[] names = CharOperation.subarray(key, start, slash);", "+\t\t\tthis.enclosingTypeName = names;", "+\t\t}", "-\tslash = CharOperation.indexOf(SEPARATOR, key, start = slash + 1);", "-\tif (slash == start) {", "+\tstart = ++slash;", "+\tif (key[start] == SEPARATOR) {", "-\t\tchar[] names = CharOperation.subarray(key, start, slash);", "-\t\tthis.typeParameterSignatures = CharOperation.splitOn(',', names);", "+\t\tslash = CharOperation.indexOf(SEPARATOR, key, start);", "+\t\tthis.typeParameterSignatures = CharOperation.splitOn(',', key, start, slash);", "-\tslash = CharOperation.indexOf(SEPARATOR, key, start = slash + 1);", "-\tif (slash == start) {", "+\tstart = ++slash;", "+\tif (key[start] == SEPARATOR) {", "-\t\tchar[] names = CharOperation.subarray(key, start, slash);", "-\t\tthis.pkgName = CharOperation.equals(ONE_ZERO, names) ? this.superQualification : names;", "+\t\tslash = CharOperation.indexOf(SEPARATOR, key, start);", "+\t\tif (slash == (start+1) && key[start] == ZERO_CHAR) {", "+\t\t\tthis.pkgName = this.superQualification;", "+\t\t} else {", "+\t\t\tchar[] names = CharOperation.subarray(key, start, slash);", "+\t\t\tthis.pkgName = names;", "+\t\t}"]}], "num": 64605}