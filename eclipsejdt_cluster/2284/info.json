{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1efaf3d366becbb8c3efaf72f99b542c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "123ec27428371d0085799540750846dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "1f3fa606c98d7f27a76d088fefafbc3cb110858d", "commitAfterChange": "3826deb7274f8b670a1e803be5c591bc377a58f3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test005()", "signatureAfterChange": " \tpublic void test005()", "diff": ["-\t\t\torg.eclipse.jdt.core.util.IClassFileReader classFileReader = org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(EVAL_DIRECTORY + File.separator + \"A.class\", org.eclipse.jdt.core.util.IClassFileReader.ALL);", "-\t\t\torg.eclipse.jdt.core.util.IMethodInfo[] methodInfos = classFileReader.getMethodInfos();", "+\t\t\tIClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(EVAL_DIRECTORY + File.separator + \"A.class\", IClassFileReader.ALL);", "+\t\t\tIMethodInfo[] methodInfos = classFileReader.getMethodInfos();", "-\t\t\torg.eclipse.jdt.core.util.IMethodInfo methodInfo = methodInfos[1];", "+\t\t\tIMethodInfo methodInfo = methodInfos[1];", "-\t\t\torg.eclipse.jdt.core.util.ICodeAttribute codeAttribute = methodInfo.getCodeAttribute();", "+\t\t\tICodeAttribute codeAttribute = methodInfo.getCodeAttribute();", "-\t\t\torg.eclipse.jdt.core.util.ILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "+\t\t\tILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8252ca6a9d749d07abc2d6acb0cf6776", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "signatureAfterChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "diff": ["-\t\torg.eclipse.jdt.internal.compiler.ast.Expression type = expression.type;", "+\t\tTypeReference type = expression.type;", "-\t\tif (type instanceof org.eclipse.jdt.internal.compiler.ast.TypeReference ) {", "-\t\t\tcastExpression.setType(convertType((org.eclipse.jdt.internal.compiler.ast.TypeReference)type));", "-\t\t} else if (type instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "-\t\t\tcastExpression.setType(convertToType((org.eclipse.jdt.internal.compiler.ast.NameReference)type));", "-\t\t}", "+\t\tcastExpression.setType(convertType(type));"]}], "num": 2284}