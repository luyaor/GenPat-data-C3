{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dd45dfbc78c3545009b402ccf1e162a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b1ad173c833bb58d94aa46eb46d3d71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "4b460199498c48cda44ce10125aa5901a10bff62", "commitAfterChange": "ccd12469d7fc21a8e1a0a597451a059df56002ad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate boolean examineGetDocComment()", "signatureAfterChange": " \tprivate boolean examineGetDocComment()", "diff": ["-\t\tnameToDoc.put(\"FChildI\", \" Javadoc on nested interface FChildI\\n\");", "+\t\tnameToDoc.put(\"FChildI\", ", "+\t\t\t\t\" Javadoc on nested interface FChildI\\n\" +", "+\t\t\t\t\"\\tthis line has tab after asterisk and ends with another tab\\t\\n\" +", "+\t\t\t\t\"\\tthis one too\\t\\n\" +", "+\t\t\t\t\"   this line has three spaces after asterisk and ends with three spaces   \\n\" +", "+\t\t\t\t\" this line has only one space before the asterisk\\n\");", "+\t\tnameToDoc.put(\"_fieldT1_private\", ", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\" Javadoc on _fieldT1_private\\n\" +", "+\t\t\t\t\"  this line starts with two spaces, no asterisk\\n\" +", "+\t\t\t\t\"        This line starts, contains\\tand ends with a tab\\t\\n\" +", "+\t\t\t\t\"                 This line starts with a space, tab, space, tab, space\\n\");", "+\t\tnameToDoc.put(\"getAnonymousObjectAbstract\", \"\");", "+\t\tnameToDoc.put(\"add\", \"\\n\t@add(int)\\n\");", "+\t\tnameToDoc.put(\"foo\", \"\\n Creates a new instance of AllChecks \\n\");", "+\t\tnameToDoc.put(\"bar\", \" @bar\\t(int)\\n\");", "+\t\tnameToDoc.put(\"bar2\", \"\\t@bar2(int)\\n\");", "+\t\tnameToDoc.put(\"m\", \"                Method\\tm\\n\");", "+\t\tnameToDoc.put(\"m1\", \"This is a comment for the method m1,\\n\" + ", "+\t\t\t\t\"  it is on two lines\\n\");", "+\t\tnameToDoc.put(\"m2\", \"Another comment - starts on first line and\\n\" + ", "+\t\t\t\t\"    continue on the second line \");", "+\t\tnameToDoc.put(\"m3\", \" One more test case that.\\n\" + ", "+\t\t\t\t\" needs\\n\" + ", "+\t\t\t\t\" to be verified.\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\" An empty line with no spaces need to be seen as an empty line.\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\" End of the comment.\\n\");", "-\t\t", "-\t\t\t\t\treportError(\"examineGetDocComment: Expected getDocComment(\" + name + \") to return null, but got \" + actual);", "+\t\t\t\t\treportError(\"examineGetDocComment: Expected getDocComment(\" + name + \") to return null, but got \" + _elementUtils.getDocComment(e));", "-\t\t\t\t\t\treportError(\"examineGetDocComment: Unexpected result from getDocComment(\" + name + \"): \" + actual);", "+\t\t\t\t\t\treportError(\"examineGetDocComment: Unexpected result from getDocComment(\" + name + \"): \" + _elementUtils.getDocComment(e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f4a7b0e828cb47dd00c7d8b5d0b533d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f85e5794e7155d3ab9e49db10b3cbaae760ca385", "commitAfterChange": "1bc9aa58a7d6690341cd3e18f25c7a82bd0dbef0", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["+\t\tpreferences.setDefault(SORTING_TYPE_ORDER, SORTING_ORDER_FIRST);", "+\t\toptionNames.add(SORTING_TYPE_ORDER);", "+", "+\t\tpreferences.setDefault(SORTING_STATIC_INITIALIZER_ORDER, SORTING_ORDER_SECOND);", "+\t\toptionNames.add(SORTING_STATIC_INITIALIZER_ORDER);", "+", "+\t\tpreferences.setDefault(SORTING_STATIC_FIELD_ORDER, SORTING_ORDER_THIRD);", "+\t\toptionNames.add(SORTING_STATIC_FIELD_ORDER);", "+", "+\t\tpreferences.setDefault(SORTING_STATIC_METHOD_ORDER, SORTING_ORDER_FOURTH);", "+\t\toptionNames.add(SORTING_STATIC_METHOD_ORDER);", "+", "+\t\tpreferences.setDefault(SORTING_INITIALIZER_ORDER, SORTING_ORDER_FIFTH);", "+\t\toptionNames.add(SORTING_INITIALIZER_ORDER);", "+", "+\t\tpreferences.setDefault(SORTING_FIELD_ORDER, SORTING_ORDER_SIXTH);", "+\t\toptionNames.add(SORTING_FIELD_ORDER);", "+", "+\t\tpreferences.setDefault(SORTING_CONSTRUCTOR_ORDER, SORTING_ORDER_SEVENTH);", "+\t\toptionNames.add(SORTING_CONSTRUCTOR_ORDER);", "+", "+\t\tpreferences.setDefault(SORTING_METHOD_ORDER, SORTING_ORDER_EIGHTH);", "+\t\toptionNames.add(SORTING_METHOD_ORDER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4836489322ecd5158d01355e2c586513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "1248181e23c81da45ee8e328a409b761a39e6e52", "commitAfterChange": "3df0b6d0a7c9e742ebbc5f2930d09070fa613a77", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["+\t\tpreferences.setDefault(CODEASSIST_FIELD_PREFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_FIELD_PREFIXES);", "+\t\t", "+\t\tpreferences.setDefault(CODEASSIST_STATIC_FIELD_PREFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_STATIC_FIELD_PREFIXES);", "+\t\t", "+\t\tpreferences.setDefault(CODEASSIST_LOCAL_PREFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_LOCAL_PREFIXES);", "+\t\t", "+\t\tpreferences.setDefault(CODEASSIST_ARGUMENT_PREFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_ARGUMENT_PREFIXES);", "+\t\t", "+\t\tpreferences.setDefault(CODEASSIST_FIELD_SUFFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_FIELD_SUFFIXES);", "+\t\t", "+\t\tpreferences.setDefault(CODEASSIST_STATIC_FIELD_SUFFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_STATIC_FIELD_SUFFIXES);", "+\t\t", "+\t\tpreferences.setDefault(CODEASSIST_LOCAL_SUFFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_LOCAL_SUFFIXES);", "+\t\t", "+\t\tpreferences.setDefault(CODEASSIST_ARGUMENT_SUFFIXES, \"\"); //$NON-NLS-1$", "+\t\toptionNames.add(CODEASSIST_ARGUMENT_SUFFIXES);", "+\t\t"]}], "num": 18343}