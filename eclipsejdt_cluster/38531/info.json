{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d95fb3565a115da1cd39442b93cffc50", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33620c39a827cab65da1682150403aca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "f0ba284185943d1b8df039a8beb736a55eeed994", "commitAfterChange": "e51594c408ebb686b1be624626fdc1156c116aa5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient)", "signatureAfterChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient)", "diff": ["-\t\t\tannotation.recipient = recipient;", "-\t\t\tannotationTypes[i] = annotation.resolveType(scope);", "-", "-\t\t\t// null if receiver is a package binding", "-\t\t\tif (instances != null)", "-\t\t\t\tinstances[i] = annotation.getCompilerAnnotation();", "+\t\t\tfinal Binding annotationRecipient = annotation.recipient;", "+\t\t\tif (annotationRecipient != null && recipient != null) {", "+\t\t\t\t// only local and field can share annnotations", "+\t\t\t\tswitch (recipient.kind()) {", "+\t\t\t\t\tcase Binding.FIELD :", "+\t\t\t\t\t\tFieldBinding field = (FieldBinding) recipient;", "+\t\t\t\t\t\tfield.tagBits = ((FieldBinding) annotationRecipient).tagBits;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase Binding.LOCAL :", "+\t\t\t\t\t\tLocalVariableBinding local = (LocalVariableBinding) recipient;", "+\t\t\t\t\t\tlocal.tagBits = ((LocalVariableBinding) annotationRecipient).tagBits;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tif (instances != null) {", "+\t\t\t\t\t// need to fill the instances array", "+\t\t\t\t\tinstances[0] = annotation.getCompilerAnnotation();", "+\t\t\t\t\tfor (int j = 1; j < length; j++) {", "+\t\t\t\t\t\tAnnotation annot = annotations[j];", "+\t\t\t\t\t\tinstances[j] = annot.getCompilerAnnotation();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tannotation.recipient = recipient;", "+\t\t\t\tannotationTypes[i] = annotation.resolveType(scope);", "+\t\t\t\t// null if receiver is a package binding", "+\t\t\t\tif (instances != null) {", "+\t\t\t\t\tinstances[i] = annotation.getCompilerAnnotation();", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6caaf75903fe142fa0e61f9aa7527eb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "efd7cd38b35f875ede44936aed68717b93ca608e", "commitAfterChange": "e4adb79086f880599e097f61810ee53a81bdc035", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void resolveAnnotations( BlockScope scope, Annotation[] annotations, Binding recipient)", "signatureAfterChange": " \tpublic void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient)", "diff": ["-\tpublic void resolveAnnotations( BlockScope scope, Annotation[] annotations, Binding recipient) {", "+\tpublic void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding recipient) {", "+\t\tif (recipient != null) {", "+\t\t\tswitch (recipient.kind()) {", "+\t\t\t\tcase Binding.PACKAGE :", "+\t\t\t\t\t// TODO (philippe) need support for package annotations", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Binding.TYPE :", "+\t\t\t\tcase Binding.GENERIC_TYPE :", "+\t\t\t\tcase Binding.TYPE_PARAMETER :", "+\t\t\t\t\tReferenceBinding type = (ReferenceBinding) recipient;", "+\t\t\t\t\tif ((type.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\ttype.tagBits |= TagBits.AnnotationResolved;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Binding.METHOD :", "+\t\t\t\t\tMethodBinding method = (MethodBinding) recipient;", "+\t\t\t\t\tif ((method.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tmethod.tagBits |= TagBits.AnnotationResolved;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Binding.FIELD :", "+\t\t\t\t\tFieldBinding field = (FieldBinding) recipient;", "+\t\t\t\t\tif ((field.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tfield.tagBits |= TagBits.AnnotationResolved;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Binding.LOCAL :", "+\t\t\t\t\tLocalVariableBinding local = (LocalVariableBinding) recipient;", "+\t\t\t\t\tif ((local.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tlocal.tagBits |= TagBits.AnnotationResolved;", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t", "+\t\t}"]}], "num": 38531}