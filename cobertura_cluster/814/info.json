{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e790ab59922913ee3c297ef5b5c6b0db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c4128b08772b66a493af6047f4a28f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/test/AbstractCoberturaTestCase.java", "commitBeforeChange": "5c95e91c4fb8eaabadd9ca6cf6b3ebb78c8822c3", "commitAfterChange": "75f2a2aa41065d346a83ea898e7b1a155a99d13e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void parseIssueTester(String imports, String method) \t\t\tthrows IOException", "signatureAfterChange": " \tpublic static void parseIssueTester(String imports, String method) \t\t\tthrows IOException", "diff": ["-\t\tDefaultLogger fileLogger = new DefaultLogger();", "-\t\tfileLogger.setErrorPrintStream(new PrintStream(new File(reportDir,", "-\t\t\t\t\"error.log\")));", "-\t\tfileLogger.setOutputPrintStream(new PrintStream(new File(reportDir,", "-\t\t\t\t\"std.log\")));", "-\t\tfileLogger.setMessageOutputLevel(Project.MSG_INFO);", "-\t\tTestUtils.project.addBuildListener(fileLogger);", "+\t\tdebugReportTask();", "-\t\tReportTask reportTask = new ReportTask();", "-\t\treportTask.setProject(TestUtils.project);", "-\t\treportTask.setDataFile(datafile.getAbsolutePath());", "-\t\treportTask.setFormat(\"xml\");", "-\t\treportTask.setSrcDir(srcDir.getAbsolutePath());", "-\t\treportTask.setDestDir(reportDir);", "-\t\treportTask.setFailonerror(true);", "-\t\treportTask.execute();", "-", "-\t\tTestUtils.project.removeBuildListener(fileLogger);", "-", "-\t\tif (FileUtils.readFileToString(new File(reportDir, \"error.log\"))", "-\t\t\t\t.contains(\"JavaNCSS got an error while parsing the java file\"))", "+\t\tif (FileUtils", "+\t\t\t\t.readFileToString(new File(reportDir, \"error.log\"))", "+\t\t\t\t.contains(", "+\t\t\t\t\t\t\"net.sourceforge.cobertura.javancss.parser.ParseException\"))", "-\t\tif (FileUtils.readFileToString(new File(reportDir, \"std.log\"))", "-\t\t\t\t.contains(\"JavaNCSS got an error while parsing the java file\"))", "+\t\tif (FileUtils", "+\t\t\t\t.readFileToString(new File(reportDir, \"std.log\"))", "+\t\t\t\t.contains(", "+\t\t\t\t\t\t\"net.sourceforge.cobertura.javancss.parser.ParseException\"))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6a73e01446f907970d3a64e6163e0a2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/test/util/WebappServer.java", "commitBeforeChange": "c375766d9094530d2f833df204ec339bfbb1b3b9", "commitAfterChange": "eca94255cccacd9f5e33441462a1b8a3ddc4d322", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate void startWebServer(final Map<String, Integer> freePorts)", "signatureAfterChange": "  \tprivate void startWebServer()", "diff": ["-", "-\tprivate void startWebServer(final Map<String, Integer> freePorts) {", "-\t\tEcho echo = new Echo();", "-\t\techo.setProject(TestUtils.project);", "-\t\techo.setMessage(\"Starting Jetty webapp server on \"", "-\t\t\t\t+ freePorts.get(\"webapp\"));", "-\t\techo.execute();", "+\tprivate void startWebServer() {", "+\t\tSystem.out.println(\"Starting Jetty webapp server on \" + webappPort);", "-\t\t\t\tjettyPort.setValue(freePorts.get(\"webapp\").toString());", "+\t\t\t\tjettyPort.setValue(String.valueOf(webappPort));", "-\t\t\t\tVariable stopPort = new Variable();", "-\t\t\t\tstopPort.setKey(\"STOP.PORT\");", "-\t\t\t\tstopPort.setValue(freePorts.get(\"stop\").toString());", "-\t\t\t\tjava.addSysproperty(stopPort);", "+\t\t\t\tVariable stopPortVariable = new Variable();", "+\t\t\t\tstopPortVariable.setKey(\"STOP.PORT\");", "+\t\t\t\tstopPortVariable.setValue(String.valueOf(stopPort));", "+\t\t\t\tjava.addSysproperty(stopPortVariable);"]}]}