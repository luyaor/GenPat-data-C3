{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c077bb9880a0319678107c3d054486be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a508954cf42cb7cb9df86982837563", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 630, "signatureBeforeChange": "\r \r   final private boolean jj_3R_232()", "signatureAfterChange": "\r \r   private boolean jj_3R_235()", "diff": ["-\r", "-  final private boolean jj_3R_232() {\r", "-    if (jj_3R_251()) return true;\r", "-    Token xsp;\r", "-    while (true) {\r", "-      xsp = jj_scanpos;\r", "-      if (jj_3R_259()) { jj_scanpos = xsp; break; }\r", "-    }\r", "-    return false;\r", "-  }\r", "+\r", "+  private boolean jj_3R_235() {\r", "+    if (jj_3R_259()) return true;\r", "+    Token xsp;\r", "+    while (true) {\r", "+      xsp = jj_scanpos;\r", "+      if (jj_3R_282()) { jj_scanpos = xsp; break; }\r", "+    }\r", "+    return false;\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942c5d71c9d5decd8827713ec91ccc7e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 452, "methodNumberAfterChange": 633, "signatureBeforeChange": "\r \r   final private boolean jj_3R_210()", "signatureAfterChange": "\r \r   private boolean jj_3R_218()", "diff": ["-\r", "-  final private boolean jj_3R_210() {\r", "-    if (jj_3R_232()) return true;\r", "-    Token xsp;\r", "-    while (true) {\r", "-      xsp = jj_scanpos;\r", "-      if (jj_3R_252()) { jj_scanpos = xsp; break; }\r", "-    }\r", "-    return false;\r", "-  }\r", "+\r", "+  private boolean jj_3R_218() {\r", "+    if (jj_3R_235()) return true;\r", "+    Token xsp;\r", "+    while (true) {\r", "+      xsp = jj_scanpos;\r", "+      if (jj_3R_260()) { jj_scanpos = xsp; break; }\r", "+    }\r", "+    return false;\r", "+  }\r"]}]}