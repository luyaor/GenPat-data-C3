{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fe3c6e4aebb2b43ebeedb93e06b0d2b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c9dcc0b4c36cda79319704a02e2cc46", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r   final public void CastLookahead() throws ParseException", "signatureAfterChange": "   final public void CastLookahead() throws ParseException", "diff": ["-// this.\r", "-  final public void CastLookahead() throws ParseException {\r", "-    if (jj_2_28(2)) {\r", "-      jj_consume_token(LPAREN);\r", "-      PrimitiveType();\r", "-    } else if (jj_2_29(2147483647)) {\r", "-      jj_consume_token(LPAREN);\r", "-      Type();\r", "-      jj_consume_token(LBRACKET);\r", "-      jj_consume_token(RBRACKET);\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LPAREN:\r", "-        jj_consume_token(LPAREN);\r", "-        Type();\r", "-        jj_consume_token(RPAREN);\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case TILDE:\r", "-          jj_consume_token(TILDE);\r", "-          break;\r", "-        case BANG:\r", "-          jj_consume_token(BANG);\r", "-          break;\r", "-        case LPAREN:\r", "-          jj_consume_token(LPAREN);\r", "-          break;\r", "-        case ASSERT:\r", "-        case IDENTIFIER:\r", "-          Identifier();\r", "-          break;\r", "-        case THIS:\r", "-          jj_consume_token(THIS);\r", "-          break;\r", "-        case SUPER:\r", "-          jj_consume_token(SUPER);\r", "-          break;\r", "-        case NEW:\r", "-          jj_consume_token(NEW);\r", "-          break;\r", "-        case FALSE:\r", "-        case NULL:\r", "-        case TRUE:\r", "-        case INTEGER_LITERAL:\r", "-        case FLOATING_POINT_LITERAL:\r", "-        case CHARACTER_LITERAL:\r", "-        case STRING_LITERAL:\r", "-          Literal();\r", "-          break;\r", "-        default:\r", "-          jj_la1[114] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[115] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+// this.", "+  final public void CastLookahead() throws ParseException {", "+    if (jj_2_27(2)) {", "+      jj_consume_token(LPAREN);", "+      PrimitiveType();", "+    } else if (jj_2_28(2147483647)) {", "+      jj_consume_token(LPAREN);", "+      Type();", "+      jj_consume_token(LBRACKET);", "+      jj_consume_token(RBRACKET);", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        Type();", "+        jj_consume_token(RPAREN);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case TILDE:", "+          jj_consume_token(TILDE);", "+          break;", "+        case BANG:", "+          jj_consume_token(BANG);", "+          break;", "+        case LPAREN:", "+          jj_consume_token(LPAREN);", "+          break;", "+        case ASSERT:", "+        case IDENTIFIER:", "+          Identifier();", "+          break;", "+        case THIS:", "+          jj_consume_token(THIS);", "+          break;", "+        case SUPER:", "+          jj_consume_token(SUPER);", "+          break;", "+        case NEW:", "+          jj_consume_token(NEW);", "+          break;", "+        case FALSE:", "+        case NULL:", "+        case TRUE:", "+        case INTEGER_LITERAL:", "+        case FLOATING_POINT_LITERAL:", "+        case CHARACTER_LITERAL:", "+        case STRING_LITERAL:", "+          Literal();", "+          break;", "+        default:", "+          jj_la1[114] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[115] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f7e1bdcce58fff1e16a83319d1fb20", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "\r \r   final public void AdditiveExpression() throws ParseException", "signatureAfterChange": "    final public void AdditiveExpression() throws ParseException", "diff": ["-\r", "-  final public void AdditiveExpression() throws ParseException {\r", "-    MultiplicativeExpression();\r", "-    label_48:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case PLUS:\r", "-      case MINUS:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[105] = jj_gen;\r", "-        break label_48;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case PLUS:\r", "-        jj_consume_token(PLUS);\r", "-        break;\r", "-      case MINUS:\r", "-        jj_consume_token(MINUS);\r", "-        break;\r", "-      default:\r", "-        jj_la1[106] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      MultiplicativeExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void AdditiveExpression() throws ParseException {", "+    MultiplicativeExpression();", "+    label_49:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PLUS:", "+      case MINUS:", "+        ;", "+        break;", "+      default:", "+        jj_la1[105] = jj_gen;", "+        break label_49;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PLUS:", "+        jj_consume_token(PLUS);", "+        break;", "+      case MINUS:", "+        jj_consume_token(MINUS);", "+        break;", "+      default:", "+        jj_la1[106] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      MultiplicativeExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e472bc314ab5a7df3d776209a63cc6e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "\r \r   final public void AdditiveExpression() throws ParseException", "signatureAfterChange": "    final public void AdditiveExpression() throws ParseException", "diff": ["-\r", "-  final public void AdditiveExpression() throws ParseException {\r", "-    MultiplicativeExpression();\r", "-    label_48:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case PLUS:\r", "-      case MINUS:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[105] = jj_gen;\r", "-        break label_48;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case PLUS:\r", "-        jj_consume_token(PLUS);\r", "-        break;\r", "-      case MINUS:\r", "-        jj_consume_token(MINUS);\r", "-        break;\r", "-      default:\r", "-        jj_la1[106] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      MultiplicativeExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void AdditiveExpression() throws ParseException {", "+    MultiplicativeExpression();", "+    label_49:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PLUS:", "+      case MINUS:", "+        ;", "+        break;", "+      default:", "+        jj_la1[105] = jj_gen;", "+        break label_49;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PLUS:", "+        jj_consume_token(PLUS);", "+        break;", "+      case MINUS:", "+        jj_consume_token(MINUS);", "+        break;", "+      default:", "+        jj_la1[106] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      MultiplicativeExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42aebc8da8bacf72a5be4954087817a1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r   final public void CastLookahead() throws ParseException", "signatureAfterChange": "   final public void CastLookahead() throws ParseException", "diff": ["-// this.\r", "-  final public void CastLookahead() throws ParseException {\r", "-    if (jj_2_28(2)) {\r", "-      jj_consume_token(LPAREN);\r", "-      PrimitiveType();\r", "-    } else if (jj_2_29(2147483647)) {\r", "-      jj_consume_token(LPAREN);\r", "-      Type();\r", "-      jj_consume_token(LBRACKET);\r", "-      jj_consume_token(RBRACKET);\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LPAREN:\r", "-        jj_consume_token(LPAREN);\r", "-        Type();\r", "-        jj_consume_token(RPAREN);\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case TILDE:\r", "-          jj_consume_token(TILDE);\r", "-          break;\r", "-        case BANG:\r", "-          jj_consume_token(BANG);\r", "-          break;\r", "-        case LPAREN:\r", "-          jj_consume_token(LPAREN);\r", "-          break;\r", "-        case ASSERT:\r", "-        case IDENTIFIER:\r", "-          Identifier();\r", "-          break;\r", "-        case THIS:\r", "-          jj_consume_token(THIS);\r", "-          break;\r", "-        case SUPER:\r", "-          jj_consume_token(SUPER);\r", "-          break;\r", "-        case NEW:\r", "-          jj_consume_token(NEW);\r", "-          break;\r", "-        case FALSE:\r", "-        case NULL:\r", "-        case TRUE:\r", "-        case INTEGER_LITERAL:\r", "-        case FLOATING_POINT_LITERAL:\r", "-        case CHARACTER_LITERAL:\r", "-        case STRING_LITERAL:\r", "-          Literal();\r", "-          break;\r", "-        default:\r", "-          jj_la1[114] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[115] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+// this.", "+  final public void CastLookahead() throws ParseException {", "+    if (jj_2_27(2)) {", "+      jj_consume_token(LPAREN);", "+      PrimitiveType();", "+    } else if (jj_2_28(2147483647)) {", "+      jj_consume_token(LPAREN);", "+      Type();", "+      jj_consume_token(LBRACKET);", "+      jj_consume_token(RBRACKET);", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        Type();", "+        jj_consume_token(RPAREN);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case TILDE:", "+          jj_consume_token(TILDE);", "+          break;", "+        case BANG:", "+          jj_consume_token(BANG);", "+          break;", "+        case LPAREN:", "+          jj_consume_token(LPAREN);", "+          break;", "+        case ASSERT:", "+        case IDENTIFIER:", "+          Identifier();", "+          break;", "+        case THIS:", "+          jj_consume_token(THIS);", "+          break;", "+        case SUPER:", "+          jj_consume_token(SUPER);", "+          break;", "+        case NEW:", "+          jj_consume_token(NEW);", "+          break;", "+        case FALSE:", "+        case NULL:", "+        case TRUE:", "+        case INTEGER_LITERAL:", "+        case FLOATING_POINT_LITERAL:", "+        case CHARACTER_LITERAL:", "+        case STRING_LITERAL:", "+          Literal();", "+          break;", "+        default:", "+          jj_la1[114] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[115] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a73cdaed5882e2e0ac4d06a046426e36", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "\r \r   final public void MultiplicativeExpression() throws ParseException", "signatureAfterChange": "    final public void MultiplicativeExpression() throws ParseException", "diff": ["-\r", "-  final public void MultiplicativeExpression() throws ParseException {\r", "-    UnaryExpression();\r", "-    label_49:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-      case SLASH:\r", "-      case REM:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[107] = jj_gen;\r", "-        break label_49;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-        jj_consume_token(STAR);\r", "-        break;\r", "-      case SLASH:\r", "-        jj_consume_token(SLASH);\r", "-        break;\r", "-      case REM:\r", "-        jj_consume_token(REM);\r", "-        break;\r", "-      default:\r", "-        jj_la1[108] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      UnaryExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void MultiplicativeExpression() throws ParseException {", "+    UnaryExpression();", "+    label_50:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+      case SLASH:", "+      case REM:", "+        ;", "+        break;", "+      default:", "+        jj_la1[107] = jj_gen;", "+        break label_50;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+        jj_consume_token(STAR);", "+        break;", "+      case SLASH:", "+        jj_consume_token(SLASH);", "+        break;", "+      case REM:", "+        jj_consume_token(REM);", "+        break;", "+      default:", "+        jj_la1[108] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      UnaryExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3c626c7b82552f26d8d0bfca2a6b294", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "\r \r   final public void MultiplicativeExpression() throws ParseException", "signatureAfterChange": "    final public void MultiplicativeExpression() throws ParseException", "diff": ["-\r", "-  final public void MultiplicativeExpression() throws ParseException {\r", "-    UnaryExpression();\r", "-    label_49:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-      case SLASH:\r", "-      case REM:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[107] = jj_gen;\r", "-        break label_49;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-        jj_consume_token(STAR);\r", "-        break;\r", "-      case SLASH:\r", "-        jj_consume_token(SLASH);\r", "-        break;\r", "-      case REM:\r", "-        jj_consume_token(REM);\r", "-        break;\r", "-      default:\r", "-        jj_la1[108] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      UnaryExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void MultiplicativeExpression() throws ParseException {", "+    UnaryExpression();", "+    label_50:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+      case SLASH:", "+      case REM:", "+        ;", "+        break;", "+      default:", "+        jj_la1[107] = jj_gen;", "+        break label_50;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+        jj_consume_token(STAR);", "+        break;", "+      case SLASH:", "+        jj_consume_token(SLASH);", "+        break;", "+      case REM:", "+        jj_consume_token(REM);", "+        break;", "+      default:", "+        jj_la1[108] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      UnaryExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8389296af7ecfbd960fc3311cc915f7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "\r \r   final public void RelationalExpression() throws ParseException", "signatureAfterChange": "    final public void RelationalExpression() throws ParseException", "diff": ["-\r", "-  final public void RelationalExpression() throws ParseException {\r", "-    ShiftExpression();\r", "-    label_46:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case GT:\r", "-      case LT:\r", "-      case LE:\r", "-      case GE:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[101] = jj_gen;\r", "-        break label_46;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LT:\r", "-        jj_consume_token(LT);\r", "-        break;\r", "-      case GT:\r", "-        jj_consume_token(GT);\r", "-        break;\r", "-      case LE:\r", "-        jj_consume_token(LE);\r", "-        break;\r", "-      case GE:\r", "-        jj_consume_token(GE);\r", "-        break;\r", "-      default:\r", "-        jj_la1[102] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      ShiftExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void RelationalExpression() throws ParseException {", "+    ShiftExpression();", "+    label_47:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case GT:", "+      case LT:", "+      case LE:", "+      case GE:", "+        ;", "+        break;", "+      default:", "+        jj_la1[101] = jj_gen;", "+        break label_47;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LT:", "+        jj_consume_token(LT);", "+        break;", "+      case GT:", "+        jj_consume_token(GT);", "+        break;", "+      case LE:", "+        jj_consume_token(LE);", "+        break;", "+      case GE:", "+        jj_consume_token(GE);", "+        break;", "+      default:", "+        jj_la1[102] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      ShiftExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa3cdc413edba83208785bd7c21f8f43", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "\r \r   final public void RelationalExpression() throws ParseException", "signatureAfterChange": "    final public void RelationalExpression() throws ParseException", "diff": ["-\r", "-  final public void RelationalExpression() throws ParseException {\r", "-    ShiftExpression();\r", "-    label_46:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case GT:\r", "-      case LT:\r", "-      case LE:\r", "-      case GE:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[101] = jj_gen;\r", "-        break label_46;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LT:\r", "-        jj_consume_token(LT);\r", "-        break;\r", "-      case GT:\r", "-        jj_consume_token(GT);\r", "-        break;\r", "-      case LE:\r", "-        jj_consume_token(LE);\r", "-        break;\r", "-      case GE:\r", "-        jj_consume_token(GE);\r", "-        break;\r", "-      default:\r", "-        jj_la1[102] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      ShiftExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void RelationalExpression() throws ParseException {", "+    ShiftExpression();", "+    label_47:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case GT:", "+      case LT:", "+      case LE:", "+      case GE:", "+        ;", "+        break;", "+      default:", "+        jj_la1[101] = jj_gen;", "+        break label_47;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LT:", "+        jj_consume_token(LT);", "+        break;", "+      case GT:", "+        jj_consume_token(GT);", "+        break;", "+      case LE:", "+        jj_consume_token(LE);", "+        break;", "+      case GE:", "+        jj_consume_token(GE);", "+        break;", "+      default:", "+        jj_la1[102] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      ShiftExpression();", "+    }", "+  }"]}]}