{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4038a0aa87210d2d0700cb2eb007291", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a89a878cabf928f3842278b693be0033", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/test/JavancssTest.java", "commitBeforeChange": "f44527006156d82d108277efea7d0bf4a4cd5a22", "commitAfterChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void _checkJavadocs()", "signatureAfterChange": "      private void _checkJvdcs( int testFileNumber, int expectedJvdcsResult )", "diff": ["-    private void _checkJavadocs()", "-        Javancss pJavancss = new Javancss( new File( testDir, \"Test20.java\" ) );", "-        ", "-        List vObjectMetrics = pJavancss.getObjectMetrics();", "-        List vClassMetrics  = (List)vObjectMetrics.get( 0 );", "-        int jvdcs = ((Integer)vClassMetrics.get(OBJ_JVDCS)).intValue();", "-        Assert( jvdcs == 7", "-                , \"Expected 7 Javadocs in in file Test20.java but got \" + jvdcs + \"!\" );", "+", "+    private void _checkJvdcs( int testFileNumber, int expectedJvdcsResult )", "+    {", "+        Javancss pJavancss = measureTestFile( testFileNumber );", "+        List/*<ObjectMetric>*/ vObjectMetrics = pJavancss.getObjectMetrics();", "+        ObjectMetric classMetric = (ObjectMetric) vObjectMetrics.get( 0 );", "+        int jvdcs = classMetric.javadocs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de10506a2c294984b720e89d7e4cf1f5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/InstrumentTask.java", "commitBeforeChange": "2d958af083fecc2f20c64e4cd5f23145337622a0", "commitAfterChange": "8d76b07e3d230fcd0d3b233e7ffc80df6ca3ec82", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void handleFilesets()", "signatureAfterChange": "  \tprivate void handleFilesets()", "diff": ["-\t\tSet filenames = new HashSet();", "+\t\tint numberOfClasses = 0;", "-\t\t\tfilenames.addAll(Arrays.asList(getFilenames(fileSet)));", "+\t\t\tString[] fileNames = getFilenames(fileSet);", "+\t\t\tnumberOfClasses += fileNames.length;", "+\t\t\taddFilenames(getFilenames(fileSet));", "-\t\taddFilenames((String[])filenames.toArray(new String[filenames.size()]));", "+", "+\t\tHeader.print(System.out);", "+\t\tSystem.out.println(\"instrumenting \" + numberOfClasses + \" \"", "+\t\t\t\t+ (numberOfClasses == 1 ? \"class\" : \"classes\")", "+\t\t\t\t+ (toDir != null ? \" to \" + toDir : \"\"));"]}]}