{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfe098cf7edd30e97b693fc16048f062", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcaf9a846845b8efed5405355691370c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "12464e2c222b85c4fe40070c50e015403ce5acfe", "commitAfterChange": "09421016268852f85f74b9774657dc46969a87d5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate String generateTableRowForPackage(PackageData packageData)", "signatureAfterChange": "  \tprivate String generateTableRowForPackage(PackageData packageData)", "diff": ["-\t\tdouble ccn = 0;//Util.getCCN(finder.findFile(packageData.getSourceFileName()), false);", "+        File[] files = finder.findDirectory(packageData.getSourceFileName());", "+        if (files.length == 0) {", "+            LOGGER.warn(\"No directories found for package: \" + packageData.getSourceFileName());", "+        }", "+", "+        double ccnSum = 0; ", "+        for (int i = 0; i < files.length; i++) {", "+            ccnSum += Util.getCCN(files[i], false);", "+        }", "+        ", "+        double ccn = ccnSum / (double) files.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e62e88ebc5fe0d41e6eb473fb8885d7f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "73cd6cee6c47bb171b3c10fb87c9d986322605f8", "commitAfterChange": "ea44d50de680cfb1f234670ee0209ccd6aa03416", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void addInstrumentationToArchive(File archive)", "signatureAfterChange": "  \tprivate void addInstrumentationToArchive(CoberturaFile archive)", "diff": ["-\tprivate void addInstrumentationToArchive(File archive)", "+\tprivate void addInstrumentationToArchive(CoberturaFile archive)", "+\t\tboolean modified = false;", "-\t\t\t\t\toutputFile = new File(destinationDirectory, archive", "-\t\t\t\t\t\t\t.getName());", "+\t\t\t\t\toutputFile = new File(destinationDirectory, archive.getPathname());", "-\t\t\t\taddInstrumentationToArchive(input, output);", "+\t\t\t\tmodified = addInstrumentationToArchive(archive, input, output);", "-\t\t\tif (input != null)", "-\t\t\t{", "-\t\t\t\ttry", "-\t\t\t\t{", "-\t\t\t\t\tinput.close();", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException e)", "-\t\t\t\t{", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (output != null)", "-\t\t\t{", "-\t\t\t\ttry", "-\t\t\t\t{", "-\t\t\t\t\toutput.close();", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException e)", "-\t\t\t\t{", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tinput = (ZipInputStream)IOUtil.closeInputStream(input);", "+\t\t\toutput = (ZipOutputStream)IOUtil.closeOutputStream(output);", "-\t\tif (destinationDirectory == null)", "+\t\tif (modified && (destinationDirectory == null))", "+\t\t\t\tlogger.debug(\"Moving \" + outputFile.getAbsolutePath() + \" to \"", "+\t\t\t\t\t\t+ archive.getAbsolutePath());", "+\t\t}", "+\t\tif ((destinationDirectory != null) && (!modified))", "+\t\t{", "+\t\t\toutputFile.delete();"]}]}