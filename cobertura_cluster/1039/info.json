{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40e1955d7836707492aff6e366d8cad1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ee2108dd824853285d9633ea8c235dd", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 517, "methodNumberAfterChange": 342, "signatureBeforeChange": "\r \r   final private boolean jj_3R_265()", "signatureAfterChange": "\r \r   private boolean jj_3R_431()", "diff": ["-\r", "-  final private boolean jj_3R_265() {\r", "-    Token xsp;\r", "-    while (true) {\r", "-      xsp = jj_scanpos;\r", "-      if (jj_3R_273()) { jj_scanpos = xsp; break; }\r", "-    }\r", "-    if (jj_3R_274()) return true;\r", "-    return false;\r", "-  }\r", "+\r", "+  private boolean jj_3R_431() {\r", "+    if (jj_3R_442()) return true;\r", "+    Token xsp;\r", "+    while (true) {\r", "+      xsp = jj_scanpos;\r", "+      if (jj_3R_443()) { jj_scanpos = xsp; break; }\r", "+    }\r", "+    return false;\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb1b138ab11f12be5bd7f699c4851b0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 500, "methodNumberAfterChange": 457, "signatureBeforeChange": "\r \r   final private boolean jj_3R_268()", "signatureAfterChange": "\r \r   private boolean jj_3R_217()", "diff": ["-  final private boolean jj_3R_268() {\r", "-    Token xsp;\r", "-    while (true) {\r", "-      xsp = jj_scanpos;\r", "-      if (jj_3R_277()) { jj_scanpos = xsp; break; }\r", "-    }\r", "-    if (jj_3R_278()) return true;\r", "+\r", "+  private boolean jj_3R_217() {\r", "+    if (jj_3R_117()) return true;\r", "+    Token xsp;\r", "+    while (true) {\r", "+      xsp = jj_scanpos;\r", "+      if (jj_3R_277()) { jj_scanpos = xsp; break; }\r", "+    }\r", "+    return false;\r", "+  }\r"]}]}