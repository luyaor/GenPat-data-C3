{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2d4d9a97615054f21f361377185ceba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec06d7245a29477d634ccfcb676417f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/test/util/WebappServer.java", "commitBeforeChange": "c375766d9094530d2f833df204ec339bfbb1b3b9", "commitAfterChange": "eca94255cccacd9f5e33441462a1b8a3ddc4d322", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void deployApp(Map map) throws Exception", "signatureAfterChange": " \t \tpublic void deployApp(File srcDir, boolean instrumentCobertura, boolean deployCoberturaFlush, boolean modifyMainCoberturaDataFile, String instrumentRegEx) throws Exception", "diff": ["-\t */", "-\tpublic void deployApp(Map map) throws Exception {", "-\t\tmodifyMainCoberturaDataFile = (map", "-\t\t\t\t.containsKey(\"modifyMainCoberturaDataFile\")) ? (Boolean) map", "-\t\t\t\t.get(\"modifyMainCoberturaDataFile\") : false;", "+\t", "+\tpublic void deployApp(File srcDir, boolean instrumentCobertura, boolean deployCoberturaFlush, boolean modifyMainCoberturaDataFile, String instrumentRegEx) throws Exception{", "+\t\tthis.modifyMainCoberturaDataFile = modifyMainCoberturaDataFile;", "-\t\tFile webInfFile = writeWebInfFile(webInfDir, (String) map", "-\t\t\t\t.get(\"webInfText\"));", "+\t\tFile webInfFile = writeWebInfFile(webInfDir, SIMPLE_SERVLET_WEB_XML_TEXT);", "-\t\tcompileSourceFiles((File) map.get(\"srcDir\"), classesDir);", "+\t\tcompileSourceFiles(srcDir, classesDir);", "-\t\tFile war = makeWarFile((String) map.get(\"appName\"), webInfFile,", "+\t\tFile war = makeWarFile(appName, webInfFile,", "-\t\tDelete delete = new Delete();", "-\t\tdelete.setProject(TestUtils.project);", "-\t\tdelete.setDir(extractedDir);", "-\t\tdelete.execute();", "+\t\tFileUtils.deleteDirectory(extractedDir);", "-\t\tif (map.get(\"instrumentRegEx\") != null) {", "-\t\t\tinstrumentWar(war, (String) map.get(\"instrumentRegEx\"));", "+\t\tif (instrumentRegEx != null) {", "+\t\t\tinstrumentWar(war, instrumentRegEx);", "-\t\tif (map.get(\"instrumentCobertura\") != null) {", "+\t\tif (instrumentCobertura != false) {", "-\t\tif (map.get(\"deployCoberturaFlush\") != null) {", "-\t\t\tdeployCoberturaFlush((map.containsKey(\"instrumentCobertura\"))", "-\t\t\t\t\t? (Boolean) map.get(\"instrumentCobertura\")", "-\t\t\t\t\t: false);", "+\t\tif (deployCoberturaFlush != false) {", "+\t\t\tdeployCoberturaFlush(deployCoberturaFlush);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4bff4bd55bb41a767ad7ca60780c6a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/merge/Main.java", "commitBeforeChange": "6a303122a10f7fb224550410433e3c73cc07f939", "commitAfterChange": "918d96136e3b4ad59ee8aedd80494eb94f76c036", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic Main(String[] args)", "signatureAfterChange": "  \tpublic Main(String[] args)", "diff": ["-\t\tFile dataFile = CoverageDataFileHandler.getDefaultDataFile();", "-\t\tFile baseDir = null;", "-\t\tList filesToMerge = new ArrayList();", "+\t\tArgumentsBuilder builder = new ArgumentsBuilder();", "+", "+\t\tString baseDir = null;", "-\t\t\tif (args[i].equals(\"--datafile\"))", "-\t\t\t\tdataFile = new File(args[++i]);", "-\t\t\telse if (args[i].equals(\"--basedir\"))", "-\t\t\t\tbaseDir = new File(args[++i]);", "-\t\t\telse", "-\t\t\t\tfilesToMerge.add(new File(baseDir, args[i]));", "+\t\t\tif (args[i].equals(\"--datafile\")) {", "+\t\t\t\tbuilder.setDataFile(args[++i]);", "+\t\t\t} else if (args[i].equals(\"--basedir\")) {", "+\t\t\t\tbaseDir = args[++i];", "+\t\t\t\tbuilder.setBaseDirectory(baseDir);", "+\t\t\t} else {", "+\t\t\t\tbuilder.addFileToMerge(new File(baseDir, args[i])", "+\t\t\t\t\t\t.getAbsolutePath());", "+\t\t\t}", "-\t\t// Load coverage data", "-\t\tProjectData projectData = null;", "-\t\tif (dataFile.isFile())", "-\t\t\tprojectData = CoverageDataFileHandler.loadCoverageData(dataFile);", "-\t\tif (projectData == null)", "-\t\t\tprojectData = new ProjectData();", "-", "-\t\tif (filesToMerge.isEmpty()) {", "-\t\t\tSystem.err.println(\"Error: No files were specified for merging.\");", "-\t\t\tSystem.exit(1);", "-\t\t}", "-", "-\t\t// Merge everything", "-\t\tIterator iter = filesToMerge.iterator();", "-\t\twhile (iter.hasNext()) {", "-\t\t\tFile newDataFile = (File) iter.next();", "-\t\t\tProjectData projectDataNew = CoverageDataFileHandler", "-\t\t\t\t\t.loadCoverageData(newDataFile);", "-\t\t\tif (projectDataNew != null)", "-\t\t\t\tprojectData.merge(projectDataNew);", "-\t\t}", "-", "-\t\t// Save the combined data file", "-\t\tCoverageDataFileHandler.saveCoverageData(projectData, dataFile);", "+\t\tnew Cobertura(builder.build()).merge().saveProjectData();"]}]}