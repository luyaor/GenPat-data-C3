{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6adb231a7c39716f3548a99fb87c769f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bc56770f03ce5457cc73e11c7e1be8a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 132, "signatureBeforeChange": "\r \r   final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "    final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException {\r", "-   boolean isInterface = false;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case CLASS:\r", "-      jj_consume_token(CLASS);\r", "-      break;\r", "-    case INTERFACE:\r", "-      jj_consume_token(INTERFACE);\r", "-                            isInterface = true;\r", "-      break;\r", "-    default:\r", "-      jj_la1[173] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-    jj_consume_token(IDENTIFIER);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case LT:\r", "-      TypeParameters();\r", "-      break;\r", "-    default:\r", "-      jj_la1[174] = jj_gen;\r", "-      ;\r", "-    }\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case EXTENDS:\r", "-      ExtendsList(isInterface);\r", "-      break;\r", "-    default:\r", "-      jj_la1[175] = jj_gen;\r", "-      ;\r", "-    }\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IMPLEMENTS:\r", "-      ImplementsList(isInterface);\r", "-      break;\r", "-    default:\r", "-      jj_la1[176] = jj_gen;\r", "-      ;\r", "-    }\r", "-    ClassOrInterfaceBody(isInterface);\r", "-  }\r", "+", "+  final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException {", "+   boolean isInterface = false;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case CLASS:", "+      jj_consume_token(CLASS);", "+      break;", "+    case INTERFACE:", "+      jj_consume_token(INTERFACE);", "+                            isInterface = true;", "+      break;", "+    default:", "+      jj_la1[178] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+    jj_consume_token(IDENTIFIER);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case LT:", "+      TypeParameters();", "+      break;", "+    default:", "+      jj_la1[179] = jj_gen;", "+      ;", "+    }", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case EXTENDS:", "+      ExtendsList(isInterface);", "+      break;", "+    default:", "+      jj_la1[180] = jj_gen;", "+      ;", "+    }", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IMPLEMENTS:", "+      ImplementsList(isInterface);", "+      break;", "+    default:", "+      jj_la1[181] = jj_gen;", "+      ;", "+    }", "+    ClassOrInterfaceBody(isInterface);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7dd57488d4f3c61c305782497636c9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 132, "signatureBeforeChange": "\r \r   final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "    final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException {\r", "-   boolean isInterface = false;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case CLASS:\r", "-      jj_consume_token(CLASS);\r", "-      break;\r", "-    case INTERFACE:\r", "-      jj_consume_token(INTERFACE);\r", "-                            isInterface = true;\r", "-      break;\r", "-    default:\r", "-      jj_la1[173] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-    jj_consume_token(IDENTIFIER);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case LT:\r", "-      TypeParameters();\r", "-      break;\r", "-    default:\r", "-      jj_la1[174] = jj_gen;\r", "-      ;\r", "-    }\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case EXTENDS:\r", "-      ExtendsList(isInterface);\r", "-      break;\r", "-    default:\r", "-      jj_la1[175] = jj_gen;\r", "-      ;\r", "-    }\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IMPLEMENTS:\r", "-      ImplementsList(isInterface);\r", "-      break;\r", "-    default:\r", "-      jj_la1[176] = jj_gen;\r", "-      ;\r", "-    }\r", "-    ClassOrInterfaceBody(isInterface);\r", "-  }\r", "+", "+  final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException {", "+   boolean isInterface = false;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case CLASS:", "+      jj_consume_token(CLASS);", "+      break;", "+    case INTERFACE:", "+      jj_consume_token(INTERFACE);", "+                            isInterface = true;", "+      break;", "+    default:", "+      jj_la1[178] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+    jj_consume_token(IDENTIFIER);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case LT:", "+      TypeParameters();", "+      break;", "+    default:", "+      jj_la1[179] = jj_gen;", "+      ;", "+    }", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case EXTENDS:", "+      ExtendsList(isInterface);", "+      break;", "+    default:", "+      jj_la1[180] = jj_gen;", "+      ;", "+    }", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IMPLEMENTS:", "+      ImplementsList(isInterface);", "+      break;", "+    default:", "+      jj_la1[181] = jj_gen;", "+      ;", "+    }", "+    ClassOrInterfaceBody(isInterface);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c273ba1114ad72b2f7a555df11d0a8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 130, "signatureBeforeChange": "\r \r   final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "\r \r   final public void ClassOrInterfaceDeclaration(int modifiers) throws ParseException", "diff": ["-      jj_la1[161] = jj_gen;\r", "+      jj_la1[173] = jj_gen;\r", "-      jj_la1[162] = jj_gen;\r", "+      jj_la1[174] = jj_gen;\r", "-      jj_la1[163] = jj_gen;\r", "+      jj_la1[175] = jj_gen;\r", "-      jj_la1[164] = jj_gen;\r", "+      jj_la1[176] = jj_gen;\r"]}]}