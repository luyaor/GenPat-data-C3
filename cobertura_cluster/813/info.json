{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8828eb40eef3a771a87c8406f1d0cd0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d543a2b5c63f8d8fbd344b2e006e53d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/webapp/test/WebAppFunctionalTest.java", "commitBeforeChange": "c375766d9094530d2f833df204ec339bfbb1b3b9", "commitAfterChange": "eca94255cccacd9f5e33441462a1b8a3ddc4d322", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void basicStartAndStopOfWebApp(boolean tomcat) throws Exception", "signatureAfterChange": "  \tpublic void basicStartAndStopOfWebApp(boolean tomcat) throws Exception", "diff": ["-\t\tFile tempDir = TestUtils.getTempDir();", "-\t\tFile webappServerDir = new File(tempDir, \"webserver\");", "-", "-\t\tfinal File srcDir = new File(tempDir, SRC_DIR);", "-\t\tnew File(webappServerDir, \"logs\").mkdirs();", "-\t\tWebappServer.writeSimpleServletSource(srcDir);", "-", "-\t\tfinal String appName = \"simple\";", "-", "-\t\twebappServer.deployApp(new HashMap() {", "-\t\t\t{", "-\t\t\t\tput(\"webInfText\", WebappServer.SIMPLE_SERVLET_WEB_XML_TEXT);", "-\t\t\t\tput(\"srcDir\", srcDir);", "-\t\t\t\tput(\"appName\", appName);", "-\t\t\t\tput(\"instrumentRegEx\", \"com.acme.*\");", "-\t\t\t}", "-\t\t});", "+\t\twebappServer.deployApp(srcDir, \"com.acme.*\");", "-\t\tMap data = webappServer.withRunningServer(new Closure(null) {", "-\t\t\tpublic void doCall(HashMap values) {", "-\t\t\t}", "-\t\t});", "+\t\twebappServer.withRunningServer();", "-\t\t//do a HTTP get so the doGet method will be hit", "-\t\tString webappResponse = IOUtils", "-\t\t\t\t.toString(new URL(\"http://\" + data.get(\"hostname\") + \":\"", "-\t\t\t\t\t\t+ data.get(\"webappPort\") + \"/\" + appName", "-\t\t\t\t\t\t+ \"/SimpleServlet\").openConnection().getInputStream());", "+\t\twebappServer.pingServer();", "+\t\t", "+\t\tFile xmlReport = webappServer.getXmlReport();", "-\t\tassertEquals(\"Webapp response was incorrect\", \"Hi\", webappResponse", "-\t\t\t\t.trim());", "+\t\tgenerateReportFile(xmlReport);", "-\t\tReportTask reportTask = new ReportTask();", "-\t\treportTask.setProject(TestUtils.project);", "-\t\treportTask.setDataFile(((File) data.get(\"datafile\")).getAbsolutePath());", "-\t\treportTask.setFormat(\"xml\");", "-\t\treportTask.setDestDir(new File(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getParent()));", "-\t\treportTask.execute();", "+\t\tNode dom = TestUtils.getXMLReportDOM(xmlReport);", "-\t\tNode dom = TestUtils.getXMLReportDOM(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getAbsolutePath());", "-", "-\t\t//make sure the report shows the doGet method has not been hit yet - the data is not flushed until the server stops", "-\t\treportTask = new ReportTask();", "-\t\treportTask.setProject(TestUtils.project);", "-\t\treportTask.setDataFile(((File) data.get(\"datafile\")).getAbsolutePath());", "-\t\treportTask.setFormat(\"xml\");", "-\t\treportTask.setDestDir(new File(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getParent()));", "-\t\treportTask.execute();", "+\t\tgenerateReportFile(xmlReport);", "-\t\tdom = TestUtils.getXMLReportDOM(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getAbsolutePath());", "+\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "-\t\t//now that the server has stopped, make sure the report shows it has been hit"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e932b7747df6e667f4100015f56f69a6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/webapp/test/WebAppFunctionalTest.java", "commitBeforeChange": "c375766d9094530d2f833df204ec339bfbb1b3b9", "commitAfterChange": "eca94255cccacd9f5e33441462a1b8a3ddc4d322", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test \tpublic void flushCoberturaDataOnly() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void flushCoberturaDataOnly() throws Exception", "diff": ["-\t\t/*", "-\t\t * Test case where a flush is done before any instrumented code is executed.", "-\t\t */", "-\t\tFile tempDir = TestUtils.getTempDir();", "-\t\tFile webappServerDir = new File(tempDir, \"webserver\");", "-\t\tfinal File srcDir = new File(tempDir, SRC_DIR);", "-\t\tnew File(webappServerDir, \"logs\").mkdirs();", "-", "-\t\tWebappServer.writeSimpleServletSource(srcDir);", "-", "-\t\tfinal String appName = \"simple\";", "-", "-\t\twebappServer.deployApp(new HashMap() {", "-\t\t\t{", "-\t\t\t\tput(\"webInfText\", WebappServer.SIMPLE_SERVLET_WEB_XML_TEXT);", "-\t\t\t\tput(\"srcDir\", srcDir);", "-\t\t\t\tput(\"appName\", appName);", "-\t\t\t\tput(\"deployCoberturaFlush\", true);", "-\t\t\t\tput(\"instrumentRegEx\", \"com.acme.*\");", "-\t\t\t}", "-\t\t});", "+\t\twebappServer.deployApp(srcDir, true, \"com.acme.*\");", "-\t\tMap data = webappServer.withRunningServer(new Closure(null) {", "-\t\t\tpublic void doCall(HashMap values) {", "-\t\t\t}", "-\t\t});", "-\t\t//Do a coverage report of the main cobertura.ser file at the root of the project", "-\t\tReportTask reportTask = new ReportTask();", "-\t\treportTask.setProject(TestUtils.project);", "-\t\treportTask.setDataFile(((File) data.get(\"datafile\")).getAbsolutePath());", "-\t\treportTask.setFormat(\"xml\");", "-\t\treportTask.setDestDir(new File(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getParent()));", "-\t\treportTask.execute();", "-", "-\t\tNode dom = TestUtils.getXMLReportDOM(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getAbsolutePath());", "+\t\twebappServer.withRunningServer();", "+\t\t", "+\t\tFile xmlReport = webappServer.getXmlReport();", "+\t\t", "+\t\tgenerateReportFile(xmlReport);", "+\t\t", "+\t\tNode dom = TestUtils.getXMLReportDOM(xmlReport);", "-\t\tSystem.out.println(\"http://\" + data.get(\"hostname\") + \":\"", "-\t\t\t\t+ data.get(\"webappPort\") + \"/coberturaFlush/flushCobertura\");", "-\t\t//flush the cobertura data by doing an HTTP get", "-\t\tString flushing = IOUtils.toString(new java.net.URL(\"http://\"", "-\t\t\t\t+ data.get(\"hostname\") + \":\" + data.get(\"webappPort\")", "-\t\t\t\t+ \"/coberturaFlush/flushCobertura\").openConnection()", "-\t\t\t\t.getInputStream());", "-", "-\t\tassertEquals(\"\", flushing);", "-", "+\t\t", "-\t\t//run the report again", "-\t\treportTask = new ReportTask();", "-\t\treportTask.setProject(TestUtils.project);", "-\t\treportTask.setDataFile(((File) data.get(\"datafile\")).getAbsolutePath());", "-\t\treportTask.setFormat(\"xml\");", "-\t\treportTask.setDestDir(new File(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getParent()));", "-\t\treportTask.execute();", "+\t\tgenerateReportFile(xmlReport);", "-\t\tdom = TestUtils.getXMLReportDOM(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getAbsolutePath());", "+\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "-\t\t//run the report again", "-\t\treportTask = new ReportTask();", "-\t\treportTask.setProject(TestUtils.project);", "-\t\treportTask.setDataFile(((File) data.get(\"datafile\")).getAbsolutePath());", "-\t\treportTask.setFormat(\"xml\");", "-\t\treportTask.setDestDir(new File(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getParent()));", "-\t\treportTask.execute();", "-", "-\t\tdom = TestUtils.getXMLReportDOM(((File) data.get(\"xmlReport\"))", "-\t\t\t\t.getAbsolutePath());", "+\t\tgenerateReportFile(xmlReport);", "+\t\t", "+\t\tdom = TestUtils.getXMLReportDOM(xmlReport);"]}]}