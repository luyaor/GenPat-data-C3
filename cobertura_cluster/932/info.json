{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11761aea4364151cb72e6c40ba7c9993", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f83fe24b47c33a2f42f5d04877902eb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/test/JavancssTest.java", "commitBeforeChange": "f44527006156d82d108277efea7d0bf4a4cd5a22", "commitAfterChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void testCCN( File localPath )", "signatureAfterChange": "     public void testCCN()", "diff": ["-    public void testCCN( File localPath )", "+    public void testCCN()", "-        Javancss pJavancss = measureTestFile( localPath, 40 );", "-        List vFunctions = pJavancss.getFunctionMetrics();", "+        Javancss pJavancss = measureTestFile( 40 );", "+        List/*<FunctionMetric>*/ vFunctions = pJavancss.getFunctionMetrics();", "-        int ccn = ( (Integer) ( (List) vFunctions.get( 0 ) ).get( FCT_CCN ) ).intValue();", "-        bugIf( ccn != 3, \"CCN in constructor of Test40 should be 3, it is: \" + ccn );", "+        assertCCN( vFunctions, 0, 3 );", "-        pJavancss = measureTestFile( localPath, 41 );", "+        pJavancss = measureTestFile( 41 );", "-        ccn = getCCN( vFunctions, 0 );", "-        bugIf( ccn != 3, \"CCN in constructor of Test41 should be 3, it is: \" + ccn );", "-        ccn = getCCN( vFunctions, 1 );", "-        bugIf( ccn != 1, \"CCN in method of Test41 should be 1, it is: \" + ccn );", "-        ccn = getCCN( vFunctions, 2 );", "-        bugIf( ccn != 3, \"CCN in method of Test41 should be 3, it is: \" + ccn );", "-        ccn = getCCN( vFunctions, 3 );", "-        bugIf( ccn != 3, \"CCN in method of Test41 should be 3, it is: \" + ccn );", "-        ccn = getCCN( vFunctions, 4 );", "-        bugIf( ccn != 1, \"CCN in method of Test41 should be 1, it is: \" + ccn );", "+        assertCCN( vFunctions, 0, 3 );", "+        assertCCN( vFunctions, 1, 1 );", "+        assertCCN( vFunctions, 2, 3 );", "+        assertCCN( vFunctions, 3, 3 );", "+        assertCCN( vFunctions, 4, 1 );", "-        pJavancss = measureTestFile( localPath, 72 );", "+        pJavancss = measureTestFile( 72 );", "-        int expectedCCN = 4;", "-        int methodIndex = 0;", "-        assertCCN( vFunctions, methodIndex, expectedCCN );", "-", "-        expectedCCN = 4 + 1;", "-        methodIndex = 1;", "-        assertCCN( vFunctions, methodIndex, expectedCCN );", "-", "-        expectedCCN = 4;", "-        methodIndex = methodIndex + 1;", "-        assertCCN( vFunctions, methodIndex, expectedCCN );", "-", "-        expectedCCN = 4;", "-        methodIndex = methodIndex + 1;", "-        assertCCN( vFunctions, methodIndex, expectedCCN );", "-", "-        expectedCCN = 2;", "-        methodIndex = methodIndex + 1;", "-        assertCCN( vFunctions, methodIndex, expectedCCN );", "+        assertCCN( vFunctions, 0, 4 );", "+        assertCCN( vFunctions, 1, 5 );", "+        assertCCN( vFunctions, 2, 4 );", "+        assertCCN( vFunctions, 3, 4 );", "+        assertCCN( vFunctions, 4, 2 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adeceabe0a7f8edbebbff2f87b859914", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/test/JavancssTest.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void testCCN( String sLocalPath )", "signatureAfterChange": "     public void testCCN( File localPath )", "diff": ["-    public void testCCN( String sLocalPath )", "+    public void testCCN( File localPath )", "-        Javancss pJavancss  = measureTestFile( sLocalPath, 40 );", "-        Vector   vFunctions = pJavancss.getFunctionMetrics();", "-        bugIf(vFunctions.size() != 1);", "-        int ccn = ((Integer)((Vector)vFunctions.elementAt(0)).elementAt(FCT_CCN)).intValue();", "-        bugIf(ccn != 3, \"CCN in constructor of Test40 should be 3, it is: \" + ccn);", "+        Javancss pJavancss = measureTestFile( localPath, 40 );", "+        List vFunctions = pJavancss.getFunctionMetrics();", "+        bugIf( vFunctions.size() != 1 );", "+        int ccn = ( (Integer) ( (List) vFunctions.get( 0 ) ).get( FCT_CCN ) ).intValue();", "+        bugIf( ccn != 3, \"CCN in constructor of Test40 should be 3, it is: \" + ccn );", "-        pJavancss = measureTestFile( sLocalPath, 41 );", "+        pJavancss = measureTestFile( localPath, 41 );", "-        ccn = getCCN(vFunctions, 0);", "-        bugIf(ccn != 3, \"CCN in constructor of Test41 should be 3, it is: \" + ccn);", "-        ccn = getCCN(vFunctions, 1);", "-        bugIf(ccn != 1, \"CCN in method of Test41 should be 1, it is: \" + ccn);", "-        ccn = getCCN(vFunctions, 2);", "-        bugIf(ccn != 3, \"CCN in method of Test41 should be 3, it is: \" + ccn);", "-        ccn = getCCN(vFunctions, 3);", "-        bugIf(ccn != 3, \"CCN in method of Test41 should be 3, it is: \" + ccn);", "-        ccn = getCCN(vFunctions, 4);", "-        bugIf(ccn != 1, \"CCN in method of Test41 should be 1, it is: \" + ccn);", "+        ccn = getCCN( vFunctions, 0 );", "+        bugIf( ccn != 3, \"CCN in constructor of Test41 should be 3, it is: \" + ccn );", "+        ccn = getCCN( vFunctions, 1 );", "+        bugIf( ccn != 1, \"CCN in method of Test41 should be 1, it is: \" + ccn );", "+        ccn = getCCN( vFunctions, 2 );", "+        bugIf( ccn != 3, \"CCN in method of Test41 should be 3, it is: \" + ccn );", "+        ccn = getCCN( vFunctions, 3 );", "+        bugIf( ccn != 3, \"CCN in method of Test41 should be 3, it is: \" + ccn );", "+        ccn = getCCN( vFunctions, 4 );", "+        bugIf( ccn != 1, \"CCN in method of Test41 should be 1, it is: \" + ccn );", "-        pJavancss = measureTestFile( sLocalPath, 72 );", "+        pJavancss = measureTestFile( localPath, 72 );", "-                int methodIndex = 0;      ", "+        int methodIndex = 0;", "-        ", "+"]}]}