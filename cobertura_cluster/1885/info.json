{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33530d1d68a3756d446ff1a75eeec611", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08758fa934ceae86d728ee04ad1459d3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/InstrumentTask.java", "commitBeforeChange": "50f32c884a179499c78b1a0bbda2e7ac0e21f91a", "commitAfterChange": "98a1c5393bec425291a2a3140327df05e58b1582", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic Ignore createIgnore()", "signatureAfterChange": "  \tpublic Ignore createIgnore()", "diff": ["-\t\tignoreRegex = new Ignore();", "+\t\tIgnore ignoreRegex = new Ignore();", "+\t\tignoreRegexs.add(ignoreRegex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6077ff7ca055e1fc2bb430010ece6956", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/FirstPassMethodInstrumenter.java", "commitBeforeChange": "16403757be60e9df4fb5dd5f25f934e5bcad9472", "commitAfterChange": "69fbf13023374b524291c920928e163612e9483f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FirstPassMethodInstrumenter(ClassData classData, final MethodVisitor mv, \t\t\tfinal String owner, final String superOwner, final int access, final String name, final String desc,  \t\t\tfinal String signature, final String[] exceptions, final Collection ignoreRegexs, \t\t\tfinal Collection ignoreBranchesRegexs,  \t\t\tfinal boolean ignoreTrivial)", "signatureAfterChange": "  \tpublic FirstPassMethodInstrumenter(ClassData classData, final MethodVisitor mv, \t\t\tfinal String owner, final String superOwner, final int access, final String name, final String desc,  \t\t\tfinal String signature, final String[] exceptions, final Collection ignoreRegexs, \t\t\tfinal Collection ignoreBranchesRegexs, final Collection ignoreMethodAnnotations, \t\t\tfinal boolean ignoreTrivial)", "diff": ["-\t\t\tfinal Collection ignoreBranchesRegexs, ", "+\t\t\tfinal Collection ignoreBranchesRegexs, final Collection ignoreMethodAnnotations,", "+\t\tthis.ignoreMethodAnnotations = ignoreMethodAnnotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6832901164cd6fe146421f65718c8d90", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/ClassInstrumenter.java", "commitBeforeChange": "2d958af083fecc2f20c64e4cd5f23145337622a0", "commitAfterChange": "8d76b07e3d230fcd0d3b233e7ffc80df6ca3ec82", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tPattern ignoreRegexp)", "signatureAfterChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tfinal Collection ignoreRegexs)", "diff": ["-\t\t\tPattern ignoreRegexp)", "+\t\t\tfinal Collection ignoreRegexs)", "-\t\tthis.ignoreRegex = ignoreRegexp;", "+\t\tthis.ignoreRegexs = ignoreRegexs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae520a6bae4f15c6ef9e3d3e29af5c0b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/ClassInstrumenter.java", "commitBeforeChange": "16403757be60e9df4fb5dd5f25f934e5bcad9472", "commitAfterChange": "69fbf13023374b524291c920928e163612e9483f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes, \t\t\tboolean ignoreTrivial)", "signatureAfterChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes, \t\t\tfinal Collection ignoreMethodAnnotations, boolean ignoreTrivial)", "diff": ["-\t\t\tboolean ignoreTrivial)", "+\t\t\tfinal Collection ignoreMethodAnnotations, boolean ignoreTrivial)", "+\t\tthis.ignoreMethodAnnotations = ignoreMethodAnnotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3e62646e9ba53cfd55de0903a830664", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/ClassInstrumenter.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tfinal Collection ignoreRegexs)", "signatureAfterChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes)", "diff": ["-\t\t\tfinal Collection ignoreRegexs)", "+\t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes)", "+      this.ignoreBranchesRegexs = ignoreBranchesRegexs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc05499784f4f843227113e3b5e7c70b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/ClassInstrumenter.java", "commitBeforeChange": "792c5093dbce280ed92358a7ad1456924b5e55ab", "commitAfterChange": "16403757be60e9df4fb5dd5f25f934e5bcad9472", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes)", "signatureAfterChange": "  \tpublic ClassInstrumenter(ProjectData projectData, final ClassVisitor cv, \t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes, \t\t\tboolean ignoreTrivial)", "diff": ["-\t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes)", "+\t\t\tfinal Collection ignoreRegexs, final Collection ignoreBranchesRegexes,", "+\t\t\tboolean ignoreTrivial)", "+\t\tthis.ignoreTrivial = ignoreTrivial;"]}]}