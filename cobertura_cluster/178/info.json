{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eda92e58b557b6efa581041a8ee039dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6520e00d37d2971589cf067deb944c65", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tvoid touchBranch(int branch)", "signatureAfterChange": " \t \tvoid touchBranch(int branch)", "diff": ["-\t\tif (branch == -1)", "-\t\t\tdefaultHits++;", "-\t\telse ", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tif (hits.length <= branch)", "+\t\t\tif (branch == -1)", "+\t\t\t\tdefaultHits++;", "+\t\t\telse ", "-\t\t\t\tlong[] old = hits;", "-\t\t\t\thits = new long[branch + 1];", "-\t\t\t\tSystem.arraycopy(old, 0, hits, 0, old.length);", "-\t\t\t\tArrays.fill(hits, old.length, hits.length - 1, 0);", "+\t\t\t\tif (hits.length <= branch)", "+\t\t\t\t{", "+\t\t\t\t\tlong[] old = hits;", "+\t\t\t\t\thits = new long[branch + 1];", "+\t\t\t\t\tSystem.arraycopy(old, 0, hits, 0, old.length);", "+\t\t\t\t\tArrays.fill(hits, old.length, hits.length - 1, 0);", "+\t\t\t\t}", "+\t\t\t\thits[branch]++;", "-\t\t\thits[branch]++;", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da17c6833c1577151c19434b98c99c6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tvoid touchBranch(int branch,int new_hits)", "signatureAfterChange": " \t \tvoid touchBranch(int branch,int new_hits)", "diff": ["-\tvoid touchBranch(int branch,int new_hits) ", "-\t{", "-\t\tlock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\tif (branch == -1)", "-\t\t\t\tdefaultHits+=new_hits;", "-\t\t\telse ", "-\t\t\t{", "-\t\t\t\tif (hits.length <= branch)", "-\t\t\t\t{", "-\t\t\t\t\tlong[] old = hits;", "-\t\t\t\t\thits = new long[branch + 1];", "-\t\t\t\t\tSystem.arraycopy(old, 0, hits, 0, old.length);", "-\t\t\t\t\tArrays.fill(hits, old.length, hits.length - 1, 0);", "-\t\t\t\t}", "-\t\t\t\thits[branch]+=new_hits;", "+\tvoid touchBranch(int branch,int new_hits) {", "+\t\tif (branch == -1) {", "+\t\t\tdefaultHits+=new_hits;", "+\t\t} else {", "+\t\t\tif (hits.length <= branch) {", "+\t\t\t\tlong[] old = hits;", "+\t\t\t\thits = new long[branch + 1];", "+\t\t\t\tSystem.arraycopy(old, 0, hits, 0, old.length);", "+\t\t\t\tArrays.fill(hits, old.length, hits.length - 1, 0);", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "+\t\t\thits[branch]+=new_hits;"]}]}