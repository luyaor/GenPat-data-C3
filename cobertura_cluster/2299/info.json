{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b3dc887e170ab7e83f63affec379f20", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27753674662fc303bc07b97da719f52c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SourceFileData.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic long getHitCount(int lineNumber)", "signatureAfterChange": "     public LineData getLineCoverage(int lineNumber)", "diff": ["-\tpublic long getHitCount(int lineNumber)", "-\t{", "-\t\tIterator iter = this.children.values().iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tClassData classData = (ClassData)iter.next();", "-\t\t\tif (classData.isValidSourceLineNumber(lineNumber))", "-\t\t\t\treturn classData.getHitCount(lineNumber);", "-\t\t}", "-\t\treturn 0;", "-\t}", "+   public LineData getLineCoverage(int lineNumber)", "+   {", "+      Iterator iter = this.children.values().iterator();", "+      while (iter.hasNext())", "+      {", "+         ClassData classData = (ClassData)iter.next();", "+         if (classData.isValidSourceLineNumber(lineNumber))", "+            return classData.getLineCoverage(lineNumber);", "+      }", "+      return null;", "+   }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44125ac90ee8c6834deaa43e6ffe197a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic long getHitCount(int lineNumber)", "signatureAfterChange": "    public LineData getLineCoverage(int lineNumber)", "diff": ["-\t */", "-\tpublic long getHitCount(int lineNumber)", "-\t{", "-\t\tInteger lineObject = new Integer(lineNumber);", "-\t\tif (!children.containsKey(lineObject))", "-\t\t{", "-\t\t\treturn 0;", "-\t\t}", "+    */", "+   public LineData getLineCoverage(int lineNumber) ", "+   {", "+      Integer lineObject = new Integer(lineNumber);", "+      if (!children.containsKey(lineObject)) ", "+      {", "+         return null;", "+      }", "-\t\treturn ((LineData)children.get(lineObject)).getHits();", "-\t}", "+      return (LineData) children.get(lineObject);", "+   }"]}]}