{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84ee7d5ae2901c32c9d432e2fddd5b73", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34849d25e2096293c96e332ee00ae6e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/xml/XMLReport.java", "commitBeforeChange": "47a36b11251526c5e9936089f03282ea0c599dba", "commitAfterChange": "fa6590b4914422a1fe749c75560371053ab58bee", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate void dumpClass(Clazz clazz)", "signatureAfterChange": "  \tprivate void dumpClass(ClassData classData)", "diff": ["-\tprivate void dumpClass(Clazz clazz)", "+\tprivate void dumpClass(ClassData classData)", "-\t\tlogger.debug(\"Dumping class \" + clazz.getLongName());", "+\t\tlogger.debug(\"Dumping class \" + classData.getName());", "-\t\tprintln(\"<class name=\\\"\" + clazz.getLongName() + \"\\\" filename=\\\"\"", "-\t\t\t\t+ clazz.getLongFileName() + \"\\\" line-rate=\\\"\"", "-\t\t\t\t+ clazz.getLineCoverageRate() + \"\\\" branch-rate=\\\"\"", "-\t\t\t\t+ clazz.getBranchCoverageRate() + \"\\\"\" + \">\");", "+\t\tprintln(\"<class name=\\\"\" + classData.getName() + \"\\\" filename=\\\"\"", "+\t\t\t\t+ classData.getSourceFileName() + \"\\\" line-rate=\\\"\"", "+\t\t\t\t+ classData.getLineCoverageRate() + \"\\\" branch-rate=\\\"\"", "+\t\t\t\t+ classData.getBranchCoverageRate() + \"\\\"\" + \">\");", "-\t\tdumpMethods(clazz);", "-\t\tdumpLines(clazz);", "+\t\tdumpMethods(classData);", "+\t\tdumpLines(classData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f048486660e3ee1f0aaa90bf40d073e8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "47a36b11251526c5e9936089f03282ea0c599dba", "commitAfterChange": "fa6590b4914422a1fe749c75560371053ab58bee", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate String generateTableRowForClass(Clazz clazz)", "signatureAfterChange": "  \tprivate String generateTableRowForClass(ClassData classData)", "diff": ["-\tprivate String generateTableRowForClass(Clazz clazz)", "+\tprivate String generateTableRowForClass(ClassData classData)", "-\t\tdouble lineCoverage = clazz.getLineCoverageRate();", "-\t\tdouble branchCoverage = clazz.getBranchCoverageRate();", "-\t\tdouble ccn = Util.getCCN(", "-\t\t\t\tnew File(sourceDir, clazz.getLongFileName()), false);", "+\t\tdouble lineCoverage = classData.getLineCoverageRate();", "+\t\tdouble branchCoverage = classData.getBranchCoverageRate();", "+\t\tdouble ccn = Util.getCCN(new File(sourceDir, classData", "+\t\t\t\t.getSourceFileName()), false);", "-\t\tret.append(\"<td class=\\\"text\\\"><a href=\\\"\" + clazz.getLongName()", "-\t\t\t\t+ \".html\\\">\" + clazz.getName() + \"</a></td>\");", "-\t\tif (clazz.getNumberOfLines() == 0)", "+\t\tret.append(\"<td class=\\\"text\\\"><a href=\\\"\" + classData.getName()", "+\t\t\t\t+ \".html\\\">\" + classData.getName() + \"</a></td>\");", "+\t\tif (classData.getNumberOfValidLines() == 0)"]}]}