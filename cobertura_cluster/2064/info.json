{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8fb204f84a61d74602e8201ce7023ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979ef3fdabec698ac9b24d8b38a790bc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/FindTouchPointsMethodAdapter.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FindTouchPointsMethodAdapter(MethodVisitor arg0, \t\t\tString className, String methodName, String methodSignature, \t\t\tAtomicInteger eventIdGenerator, \t\t\tMap<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tAtomicInteger lineIdGenerator)", "signatureAfterChange": "  \tpublic FindTouchPointsMethodAdapter(HistoryMethodAdapter mv, \t\t\tString className, String methodName, String methodSignature, \t\t\tAtomicInteger eventIdGenerator, \t\t\tMap<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tAtomicInteger lineIdGenerator)", "diff": ["-\tpublic FindTouchPointsMethodAdapter(MethodVisitor arg0,", "+\tpublic FindTouchPointsMethodAdapter(HistoryMethodAdapter mv,", "-\t\tsuper(arg0, className, methodName, methodSignature, lineIdGenerator);", "+\t\tthis(mv, mv.backlog(), className, methodName, methodSignature, eventIdGenerator, duplicatedLinesMap, lineIdGenerator);\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c899c82cb88c376453fbad8607c3df49", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Clazz.java", "commitBeforeChange": "7cdece92ea0660e086a27d07d0eef3df4b583a23", "commitAfterChange": "100512ee483a0d8eebc3eb78a5d8913b7b64ddb6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic double getLineCoverageRate()", "signatureAfterChange": "  \tpublic double getLineCoverageRate()", "diff": ["-\t\tif (numberOfLines == 0)", "+\t\tif (getNumberOfLines() == 0)", "-\t\treturn (double)numberOfCoveredLines / (double)numberOfLines;", "+\t\treturn (double)getNumberOfCoveredLines() / (double)getNumberOfLines();"]}]}