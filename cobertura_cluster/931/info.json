{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27084913aeda106238e62025bf928063", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d966e2086e7448476f2f0ae359a542", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic double getBranchCoverageRate(String methodNameAndDescriptor)", "signatureAfterChange": "    public double getBranchCoverageRate(String methodNameAndDescriptor)", "diff": ["-\t */", "-\tpublic double getBranchCoverageRate(String methodNameAndDescriptor)", "-\t{", "-\t\tint total = 0;", "-\t\tint hits = 0;", "+    */", "+   public double getBranchCoverageRate(String methodNameAndDescriptor) {", "+      int total = 0;", "+      int covered = 0;", "-\t\tIterator iter = branches.values().iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tLineData next = (LineData)iter.next();", "-\t\t\tif (methodNameAndDescriptor.equals(next.getMethodName()", "-\t\t\t\t\t+ next.getMethodDescriptor()))", "-\t\t\t{", "-\t\t\t\ttotal++;", "-\t\t\t\tif (next.getHits() > 0)", "-\t\t\t\t{", "-\t\t\t\t\thits++;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (total == 0)", "-\t\t\treturn 1d;", "-\t\treturn (double)hits / total;", "-\t}", "+      for (Iterator iter = branches.values().iterator(); iter.hasNext();) {", "+         LineData next = (LineData) iter.next();", "+         if (methodNameAndDescriptor.equals(next.getMethodName() + next.getMethodDescriptor())) {", "+            total += next.getNumberOfValidBranches();", "+            covered += next.getNumberOfCoveredBranches();", "+         }", "+      }", "+      if (total == 0) return 1.0;", "+      return (double) covered / total;", "+   }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6868aae5dc2ec69808a9ea43649b000", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "30453e39132acf00c942ed5da8c2668953b0fe6b", "commitAfterChange": "88eeebcda0bf1e55adb32224692061467a17e6e8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate void generateOverview(PackageData packageData) throws IOException", "signatureAfterChange": "  \tprivate void generateOverview(PackageData packageData) throws IOException", "diff": ["+\t\tIterator iter;", "+", "-\t\t\t// TODO: Do we need this extra \"package.size() > 0\" check?", "-\t\t\tif (packages.size() > 0)", "+\t\t\titer = packages.iterator();", "+\t\t\twhile (iter.hasNext())", "-\t\t\t\tIterator iter = packages.iterator();", "-\t\t\t\twhile (iter.hasNext())", "-\t\t\t\t{", "-\t\t\t\t\tPackageData subPackageData = (PackageData)iter.next();", "-\t\t\t\t\tout.println(generateTableRowForPackage(subPackageData));", "-\t\t\t\t}", "+\t\t\t\tPackageData subPackageData = (PackageData)iter.next();", "+\t\t\t\tout.println(generateTableRowForPackage(subPackageData));", "-\t\t\t\t\tIterator iter = projectData.getClasses().iterator();", "+\t\t\t\t\titer = projectData.getClasses().iterator();", "-\t\t\t\tIterator iter = classes.iterator();", "+\t\t\t\titer = classes.iterator();"]}]}