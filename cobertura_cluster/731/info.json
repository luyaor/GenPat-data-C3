{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e250404b5f80eb5d5e5d3a5837bef1c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511918d555352c97eecd01db64011954", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SourceFileData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic synchronized void addClassData(ClassData classData)", "signatureAfterChange": "  \tpublic void addClassData(ClassData classData)", "diff": ["-\tpublic synchronized void addClassData(ClassData classData)", "+\tpublic void addClassData(ClassData classData)", "-\t\tif (children.containsKey(classData.getBaseName()))", "-\t\t\tthrow new IllegalArgumentException(\"Source file \" + this.name", "-\t\t\t\t\t+ \" already contains a class with the name \"", "-\t\t\t\t\t+ classData.getBaseName());", "-", "-\t\t// Each key is a class basename, stored as an String object.", "-\t\t// Each value is information about the class, stored as a ClassData object.", "-\t\tchildren.put(classData.getBaseName(), classData);", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\tif (children.containsKey(classData.getBaseName()))", "+\t\t\t\tthrow new IllegalArgumentException(\"Source file \" + this.name", "+\t\t\t\t\t\t+ \" already contains a class with the name \"", "+\t\t\t\t\t\t+ classData.getBaseName());", "+\t", "+\t\t\t// Each key is a class basename, stored as an String object.", "+\t\t\t// Each value is information about the class, stored as a ClassData object.", "+\t\t\tchildren.put(classData.getBaseName(), classData);", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5a96de7f0b61824567fc09179fea1a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      \tpublic void addClassData(ClassData classData)", "signatureAfterChange": "      \tpublic void addClassData(ClassData classData)", "diff": ["-\t\tString sourceFileName = classData.getSourceFileName();", "-\t\tSourceFileData sourceFileData = (SourceFileData)children.get(sourceFileName);", "-\t\tif (sourceFileData == null)", "-\t\t{", "-\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "-\t\t\t// Each key is a source file name, stored as an String object.", "-\t\t\t// Each value is information about the source file, stored as", "-\t\t\t// a SourceFileData object.", "-\t\t\tthis.children.put(sourceFileName, sourceFileData);", "-\t\t}", "-\t\tsourceFileData.addClassData(classData);", "+\t\tif (children.containsKey(classData.getBaseName()))", "+\t\t\tthrow new IllegalArgumentException(\"Package \" + this.name", "+\t\t\t\t\t+ \" already contains a class with the name \"", "+\t\t\t\t\t+ classData.getBaseName());", "+", "+\t\t// Each key is a class basename, stored as an String object.", "+\t\t// Each value is information about the class, stored as a ClassData object.", "+\t\tchildren.put(classData.getBaseName(), classData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a4f375983da4b8752ad80c43f1cd1e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      \tpublic void addClassData(ClassData classData)", "signatureAfterChange": "      \tpublic void addClassData(ClassData classData)", "diff": ["-\t\tif (children.containsKey(classData.getBaseName()))", "-\t\t\tthrow new IllegalArgumentException(\"Package \" + this.name", "-\t\t\t\t\t+ \" already contains a class with the name \"", "-\t\t\t\t\t+ classData.getBaseName());", "-", "-\t\t// Each key is a class basename, stored as an String object.", "-\t\t// Each value is information about the class, stored as a ClassData object.", "-\t\tchildren.put(classData.getBaseName(), classData);", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\tif (children.containsKey(classData.getBaseName()))", "+\t\t\t\tthrow new IllegalArgumentException(\"Package \" + this.name", "+\t\t\t\t\t\t+ \" already contains a class with the name \"", "+\t\t\t\t\t\t+ classData.getBaseName());", "+\t", "+\t\t\t// Each key is a class basename, stored as an String object.", "+\t\t\t// Each value is information about the class, stored as a ClassData object.", "+\t\t\tchildren.put(classData.getBaseName(), classData);", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}]}