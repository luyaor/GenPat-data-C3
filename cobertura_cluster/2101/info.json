{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5153bbe7a1e6b50f8e1e25d99c5f1d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478a9df763d86624f37955dbbd7c1055", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/dsl/Cobertura.java", "commitBeforeChange": "12d6225115e6fc53fe248440869c7b68e291ce37", "commitAfterChange": "197393b60e32d3e471696a42c6ca7aa1a5d227f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic Report report()", "signatureAfterChange": " \tpublic Report report()", "diff": ["+\t\tcomplexityCalculator.setEncoding(args.getEncoding());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62b251343a9c392993db66f711bd22b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/dsl/Arguments.java", "commitBeforeChange": "768785370d7e1c7bdca4f0914a621cc1a2a41ac9", "commitAfterChange": "17bc655805583d7316247f96e74de5acf06c2d61", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tArguments(String baseDirectory, File dataFile, File destinationDirectory, \t\t\tFile commandsFile, Collection ignoreRegexes, \t\t\tCollection<Pattern> ignoreBranchesRegexes, \t\t\tCollection<Pattern> classPatternIncludeClassesRegexes, \t\t\tCollection<Pattern> classPatternExcludeClassesRegexes, \t\t\tboolean failOnError, boolean ignoreTrivial, \t\t\tboolean threadsafeRigorous, String encoding, \t\t\tSet<CoverageThreshold> minimumCoverageThresholds, \t\t\tdouble classLineThreshold, double classBranchThreshold, \t\t\tdouble packageLineThreshold, double packageBranchThreshold, \t\t\tdouble totalLineThreshold, double totalBranchThreshold, \t\t\tSet<CoberturaFile> filesToInstrument, Set<File> filesToMerge, \t\t\tSet<String> ignoreMethodAnnotations, \t\t\tSet<String> ignoreClassAnnotations, FileFinder sources)", "signatureAfterChange": "  \tArguments(String baseDirectory, File dataFile, File destinationDirectory, \t\t\tFile commandsFile, Collection ignoreRegexes, \t\t\tCollection<Pattern> ignoreBranchesRegexes, \t\t\tCollection<Pattern> classPatternIncludeClassesRegexes, \t\t\tCollection<Pattern> classPatternExcludeClassesRegexes, \t\t\tboolean calculateMethodComplexity, \t\t\tboolean failOnError, boolean ignoreTrivial, \t\t\tboolean threadsafeRigorous, String encoding, \t\t\tSet<CoverageThreshold> minimumCoverageThresholds, \t\t\tdouble classLineThreshold, double classBranchThreshold, \t\t\tdouble packageLineThreshold, double packageBranchThreshold, \t\t\tdouble totalLineThreshold, double totalBranchThreshold, \t\t\tSet<CoberturaFile> filesToInstrument, Set<File> filesToMerge, \t\t\tSet<String> ignoreMethodAnnotations, \t\t\tSet<String> ignoreClassAnnotations, FileFinder sources)", "diff": ["+\t\t\tboolean calculateMethodComplexity,", "+\t\tthis.calculateMethodComplexity = calculateMethodComplexity;"]}]}