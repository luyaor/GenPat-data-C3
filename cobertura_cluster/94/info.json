{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4915aceaa3e57317461469b9a253331d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c4128b08772b66a493af6047f4a28f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/test/AbstractCoberturaTestCase.java", "commitBeforeChange": "5c95e91c4fb8eaabadd9ca6cf6b3ebb78c8822c3", "commitAfterChange": "75f2a2aa41065d346a83ea898e7b1a155a99d13e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void parseIssueTester(String imports, String method) \t\t\tthrows IOException", "signatureAfterChange": " \tpublic static void parseIssueTester(String imports, String method) \t\t\tthrows IOException", "diff": ["-\t\tDefaultLogger fileLogger = new DefaultLogger();", "-\t\tfileLogger.setErrorPrintStream(new PrintStream(new File(reportDir,", "-\t\t\t\t\"error.log\")));", "-\t\tfileLogger.setOutputPrintStream(new PrintStream(new File(reportDir,", "-\t\t\t\t\"std.log\")));", "-\t\tfileLogger.setMessageOutputLevel(Project.MSG_INFO);", "-\t\tTestUtils.project.addBuildListener(fileLogger);", "+\t\tdebugReportTask();", "-\t\tReportTask reportTask = new ReportTask();", "-\t\treportTask.setProject(TestUtils.project);", "-\t\treportTask.setDataFile(datafile.getAbsolutePath());", "-\t\treportTask.setFormat(\"xml\");", "-\t\treportTask.setSrcDir(srcDir.getAbsolutePath());", "-\t\treportTask.setDestDir(reportDir);", "-\t\treportTask.setFailonerror(true);", "-\t\treportTask.execute();", "-", "-\t\tTestUtils.project.removeBuildListener(fileLogger);", "-", "-\t\tif (FileUtils.readFileToString(new File(reportDir, \"error.log\"))", "-\t\t\t\t.contains(\"JavaNCSS got an error while parsing the java file\"))", "+\t\tif (FileUtils", "+\t\t\t\t.readFileToString(new File(reportDir, \"error.log\"))", "+\t\t\t\t.contains(", "+\t\t\t\t\t\t\"net.sourceforge.cobertura.javancss.parser.ParseException\"))", "-\t\tif (FileUtils.readFileToString(new File(reportDir, \"std.log\"))", "-\t\t\t\t.contains(\"JavaNCSS got an error while parsing the java file\"))", "+\t\tif (FileUtils", "+\t\t\t\t.readFileToString(new File(reportDir, \"std.log\"))", "+\t\t\t\t.contains(", "+\t\t\t\t\t\t\"net.sourceforge.cobertura.javancss.parser.ParseException\"))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "922f8656f5f34d3af6290107a0842d2c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/test/util/WebappServer.java", "commitBeforeChange": "5b2ed5a2c3c936f68ab7a9c6f30909dc8bb2d610", "commitAfterChange": "2b194b3d77bf600da43b42901e6946bf29c86ff0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate void stopWebServer()", "signatureAfterChange": "  \tprivate void stopWebServer()", "diff": ["-\t\tJava java = new Java();", "-\t\tjava.setProject(TestUtils.project);", "-\t\tjava.setJar(new File(TestUtils.getTempDir(), \"webserver/start.jar\"));", "-\t\tjava.setDir(dir);", "-\t\tjava.setFork(true);", "-\t\tjava.setArgs(\"--stop\");", "-\t\tVariable stopPortVariable = new Variable();", "-\t\tVariable stopKeyVariable = new Variable();", "+\t\tThread t = new Thread() {", "+\t\t\t@Override", "+\t\t\tpublic void run() {", "+\t\t\t\tJava java = new Java();", "+\t\t\t\tjava.setProject(TestUtils.project);", "+\t\t\t\tjava.setJar(new File(TestUtils.getTempDir(),", "+\t\t\t\t\t\t\"webserver/start.jar\"));", "+\t\t\t\tjava.setDir(dir);", "+\t\t\t\tjava.setFork(true);", "+\t\t\t\tjava.setArgs(\"--stop\");", "+\t\t\t\tVariable stopPortVariable = new Variable();", "+\t\t\t\tVariable stopKeyVariable = new Variable();", "-\t\tstopPortVariable.setKey(\"STOP.PORT\");", "-\t\tstopPortVariable.setValue(String.valueOf(stopPort));", "+\t\t\t\tstopPortVariable.setKey(\"STOP.PORT\");", "+\t\t\t\tstopPortVariable.setValue(String.valueOf(stopPort));", "-\t\tstopKeyVariable.setKey(\"STOP.KEY\");", "-\t\tstopKeyVariable.setValue(\"cobertura\");", "+\t\t\t\tstopKeyVariable.setKey(\"STOP.KEY\");", "+\t\t\t\tstopKeyVariable.setValue(\"cobertura\");", "-\t\tjava.addSysproperty(stopPortVariable);", "-\t\tjava.addSysproperty(stopKeyVariable);", "+\t\t\t\tjava.addSysproperty(stopPortVariable);", "+\t\t\t\tjava.addSysproperty(stopKeyVariable);", "-\t\tjava.execute();", "+\t\t\t\tjava.execute();", "+", "+\t\t\t\tjava.execute();", "+\t\t\t}", "+\t\t};", "+\t\tt.start();"]}]}