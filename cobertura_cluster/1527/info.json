{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81e8881bf0d1e80003ca40abb1538010", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4e3212e7bd5e950f56ce940b9314ab", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r \r   final public void AssertStatement() throws ParseException", "signatureAfterChange": "    final public void AssertStatement() throws ParseException", "diff": ["-\r", "-  final public void AssertStatement() throws ParseException {\r", "-    jj_consume_token(ASSERT);\r", "-    Expression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case COLON:\r", "-      jj_consume_token(COLON);\r", "-      Expression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[138] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-    _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void AssertStatement() throws ParseException {", "+    jj_consume_token(ASSERT);", "+    Expression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case COLON:", "+      jj_consume_token(COLON);", "+      Expression();", "+      break;", "+    default:", "+      jj_la1[139] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+    _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad815b9c7a889f2814993f5863cdf56e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r \r   final public void AssertStatement() throws ParseException", "signatureAfterChange": "    final public void AssertStatement() throws ParseException", "diff": ["-\r", "-  final public void AssertStatement() throws ParseException {\r", "-    jj_consume_token(ASSERT);\r", "-    Expression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case COLON:\r", "-      jj_consume_token(COLON);\r", "-      Expression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[138] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-    _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void AssertStatement() throws ParseException {", "+    jj_consume_token(ASSERT);", "+    Expression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case COLON:", "+      jj_consume_token(COLON);", "+      Expression();", "+      break;", "+    default:", "+      jj_la1[139] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+    _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}]}