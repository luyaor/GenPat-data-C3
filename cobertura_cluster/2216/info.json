{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "352f02c9869cc861c5d6de655b1ddc02", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71286fbf8d18b25d594c834f36a9b36d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "commitAfterChange": "d0e0a0f0aa7d8408ac3779914ce8b50e1c541921", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \r   final public void UnmodifiedInterfaceDeclaration() throws ParseException", "signatureAfterChange": "\r \r   final public void UnmodifiedInterfaceDeclaration() throws ParseException", "diff": ["-                _sClass += new String(getToken(2).image);\r", "+                _sClass += getToken(2).image;\r", "-                        Vector vMetrics = new Vector();\r", "-                        vMetrics.addElement(new String(_sPackage + _sClass));\r", "-                        vMetrics.addElement(new Integer(_ncss - oldNcss));\r", "-                        vMetrics.addElement(new Integer(_functions - oldFunctions));\r", "-                        vMetrics.addElement(new Integer(_classes - oldClasses));\r", "-                        vMetrics.addElement( Util.getConstantObject() );\r", "-                        vMetrics.addElement( Util.getConstantObject() );\r", "-                        _vClasses.addElement(vMetrics);\r", "+                        ObjectMetric metric = new ObjectMetric();\r", "+                        metric.name = _sPackage + _sClass;\r", "+                        metric.ncss = _ncss - oldNcss;\r", "+                        metric.functions = _functions - oldFunctions;\r", "+                        metric.classes = _classes - oldClasses;\r", "+                        //metric.add( Util.getConstantObject() );\r", "+                        //metric.add( Util.getConstantObject() );\r", "+                        _vClasses.add( metric );\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77874516371842ac9bd68211b4b40ca5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/Javancss.java", "commitBeforeChange": "8470613dce5289e48aeaaebf95d84de1414dad70", "commitAfterChange": "77a25c204e0d22c334a40e10db5134e2cb525c03", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private DataInputStream createInputStream( String sSourceFileName_ )", "signatureAfterChange": "\r \r     private Reader createSourceReader( File sSourceFile_ )", "diff": ["-", "-    private DataInputStream createInputStream( String sSourceFileName_ )", "-    {", "-        DataInputStream disSource = null;", "-", "-        try {", "-            disSource = new DataInputStream", "-                   (new FileInputStream(sSourceFileName_));", "-        } catch(IOException pIOException) {", "-            if ( Util.isEmpty( _sErrorMessage ) )", "-            {", "-                _sErrorMessage = \"\";", "-            }", "-            else", "-            {", "-                _sErrorMessage += \"\\n\";", "-            }", "-            _sErrorMessage += \"File not found: \" + sSourceFileName_;", "-            _thrwError = pIOException;", "-", "-            return null;", "-        }", "-", "-        return disSource;", "-    }", "+\r", "+    private Reader createSourceReader( File sSourceFile_ )\r", "+    {\r", "+        try\r", "+        {\r", "+            return newReader( sSourceFile_ );\r", "+        }\r", "+        catch ( IOException pIOException )\r", "+        {\r", "+            if ( Util.isEmpty( _sErrorMessage ) )\r", "+            {\r", "+                _sErrorMessage = \"\";\r", "+            }\r", "+            else\r", "+            {\r", "+                _sErrorMessage += \"\\n\";\r", "+            }\r", "+            _sErrorMessage += \"File not found: \" + sSourceFile_.getAbsolutePath();\r", "+            _thrwError = pIOException;\r", "+\r", "+            return null;\r", "+        }\r", "+    }\r"]}]}