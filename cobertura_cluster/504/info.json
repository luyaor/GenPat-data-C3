{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "486290a3b2e699bfd134efa855ffc9ba", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12b06cbe203c2014ad112583ef84ecc7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/merge/MergeTest.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void testMergePackages()", "signatureAfterChange": "  \tpublic void testMergePackages()", "diff": ["-\t\tassertNotNull( first.getChild(\"Fourth.java\"));", "-\t\tassertNotNull( first.getChild(\"Seventh.java\"));", "+\t\tassertNotNull( first.getChild(\"Fourth\"));", "+\t\tassertNotNull( first.getChild(\"Seventh\"));", "-\t\tassertNotNull( beautiful.getChild(\"beautiful/Fourth.java\"));", "+\t\tassertNotNull( beautiful.getChild(\"Fourth\"));", "-\t\tassertNotNull( test.getChild(\"test/First.java\"));", "+\t\tassertNotNull( test.getChild(\"First\"));", "-\t\tassertNotNull( testMe.getChild(\"test/me/Fourth.java\"));", "+\t\tassertNotNull( testMe.getChild(\"Fourth\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccb77b92af7145a55d98f31d9304e81a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CoverageReportTask.java", "commitBeforeChange": "fa6590b4914422a1fe749c75560371053ab58bee", "commitAfterChange": "eaf2267474ed505073f1abfd841ab9ef7b9dd935", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void execute() throws BuildException", "signatureAfterChange": "  \tpublic void execute() throws BuildException", "diff": ["-\t\tgetJava().createArg().setValue(\"-i\");", "+\t\tgetJava().createArg().setValue(\"--datafile\");", "-\t\tgetJava().createArg().setValue(\"-s\");", "+\t\tgetJava().createArg().setValue(\"--source\");", "-\t\tgetJava().createArg().setValue(\"-o\");", "+\t\tgetJava().createArg().setValue(\"--output\");", "-\t\tgetJava().createArg().setValue(\"-f\");", "+\t\tgetJava().createArg().setValue(\"--format\");"]}]}