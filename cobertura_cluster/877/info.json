{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "673f93912b2464f227220df8f26655c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0428cb193a6dcd66cdc84686ecbd35ff", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "86ba74eba09df9fe91a0017286c58eeca8115e4e", "commitAfterChange": "cb1489d04bf4db3975fea51af595b5c831d4de75", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate static String generateTableColumnsFromData(double lineCoverage, \t\t\tint numLines, double branchCoverage, int numBranches, double ccn)", "signatureAfterChange": " \tprivate static String generateTableColumnsFromData(CoverageData coverageData, \t\t\tdouble ccn)", "diff": ["-\t */", "-\tprivate static String generateTableColumnsFromData(double lineCoverage,", "-\t\t\tint numLines, double branchCoverage, int numBranches, double ccn)", "-\t{", "-\t\tString lineCoverageCell = (lineCoverage == -1) ? generateNAPercent()", "-\t\t\t\t: generatePercentResult(lineCoverage);", "-", "-\t\tString branchCoverageCell = (branchCoverage == -1)", "-\t\t\t\t? generateNAPercent() : generatePercentResult(branchCoverage);", "-", "-\t\t// The \"hidden\" CSS class is used below to write the ccn without", "-\t\t// any formatting so that the table column can be sorted correctly", "-\t\treturn \"<td class=\\\"value\\\">\" + lineCoverageCell + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\">\" + numLines + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\">\" + branchCoverageCell + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\">\" + numBranches + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\"><span class=\\\"hidden\\\">\" + ccn", "-\t\t\t\t+ \";</span>\" + getDoubleValue(ccn) + \"</td>\";", "-\t}", "+\t */", "+\tprivate static String generateTableColumnsFromData(CoverageData coverageData,", "+\t\t\tdouble ccn)", "+\t\tint numLinesCovered = coverageData.getNumberOfCoveredLines();", "+\t\tint numLinesValid = coverageData.getNumberOfValidLines();", "+\t\tint numBranchesCovered = coverageData.getNumberOfCoveredBranches();", "+\t\tint numBranchesValid = coverageData.getNumberOfValidBranches();", "+", "+\t\t// The \"hidden\" CSS class is used below to write the ccn without", "+\t\t// any formatting so that the table column can be sorted correctly", "+\t\treturn \"<td>\" + generatePercentResult(numLinesCovered, numLinesValid)", "+\t\t\t\t+\"</td><td>\"", "+\t\t\t\t+ generatePercentResult(numBranchesCovered, numBranchesValid)", "+\t\t\t\t+ \"</td><td class=\\\"value\\\"><span class=\\\"hidden\\\">\"", "+\t\t\t\t+ ccn + \";</span>\" + getDoubleValue(ccn) + \"</td>\";", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e06795590778aaaa675cb13526a6dda1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/reporting/xml/SummaryXMLReport.java", "commitBeforeChange": "eca94255cccacd9f5e33441462a1b8a3ddc4d322", "commitAfterChange": "167806013c72435d0994f47e5f3893d8d39dce7f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic SummaryXMLReport(ProjectData projectData, File destinationDir, \t\t\tFileFinder finder, ComplexityCalculator complexity) \t\t\tthrows IOException", "signatureAfterChange": "  \tpublic SummaryXMLReport(ProjectData projectData, File destinationDir, \t\t\tFileFinder finder, ComplexityCalculator complexity) \t\t\tthrows IOException", "diff": ["-public class SummaryXMLReport extends CommonXMLReport {", "+", "-\t\tsetPrintWriter(IOUtil.getPrintWriter(file));", "+\t\tpw = IOUtil.getPrintWriter(file);", "-\t\t\tprintHeader();", "-\t\t\tprintCoverageElement(projectData, complexity);", "+\t\t\tprintln(\"<?xml version=\\\"1.0\\\"?>\");", "+\t\t\tprintln(\"<!DOCTYPE coverage SYSTEM \\\"http://cobertura.sourceforge.net/xml/\"", "+\t\t\t\t\t+ XMLReport.coverageDTD + \"\\\">\");", "+\t\t\tprintln(\"\");", "+", "+\t\t\tdouble ccn = complexity.getCCNForProject(projectData);", "+\t\t\tint numLinesCovered = projectData.getNumberOfCoveredLines();", "+\t\t\tint numLinesValid = projectData.getNumberOfValidLines();", "+\t\t\tint numBranchesCovered = projectData.getNumberOfCoveredBranches();", "+\t\t\tint numBranchesValid = projectData.getNumberOfValidBranches();", "+", "+\t\t\t// TODO: Set a schema?", "+\t\t\t//println(\"<coverage \" + sourceDirectories.toString() + \" xmlns=\\\"http://cobertura.sourceforge.net\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://cobertura.sourceforge.net/xml/coverage.xsd\\\">\");", "+\t\t\tprintln(\"<coverage line-rate=\\\"\"", "+\t\t\t\t\t+ projectData.getLineCoverageRate() + \"\\\" branch-rate=\\\"\"", "+\t\t\t\t\t+ projectData.getBranchCoverageRate()", "+\t\t\t\t\t+ \"\\\" lines-covered=\\\"\" + numLinesCovered", "+\t\t\t\t\t+ \"\\\" lines-valid=\\\"\" + numLinesValid", "+\t\t\t\t\t+ \"\\\" branches-covered=\\\"\" + numBranchesCovered", "+\t\t\t\t\t+ \"\\\" branches-valid=\\\"\" + numBranchesValid", "+", "+\t\t\t\t\t+ \"\\\" complexity=\\\"\" + ccn", "+", "+\t\t\t\t\t+ \"\\\" version=\\\"\" + Header.version() + \"\\\" timestamp=\\\"\"", "+\t\t\t\t\t+ new Date().getTime() + \"\\\">\");", "-\t\t\tclose();", "+\t\t\tpw.close();", "+\t\t}", "+", "+\t}"]}]}