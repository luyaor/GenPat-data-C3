{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35a6a8c57bad00b0a0488f191e6f3b16", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39dfa57b6dd05c81fc537b4a7c3f0c0e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/InjectCodeTouchPointListener.java", "commitBeforeChange": "16e57fa03454d1d8ab895fe3215c1c1c7570f750", "commitAfterChange": "9402254283588bbf5a0b3d6c1d0433c021780e7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void afterLabel(int eventId, Label label, int currentLine, MethodVisitor mv)", "signatureAfterChange": " \tpublic void afterLabel(int eventId, Label label, int currentLine, MethodVisitor mv)", "diff": ["-\t\t\tcodeProvider.generateCodeThatIncrementsCoberturaCounterFromInternalVariable(mv,lastJumpIdVariableIndex,classMap.getClassName());", "-\t\t\tcodeProvider.generateCodeThatZeroJumpCounterIdVariable(mv,lastJumpIdVariableIndex);\t", "+\t\t\tcodeProvider.generateCodeThatIncrementsCoberturaCounterFromInternalVariable(mv,lastJumpIdVariableIndex,classMap.getClassName());\t", "+\t\t", "+\t\tif (classMap.isJumpDestinationLabel(eventId)){\t\t", "+\t\t\tcodeProvider.generateCodeThatZeroJumpCounterIdVariable(mv,lastJumpIdVariableIndex);\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ddbe3e0d1f318f3d4d2bf4a991fdde0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/InjectCodeClassInstrumenter.java", "commitBeforeChange": "19ceee05d925a56765de9c8658cd706bba52717d", "commitAfterChange": "8436089ae83994fd4e20a6c9d4bf74654ba39159", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t@Override \tpublic void visitEnd()", "signatureAfterChange": " \t@Override \tpublic void visitEnd()", "diff": ["-\t\t\tMethodVisitor mv=super.visitMethod(Opcodes.ACC_STATIC, \"<clinit>\", \"()V\", null,\tnull);", "+\t\t\tMethodVisitor mv = super.visitMethod(Opcodes.ACC_STATIC, \"<clinit>\", \"()V\", null,\tnull);", "-\t\t\tcodeProvider.generateCINITmethod(mv, classMap.getClassName(),classMap.getMaxCounterId()+1);", "+\t\t\tcodeProvider.generateCallCoberturaInitMethod(mv, classMap.getClassName());", "+\t\tcodeProvider.generateCoberturaInitMethod(cv, classMap.getClassName(), ", "+\t\t\t\tclassMap.getMaxCounterId() + 1);"]}]}