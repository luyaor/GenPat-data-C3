{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "846843d072f8947683cb1ac3b4be96f5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae42421cfdeb953b877d8b8d9068f569", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/test/AbstractCoberturaTestCase.java", "commitBeforeChange": "c8909a872396ebd00cc84f0039160c330694ddbd", "commitAfterChange": "8e4712ea59a44c0c8513cb13a9a0a16cac01d017", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static void debugReportTask() throws FileNotFoundException", "signatureAfterChange": " \tpublic static void debugReportTask() throws FileNotFoundException", "diff": ["-\t\t\tMain.main(args);", "+\t\t\tReportMain.main(args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1eefe2383d8f626d6cb771ad70ef6e1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/xml/XMLReport.java", "commitBeforeChange": "c4a405564e3cbe90ddda3850780016aae2177828", "commitAfterChange": "a0077fbfb409747b608a40f857897c2bf5fb8f3a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void dumpMethods(CoverageData instrumentation)", "signatureAfterChange": "  \tprivate void dumpMethods(CoverageData instrumentation)", "diff": ["-\t\tIterator iter = instrumentation.getMethodNamesAndSignatures()", "+\t\tIterator iter = instrumentation.getMethodNamesAndDescriptors()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1d3a18b1009154d6476abd9cab8112", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "8d76b07e3d230fcd0d3b233e7ffc80df6ca3ec82", "commitAfterChange": "c7179e693f89a314eb6898100456db755030dd92", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "signatureAfterChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "diff": ["-\t\tSortedSet sourceFiles;", "+\t\tCollection sourceFiles;", "-\t\t// sourceFiles is sorted, but it's sorted by the full path", "-\t\t// to the file, and we only want to sort based on the", "-\t\t// file's basename.", "+\t\t// sourceFiles may be sorted, but if so it's sorted by", "+\t\t// the full path to the file, and we only want to sort", "+\t\t// based on the file's basename."]}]}