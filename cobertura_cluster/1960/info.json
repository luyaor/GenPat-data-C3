{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "004e160ae1c33d541bb020110944c033", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578ce2f2be9422f511325fdc18a460fe", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "cbc25c039577cb031ebc2642ca908fb2416646b0", "commitAfterChange": "6e5bdd4a260b41be4efbef0899cf1900c2626b0c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tpublic double getBranchCoverageRate(int index)", "signatureAfterChange": " \t \tpublic String getConditionCoverage(int index)", "diff": ["-\tpublic double getBranchCoverageRate(int index) {", "-\t\t\treturn ((JumpData) jumps.get(index)).getBranchCoverageRate();", "-\t\t\treturn ((SwitchData) switches.get(index - jumpsSize)).getBranchCoverageRate();", "+\t", "+\tpublic String getConditionCoverage(int index) {", "+\t\tObject branchData = getConditionData(index);", "+\t\tif (branchData == null)", "+\t\t{", "+\t\t\treturn StringUtil.getPercentValue(1.0);", "+\t\t} ", "+\t\telse if (branchData instanceof JumpData) ", "+\t\t{", "+\t\t\tJumpData jumpData = (JumpData) branchData;", "+\t\t\treturn StringUtil.getPercentValue(jumpData.getBranchCoverageRate());", "+\t\t}", "-\t\t\treturn 1;", "+\t\t{", "+\t\t\tSwitchData switchData = (SwitchData) branchData;", "+\t\t\treturn StringUtil.getPercentValue(switchData.getBranchCoverageRate());", "+", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ea41bfcfd79500fdc14679050a0059", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "6c6d6c76c09024a5191fe1c0cd3e7fdf05a53316", "commitAfterChange": "f23f5bf81f0fad907fdffec71d55d604d0e8edd6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate String generateTableRowForClass(ClassData classData)", "signatureAfterChange": "  \tprivate String generateTableRowForClass(ClassData classData)", "diff": ["-\t\tdouble lineCoverage = classData.getLineCoverageRate();", "-\t\tdouble branchCoverage = classData.getBranchCoverageRate();", "+\t\tdouble lineCoverage = -1;", "+\t\tdouble branchCoverage = -1;", "+", "+\t\tif (classData.getNumberOfValidLines() > 0)", "+\t\t\tlineCoverage = classData.getLineCoverageRate();", "+\t\tif (classData.getNumberOfValidBranches() > 0)", "+\t\t\tbranchCoverage = classData.getBranchCoverageRate();", "+", "-\t\tif (classData.getNumberOfValidLines() == 0)", "-\t\t{", "-\t\t\tret.append(generateTableColumnsForNA(ccn));", "-\t\t}", "-\t\telse", "-\t\t{", "-\t\t\tret.append(generateTableColumnsFromData(lineCoverage,", "-\t\t\t\t\tbranchCoverage, ccn));", "-\t\t}", "+\t\tret.append(generateTableColumnsFromData(lineCoverage, branchCoverage,", "+\t\t\t\tccn));"]}]}