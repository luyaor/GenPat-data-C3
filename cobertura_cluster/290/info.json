{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f769581d031585e49d0381b5657f879a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce765e5940c92edd5f0e7758c2968d2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "\r \r   final public void CastExpression() throws ParseException", "signatureAfterChange": "    final public void CastExpression() throws ParseException", "diff": ["-\r", "-  final public void CastExpression() throws ParseException {\r", "-    if (jj_2_31(2147483647)) {\r", "-      jj_consume_token(LPAREN);\r", "-      Type();\r", "-      jj_consume_token(RPAREN);\r", "-      UnaryExpression();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LPAREN:\r", "-        jj_consume_token(LPAREN);\r", "-        Type();\r", "-        jj_consume_token(RPAREN);\r", "-        UnaryExpressionNotPlusMinus();\r", "-        break;\r", "-      default:\r", "-        jj_la1[118] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void CastExpression() throws ParseException {", "+    if (jj_2_30(2147483647)) {", "+      jj_consume_token(LPAREN);", "+      Type();", "+      jj_consume_token(RPAREN);", "+      UnaryExpression();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        Type();", "+        jj_consume_token(RPAREN);", "+        UnaryExpressionNotPlusMinus();", "+        break;", "+      default:", "+        jj_la1[118] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ccb2b3ce9c0939c0ffddb21a288862", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "\r \r   final public void CastExpression() throws ParseException", "signatureAfterChange": "    final public void CastExpression() throws ParseException", "diff": ["-\r", "-  final public void CastExpression() throws ParseException {\r", "-    if (jj_2_31(2147483647)) {\r", "-      jj_consume_token(LPAREN);\r", "-      Type();\r", "-      jj_consume_token(RPAREN);\r", "-      UnaryExpression();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LPAREN:\r", "-        jj_consume_token(LPAREN);\r", "-        Type();\r", "-        jj_consume_token(RPAREN);\r", "-        UnaryExpressionNotPlusMinus();\r", "-        break;\r", "-      default:\r", "-        jj_la1[118] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void CastExpression() throws ParseException {", "+    if (jj_2_30(2147483647)) {", "+      jj_consume_token(LPAREN);", "+      Type();", "+      jj_consume_token(RPAREN);", "+      UnaryExpression();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        Type();", "+        jj_consume_token(RPAREN);", "+        UnaryExpressionNotPlusMinus();", "+        break;", "+      default:", "+        jj_la1[118] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}]}