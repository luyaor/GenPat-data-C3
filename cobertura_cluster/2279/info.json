{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8691cf325f4c1427062a74b49db2ef54", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e7d4ffcec411382121fb809f601f6ba", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/tp/ClassMap.java", "commitBeforeChange": "5605b5ab824b2385844c651284a3b8e3ad3c15f5", "commitAfterChange": "4ad158130256874222c146143b6705b3693fa07d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic ClassData applyOnProjectData(ProjectData projectData, boolean instrumented)", "signatureAfterChange": " \tpublic ClassData applyOnProjectData(ProjectData projectData, boolean instrumented)", "diff": ["-\t\tif (instrumented){", "-\t\t\tclassData.setContainsInstrumentationInfo();", "-\t\t}", "-\t\tint lastLine=0;", "-\t\tint jumpsInLine=0;", "-\t\tint toucesInLine=0;", "-\t\t", "-\t\tfor(TouchPointDescriptor tpd:getTouchPointsInLineOrder()){", "-\t\t\tif(tpd.getLineNumber()!=lastLine){", "-\t\t\t\tjumpsInLine=0;", "-\t\t\t\ttoucesInLine=0;", "-\t\t\t\tlastLine=tpd.getLineNumber();", "-\t\t\t}", "-\t\t\tif(tpd instanceof LineTouchPointDescriptor){", "-\t\t\t\tclassData.addLine(tpd.getLineNumber(), ((LineTouchPointDescriptor) tpd).getMethodName(), ((LineTouchPointDescriptor) tpd).getMethodSignature());", "-\t\t\t}else if(tpd instanceof JumpTouchPointDescriptor){", "-\t\t\t\tclassData.addLineJump(tpd.getLineNumber(), jumpsInLine++);", "-\t\t\t}else if(tpd instanceof SwitchTouchPointDescriptor){", "-\t\t\t\tint countersCnt=((SwitchTouchPointDescriptor)tpd).getCountersForLabelsCnt();", "-\t\t\t\tclassData.addLineSwitch(tpd.getLineNumber(), toucesInLine++,0, countersCnt-2);", "-\t\t\t}\t\t", "+\t\tif (instrumented){", "+\t\t\tclassData.setContainsInstrumentationInfo();", "+\t\t\tint lastLine=0;", "+\t\t\tint jumpsInLine=0;", "+\t\t\tint toucesInLine=0;", "+\t\t\t", "+\t\t\tfor(TouchPointDescriptor tpd:getTouchPointsInLineOrder()){", "+\t\t\t\tif(tpd.getLineNumber()!=lastLine){", "+\t\t\t\t\tjumpsInLine=0;", "+\t\t\t\t\ttoucesInLine=0;", "+\t\t\t\t\tlastLine=tpd.getLineNumber();", "+\t\t\t\t}", "+\t\t\t\tif(tpd instanceof LineTouchPointDescriptor){", "+\t\t\t\t\tclassData.addLine(tpd.getLineNumber(), ((LineTouchPointDescriptor) tpd).getMethodName(), ((LineTouchPointDescriptor) tpd).getMethodSignature());", "+\t\t\t\t}else if(tpd instanceof JumpTouchPointDescriptor){", "+\t\t\t\t\tclassData.addLineJump(tpd.getLineNumber(), jumpsInLine++);", "+\t\t\t\t}else if(tpd instanceof SwitchTouchPointDescriptor){", "+\t\t\t\t\tint countersCnt=((SwitchTouchPointDescriptor)tpd).getCountersForLabelsCnt();", "+\t\t\t\t\tclassData.addLineSwitch(tpd.getLineNumber(), toucesInLine++,0, countersCnt-2);", "+\t\t\t\t}\t\t", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f921d13ac6d79ae41b7aeefcc1fb7dda", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/ComplexityCalculator.java", "commitBeforeChange": "c26f5a170c752d9d1d5b884dd7eb60b982637269", "commitAfterChange": "aca3d012a32f8d1cc78e6d8a28c8ae27f9238ef8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\tpublic double averageCCN()", "signatureAfterChange": " \t\tpublic double averageCCN()", "diff": ["-\t\t\t} else {", "-\t\t\t\treturn accumlatedCCN/methodsNum;", "+\t\t\treturn accumlatedCCN/methodsNum;"]}]}