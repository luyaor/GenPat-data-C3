{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eddc3a3b04f5124cfefc4218987feeec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5a96de7f0b61824567fc09179fea1a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      \tpublic void addClassData(ClassData classData)", "signatureAfterChange": "      \tpublic void addClassData(ClassData classData)", "diff": ["-\t\tString sourceFileName = classData.getSourceFileName();", "-\t\tSourceFileData sourceFileData = (SourceFileData)children.get(sourceFileName);", "-\t\tif (sourceFileData == null)", "-\t\t{", "-\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "-\t\t\t// Each key is a source file name, stored as an String object.", "-\t\t\t// Each value is information about the source file, stored as", "-\t\t\t// a SourceFileData object.", "-\t\t\tthis.children.put(sourceFileName, sourceFileData);", "-\t\t}", "-\t\tsourceFileData.addClassData(classData);", "+\t\tif (children.containsKey(classData.getBaseName()))", "+\t\t\tthrow new IllegalArgumentException(\"Package \" + this.name", "+\t\t\t\t\t+ \" already contains a class with the name \"", "+\t\t\t\t\t+ classData.getBaseName());", "+", "+\t\t// Each key is a class basename, stored as an String object.", "+\t\t// Each value is information about the class, stored as a ClassData object.", "+\t\tchildren.put(classData.getBaseName(), classData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97a45eb9b6f2a738c739797a886b77b8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void addClassData(ClassData classData)", "signatureAfterChange": "  \tpublic void addClassData(ClassData classData)", "diff": ["-\t\tString packageName = classData.getPackageName();", "-\t\tPackageData packageData = (PackageData)children.get(packageName);", "-\t\tif (packageData == null)", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tpackageData = new PackageData(packageName);", "-\t\t\t// Each key is a package name, stored as an String object.", "-\t\t\t// Each value is information about the package, stored as a PackageData object.", "-\t\t\tthis.children.put(packageName, packageData);", "+\t\t\tString packageName = classData.getPackageName();", "+\t\t\tPackageData packageData = (PackageData)children.get(packageName);", "+\t\t\tif (packageData == null)", "+\t\t\t{", "+\t\t\t\tpackageData = new PackageData(packageName);", "+\t\t\t\t// Each key is a package name, stored as an String object.", "+\t\t\t\t// Each value is information about the package, stored as a PackageData object.", "+\t\t\t\tthis.children.put(packageName, packageData);", "+\t\t\t}", "+\t\t\tpackageData.addClassData(classData);", "+\t\t\tthis.classes.put(classData.getName(), classData);", "-\t\tpackageData.addClassData(classData);", "-\t\tthis.classes.put(classData.getName(), classData);", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}]}