{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6960897a8de31b42604e38fa2da0df7a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3baf297abc6492581fb2c0ba8390c4f5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/ant/FunctionalTest.java", "commitBeforeChange": "52104a55e416b8e81a669a4adeed84e8d72a844e", "commitAfterChange": "7ec360bf26aa1aaf4d8f91e57e2ed051b9321daa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate static void runTestAntScript(String testName, String target) throws IOException", "signatureAfterChange": " \tprivate static void runTestAntScript(String testName, String target) throws IOException", "diff": ["-\t\tJava task = new Java();", "-\t\ttask.setTaskName(\"java\");", "-\t\ttask.setProject(new Project());", "-\t\ttask.init();", "-", "-\t\t// Call ant launcher.  Requires ant-lancher.jar.", "-\t\ttask.setClassname(\"org.apache.tools.ant.launch.Launcher\");", "-\t\ttask.setFork(true);", "-", "-\t\tAntUtil.transferCoberturaDataFileProperty(task);", "-\t\t", "-\t\tif (forkedJVMDebugPort > 0)", "-\t\t{", "-\t\t\ttask.createJvmarg().setValue(\"-Xdebug\");", "-\t\t\ttask.createJvmarg().setValue(\"-Xrunjdwp:transport=dt_socket,address=\" + forkedJVMDebugPort + \",server=y,suspend=y\");", "+//\t\tJava task = new Java();", "+\t\tJava java = new Java();", "+\t\tjava.setProject(TestUtils.project);", "+\t\tjava.setTaskName(\"java\");", "+//\t\ttask.setTaskName(\"java\");", "+//\t\ttask.setProject(TestUtils.project);", "+////\t\ttask.init();", "+//", "+//\t\t// Call ant launcher.  Requires ant-lancher.jar.", "+//\t\ttask.setClassname(\"org.apache.tools.ant.launch.Launcher\");", "+\t\tjava.setClassname(\"org.apache.tools.ant.launch.Launcher\");", "+//\t\ttask.setFork(true);", "+\t\tjava.setFork(true);", "+//", "+//\t\tAntUtil.transferCoberturaDataFileProperty(task);", "+\t\tAntUtil.transferCoberturaDataFileProperty(java);", "+//\t\t", "+//\t\tif (forkedJVMDebugPort > 0)", "+//\t\t{", "+//\t\t\ttask.createJvmarg().setValue(\"-Xdebug\");", "+//\t\t\ttask.createJvmarg().setValue(\"-Xrunjdwp:transport=dt_socket,address=\" + forkedJVMDebugPort + \",server=y,suspend=y\");", "+//\t\t}", "+\t\tif (forkedJVMDebugPort > 0) {", "+\t\t\tjava.createJvmarg().setValue(\"-Xdebug\");", "+\t\t\tjava.createJvmarg().setValue(\"-Xrunjdwp:transport=dt_socket,address=\" + forkedJVMDebugPort + \",server=y,suspend=y\");", "-", "-", "-\t\ttask.createArg().setValue(\"-f\");", "-\t\ttask.createArg().setValue(BASEDIR + \"/build.xml\");", "-\t\ttask.createArg().setValue(target);", "-", "-\t\ttask.setFailonerror(true);", "-", "-\t\t// Set output to go to a temp file", "-\t\tFile outputFile = Util.createTemporaryTextFile(\"cobertura-test\");", "-\t\ttask.setOutput(outputFile);", "-", "-\t\t// Set the classpath to the same classpath as this JVM", "-\t\tPath classpath = task.createClasspath();", "-\t\tPathElement pathElement = classpath.createPathElement();", "+\t\t", "+//", "+//", "+//\t\ttask.createArg().setValue(\"-f\");", "+\t\tjava.createArg().setValue(\"-f\");", "+//\t\ttask.createArg().setValue(BASEDIR + \"/build.xml\");", "+\t\tjava.createArg().setValue(BASEDIR + \"/build.xml\");", "+//\t\ttask.createArg().setValue(target);", "+\t\tjava.createArg().setValue(target);", "+//", "+//\t\ttask.setFailonerror(true);", "+\t\tjava.setFailonerror(true);", "+//", "+//\t\t// Set output to go to a temp file", "+//\t\tFile outputFile = Util.createTemporaryTextFile(\"cobertura-test\");", "+\t\tFile output = Util.createTemporaryTextFile(\"cobertura-test\");", "+//\t\ttask.setOutput(outputFile);", "+\t\tjava.setOutput(output);", "+//", "+//\t\t// Set the classpath to the same classpath as this JVM", "+//\t\tPath classpath = task.createClasspath();", "+\t\tPath classpath = new Path(TestUtils.project);", "+\t\tPathElement pathElement = classpath.new PathElement();", "+//\t\tPathElement pathElement = classpath.createPathElement();", "-", "+//\t\tpathElement.setPath(System.getProperty(\"java.class.path\"));", "+//\t\ttask.setClasspath(classpath);", "+\t\tclasspath.add(TestUtils.getCoberturaDefaultClasspath());", "+\t\tclasspath.add(pathElement);", "+//", "-\t\t\ttask.execute();", "+\t\t\tjava.executeJava();", "-\t\t\tif (outputFile.exists())", "+\t\t\tif (output.exists())", "-\t\t\t\t\t\t+ Util.getText(outputFile) + \"----------------------------------------\");", "-\t\t\t\toutputFile.delete();", "+\t\t\t\t\t\t+ Util.getText(output) + \"----------------------------------------\");", "+\t\t\t\toutput.delete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a70bc9cf7453e3d06298000796895e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/ant/FunctionalTest.java", "commitBeforeChange": "b303fdc94851088a3c8699651770faef33180924", "commitAfterChange": "3c0ba550a753de34e44621245ee6c91060d1a974", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate static void runTestAntScript(String testName, String target) throws IOException", "signatureAfterChange": " \tprivate static void runTestAntScript(String testName, String target) throws IOException", "diff": ["-\t\tJava task = new Java();", "-\t\ttask.setTaskName(\"java\");", "-\t\ttask.setProject(new Project());", "-\t\ttask.init();", "-", "-\t\t// Call ant launcher.  Requires ant-lancher.jar.", "-\t\ttask.setClassname(\"org.apache.tools.ant.launch.Launcher\");", "-\t\ttask.setFork(true);", "-", "-\t\tAntUtil.transferCoberturaDataFileProperty(task);", "-\t\t", "-\t\tif (forkedJVMDebugPort > 0)", "-\t\t{", "-\t\t\ttask.createJvmarg().setValue(\"-Xdebug\");", "-\t\t\ttask.createJvmarg().setValue(\"-Xrunjdwp:transport=dt_socket,address=\" + forkedJVMDebugPort + \",server=y,suspend=y\");", "+//\t\tJava task = new Java();", "+\t\tJava java = new Java();", "+\t\tjava.setProject(TestUtils.project);", "+\t\tjava.setTaskName(\"java\");", "+//\t\ttask.setTaskName(\"java\");", "+//\t\ttask.setProject(TestUtils.project);", "+////\t\ttask.init();", "+//", "+//\t\t// Call ant launcher.  Requires ant-lancher.jar.", "+//\t\ttask.setClassname(\"org.apache.tools.ant.launch.Launcher\");", "+\t\tjava.setClassname(\"org.apache.tools.ant.launch.Launcher\");", "+//\t\ttask.setFork(true);", "+\t\tjava.setFork(true);", "+//", "+//\t\tAntUtil.transferCoberturaDataFileProperty(task);", "+\t\tAntUtil.transferCoberturaDataFileProperty(java);", "+//\t\t", "+//\t\tif (forkedJVMDebugPort > 0)", "+//\t\t{", "+//\t\t\ttask.createJvmarg().setValue(\"-Xdebug\");", "+//\t\t\ttask.createJvmarg().setValue(\"-Xrunjdwp:transport=dt_socket,address=\" + forkedJVMDebugPort + \",server=y,suspend=y\");", "+//\t\t}", "+\t\tif (forkedJVMDebugPort > 0) {", "+\t\t\tjava.createJvmarg().setValue(\"-Xdebug\");", "+\t\t\tjava.createJvmarg().setValue(\"-Xrunjdwp:transport=dt_socket,address=\" + forkedJVMDebugPort + \",server=y,suspend=y\");", "-", "-", "-\t\ttask.createArg().setValue(\"-f\");", "-\t\ttask.createArg().setValue(BASEDIR + \"/build.xml\");", "-\t\ttask.createArg().setValue(target);", "-", "-\t\ttask.setFailonerror(true);", "-", "-\t\t// Set output to go to a temp file", "-\t\tFile outputFile = Util.createTemporaryTextFile(\"cobertura-test\");", "-\t\ttask.setOutput(outputFile);", "-", "-\t\t// Set the classpath to the same classpath as this JVM", "-\t\tPath classpath = task.createClasspath();", "-\t\tPathElement pathElement = classpath.createPathElement();", "+\t\t", "+//", "+//", "+//\t\ttask.createArg().setValue(\"-f\");", "+\t\tjava.createArg().setValue(\"-f\");", "+//\t\ttask.createArg().setValue(BASEDIR + \"/build.xml\");", "+\t\tjava.createArg().setValue(BASEDIR + \"/build.xml\");", "+//\t\ttask.createArg().setValue(target);", "+\t\tjava.createArg().setValue(target);", "+//", "+//\t\ttask.setFailonerror(true);", "+\t\tjava.setFailonerror(true);", "+//", "+//\t\t// Set output to go to a temp file", "+//\t\tFile outputFile = Util.createTemporaryTextFile(\"cobertura-test\");", "+\t\tFile output = Util.createTemporaryTextFile(\"cobertura-test\");", "+//\t\ttask.setOutput(outputFile);", "+\t\tjava.setOutput(output);", "+//", "+//\t\t// Set the classpath to the same classpath as this JVM", "+//\t\tPath classpath = task.createClasspath();", "+\t\tPath classpath = new Path(TestUtils.project);", "+\t\tPathElement pathElement = classpath.new PathElement();", "+//\t\tPathElement pathElement = classpath.createPathElement();", "-", "+//\t\tpathElement.setPath(System.getProperty(\"java.class.path\"));", "+//\t\ttask.setClasspath(classpath);", "+\t\tclasspath.add(TestUtils.getCoberturaDefaultClasspath());", "+\t\tclasspath.add(pathElement);", "+//", "-\t\t\ttask.execute();", "+\t\t\tjava.executeJava();", "-\t\t\tif (outputFile.exists())", "+\t\t\tif (output.exists())", "-\t\t\t\t\t\t+ Util.getText(outputFile) + \"----------------------------------------\");", "-\t\t\t\toutputFile.delete();", "+\t\t\t\t\t\t+ Util.getText(output) + \"----------------------------------------\");", "+\t\t\t\toutput.delete();"]}]}