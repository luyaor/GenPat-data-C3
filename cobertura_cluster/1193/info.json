{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe0711c111e86d7aa0cb8c6359c0eb10", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423ded5222f03fd0867e2b613c7eede9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "a670a0ef78cf3202902926dd2a32a79b05d6f75d", "commitAfterChange": "73cd6cee6c47bb171b3c10fb87c9d986322605f8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void addInstrumentation(CoberturaFile coberturaFile)", "signatureAfterChange": " \tprivate void addInstrumentation(CoberturaFile coberturaFile)", "diff": ["-\t\tif (coberturaFile.isClass() && shouldInstrument(coberturaFile.pathname))", "+\t\tif (coberturaFile.isClass() && shouldInstrument(coberturaFile.getPathname()))", "-\t\t\t\tFile relativeFile = new File(coberturaFile.pathname, contents[i]);", "-\t\t\t\tCoberturaFile relativeCoberturaFile = new CoberturaFile(coberturaFile.baseDir,", "+\t\t\t\tFile relativeFile = new File(coberturaFile.getPathname(), contents[i]);", "+\t\t\t\tCoberturaFile relativeCoberturaFile = new CoberturaFile(coberturaFile.getBaseDir(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e62e88ebc5fe0d41e6eb473fb8885d7f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "73cd6cee6c47bb171b3c10fb87c9d986322605f8", "commitAfterChange": "ea44d50de680cfb1f234670ee0209ccd6aa03416", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void addInstrumentationToArchive(File archive)", "signatureAfterChange": "  \tprivate void addInstrumentationToArchive(CoberturaFile archive)", "diff": ["-\tprivate void addInstrumentationToArchive(File archive)", "+\tprivate void addInstrumentationToArchive(CoberturaFile archive)", "+\t\tboolean modified = false;", "-\t\t\t\t\toutputFile = new File(destinationDirectory, archive", "-\t\t\t\t\t\t\t.getName());", "+\t\t\t\t\toutputFile = new File(destinationDirectory, archive.getPathname());", "-\t\t\t\taddInstrumentationToArchive(input, output);", "+\t\t\t\tmodified = addInstrumentationToArchive(archive, input, output);", "-\t\t\tif (input != null)", "-\t\t\t{", "-\t\t\t\ttry", "-\t\t\t\t{", "-\t\t\t\t\tinput.close();", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException e)", "-\t\t\t\t{", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (output != null)", "-\t\t\t{", "-\t\t\t\ttry", "-\t\t\t\t{", "-\t\t\t\t\toutput.close();", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException e)", "-\t\t\t\t{", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tinput = (ZipInputStream)IOUtil.closeInputStream(input);", "+\t\t\toutput = (ZipOutputStream)IOUtil.closeOutputStream(output);", "-\t\tif (destinationDirectory == null)", "+\t\tif (modified && (destinationDirectory == null))", "+\t\t\t\tlogger.debug(\"Moving \" + outputFile.getAbsolutePath() + \" to \"", "+\t\t\t\t\t\t+ archive.getAbsolutePath());", "+\t\t}", "+\t\tif ((destinationDirectory != null) && (!modified))", "+\t\t{", "+\t\t\toutputFile.delete();"]}]}