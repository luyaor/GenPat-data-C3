{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6d7ac1731e0f113baf4eb55d0845498", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f36e2009d57a1dd2b7d2b713edfc666", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tsynchronized public Object getConditionData(int index)", "signatureAfterChange": " \t \tpublic Object getConditionData(int index)", "diff": ["-\tsynchronized public Object getConditionData(int index)", "-\t{", "-\t\tObject branchData = null;", "-\t\t//lock.lock();", "-\t\ttry", "+\tpublic Object getConditionData(int index) {", "+\t\tObject branchData = null;\t\t", "+\t\tint jumpsSize = (jumps == null) ? 0 : jumps.size();", "+\t\tint switchesSize = (switches == null) ? 0 :switches.size();", "+\t\tif (index < jumpsSize) ", "-\t\t\tint jumpsSize = (jumps == null) ? 0 : jumps.size();", "-\t\t\tint switchesSize = (switches == null) ? 0 :switches.size();", "-\t\t\tif (index < jumpsSize) ", "-\t\t\t{", "-\t\t\t\tbranchData = jumps.get(index);", "-\t\t\t}", "-\t\t\telse if (index < jumpsSize + switchesSize)", "-\t\t\t{", "-\t\t\t\tbranchData = switches.get(index - jumpsSize);", "-\t\t\t}", "-\t\t\treturn branchData;", "+\t\t\tbranchData = jumps.get(index);", "-\t\tfinally", "+\t\telse if (index < jumpsSize + switchesSize)", "-\t\t\t//lock.unlock();", "+\t\t\tbranchData = switches.get(index - jumpsSize);", "+\t\treturn branchData;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e5a2e4c4e1fff6fefef2cbfcdd1172", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tpublic Object getConditionData(int index)", "signatureAfterChange": " \t \tpublic Object getConditionData(int index)", "diff": ["-\t\tint jumpsSize = (jumps == null) ? 0 : jumps.size();", "-\t\tint switchesSize = (switches == null) ? 0 :switches.size();", "-\t\tif (index < jumpsSize) ", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tbranchData = jumps.get(index);", "+\t\t\tint jumpsSize = (jumps == null) ? 0 : jumps.size();", "+\t\t\tint switchesSize = (switches == null) ? 0 :switches.size();", "+\t\t\tif (index < jumpsSize) ", "+\t\t\t{", "+\t\t\t\tbranchData = jumps.get(index);", "+\t\t\t}", "+\t\t\telse if (index < jumpsSize + switchesSize)", "+\t\t\t{", "+\t\t\t\tbranchData = switches.get(index - jumpsSize);", "+\t\t\t}", "+\t\t\treturn branchData;", "-\t\telse if (index < jumpsSize + switchesSize)", "+\t\tfinally", "-\t\t\tbranchData = switches.get(index - jumpsSize);", "+\t\t\tlock.unlock();", "-\t\treturn branchData;"]}]}