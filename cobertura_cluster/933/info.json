{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "387101c4f18ce0a1e015ee408fd15fb4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30fa20eb623e4f250c1fd40e43bff946", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "dfb5a2eb9802e7508575bb28a5567131dea08a01", "commitAfterChange": "fc2ad78e8106be7851ebaf993c1d98b6f16724ba", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate String generateTableRowForSourceFile(SourceFileData sourceFileData)", "signatureAfterChange": "  \tprivate String generateTableRowForClass(ClassData classData, \t\t\tString sourceFileName, double ccn)", "diff": ["-\tprivate String generateTableRowForSourceFile(SourceFileData sourceFileData)", "+", "+\tprivate String generateTableRowForClass(ClassData classData,", "+\t\t\tString sourceFileName, double ccn)", "-\t\tdouble ccn = complexity.getCCNForSourceFile(sourceFileData);", "-\t\tif (sourceFileData.getNumberOfValidLines() > 0)", "-\t\t\tlineCoverage = sourceFileData.getLineCoverageRate();", "-\t\tif (sourceFileData.getNumberOfValidBranches() > 0)", "-\t\t\tbranchCoverage = sourceFileData.getBranchCoverageRate();", "+\t\tif (classData.getNumberOfValidLines() > 0)", "+\t\t\tlineCoverage = classData.getLineCoverageRate();", "+\t\tif (classData.getNumberOfValidBranches() > 0)", "+\t\t\tbranchCoverage = classData.getBranchCoverageRate();", "-\t\tret.append(\"<td class=\\\"text\\\"><a href=\\\"\"", "-\t\t\t\t+ sourceFileData.getNormalizedName() + \".html\\\">\"", "-\t\t\t\t+ sourceFileData.getBaseName() + \"</a></td>\");", "+\t\tret.append(\"<td class=\\\"text\\\"><a href=\\\"\" + sourceFileName", "+\t\t\t\t+ \".html\\\">\" + classData.getBaseName() + \"</a></td>\");", "-\t\tret.append(\"</tr>\");", "+\t\tret.append(\"</tr>\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49d51da4f3cef59bb967af3d70527ebc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "2d04adc2554406c41824d5b965907076ecdceb80", "commitAfterChange": "cd01654d464661ad4ee16d9e5f0f6e799c0ad9e4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate String generateTableRowForClass(ClassData classData)", "signatureAfterChange": "  \tprivate String generateTableRowForSourceFile(SourceFileData sourceFileData)", "diff": ["-\tprivate String generateTableRowForClass(ClassData classData)", "+\tprivate String generateTableRowForSourceFile(SourceFileData sourceFileData)", "-\t\tdouble ccn = Util.getCCN(new File(sourceDir, classData", "-\t\t\t\t.getSourceFileName()), false);", "+\t\tdouble ccn = Util.getCCN(", "+\t\t\t\tnew File(sourceDir, sourceFileData.getName()), false);", "-\t\tif (classData.getNumberOfValidLines() > 0)", "-\t\t\tlineCoverage = classData.getLineCoverageRate();", "-\t\tif (classData.getNumberOfValidBranches() > 0)", "-\t\t\tbranchCoverage = classData.getBranchCoverageRate();", "+\t\tif (sourceFileData.getNumberOfValidLines() > 0)", "+\t\t\tlineCoverage = sourceFileData.getLineCoverageRate();", "+\t\tif (sourceFileData.getNumberOfValidBranches() > 0)", "+\t\t\tbranchCoverage = sourceFileData.getBranchCoverageRate();", "-\t\tret.append(\"<td class=\\\"text\\\"><a href=\\\"\" + classData.getName()", "-\t\t\t\t+ \".html\\\">\" + classData.getName() + \"</a></td>\");", "+\t\tret.append(\"<td class=\\\"text\\\"><a href=\\\"\"", "+\t\t\t\t+ sourceFileData.getNormalizedName() + \".html\\\">\"", "+\t\t\t\t+ sourceFileData.getBaseName() + \"</a></td>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8a490482154ffcd7bd9b01a398f24f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "5c3edcc6dd3fd1408cac466f6859d53cda78784e", "commitAfterChange": "6e35d7554dd3d5f67e788f0262566d634b33cb71", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate String generateHtmlizedJavaSource(SourceFileData sourceFileData)", "signatureAfterChange": "  \tprivate String generateHtmlizedJavaSource(SourceFileData sourceFileData)", "diff": ["-\t\tFile sourceFile = null;", "-\t\ttry", "-\t\t{", "-\t\t\tsourceFile = finder.getFileForSource(sourceFileData.getName());", "-\t\t}", "-\t\tcatch (IOException e)", "+\t\tSource source = finder.getSource(sourceFileData.getName());", "+\t\t", "+\t\tif (source == null)", "-\t\t\tbr = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFile), encoding));", "+\t\t\tbr = new BufferedReader(new InputStreamReader(source.getInputStream(), encoding));", "-\t\t\treturn \"<p>Unable to open \" + sourceFile.getAbsolutePath()", "+\t\t\treturn \"<p>Unable to open \" + source.getOriginDesc()", "-\t\tcatch (FileNotFoundException e)", "+\t\tcatch (Throwable t)", "-\t\t\treturn \"<p>Unable to open \" + sourceFile.getAbsolutePath() + \"</p>\";", "+\t\t\treturn \"<p>Unable to open \" + source.getOriginDesc() + \": \" + t.getLocalizedMessage() + \"</p>\";", "-\t\t\tret.append(\"<tr><td>Error reading from file \"", "-\t\t\t\t\t+ sourceFile.getAbsolutePath() + \": \"", "+\t\t\tret.append(\"<tr><td>Error reading \"", "+\t\t\t\t\t+ source.getOriginDesc() + \": \"", "+\t\t\t\tsource.close();"]}]}