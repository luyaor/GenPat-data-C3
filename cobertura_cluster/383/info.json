{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f2920b7c079c464303f694782810db2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e206cfa13da82dafeca4a8e46452c61", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/AsciiFormatter.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public String printFunctionNcss()", "signatureAfterChange": "      public String printFunctionNcss()", "diff": ["-        Vector vFunctionMetrics = _javancss.getFunctionMetrics();", "+        List vFunctionMetrics = _javancss.getFunctionMetrics();", "-        for( Enumeration eFunctions = vFunctionMetrics.elements()", "-             ; eFunctions.hasMoreElements()", "-             ; )", "+        for( Iterator eFunctions = vFunctionMetrics.iterator(); eFunctions.hasNext(); )", "-            Vector vSingleFunctionMetrics = (Vector)eFunctions.nextElement();", "+            List vSingleFunctionMetrics = (List)eFunctions.next();", "-            sFunction = (String)vSingleFunctionMetrics.elementAt(FCT_NAME);", "-            int functionNcss = ((Integer)vSingleFunctionMetrics.elementAt(FCT_NCSS)).intValue();", "-            int functionCCN  = ((Integer)vSingleFunctionMetrics.elementAt(FCT_CCN )).intValue();", "-            int functionJVDC = ((Integer)vSingleFunctionMetrics.elementAt(FCT_JVDC)).intValue();", "+            sFunction = (String)vSingleFunctionMetrics.get(FCT_NAME);", "+            int functionNcss = ((Integer)vSingleFunctionMetrics.get(FCT_NCSS)).intValue();", "+            int functionCCN  = ((Integer)vSingleFunctionMetrics.get(FCT_CCN )).intValue();", "+            int functionJVDC = ((Integer)vSingleFunctionMetrics.get(FCT_JVDC)).intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1a86415bb2e6c254d4479e1e864438", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/ComplexityCalculator.java", "commitBeforeChange": "8470613dce5289e48aeaaebf95d84de1414dad70", "commitAfterChange": "77a25c204e0d22c334a40e10db5134e2cb525c03", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Complexity getAccumlatedCCNForSource(String sourceFileName, Source source)", "signatureAfterChange": " \tprivate Complexity getAccumlatedCCNForSource(String sourceFileName, Source source)", "diff": ["-\t\tVector methodMetrics = javancss.getFunctionMetrics();", "+\t\tList methodMetrics = javancss.getFunctionMetrics();", "-        for( Enumeration method = methodMetrics.elements(); method.hasMoreElements();)", "+        for( Iterator method = methodMetrics.iterator(); method.hasNext();)", "-        \tVector singleMethodMetrics = (Vector)method.nextElement();", "-        \tclassCcn += ((Integer)singleMethodMetrics.elementAt(JavancssConstants.FCT_CCN)).intValue();", "+        \tList singleMethodMetrics = (List)method.next();", "+        \tclassCcn += ((Integer)singleMethodMetrics.get(JavancssConstants.FCT_CCN)).intValue();"]}]}