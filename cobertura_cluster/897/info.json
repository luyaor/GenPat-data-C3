{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71f39b372ad72cc9c51b6d96f2e07216", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4bff4bd55bb41a767ad7ca60780c6a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/merge/Main.java", "commitBeforeChange": "6a303122a10f7fb224550410433e3c73cc07f939", "commitAfterChange": "918d96136e3b4ad59ee8aedd80494eb94f76c036", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic Main(String[] args)", "signatureAfterChange": "  \tpublic Main(String[] args)", "diff": ["-\t\tFile dataFile = CoverageDataFileHandler.getDefaultDataFile();", "-\t\tFile baseDir = null;", "-\t\tList filesToMerge = new ArrayList();", "+\t\tArgumentsBuilder builder = new ArgumentsBuilder();", "+", "+\t\tString baseDir = null;", "-\t\t\tif (args[i].equals(\"--datafile\"))", "-\t\t\t\tdataFile = new File(args[++i]);", "-\t\t\telse if (args[i].equals(\"--basedir\"))", "-\t\t\t\tbaseDir = new File(args[++i]);", "-\t\t\telse", "-\t\t\t\tfilesToMerge.add(new File(baseDir, args[i]));", "+\t\t\tif (args[i].equals(\"--datafile\")) {", "+\t\t\t\tbuilder.setDataFile(args[++i]);", "+\t\t\t} else if (args[i].equals(\"--basedir\")) {", "+\t\t\t\tbaseDir = args[++i];", "+\t\t\t\tbuilder.setBaseDirectory(baseDir);", "+\t\t\t} else {", "+\t\t\t\tbuilder.addFileToMerge(new File(baseDir, args[i])", "+\t\t\t\t\t\t.getAbsolutePath());", "+\t\t\t}", "-\t\t// Load coverage data", "-\t\tProjectData projectData = null;", "-\t\tif (dataFile.isFile())", "-\t\t\tprojectData = CoverageDataFileHandler.loadCoverageData(dataFile);", "-\t\tif (projectData == null)", "-\t\t\tprojectData = new ProjectData();", "-", "-\t\tif (filesToMerge.isEmpty()) {", "-\t\t\tSystem.err.println(\"Error: No files were specified for merging.\");", "-\t\t\tSystem.exit(1);", "-\t\t}", "-", "-\t\t// Merge everything", "-\t\tIterator iter = filesToMerge.iterator();", "-\t\twhile (iter.hasNext()) {", "-\t\t\tFile newDataFile = (File) iter.next();", "-\t\t\tProjectData projectDataNew = CoverageDataFileHandler", "-\t\t\t\t\t.loadCoverageData(newDataFile);", "-\t\t\tif (projectDataNew != null)", "-\t\t\t\tprojectData.merge(projectDataNew);", "-\t\t}", "-", "-\t\t// Save the combined data file", "-\t\tCoverageDataFileHandler.saveCoverageData(projectData, dataFile);", "+\t\tnew Cobertura(builder.build()).merge().saveProjectData();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd3f1894653da85d60a20ab7cfcbab10", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/merge/Main.java", "commitBeforeChange": "b4e6c761a3eeadd6fae8843d2b468c44be51d042", "commitAfterChange": "954e4f6ea953ecbbfb880107725691fbc4d70620", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Main(String[] args)", "signatureAfterChange": "  \tpublic Main(String[] args)", "diff": ["+", "-\t\tProjectData projectData = null;", "+\t\tVector filesToMerge = new Vector();", "+\t\t// Go through all the parameters", "-\t\t\t{", "-\t\t\t\tFile newDataFile = new File(args[++i]);", "-\t\t\t\tif (projectData == null) {", "-\t\t\t\t\tprojectData = CoverageDataFileHandler", "-\t\t\t\t\t\t\t.loadCoverageData(newDataFile);", "-\t\t\t\t} else {", "-\t\t\t\t\tProjectData projectDataNew = CoverageDataFileHandler", "-\t\t\t\t\t.loadCoverageData(newDataFile);", "-\t\t\t\t\tprojectData.merge(projectDataNew);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telse if (args[i].equals(\"--output\"))", "-\t\t\t{", "-\t\t\t\tdataFile.getParentFile().mkdirs();", "-\t\t\t}", "+\t\t\telse", "+\t\t\t\tfilesToMerge.add(args[i]);", "-\t\tif (projectData != null)", "-\t\t\tCoverageDataFileHandler.saveCoverageData(projectData, dataFile);", "+\t\t// Load the data file", "+\t\tProjectData projectData = CoverageDataFileHandler", "+\t\t\t\t.loadCoverageData(dataFile);", "+\t\tif (projectData == null)", "+\t\t{", "+\t\t\tSystem.err.println(\"Error: Unable to read from data file \"", "+\t\t\t\t\t+ dataFile.getAbsolutePath());", "+\t\t\tSystem.exit(1);", "+\t\t}", "+", "+\t\tif (filesToMerge.size() == 0)", "+\t\t{", "+\t\t\tSystem.err.println(\"Error: No files were specified for merging.\");", "+\t\t\tSystem.exit(1);", "+\t\t}", "+", "+\t\t// Merge everything", "+\t\tIterator iter = filesToMerge.iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tString newDataFileName = (String)iter.next();", "+\t\t\tFile newDataFile = new File(newDataFileName);", "+\t\t\tProjectData projectDataNew = CoverageDataFileHandler", "+\t\t\t\t\t.loadCoverageData(newDataFile);", "+\t\t\tprojectData.merge(projectDataNew);", "+\t\t}", "+", "+\t\t// Save the combined data file", "+\t\tCoverageDataFileHandler.saveCoverageData(projectData, dataFile);"]}]}