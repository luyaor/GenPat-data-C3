{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b1e8e35f1f035f9ce8a43f37c255ef4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f6c12f68f53f284de2b304e02a2ec5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "87d037664be821e237e04cd03897dd9bf78fa1e6", "commitAfterChange": "d47d43742c30a599c3a545c702a1b4c90b466a91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static void main(String[] args) throws Exception", "signatureAfterChange": "  \tpublic static void main(String[] args) throws Exception", "diff": ["+\t\t// TODO: Allow for multiple destination and multiple source directories", "+\t\t// TODO: Are format and datafile optional?  They should be", "-\t\tlongOpts[2] = new LongOpt(\"output\", LongOpt.REQUIRED_ARGUMENT, null,", "+\t\tlongOpts[2] = new LongOpt(\"destination\", LongOpt.REQUIRED_ARGUMENT, null,", "-\t\t\t\t\toutputDir = new File(g.getOptarg());", "-\t\t\t\t\tif (outputDir.exists() && outputDir.isFile())", "+\t\t\t\t\tdestinationDir = new File(g.getOptarg());", "+\t\t\t\t\tif (destinationDir.exists() && destinationDir.isFile())", "-\t\t\t\t\t\t\t\t+ outputDir + \" already exists and is a file\");", "+\t\t\t\t\t\t\t\t+ destinationDir + \" already exists and is a file\");", "-\t\t\t\t\toutputDir.mkdirs();", "+\t\t\t\t\tdestinationDir.mkdirs();", "-\t\t\tlogger.debug(\"outputDir is \" + outputDir.getAbsolutePath());", "+\t\t\tlogger.debug(\"destinationDir is \" + destinationDir.getAbsolutePath());", "-\t\t\tdataFile = new File(CoverageDataFileHandler.FILE_NAME);", "+\t\t\tdataFile = CoverageDataFileHandler.getDefaultDataFile();", "-\t\t\tnew HTMLReport(projectData, outputDir, sourceDir);", "+\t\t\tnew HTMLReport(projectData, destinationDir, sourceDir);", "-\t\t\tnew XMLReport(projectData, outputDir, sourceDir);", "+\t\t\tnew XMLReport(projectData, destinationDir, sourceDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0e55a4d93f6ab14e162b2cd541bc22", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "d668df191a9fd0e829f2fd715bee289ce66ce39e", "commitAfterChange": "7b2f583f4917b3e2556259d9654fdf543cd85c48", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static void main(String[] args) throws Exception", "signatureAfterChange": "  \tpublic static void main(String[] args) throws Exception", "diff": ["-\t\tlongOpts[1] = new LongOpt(\"datafile\",", "-\t\t\t\tLongOpt.REQUIRED_ARGUMENT, null, 'd');", "-\t\tlongOpts[2] = new LongOpt(\"destination\", LongOpt.REQUIRED_ARGUMENT, null,", "-\t\t\t\t'o');", "+\t\tlongOpts[1] = new LongOpt(\"datafile\", LongOpt.REQUIRED_ARGUMENT,", "+\t\t\t\tnull, 'd');", "+\t\tlongOpts[2] = new LongOpt(\"destination\", LongOpt.REQUIRED_ARGUMENT,", "+\t\t\t\tnull, 'o');", "-\t\t\t\t\t\tSystem.err.println(\"Error: format \\\"\" + format", "-\t\t\t\t\t\t\t\t+ \"\\\" is invalid. Must be either html or xml\");", "+\t\t\t\t\t\tSystem.err", "+\t\t\t\t\t\t\t\t.println(\"Error: format \\\"\"", "+\t\t\t\t\t\t\t\t\t\t+ format", "+\t\t\t\t\t\t\t\t\t\t+ \"\\\" is invalid. Must be either html or xml\");", "-\t\t\t\t\tif (destinationDir.exists() && destinationDir.isFile())", "+\t\t\t\t\tif (destinationDir.exists()", "+\t\t\t\t\t\t\t&& !destinationDir.isDirectory())", "-\t\t\t\t\t\t\t\t+ destinationDir + \" already exists and is a file\");", "+\t\t\t\t\t\t\t\t+ destinationDir", "+\t\t\t\t\t\t\t\t+ \" already exists but is not a directory\");", "-\t\t\t\t\t\t\t\t+ sourceDir", "-\t\t\t\t\t\t\t\t+ \" must be a directory\");", "+\t\t\t\t\t\t\t\t+ sourceDir + \" must be a directory\");", "-\t\t\tlogger.debug(\"dataFile is \"", "-\t\t\t\t\t+ dataFile.getAbsolutePath());", "-\t\t\tlogger.debug(\"destinationDir is \" + destinationDir.getAbsolutePath());", "+\t\t\tlogger.debug(\"dataFile is \" + dataFile.getAbsolutePath());", "+\t\t\tlogger.debug(\"destinationDir is \"", "+\t\t\t\t\t+ destinationDir.getAbsolutePath());", "-\t\t.loadCoverageData(dataFile);", "+\t\t\t\t.loadCoverageData(dataFile);"]}]}