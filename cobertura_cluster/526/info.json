{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47b06236b72aef254d3782ffc0360ece", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0428cb193a6dcd66cdc84686ecbd35ff", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "86ba74eba09df9fe91a0017286c58eeca8115e4e", "commitAfterChange": "cb1489d04bf4db3975fea51af595b5c831d4de75", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate static String generateTableColumnsFromData(double lineCoverage, \t\t\tint numLines, double branchCoverage, int numBranches, double ccn)", "signatureAfterChange": " \tprivate static String generateTableColumnsFromData(CoverageData coverageData, \t\t\tdouble ccn)", "diff": ["-\t */", "-\tprivate static String generateTableColumnsFromData(double lineCoverage,", "-\t\t\tint numLines, double branchCoverage, int numBranches, double ccn)", "-\t{", "-\t\tString lineCoverageCell = (lineCoverage == -1) ? generateNAPercent()", "-\t\t\t\t: generatePercentResult(lineCoverage);", "-", "-\t\tString branchCoverageCell = (branchCoverage == -1)", "-\t\t\t\t? generateNAPercent() : generatePercentResult(branchCoverage);", "-", "-\t\t// The \"hidden\" CSS class is used below to write the ccn without", "-\t\t// any formatting so that the table column can be sorted correctly", "-\t\treturn \"<td class=\\\"value\\\">\" + lineCoverageCell + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\">\" + numLines + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\">\" + branchCoverageCell + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\">\" + numBranches + \"</td>\"", "-\t\t\t\t+ \"<td class=\\\"value\\\"><span class=\\\"hidden\\\">\" + ccn", "-\t\t\t\t+ \";</span>\" + getDoubleValue(ccn) + \"</td>\";", "-\t}", "+\t */", "+\tprivate static String generateTableColumnsFromData(CoverageData coverageData,", "+\t\t\tdouble ccn)", "+\t\tint numLinesCovered = coverageData.getNumberOfCoveredLines();", "+\t\tint numLinesValid = coverageData.getNumberOfValidLines();", "+\t\tint numBranchesCovered = coverageData.getNumberOfCoveredBranches();", "+\t\tint numBranchesValid = coverageData.getNumberOfValidBranches();", "+", "+\t\t// The \"hidden\" CSS class is used below to write the ccn without", "+\t\t// any formatting so that the table column can be sorted correctly", "+\t\treturn \"<td>\" + generatePercentResult(numLinesCovered, numLinesValid)", "+\t\t\t\t+\"</td><td>\"", "+\t\t\t\t+ generatePercentResult(numBranchesCovered, numBranchesValid)", "+\t\t\t\t+ \"</td><td class=\\\"value\\\"><span class=\\\"hidden\\\">\"", "+\t\t\t\t+ ccn + \";</span>\" + getDoubleValue(ccn) + \"</td>\";", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49e613bf690332bff9470fe85cf4a0dd", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "86ba74eba09df9fe91a0017286c58eeca8115e4e", "commitAfterChange": "cb1489d04bf4db3975fea51af595b5c831d4de75", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate static String generatePercentResult(double percentValue)", "signatureAfterChange": " \tprivate static String generatePercentResult(int dividend, int divisor)", "diff": ["-\tprivate static String generatePercentResult(double percentValue)", "-\t\tdouble rest = 1d - percentValue;", "+\t */", "+\tprivate static String generatePercentResult(int dividend, int divisor)", "+\t{", "-\t\tsb.append(\"<table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" \"", "-\t\t\t\t+ \"align=\\\"right\\\">\");", "-\t\tsb.append(\"<tr>\");", "-\t\tsb.append(\"<td>\" + getPercentValue(percentValue) + \"&nbsp;</td>\");", "-\t\tsb.append(\"<td>\");", "-\t\tsb.append(\"<table class=\\\"percentGraph\\\" cellpadding=\\\"0\\\" \"", "-\t\t\t\t+ \"cellspacing=\\\"0\\\" width=\\\"100\\\">\");", "-\t\tsb.append(\"<tr>\");", "-\t\tsb.append(\"<td class=\\\"covered\\\" width=\\\"\" + (int)(percentValue * 100)", "-\t\t\t\t+ \"\\\"></td>\");", "-\t\tsb.append(\"<td class=\\\"uncovered\\\" width=\\\"\" + (int)(rest * 100)", "-\t\t\t\t+ \"\\\"></td>\");", "-\t\tsb.append(\"</tr>\");", "-\t\tsb.append(\"</table>\");", "-\t\tsb.append(\"</td>\");", "-\t\tsb.append(\"</tr>\");", "-\t\tsb.append(\"</table>\");", "+", "+\t\tsb.append(\"<table cellpadding=\\\"0px\\\" cellspacing=\\\"0px\\\" class=\\\"percentgraph\\\"><tr class=\\\"percentgraph\\\"><td align=\\\"right\\\" class=\\\"percentgraph\\\" width=\\\"40\\\">\");", "+\t\tif (divisor > 0)", "+\t\t\tsb.append(getPercentValue((double)dividend / divisor));", "+\t\telse", "+\t\t\tsb.append(generateHelpURL(", "+\t\t\t\t\t\"N/A\",", "+\t\t\t\t\t\"Line coverage and branch coverage will appear as \\\"Not Applicable\\\" when Cobertura can not find line number information in the .class file.  This happens for stub and skeleton classes, interfaces, or when the class was not compiled with \\\"debug=true.\\\"\"));", "+\t\tsb.append(\"</td><td class=\\\"percentgraph\\\"><div class=\\\"percentgraph\\\">\");", "+\t\tif (divisor > 0)", "+\t\t{", "+\t\t\tsb.append(\"<div class=\\\"greenbar\\\" style=\\\"width:\"", "+\t\t\t\t\t+ (dividend * 100 / divisor) + \"px\\\">\");", "+\t\t\tsb.append(\"<span class=\\\"text\\\">\");", "+\t\t\tsb.append(dividend);", "+\t\t\tsb.append(\"/\");", "+\t\t\tsb.append(divisor);", "+\t\t}", "+\t\telse", "+\t\t{", "+\t\t\tsb.append(\"<div class=\\\"na\\\" style=\\\"width:100px\\\">\");", "+\t\t\tsb.append(\"<span class=\\\"text\\\">\");", "+\t\t\tsb.append(generateHelpURL(", "+\t\t\t\t\t\"N/A\",", "+\t\t\t\t\t\"Line coverage and branch coverage will appear as \\\"Not Applicable\\\" when Cobertura can not find line number information in the .class file.  This happens for stub and skeleton classes, interfaces, or when the class was not compiled with \\\"debug=true.\\\"\"));", "+\t\t}", "+\t\tsb.append(\"</span></div></div></td></tr></table>\");", "+"]}]}