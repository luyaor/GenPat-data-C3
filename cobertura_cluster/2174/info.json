{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0909e0de73f36c596b41c36bff092008", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b4d54f9051114415fa8cb4ac652d2e2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "86ba74eba09df9fe91a0017286c58eeca8115e4e", "commitAfterChange": "cb1489d04bf4db3975fea51af595b5c831d4de75", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate static String generateTableHeader(String title, \t\t\tboolean showColumnForNumberOfClasses)", "signatureAfterChange": "  \tprivate static String generateTableHeader(String title, \t\t\tboolean showColumnForNumberOfClasses)", "diff": ["-\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"18%\\\">\"", "+\t\tret.append(\"  <td class=\\\"heading\\\">\"", "-\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"8%\\\"># Lines</td>\");", "-\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"18%\\\">\"", "+\t\tret.append(\"  <td class=\\\"heading\\\">\"", "-\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"8%\\\"># Branches</td>\");", "-\t\t\t\t.append(\"  <td class=\\\"heading\\\" width=\\\"3%\\\">\"", "+\t\t\t\t.append(\"  <td class=\\\"heading\\\">\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c7a038be08bb25d8866074747e250b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/xml/XMLReport.java", "commitBeforeChange": "9a830b0110b84315c0c267421611842128c2ca35", "commitAfterChange": "2d04adc2554406c41824d5b965907076ecdceb80", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate void dumpClasses(PackageData packageData)", "signatureAfterChange": "  \tprivate void dumpClasses(SourceFileData sourceFileData)", "diff": ["-\tprivate void dumpClasses(PackageData packageData)", "-\t\t\tdumpClass((ClassData)it.next());", "+\tprivate void dumpClasses(SourceFileData sourceFileData)", "+\t{", "+\t\tIterator it = sourceFileData.getChildren().iterator();", "+\t\twhile (it.hasNext())", "+\t\t{", "+\t\t\tdumpClass((ClassData)it.next());", "+\t\t}", "+\t}"]}]}