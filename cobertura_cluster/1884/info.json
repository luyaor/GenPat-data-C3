{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8fe1215694f33838dec0aaf9d0c18b7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f4719248417a3a1a60db0ba3ac6cf1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SourceFileData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean containsInstrumentationInfo()", "signatureAfterChange": "  \tpublic boolean containsInstrumentationInfo()", "diff": ["-\t\treturn this.containsInstrumentationInfo;", "+\t\t// Return false if any of our child ClassData's does not", "+\t\t// contain instrumentation info", "+\t\tIterator iter = this.children.values().iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tClassData classData = (ClassData)iter.next();", "+\t\t\tif (!classData.containsInstrumentationInfo())", "+\t\t\t\treturn false;", "+\t\t}", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23b95ffa8163d256a1c3eb868f7d4ada", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "47a36b11251526c5e9936089f03282ea0c599dba", "commitAfterChange": "fa6590b4914422a1fe749c75560371053ab58bee", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Collection getClasses()", "signatureAfterChange": "  \tpublic Collection getClasses()", "diff": ["-\t\tHashSet classes = new HashSet();", "-\t\tIterator iter = children.values().iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tPackageData packageData = (PackageData)iter.next();", "-\t\t\tclasses.addAll(packageData.getChildren());", "-\t\t}", "-\t\treturn classes;", "+\t\treturn this.classes.values();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "459bb7cd216879c93cc070985da8c4c7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic SortedSet getClasses()", "signatureAfterChange": "  \tpublic SortedSet getClasses()", "diff": ["-\t\tSortedSet classes = new TreeSet();", "-\t\tIterator iter = this.children.values().iterator();", "-\t\twhile (iter.hasNext()) {", "-\t\t\tSourceFileData sourceFileData = (SourceFileData)iter.next();", "-\t\t\tclasses.addAll(sourceFileData.getClasses());", "-\t\t}", "-\t\treturn classes;", "+\t\treturn new TreeSet(this.children.values());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75d9b8d73c5c142851bb3416fae0a4f1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "47a36b11251526c5e9936089f03282ea0c599dba", "commitAfterChange": "fa6590b4914422a1fe749c75560371053ab58bee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic int getNumberOfClasses()", "signatureAfterChange": "  \tpublic int getNumberOfClasses()", "diff": ["-\t\tint numberOfClasses = 0;", "-\t\tIterator iter = children.values().iterator();", "+\t\treturn this.classes.size();", "+\t}", "-\t\t\tnumberOfClasses += packageData.getNumberOfChildren();", "-\t\treturn numberOfClasses;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a729e2042527be874f2eab7b82c3d2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/CoverageData.java", "commitBeforeChange": "2fe97005312f235d23879f33762071ad5315ea64", "commitAfterChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic Collection getClasses()", "signatureAfterChange": "  \tpublic Collection getClasses()", "diff": ["-\t\treturn classes.values();", "+\t\tHashSet classes = new HashSet();", "+\t\tIterator iter = packages.values().iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tPackageData packageData = (PackageData)iter.next();", "+\t\t\tclasses.addAll(packageData.getClasses());", "+\t\t}", "+\t\treturn classes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9725469e7851b682eae284504e17c807", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/CoverageData.java", "commitBeforeChange": "2fe97005312f235d23879f33762071ad5315ea64", "commitAfterChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic int getNumberOfClasses()", "signatureAfterChange": "  \tpublic int getNumberOfClasses()", "diff": ["-\t\treturn classes.size();", "+\t\tint numberOfClasses = 0;", "+\t\tIterator iter = packages.values().iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tPackageData packageData = (PackageData)iter.next();", "+\t\t\tnumberOfClasses += packageData.getNumberOfClasses();", "+\t\t}", "+\t\treturn numberOfClasses;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8ed919701034f5d84fc8b61ac162b5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "8d76b07e3d230fcd0d3b233e7ffc80df6ca3ec82", "commitAfterChange": "c7179e693f89a314eb6898100456db755030dd92", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic SortedSet getSourceFiles()", "signatureAfterChange": "  \tpublic Collection getSourceFiles()", "diff": ["-\tpublic SortedSet getSourceFiles()", "+\tpublic Collection getSourceFiles()", "-\t\tSortedSet sourceFiles = new TreeSet();", "-", "-\t\tIterator iter = this.children.values().iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tPackageData packageData = (PackageData)iter.next();", "-\t\t\tsourceFiles.addAll(packageData.getSourceFiles());", "-\t\t}", "-", "-\t\treturn sourceFiles;", "+\t\treturn this.sourceFiles.values();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a090f334a9d87471989b200205c8fcdc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Collection getSourceFiles()", "signatureAfterChange": "  \tpublic Collection getSourceFiles()", "diff": ["-\t\treturn this.sourceFiles.values();", "+\t\tSortedSet sourceFileDatas = new TreeSet();", "+\t\tIterator iter = this.children.values().iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tPackageData packageData = (PackageData)iter.next();", "+\t\t\tsourceFileDatas.addAll(packageData.getSourceFiles());", "+\t\t}", "+\t\treturn sourceFileDatas;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2fff27400ee823a5dbbed620e95adbe", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/CoverageData.java", "commitBeforeChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "commitAfterChange": "ec1fd1d424f2f4413436786d9da0ddb5f02e1d9d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic int getNumberOfClasses()", "signatureAfterChange": "  \tint getNumberOfCoveredLines();", "diff": ["+\tint getNumberOfCoveredLines();", "-", "-\tpublic int getNumberOfClasses()", "-\t{", "-\t\tint numberOfClasses = 0;", "-\t\tIterator iter = packages.values().iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tPackageData packageData = (PackageData)iter.next();", "-\t\t\tnumberOfClasses += packageData.getNumberOfClasses();", "-\t\t}", "-\t\treturn numberOfClasses;", "-\t}"]}]}