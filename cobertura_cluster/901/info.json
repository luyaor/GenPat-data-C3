{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6da6873a30891944dcf37fe06e86c9d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "706172c714fa398dd90b7f98aaf98942", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \r   final public void Literal() throws ParseException", "signatureAfterChange": "    final public void Literal() throws ParseException", "diff": ["-\r", "-  final public void Literal() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case INTEGER_LITERAL:\r", "-      jj_consume_token(INTEGER_LITERAL);\r", "-      break;\r", "-    case FLOATING_POINT_LITERAL:\r", "-      jj_consume_token(FLOATING_POINT_LITERAL);\r", "-      break;\r", "-    case CHARACTER_LITERAL:\r", "-      jj_consume_token(CHARACTER_LITERAL);\r", "-      break;\r", "-    case STRING_LITERAL:\r", "-      jj_consume_token(STRING_LITERAL);\r", "-      break;\r", "-    case FALSE:\r", "-    case TRUE:\r", "-      BooleanLiteral();\r", "-      break;\r", "-    case NULL:\r", "-      NullLiteral();\r", "-      break;\r", "-    default:\r", "-      jj_la1[127] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void Literal() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case INTEGER_LITERAL:", "+      jj_consume_token(INTEGER_LITERAL);", "+      break;", "+    case FLOATING_POINT_LITERAL:", "+      jj_consume_token(FLOATING_POINT_LITERAL);", "+      break;", "+    case CHARACTER_LITERAL:", "+      jj_consume_token(CHARACTER_LITERAL);", "+      break;", "+    case STRING_LITERAL:", "+      jj_consume_token(STRING_LITERAL);", "+      break;", "+    case FALSE:", "+    case TRUE:", "+      BooleanLiteral();", "+      break;", "+    case NULL:", "+      NullLiteral();", "+      break;", "+    default:", "+      jj_la1[128] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b0165f8b4a937d413f0f49595f409f1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \r   final public void Literal() throws ParseException", "signatureAfterChange": "    final public void Literal() throws ParseException", "diff": ["-\r", "-  final public void Literal() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case INTEGER_LITERAL:\r", "-      jj_consume_token(INTEGER_LITERAL);\r", "-      break;\r", "-    case FLOATING_POINT_LITERAL:\r", "-      jj_consume_token(FLOATING_POINT_LITERAL);\r", "-      break;\r", "-    case CHARACTER_LITERAL:\r", "-      jj_consume_token(CHARACTER_LITERAL);\r", "-      break;\r", "-    case STRING_LITERAL:\r", "-      jj_consume_token(STRING_LITERAL);\r", "-      break;\r", "-    case FALSE:\r", "-    case TRUE:\r", "-      BooleanLiteral();\r", "-      break;\r", "-    case NULL:\r", "-      NullLiteral();\r", "-      break;\r", "-    default:\r", "-      jj_la1[127] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void Literal() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case INTEGER_LITERAL:", "+      jj_consume_token(INTEGER_LITERAL);", "+      break;", "+    case FLOATING_POINT_LITERAL:", "+      jj_consume_token(FLOATING_POINT_LITERAL);", "+      break;", "+    case CHARACTER_LITERAL:", "+      jj_consume_token(CHARACTER_LITERAL);", "+      break;", "+    case STRING_LITERAL:", "+      jj_consume_token(STRING_LITERAL);", "+      break;", "+    case FALSE:", "+    case TRUE:", "+      BooleanLiteral();", "+      break;", "+    case NULL:", "+      NullLiteral();", "+      break;", "+    default:", "+      jj_la1[128] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}]}