{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02d266aea50a4f48dde6a6ff685b1ba7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba080f6a9ed33484c19fb646e1712958", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "86a9d8a32326d9cff579d91c382eb51ec16ca6a4", "commitAfterChange": "f64a9c48c348d6f5827b53fdd5b8ef4f4bcc6831", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "signatureAfterChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "diff": ["+\t\t\t} else if (args[i].equals(\"--encoding\")) {", "+\t\t\t\tsetEncoding( args[++i]);", "-            \tif( baseDir==null) {", "-            \t\tfinder.addSourceDirectory( args[i]);", "-            \t} else {", "-            \t\tfinder.addSourceFile( baseDir, args[i]);", "-            \t}", "+            if( baseDir==null) {", "+               finder.addSourceDirectory( args[i]);", "+            } else {", "+               finder.addSourceFile( baseDir, args[i]);", "+            }", "-\t\t\tLOGGER.debug(\"format is \" + format);", "+\t\t\tLOGGER.debug(\"format is \" + format + \" encoding is \" + encoding);", "-\t\t\tnew HTMLReport(projectData, destinationDir, finder, complexity);", "+\t\t\tnew HTMLReport(projectData, destinationDir, finder, complexity, encoding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a2e41c92e8105be65c376ac363688d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "7a6cf9ee7c01328fd060bf78a56186190300c13b", "commitAfterChange": "c26f5a170c752d9d1d5b884dd7eb60b982637269", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "signatureAfterChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "diff": ["+\t\tString baseDir = null;", "-\t\t\t\tfinder.addBaseDirectory(new File(args[++i]));", "+\t\t\t\tbaseDir = args[++i];", "-\t\t\t\tfinder.addSourceFilePath(args[i]);", "+            \tif( baseDir==null) {", "+            \t\tfinder.addSourceDirectory( args[i]);", "+            \t} else {", "+            \t\tfinder.addSourceFile( baseDir, args[i]);", "+            \t}", "+\t\tComplexityCalculator complexity = new ComplexityCalculator(finder);", "-\t\t\tnew HTMLReport(projectData, destinationDir, finder);", "+\t\t\tnew HTMLReport(projectData, destinationDir, finder, complexity);", "-\t\t\tnew XMLReport(projectData, destinationDir, finder);", "+\t\t\tnew XMLReport(projectData, destinationDir, finder, complexity);"]}]}