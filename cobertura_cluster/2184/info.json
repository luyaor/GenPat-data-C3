{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d38f34806c039542279a2cf203714e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75385c5deea32d3af15884f6b9531dc9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "\r \r   final public void ForInit() throws ParseException", "signatureAfterChange": "    final public void ForInit() throws ParseException", "diff": ["-\r", "-  final public void ForInit() throws ParseException {\r", "-    if (jj_2_47(2147483647)) {\r", "-      LocalVariableDeclaration();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ASSERT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FALSE:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case LONG:\r", "-      case NEW:\r", "-      case NULL:\r", "-      case SHORT:\r", "-      case SUPER:\r", "-      case THIS:\r", "-      case TRUE:\r", "-      case VOID:\r", "-      case INTEGER_LITERAL:\r", "-      case FLOATING_POINT_LITERAL:\r", "-      case CHARACTER_LITERAL:\r", "-      case STRING_LITERAL:\r", "-      case IDENTIFIER:\r", "-      case LPAREN:\r", "-      case INCR:\r", "-      case DECR:\r", "-        StatementExpressionList();\r", "-        break;\r", "-      default:\r", "-        jj_la1[153] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void ForInit() throws ParseException {", "+    if (jj_2_46(2147483647)) {", "+      LocalVariableDeclaration();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ASSERT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case DOUBLE:", "+      case ENUM:", "+      case FALSE:", "+      case FLOAT:", "+      case INT:", "+      case LONG:", "+      case NEW:", "+      case NULL:", "+      case SHORT:", "+      case SUPER:", "+      case THIS:", "+      case TRUE:", "+      case VOID:", "+      case INTEGER_LITERAL:", "+      case FLOATING_POINT_LITERAL:", "+      case CHARACTER_LITERAL:", "+      case STRING_LITERAL:", "+      case IDENTIFIER:", "+      case LPAREN:", "+      case INCR:", "+      case DECR:", "+        StatementExpressionList();", "+        break;", "+      default:", "+        jj_la1[154] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e820b26ef8abfb8e5a96d456342b1ef", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "\r \r   final public void ForInit() throws ParseException", "signatureAfterChange": "    final public void ForInit() throws ParseException", "diff": ["-\r", "-  final public void ForInit() throws ParseException {\r", "-    if (jj_2_47(2147483647)) {\r", "-      LocalVariableDeclaration();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ASSERT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FALSE:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case LONG:\r", "-      case NEW:\r", "-      case NULL:\r", "-      case SHORT:\r", "-      case SUPER:\r", "-      case THIS:\r", "-      case TRUE:\r", "-      case VOID:\r", "-      case INTEGER_LITERAL:\r", "-      case FLOATING_POINT_LITERAL:\r", "-      case CHARACTER_LITERAL:\r", "-      case STRING_LITERAL:\r", "-      case IDENTIFIER:\r", "-      case LPAREN:\r", "-      case INCR:\r", "-      case DECR:\r", "-        StatementExpressionList();\r", "-        break;\r", "-      default:\r", "-        jj_la1[153] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void ForInit() throws ParseException {", "+    if (jj_2_46(2147483647)) {", "+      LocalVariableDeclaration();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ASSERT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case DOUBLE:", "+      case ENUM:", "+      case FALSE:", "+      case FLOAT:", "+      case INT:", "+      case LONG:", "+      case NEW:", "+      case NULL:", "+      case SHORT:", "+      case SUPER:", "+      case THIS:", "+      case TRUE:", "+      case VOID:", "+      case INTEGER_LITERAL:", "+      case FLOATING_POINT_LITERAL:", "+      case CHARACTER_LITERAL:", "+      case STRING_LITERAL:", "+      case IDENTIFIER:", "+      case LPAREN:", "+      case INCR:", "+      case DECR:", "+        StatementExpressionList();", "+        break;", "+      default:", "+        jj_la1[154] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}]}