{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "620f68ffa67ede37e0fab7d1c865f459", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c9dcc0b4c36cda79319704a02e2cc46", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r   final public void CastLookahead() throws ParseException", "signatureAfterChange": "   final public void CastLookahead() throws ParseException", "diff": ["-// this.\r", "-  final public void CastLookahead() throws ParseException {\r", "-    if (jj_2_28(2)) {\r", "-      jj_consume_token(LPAREN);\r", "-      PrimitiveType();\r", "-    } else if (jj_2_29(2147483647)) {\r", "-      jj_consume_token(LPAREN);\r", "-      Type();\r", "-      jj_consume_token(LBRACKET);\r", "-      jj_consume_token(RBRACKET);\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LPAREN:\r", "-        jj_consume_token(LPAREN);\r", "-        Type();\r", "-        jj_consume_token(RPAREN);\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case TILDE:\r", "-          jj_consume_token(TILDE);\r", "-          break;\r", "-        case BANG:\r", "-          jj_consume_token(BANG);\r", "-          break;\r", "-        case LPAREN:\r", "-          jj_consume_token(LPAREN);\r", "-          break;\r", "-        case ASSERT:\r", "-        case IDENTIFIER:\r", "-          Identifier();\r", "-          break;\r", "-        case THIS:\r", "-          jj_consume_token(THIS);\r", "-          break;\r", "-        case SUPER:\r", "-          jj_consume_token(SUPER);\r", "-          break;\r", "-        case NEW:\r", "-          jj_consume_token(NEW);\r", "-          break;\r", "-        case FALSE:\r", "-        case NULL:\r", "-        case TRUE:\r", "-        case INTEGER_LITERAL:\r", "-        case FLOATING_POINT_LITERAL:\r", "-        case CHARACTER_LITERAL:\r", "-        case STRING_LITERAL:\r", "-          Literal();\r", "-          break;\r", "-        default:\r", "-          jj_la1[114] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[115] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+// this.", "+  final public void CastLookahead() throws ParseException {", "+    if (jj_2_27(2)) {", "+      jj_consume_token(LPAREN);", "+      PrimitiveType();", "+    } else if (jj_2_28(2147483647)) {", "+      jj_consume_token(LPAREN);", "+      Type();", "+      jj_consume_token(LBRACKET);", "+      jj_consume_token(RBRACKET);", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        Type();", "+        jj_consume_token(RPAREN);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case TILDE:", "+          jj_consume_token(TILDE);", "+          break;", "+        case BANG:", "+          jj_consume_token(BANG);", "+          break;", "+        case LPAREN:", "+          jj_consume_token(LPAREN);", "+          break;", "+        case ASSERT:", "+        case IDENTIFIER:", "+          Identifier();", "+          break;", "+        case THIS:", "+          jj_consume_token(THIS);", "+          break;", "+        case SUPER:", "+          jj_consume_token(SUPER);", "+          break;", "+        case NEW:", "+          jj_consume_token(NEW);", "+          break;", "+        case FALSE:", "+        case NULL:", "+        case TRUE:", "+        case INTEGER_LITERAL:", "+        case FLOATING_POINT_LITERAL:", "+        case CHARACTER_LITERAL:", "+        case STRING_LITERAL:", "+          Literal();", "+          break;", "+        default:", "+          jj_la1[114] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[115] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42aebc8da8bacf72a5be4954087817a1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r   final public void CastLookahead() throws ParseException", "signatureAfterChange": "   final public void CastLookahead() throws ParseException", "diff": ["-// this.\r", "-  final public void CastLookahead() throws ParseException {\r", "-    if (jj_2_28(2)) {\r", "-      jj_consume_token(LPAREN);\r", "-      PrimitiveType();\r", "-    } else if (jj_2_29(2147483647)) {\r", "-      jj_consume_token(LPAREN);\r", "-      Type();\r", "-      jj_consume_token(LBRACKET);\r", "-      jj_consume_token(RBRACKET);\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LPAREN:\r", "-        jj_consume_token(LPAREN);\r", "-        Type();\r", "-        jj_consume_token(RPAREN);\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case TILDE:\r", "-          jj_consume_token(TILDE);\r", "-          break;\r", "-        case BANG:\r", "-          jj_consume_token(BANG);\r", "-          break;\r", "-        case LPAREN:\r", "-          jj_consume_token(LPAREN);\r", "-          break;\r", "-        case ASSERT:\r", "-        case IDENTIFIER:\r", "-          Identifier();\r", "-          break;\r", "-        case THIS:\r", "-          jj_consume_token(THIS);\r", "-          break;\r", "-        case SUPER:\r", "-          jj_consume_token(SUPER);\r", "-          break;\r", "-        case NEW:\r", "-          jj_consume_token(NEW);\r", "-          break;\r", "-        case FALSE:\r", "-        case NULL:\r", "-        case TRUE:\r", "-        case INTEGER_LITERAL:\r", "-        case FLOATING_POINT_LITERAL:\r", "-        case CHARACTER_LITERAL:\r", "-        case STRING_LITERAL:\r", "-          Literal();\r", "-          break;\r", "-        default:\r", "-          jj_la1[114] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[115] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+// this.", "+  final public void CastLookahead() throws ParseException {", "+    if (jj_2_27(2)) {", "+      jj_consume_token(LPAREN);", "+      PrimitiveType();", "+    } else if (jj_2_28(2147483647)) {", "+      jj_consume_token(LPAREN);", "+      Type();", "+      jj_consume_token(LBRACKET);", "+      jj_consume_token(RBRACKET);", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        Type();", "+        jj_consume_token(RPAREN);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case TILDE:", "+          jj_consume_token(TILDE);", "+          break;", "+        case BANG:", "+          jj_consume_token(BANG);", "+          break;", "+        case LPAREN:", "+          jj_consume_token(LPAREN);", "+          break;", "+        case ASSERT:", "+        case IDENTIFIER:", "+          Identifier();", "+          break;", "+        case THIS:", "+          jj_consume_token(THIS);", "+          break;", "+        case SUPER:", "+          jj_consume_token(SUPER);", "+          break;", "+        case NEW:", "+          jj_consume_token(NEW);", "+          break;", "+        case FALSE:", "+        case NULL:", "+        case TRUE:", "+        case INTEGER_LITERAL:", "+        case FLOATING_POINT_LITERAL:", "+        case CHARACTER_LITERAL:", "+        case STRING_LITERAL:", "+          Literal();", "+          break;", "+        default:", "+          jj_la1[114] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[115] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}]}