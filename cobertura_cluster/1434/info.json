{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e738cb963aa19c9cca60a4d417bf7269", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15a978936f3a8801beac679802202bb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "\r \r   final public void AllocationExpression() throws ParseException", "signatureAfterChange": "    final public void AllocationExpression() throws ParseException", "diff": ["-\r", "-  final public void AllocationExpression() throws ParseException {\r", "-        String sOldClass = _sClass;\r", "-        //int oldNcss = _ncss;\r", "-        int oldFunctions = _functions;\r", "-        int oldClasses = _classes;\r", "-        String sName;\r", "-\r", "-        //Added by REYNAUD Sebastien (LOGICA)\r", "-        int oldJavadocs = _javadocs;\r", "-        int oldNcss = _ncss;\r", "-    if (jj_2_39(2)) {\r", "-      jj_consume_token(NEW);\r", "-      PrimitiveType();\r", "-      ArrayDimsAndInits();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case NEW:\r", "-        jj_consume_token(NEW);\r", "-        Name();\r", "-                          sName = _sName;\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case LT:\r", "-          TypeArguments();\r", "-          break;\r", "-        default:\r", "-          jj_la1[131] = jj_gen;\r", "-          ;\r", "-        }\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case LBRACKET:\r", "-          ArrayDimsAndInits();\r", "-          break;\r", "-        case LPAREN:\r", "-          Arguments();\r", "-          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-          case LBRACE:\r", "-                         if (!_sClass.equals(\"\")) {\r", "-                                 _sClass += \".\";\r", "-                         }\r", "-                         /*_sClass += sName;*/\r", "-                         //_sClass += sName + \"$\" + _anonClassCount ;//Removed by REYNAUD Sebastien (LOGICA)\r", "-\r", "-                                //Added by REYNAUD Sebastien (LOGICA)\r", "-                                _sClass += sName;\r", "-                                //\r", "-                         _classLevel ++;\r", "-            ClassBody();\r", "-                                //Added by REYNAUD Sebastien (LOGICA)\r", "-                                ObjectMetric metric = new ObjectMetric();\r", "-                                metric.name = _sPackage + _sClass;\r", "-                                metric.ncss = _ncss - oldNcss;\r", "-                            metric.functions = _functions - oldFunctions;\r", "-                      metric.classes = _classes - oldClasses;\r", "-                        Token lastToken = getToken( 0 );\r", "-                        _vClasses.add( metric );\r", "-                        _pPackageMetric.functions += _functions - oldFunctions;\r", "-                        _pPackageMetric.classes++;\r", "-                                metric.javadocs = _javadocs - oldJavadocs;\r", "-                                //\r", "-                                _classLevel--;\r", "-                                _functions = oldFunctions;\r", "-                                _classes = oldClasses + 1;\r", "-                                _sClass = sOldClass;\r", "-            break;\r", "-          default:\r", "-            jj_la1[132] = jj_gen;\r", "-            ;\r", "-          }\r", "-          break;\r", "-        default:\r", "-          jj_la1[133] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[134] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void AllocationExpression() throws ParseException {", "+        String sOldClass = _sClass;", "+        //int oldNcss = _ncss;", "+        int oldFunctions = _functions;", "+        int oldClasses = _classes;", "+        String sName;", "+    if (jj_2_38(2)) {", "+      jj_consume_token(NEW);", "+      PrimitiveType();", "+      ArrayDimsAndInits();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case NEW:", "+        jj_consume_token(NEW);", "+        Name();", "+                          sName = _sName;", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case LT:", "+          TypeArguments();", "+          break;", "+        default:", "+          jj_la1[132] = jj_gen;", "+          ;", "+        }", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case LBRACKET:", "+          ArrayDimsAndInits();", "+          break;", "+        case LPAREN:", "+          Arguments();", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case LBRACE:", "+                         if (!_sClass.equals(\"\")) {", "+                                 _sClass += \".\";", "+                         }", "+                         /*_sClass += sName;*/", "+                         _sClass += sName + \"$\" + _anonClassCount ;", "+", "+                         _classLevel ++;", "+            ClassBody();", "+                                _classLevel--;", "+                                _functions = oldFunctions;", "+                                _classes = oldClasses + 1;", "+                                _sClass = sOldClass;", "+            break;", "+          default:", "+            jj_la1[133] = jj_gen;", "+            ;", "+          }", "+          break;", "+        default:", "+          jj_la1[134] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[135] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd87f6e42aa7e9f393ba730e5102275", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "\r \r   final public void AllocationExpression() throws ParseException", "signatureAfterChange": "    final public void AllocationExpression() throws ParseException", "diff": ["-\r", "-  final public void AllocationExpression() throws ParseException {\r", "-        String sOldClass = _sClass;\r", "-        //int oldNcss = _ncss;\r", "-        int oldFunctions = _functions;\r", "-        int oldClasses = _classes;\r", "-        String sName;\r", "-\r", "-        //Added by REYNAUD Sebastien (LOGICA)\r", "-        int oldJavadocs = _javadocs;\r", "-        int oldNcss = _ncss;\r", "-    if (jj_2_39(2)) {\r", "-      jj_consume_token(NEW);\r", "-      PrimitiveType();\r", "-      ArrayDimsAndInits();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case NEW:\r", "-        jj_consume_token(NEW);\r", "-        Name();\r", "-                          sName = _sName;\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case LT:\r", "-          TypeArguments();\r", "-          break;\r", "-        default:\r", "-          jj_la1[131] = jj_gen;\r", "-          ;\r", "-        }\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case LBRACKET:\r", "-          ArrayDimsAndInits();\r", "-          break;\r", "-        case LPAREN:\r", "-          Arguments();\r", "-          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-          case LBRACE:\r", "-                         if (!_sClass.equals(\"\")) {\r", "-                                 _sClass += \".\";\r", "-                         }\r", "-                         /*_sClass += sName;*/\r", "-                         //_sClass += sName + \"$\" + _anonClassCount ;//Removed by REYNAUD Sebastien (LOGICA)\r", "-\r", "-                                //Added by REYNAUD Sebastien (LOGICA)\r", "-                                _sClass += sName;\r", "-                                //\r", "-                         _classLevel ++;\r", "-            ClassBody();\r", "-                                //Added by REYNAUD Sebastien (LOGICA)\r", "-                                ObjectMetric metric = new ObjectMetric();\r", "-                                metric.name = _sPackage + _sClass;\r", "-                                metric.ncss = _ncss - oldNcss;\r", "-                            metric.functions = _functions - oldFunctions;\r", "-                      metric.classes = _classes - oldClasses;\r", "-                        Token lastToken = getToken( 0 );\r", "-                        _vClasses.add( metric );\r", "-                        _pPackageMetric.functions += _functions - oldFunctions;\r", "-                        _pPackageMetric.classes++;\r", "-                                metric.javadocs = _javadocs - oldJavadocs;\r", "-                                //\r", "-                                _classLevel--;\r", "-                                _functions = oldFunctions;\r", "-                                _classes = oldClasses + 1;\r", "-                                _sClass = sOldClass;\r", "-            break;\r", "-          default:\r", "-            jj_la1[132] = jj_gen;\r", "-            ;\r", "-          }\r", "-          break;\r", "-        default:\r", "-          jj_la1[133] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[134] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void AllocationExpression() throws ParseException {", "+        String sOldClass = _sClass;", "+        //int oldNcss = _ncss;", "+        int oldFunctions = _functions;", "+        int oldClasses = _classes;", "+        String sName;", "+    if (jj_2_38(2)) {", "+      jj_consume_token(NEW);", "+      PrimitiveType();", "+      ArrayDimsAndInits();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case NEW:", "+        jj_consume_token(NEW);", "+        Name();", "+                          sName = _sName;", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case LT:", "+          TypeArguments();", "+          break;", "+        default:", "+          jj_la1[132] = jj_gen;", "+          ;", "+        }", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case LBRACKET:", "+          ArrayDimsAndInits();", "+          break;", "+        case LPAREN:", "+          Arguments();", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case LBRACE:", "+                         if (!_sClass.equals(\"\")) {", "+                                 _sClass += \".\";", "+                         }", "+                         /*_sClass += sName;*/", "+                         _sClass += sName + \"$\" + _anonClassCount ;", "+", "+                         _classLevel ++;", "+            ClassBody();", "+                                _classLevel--;", "+                                _functions = oldFunctions;", "+                                _classes = oldClasses + 1;", "+                                _sClass = sOldClass;", "+            break;", "+          default:", "+            jj_la1[133] = jj_gen;", "+            ;", "+          }", "+          break;", "+        default:", "+          jj_la1[134] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[135] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}]}