{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "839e4c07b0a44f410ed500efaffcc55d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99bc84ef21161fdceb8df0c44c590cda", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "\r \r   final public void PrimarySuffix() throws ParseException", "signatureAfterChange": "    final public void PrimarySuffix() throws ParseException", "diff": ["-\r", "-  final public void PrimarySuffix() throws ParseException {\r", "-    if (jj_2_36(2)) {\r", "-      jj_consume_token(DOT);\r", "-      jj_consume_token(THIS);\r", "-    } else if (jj_2_37(2)) {\r", "-      jj_consume_token(DOT);\r", "-      AllocationExpression();\r", "-    } else if (jj_2_38(3)) {\r", "-      MemberSelector();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LBRACKET:\r", "-        jj_consume_token(LBRACKET);\r", "-        Expression();\r", "-        jj_consume_token(RBRACKET);\r", "-        break;\r", "-      case DOT:\r", "-        jj_consume_token(DOT);\r", "-        Identifier();\r", "-        break;\r", "-      case LPAREN:\r", "-        Arguments();\r", "-        break;\r", "-      default:\r", "-        jj_la1[126] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void PrimarySuffix() throws ParseException {", "+    if (jj_2_35(2)) {", "+      jj_consume_token(DOT);", "+      jj_consume_token(THIS);", "+    } else if (jj_2_36(2)) {", "+      jj_consume_token(DOT);", "+      AllocationExpression();", "+    } else if (jj_2_37(3)) {", "+      MemberSelector();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LBRACKET:", "+        jj_consume_token(LBRACKET);", "+        Expression();", "+        jj_consume_token(RBRACKET);", "+        break;", "+      case DOT:", "+        jj_consume_token(DOT);", "+        Identifier();", "+        break;", "+      case LPAREN:", "+        Arguments();", "+        break;", "+      default:", "+        jj_la1[127] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d32396a1947d6b5aadf58faab261e558", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "\r \r   final public void PrimarySuffix() throws ParseException", "signatureAfterChange": "    final public void PrimarySuffix() throws ParseException", "diff": ["-\r", "-  final public void PrimarySuffix() throws ParseException {\r", "-    if (jj_2_36(2)) {\r", "-      jj_consume_token(DOT);\r", "-      jj_consume_token(THIS);\r", "-    } else if (jj_2_37(2)) {\r", "-      jj_consume_token(DOT);\r", "-      AllocationExpression();\r", "-    } else if (jj_2_38(3)) {\r", "-      MemberSelector();\r", "-    } else {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LBRACKET:\r", "-        jj_consume_token(LBRACKET);\r", "-        Expression();\r", "-        jj_consume_token(RBRACKET);\r", "-        break;\r", "-      case DOT:\r", "-        jj_consume_token(DOT);\r", "-        Identifier();\r", "-        break;\r", "-      case LPAREN:\r", "-        Arguments();\r", "-        break;\r", "-      default:\r", "-        jj_la1[126] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-  }\r", "+", "+  final public void PrimarySuffix() throws ParseException {", "+    if (jj_2_35(2)) {", "+      jj_consume_token(DOT);", "+      jj_consume_token(THIS);", "+    } else if (jj_2_36(2)) {", "+      jj_consume_token(DOT);", "+      AllocationExpression();", "+    } else if (jj_2_37(3)) {", "+      MemberSelector();", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LBRACKET:", "+        jj_consume_token(LBRACKET);", "+        Expression();", "+        jj_consume_token(RBRACKET);", "+        break;", "+      case DOT:", "+        jj_consume_token(DOT);", "+        Identifier();", "+        break;", "+      case LPAREN:", "+        Arguments();", "+        break;", "+      default:", "+        jj_la1[127] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+  }"]}]}