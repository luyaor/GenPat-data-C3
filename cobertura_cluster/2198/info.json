{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45a684ec9a5c33c7f590145cd1ba834c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a811dd69c9e4c5bdcde1cbc24d16eb1e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass2/BuildClassMapClassVisitor.java", "commitBeforeChange": "cd6bc28c213448c4f17fad67a6e8eae42d8d9463", "commitAfterChange": "6981a5ab040697261e06e872e609bd3dca7fd012", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic BuildClassMapClassVisitor(ClassVisitor cv, Collection<Pattern> ignoreRegexes,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap)", "signatureAfterChange": " \tpublic BuildClassMapClassVisitor(ClassVisitor cv, Collection<Pattern> ignoreRegexes,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tSet<String> ignoredMethods)", "diff": ["-\tpublic BuildClassMapClassVisitor(ClassVisitor cv, Collection<Pattern> ignoreRegexes,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap) {", "+\tpublic BuildClassMapClassVisitor(ClassVisitor cv, Collection<Pattern> ignoreRegexes,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap,", "+\t\t\tSet<String> ignoredMethods) {", "+\t\tthis.ignoredMethods = ignoredMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db31208a51f233de8be32413c60d78ce", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/InjectCodeClassInstrumenter.java", "commitBeforeChange": "cd6bc28c213448c4f17fad67a6e8eae42d8d9463", "commitAfterChange": "6981a5ab040697261e06e872e609bd3dca7fd012", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes,ClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap)", "signatureAfterChange": " \tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes, boolean threadsafeRigorous, \t\t\tClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tSet<String> ignoredMethods)", "diff": ["-\tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes,ClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap) {", "+\tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes, boolean threadsafeRigorous,", "+\t\t\tClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap,", "+\t\t\tSet<String> ignoredMethods) {", "-\t\ttouchPointListener=new InjectCodeTouchPointListener(classMap,codeProvider);", "+\t\tthis.ignoredMethods = ignoredMethods;", "+\t\tcodeProvider = threadsafeRigorous ?  new AtomicArrayCodeProvider() : new FastArrayCodeProvider();", "+\t\ttouchPointListener=new InjectCodeTouchPointListener(classMap, codeProvider);\t\t"]}]}