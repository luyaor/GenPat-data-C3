{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e104d69680184e1a5411a898365e9913", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093d2118f80976bfbf67a4c8aa055438", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "commitAfterChange": "ec1fd1d424f2f4413436786d9da0ddb5f02e1d9d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic double getBranchCoverageRate()", "signatureAfterChange": " \tpublic double getBranchCoverageRate(String methodNameAndDescriptor)", "diff": ["-\t */", "-\tpublic double getBranchCoverageRate()", "-\t{", "-\t\tif (branches.size() == 0)", "-\t\t{", "-\t\t\t// no conditional branches, therefore 100% branch coverage.", "-\t\t\treturn 1d;", "-\t\t}", "-\t\treturn (double)getNumberOfCoveredBranches() / branches.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0fba0c4f6fe1713a8eb2a72c2919b4", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SortedSet getSourceFiles()", "signatureAfterChange": "  \tpublic Collection getSourceFiles()", "diff": ["-\tpublic SortedSet getSourceFiles()", "+\tpublic Collection getSourceFiles()", "-\t\treturn new TreeSet(this.children.values());", "+\t\tSortedMap sourceFileDatas = new TreeMap();", "+\t\tIterator iter = this.children.values().iterator();", "+\t\twhile (iter.hasNext()) {", "+\t\t\tClassData classData = (ClassData)iter.next();", "+\t\t\tString sourceFileName = classData.getSourceFileName();", "+\t\t\tSourceFileData sourceFileData = (SourceFileData)sourceFileDatas.get(sourceFileName);", "+\t\t\tif (sourceFileData == null)", "+\t\t\t{", "+\t\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "+\t\t\t\tsourceFileDatas.put(sourceFileName, sourceFileData);", "+\t\t\t}", "+\t\t\tsourceFileData.addClassData(classData);", "+\t\t}", "+\t\treturn sourceFileDatas.values();"]}]}