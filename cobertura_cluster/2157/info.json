{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "700f28e079ad632700560c8e60b5be7c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d544f9d6c799075a4f75a288018c238", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/Javancss.java", "commitBeforeChange": "3489fc64f77051fec04401707443567af8c7b241", "commitAfterChange": "95acfde59f275b7fe8a39e024610fda3eb966187", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private List findFiles( List filenames, boolean recursive ) throws IOException", "signatureAfterChange": "     private List findFiles( List filenames, boolean recursive ) throws IOException", "diff": ["-        if ( recursive && ( filenames.size() == 0 ) )", "+        if ( filenames.size() == 0 )", "-            // If no files then add current directory!", "-            filenames.add( \".\" );", "+            if ( recursive )", "+            {", "+                // If no files then add current directory!", "+                filenames.add( \".\" );", "+            }", "+            else", "+            {", "+                return null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932d49056ca1cd1a28aaf1fe88b06ad5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/util/FileFixture.java", "commitBeforeChange": "c622bee22587b63269a18b5c81b772e57972f11c", "commitAfterChange": "930f57b0124b47f1a801a2446dab92d8ba1c474e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void deleteTree(File fileRoot)", "signatureAfterChange": "      protected void deleteTree(File fileRoot)", "diff": ["-        } else {", "-            File[] files = fileRoot.listFiles();", "-            for (int i = 0; i < files.length; i++) {", "-                deleteTree(files[i]);", "-            }", "-            fileRoot.delete();", "+", "+        File[] files = fileRoot.listFiles();", "+        for (int i = 0; i < files.length; i++) {", "+            deleteTree(files[i]);", "+        }", "+        fileRoot.delete();"]}]}