{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9433301847bb4dee028f0c04a579a30", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c846f9ed7a8bf75c207d11cd53843ead", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/files/CopyFiles.java", "commitBeforeChange": "c1776bd55028d6af03640f8059e3887c199a41d6", "commitAfterChange": "4d63a8c9fa3cc11c9152b3635695cdd64fa70119", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate static void copyResourceFromJar(String resourceName, \t\t\tFile directory) throws IOException", "signatureAfterChange": " \tprivate static void copyResourceFromJar(String resourceName, \t\t\tFile directory) throws IOException", "diff": ["-\t\t\t\tin.close();", "+\t\t\t\ttry", "+\t\t\t\t{", "+\t\t\t\t\tin.close();", "+\t\t\t\t}", "+\t\t\t\tcatch (IOException e)", "+\t\t\t\t{", "+\t\t\t\t}", "-\t\t\t\tout.close();", "+\t\t\t\ttry", "+\t\t\t\t{", "+\t\t\t\t\tout.close();", "+\t\t\t\t}", "+\t\t\t\tcatch (IOException e)", "+\t\t\t\t{", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d0460eac0ebf431005b83c8434da3f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/reporting/xml/JUnitXMLParserEntityResolver.java", "commitBeforeChange": "80dc02a26a18bbc7987412c491ef81bbcc411419", "commitAfterChange": "aa28e2370adfa8f4e4ecc6102e67283dbce474d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic InputSource resolveEntity(String publicId, String systemId) \t\t\tthrows SAXException", "signatureAfterChange": "  \tpublic InputSource resolveEntity(String publicId, String systemId) \t\t\tthrows SAXException", "diff": ["-\t\treturn super.resolveEntity(publicId, systemId);", "+\t\tInputSource source = null;", "+", "+\t\ttry {", "+\t\t\tsuper.resolveEntity(publicId, systemId);", "+\t\t} catch (Exception exception) {", "+\t\t    // apparently 1.5 throws an IOException here, but we can't catch it specifically if", "+\t\t    //\twe're not on 1.5 (docs on both kind of say that they throw it)", "+\t\t    //\tactual code on 1.4.2 has it remmed out so that it only throws SAXException  ", "+\t\t\tthrow new SAXException(exception);", "+\t\t}", "+", "+\t\treturn source;"]}]}