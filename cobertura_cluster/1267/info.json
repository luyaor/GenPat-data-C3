{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ece44ca1786dcb23383e17a2174a330", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093d2118f80976bfbf67a4c8aa055438", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "commitAfterChange": "ec1fd1d424f2f4413436786d9da0ddb5f02e1d9d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic double getBranchCoverageRate()", "signatureAfterChange": " \tpublic double getBranchCoverageRate(String methodNameAndDescriptor)", "diff": ["-\t */", "-\tpublic double getBranchCoverageRate()", "-\t{", "-\t\tif (branches.size() == 0)", "-\t\t{", "-\t\t\t// no conditional branches, therefore 100% branch coverage.", "-\t\t\treturn 1d;", "-\t\t}", "-\t\treturn (double)getNumberOfCoveredBranches() / branches.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304a79cb970ccb10d8c0bee6299b5069", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/CoverageData.java", "commitBeforeChange": "c7fb0b8cc80d7d214ae05e943100e9521802d5dd", "commitAfterChange": "7f47a6101d550eed225cbc5d96f9824ad91cbdc7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tdouble getBranchCoverageRate(String methodNameAndSignature);", "signatureAfterChange": " \tpublic double getBranchCoverageRate(String methodNameAndSignature)", "diff": ["-\tdouble getBranchCoverageRate(String methodNameAndSignature);", "+\tpublic double getBranchCoverageRate(String methodNameAndSignature)", "+\t{", "+\t\tint total = 0;", "+\t\tint hits = 0;", "+", "+\t\tIterator iter = conditionals.values().iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tLineInformation next = (LineInformation)iter.next();", "+\t\t\tif (next.getMethodName().equals(methodNameAndSignature))", "+\t\t\t{", "+\t\t\t\ttotal++;", "+\t\t\t\tif (next.getHits() > 0)", "+\t\t\t\t{", "+\t\t\t\t\thits++;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn (double)hits / total;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402983dfb33fa5ede54d02807761fbbc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/CoverageData.java", "commitBeforeChange": "c7fb0b8cc80d7d214ae05e943100e9521802d5dd", "commitAfterChange": "7f47a6101d550eed225cbc5d96f9824ad91cbdc7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tdouble getLineCoverageRate(String methodNameAndSignature);", "signatureAfterChange": " \tpublic double getLineCoverageRate(String methodNameAndSignature)", "diff": ["-\tdouble getLineCoverageRate(String methodNameAndSignature);", "+\tpublic double getLineCoverageRate(String methodNameAndSignature)", "+\t{", "+\t\tint total = 0;", "+\t\tint hits = 0;", "+", "+\t\tIterator iter = lines.values().iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tLineInformation next = (LineInformation)iter.next();", "+\t\t\tif (next.getMethodName().equals(methodNameAndSignature))", "+\t\t\t{", "+\t\t\t\ttotal++;", "+\t\t\t\tif (next.getHits() > 0)", "+\t\t\t\t{", "+\t\t\t\t\thits++;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn (double)hits / total;", "+\t}"]}]}