{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "136811a5c28114f1c65a1543844c06d1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae9c52c70d7811c3d05cdbf4b589c36", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/ClassDataTest.java", "commitBeforeChange": "75bd567f0763b50ee4f0627514c803640ef94bc5", "commitAfterChange": "6959ca47db1806bd8cca8659c0d1e39761ab240b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void setUp()", "signatureAfterChange": "  \tpublic void setUp()", "diff": ["+\t\tdefPckg.setSourceFileName(\"DefaultPackageClass.java\");", "+\t\tfor (int i = 1; i <= 5; i++)", "+\t\t\tdefPckg.addLine(i, \"test\", \"(I)B\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c36d48db8a6d12609177a3f2625c2072", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/InstrumentTask.java", "commitBeforeChange": "50f32c884a179499c78b1a0bbda2e7ac0e21f91a", "commitAfterChange": "98a1c5393bec425291a2a3140327df05e58b1582", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void execute() throws BuildException", "signatureAfterChange": "  \tpublic void execute() throws BuildException", "diff": ["-\t\t\tif (ignoreRegex != null)", "+\t\t\tfor (int i = 0; i < ignoreRegexs.size(); i++) {", "+\t\t\t\tIgnore ignoreRegex = (Ignore)ignoreRegexs.get(i);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5c7de625fea233d65fcf4be2527116f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/InstrumentTask.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void execute() throws BuildException", "signatureAfterChange": "  \tpublic void execute() throws BuildException", "diff": ["+         for (int i = 0; i < ignoreBranchesRegexs.size(); i++) {", "+            IgnoreBranches ignoreBranchesRegex = (IgnoreBranches)ignoreBranchesRegexs.get(i);", "+            builder.addArg(\"--ignoreBranches\", ignoreBranchesRegex.getRegex());", "+         }", "+"]}]}