{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a12b7320fb9c428c001a09cd19edfe9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b18eaba1331f8f494af1413589817e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/SecondPassMethodInstrumenter.java", "commitBeforeChange": "183d0c3e2bdb7ad1fed8ea6b0bb3c36fb353b969", "commitAfterChange": "5388a82c00147b1e54488708cc875b2f28e8ec51", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void instrumentGetClassData()", "signatureAfterChange": " \tprivate void instrumentGetClassData()", "diff": ["+\t//)", "-\t\tmv.visitMethodInsn(INVOKESTATIC,", "-\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "-\t\t\t\t\"getGlobalProjectData\",", "-\t\t\t\t\"()Lnet/sourceforge/cobertura/coveragedata/ProjectData;\");", "+//\t\tmv.visitMethodInsn(INVOKESTATIC,", "+//\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "+//\t\t\t\t\"getGlobalProjectData\",", "+//\t\t\t\t\"()Lnet/sourceforge/cobertura/coveragedata/ProjectData;\");", "-\t\tmv", "-\t\t\t.visitMethodInsn(INVOKEVIRTUAL,", "-\t\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "-\t\t\t\t\t\"getOrCreateClassData\",", "-\t\t\t\t\t\"(Ljava/lang/String;)Lnet/sourceforge/cobertura/coveragedata/ClassData;\");", "+//\t\tmv", "+//\t\t\t.visitMethodInsn(INVOKEVIRTUAL,", "+//\t\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "+//\t\t\t\t\t\"getOrCreateClassData\",", "+//\t\t\t\t\t\"(Ljava/lang/String;)Lnet/sourceforge/cobertura/coveragedata/ClassData;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ba5a25bb6a06a2be43aa3f2684c738", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/SecondPassMethodInstrumenter.java", "commitBeforeChange": "7bf6715900a0a7f2b86cdfc96321716fbe7f974f", "commitAfterChange": "7ff4cde6cb6b71f99139358732f26e11af99b113", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate void instrumentGetClassData()", "signatureAfterChange": "  \tprivate void instrumentOwnerClass()", "diff": ["-\t//)", "-\tprivate void instrumentGetClassData()", "+\tprivate void instrumentOwnerClass()", "-\t\t// Get an instance of ProjectData:", "-\t\t// ProjectData.getGlobalProjectData()", "-//\t\tmv.visitMethodInsn(INVOKESTATIC,", "-//\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "-//\t\t\t\t\"getGlobalProjectData\",", "-//\t\t\t\t\"()Lnet/sourceforge/cobertura/coveragedata/ProjectData;\");", "-", "-\t\t// Get the ClassData object for this class:", "-\t\t// projectData.getClassData(\"name.of.this.class\")", "+\t\t// OwnerClass is the name of the class being instrumented", "-//\t\tmv", "-//\t\t\t.visitMethodInsn(INVOKEVIRTUAL,", "-//\t\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "-//\t\t\t\t\t\"getOrCreateClassData\",", "-//\t\t\t\t\t\"(Ljava/lang/String;)Lnet/sourceforge/cobertura/coveragedata/ClassData;\");"]}]}