{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f57adf3b6c0c040575a52154b3ae8db0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f9865072ddf8f62152d74fc603847f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "9a830b0110b84315c0c267421611842128c2ca35", "commitAfterChange": "2d04adc2554406c41824d5b965907076ecdceb80", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic ClassData getClassData(String fullClassName)", "signatureAfterChange": "  \tpublic Collection getClasses()", "diff": ["-", "-\tpublic ClassData getClassData(String fullClassName) {", "-\t    String keyName = new ClassData(getClassNameIgnoreInner(fullClassName)).getBaseName();", "-\t    return (ClassData) children.get(keyName);", "-\t}", "+\tpublic Collection getClasses()", "+\t{", "+\t\tCollection classes = new TreeSet();", "+\t\tIterator iter = this.children.values().iterator();", "+\t\twhile (iter.hasNext()) {", "+\t\t\tSourceFileData sourceFileData = (SourceFileData)iter.next();", "+\t\t\tclasses.addAll(sourceFileData.getChildren());", "+\t\t}", "+\t\treturn classes;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe3af304bf877639cec447c114b1393", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Clazz.java", "commitBeforeChange": "7cdece92ea0660e086a27d07d0eef3df4b583a23", "commitAfterChange": "100512ee483a0d8eebc3eb78a5d8913b7b64ddb6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void setNumberOfLines(int numberOfLines)", "signatureAfterChange": " \t \tpublic Clazz(String longName, CoverageData data)", "diff": ["+\t", "+\tpublic Clazz(String longName, CoverageData data) {", "+\t    this(longName);", "+", "+\t\tsetRawCoverageData(data);", "+", "+\t\tIterator iter = data.getValidLineNumbers().iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tint lineNumber = ((Integer)iter.next()).intValue();", "+\t\t\tlong numberOfHits = data.getHitCount(lineNumber);", "+\t\t\taddLine(lineNumber, numberOfHits);", "+\t\t}", "-", "-\tpublic void setNumberOfLines(int numberOfLines)", "-\t{", "-\t\tthis.numberOfLines = numberOfLines;", "-\t}"]}]}