{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3a03c9eca09a5fe1a2d81e746081526", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13744f2ffab8f28f65d3a1f3d7bbf4f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/merge/Main.java", "commitBeforeChange": "71bffff9fec5f41ade657729e24a619e46891351", "commitAfterChange": "36f21cc49013028ce3d7d19f3837a4ae7413247a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic Main(String[] args)", "signatureAfterChange": "  \tpublic Main(String[] args)", "diff": ["+\t\tString baseDir = \".\";", "+\t\t\telse if (args[i].equals(\"--basedir\"))", "+\t\t\t\tbaseDir = args[++i];", "-\t\t\t\tfilesToMerge.add(args[i]);", "+\t\t\t\tfilesToMerge.add(baseDir + File.separator + args[i]);", "-\t\t\tprojectData.merge(projectDataNew);", "+\t\t\tif (projectDataNew != null)", "+\t\t\t\tprojectData.merge(projectDataNew);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a2e41c92e8105be65c376ac363688d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "7a6cf9ee7c01328fd060bf78a56186190300c13b", "commitAfterChange": "c26f5a170c752d9d1d5b884dd7eb60b982637269", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "signatureAfterChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "diff": ["+\t\tString baseDir = null;", "-\t\t\t\tfinder.addBaseDirectory(new File(args[++i]));", "+\t\t\t\tbaseDir = args[++i];", "-\t\t\t\tfinder.addSourceFilePath(args[i]);", "+            \tif( baseDir==null) {", "+            \t\tfinder.addSourceDirectory( args[i]);", "+            \t} else {", "+            \t\tfinder.addSourceFile( baseDir, args[i]);", "+            \t}", "+\t\tComplexityCalculator complexity = new ComplexityCalculator(finder);", "-\t\t\tnew HTMLReport(projectData, destinationDir, finder);", "+\t\t\tnew HTMLReport(projectData, destinationDir, finder, complexity);", "-\t\t\tnew XMLReport(projectData, destinationDir, finder);", "+\t\t\tnew XMLReport(projectData, destinationDir, finder, complexity);"]}]}