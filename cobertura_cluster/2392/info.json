{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "115f4f6f548e2836ef4ead1d64c3a9f6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1b600950fc68a32c60d685b93d906c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/instrument/tp/ClassMap.java", "commitBeforeChange": "3c0d283cf0378c0ec1f697edc5ec58524bf1317f", "commitAfterChange": "006cc9b9edec5a7927621ebd2e53b02586a317fb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Integer getCounterIdForJumpFalse(int eventId)", "signatureAfterChange": "  \tpublic Integer getCounterIdForJumpFalse(int eventId)", "diff": ["-\t\tJumpTouchPointDescriptor jumpTouchPointDescriptor = (JumpTouchPointDescriptor) eventId2touchPointDescriptor", "-\t\t\t\t.get(eventId);", "-\t\tif (jumpTouchPointDescriptor != null) {", "-\t\t\treturn jumpTouchPointDescriptor.getCounterIdForFalse();", "+\t\tif (eventId2touchPointDescriptor.get(eventId) instanceof JumpTouchPointDescriptor) {", "+\t\t\tJumpTouchPointDescriptor jumpTouchPointDescriptor = (JumpTouchPointDescriptor) eventId2touchPointDescriptor", "+\t\t\t\t\t.get(eventId);", "+\t\t\tif (jumpTouchPointDescriptor != null) {", "+\t\t\t\treturn jumpTouchPointDescriptor.getCounterIdForFalse();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "461f31deb015086136f52b7600c14a30", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/instrument/tp/ClassMap.java", "commitBeforeChange": "3c0d283cf0378c0ec1f697edc5ec58524bf1317f", "commitAfterChange": "006cc9b9edec5a7927621ebd2e53b02586a317fb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Integer getCounterIdForJumpTrue(int eventId)", "signatureAfterChange": "  \tpublic Integer getCounterIdForJumpTrue(int eventId)", "diff": ["-\t\tJumpTouchPointDescriptor jumpTouchPointDescriptor = (JumpTouchPointDescriptor) eventId2touchPointDescriptor", "-\t\t\t\t.get(eventId);", "-\t\tif (jumpTouchPointDescriptor != null) {", "-\t\t\treturn jumpTouchPointDescriptor.getCounterIdForTrue();", "+\t\tif (eventId2touchPointDescriptor.get(eventId) instanceof JumpTouchPointDescriptor) {", "+\t\t\tJumpTouchPointDescriptor jumpTouchPointDescriptor = (JumpTouchPointDescriptor) eventId2touchPointDescriptor", "+\t\t\t\t\t.get(eventId);", "+\t\t\tif (jumpTouchPointDescriptor != null) {", "+\t\t\t\treturn jumpTouchPointDescriptor.getCounterIdForTrue();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccdc251e7ed18a2aceffb372990e1299", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/AbstractCodeProvider.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \tprivate void classMapContent(ClassVisitor cv, int nr, List<TouchPointDescriptor> touchPointDescriptors)", "signatureAfterChange": " \t\t \tprivate void classMapContent(ClassVisitor cv, int nr, List<TouchPointDescriptor> touchPointDescriptors)", "diff": ["-\t\t\t}else if (tpd instanceof SwitchTouchPointDescriptor){", "-\t\t\t\tSwitchTouchPointDescriptor stpd=(SwitchTouchPointDescriptor)tpd;\t\t\t", "+\t\t\t}else if (tpd instanceof SwitchTouchPointDescriptor) {", "+\t\t\t\tSwitchTouchPointDescriptor stpd=(SwitchTouchPointDescriptor)tpd;", "+\t\t\t\tfinal String enum_sign = ((SwitchTouchPointDescriptor) tpd).getEnumType();", "+\t\t\t\tif (enum_sign == null) {", "+\t\t\t\t\tmv.visitLdcInsn(Integer.MAX_VALUE);", "+\t\t\t\t} else {", "+\t\t\t\t\tmv.visitMethodInsn(Opcodes.INVOKESTATIC, enum_sign, \"values\", \"()[L\" + enum_sign + \";\");", "+\t\t\t\t\tmv.visitInsn(Opcodes.ARRAYLENGTH);", "+\t\t\t\t}\t\t\t\t\t\t\t\t", "-\t\t\t\tmv.visitMethodInsn(Opcodes.INVOKEINTERFACE, CLASSMAP_LISTENER_INTERNALNAME,\"putSwitchTouchPoint\",\"(I[I)V\");\t\t\t\t", "+\t\t\t\tmv.visitMethodInsn(Opcodes.INVOKEINTERFACE, CLASSMAP_LISTENER_INTERNALNAME,\"putSwitchTouchPoint\",\"(II[I)V\");\t\t\t\t"]}]}