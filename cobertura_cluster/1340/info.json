{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "574fa7a849819d40d697ee0855daa32c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c4dcecca37f647c8dc733bab5846fb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/test/JavancssTest.java", "commitBeforeChange": "f44527006156d82d108277efea7d0bf4a4cd5a22", "commitAfterChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected void _doIt()          throws Exception", "signatureAfterChange": "      protected void _doIt()         throws Exception", "diff": ["-    protected void _doIt() ", "+    protected void _doIt()", "-        Util.debug( this, \"_doIt().testDir: \" + testDir );", "+        Util.debug( this, \"_doIt().testDir: \" + getTestDir() );", "-        boolean bSkip = false;", "-        /*", "-        bSkip = true;", "-        // */", "+        testNcss();", "+", "+        testNcssAndMore();", "+", "+        testJavadocLines();", "+", "+        testJavadocs();", "+", "+        testCCN();", "+", "+        testEncoding();", "+", "+        XmlFormatterTest xmlTest = new XmlFormatterTest( this );", "+        xmlTest.setTestDir( getTestDir() );", "+        xmlTest.run();", "+        setTests( xmlTest );", "+    }", "-        if ( !bSkip ) {", "-            _checkJavadocLines();", "-                ", "-            _checkInnerClasses();", "-    ", "-            // Nr. 1", "-            pJavancss = new Javancss( new File( testDir, \"Test1.java\" ) );", "-            int ncss1 = pJavancss.getNcss();", "-            bugIf( ncss1 != 318, \"Ncss: \" + ncss1 );", "-    ", "-            // Nr. 2", "-            pJavancss = new Javancss( new File( testDir, \"Test2.java\" ) );", "-            bugIf( pJavancss.getNcss() != 8 );", "-            // Nr. 3", "-            pJavancss = new Javancss( new File( testDir, \"Test3.java\" ) );", "-            bugIf( pJavancss.getNcss() != 69 );", "-            // Nr. 4", "-            pJavancss = new Javancss( new File( testDir, \"Test4.java\" ) );", "-            bugIf( pJavancss.getNcss() != 11 );", "-            // Nr. 5", "-            pJavancss = new Javancss( new File( testDir, \"Test5.java\" ) );", "-            bugIf( pJavancss.getNcss() != 16 );", "-            // Nr. 6", "-            pJavancss = new Javancss( new File( testDir, \"Test6.java\" ) );", "-            int ncss6 = pJavancss.getNcss();", "-            bugIf( ncss6 != 565, \"Ncss: \" + ncss6 );", "-            bugIf( pJavancss.getLOC() != 1254, \"LOC: \" + pJavancss.getLOC() );", "-            // Nr. 8", "-            pJavancss = new Javancss( new File( testDir, \"Test7.java\" ) );", "-            bugIf( pJavancss.getNcss() != 30, \"Ncss: \" + pJavancss.getNcss() );", "-            // Nr. 9", "-            Javancss pJavancss8 = new Javancss( new File( testDir, \"Test8.java\" ) );", "-            bugIf( pJavancss.getNcss() != pJavancss8.getNcss() );", "-            // Nr. 10", "-            pJavancss = new Javancss( new File( testDir, \"Test9.java\" ) );", "-            bugIf( ncss1 != pJavancss.getLOC(), \"LOC: \" + pJavancss.getLOC() );", "-            // Nr. 11", "-            pJavancss = new Javancss( new File( testDir, \"Test10.java\" ) );", "-            bugIf( pJavancss.getLOC() != ncss6, \"LOC: \" + pJavancss.getLOC() );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() );", "-            pJavancss = new Javancss( new File( testDir, \"Test11.java\" ) );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "-                            + pJavancss.getLOC() );", "-            pJavancss = new Javancss( new File( testDir, \"Test12.java\" ) );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "-                            + pJavancss.getLOC() );", "-            List vFunctions = pJavancss.getFunctionMetrics();", "-            String sFirstFunction = (String) ( (List) vFunctions.get( 0 ) ).get( FCT_NAME );", "-            bugIf( sFirstFunction == null );", "-            /* System.out.println( sFirstFunction ); */", "-            bugIf( !sFirstFunction.equals( \"Test12.readFile(URL)\" ), sFirstFunction );", "-            pJavancss = new Javancss( new File( testDir, \"Test13.java\" ) );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "-                            + pJavancss.getLOC() );", "-            pJavancss = new Javancss( new File( testDir, \"Test14.java\" ) );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "-                            + pJavancss.getLOC() );", "-            pJavancss = new Javancss( new File( testDir, \"Test15.java\" ) );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "-                            + pJavancss.getLOC() );", "-            pJavancss = new Javancss( new File( testDir, \"Test16.java\" ) );", "-            bugIf( pJavancss.getNcss() != 4 );", "-            pJavancss = new Javancss( new File( testDir, \"Test17.java\" ) );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "-                            + pJavancss.getLOC() );", "-            pJavancss = new Javancss( new File( testDir, \"Test18.java\" ) );", "-            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "-                            + pJavancss.getLOC() );", "-            // Nr. 22", "-            pJavancss = new Javancss( new File( testDir, \"Test19.java\" ) );", "-            vFunctions = pJavancss.getFunctionMetrics();", "-            sFirstFunction = (String) ( (List) vFunctions.get( 0 ) ).get( FCT_NAME );", "-            bugIf( !sFirstFunction.equals( \"test.Test19.foo(String[],Controller)\" ), sFirstFunction );", "-            sFirstFunction = (String) ( (List) vFunctions.get( 3 ) ).get( FCT_NAME );", "-            bugIf( !sFirstFunction.equals( \"test.Test19.main(String[])\" ) );", "-            // Nr. 24", "-            pJavancss = new Javancss( new File( testDir, \"Test20.java\" ) );", "-            bugIf( pJavancss.getNcss() != 46, \"NCSS: \" + pJavancss.getNcss() );", "-            // Nr. 25", "-            pJavancss = new Javancss( new File( testDir, \"Test21.java\" ) );", "-            bugIf( pJavancss.getNcss() != 67, \"NCSS: \" + pJavancss.getNcss() );", "-            // Nr. 26", "-            pJavancss = new Javancss( new File( testDir, \"Test22.java\" ) );", "-            bugIf( pJavancss.getNcss() != 283, \"NCSS: \" + pJavancss.getNcss() );", "-            // Nr. 27", "-            pJavancss = new Javancss( new File( testDir, \"Test23.java\" ) );", "-            bugIf( pJavancss.getNcss() != 10, \"NCSS: \" + pJavancss.getNcss() );", "-            vFunctions = pJavancss.getFunctionMetrics();", "-            bugIf( vFunctions.size() != 7 );", "-            bugIf( new Javancss( new File( testDir, \"Test24.java\" ) ).getFunctionMetrics().size() != vFunctions.size() );", "-            // Nr. 30", "-            pJavancss = new Javancss( new File( testDir, \"Test25.java\" ) );", "-            bugIf( pJavancss.getNcss() != 12 );", "-            bugIf( pJavancss.getFunctionMetrics().size() != 9 );", "-            // Nr. 32", "-            pJavancss = new Javancss( new File( testDir, \"Test26.java\" ) );", "-            bugIf( pJavancss.getNcss() != 47, \"NCSS: \" + pJavancss.getNcss() );", "-            // Nr. 33", "-            pJavancss = new Javancss( new File( testDir, \"Test27.java\" ) );", "-            bugIf( pJavancss.getNcss() != 4, \"NCSS: \" + pJavancss.getNcss() );", "-            // Nr. 34", "-            pJavancss = new Javancss( new File( testDir, \"Test28.java\" ) );", "-            bugIf( pJavancss.getNcss() != 465, \"NCSS: \" + pJavancss.getNcss() );", "-            // Nr. 35", "-            String sTogether;", "-            String sTest11 = \"\";", "-            String sTest12 = \"\";", "-            try", "-            {", "-                sTest11 = FileUtil.readFile( new File( testDir, \"Test11.java\" ).getAbsolutePath() );", "-                sTest12 = FileUtil.readFile( new File( testDir, \"Test12.java\" ).getAbsolutePath() );", "-            }", "-            catch ( Exception e )", "-            {", "-                bugIf( true );", "-            }", "-            sTogether = sTest11 + sTest12;", "-            pJavancss = new Javancss( new StringReader( sTogether ) );", "-            vFunctions = pJavancss.getFunctionMetrics();", "-            Util.debug( \"JavancssTest._doIt().vFunctions: \" + vFunctions );", "-            sFirstFunction = (String) ( (List) vFunctions.get( 0 ) ).get( FCT_NAME );", "-            bugIf( !sFirstFunction.equals( \"ccl.util.Test11.atoi(String)\" ) );", "-            String sSomeFunction = (String) ( (List) vFunctions.get( 32 ) ).get( FCT_NAME );", "-            bugIf( !sSomeFunction.equals( \"Test12.readFile(URL)\" ), \"Function: \" + sSomeFunction );", "-            List vPackages = pJavancss.getPackageMetrics();", "-            bugIf( vPackages.size() != 2 );", "-            String[] asArg = new String[3];", "-            asArg[0] = new File( testDir, \"Test11.java\" ).getAbsolutePath();", "-            asArg[1] = asArg[0];", "-            asArg[2] = new File( testDir, \"Test12.java\" ).getAbsolutePath();", "-            int ncss38 = pJavancss.getNcss();", "-            ", "-            // turn stdout off", "-            PrintStream psStdout = System.out;", "-            System.setOut( new PrintStream( new ByteArrayOutputStream() ) );", "-            ", "-            pJavancss = new Javancss(asArg, \"$Header: /home/clemens/src/java/javancss/src/javancss/test/RCS/JavancssTest.java,v 1.34 2006/10/06 11:46:43 clemens Exp clemens $\");", "-            ", "-            // turn stdout on", "-            System.setOut( psStdout );", "-            vPackages = pJavancss.getPackageMetrics();", "-            bugIf( vPackages.size() != 2 );", "-            bugIf( ncss38 == pJavancss.getNcss() );", "-            // Nr. 41", "-            pJavancss = new Javancss( new File( testDir, \"Test29.java\" ) );", "-            bugIf( pJavancss.getNcss() != 1, \"NCSS: \" + pJavancss.getNcss() );", "-            // Nr. 42", "-            // missing lf in last line/<EOF> not in single line", "-            try", "-            {", "-                pJavancss = new Javancss( new File( testDir, \"Test35.java\" ) );", "-                bugIf( pJavancss.getNcss() != 1 );", "-            }", "-            catch ( Exception eEOF )", "-            {", "-                bugIf( true, \"}<EOF>\" );", "-            }", "-            try", "-            {", "-                pJavancss = new Javancss( new File( testDir, \"Test36.java\" ) );", "-                bugIf( pJavancss.getNcss() != 1 );", "-            }", "-            catch ( Error eEOF )", "-            {", "-                bugIf( true, \"//<EOF>\" );", "-            }", "-            try", "-            {", "-                pJavancss = new Javancss( new File( testDir, \"Test37.java\" ) );", "-                bugIf( pJavancss.getNcss() != 1 );", "-            }", "-            catch ( Error eCTRLZ )", "-            {", "-                bugIf( true, \"//ctrl-Z\" );", "-            }", "-            try", "-            {", "-                pJavancss = new Javancss( new File( testDir, \"Test38.java\" ) );", "-                bugIf( pJavancss.getNcss() != 1 );", "-            }", "-            catch ( Error eCTRLZ )", "-            {", "-                bugIf( true, \"0x0actrl-Z\" );", "-            }", "-            // Nr. 46", "-            // semicolons not allowed by JLS, but not counted anyway.", "-            try", "-            {", "-                pJavancss = new Javancss( new File( testDir, \"Test39.java\" ) );", "-                bugIf( pJavancss.getNcss() != 5 );", "-            }", "-            catch ( Error eEmptyStatements )", "-            {", "-                bugIf( true, \"Empty statments.\" );", "-            }", "-            // Nr. 47", "-            // ;; in java.sql.Connection", "-            try", "-            {", "-                pJavancss = new Javancss( new File( testDir, \"Test32.java\" ) );", "-                bugIf( pJavancss.getNcss() != 26, \"Test32.java: ncss should be 26 but is: \" + pJavancss.getNcss() );", "-            }", "-            catch ( Error eJavaSQLConnection )", "-            {", "-                bugIf( true, \"java.sql.Connection double semicolon\" );", "-            }", "-            testCCN( testDir );", "-            // javancss parsed a file which it shouldn't", "-            pJavancss = new Javancss( new File( testDir, \"Test42.java\" ) );", "-            bugIf( pJavancss.getLastErrorMessage() == null, \"Test42 should be parsed *and* result in an exception.\" );", "-            // file containing just ;", "-            pJavancss = new Javancss( new File( testDir, \"Test43.java\" ) );", "-            bugIf( pJavancss.getNcss() != 0 );", "-            // Test if javancss continues after running across a parse error", "-            // Test42,java has an errror, so use two other file and this and", "-            // take a look if it finishes with right result.", "-            pJavancss = new Javancss( new File( testDir, \"Test1.java\" ) );", "-            int ncss57 = pJavancss.getNcss();", "-            pJavancss = new Javancss( new File( testDir, \"Test2.java\" ) );", "-            ncss57 += pJavancss.getNcss();", "-            List vFiles = new ArrayList();", "-            vFiles.add( new File( testDir, \"Test1.java\" ) );", "-            vFiles.add( new File( testDir, \"Test42.java\" ) );", "-            vFiles.add( new File( testDir, \"Test2.java\" ) );", "-            pJavancss = new Javancss( vFiles );", "-            bugIf( pJavancss.getNcss() != ncss57, \"ncss57: \" + ncss57 + \" pJavancss.getNcss(): \" + pJavancss.getNcss() );", "-            // Bug reported by .. .", "-            // Test48.java should be parsed.", "-            pJavancss = new Javancss( new File( testDir, \"Test48.java\" ) );", "-            bugIf( pJavancss.getNcss() <= 0, \"Parsing file Test48.java failed!\" );", "-", "-            pJavancss = new Javancss( new File( testDir, \"Test49.java\" ) );", "-            bugIf( pJavancss.getNcss() != 3, \"Parsing file Test49.java failed!\" );", "-            pJavancss = new Javancss( new File( testDir, \"Test50.java\" ) );", "-            bugIf( pJavancss.getNcss() <= 0, \"Parsing file Test50.java failed!\" );", "-", "-            pJavancss = new Javancss( new File( testDir, \"Test51.java\" ) );", "-            bugIf( pJavancss.getNcss() != 8, \"Parsing file Test51.java failed!\" );", "-", "-            pJavancss = new Javancss( new File( testDir, \"Test52.java\" ) );", "-            int test52ncss = pJavancss.getNcss();", "-            bugIf( test52ncss != 12, \"Parsing file Test52.java failed. Ncss is \" + test52ncss + \" and not 12.\" );", "-", "-            pJavancss = new Javancss( new File( testDir, \"Test53.java\" ) );", "-            int test53ncss = pJavancss.getNcss();", "-            bugIf( test53ncss != 4, \"Parsing file Test53.java failed. Ncss is \" + test53ncss + \" and not 4.\" );", "-", "-            _doNcssTest( 54, 9 );", "-            _doNcssTest( 55, 5 );", "-            _doNcssTest( 56 );", "-            _doNcssTest( 57 );", "-", "-        pJavancss = measureTestFile( testDir, 56 );", "-        String sOutput56 = pJavancss.printPackageNcss();", "-        sOutput56 += \"\\n\";", "-        sOutput56 += pJavancss.printObjectNcss();", "-        sOutput56 += \"\\n\";", "-        sOutput56 += pJavancss.printFunctionNcss();", "-        sOutput56 = Util.replace( sOutput56, \"\\r\\n\", \"\\n\" );", "-        String sCompare56 = FileUtil.readFile( new File( testDir, \"Output56.txt\" ).getAbsolutePath() );", "-        Assert( sOutput56.equals( sCompare56 ), \"File test/Output56.txt and javancss output differs:\\n\" + sOutput56 );", "-        XmlFormatterTest xmlTest = new XmlFormatterTest( this );", "-        xmlTest.setTestDir( testDir );", "-        xmlTest.run();", "-        setTests( xmlTest );", "-        _doNcssTest( 58, 37 );", "-        _doNcssTest( 59, 122 );", "-        _doNcssTest( 60, 35 );", "-        _doNcssTest( 61, 203 );", "-        _doNcssTest( 62, 616 );", "-        _doNcssTest( 63, 330 );", "-        _doNcssTest( 64, 70 );", "-        _doNcssTest( 65, 301 );", "-        _doNcssTest( 66, 3 );", "-        _doNcssTest( 67, 31 );", "-        // check that javadocs are counted correctly", "-        // after patches for additional comment counting", "-        pJavancss = new Javancss( new File( testDir, \"Test32.java\" ) );", "-        String sOutput32 = pJavancss.printPackageNcss();", "-        sOutput32 += \"\\n\";", "-        sOutput32 += pJavancss.printObjectNcss();", "-        sOutput32 += \"\\n\";", "-        sOutput32 += pJavancss.printFunctionNcss();", "-        sOutput32 = Util.replace( sOutput32, \"\\r\\n\", \"\\n\" );", "-        String sCompare32 = FileUtil.readFile( new File( testDir, \"Output32.txt\" ).getAbsolutePath() );", "-        Assert( sOutput32.equals( sCompare32 ), \"File test/Output32.txt and javancss output differs:\\n\" + sOutput32 );", "-        _doNcssTest( 68, 3 );", "-        _doJvdcsTest( 68, 2 );", "-", "-        _checkJavadocs();", "-        _doNcssTest( 69, 1 );", "-        _doNcssTest( 73, 1 );", "-        _doNcssTest( 74, 2 );", "-        _doNcssTest( 75, 584 );", "-        _doNcssTest( 76, 404 );", "-        _doNcssTest( 77, 48 );", "-        _doNcssTest( 78, 35 );", "-        _doNcssTest( 79, 1345 );", "-        _doNcssTest( 80, 96 );", "-        _doNcssTest( 81, 92 );", "-        _doNcssTest( 82, 26 );", "-        _doNcssTest( 83, 2 );", "-        _doNcssTest( 84, 55 );", "-        _doNcssTest( 85, 242 );", "-        _doNcssTest( 86, 22 );", "-        _doNcssTest( 87, 8 );", "-        _doNcssTest( 88, 11 );", "-        _doNcssTest( 89, 65 );", "-        _doNcssTest( 90, 494 );", "-        _doNcssTest( 91, 30 );", "-        _doNcssTest( 92, 6 );", "-        _doNcssTest( 93, 38 );", "-        _doNcssTest( 94, 3 );", "-        _doNcssTest( 95, 10 );", "-        _doNcssTest( 96, 3 );", "-        _doNcssTest( 97, 3 );", "-        _doNcssTest( 98, 37 );", "-        _doNcssTest( 99, 243 );", "-        _doNcssTest( 100, 5 );", "-        _doNcssTest( 101, 256 );", "-        _doNcssTest( 102, 10 );", "-        _doNcssTest( 103, 3 );", "-        _doNcssTest( 104, 3 );", "-        _doNcssTest( 105, 5 );", "-        _doNcssTest( 106, 10 );", "-        _doNcssTest( 107, 9 );", "-        _doNcssTest( 108, 2 );", "-        _doNcssTest( 109, 2 );", "-        _doNcssTest( 110, 1 );", "-        _doNcssTest( 111, 4 );", "-        _doNcssTest( 112, 3 );", "-        _doNcssTest( 113, 13 );", "-        _doNcssTest( 114, 3 );", "-        _doNcssTest( 115, 11663 );", "-        _doNcssTest( 116, 12 );", "-        _doNcssTest( 117, 15 );", "-        _doNcssTest( 119, 2 );", "-        _doNcssTest( 120, 3 );", "-        _doNcssTest( 121, 5 );", "-        _doJvdcsTest( 121, 2 );", "-        _doJvdcsTest( 122, 1 );", "-        _doNcssTest( 123, 4 );", "-        _doNcssTest( 124, 7 );", "-        _doNcssTest( 125, 2 );", "-        _doNcssTest( 126, 13 );", "-        _doNcssTest( 127, 3 );", "-        _doNcssTest( 128, 3 );", "-        _doNcssTest( 129, 6 );", "-        _doNcssTest( 130, 5 );", "-        _doNcssTest( 131, 6 );", "-        _doNcssTest( 132, 12 );", "-        _doNcssTest( 134, 4 );", "-        _doNcssEncodingTest();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7d847e4f6e52e4300c3377a4c37bbdc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/test/JavancssTest.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void _doIt()          throws Exception", "signatureAfterChange": "      protected void _doIt()          throws Exception", "diff": ["-        String sLocalPath = _sTestDir; //FileUtil.getClassPath(this);", "-        Util.debug( this, \"_doIt()._sTestDir: \" + _sTestDir );", "+        Util.debug( this, \"_doIt().testDir: \" + testDir );", "-                _checkJavadocLines();", "+            _checkJavadocLines();", "-        _checkInnerClasses();", "+            _checkInnerClasses();", "+    ", "+            // Nr. 1", "+            pJavancss = new Javancss( new File( testDir, \"Test1.java\" ) );", "+            int ncss1 = pJavancss.getNcss();", "+            bugIf( ncss1 != 318, \"Ncss: \" + ncss1 );", "+    ", "+            // Nr. 2", "+            pJavancss = new Javancss( new File( testDir, \"Test2.java\" ) );", "+            bugIf( pJavancss.getNcss() != 8 );", "+            // Nr. 3", "+            pJavancss = new Javancss( new File( testDir, \"Test3.java\" ) );", "+            bugIf( pJavancss.getNcss() != 69 );", "+            // Nr. 4", "+            pJavancss = new Javancss( new File( testDir, \"Test4.java\" ) );", "+            bugIf( pJavancss.getNcss() != 11 );", "+            // Nr. 5", "+            pJavancss = new Javancss( new File( testDir, \"Test5.java\" ) );", "+            bugIf( pJavancss.getNcss() != 16 );", "+            // Nr. 6", "+            pJavancss = new Javancss( new File( testDir, \"Test6.java\" ) );", "+            int ncss6 = pJavancss.getNcss();", "+            bugIf( ncss6 != 565, \"Ncss: \" + ncss6 );", "+            bugIf( pJavancss.getLOC() != 1254, \"LOC: \" + pJavancss.getLOC() );", "+            // Nr. 8", "+            pJavancss = new Javancss( new File( testDir, \"Test7.java\" ) );", "+            bugIf( pJavancss.getNcss() != 30, \"Ncss: \" + pJavancss.getNcss() );", "+            // Nr. 9", "+            Javancss pJavancss8 = new Javancss( new File( testDir, \"Test8.java\" ) );", "+            bugIf( pJavancss.getNcss() != pJavancss8.getNcss() );", "+            // Nr. 10", "+            pJavancss = new Javancss( new File( testDir, \"Test9.java\" ) );", "+            bugIf( ncss1 != pJavancss.getLOC(), \"LOC: \" + pJavancss.getLOC() );", "+            // Nr. 11", "+            pJavancss = new Javancss( new File( testDir, \"Test10.java\" ) );", "+            bugIf( pJavancss.getLOC() != ncss6, \"LOC: \" + pJavancss.getLOC() );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() );", "+            pJavancss = new Javancss( new File( testDir, \"Test11.java\" ) );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "+                            + pJavancss.getLOC() );", "+            pJavancss = new Javancss( new File( testDir, \"Test12.java\" ) );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "+                            + pJavancss.getLOC() );", "+            List vFunctions = pJavancss.getFunctionMetrics();", "+            String sFirstFunction = (String) ( (List) vFunctions.get( 0 ) ).get( FCT_NAME );", "+            bugIf( sFirstFunction == null );", "+            /* System.out.println( sFirstFunction ); */", "+            bugIf( !sFirstFunction.equals( \"Test12.readFile(URL)\" ), sFirstFunction );", "+            pJavancss = new Javancss( new File( testDir, \"Test13.java\" ) );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "+                            + pJavancss.getLOC() );", "+            pJavancss = new Javancss( new File( testDir, \"Test14.java\" ) );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "+                            + pJavancss.getLOC() );", "+            pJavancss = new Javancss( new File( testDir, \"Test15.java\" ) );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "+                            + pJavancss.getLOC() );", "+            pJavancss = new Javancss( new File( testDir, \"Test16.java\" ) );", "+            bugIf( pJavancss.getNcss() != 4 );", "+            pJavancss = new Javancss( new File( testDir, \"Test17.java\" ) );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "+                            + pJavancss.getLOC() );", "+            pJavancss = new Javancss( new File( testDir, \"Test18.java\" ) );", "+            bugIf( pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() + \", LOC: \"", "+                            + pJavancss.getLOC() );", "+            // Nr. 22", "+            pJavancss = new Javancss( new File( testDir, \"Test19.java\" ) );", "+            vFunctions = pJavancss.getFunctionMetrics();", "+            sFirstFunction = (String) ( (List) vFunctions.get( 0 ) ).get( FCT_NAME );", "+            bugIf( !sFirstFunction.equals( \"test.Test19.foo(String[],Controller)\" ), sFirstFunction );", "+            sFirstFunction = (String) ( (List) vFunctions.get( 3 ) ).get( FCT_NAME );", "+            bugIf( !sFirstFunction.equals( \"test.Test19.main(String[])\" ) );", "+            // Nr. 24", "+            pJavancss = new Javancss( new File( testDir, \"Test20.java\" ) );", "+            bugIf( pJavancss.getNcss() != 46, \"NCSS: \" + pJavancss.getNcss() );", "+            // Nr. 25", "+            pJavancss = new Javancss( new File( testDir, \"Test21.java\" ) );", "+            bugIf( pJavancss.getNcss() != 67, \"NCSS: \" + pJavancss.getNcss() );", "+            // Nr. 26", "+            pJavancss = new Javancss( new File( testDir, \"Test22.java\" ) );", "+            bugIf( pJavancss.getNcss() != 283, \"NCSS: \" + pJavancss.getNcss() );", "+            // Nr. 27", "+            pJavancss = new Javancss( new File( testDir, \"Test23.java\" ) );", "+            bugIf( pJavancss.getNcss() != 10, \"NCSS: \" + pJavancss.getNcss() );", "+            vFunctions = pJavancss.getFunctionMetrics();", "+            bugIf( vFunctions.size() != 7 );", "+            bugIf( new Javancss( new File( testDir, \"Test24.java\" ) ).getFunctionMetrics().size() != vFunctions.size() );", "+            // Nr. 30", "+            pJavancss = new Javancss( new File( testDir, \"Test25.java\" ) );", "+            bugIf( pJavancss.getNcss() != 12 );", "+            bugIf( pJavancss.getFunctionMetrics().size() != 9 );", "+            // Nr. 32", "+            pJavancss = new Javancss( new File( testDir, \"Test26.java\" ) );", "+            bugIf( pJavancss.getNcss() != 47, \"NCSS: \" + pJavancss.getNcss() );", "+            // Nr. 33", "+            pJavancss = new Javancss( new File( testDir, \"Test27.java\" ) );", "+            bugIf( pJavancss.getNcss() != 4, \"NCSS: \" + pJavancss.getNcss() );", "+            // Nr. 34", "+            pJavancss = new Javancss( new File( testDir, \"Test28.java\" ) );", "+            bugIf( pJavancss.getNcss() != 465, \"NCSS: \" + pJavancss.getNcss() );", "+            // Nr. 35", "+            String sTogether;", "+            String sTest11 = \"\";", "+            String sTest12 = \"\";", "+            try", "+            {", "+                sTest11 = FileUtil.readFile( new File( testDir, \"Test11.java\" ).getAbsolutePath() );", "+                sTest12 = FileUtil.readFile( new File( testDir, \"Test12.java\" ).getAbsolutePath() );", "+            }", "+            catch ( Exception e )", "+            {", "+                bugIf( true );", "+            }", "+            sTogether = sTest11 + sTest12;", "+            pJavancss = new Javancss( new StringReader( sTogether ) );", "+            vFunctions = pJavancss.getFunctionMetrics();", "+            Util.debug( \"JavancssTest._doIt().vFunctions: \" + vFunctions );", "+            sFirstFunction = (String) ( (List) vFunctions.get( 0 ) ).get( FCT_NAME );", "+            bugIf( !sFirstFunction.equals( \"ccl.util.Test11.atoi(String)\" ) );", "+            String sSomeFunction = (String) ( (List) vFunctions.get( 32 ) ).get( FCT_NAME );", "+            bugIf( !sSomeFunction.equals( \"Test12.readFile(URL)\" ), \"Function: \" + sSomeFunction );", "+            List vPackages = pJavancss.getPackageMetrics();", "+            bugIf( vPackages.size() != 2 );", "+            String[] asArg = new String[3];", "+            asArg[0] = new File( testDir, \"Test11.java\" ).getAbsolutePath();", "+            asArg[1] = asArg[0];", "+            asArg[2] = new File( testDir, \"Test12.java\" ).getAbsolutePath();", "+            int ncss38 = pJavancss.getNcss();", "+            ", "+            // turn stdout off", "+            PrintStream psStdout = System.out;", "+            System.setOut( new PrintStream( new ByteArrayOutputStream() ) );", "+            ", "+            pJavancss = new Javancss(asArg, \"$Header: /home/clemens/src/java/javancss/src/javancss/test/RCS/JavancssTest.java,v 1.34 2006/10/06 11:46:43 clemens Exp clemens $\");", "+            ", "+            // turn stdout on", "+            System.setOut( psStdout );", "-        // Nr. 1", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test1.java\"));", "-        int ncss1 = pJavancss.getNcss();", "-        bugIf(ncss1 != 318, \"Ncss: \" + ncss1);", "+            vPackages = pJavancss.getPackageMetrics();", "+            bugIf( vPackages.size() != 2 );", "+            bugIf( ncss38 == pJavancss.getNcss() );", "+            // Nr. 41", "+            pJavancss = new Javancss( new File( testDir, \"Test29.java\" ) );", "+            bugIf( pJavancss.getNcss() != 1, \"NCSS: \" + pJavancss.getNcss() );", "+            // Nr. 42", "+            // missing lf in last line/<EOF> not in single line", "+            try", "+            {", "+                pJavancss = new Javancss( new File( testDir, \"Test35.java\" ) );", "+                bugIf( pJavancss.getNcss() != 1 );", "+            }", "+            catch ( Exception eEOF )", "+            {", "+                bugIf( true, \"}<EOF>\" );", "+            }", "+            try", "+            {", "+                pJavancss = new Javancss( new File( testDir, \"Test36.java\" ) );", "+                bugIf( pJavancss.getNcss() != 1 );", "+            }", "+            catch ( Error eEOF )", "+            {", "+                bugIf( true, \"//<EOF>\" );", "+            }", "+            try", "+            {", "+                pJavancss = new Javancss( new File( testDir, \"Test37.java\" ) );", "+                bugIf( pJavancss.getNcss() != 1 );", "+            }", "+            catch ( Error eCTRLZ )", "+            {", "+                bugIf( true, \"//ctrl-Z\" );", "+            }", "+            try", "+            {", "+                pJavancss = new Javancss( new File( testDir, \"Test38.java\" ) );", "+                bugIf( pJavancss.getNcss() != 1 );", "+            }", "+            catch ( Error eCTRLZ )", "+            {", "+                bugIf( true, \"0x0actrl-Z\" );", "+            }", "+            // Nr. 46", "+            // semicolons not allowed by JLS, but not counted anyway.", "+            try", "+            {", "+                pJavancss = new Javancss( new File( testDir, \"Test39.java\" ) );", "+                bugIf( pJavancss.getNcss() != 5 );", "+            }", "+            catch ( Error eEmptyStatements )", "+            {", "+                bugIf( true, \"Empty statments.\" );", "+            }", "+            // Nr. 47", "+            // ;; in java.sql.Connection", "+            try", "+            {", "+                pJavancss = new Javancss( new File( testDir, \"Test32.java\" ) );", "+                bugIf( pJavancss.getNcss() != 26, \"Test32.java: ncss should be 26 but is: \" + pJavancss.getNcss() );", "+            }", "+            catch ( Error eJavaSQLConnection )", "+            {", "+                bugIf( true, \"java.sql.Connection double semicolon\" );", "+            }", "-        // Nr. 2", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test2.java\"));", "-        bugIf(pJavancss.getNcss() != 8);", "-        // Nr. 3", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test3.java\"));", "-        bugIf(pJavancss.getNcss() != 69);", "-        // Nr. 4", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test4.java\"));", "-        bugIf(pJavancss.getNcss() != 11);", "-        // Nr. 5", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test5.java\"));", "-        bugIf(pJavancss.getNcss() != 16);", "-        // Nr. 6", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test6.java\"));", "-        int ncss6 = pJavancss.getNcss();", "-        bugIf(ncss6 != 565, \"Ncss: \" + ncss6);", "-        bugIf(pJavancss.getLOC() != 1254, \"LOC: \" + pJavancss.getLOC());", "-        // Nr. 8", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test7.java\"));", "-        bugIf(pJavancss.getNcss() != 30, \"Ncss: \" + pJavancss.getNcss());", "-        // Nr. 9", "-        Javancss pJavancss8 = new Javancss(FileUtil.concatPath(sLocalPath, \"Test8.java\"));", "-        bugIf(pJavancss.getNcss() != pJavancss8.getNcss());", "-        // Nr. 10", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test9.java\"));", "-        bugIf(ncss1 != pJavancss.getLOC(), \"LOC: \" + pJavancss.getLOC());", "-        // Nr. 11", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test10.java\"));", "-        bugIf(pJavancss.getLOC() != ncss6, \"LOC: \" + pJavancss.getLOC());", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss());", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test11.java\"));", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() +", "-              \", LOC: \" + pJavancss.getLOC());", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test12.java\"));", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() +", "-              \", LOC: \" + pJavancss.getLOC());", "-        Vector vFunctions = pJavancss.getFunctionMetrics();", "-        String sFirstFunction = (String)((Vector)vFunctions.elementAt(0)).elementAt(FCT_NAME);", "-        bugIf( sFirstFunction == null );", "-        /*System.out.println( sFirstFunction );*/", "-        bugIf(!sFirstFunction.equals(\"Test12.readFile(URL)\"), sFirstFunction);", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test13.java\"));", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() +", "-              \", LOC: \" + pJavancss.getLOC());", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test14.java\"));", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() +", "-              \", LOC: \" + pJavancss.getLOC());", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test15.java\"));", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() +", "-              \", LOC: \" + pJavancss.getLOC());", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test16.java\"));", "-        bugIf(pJavancss.getNcss() != 4);", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test17.java\"));", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() +", "-              \", LOC: \" + pJavancss.getLOC());", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test18.java\"));", "-        bugIf(pJavancss.getLOC() != pJavancss.getNcss(), \"NCSS: \" + pJavancss.getNcss() +", "-              \", LOC: \" + pJavancss.getLOC());", "-        // Nr. 22", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test19.java\"));", "-        vFunctions = pJavancss.getFunctionMetrics();", "-        sFirstFunction = (String)((Vector)vFunctions.elementAt(0)).elementAt(FCT_NAME);", "-        bugIf(!sFirstFunction.equals(\"test.Test19.foo(String[],Controller)\"), sFirstFunction);", "-        sFirstFunction = (String)((Vector)vFunctions.elementAt(3)).elementAt(FCT_NAME);", "-        bugIf(!sFirstFunction.equals(\"test.Test19.main(String[])\"));", "-        // Nr. 24", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test20.java\"));", "-        bugIf(pJavancss.getNcss() != 46, \"NCSS: \" + pJavancss.getNcss());", "-        // Nr. 25", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test21.java\"));", "-        bugIf(pJavancss.getNcss() != 67, \"NCSS: \" + pJavancss.getNcss());", "-        // Nr. 26", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test22.java\"));", "-        bugIf(pJavancss.getNcss() != 283, \"NCSS: \" + pJavancss.getNcss());", "-        // Nr. 27", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test23.java\"));", "-        bugIf(pJavancss.getNcss() != 10, \"NCSS: \" + pJavancss.getNcss());", "-        vFunctions = pJavancss.getFunctionMetrics();", "-        bugIf(vFunctions.size() != 7);", "-        bugIf(new Javancss(FileUtil.concatPath(sLocalPath, \"Test24.java\")).", "-            getFunctionMetrics().size() != vFunctions.size());", "-        // Nr. 30", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test25.java\"));", "-        bugIf(pJavancss.getNcss() != 12);", "-        bugIf(pJavancss.getFunctionMetrics().size() != 9);", "-        // Nr. 32", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test26.java\"));", "-        bugIf(pJavancss.getNcss() != 47, \"NCSS: \" + pJavancss.getNcss());", "-        // Nr. 33", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test27.java\"));", "-        bugIf(pJavancss.getNcss() != 4, \"NCSS: \" + pJavancss.getNcss());", "-        // Nr. 34", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test28.java\"));", "-        bugIf(pJavancss.getNcss() != 465, \"NCSS: \" + pJavancss.getNcss());", "-        // Nr. 35", "-        String sTogether;", "-        String sTest11 = \"\";", "-        String sTest12 = \"\";", "-        try {", "-            sTest11 = FileUtil.readFile(FileUtil.concatPath(sLocalPath, \"Test11.java\"));", "-            sTest12 = FileUtil.readFile(FileUtil.concatPath(sLocalPath, \"Test12.java\"));", "-            bugIf(false);", "-        } catch(Exception e) {", "-            bugIf(true);", "-        }", "-        sTogether = sTest11 + sTest12;", "-        pJavancss = new Javancss(new StringBufferInputStream(sTogether));", "-        vFunctions = pJavancss.getFunctionMetrics();", "-        Util.debug(\"JavancssTest._doIt().vFunctions: \" + vFunctions);", "-        sFirstFunction = (String)((Vector)vFunctions.elementAt(0)).elementAt(FCT_NAME);", "-        bugIf(!sFirstFunction.equals(\"ccl.util.Test11.atoi(String)\"));", "-        String sSomeFunction = (String)((Vector)vFunctions.elementAt(32)).elementAt(FCT_NAME);", "-        bugIf(!sSomeFunction.equals(\"Test12.readFile(URL)\"), \"Function: \" + sSomeFunction);", "-        Vector vPackages = pJavancss.getPackageMetrics();", "-        bugIf(vPackages.size() != 2);", "-        String[] asArg = new String[3];", "-        asArg[0] = FileUtil.concatPath(sLocalPath, \"Test11.java\");", "-        asArg[1] = asArg[0];", "-        asArg[2] = FileUtil.concatPath(sLocalPath, \"Test12.java\");", "-        int ncss38 = pJavancss.getNcss();", "-        ", "-        // turn stdout off", "-        PrintStream psStdout = System.out;", "-        System.setOut(new PrintStream(new ByteArrayOutputStream()));", "-        ", "-        pJavancss = new Javancss(asArg, \"$Header: /home/clemens/src/java/javancss/src/javancss/test/RCS/JavancssTest.java,v 1.34 2006/10/06 11:46:43 clemens Exp clemens $\");", "-        ", "-        // turn stdout on", "-        System.setOut(psStdout);", "-        ", "-        vPackages = pJavancss.getPackageMetrics();", "-        bugIf(vPackages.size() != 2);", "-        bugIf(ncss38 == pJavancss.getNcss());", "-        // Nr. 41", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test29.java\"));", "-        bugIf(pJavancss.getNcss() != 1, \"NCSS: \" + pJavancss.getNcss());", "-        // Nr. 42", "-        // missing lf in last line/<EOF> not in single line", "-        try ", "-        {", "-            pJavancss = new Javancss( FileUtil.concatPath( sLocalPath", "-                                                           , \"Test35.java\" ) );", "-            bugIf( pJavancss.getNcss() != 1 );", "-        } catch(Exception eEOF) {", "-            bugIf( true, \"}<EOF>\" );", "-        }", "-        try {", "-            pJavancss = new Javancss( FileUtil.concatPath( sLocalPath, \"Test36.java\" ) );", "-            bugIf( pJavancss.getNcss() != 1 );", "-        } catch(Error eEOF) {", "-            bugIf( true, \"//<EOF>\" );", "-        }", "-        try {", "-            pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test37.java\"));", "-            bugIf(pJavancss.getNcss() != 1);", "-        } catch(Error eCTRLZ) {", "-            bugIf(true, \"//ctrl-Z\");", "-        }", "-        try {", "-            pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test38.java\"));", "-            bugIf(pJavancss.getNcss() != 1);", "-        } catch(Error eCTRLZ) {", "-            bugIf(true, \"0x0actrl-Z\");", "-        }", "-        // Nr. 46", "-        // semicolons not allowed by JLS, but not counted anyway.", "-        try {", "-            pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test39.java\"));", "-            bugIf(pJavancss.getNcss() != 5);", "-        } catch(Error eEmptyStatements) {", "-            bugIf(true, \"Empty statments.\");", "-        }", "-        // Nr. 47", "-        // ;; in java.sql.Connection", "-        try {", "-            pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test32.java\"));", "-            bugIf( pJavancss.getNcss() != 26", "-                   , \"Test32.java: ncss should be 26 but is: \" + pJavancss.getNcss() );", "-        } catch(Error eJavaSQLConnection) {", "-            bugIf(true, \"java.sql.Connection double semicolon\");", "-        }", "+            testCCN( testDir );", "-        testCCN(sLocalPath);", "+            // javancss parsed a file which it shouldn't", "+            pJavancss = new Javancss( new File( testDir, \"Test42.java\" ) );", "+            bugIf( pJavancss.getLastErrorMessage() == null, \"Test42 should be parsed *and* result in an exception.\" );", "+            // file containing just ;", "+            pJavancss = new Javancss( new File( testDir, \"Test43.java\" ) );", "+            bugIf( pJavancss.getNcss() != 0 );", "+            // Test if javancss continues after running across a parse error", "+            // Test42,java has an errror, so use two other file and this and", "+            // take a look if it finishes with right result.", "+            pJavancss = new Javancss( new File( testDir, \"Test1.java\" ) );", "+            int ncss57 = pJavancss.getNcss();", "+            pJavancss = new Javancss( new File( testDir, \"Test2.java\" ) );", "+            ncss57 += pJavancss.getNcss();", "+            List vFiles = new ArrayList();", "+            vFiles.add( new File( testDir, \"Test1.java\" ) );", "+            vFiles.add( new File( testDir, \"Test42.java\" ) );", "+            vFiles.add( new File( testDir, \"Test2.java\" ) );", "+            pJavancss = new Javancss( vFiles );", "+            bugIf( pJavancss.getNcss() != ncss57, \"ncss57: \" + ncss57 + \" pJavancss.getNcss(): \" + pJavancss.getNcss() );", "-        // javancss parsed a file which it shouldn't", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test42.java\"));", "-        bugIf(pJavancss.getLastErrorMessage() == null,", "-              \"Test42 should be parsed *and* result in an exception.\");", "-        // file containing just ;", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test43.java\"));", "-        bugIf(pJavancss.getNcss() != 0);", "-        // Test if javancss continues after running across a parse error", "-        // Test42,java has an errror, so use two other file and this and", "-        // take a look if it finishes with right result.", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test1.java\"));", "-        int ncss57 = pJavancss.getNcss();", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test2.java\"));", "-        ncss57 += pJavancss.getNcss();", "-        Vector vFiles = new Vector();", "-        vFiles.addElement(FileUtil.concatPath(sLocalPath, \"Test1.java\"));", "-        vFiles.addElement(FileUtil.concatPath(sLocalPath, \"Test42.java\"));", "-        vFiles.addElement(FileUtil.concatPath(sLocalPath, \"Test2.java\"));", "-        pJavancss = new Javancss(vFiles);", "-        bugIf(pJavancss.getNcss() != ncss57, \"ncss57: \" + ncss57 +", "-              \" pJavancss.getNcss(): \" + pJavancss.getNcss());", "+            // Bug reported by .. .", "+            // Test48.java should be parsed.", "+            pJavancss = new Javancss( new File( testDir, \"Test48.java\" ) );", "+            bugIf( pJavancss.getNcss() <= 0, \"Parsing file Test48.java failed!\" );", "-        // Bug reported by .. .", "-        // Test48.java should be parsed.", "-        pJavancss = new Javancss(FileUtil.concatPath(sLocalPath, \"Test48.java\"));", "-        bugIf( pJavancss.getNcss() <= 0", "-               , \"Parsing file Test48.java failed!\" );", "+            pJavancss = new Javancss( new File( testDir, \"Test49.java\" ) );", "+            bugIf( pJavancss.getNcss() != 3, \"Parsing file Test49.java failed!\" );", "+            pJavancss = new Javancss( new File( testDir, \"Test50.java\" ) );", "+            bugIf( pJavancss.getNcss() <= 0, \"Parsing file Test50.java failed!\" );", "-        pJavancss = new Javancss( FileUtil.concatPath(sLocalPath, \"Test49.java\") );", "-        bugIf( pJavancss.getNcss() != 3", "-               , \"Parsing file Test49.java failed!\" );", "-        pJavancss = new Javancss( FileUtil.concatPath(sLocalPath, \"Test50.java\") );", "-        bugIf( pJavancss.getNcss() <= 0", "-               , \"Parsing file Test50.java failed!\" );", "+            pJavancss = new Javancss( new File( testDir, \"Test51.java\" ) );", "+            bugIf( pJavancss.getNcss() != 8, \"Parsing file Test51.java failed!\" );", "-        pJavancss = new Javancss( FileUtil.concatPath(sLocalPath, \"Test51.java\") );", "-        bugIf( pJavancss.getNcss() != 8", "-               , \"Parsing file Test51.java failed!\" );", "+            pJavancss = new Javancss( new File( testDir, \"Test52.java\" ) );", "+            int test52ncss = pJavancss.getNcss();", "+            bugIf( test52ncss != 12, \"Parsing file Test52.java failed. Ncss is \" + test52ncss + \" and not 12.\" );", "-        pJavancss = new Javancss( FileUtil.concatPath(sLocalPath, \"Test52.java\") );", "-        int test52ncss = pJavancss.getNcss();", "-        bugIf( test52ncss != 12", "-               , \"Parsing file Test52.java failed. Ncss is \" + test52ncss + \" and not 12.\" );", "+            pJavancss = new Javancss( new File( testDir, \"Test53.java\" ) );", "+            int test53ncss = pJavancss.getNcss();", "+            bugIf( test53ncss != 4, \"Parsing file Test53.java failed. Ncss is \" + test53ncss + \" and not 4.\" );", "-        pJavancss = new Javancss( FileUtil.concatPath(sLocalPath, \"Test53.java\") );", "-        int test53ncss = pJavancss.getNcss();", "-        bugIf( test53ncss != 4", "-               , \"Parsing file Test53.java failed. Ncss is \" + test53ncss + \" and not 4.\" );", "-", "-        _doNcssTest( 54, 9 );", "-        _doNcssTest( 55, 5 );", "-        _doNcssTest( 56 );", "-        _doNcssTest( 57 );", "+            _doNcssTest( 54, 9 );", "+            _doNcssTest( 55, 5 );", "+            _doNcssTest( 56 );", "+            _doNcssTest( 57 );", "-        pJavancss = measureTestFile( sLocalPath, 56 );", "+        pJavancss = measureTestFile( testDir, 56 );", "-        String sCompare56 = FileUtil.readFile( FileUtil.concatPath( sLocalPath, \"Output56.txt\" ) );", "-        Assert( sOutput56.equals( sCompare56 )", "-                , \"File test/Output56.txt and javancss output differs:\\n\"", "-                + sOutput56 );", "-        FileUtil.writeFile( \"t\", sOutput56 );", "+        String sCompare56 = FileUtil.readFile( new File( testDir, \"Output56.txt\" ).getAbsolutePath() );", "+        Assert( sOutput56.equals( sCompare56 ), \"File test/Output56.txt and javancss output differs:\\n\" + sOutput56 );", "-        xmlTest.setTestDir( _sTestDir );", "+        xmlTest.setTestDir( testDir );", "-        _doNcssTest( 58,  37 );", "+        _doNcssTest( 58, 37 );", "-        _doNcssTest( 60,  35 );", "+        _doNcssTest( 60, 35 );", "-        _doNcssTest( 64,  70 );", "+        _doNcssTest( 64, 70 );", "-        _doNcssTest( 66,   3 );", "-        _doNcssTest( 67,  31 );", "+        _doNcssTest( 66, 3 );", "+        _doNcssTest( 67, 31 );", "-        // check that javadocs are countet correctly", "+        // check that javadocs are counted correctly", "-        pJavancss = new Javancss( FileUtil.concatPath( sLocalPath, \"Test32.java\" ) );", "+        pJavancss = new Javancss( new File( testDir, \"Test32.java\" ) );", "-        String sCompare32 = FileUtil.readFile( FileUtil.concatPath( sLocalPath, \"Output32.txt\" ) );", "-        Assert( sOutput32.equals( sCompare32 )", "-                , \"File test/Output32.txt and javancss output differs:\\n\"", "-                + sOutput32 );", "+        String sCompare32 = FileUtil.readFile( new File( testDir, \"Output32.txt\" ).getAbsolutePath() );", "+        Assert( sOutput32.equals( sCompare32 ), \"File test/Output32.txt and javancss output differs:\\n\" + sOutput32 );", "-        _doJvdcsTest(68, 2);", "+        _doJvdcsTest( 68, 2 );", "-        _doNcssTest( 75,  584 );", "+        _doNcssTest( 75, 584 );", "-        _doNcssTest( 76,  404 );", "+        _doNcssTest( 76, 404 );", "-        _doNcssTest( 77,  48 );", "+        _doNcssTest( 77, 48 );", "-        _doNcssTest( 78,  35 );", "+        _doNcssTest( 78, 35 );", "-        _doNcssTest( 79,  1345 );", "+        _doNcssTest( 79, 1345 );", "-        _doNcssTest( 80,  96 );", "+        _doNcssTest( 80, 96 );", "-        _doNcssTest( 81,  92 );", "-        _doNcssTest( 82,  26 );", "-        _doNcssTest( 83,  2 );", "-        _doNcssTest( 84,  55 );", "-        _doNcssTest( 85,  242 );", "-        _doNcssTest( 86,  22 );", "-        _doNcssTest( 87,  8 );", "-        _doNcssTest( 88,  11 );", "-        _doNcssTest( 89,  65 );", "-        _doNcssTest( 90,  494 );", "-        _doNcssTest( 91,  30 );", "-        _doNcssTest( 92,  6 );", "-        _doNcssTest( 93,  38 );", "-        _doNcssTest( 94,  3 );", "-        _doNcssTest( 95,  10 );", "-        _doNcssTest( 96,  3 );", "-        _doNcssTest( 97,  3 );", "-        _doNcssTest( 98,  37 );", "-        _doNcssTest( 99,  243 );", "-        _doNcssTest( 100,  5 );", "-        _doNcssTest( 101,  256 );", "-        _doNcssTest( 102,  10 );", "-        _doNcssTest( 103,  3 );", "-        _doNcssTest( 104,  3 );", "-        _doNcssTest( 105,  5 );", "-        _doNcssTest( 106,  10 );", "-        _doNcssTest( 107,  9 );", "-        _doNcssTest( 108,  2 );", "-        _doNcssTest( 109,  2 );", "-        _doNcssTest( 110,  1 );", "-        _doNcssTest( 111,  4 );", "-        _doNcssTest( 112,  3 );", "-        _doNcssTest( 113,  13 );", "-        _doNcssTest( 114,  3 );", "-        _doNcssTest( 115,  11663 );", "-        _doNcssTest( 116,  12 );", "-        _doNcssTest( 117,  15 );", "-        _doNcssTest( 119,  2 );", "-        _doNcssTest( 120,  3 );", "-        _doNcssTest( 121,  5 );", "+        _doNcssTest( 81, 92 );", "+        _doNcssTest( 82, 26 );", "+        _doNcssTest( 83, 2 );", "+        _doNcssTest( 84, 55 );", "+        _doNcssTest( 85, 242 );", "+        _doNcssTest( 86, 22 );", "+        _doNcssTest( 87, 8 );", "+        _doNcssTest( 88, 11 );", "+        _doNcssTest( 89, 65 );", "+        _doNcssTest( 90, 494 );", "+        _doNcssTest( 91, 30 );", "+        _doNcssTest( 92, 6 );", "+        _doNcssTest( 93, 38 );", "+        _doNcssTest( 94, 3 );", "+        _doNcssTest( 95, 10 );", "+        _doNcssTest( 96, 3 );", "+        _doNcssTest( 97, 3 );", "+        _doNcssTest( 98, 37 );", "+        _doNcssTest( 99, 243 );", "+        _doNcssTest( 100, 5 );", "+        _doNcssTest( 101, 256 );", "+        _doNcssTest( 102, 10 );", "+        _doNcssTest( 103, 3 );", "+        _doNcssTest( 104, 3 );", "+        _doNcssTest( 105, 5 );", "+        _doNcssTest( 106, 10 );", "+        _doNcssTest( 107, 9 );", "+        _doNcssTest( 108, 2 );", "+        _doNcssTest( 109, 2 );", "+        _doNcssTest( 110, 1 );", "+        _doNcssTest( 111, 4 );", "+        _doNcssTest( 112, 3 );", "+        _doNcssTest( 113, 13 );", "+        _doNcssTest( 114, 3 );", "+        _doNcssTest( 115, 11663 );", "+        _doNcssTest( 116, 12 );", "+        _doNcssTest( 117, 15 );", "+        _doNcssTest( 119, 2 );", "+        _doNcssTest( 120, 3 );", "+        _doNcssTest( 121, 5 );", "+", "+        _doNcssEncodingTest();"]}]}