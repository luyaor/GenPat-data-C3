{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efd470d6ae6f9fad85df82102ba30077", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754bb5689a34eac6683bef3bc88564d1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \r   final public void ConditionalExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalExpression() throws ParseException {\r", "-    ConditionalOrExpression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case HOOK:\r", "-      jj_consume_token(HOOK);\r", "-      Expression();\r", "-      jj_consume_token(COLON);\r", "-      ConditionalExpression();\r", "-                                                                             _cyc++;\r", "-      break;\r", "-    default:\r", "-      jj_la1[92] = jj_gen;\r", "-      ;\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalExpression() throws ParseException {", "+    ConditionalOrExpression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case HOOK:", "+      jj_consume_token(HOOK);", "+      Expression();", "+      jj_consume_token(COLON);", "+      ConditionalExpression();", "+                                                                             _cyc++;", "+      break;", "+    default:", "+      jj_la1[91] = jj_gen;", "+      ;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbccce7d7037e49318058073af71c9a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \r   final public void ConditionalExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalExpression() throws ParseException {\r", "-    ConditionalOrExpression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case HOOK:\r", "-      jj_consume_token(HOOK);\r", "-      Expression();\r", "-      jj_consume_token(COLON);\r", "-      ConditionalExpression();\r", "-                                                                             _cyc++;\r", "-      break;\r", "-    default:\r", "-      jj_la1[92] = jj_gen;\r", "-      ;\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalExpression() throws ParseException {", "+    ConditionalOrExpression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case HOOK:", "+      jj_consume_token(HOOK);", "+      Expression();", "+      jj_consume_token(COLON);", "+      ConditionalExpression();", "+                                                                             _cyc++;", "+      break;", "+    default:", "+      jj_la1[91] = jj_gen;", "+      ;", "+    }", "+  }"]}]}