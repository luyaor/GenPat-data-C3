{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f8553720caf0ccbc027588d88ac1632", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a605c891c3405e5894bd7bf3fb0ca153", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CommonMatchingTask.java", "commitBeforeChange": "c6fd277b28f155d1b35d06833203b627d24523c3", "commitAfterChange": "e21f93cf28dc8d7f2a143fa10a6269b5cd24cbc9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException", "signatureAfterChange": "  \tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException", "diff": ["-\t\tIterator iter = fileSets.iterator();", "-\t\twhile (iter.hasNext())", "+\t\tfor (AbstractFileSet fileSet : fileSets)", "-\t\t\tAbstractFileSet fileSet = (AbstractFileSet)iter.next();", "-", "-\t\t\tif (fileSet instanceof FileSet)", "-\t\t\t{", "+\t\t\tif (fileSet instanceof FileSet) {", "-\t\t\t}", "-\t\t\telse", "-\t\t\t{", "-\t\t\t\tif (filesetFound)", "-\t\t\t\t{", "+\t\t\t} else {", "+\t\t\t\tif (filesetFound) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b7bb47d83fe1d67e130d4adfb81e35", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/MethodInstrumenter.java", "commitBeforeChange": "4558077bc3fa9bafa9125049db80cf9c99da089f", "commitAfterChange": "f21d7d6c791a9d50e30e19d77af0c8b3f2897c6c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void visitMethodInsn(int opcode, String owner, String name, \t\t\tString desc)", "signatureAfterChange": "  \tpublic void visitMethodInsn(int opcode, String owner, String name, \t\t\tString desc)", "diff": ["-\t\tIterator iter = ignoreRegexs.iterator();", "-\t\twhile (iter.hasNext())", "+\t\tif (RegexUtil.matches(ignoreRegexs, owner)) ", "-\t\t\tPattern ignoreRegex = (Pattern)iter.next();", "-\t\t\tif ((ignoreRegexs != null) && (pm.matches(owner, ignoreRegex)))", "-\t\t\t{", "-\t\t\t\tclassData.removeLine(currentLine);", "-\t\t\t\treturn;", "-\t\t\t}", "+\t\t\tclassData.removeLine(currentLine);"]}]}