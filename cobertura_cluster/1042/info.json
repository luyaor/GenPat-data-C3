{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d614ceeda4b00a5c5ed0f27d23ed350", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09710c957cdeff99f6951c1d63e9aba2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/reporting/JUnitXMLHelper.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static Document readXmlFile(File file, boolean validate) \t\t\tthrows FileNotFoundException, IOException, JDOMException", "signatureAfterChange": " \tpublic static Document readXmlFile(File file, boolean validate) \t\t\tthrows FileNotFoundException, IOException, JDOMException", "diff": ["-\t\tlog.info(String.format(\"Reading %s\", file.getAbsolutePath()));", "+\t\tSystem.out.println(\"Reading \" + file.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f92723d711b92a7d84c6b7935928f73", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "commitAfterChange": "ec1fd1d424f2f4413436786d9da0ddb5f02e1d9d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic Set getValidLineNumbers()", "signatureAfterChange": "  \tpublic int hashCode()", "diff": ["-\t */", "-\tpublic Set getValidLineNumbers()", "+\tpublic int hashCode()", "-\t\treturn Collections.unmodifiableSet(lines.keySet());", "+\t\treturn this.name.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae928ca82a2589b0ad3c240ca192d44", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic static void main(String[] args)", "signatureAfterChange": "  \tpublic static void main(String[] args)", "diff": ["-\t\tHeader.print();", "+\t\tHeader.print(System.out);", "-\t\t\tlog.error(String.format(\"Error: Cannot process arguments: %s\", ex", "-\t\t\t\t\t.getMessage()));", "+\t\t\tSystem.err.println(\"Error: Cannot process arguments: \"", "+\t\t\t\t\t+ ex.getMessage());", "-\t\tlogger.info(String.format(\"Instrument time: %s ms\",", "-\t\t\t\t(stopTime - startTime)));", "+\t\tlogger.info(\"Instrument time: \" + (stopTime - startTime) + \"ms\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d20270ab24fdb5fd77fa016a36ea76", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void setDestination(String value)", "signatureAfterChange": "  \tprivate void setDestination(String value)", "diff": ["-\t\t\tlog", "-\t\t\t\t\t.error(String", "-\t\t\t\t\t\t\t.format(", "-\t\t\t\t\t\t\t\t\t\"Error: destination directory %s already exists but is not a directory\",", "-\t\t\t\t\t\t\t\t\tdestinationDir));", "+\t\t\tSystem.err.println(\"Error: destination directory \" + destinationDir", "+\t\t\t\t\t+ \" already exists but is not a directory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a33100e7a53bcc78fcfc6536295059b5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprivate void parseArguments(String[] args) throws Exception", "signatureAfterChange": "  \tprivate void parseArguments(String[] args) throws Exception", "diff": ["-\t\t\tlog.error(\"Error: destination directory must be set\");", "+\t\t\tSystem.err.println(\"Error: destination directory must be set\");", "-\t\tif (log.isDebugEnabled()) {", "-\t\t\tlog.debug(\"format is \" + format + \" encoding is \" + encoding);", "-\t\t\tlog.debug(\"dataFile is \" + dataFile.getAbsolutePath());", "-\t\t\tlog.debug(\"destinationDir is \" + destinationDir.getAbsolutePath());", "+\t\tif (LOGGER.isDebugEnabled()) {", "+\t\t\tLOGGER.debug(\"format is \" + format + \" encoding is \" + encoding);", "+\t\t\tLOGGER.debug(\"dataFile is \" + dataFile.getAbsolutePath());", "+\t\t\tLOGGER.debug(\"destinationDir is \"", "+\t\t\t\t\t+ destinationDir.getAbsolutePath());", "-\t\t\tlog.error(String.format(\"Error: Unable to read from data file %s\",", "-\t\t\t\t\tdataFile.getAbsolutePath()));", "+\t\t\tSystem.err.println(\"Error: Unable to read from data file \"", "+\t\t\t\t\t+ dataFile.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8c1d37c5d7d2a9572dc9d70c0570b51", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/ant/FunctionalConditionCoverageTest.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate static void runTestAntScript(String testName, String target) \t\t\tthrows IOException", "signatureAfterChange": " \tprivate static void runTestAntScript(String testName, String target) \t\t\tthrows IOException", "diff": ["-\t\tlog.info(classpath);", "+\t\tSystem.out.println(classpath);", "-\t\t\t\tlog.info(String.format(\"\\n\\n\\nOutput from Ant for %s test:\"", "-\t\t\t\t\t\t+ \"\\n----------------------------------------\"", "-\t\t\t\t\t\t+ \"\\n%s----------------------------------------\",", "-\t\t\t\t\t\ttestName, Util.getText(outputFile)));", "+\t\t\t\tSystem.out.println(\"\\n\\n\\nOutput from Ant for \" + testName", "+\t\t\t\t\t\t+ \" test:\\n----------------------------------------\\n\"", "+\t\t\t\t\t\t+ Util.getText(outputFile)", "+\t\t\t\t\t\t+ \"----------------------------------------\");"]}]}