{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a982b84b0b5c73c7283b43a30df6baf5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d0b6cff54d24029bef38c7fdd56f13", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/ClassInstrumenter.java", "commitBeforeChange": "23aa498955acea07a8c58d0d62c2db964bb2f8c1", "commitAfterChange": "a3baae1e85035b38eb79fe83a6930bb28d164c67", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void visit(int version, int access, String name, String signature, \t\t\tString superName, String[] interfaces)", "signatureAfterChange": " \tpublic void visit(int version, int access, String name, String signature, \t\t\tString superName, String[] interfaces)", "diff": ["-\t\tclassData = projectData.getOrCreateClassData(this.myName);", "+\t\tclassData = this.projectData.getOrCreateClassData(this.myName);", "+", "+\t\tPackageData packageData = (PackageData)projectData.getChild(classData", "+\t\t\t\t.getPackageName());", "+\t\tSourceFileData sourceFileData = (SourceFileData)packageData", "+\t\t\t\t.getChild(classData.getSourceFileName());", "+\t\tsourceFileData.setContainsInstrumentationInfo();", "-\t\t\t\t\tinterfaces);", "+\t\t\t\t\t\t\tinterfaces);", "-\t\t\t\t\tinterfaces.length);", "+\t\t\t\t\t\t\tinterfaces.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59134c4f212cfbcbdaaf066ae98e00c9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/PackageDataTest.java", "commitBeforeChange": "9a830b0110b84315c0c267421611842128c2ca35", "commitAfterChange": "2d04adc2554406c41824d5b965907076ecdceb80", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void testAddClass()", "signatureAfterChange": "  \tpublic void testAddClass()", "diff": ["+\t\tSourceFileData sourceFileData;", "-\t\tassertTrue(packageData.contains(classData.getBaseName()));", "+\t\tassertTrue(packageData.contains(classData.getSourceFileName()));", "+\t\tsourceFileData = (SourceFileData)packageData.getChild(classData", "+\t\t\t\t.getSourceFileName());", "+\t\tassertTrue(sourceFileData.contains(classData.getBaseName()));", "-\t\tassertTrue(packageData.contains(classData.getBaseName()));", "+\t\tassertTrue(packageData.contains(classData.getSourceFileName()));", "+\t\tsourceFileData = (SourceFileData)packageData.getChild(classData", "+\t\t\t\t.getSourceFileName());", "+\t\tassertTrue(sourceFileData.contains(classData.getBaseName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5f07bc89dd6c150d5c20f2f0bc150f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "0c4c989beaaa7dcd1e0ebf1b93967c436c5e76e9", "commitAfterChange": "1e2c9cddc06be7e4629e00cee41846cbb63566ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "signatureAfterChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "diff": ["+", "+\t\t// sourceFiles is sorted, but it's sorted by the full path", "+\t\t// to the file, and we only want to sort based on the", "+\t\t// file's basename.", "+\t\tSortedMap sortedSourceFiles = new TreeMap();", "+\t\tfor (Iterator iter = sourceFiles.iterator(); iter.hasNext();)", "+\t\t{", "+\t\t\tSourceFileData sourceFileData = (SourceFileData)iter.next();", "+\t\t\tsortedSourceFiles.put(sourceFileData.getBaseName(), sourceFileData);", "+\t\t}", "+", "-", "-\t\t\tfor (Iterator iter = sourceFiles.iterator(); iter.hasNext();)", "+\t\t\tfor (Iterator iter = sortedSourceFiles.values().iterator(); iter.hasNext();)"]}]}