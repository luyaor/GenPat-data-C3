{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb30319c59357a70f8e113084724af6a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2df9b0ae0812e0256f37359a9773d15c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void addLineJump(int lineNumber, int branchNumber)", "signatureAfterChange": "  \tpublic void addLineJump(int lineNumber, int branchNumber)", "diff": ["-\t\tLineData lineData = getLineData(lineNumber);", "-\t\tif (lineData != null) ", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tlineData.addJump(branchNumber);", "-\t\t\tthis.branches.put(new Integer(lineNumber), lineData);", "+\t\t\tLineData lineData = getLineData(lineNumber);", "+\t\t\tif (lineData != null) ", "+\t\t\t{", "+\t\t\t\tlineData.addJump(branchNumber);", "+\t\t\t\tthis.branches.put(Integer.valueOf(lineNumber), lineData);", "+\t\t\t}", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e917538c6788373d618b7f497ee48c90", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void markLineAsBranch(int lineNumber)", "signatureAfterChange": "     public void addLineSwitch(int lineNumber, int switchNumber, int min, int max)", "diff": ["-\tpublic void markLineAsBranch(int lineNumber)", "-\t{", "-\t\tLineData lineData = getLineData(lineNumber);", "-\t\tif (lineData != null)", "-\t\t{", "-\t\t\tlineData.setBranch(true);", "-\t\t\tthis.branches.put(new Integer(lineNumber), lineData);", "-\t\t}", "-\t}", "+   public void addLineSwitch(int lineNumber, int switchNumber, int min, int max) ", "+   {", "+      LineData lineData = getLineData(lineNumber);", "+      if (lineData != null) ", "+      {", "+         lineData.addSwitch(switchNumber, min, max);", "+         this.branches.put(new Integer(lineNumber), lineData);", "+      }", "+   }"]}]}