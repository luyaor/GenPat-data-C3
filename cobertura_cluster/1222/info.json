{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a847acc0202d1415168868089628c41", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1a86415bb2e6c254d4479e1e864438", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/ComplexityCalculator.java", "commitBeforeChange": "8470613dce5289e48aeaaebf95d84de1414dad70", "commitAfterChange": "77a25c204e0d22c334a40e10db5134e2cb525c03", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Complexity getAccumlatedCCNForSource(String sourceFileName, Source source)", "signatureAfterChange": " \tprivate Complexity getAccumlatedCCNForSource(String sourceFileName, Source source)", "diff": ["-\t\tVector methodMetrics = javancss.getFunctionMetrics();", "+\t\tList methodMetrics = javancss.getFunctionMetrics();", "-        for( Enumeration method = methodMetrics.elements(); method.hasMoreElements();)", "+        for( Iterator method = methodMetrics.iterator(); method.hasNext();)", "-        \tVector singleMethodMetrics = (Vector)method.nextElement();", "-        \tclassCcn += ((Integer)singleMethodMetrics.elementAt(JavancssConstants.FCT_CCN)).intValue();", "+        \tList singleMethodMetrics = (List)method.next();", "+        \tclassCcn += ((Integer)singleMethodMetrics.get(JavancssConstants.FCT_CCN)).intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59331adcc333129af7910046f733175", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/ComplexityCalculator.java", "commitBeforeChange": "a2175b7f98530c5d02c630a5ca1d997870cfcfc6", "commitAfterChange": "e7b601006be033847fed4202df377f7408705d0e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Complexity getAccumlatedCCNForSingleFile(File file)", "signatureAfterChange": " \tprivate Complexity getAccumlatedCCNForSingleFile(File file)", "diff": ["-\t\tList functionMetrics = javancss.getFunctionMetrics();", "-\t\tif (functionMetrics.size() <= 0)", "+\t\tList methodComplexities = javancss.getMethodComplexities();", "+\t\tif (methodComplexities.size() <= 0)", "-\t\tIterator iter = functionMetrics.iterator();", "+\t\tIterator iter = methodComplexities.iterator();", "-\t\t\tVector functionMetric = (Vector)iter.next();", "-\t\t\tccnAccumulator += ((Integer)functionMetric", "-\t\t\t\t\t.elementAt(JavancssConstants.FCT_CCN)).intValue();", "+\t\t\tccnAccumulator += ((Integer)iter.next()).intValue();", "-\t\treturn new Complexity( ccnAccumulator, functionMetrics.size());", "+\t\treturn new Complexity( ccnAccumulator, methodComplexities.size());"]}]}