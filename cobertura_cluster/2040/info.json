{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f73f41ba752add0c7df5b98c9fd0f8dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da5a6ed8f5fe61c2f93345d0772bf1c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass2/BuildClassMapClassVisitor.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions)", "signatureAfterChange": " \t@Override \tpublic MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions)", "diff": ["-\t\tFindTouchPointsMethodAdapter instrumenter=new FindTouchPointsMethodAdapter(mv,classMap.getClassName(),name,desc,eventIdGenerator,duplicatedLinesMap,lineIdGenerator);", "+\t\tFindTouchPointsMethodAdapter instrumenter = new FindTouchPointsMethodAdapter(", "+\t\t\t\tnew HistoryMethodAdapter(mv, 4),", "+\t\t\t\tclassMap.getClassName(),name,desc,eventIdGenerator,duplicatedLinesMap,lineIdGenerator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979ef3fdabec698ac9b24d8b38a790bc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/FindTouchPointsMethodAdapter.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FindTouchPointsMethodAdapter(MethodVisitor arg0, \t\t\tString className, String methodName, String methodSignature, \t\t\tAtomicInteger eventIdGenerator, \t\t\tMap<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tAtomicInteger lineIdGenerator)", "signatureAfterChange": "  \tpublic FindTouchPointsMethodAdapter(HistoryMethodAdapter mv, \t\t\tString className, String methodName, String methodSignature, \t\t\tAtomicInteger eventIdGenerator, \t\t\tMap<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tAtomicInteger lineIdGenerator)", "diff": ["-\tpublic FindTouchPointsMethodAdapter(MethodVisitor arg0,", "+\tpublic FindTouchPointsMethodAdapter(HistoryMethodAdapter mv,", "-\t\tsuper(arg0, className, methodName, methodSignature, lineIdGenerator);", "+\t\tthis(mv, mv.backlog(), className, methodName, methodSignature, eventIdGenerator, duplicatedLinesMap, lineIdGenerator);\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc91116031564e125756bd19923248f3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/FindTouchPointsMethodAdapter.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FindTouchPointsMethodAdapter(MethodVisitor arg0, \t\t\tString className, String methodName, String methodSignature, \t\t\tAtomicInteger eventIdGenerator, \t\t\tMap<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tAtomicInteger lineIdGenerator)", "signatureAfterChange": " \t \tpublic FindTouchPointsMethodAdapter(MethodVisitor mv, \t\t\tString className, String methodName, String methodSignature, \t\t\tAtomicInteger eventIdGenerator, \t\t\tMap<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tAtomicInteger lineIdGenerator)", "diff": ["-\tpublic FindTouchPointsMethodAdapter(MethodVisitor arg0,", "-\t\tsuper(arg0, className, methodName, methodSignature, lineIdGenerator);", "+\t", "+\tpublic FindTouchPointsMethodAdapter(MethodVisitor mv,", "+\t\t\tString className, String methodName, String methodSignature,", "+\t\t\tAtomicInteger eventIdGenerator,", "+\t\t\tMap<Integer, Map<Integer, Integer>> duplicatedLinesMap,", "+\t\t\tAtomicInteger lineIdGenerator) {", "+\t\tthis(mv, Collections. <AbstractInsnNode> emptyList(), ", "+\t\t     className, methodName, methodSignature, eventIdGenerator, duplicatedLinesMap, lineIdGenerator);\t\t", "+\t}"]}]}