{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0c2288c82c1f1a58ec4e1de8ea9080e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bf7547bbb8332e2b756db0fb12d7f78", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/ClassDataTest.java", "commitBeforeChange": "75bd567f0763b50ee4f0627514c803640ef94bc5", "commitAfterChange": "6959ca47db1806bd8cca8659c0d1e39761ab240b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testEquals()", "signatureAfterChange": "  \tpublic void testEquals()", "diff": ["+\t\tassertFalse(a.equals(defPckg));", "+\t\tassertFalse(b.equals(defPckg));", "+\t\tassertFalse(c.equals(defPckg));", "+\t\tassertFalse(defPckg.equals(a));", "+\t\tassertFalse(defPckg.equals(b));", "+\t\tassertFalse(defPckg.equals(c));", "+\t\tassertTrue(defPckg.equals(defPckg));", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f6c65bf8e5bfccda89d8fbe49f9723", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/ClassDataTest.java", "commitBeforeChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "commitAfterChange": "ec1fd1d424f2f4413436786d9da0ddb5f02e1d9d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void testBranch()", "signatureAfterChange": "  \tpublic void testBranch()", "diff": ["+", "+\t\tassertFalse(b.isBranch(4));", "+\t\tb.markLineAsBranch(4);", "+\t\tassertTrue(b.isBranch(4));", "+", "+\t\tCollection branches = b.getBranches();", "+\t\tassertEquals(2, branches.size());", "+\t\tassertEquals(b.getNumberOfValidBranches(), branches.size());", "+\t\t//assertTrue(branches.contains(new LineData(2, \"test\", \"(I)B\")));", "+\t\t//assertTrue(branches.contains(new LineData(4, \"test\", \"(I)B\")));"]}]}