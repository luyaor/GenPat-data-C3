{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb15c3fff7d30b9ffd65e03cdf1e702b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eca409bd2a998356143757cfddfecdc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tSwitchData getSwitchData(int switchNumber, SwitchData data)", "signatureAfterChange": " \t \tSwitchData getSwitchData(int switchNumber, SwitchData data)", "diff": ["-\t\tif (switches == null) ", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tswitches = new ArrayList();", "+\t\t\tif (switches == null) ", "+\t\t\t{", "+\t\t\t\tswitches = new ArrayList();", "+\t\t\t}", "+\t\t\tif (switches.size() < switchNumber) ", "+\t\t\t{", "+\t\t\t\tfor (int i = switches.size(); i < switchNumber; switches.add(new SwitchData(i++)));", "+\t\t\t}", "+\t\t\tif (switches.size() == switchNumber) ", "+\t\t\t\tif (data != null)", "+\t\t\t\t\tswitches.add(data);", "+\t\t\t\telse", "+\t\t\t\t\tswitches.add(new SwitchData(switchNumber));", "+\t\t\treturn (SwitchData) switches.get(switchNumber);", "-\t\tif (switches.size() < switchNumber) ", "+\t\tfinally", "-\t\t\tfor (int i = switches.size(); i < switchNumber; switches.add(new SwitchData(i++)));", "+\t\t\tlock.unlock();", "-\t\tif (switches.size() == switchNumber) ", "-\t\t\tif (data != null)", "-\t\t\t\tswitches.add(data);", "-\t\t\telse", "-\t\t\t\tswitches.add(new SwitchData(switchNumber));", "-\t\treturn (SwitchData) switches.get(switchNumber);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aa30170b9cf904a6caa0a2aaa038df6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tsynchronized SwitchData getSwitchData(int switchNumber, SwitchData data)", "signatureAfterChange": " \t \tsynchronized SwitchData getSwitchData(int switchNumber, SwitchData data)", "diff": ["-\tsynchronized SwitchData getSwitchData(int switchNumber, SwitchData data) ", "-\t{", "-\t\t//lock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\tif (switches == null) ", "-\t\t\t{", "-\t\t\t\tswitches = new ArrayList();", "-\t\t\t}", "-\t\t\tif (switches.size() < switchNumber) ", "-\t\t\t{", "-\t\t\t\tfor (int i = switches.size(); i < switchNumber; switches.add(new SwitchData(i++)));", "-\t\t\t}", "-\t\t\tif (switches.size() == switchNumber) ", "-\t\t\t\tif (data != null)", "-\t\t\t\t\tswitches.add(data);", "-\t\t\t\telse", "-\t\t\t\t\tswitches.add(new SwitchData(switchNumber));", "-\t\t\treturn (SwitchData) switches.get(switchNumber);", "+\tsynchronized SwitchData getSwitchData(int switchNumber, SwitchData data) {", "+\t\tif (switches == null) {", "+\t\t\tswitches = new ArrayList<SwitchData>();", "-\t\tfinally", "+\t\tif (switches.size() < switchNumber) ", "-\t\t\t//lock.unlock();", "+\t\t\tfor (int i = switches.size(); i < switchNumber; switches.add(new SwitchData(i++, Integer.MAX_VALUE )));", "+\t\tif (switches.size() == switchNumber) {", "+\t\t\tif (data != null) {", "+\t\t\t\tswitches.add(data);", "+\t\t\t} else {", "+\t\t\t\tswitches.add(new SwitchData(switchNumber, Integer.MAX_VALUE));", "+\t\t\t}", "+\t\t}", "+\t\treturn (SwitchData) switches.get(switchNumber);\t"]}]}