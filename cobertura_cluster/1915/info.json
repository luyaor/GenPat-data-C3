{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5569dbf781fdacbde80a165c678ffc35", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f80eb84c3717ad2a0bf63751db87460", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "4558077bc3fa9bafa9125049db80cf9c99da089f", "commitAfterChange": "f21d7d6c791a9d50e30e19d77af0c8b3f2897c6c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void addInstrumentation(File file)", "signatureAfterChange": " \tprivate void addInstrumentation(FileInfo fileInfo)", "diff": ["-\tprivate void addInstrumentation(File file)", "+\tprivate void addInstrumentation(FileInfo fileInfo)", "-\t\tif (isClass(file))", "+\t\tif (fileInfo.isClass() && shouldInstrument(fileInfo.pathname))", "-\t\t\taddInstrumentationToSingleClass(file);", "+\t\t\taddInstrumentationToSingleClass(fileInfo);", "-\t\telse if (file.isDirectory())", "+\t\telse if (fileInfo.isDirectory())", "-\t\t\tFile[] contents = file.listFiles();", "+\t\t\tString[] contents = fileInfo.list();", "-\t\t\t\taddInstrumentation(contents[i]);", "+\t\t\t{", "+\t\t\t\tFile relativeFile = new File(fileInfo.pathname, contents[i]);", "+\t\t\t\tFileInfo relativeFileInfo = new FileInfo(fileInfo.baseDir, relativeFile.toString());", "+\t\t\t\t//recursion!", "+\t\t\t\taddInstrumentation(relativeFileInfo);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e025ea37f952fde548e55995fa886795", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "73cd6cee6c47bb171b3c10fb87c9d986322605f8", "commitAfterChange": "ea44d50de680cfb1f234670ee0209ccd6aa03416", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate void addInstrumentationToArchive(ZipInputStream archive, \t\t\tZipOutputStream output) throws Exception", "signatureAfterChange": "  \tprivate boolean addInstrumentationToArchive(CoberturaFile file, InputStream archive, \t\t\tOutputStream output) throws Exception", "diff": ["-\tprivate void addInstrumentationToArchive(ZipInputStream archive,", "+\tprivate boolean addInstrumentationToArchive(CoberturaFile file, InputStream archive,", "+\t\t\tOutputStream output) throws Exception", "+\t{", "+\t\tZipInputStream zis = null;", "+\t\tZipOutputStream zos = null;", "+", "+\t\ttry", "+\t\t{", "+\t\t\tzis = new ZipInputStream(archive);", "+\t\t\tzos = new ZipOutputStream(output);", "+\t\t\treturn addInstrumentationToArchive(file, zis, zos);", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tzis = (ZipInputStream)IOUtil.closeInputStream(zis);", "+\t\t\tzos = (ZipOutputStream)IOUtil.closeOutputStream(zos);", "+\t\t}", "+\t}", "-\t\t\t\t// Check if we have class file", "-\t\t\t\tif (isClass(entry) && shouldInstrument(entry.getName()))"]}]}