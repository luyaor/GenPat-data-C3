{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90adec2f0ab07441a0aa97743c6b5cca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09daa0994b083ef41317fa8c12f940cd", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CommonMatchingTask.java", "commitBeforeChange": "d6af0a3041f4f9a0a959da2b75a0599b7dc44290", "commitAfterChange": "632cbc8d4da8684691288433fa5b2c2f99aa21c4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException", "signatureAfterChange": "  \tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException", "diff": ["+\t\tboolean filesetFound = false;", "-\t\t\tFileSet fileSet = (FileSet)iter.next();", "+\t\t\tAbstractFileSet fileSet = (AbstractFileSet)iter.next();", "-\t\t\tbuilder.addArg(\"--basedir\", baseDir(fileSet));", "-\t\t\tcreateArgumentsForFilenames( builder, getFilenames(fileSet));", "+\t\t\tif (fileSet instanceof FileSet)", "+\t\t\t{", "+\t\t\t\tfilesetFound = true;", "+\t\t\t\tbuilder.addArg(\"--basedir\", baseDir(fileSet));", "+\t\t\t\tcreateArgumentsForFilenames( builder, getFilenames(fileSet));", "+\t\t\t}", "+\t\t\telse", "+\t\t\t{", "+\t\t\t\tif (filesetFound)", "+\t\t\t\t{", "+\t\t\t\t\t/*", "+\t\t\t\t\t * Once --basedir has been used, it cannot be undone without changes to the", "+\t\t\t\t\t * Main methods.   So, any dirsets have to come before filesets.", "+\t\t\t\t\t */", "+\t\t\t\t\tthrow new BuildException(\"Dirsets have to come before filesets\");", "+\t\t\t\t}", "+\t\t\t\tcreateArgumentsForFilenames( builder, getDirectoryScanner(fileSet).getIncludedDirectories());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67303e39b9697d56ebd7825c010bdd92", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/InstrumentTask.java", "commitBeforeChange": "b6b718a39d474bcb5d8023e1d26bb05ce1dff63c", "commitAfterChange": "0c76ce91897e30da3c3c98b0dbde4eaeb37f1634", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void execute() throws BuildException", "signatureAfterChange": "  \tpublic void execute() throws BuildException", "diff": ["-\t\tSet filenames = new HashSet();", "-\t\tIterator iter = fileSets.iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tFileSet fileSet = (FileSet)iter.next();", "-", "-\t\t\taddArg(\"--basedir\");", "-\t\t\taddArg(baseDir(fileSet));", "-", "-\t\t\tfilenames.addAll(Arrays.asList(getFilenames(fileSet)));", "-\t\t}", "-\t\taddFilenames((String[])filenames.toArray(new String[filenames.size()]));", "-", "+\t\tSet filenames = new HashSet();", "+\t\tIterator iter = fileSets.iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tFileSet fileSet = (FileSet)iter.next();", "+", "+\t\t\taddArg(\"--basedir\");", "+\t\t\taddArg(baseDir(fileSet));", "+", "+\t\t\tfilenames.addAll(Arrays.asList(getFilenames(fileSet)));", "+\t\t}", "+\t\taddFilenames((String[])filenames.toArray(new String[filenames.size()]));", "+"]}]}