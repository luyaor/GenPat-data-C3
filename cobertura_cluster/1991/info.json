{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94dc1cdf840f6ca95c4e83240c6dc5d5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b4922f6bffa0c0e9b9c8c05a25174a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/test/JavancssTest.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void _checkJavadocLines()", "signatureAfterChange": "     private void _checkJavadocLines()", "diff": ["-        _checkJavadocLines( FileUtil.concatPath( _sTestDir", "-                                                 , \"Test28.java\" )", "-                            , \"jacob\"", "-                            , 0 );", "+        _checkJavadocLines( new File( testDir, \"Test28.java\" ), \"jacob\", 0 );", "-        Vector vArgs = new Vector();", "-        vArgs.addElement( FileUtil.concatPath( _sTestDir", "-                                               , \"Test20.java\" ) );", "-        vArgs.addElement( FileUtil.concatPath( _sTestDir", "-                                               , \"Test21.java\" ) );", "-        vArgs.addElement( FileUtil.concatPath( _sTestDir", "-                                               , \"Test28.java\" ) );", "-        _checkJavadocLines( vArgs", "-                            , \"jacob\"", "-                            , 0 );", "+        List files = new ArrayList();", "+        files.add( new File( testDir, \"Test20.java\" ) );", "+        files.add( new File( testDir, \"Test21.java\" ) );", "+        files.add( new File( testDir, \"Test28.java\" ) );", "+        _checkJavadocLines( files, \"jacob\", 0 );", "-        _checkJavadocLines( new int[] { 68, 69 }", "-                            , \".\"", "-                            , 10 );", "+        _checkJavadocLines( new int[] { 68, 69 }, \".\", 10 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f7c3ff9692dd3c0a99a1b57bb46955f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CommonMatchingTask.java", "commitBeforeChange": "76fa01baf70f8272800d4a2e686311024ccc5ab9", "commitAfterChange": "a200058f73d8ed1c2d6487fd38cdebc8a65529c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void initArgs()", "signatureAfterChange": "  \tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException", "diff": ["-", "-\tprotected void initArgs()", "-\t{", "-\t\ttry", "-\t\t{", "-\t\t\tcommandLineFile = File.createTempFile(\"cobertura.\", \".cmdline\");", "-\t\t\tcommandLineFile.deleteOnExit();", "-\t\t\tcommandLineWriter = new FileWriter(commandLineFile);", "-\t\t}", "-\t\tcatch (IOException ioe)", "-\t\t{", "-\t\t\tgetProject().log(", "-\t\t\t\t\t\"Error initializing commands file \"", "-\t\t\t\t\t\t\t+ commandLineFile.getAbsolutePath(),", "-\t\t\t\t\tProject.MSG_ERR);", "-\t\t\tthrow new BuildException(\"Unable to initialize commands file.\",", "-\t\t\t\t\tioe);", "-\t\t}", "-\t}", "+\tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException {", "+\t\tIterator iter = fileSets.iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tFileSet fileSet = (FileSet)iter.next();", "+", "+\t\t\tbuilder.addArg(\"--basedir\", baseDir(fileSet));", "+\t\t\tcreateArgumentsForFilenames( builder, getFilenames(fileSet));", "+\t\t}", "+\t}"]}]}