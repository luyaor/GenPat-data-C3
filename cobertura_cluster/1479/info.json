{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c693994c2ad866fa6196d7f002b1fd6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "575f49ef9b7ae2ebc9381416b68b127e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/util/ConfigurationUtil.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String getProperty(String key, String defvalue)", "signatureAfterChange": "  \tpublic String getProperty(String key, String defvalue)", "diff": ["-\t\t\tDEBUG(String", "-\t\t\t\t\t.format(\"Using system property value [%s] for key [%s]\",", "-\t\t\t\t\t\t\tvalue, key));", "+\t\t\tDEBUG(\"Using system property value [\" + value + \"] for key [\" + key", "+\t\t\t\t\t+ \"]\");", "-\t\t\tDEBUG(String.format(", "-\t\t\t\t\t\"Using cobertura.properties value [%s] for key [%s]\",", "-\t\t\t\t\tvalue, key));", "+\t\t\tDEBUG(\"Using cobertura.properties value [\" + value + \"] for key [\"", "+\t\t\t\t\t+ key + \"]\");", "-\t\tDEBUG(String.format(\"Using default value [%s] for key [%s]\", defvalue,", "-\t\t\t\tkey));", "+\t\tDEBUG(\"Using default value [\" + defvalue + \"] for key [\" + key + \"]\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d13bdbab79d4debf67ffcd6d47cbbdeb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/check/CheckCoverageMain.java", "commitBeforeChange": "e46b77023c7e97f00c714d3a8a1471061b55f173", "commitAfterChange": "0e43adcdea83849bab574d10e4840e5318cc7602", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate static int checkCoverageTypeStatusAndLogMessage( \t\t\tCoverageResultEntry entry, int branchStatus, int lineStatus)", "signatureAfterChange": "  \tprivate static int checkCoverageTypeStatusAndLogMessage( \t\t\tCoverageResultEntry entry, int branchStatus, int lineStatus)", "diff": ["-\t\t\t\t\t.error(String", "-\t\t\t\t\t\t\t.format(", "-\t\t\t\t\t\t\t\t\t\"%s failed coverage check. Branch coverage rate of %s is below %s\",", "-\t\t\t\t\t\t\t\t\tentry.getName(),", "-\t\t\t\t\t\t\t\t\tentry.getCurrentCoverage(), entry", "-\t\t\t\t\t\t\t\t\t\t\t.getExpectedCoverage()));", "+\t\t\t\t\t.error(entry.getName() +", "+\t\t\t\t\t\t   \" failed coverage check. Branch coverage rate of \"+", "+\t\t\t\t\t\t   percentage(entry.getCurrentCoverage()) +", "+\t\t\t\t\t       \"% is below \" +", "+\t\t\t\t\t\t   percentage(entry.getExpectedCoverage()) +", "+\t\t\t\t\t\t   \"%\");", "-\t\t\t\t\t.error(String", "-\t\t\t\t\t\t\t.format(", "-\t\t\t\t\t\t\t\t\t\"%s failed coverage check. Line coverage rate of %s is below %s\",", "-\t\t\t\t\t\t\t\t\tentry.getName(),", "-\t\t\t\t\t\t\t\t\tentry.getCurrentCoverage(), entry", "-\t\t\t\t\t\t\t\t\t\t\t.getExpectedCoverage()));", "+\t\t\t\t\t.error(entry.getName() +", "+\t\t\t\t\t\t   \" failed coverage check. Line coverage rate of \" +", "+\t\t\t\t\t\t   percentage(entry.getCurrentCoverage()) +", "+\t\t\t\t\t       \"% is below \" +", "+\t\t\t\t\t\t   percentage(entry.getExpectedCoverage()) +", "+\t\t\t\t\t       \"%\");"]}]}