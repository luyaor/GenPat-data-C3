{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9c6b76f44c759cdcd65f72d1af46171", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3bdafb3cf205cad77c5571c048fd1b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean equals(Object obj)", "signatureAfterChange": " \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn super.equals(obj)", "-\t\t\t&& this.branches.equals(classData.branches)", "-\t\t\t&& this.methodNamesAndDescriptors", "-\t\t\t\t.equals(classData.methodNamesAndDescriptors)", "-\t\t\t&& this.name.equals(classData.name)", "-\t\t\t&& this.sourceFileName.equals(classData.sourceFileName);", "+\t\tgetBothLocks(classData);", "+\t\ttry", "+\t\t{", "+\t\t\treturn super.equals(obj)", "+\t\t\t\t&& this.branches.equals(classData.branches)", "+\t\t\t\t&& this.methodNamesAndDescriptors", "+\t\t\t\t\t.equals(classData.methodNamesAndDescriptors)", "+\t\t\t\t&& this.name.equals(classData.name)", "+\t\t\t\t&& this.sourceFileName.equals(classData.sourceFileName);", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t\tclassData.lock.unlock();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbdb159a8b88d218ebac9517b9cdede5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/JumpData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic boolean equals(Object obj)", "signatureAfterChange": "  \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn (this.trueHits == branchData.trueHits)", "-\t\t\t\t&& (this.falseHits == branchData.falseHits)", "-\t\t\t\t&& (this.conditionNumber == branchData.conditionNumber);", "+\t\tgetBothLocks(branchData);", "+\t\ttry", "+\t\t{", "+\t\t\treturn (this.trueHits == branchData.trueHits)", "+\t\t\t\t\t&& (this.falseHits == branchData.falseHits)", "+\t\t\t\t\t&& (this.conditionNumber == branchData.conditionNumber);", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t\tbranchData.lock.unlock();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e90a946c81c66fc3ed6b501223b19737", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean equals(Object obj)", "signatureAfterChange": "  \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn (this.hits == lineData.hits)", "-\t\t\t\t&& ((this.jumps == lineData.jumps) || ((this.jumps != null) && (this.jumps.equals(lineData.jumps))))", "-\t\t\t\t&& ((this.switches == lineData.switches) || ((this.switches != null) && (this.switches.equals(lineData.switches))))", "-\t\t\t\t&& (this.lineNumber == lineData.lineNumber)", "-\t\t\t\t&& (this.methodDescriptor.equals(lineData.methodDescriptor))", "-\t\t\t\t&& (this.methodName.equals(lineData.methodName));", "+\t\tgetBothLocks(lineData);", "+\t\ttry", "+\t\t{", "+\t\t\treturn (this.hits == lineData.hits)", "+\t\t\t\t\t&& ((this.jumps == lineData.jumps) || ((this.jumps != null) && (this.jumps.equals(lineData.jumps))))", "+\t\t\t\t\t&& ((this.switches == lineData.switches) || ((this.switches != null) && (this.switches.equals(lineData.switches))))", "+\t\t\t\t\t&& (this.lineNumber == lineData.lineNumber)", "+\t\t\t\t\t&& (this.methodDescriptor.equals(lineData.methodDescriptor))", "+\t\t\t\t\t&& (this.methodName.equals(lineData.methodName));", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t\tlineData.lock.unlock();", "+\t\t}"]}]}