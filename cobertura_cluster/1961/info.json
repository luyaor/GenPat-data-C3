{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83ed7d2f416826676ce4b5f0c5c7965e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05dbe11c55a0317e14f2f34f776be384", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "73cd6cee6c47bb171b3c10fb87c9d986322605f8", "commitAfterChange": "ea44d50de680cfb1f234670ee0209ccd6aa03416", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate boolean shouldInstrument(String name)", "signatureAfterChange": "  \tprivate void addInstrumentationToArchive(Archive archive) throws Exception", "diff": ["-\tprivate boolean shouldInstrument(String name)", "+\tprivate void addInstrumentationToArchive(Archive archive) throws Exception", "-\t\tboolean shouldInstrument = true;", "-", "-\t\tif (includeClassesRegexes.size() > 0)", "+\t\tInputStream in = null;", "+\t\tByteArrayOutputStream out = null;", "+\t\ttry", "-\t\t\tshouldInstrument = false;", "-\t\t\t// Remove .class extension if it exists", "-\t\t\tif (name.endsWith(\".class\")) {", "-\t\t\t\tname = name.substring(0, name.length() - 6);", "-\t\t\t}", "-\t\t\tname = name.replace('/', '.');", "-\t\t\tname = name.replace('\\\\', '.');", "-\t\t\tif (RegexUtil.matches(includeClassesRegexes, name)) {", "-\t\t\t\tshouldInstrument = true;", "-\t\t\t}", "-\t\t\tif (shouldInstrument && RegexUtil.matches(excludeClassesRegexes, name)) {", "-\t\t\t\tshouldInstrument = false;", "+\t\t\tin = archive.getInputStream();", "+\t\t\tout = new ByteArrayOutputStream();", "+\t\t\tboolean modified = addInstrumentationToArchive(archive.getCoberturaFile(), in, out);", "+", "+\t\t\tif (modified)", "+\t\t\t{", "+\t\t\t\tout.flush();", "+\t\t\t\tbyte[] bytes = out.toByteArray();", "+\t\t\t\tarchive.setModifiedBytes(bytes);", "-\t\treturn shouldInstrument;", "+\t\tfinally", "+\t\t{", "+\t\t\tin = IOUtil.closeInputStream(in);", "+\t\t\tout = (ByteArrayOutputStream)IOUtil.closeOutputStream(out);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fadfb523fe79d95aca0b01ae9cc83029", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "4558077bc3fa9bafa9125049db80cf9c99da089f", "commitAfterChange": "f21d7d6c791a9d50e30e19d77af0c8b3f2897c6c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static boolean isClass(File file)", "signatureAfterChange": "  \tprivate boolean shouldInstrument(String name)", "diff": ["-\t */", "-\tprivate static boolean isClass(File file)", "-\t{", "-\t\treturn file.getName().endsWith(\".class\");", "-\t}", "+", "+\tprivate boolean shouldInstrument(String name)", "+\t{", "+\t\tboolean shouldInstrument = true;", "+", "+\t\tif (includeClassesRegexes.size() > 0)", "+\t\t{", "+\t\t\tshouldInstrument = false;", "+\t\t\t// Remove .class extension if it exists", "+\t\t\tif (name.endsWith(\".class\")) {", "+\t\t\t\tname = name.substring(0, name.length() - 6);", "+\t\t\t}", "+\t\t\tname = name.replace('/', '.');", "+\t\t\tname = name.replace('\\\\', '.');", "+\t\t\tif (RegexUtil.matches(includeClassesRegexes, name)) {", "+\t\t\t\tshouldInstrument = true;", "+\t\t\t}", "+\t\t\tif (shouldInstrument && RegexUtil.matches(excludeClassesRegexes, name)) {", "+\t\t\t\tshouldInstrument = false;", "+\t\t\t}", "+\t\t}", "+\t\treturn shouldInstrument;"]}]}