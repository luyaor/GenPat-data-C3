{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9b89d15b6f53a7b2047ac3dc4765e13", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903cb669ae119b6ebe2f20be125e05dd", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": "\r \r   final public void ConditionalAndExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalAndExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalAndExpression() throws ParseException {\r", "-    InclusiveOrExpression();\r", "-    label_41:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case SC_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[94] = jj_gen;\r", "-        break label_41;\r", "-      }\r", "-      jj_consume_token(SC_AND);\r", "-                                   _cyc++;\r", "-      InclusiveOrExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalAndExpression() throws ParseException {", "+    InclusiveOrExpression();", "+    label_41:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case SC_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[93] = jj_gen;", "+        break label_41;", "+      }", "+      jj_consume_token(SC_AND);", "+                                   _cyc++;", "+      InclusiveOrExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca332b4492727ef350354ed9f5e0503a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": "\r \r   final public void ConditionalAndExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalAndExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalAndExpression() throws ParseException {\r", "-    InclusiveOrExpression();\r", "-    label_41:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case SC_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[94] = jj_gen;\r", "-        break label_41;\r", "-      }\r", "-      jj_consume_token(SC_AND);\r", "-                                   _cyc++;\r", "-      InclusiveOrExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalAndExpression() throws ParseException {", "+    InclusiveOrExpression();", "+    label_41:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case SC_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[93] = jj_gen;", "+        break label_41;", "+      }", "+      jj_consume_token(SC_AND);", "+                                   _cyc++;", "+      InclusiveOrExpression();", "+    }", "+  }"]}]}