{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acc9a6371e4d9eed1a75206fc636c064", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0067d9c091135fa59ebc496e7e694cd8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \r   final public void PrimitiveType() throws ParseException", "signatureAfterChange": "\r \r   final public void PrimitiveType() throws ParseException", "diff": ["-      jj_la1[76] = jj_gen;\r", "+      jj_la1[83] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03fb569baba752143e691a28941098c5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": "\r \r   final public void InstanceOfExpression() throws ParseException", "signatureAfterChange": "\r \r   final public void InstanceOfExpression() throws ParseException", "diff": ["-      jj_la1[93] = jj_gen;\r", "+      jj_la1[100] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06304f4bb232293bbd425769fb3022d7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 117, "signatureBeforeChange": "\r \r   final public void Identifier() throws ParseException", "signatureAfterChange": "    final public void Identifier() throws ParseException", "diff": ["-\r", "-  final public void Identifier() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IDENTIFIER:\r", "-      jj_consume_token(IDENTIFIER);\r", "-      break;\r", "-    case ASSERT:\r", "-      jj_consume_token(ASSERT);\r", "-      break;\r", "-    default:\r", "-      jj_la1[160] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void Identifier() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IDENTIFIER:", "+      jj_consume_token(IDENTIFIER);", "+      break;", "+    case ASSERT:", "+      jj_consume_token(ASSERT);", "+      break;", "+    default:", "+      jj_la1[165] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079163b9c65ab92d8b0453f650db7a2c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r \r   final public void FormalParameter() throws ParseException", "signatureAfterChange": "\r \r   final public void FormalParameter() throws ParseException", "diff": ["-      jj_la1[65] = jj_gen;\r", "+      jj_la1[71] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a3428c2dc5dce0a667d585bb1b562d3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \r   final public void ConditionalOrExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalOrExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalOrExpression() throws ParseException {\r", "-    ConditionalAndExpression();\r", "-    label_40:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case SC_OR:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[93] = jj_gen;\r", "-        break label_40;\r", "-      }\r", "-      jj_consume_token(SC_OR);\r", "-                                      _cyc++;\r", "-      ConditionalAndExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalOrExpression() throws ParseException {", "+    ConditionalAndExpression();", "+    label_40:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case SC_OR:", "+        ;", "+        break;", "+      default:", "+        jj_la1[92] = jj_gen;", "+        break label_40;", "+      }", "+      jj_consume_token(SC_OR);", "+                                      _cyc++;", "+      ConditionalAndExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eb9c4950da95083604ef69c08b9b233", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "\r \r   final public void ReturnStatement() throws ParseException", "signatureAfterChange": "    final public void ReturnStatement() throws ParseException", "diff": ["-\r", "-  final public void ReturnStatement() throws ParseException {\r", "-    jj_consume_token(RETURN);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-    case BANG:\r", "-    case TILDE:\r", "-    case INCR:\r", "-    case DECR:\r", "-    case PLUS:\r", "-    case MINUS:\r", "-      Expression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[157] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-                _ncss++;\r", "-                Util.debug( \"_ncss++\" );\r", "-                _cyc++;\r", "-                _bReturn = true;\r", "-  }\r", "+", "+  final public void ReturnStatement() throws ParseException {", "+    jj_consume_token(RETURN);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+    case BANG:", "+    case TILDE:", "+    case INCR:", "+    case DECR:", "+    case PLUS:", "+    case MINUS:", "+      Expression();", "+      break;", "+    default:", "+      jj_la1[158] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+                _ncss++;", "+                Util.debug( \"_ncss++\" );", "+                _cyc++;", "+                _bReturn = true;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fa5e68d46bbcef203c1bc9df6c18c8f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 133, "signatureBeforeChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "    final public void EnumDeclaration(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void EnumDeclaration(int modifiers) throws ParseException {\r", "-        String sOldClass = _sClass;\r", "-        int oldClasses = _classes;\r", "-        int oldNcss = _ncss;\r", "-        int oldFunctions = _functions;\r", "-\r", "-        // Chris Povirk\r", "-        int oldSingle;\r", "-        int oldMulti;\r", "-      Util.debug( \"EnumDeclaration().START\" );\r", "-    jj_consume_token(ENUM);\r", "-    jj_consume_token(IDENTIFIER);\r", "-                if (!_sClass.equals(\"\")) {\r", "-                        _sClass += \".\";\r", "-                }\r", "-                _sClass += getToken(0).image;\r", "-                _classLevel ++;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IMPLEMENTS:\r", "-      ImplementsList(false);\r", "-      break;\r", "-    default:\r", "-      jj_la1[177] = jj_gen;\r", "-      ;\r", "-    }\r", "-        // Chris Povirk\r", "-      oldSingle = JavaParserTokenManager._iSingleComments;\r", "-      oldMulti = JavaParserTokenManager._iMultiComments;\r", "-    EnumBody();\r", "-             _classLevel--;\r", "-             if (_classLevel == 0) {\r", "-                 //_topLevelClasses++;\r", "-                 ObjectMetric metric = new ObjectMetric();\r", "-                 metric.name = _sPackage + _sClass;\r", "-                 metric.ncss = _ncss - oldNcss;\r", "-                 metric.functions = _functions - oldFunctions;\r", "-                 metric.classes = _classes - oldClasses;\r", "-                 Token lastToken = getToken( 0 );\r", "-                 //metric.add( new Integer( lastToken.endLine ) );\r", "-                 //metric.add( new Integer( lastToken.endColumn ) );\r", "-                 metric.javadocs = _javadocs;\r", "-\r", "-                 // Chris Povirk\r", "-                 metric.javadocsLn = _jvdcLines;\r", "-                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;\r", "-\r", "-                 _vClasses.add(metric);\r", "-                 _pPackageMetric.functions += _functions - oldFunctions;\r", "-                 _pPackageMetric.classes++;\r", "-\r", "-                 // added by SMS\r", "-                 _pPackageMetric.javadocs += _javadocs;\r", "-                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;\r", "-                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;\r", "-                 //\r", "-             }\r", "-             _functions = oldFunctions;\r", "-             _classes = oldClasses + 1;\r", "-             _sClass = sOldClass;\r", "-  }\r", "+", "+  final public void EnumDeclaration(int modifiers) throws ParseException {", "+        String sOldClass = _sClass;", "+        int oldClasses = _classes;", "+        int oldNcss = _ncss;", "+        int oldFunctions = _functions;", "+", "+        // Chris Povirk", "+        int oldSingle;", "+        int oldMulti;", "+      Util.debug( \"EnumDeclaration().START\" );", "+    jj_consume_token(ENUM);", "+    jj_consume_token(IDENTIFIER);", "+                if (!_sClass.equals(\"\")) {", "+                        _sClass += \".\";", "+                }", "+                _sClass += getToken(0).image;", "+                _classLevel ++;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IMPLEMENTS:", "+      ImplementsList(false);", "+      break;", "+    default:", "+      jj_la1[182] = jj_gen;", "+      ;", "+    }", "+        // Chris Povirk", "+      oldSingle = JavaParserTokenManager._iSingleComments;", "+      oldMulti = JavaParserTokenManager._iMultiComments;", "+    EnumBody();", "+             _classLevel--;", "+             if (_classLevel == 0) {", "+                 //_topLevelClasses++;", "+                 ObjectMetric metric = new ObjectMetric();", "+                 metric.name = _sPackage + _sClass;", "+                 metric.ncss = _ncss - oldNcss;", "+                 metric.functions = _functions - oldFunctions;", "+                 metric.classes = _classes - oldClasses;", "+                 Token lastToken = getToken( 0 );", "+                 //metric.add( new Integer( lastToken.endLine ) );", "+                 //metric.add( new Integer( lastToken.endColumn ) );", "+                 metric.javadocs = _javadocs;", "+", "+                 // Chris Povirk", "+                 metric.javadocsLn = _jvdcLines;", "+                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;", "+                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;", "+", "+                 _vClasses.add(metric);", "+                 _pPackageMetric.functions += _functions - oldFunctions;", "+                 _pPackageMetric.classes++;", "+", "+                 // added by SMS", "+                 _pPackageMetric.javadocs += _javadocs;", "+                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;", "+                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;", "+                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;", "+                 //", "+             }", "+             _functions = oldFunctions;", "+             _classes = oldClasses + 1;", "+             _sClass = sOldClass;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "106bdb59dc20dc100b2d644d93758639", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 152, "signatureBeforeChange": "\r \r   final public void FormalParameter15() throws ParseException", "signatureAfterChange": "    final public void FormalParameter15() throws ParseException", "diff": ["-\r", "-  final public void FormalParameter15() throws ParseException {\r", "-    Modifiers();\r", "-    Type();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ELLIPSIS:\r", "-      jj_consume_token(ELLIPSIS);\r", "-      break;\r", "-    default:\r", "-      jj_la1[201] = jj_gen;\r", "-      ;\r", "-    }\r", "-    VariableDeclaratorId();\r", "-  }\r", "+", "+  final public void FormalParameter15() throws ParseException {", "+    Modifiers();", "+    Type();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ELLIPSIS:", "+      jj_consume_token(ELLIPSIS);", "+      break;", "+    default:", "+      jj_la1[207] = jj_gen;", "+      ;", "+    }", "+    VariableDeclaratorId();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a02af0e94b4153c67aa5e0d7ad3bf8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 661, "methodNumberAfterChange": 666, "signatureBeforeChange": "\r   public JavaParser(JavaParserTokenManager tm)", "signatureAfterChange": "   public JavaParser(JavaParserTokenManager tm)", "diff": ["-  /** Constructor with generated Token Manager. */\r", "-  public JavaParser(JavaParserTokenManager tm) {\r", "-    token_source = tm;\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Constructor with generated Token Manager. */", "+  public JavaParser(JavaParserTokenManager tm) {", "+    token_source = tm;", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1287581ed292e7f1035cca2fb810f1ac", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "\r \r   final public void BreakStatement() throws ParseException", "signatureAfterChange": "    final public void BreakStatement() throws ParseException", "diff": ["-\r", "-  final public void BreakStatement() throws ParseException {\r", "-    jj_consume_token(BREAK);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case IDENTIFIER:\r", "-      Identifier();\r", "-      break;\r", "-    default:\r", "-      jj_la1[155] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-          _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void BreakStatement() throws ParseException {", "+    jj_consume_token(BREAK);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case IDENTIFIER:", "+      Identifier();", "+      break;", "+    default:", "+      jj_la1[156] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+          _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137061fe9e745baaf5fb044beb264b09", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 625, "methodNumberAfterChange": 656, "signatureBeforeChange": "\r   public JavaParser(java.io.InputStream stream, String encoding)", "signatureAfterChange": "\r   public JavaParser(java.io.InputStream stream, String encoding)", "diff": ["+  /** Constructor with InputStream and supplied encoding */\r", "-    for (int i = 0; i < 192; i++) jj_la1[i] = -1;\r", "+    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d7c781b00c9780bacb2c9db8b528df3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 656, "methodNumberAfterChange": 661, "signatureBeforeChange": "\r   public JavaParser(java.io.InputStream stream, String encoding)", "signatureAfterChange": "   public JavaParser(java.io.InputStream stream, String encoding)", "diff": ["-  /** Constructor with InputStream and supplied encoding */\r", "-  public JavaParser(java.io.InputStream stream, String encoding) {\r", "-    try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }\r", "-    token_source = new JavaParserTokenManager(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Constructor with InputStream and supplied encoding */", "+  public JavaParser(java.io.InputStream stream, String encoding) {", "+    try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }", "+    token_source = new JavaParserTokenManager(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2041a535d7d84fceb11abb5073f6eb7f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 102, "signatureBeforeChange": "\r \r   final public void IfStatement() throws ParseException", "signatureAfterChange": "\r \r   final public void IfStatement() throws ParseException", "diff": ["-      jj_la1[137] = jj_gen;\r", "+      jj_la1[148] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "216990273a942cca5b9dcdc1a6065c5d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \r   final public void ConditionalOrExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalOrExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalOrExpression() throws ParseException {\r", "-    ConditionalAndExpression();\r", "-    label_40:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case SC_OR:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[93] = jj_gen;\r", "-        break label_40;\r", "-      }\r", "-      jj_consume_token(SC_OR);\r", "-                                      _cyc++;\r", "-      ConditionalAndExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalOrExpression() throws ParseException {", "+    ConditionalAndExpression();", "+    label_40:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case SC_OR:", "+        ;", "+        break;", "+      default:", "+        jj_la1[92] = jj_gen;", "+        break label_40;", "+      }", "+      jj_consume_token(SC_OR);", "+                                      _cyc++;", "+      ConditionalAndExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24551f19dde91acee119ebee01920f82", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "\r \r   final public void BreakStatement() throws ParseException", "signatureAfterChange": "    final public void BreakStatement() throws ParseException", "diff": ["-\r", "-  final public void BreakStatement() throws ParseException {\r", "-    jj_consume_token(BREAK);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case IDENTIFIER:\r", "-      Identifier();\r", "-      break;\r", "-    default:\r", "-      jj_la1[155] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-          _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void BreakStatement() throws ParseException {", "+    jj_consume_token(BREAK);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case IDENTIFIER:", "+      Identifier();", "+      break;", "+    default:", "+      jj_la1[156] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+          _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28aae687513cffff286abaa2ecf3ca2e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 147, "signatureBeforeChange": "\r \r   final public void WildcardBounds() throws ParseException", "signatureAfterChange": "    final public void WildcardBounds() throws ParseException", "diff": ["-\r", "-  final public void WildcardBounds() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case EXTENDS:\r", "-      jj_consume_token(EXTENDS);\r", "-      ReferenceType();\r", "-      break;\r", "-    case SUPER:\r", "-      jj_consume_token(SUPER);\r", "-      ReferenceType();\r", "-      break;\r", "-    default:\r", "-      jj_la1[196] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void WildcardBounds() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case EXTENDS:", "+      jj_consume_token(EXTENDS);", "+      ReferenceType();", "+      break;", "+    case SUPER:", "+      jj_consume_token(SUPER);", "+      ReferenceType();", "+      break;", "+    default:", "+      jj_la1[202] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3194d71301e004906d225f2fa7642d33", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 85, "signatureBeforeChange": "\r \r   final public void BooleanLiteral() throws ParseException", "signatureAfterChange": "\r \r   final public void BooleanLiteral() throws ParseException", "diff": ["-      jj_la1[117] = jj_gen;\r", "+      jj_la1[128] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3475f21e0b8ebdf585ac405d875cec0e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 665, "signatureBeforeChange": "\r   public void ReInit(java.io.Reader stream)", "signatureAfterChange": "   public void ReInit(java.io.Reader stream)", "diff": ["-  /** Reinitialise. */\r", "-  public void ReInit(java.io.Reader stream) {\r", "-    jj_input_stream.ReInit(stream, 1, 1);\r", "-    token_source.ReInit(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Reinitialise. */", "+  public void ReInit(java.io.Reader stream) {", "+    jj_input_stream.ReInit(stream, 1, 1);", "+    token_source.ReInit(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "363783f7fb4cbb91174d5b30c6e6920c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 630, "methodNumberAfterChange": 661, "signatureBeforeChange": "\r \r   public JavaParser(JavaParserTokenManager tm)", "signatureAfterChange": "\r   public JavaParser(JavaParserTokenManager tm)", "diff": ["+  /** Constructor with generated Token Manager. */\r", "-    for (int i = 0; i < 192; i++) jj_la1[i] = -1;\r", "+    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e79c24773614d5a2add9ada54a29da", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 87, "signatureBeforeChange": "\r \r   final public void Arguments() throws ParseException", "signatureAfterChange": "\r \r   final public void Arguments() throws ParseException", "diff": ["-      jj_la1[118] = jj_gen;\r", "+      jj_la1[129] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40052739b330cd0851563a0ab7817e3f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 124, "signatureBeforeChange": "\r \r   final public void MemberValue() throws ParseException", "signatureAfterChange": "    final public void MemberValue() throws ParseException", "diff": ["-\r", "-  final public void MemberValue() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case AT:\r", "-      Annotation();\r", "-      break;\r", "-    case LBRACE:\r", "-      MemberValueArrayInitializer();\r", "-      break;\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-    case BANG:\r", "-    case TILDE:\r", "-    case INCR:\r", "-    case DECR:\r", "-    case PLUS:\r", "-    case MINUS:\r", "-      ConditionalExpression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[164] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void MemberValue() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case AT:", "+      Annotation();", "+      break;", "+    case LBRACE:", "+      MemberValueArrayInitializer();", "+      break;", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+    case BANG:", "+    case TILDE:", "+    case INCR:", "+    case DECR:", "+    case PLUS:", "+    case MINUS:", "+      ConditionalExpression();", "+      break;", "+    default:", "+      jj_la1[169] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "416ca235a47665d238abe9cb5196f28a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "\r \r   final public void Arguments() throws ParseException", "signatureAfterChange": "    final public void Arguments() throws ParseException", "diff": ["-\r", "-  final public void Arguments() throws ParseException {\r", "-    jj_consume_token(LPAREN);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-    case BANG:\r", "-    case TILDE:\r", "-    case INCR:\r", "-    case DECR:\r", "-    case PLUS:\r", "-    case MINUS:\r", "-      ArgumentList();\r", "-      break;\r", "-    default:\r", "-      jj_la1[129] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(RPAREN);\r", "-  }\r", "+", "+  final public void Arguments() throws ParseException {", "+    jj_consume_token(LPAREN);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+    case BANG:", "+    case TILDE:", "+    case INCR:", "+    case DECR:", "+    case PLUS:", "+    case MINUS:", "+      ArgumentList();", "+      break;", "+    default:", "+      jj_la1[130] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(RPAREN);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "443b214975643c2c57cc972b098a0b4f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 122, "signatureBeforeChange": "\r \r   final public void MemberValue() throws ParseException", "signatureAfterChange": "\r \r   final public void MemberValue() throws ParseException", "diff": ["-      jj_la1[153] = jj_gen;\r", "+      jj_la1[164] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45bb36fcd801ee7488902c098cb33b89", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 631, "methodNumberAfterChange": 662, "signatureBeforeChange": "\r \r   public void ReInit(JavaParserTokenManager tm)", "signatureAfterChange": "\r   public void ReInit(JavaParserTokenManager tm)", "diff": ["+  /** Reinitialise. */\r", "-    for (int i = 0; i < 192; i++) jj_la1[i] = -1;\r", "+    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "476f8245982490b9c2f5ebf34429d7b5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \r   final public void ConditionalExpression() throws ParseException", "signatureAfterChange": "\r \r   final public void ConditionalExpression() throws ParseException", "diff": ["-      jj_la1[85] = jj_gen;\r", "+      jj_la1[92] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b84b5014a80a5a5fc535ced8407c7bc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 659, "methodNumberAfterChange": 664, "signatureBeforeChange": "\r   public JavaParser(java.io.Reader stream)", "signatureAfterChange": "   public JavaParser(java.io.Reader stream)", "diff": ["-  /** Constructor. */\r", "-  public JavaParser(java.io.Reader stream) {\r", "-    jj_input_stream = new JavaCharStream(stream, 1, 1);\r", "-    token_source = new JavaParserTokenManager(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Constructor. */", "+  public JavaParser(java.io.Reader stream) {", "+    jj_input_stream = new JavaCharStream(stream, 1, 1);", "+    token_source = new JavaParserTokenManager(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c2074997a46f4f0141a853a42c3ee6f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "\r \r   final public void BooleanLiteral() throws ParseException", "signatureAfterChange": "    final public void BooleanLiteral() throws ParseException", "diff": ["-\r", "-  final public void BooleanLiteral() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case TRUE:\r", "-      jj_consume_token(TRUE);\r", "-      break;\r", "-    case FALSE:\r", "-      jj_consume_token(FALSE);\r", "-      break;\r", "-    default:\r", "-      jj_la1[128] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void BooleanLiteral() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case TRUE:", "+      jj_consume_token(TRUE);", "+      break;", "+    case FALSE:", "+      jj_consume_token(FALSE);", "+      break;", "+    default:", "+      jj_la1[129] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e3fe6cf827f8fbb18d3063b1d60b3ad", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 139, "signatureBeforeChange": "\r \r   final public void TypeParameter() throws ParseException", "signatureAfterChange": "    final public void TypeParameter() throws ParseException", "diff": ["-\r", "-  final public void TypeParameter() throws ParseException {\r", "-    jj_consume_token(IDENTIFIER);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case EXTENDS:\r", "-      TypeBound();\r", "-      break;\r", "-    default:\r", "-      jj_la1[186] = jj_gen;\r", "-      ;\r", "-    }\r", "-  }\r", "+", "+  final public void TypeParameter() throws ParseException {", "+    jj_consume_token(IDENTIFIER);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case EXTENDS:", "+      TypeBound();", "+      break;", "+    default:", "+      jj_la1[191] = jj_gen;", "+      ;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5362929efa79c8c3aff79a10fc05a083", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 124, "signatureBeforeChange": "\r \r   final public void MemberValue() throws ParseException", "signatureAfterChange": "    final public void MemberValue() throws ParseException", "diff": ["-\r", "-  final public void MemberValue() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case AT:\r", "-      Annotation();\r", "-      break;\r", "-    case LBRACE:\r", "-      MemberValueArrayInitializer();\r", "-      break;\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-    case BANG:\r", "-    case TILDE:\r", "-    case INCR:\r", "-    case DECR:\r", "-    case PLUS:\r", "-    case MINUS:\r", "-      ConditionalExpression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[164] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void MemberValue() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case AT:", "+      Annotation();", "+      break;", "+    case LBRACE:", "+      MemberValueArrayInitializer();", "+      break;", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+    case BANG:", "+    case TILDE:", "+    case INCR:", "+    case DECR:", "+    case PLUS:", "+    case MINUS:", "+      ConditionalExpression();", "+      break;", "+    default:", "+      jj_la1[169] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59da655b18f3d6181a16605818d20834", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "\r \r   final public void ContinueStatement() throws ParseException", "signatureAfterChange": "    final public void ContinueStatement() throws ParseException", "diff": ["-\r", "-  final public void ContinueStatement() throws ParseException {\r", "-    jj_consume_token(CONTINUE);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case IDENTIFIER:\r", "-      Identifier();\r", "-      break;\r", "-    default:\r", "-      jj_la1[156] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-          _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void ContinueStatement() throws ParseException {", "+    jj_consume_token(CONTINUE);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case IDENTIFIER:", "+      Identifier();", "+      break;", "+    default:", "+      jj_la1[157] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+          _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5255b13a25c23db2ad9276e893f302", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "\r \r   final public void BooleanLiteral() throws ParseException", "signatureAfterChange": "    final public void BooleanLiteral() throws ParseException", "diff": ["-\r", "-  final public void BooleanLiteral() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case TRUE:\r", "-      jj_consume_token(TRUE);\r", "-      break;\r", "-    case FALSE:\r", "-      jj_consume_token(FALSE);\r", "-      break;\r", "-    default:\r", "-      jj_la1[128] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void BooleanLiteral() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case TRUE:", "+      jj_consume_token(TRUE);", "+      break;", "+    case FALSE:", "+      jj_consume_token(FALSE);", "+      break;", "+    default:", "+      jj_la1[129] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603b010e65c7e6eefafb45c43f84945e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 111, "signatureBeforeChange": "\r \r   final public void ReturnStatement() throws ParseException", "signatureAfterChange": "\r \r   final public void ReturnStatement() throws ParseException", "diff": ["-      jj_la1[146] = jj_gen;\r", "+      jj_la1[157] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61787bc101b0bc5fe5442c70d7c5e36e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r \r   final public void ResultType() throws ParseException", "signatureAfterChange": "\r \r   final public void ResultType() throws ParseException", "diff": ["-      jj_la1[77] = jj_gen;\r", "+      jj_la1[84] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f292b43decb5e5522c817592d2eeea", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 131, "signatureBeforeChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "diff": ["-      jj_la1[165] = jj_gen;\r", "+      jj_la1[177] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66aa41559992dddae613dcb72531bd79", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r   final public void VariableInitializer() throws ParseException", "signatureAfterChange": "\r \r   final public void VariableInitializer() throws ParseException", "diff": ["-      jj_la1[52] = jj_gen;\r", "+      jj_la1[58] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "683a549c66a399d926f3ef0829f04add", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \r   final public void AssignmentOperator() throws ParseException", "signatureAfterChange": "\r \r   final public void AssignmentOperator() throws ParseException", "diff": ["-      jj_la1[84] = jj_gen;\r", "+      jj_la1[91] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a19388297bd574f2ccbd5237f12735d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r \r   final public void Initializer() throws ParseException", "signatureAfterChange": "\r \r   final public void Initializer() throws ParseException", "diff": ["-      jj_la1[72] = jj_gen;\r", "+      jj_la1[79] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4e3212e7bd5e950f56ce940b9314ab", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r \r   final public void AssertStatement() throws ParseException", "signatureAfterChange": "    final public void AssertStatement() throws ParseException", "diff": ["-\r", "-  final public void AssertStatement() throws ParseException {\r", "-    jj_consume_token(ASSERT);\r", "-    Expression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case COLON:\r", "-      jj_consume_token(COLON);\r", "-      Expression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[138] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-    _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void AssertStatement() throws ParseException {", "+    jj_consume_token(ASSERT);", "+    Expression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case COLON:", "+      jj_consume_token(COLON);", "+      Expression();", "+      break;", "+    default:", "+      jj_la1[139] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+    _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c92f711b39ab6f73e260d4e45064d4f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 115, "signatureBeforeChange": "\r \r   final public void Identifier() throws ParseException", "signatureAfterChange": "\r \r   final public void Identifier() throws ParseException", "diff": ["-      jj_la1[149] = jj_gen;\r", "+      jj_la1[160] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "706172c714fa398dd90b7f98aaf98942", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \r   final public void Literal() throws ParseException", "signatureAfterChange": "    final public void Literal() throws ParseException", "diff": ["-\r", "-  final public void Literal() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case INTEGER_LITERAL:\r", "-      jj_consume_token(INTEGER_LITERAL);\r", "-      break;\r", "-    case FLOATING_POINT_LITERAL:\r", "-      jj_consume_token(FLOATING_POINT_LITERAL);\r", "-      break;\r", "-    case CHARACTER_LITERAL:\r", "-      jj_consume_token(CHARACTER_LITERAL);\r", "-      break;\r", "-    case STRING_LITERAL:\r", "-      jj_consume_token(STRING_LITERAL);\r", "-      break;\r", "-    case FALSE:\r", "-    case TRUE:\r", "-      BooleanLiteral();\r", "-      break;\r", "-    case NULL:\r", "-      NullLiteral();\r", "-      break;\r", "-    default:\r", "-      jj_la1[127] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void Literal() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case INTEGER_LITERAL:", "+      jj_consume_token(INTEGER_LITERAL);", "+      break;", "+    case FLOATING_POINT_LITERAL:", "+      jj_consume_token(FLOATING_POINT_LITERAL);", "+      break;", "+    case CHARACTER_LITERAL:", "+      jj_consume_token(CHARACTER_LITERAL);", "+      break;", "+    case STRING_LITERAL:", "+      jj_consume_token(STRING_LITERAL);", "+      break;", "+    case FALSE:", "+    case TRUE:", "+      BooleanLiteral();", "+      break;", "+    case NULL:", "+      NullLiteral();", "+      break;", "+    default:", "+      jj_la1[128] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754bb5689a34eac6683bef3bc88564d1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \r   final public void ConditionalExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalExpression() throws ParseException {\r", "-    ConditionalOrExpression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case HOOK:\r", "-      jj_consume_token(HOOK);\r", "-      Expression();\r", "-      jj_consume_token(COLON);\r", "-      ConditionalExpression();\r", "-                                                                             _cyc++;\r", "-      break;\r", "-    default:\r", "-      jj_la1[92] = jj_gen;\r", "-      ;\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalExpression() throws ParseException {", "+    ConditionalOrExpression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case HOOK:", "+      jj_consume_token(HOOK);", "+      Expression();", "+      jj_consume_token(COLON);", "+      ConditionalExpression();", "+                                                                             _cyc++;", "+      break;", "+    default:", "+      jj_la1[91] = jj_gen;", "+      ;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b0165f8b4a937d413f0f49595f409f1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \r   final public void Literal() throws ParseException", "signatureAfterChange": "    final public void Literal() throws ParseException", "diff": ["-\r", "-  final public void Literal() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case INTEGER_LITERAL:\r", "-      jj_consume_token(INTEGER_LITERAL);\r", "-      break;\r", "-    case FLOATING_POINT_LITERAL:\r", "-      jj_consume_token(FLOATING_POINT_LITERAL);\r", "-      break;\r", "-    case CHARACTER_LITERAL:\r", "-      jj_consume_token(CHARACTER_LITERAL);\r", "-      break;\r", "-    case STRING_LITERAL:\r", "-      jj_consume_token(STRING_LITERAL);\r", "-      break;\r", "-    case FALSE:\r", "-    case TRUE:\r", "-      BooleanLiteral();\r", "-      break;\r", "-    case NULL:\r", "-      NullLiteral();\r", "-      break;\r", "-    default:\r", "-      jj_la1[127] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void Literal() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case INTEGER_LITERAL:", "+      jj_consume_token(INTEGER_LITERAL);", "+      break;", "+    case FLOATING_POINT_LITERAL:", "+      jj_consume_token(FLOATING_POINT_LITERAL);", "+      break;", "+    case CHARACTER_LITERAL:", "+      jj_consume_token(CHARACTER_LITERAL);", "+      break;", "+    case STRING_LITERAL:", "+      jj_consume_token(STRING_LITERAL);", "+      break;", "+    case FALSE:", "+    case TRUE:", "+      BooleanLiteral();", "+      break;", "+    case NULL:", "+      NullLiteral();", "+      break;", "+    default:", "+      jj_la1[128] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b35c2acfd3100798b5d808a9d592df0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r \r   final public void AssertStatement() throws ParseException", "signatureAfterChange": "\r \r   final public void AssertStatement() throws ParseException", "diff": ["-      jj_la1[127] = jj_gen;\r", "+      jj_la1[138] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cb7fb91f4ca4564fceb53cd3f6b87c7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 145, "signatureBeforeChange": "\r \r   final public void WildcardBounds() throws ParseException", "signatureAfterChange": "\r \r   final public void WildcardBounds() throws ParseException", "diff": ["-      jj_la1[186] = jj_gen;\r", "+      jj_la1[196] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80c9fe0a11bf6779d2ef4889793c4f09", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 137, "signatureBeforeChange": "\r \r   final public void TypeParameter() throws ParseException", "signatureAfterChange": "\r \r   final public void TypeParameter() throws ParseException", "diff": ["-      jj_la1[176] = jj_gen;\r", "+      jj_la1[186] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85305b177e5768782eca77ecd7eca8f3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "\r \r   final public void SwitchLabel() throws ParseException", "signatureAfterChange": "    final public void SwitchLabel() throws ParseException", "diff": ["-\r", "-  final public void SwitchLabel() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case CASE:\r", "-      jj_consume_token(CASE);\r", "-      Expression();\r", "-      jj_consume_token(COLON);\r", "-                _ncss++;\r", "-                Util.debug( \"_ncss++\" );\r", "-                _localCases++;\r", "-                _cyc++;\r", "-      break;\r", "-    case _DEFAULT:\r", "-      jj_consume_token(_DEFAULT);\r", "-      jj_consume_token(COLON);\r", "-                _ncss++;       Util.debug( \"_ncss++\" );\r", "-      break;\r", "-    default:\r", "-      jj_la1[147] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void SwitchLabel() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case CASE:", "+      jj_consume_token(CASE);", "+      Expression();", "+      jj_consume_token(COLON);", "+                _ncss++;", "+                Util.debug( \"_ncss++\" );", "+                _localCases++;", "+                _cyc++;", "+      break;", "+    case _DEFAULT:", "+      jj_consume_token(_DEFAULT);", "+      jj_consume_token(COLON);", "+                _ncss++;       Util.debug( \"_ncss++\" );", "+      break;", "+    default:", "+      jj_la1[148] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f918bc1d5349d120bad1e9cb5d8996", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 110, "signatureBeforeChange": "\r \r   final public void ContinueStatement() throws ParseException", "signatureAfterChange": "\r \r   final public void ContinueStatement() throws ParseException", "diff": ["-      jj_la1[145] = jj_gen;\r", "+      jj_la1[156] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903cb669ae119b6ebe2f20be125e05dd", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": "\r \r   final public void ConditionalAndExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalAndExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalAndExpression() throws ParseException {\r", "-    InclusiveOrExpression();\r", "-    label_41:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case SC_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[94] = jj_gen;\r", "-        break label_41;\r", "-      }\r", "-      jj_consume_token(SC_AND);\r", "-                                   _cyc++;\r", "-      InclusiveOrExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalAndExpression() throws ParseException {", "+    InclusiveOrExpression();", "+    label_41:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case SC_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[93] = jj_gen;", "+        break label_41;", "+      }", "+      jj_consume_token(SC_AND);", "+                                   _cyc++;", "+      InclusiveOrExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9203f7536895ac3ebd242046eebafd5d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 628, "methodNumberAfterChange": 659, "signatureBeforeChange": "\r \r   public JavaParser(java.io.Reader stream)", "signatureAfterChange": "\r   public JavaParser(java.io.Reader stream)", "diff": ["+  /** Constructor. */\r", "-    for (int i = 0; i < 192; i++) jj_la1[i] = -1;\r", "+    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9285806472baeb1b04d8a8a0e533f4e1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 147, "signatureBeforeChange": "\r \r   final public void WildcardBounds() throws ParseException", "signatureAfterChange": "    final public void WildcardBounds() throws ParseException", "diff": ["-\r", "-  final public void WildcardBounds() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case EXTENDS:\r", "-      jj_consume_token(EXTENDS);\r", "-      ReferenceType();\r", "-      break;\r", "-    case SUPER:\r", "-      jj_consume_token(SUPER);\r", "-      ReferenceType();\r", "-      break;\r", "-    default:\r", "-      jj_la1[196] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void WildcardBounds() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case EXTENDS:", "+      jj_consume_token(EXTENDS);", "+      ReferenceType();", "+      break;", "+    case SUPER:", "+      jj_consume_token(SUPER);", "+      ReferenceType();", "+      break;", "+    default:", "+      jj_la1[202] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93bd8d11494308d34a4f219b37f792a7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \r   final public void ClassBody() throws ParseException", "signatureAfterChange": "\r \r   final public void ClassBody() throws ParseException", "diff": ["-        jj_la1[23] = jj_gen;\r", "+        jj_la1[25] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4f28c4c6c67c6abf8df78f6af89de4", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "\r \r   final public void SwitchLabel() throws ParseException", "signatureAfterChange": "    final public void SwitchLabel() throws ParseException", "diff": ["-\r", "-  final public void SwitchLabel() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case CASE:\r", "-      jj_consume_token(CASE);\r", "-      Expression();\r", "-      jj_consume_token(COLON);\r", "-                _ncss++;\r", "-                Util.debug( \"_ncss++\" );\r", "-                _localCases++;\r", "-                _cyc++;\r", "-      break;\r", "-    case _DEFAULT:\r", "-      jj_consume_token(_DEFAULT);\r", "-      jj_consume_token(COLON);\r", "-                _ncss++;       Util.debug( \"_ncss++\" );\r", "-      break;\r", "-    default:\r", "-      jj_la1[147] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void SwitchLabel() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case CASE:", "+      jj_consume_token(CASE);", "+      Expression();", "+      jj_consume_token(COLON);", "+                _ncss++;", "+                Util.debug( \"_ncss++\" );", "+                _localCases++;", "+                _cyc++;", "+      break;", "+    case _DEFAULT:", "+      jj_consume_token(_DEFAULT);", "+      jj_consume_token(COLON);", "+                _ncss++;       Util.debug( \"_ncss++\" );", "+      break;", "+    default:", "+      jj_la1[148] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1a7c4bced4c90222ae8476e92bf451", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 63, "signatureBeforeChange": "\r \r   final public void InclusiveOrExpression() throws ParseException", "signatureAfterChange": "    final public void InclusiveOrExpression() throws ParseException", "diff": ["-\r", "-  final public void InclusiveOrExpression() throws ParseException {\r", "-    ExclusiveOrExpression();\r", "-    label_42:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case BIT_OR:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[95] = jj_gen;\r", "-        break label_42;\r", "-      }\r", "-      jj_consume_token(BIT_OR);\r", "-      ExclusiveOrExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void InclusiveOrExpression() throws ParseException {", "+    ExclusiveOrExpression();", "+    label_42:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case BIT_OR:", "+        ;", "+        break;", "+      default:", "+        jj_la1[94] = jj_gen;", "+        break label_42;", "+      }", "+      jj_consume_token(BIT_OR);", "+      ExclusiveOrExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04d90ffc44a364166f71efd941a01d9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "\r \r   final public void ReturnStatement() throws ParseException", "signatureAfterChange": "    final public void ReturnStatement() throws ParseException", "diff": ["-\r", "-  final public void ReturnStatement() throws ParseException {\r", "-    jj_consume_token(RETURN);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-    case BANG:\r", "-    case TILDE:\r", "-    case INCR:\r", "-    case DECR:\r", "-    case PLUS:\r", "-    case MINUS:\r", "-      Expression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[157] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-                _ncss++;\r", "-                Util.debug( \"_ncss++\" );\r", "-                _cyc++;\r", "-                _bReturn = true;\r", "-  }\r", "+", "+  final public void ReturnStatement() throws ParseException {", "+    jj_consume_token(RETURN);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+    case BANG:", "+    case TILDE:", "+    case INCR:", "+    case DECR:", "+    case PLUS:", "+    case MINUS:", "+      Expression();", "+      break;", "+    default:", "+      jj_la1[158] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+                _ncss++;", "+                Util.debug( \"_ncss++\" );", "+                _cyc++;", "+                _bReturn = true;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1cee5d65e728e8a547c30d81b8d4e6b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "\r \r   final public void IfStatement() throws ParseException", "signatureAfterChange": "    final public void IfStatement() throws ParseException", "diff": ["-\r", "-  final public void IfStatement() throws ParseException {\r", "-    jj_consume_token(IF);\r", "-    jj_consume_token(LPAREN);\r", "-    Expression();\r", "-    jj_consume_token(RPAREN);\r", "-    Statement();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ELSE:\r", "-      jj_consume_token(ELSE);\r", "-                                                                _ncss++;       Util.debug( \"_ncss++\" );\r", "-      Statement();\r", "-      break;\r", "-    default:\r", "-      jj_la1[148] = jj_gen;\r", "-      ;\r", "-    }\r", "-          _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void IfStatement() throws ParseException {", "+    jj_consume_token(IF);", "+    jj_consume_token(LPAREN);", "+    Expression();", "+    jj_consume_token(RPAREN);", "+    Statement();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ELSE:", "+      jj_consume_token(ELSE);", "+                                                                _ncss++;       Util.debug( \"_ncss++\" );", "+      Statement();", "+      break;", "+    default:", "+      jj_la1[149] = jj_gen;", "+      ;", "+    }", "+          _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7c7469209a18de852b50132dde82856", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "\r \r   final public void ContinueStatement() throws ParseException", "signatureAfterChange": "    final public void ContinueStatement() throws ParseException", "diff": ["-\r", "-  final public void ContinueStatement() throws ParseException {\r", "-    jj_consume_token(CONTINUE);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case IDENTIFIER:\r", "-      Identifier();\r", "-      break;\r", "-    default:\r", "-      jj_la1[156] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-          _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void ContinueStatement() throws ParseException {", "+    jj_consume_token(CONTINUE);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case IDENTIFIER:", "+      Identifier();", "+      break;", "+    default:", "+      jj_la1[157] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+          _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac336778546d14c9110f8446190c8692", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 658, "methodNumberAfterChange": 663, "signatureBeforeChange": "\r   public void ReInit(java.io.InputStream stream, String encoding)", "signatureAfterChange": "   public void ReInit(java.io.InputStream stream, String encoding)", "diff": ["-  /** Reinitialise. */\r", "-  public void ReInit(java.io.InputStream stream, String encoding) {\r", "-    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }\r", "-    token_source.ReInit(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Reinitialise. */", "+  public void ReInit(java.io.InputStream stream, String encoding) {", "+    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }", "+    token_source.ReInit(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca47a197ea5dbd1bff7d6f84825c033", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 63, "signatureBeforeChange": "\r \r   final public void InclusiveOrExpression() throws ParseException", "signatureAfterChange": "    final public void InclusiveOrExpression() throws ParseException", "diff": ["-\r", "-  final public void InclusiveOrExpression() throws ParseException {\r", "-    ExclusiveOrExpression();\r", "-    label_42:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case BIT_OR:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[95] = jj_gen;\r", "-        break label_42;\r", "-      }\r", "-      jj_consume_token(BIT_OR);\r", "-      ExclusiveOrExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void InclusiveOrExpression() throws ParseException {", "+    ExclusiveOrExpression();", "+    label_42:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case BIT_OR:", "+        ;", "+        break;", "+      default:", "+        jj_la1[94] = jj_gen;", "+        break label_42;", "+      }", "+      jj_consume_token(BIT_OR);", "+      ExclusiveOrExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad50df285a04f8432827e5bd6fdc3feb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "\r \r   final public void IfStatement() throws ParseException", "signatureAfterChange": "    final public void IfStatement() throws ParseException", "diff": ["-\r", "-  final public void IfStatement() throws ParseException {\r", "-    jj_consume_token(IF);\r", "-    jj_consume_token(LPAREN);\r", "-    Expression();\r", "-    jj_consume_token(RPAREN);\r", "-    Statement();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ELSE:\r", "-      jj_consume_token(ELSE);\r", "-                                                                _ncss++;       Util.debug( \"_ncss++\" );\r", "-      Statement();\r", "-      break;\r", "-    default:\r", "-      jj_la1[148] = jj_gen;\r", "-      ;\r", "-    }\r", "-          _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void IfStatement() throws ParseException {", "+    jj_consume_token(IF);", "+    jj_consume_token(LPAREN);", "+    Expression();", "+    jj_consume_token(RPAREN);", "+    Statement();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ELSE:", "+      jj_consume_token(ELSE);", "+                                                                _ncss++;       Util.debug( \"_ncss++\" );", "+      Statement();", "+      break;", "+    default:", "+      jj_la1[149] = jj_gen;", "+      ;", "+    }", "+          _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad815b9c7a889f2814993f5863cdf56e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r \r   final public void AssertStatement() throws ParseException", "signatureAfterChange": "    final public void AssertStatement() throws ParseException", "diff": ["-\r", "-  final public void AssertStatement() throws ParseException {\r", "-    jj_consume_token(ASSERT);\r", "-    Expression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case COLON:\r", "-      jj_consume_token(COLON);\r", "-      Expression();\r", "-      break;\r", "-    default:\r", "-      jj_la1[138] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-    _ncss++;       Util.debug( \"_ncss++\" );\r", "-  }\r", "+", "+  final public void AssertStatement() throws ParseException {", "+    jj_consume_token(ASSERT);", "+    Expression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case COLON:", "+      jj_consume_token(COLON);", "+      Expression();", "+      break;", "+    default:", "+      jj_la1[139] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(SEMICOLON);", "+    _ncss++;       Util.debug( \"_ncss++\" );", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aede75b5fc9a942b77e62e824a1b961f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 150, "signatureBeforeChange": "\r \r   final public void FormalParameter15() throws ParseException", "signatureAfterChange": "\r \r   final public void FormalParameter15() throws ParseException", "diff": ["-      jj_la1[191] = jj_gen;\r", "+      jj_la1[201] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1abde08a418096174f3766c88d16f77", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 152, "signatureBeforeChange": "\r \r   final public void FormalParameter15() throws ParseException", "signatureAfterChange": "    final public void FormalParameter15() throws ParseException", "diff": ["-\r", "-  final public void FormalParameter15() throws ParseException {\r", "-    Modifiers();\r", "-    Type();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ELLIPSIS:\r", "-      jj_consume_token(ELLIPSIS);\r", "-      break;\r", "-    default:\r", "-      jj_la1[201] = jj_gen;\r", "-      ;\r", "-    }\r", "-    VariableDeclaratorId();\r", "-  }\r", "+", "+  final public void FormalParameter15() throws ParseException {", "+    Modifiers();", "+    Type();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ELLIPSIS:", "+      jj_consume_token(ELLIPSIS);", "+      break;", "+    default:", "+      jj_la1[207] = jj_gen;", "+      ;", "+    }", "+    VariableDeclaratorId();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d4375310d91ca5333114c0bfd6d936", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 64, "signatureBeforeChange": "\r \r   final public void ExclusiveOrExpression() throws ParseException", "signatureAfterChange": "    final public void ExclusiveOrExpression() throws ParseException", "diff": ["-\r", "-  final public void ExclusiveOrExpression() throws ParseException {\r", "-    AndExpression();\r", "-    label_43:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case XOR:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[96] = jj_gen;\r", "-        break label_43;\r", "-      }\r", "-      jj_consume_token(XOR);\r", "-      AndExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ExclusiveOrExpression() throws ParseException {", "+    AndExpression();", "+    label_43:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case XOR:", "+        ;", "+        break;", "+      default:", "+        jj_la1[95] = jj_gen;", "+        break label_43;", "+      }", "+      jj_consume_token(XOR);", "+      AndExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be3add3ee0b258f6f3e0abeea1cb67a3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r   final public void AssignmentOperator() throws ParseException", "signatureAfterChange": "   final public void AssignmentOperator() throws ParseException", "diff": ["-\r", "-  final public void AssignmentOperator() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSIGN:\r", "-      jj_consume_token(ASSIGN);\r", "-      break;\r", "-    case STARASSIGN:\r", "-      jj_consume_token(STARASSIGN);\r", "-      break;\r", "-    case SLASHASSIGN:\r", "-      jj_consume_token(SLASHASSIGN);\r", "-      break;\r", "-    case REMASSIGN:\r", "-      jj_consume_token(REMASSIGN);\r", "-      break;\r", "-    case PLUSASSIGN:\r", "-      jj_consume_token(PLUSASSIGN);\r", "-      break;\r", "-    case MINUSASSIGN:\r", "-      jj_consume_token(MINUSASSIGN);\r", "-      break;\r", "-    case LSHIFTASSIGN:\r", "-      jj_consume_token(LSHIFTASSIGN);\r", "-      break;\r", "-    case RSIGNEDSHIFTASSIGN:\r", "-      jj_consume_token(RSIGNEDSHIFTASSIGN);\r", "-      break;\r", "-    case RUNSIGNEDSHIFTASSIGN:\r", "-      jj_consume_token(RUNSIGNEDSHIFTASSIGN);\r", "-      break;\r", "-    case ANDASSIGN:\r", "-      jj_consume_token(ANDASSIGN);\r", "-      break;\r", "-    case XORASSIGN:\r", "-      jj_consume_token(XORASSIGN);\r", "-      break;\r", "-    case ORASSIGN:\r", "-      jj_consume_token(ORASSIGN);\r", "-      break;\r", "-    default:\r", "-      jj_la1[91] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+*/", "+  final public void AssignmentOperator() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSIGN:", "+      jj_consume_token(ASSIGN);", "+      break;", "+    case STARASSIGN:", "+      jj_consume_token(STARASSIGN);", "+      break;", "+    case SLASHASSIGN:", "+      jj_consume_token(SLASHASSIGN);", "+      break;", "+    case REMASSIGN:", "+      jj_consume_token(REMASSIGN);", "+      break;", "+    case PLUSASSIGN:", "+      jj_consume_token(PLUSASSIGN);", "+      break;", "+    case MINUSASSIGN:", "+      jj_consume_token(MINUSASSIGN);", "+      break;", "+    case LSHIFTASSIGN:", "+      jj_consume_token(LSHIFTASSIGN);", "+      break;", "+    case RSIGNEDSHIFTASSIGN:", "+      jj_consume_token(RSIGNEDSHIFTASSIGN);", "+      break;", "+    case RUNSIGNEDSHIFTASSIGN:", "+      jj_consume_token(RUNSIGNEDSHIFTASSIGN);", "+      break;", "+    case ANDASSIGN:", "+      jj_consume_token(ANDASSIGN);", "+      break;", "+    case XORASSIGN:", "+      jj_consume_token(XORASSIGN);", "+      break;", "+    case ORASSIGN:", "+      jj_consume_token(ORASSIGN);", "+      break;", "+    default:", "+      jj_la1[90] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0020057c99386edb70d1b75eb91f8fd", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 659, "methodNumberAfterChange": 664, "signatureBeforeChange": "\r   public JavaParser(java.io.Reader stream)", "signatureAfterChange": "   public JavaParser(java.io.Reader stream)", "diff": ["-  /** Constructor. */\r", "-  public JavaParser(java.io.Reader stream) {\r", "-    jj_input_stream = new JavaCharStream(stream, 1, 1);\r", "-    token_source = new JavaParserTokenManager(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Constructor. */", "+  public JavaParser(java.io.Reader stream) {", "+    jj_input_stream = new JavaCharStream(stream, 1, 1);", "+    token_source = new JavaParserTokenManager(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c01a298c52ba66a7eabe2676932b7ca8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "\r \r   final public void Arguments() throws ParseException", "signatureAfterChange": "    final public void Arguments() throws ParseException", "diff": ["-\r", "-  final public void Arguments() throws ParseException {\r", "-    jj_consume_token(LPAREN);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-    case BANG:\r", "-    case TILDE:\r", "-    case INCR:\r", "-    case DECR:\r", "-    case PLUS:\r", "-    case MINUS:\r", "-      ArgumentList();\r", "-      break;\r", "-    default:\r", "-      jj_la1[129] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(RPAREN);\r", "-  }\r", "+", "+  final public void Arguments() throws ParseException {", "+    jj_consume_token(LPAREN);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+    case BANG:", "+    case TILDE:", "+    case INCR:", "+    case DECR:", "+    case PLUS:", "+    case MINUS:", "+      ArgumentList();", "+      break;", "+    default:", "+      jj_la1[130] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(RPAREN);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c581532759db6ca872a32ab46ab5ef97", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 64, "signatureBeforeChange": "\r \r   final public void ExclusiveOrExpression() throws ParseException", "signatureAfterChange": "    final public void ExclusiveOrExpression() throws ParseException", "diff": ["-\r", "-  final public void ExclusiveOrExpression() throws ParseException {\r", "-    AndExpression();\r", "-    label_43:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case XOR:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[96] = jj_gen;\r", "-        break label_43;\r", "-      }\r", "-      jj_consume_token(XOR);\r", "-      AndExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ExclusiveOrExpression() throws ParseException {", "+    AndExpression();", "+    label_43:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case XOR:", "+        ;", "+        break;", "+      default:", "+        jj_la1[95] = jj_gen;", "+        break label_43;", "+      }", "+      jj_consume_token(XOR);", "+      AndExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7524540de93583beb7fecb1c2b6af81", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 656, "methodNumberAfterChange": 661, "signatureBeforeChange": "\r   public JavaParser(java.io.InputStream stream, String encoding)", "signatureAfterChange": "   public JavaParser(java.io.InputStream stream, String encoding)", "diff": ["-  /** Constructor with InputStream and supplied encoding */\r", "-  public JavaParser(java.io.InputStream stream, String encoding) {\r", "-    try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }\r", "-    token_source = new JavaParserTokenManager(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Constructor with InputStream and supplied encoding */", "+  public JavaParser(java.io.InputStream stream, String encoding) {", "+    try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }", "+    token_source = new JavaParserTokenManager(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7908e3336ef2e998ca9cade540000b6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r   final public void AssignmentOperator() throws ParseException", "signatureAfterChange": "   final public void AssignmentOperator() throws ParseException", "diff": ["-\r", "-  final public void AssignmentOperator() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ASSIGN:\r", "-      jj_consume_token(ASSIGN);\r", "-      break;\r", "-    case STARASSIGN:\r", "-      jj_consume_token(STARASSIGN);\r", "-      break;\r", "-    case SLASHASSIGN:\r", "-      jj_consume_token(SLASHASSIGN);\r", "-      break;\r", "-    case REMASSIGN:\r", "-      jj_consume_token(REMASSIGN);\r", "-      break;\r", "-    case PLUSASSIGN:\r", "-      jj_consume_token(PLUSASSIGN);\r", "-      break;\r", "-    case MINUSASSIGN:\r", "-      jj_consume_token(MINUSASSIGN);\r", "-      break;\r", "-    case LSHIFTASSIGN:\r", "-      jj_consume_token(LSHIFTASSIGN);\r", "-      break;\r", "-    case RSIGNEDSHIFTASSIGN:\r", "-      jj_consume_token(RSIGNEDSHIFTASSIGN);\r", "-      break;\r", "-    case RUNSIGNEDSHIFTASSIGN:\r", "-      jj_consume_token(RUNSIGNEDSHIFTASSIGN);\r", "-      break;\r", "-    case ANDASSIGN:\r", "-      jj_consume_token(ANDASSIGN);\r", "-      break;\r", "-    case XORASSIGN:\r", "-      jj_consume_token(XORASSIGN);\r", "-      break;\r", "-    case ORASSIGN:\r", "-      jj_consume_token(ORASSIGN);\r", "-      break;\r", "-    default:\r", "-      jj_la1[91] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+*/", "+  final public void AssignmentOperator() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ASSIGN:", "+      jj_consume_token(ASSIGN);", "+      break;", "+    case STARASSIGN:", "+      jj_consume_token(STARASSIGN);", "+      break;", "+    case SLASHASSIGN:", "+      jj_consume_token(SLASHASSIGN);", "+      break;", "+    case REMASSIGN:", "+      jj_consume_token(REMASSIGN);", "+      break;", "+    case PLUSASSIGN:", "+      jj_consume_token(PLUSASSIGN);", "+      break;", "+    case MINUSASSIGN:", "+      jj_consume_token(MINUSASSIGN);", "+      break;", "+    case LSHIFTASSIGN:", "+      jj_consume_token(LSHIFTASSIGN);", "+      break;", "+    case RSIGNEDSHIFTASSIGN:", "+      jj_consume_token(RSIGNEDSHIFTASSIGN);", "+      break;", "+    case RUNSIGNEDSHIFTASSIGN:", "+      jj_consume_token(RUNSIGNEDSHIFTASSIGN);", "+      break;", "+    case ANDASSIGN:", "+      jj_consume_token(ANDASSIGN);", "+      break;", "+    case XORASSIGN:", "+      jj_consume_token(XORASSIGN);", "+      break;", "+    case ORASSIGN:", "+      jj_consume_token(ORASSIGN);", "+      break;", "+    default:", "+      jj_la1[90] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7913cab0aba96a34ffc1b2c2c18d8f5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 629, "methodNumberAfterChange": 660, "signatureBeforeChange": "\r \r   public void ReInit(java.io.Reader stream)", "signatureAfterChange": "\r   public void ReInit(java.io.Reader stream)", "diff": ["+  /** Reinitialise. */\r", "-    for (int i = 0; i < 192; i++) jj_la1[i] = -1;\r", "+    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca332b4492727ef350354ed9f5e0503a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": "\r \r   final public void ConditionalAndExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalAndExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalAndExpression() throws ParseException {\r", "-    InclusiveOrExpression();\r", "-    label_41:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case SC_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[94] = jj_gen;\r", "-        break label_41;\r", "-      }\r", "-      jj_consume_token(SC_AND);\r", "-                                   _cyc++;\r", "-      InclusiveOrExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalAndExpression() throws ParseException {", "+    InclusiveOrExpression();", "+    label_41:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case SC_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[93] = jj_gen;", "+        break label_41;", "+      }", "+      jj_consume_token(SC_AND);", "+                                   _cyc++;", "+      InclusiveOrExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbccce7d7037e49318058073af71c9a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \r   final public void ConditionalExpression() throws ParseException", "signatureAfterChange": "    final public void ConditionalExpression() throws ParseException", "diff": ["-\r", "-  final public void ConditionalExpression() throws ParseException {\r", "-    ConditionalOrExpression();\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case HOOK:\r", "-      jj_consume_token(HOOK);\r", "-      Expression();\r", "-      jj_consume_token(COLON);\r", "-      ConditionalExpression();\r", "-                                                                             _cyc++;\r", "-      break;\r", "-    default:\r", "-      jj_la1[92] = jj_gen;\r", "-      ;\r", "-    }\r", "-  }\r", "+", "+  final public void ConditionalExpression() throws ParseException {", "+    ConditionalOrExpression();", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case HOOK:", "+      jj_consume_token(HOOK);", "+      Expression();", "+      jj_consume_token(COLON);", "+      ConditionalExpression();", "+                                                                             _cyc++;", "+      break;", "+    default:", "+      jj_la1[91] = jj_gen;", "+      ;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0849dd214cc39a012e97d5c2fc0494e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 101, "signatureBeforeChange": "\r \r   final public void SwitchLabel() throws ParseException", "signatureAfterChange": "\r \r   final public void SwitchLabel() throws ParseException", "diff": ["-      jj_la1[136] = jj_gen;\r", "+      jj_la1[147] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d09e82a4315f056b3ecdfc2f9bd0bc32", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 65, "signatureBeforeChange": "\r \r   final public void AndExpression() throws ParseException", "signatureAfterChange": "    final public void AndExpression() throws ParseException", "diff": ["-\r", "-  final public void AndExpression() throws ParseException {\r", "-    EqualityExpression();\r", "-    label_44:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case BIT_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[97] = jj_gen;\r", "-        break label_44;\r", "-      }\r", "-      jj_consume_token(BIT_AND);\r", "-      EqualityExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void AndExpression() throws ParseException {", "+    EqualityExpression();", "+    label_44:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case BIT_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[96] = jj_gen;", "+        break label_44;", "+      }", "+      jj_consume_token(BIT_AND);", "+      EqualityExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d629570fa22d2ae5fba475e4ef5d35a5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 119, "signatureBeforeChange": "\r \r   final public void NormalAnnotation() throws ParseException", "signatureAfterChange": "    final public void NormalAnnotation() throws ParseException", "diff": ["-\r", "-  final public void NormalAnnotation() throws ParseException {\r", "-    jj_consume_token(AT);\r", "-    Name();\r", "-    jj_consume_token(LPAREN);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IDENTIFIER:\r", "-      MemberValuePairs();\r", "-      break;\r", "-    default:\r", "-      jj_la1[162] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(RPAREN);\r", "-  }\r", "+", "+  final public void NormalAnnotation() throws ParseException {", "+    jj_consume_token(AT);", "+    Name();", "+    jj_consume_token(LPAREN);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IDENTIFIER:", "+      MemberValuePairs();", "+      break;", "+    default:", "+      jj_la1[167] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(RPAREN);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da682f36ddb7e61b9bb48bff01c377a8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 665, "signatureBeforeChange": "\r   public void ReInit(java.io.Reader stream)", "signatureAfterChange": "   public void ReInit(java.io.Reader stream)", "diff": ["-  /** Reinitialise. */\r", "-  public void ReInit(java.io.Reader stream) {\r", "-    jj_input_stream.ReInit(stream, 1, 1);\r", "-    token_source.ReInit(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Reinitialise. */", "+  public void ReInit(java.io.Reader stream) {", "+    jj_input_stream.ReInit(stream, 1, 1);", "+    token_source.ReInit(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dab435896ebd7964bbe2400be0c5b54d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \r   final public void Literal() throws ParseException", "signatureAfterChange": "\r \r   final public void Literal() throws ParseException", "diff": ["-      jj_la1[116] = jj_gen;\r", "+      jj_la1[127] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc248283b9a7fc65c6d9cea49ab9f3dc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 662, "methodNumberAfterChange": 667, "signatureBeforeChange": "\r   public void ReInit(JavaParserTokenManager tm)", "signatureAfterChange": "   public void ReInit(JavaParserTokenManager tm)", "diff": ["-  /** Reinitialise. */\r", "-  public void ReInit(JavaParserTokenManager tm) {\r", "-    token_source = tm;\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Reinitialise. */", "+  public void ReInit(JavaParserTokenManager tm) {", "+    token_source = tm;", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7e2a016d8e30b105c7ba35187c466f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 662, "methodNumberAfterChange": 667, "signatureBeforeChange": "\r   public void ReInit(JavaParserTokenManager tm)", "signatureAfterChange": "   public void ReInit(JavaParserTokenManager tm)", "diff": ["-  /** Reinitialise. */\r", "-  public void ReInit(JavaParserTokenManager tm) {\r", "-    token_source = tm;\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Reinitialise. */", "+  public void ReInit(JavaParserTokenManager tm) {", "+    token_source = tm;", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddee73fc1bf6b6d4203bfb508fe038bb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 119, "signatureBeforeChange": "\r \r   final public void NormalAnnotation() throws ParseException", "signatureAfterChange": "    final public void NormalAnnotation() throws ParseException", "diff": ["-\r", "-  final public void NormalAnnotation() throws ParseException {\r", "-    jj_consume_token(AT);\r", "-    Name();\r", "-    jj_consume_token(LPAREN);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IDENTIFIER:\r", "-      MemberValuePairs();\r", "-      break;\r", "-    default:\r", "-      jj_la1[162] = jj_gen;\r", "-      ;\r", "-    }\r", "-    jj_consume_token(RPAREN);\r", "-  }\r", "+", "+  final public void NormalAnnotation() throws ParseException {", "+    jj_consume_token(AT);", "+    Name();", "+    jj_consume_token(LPAREN);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IDENTIFIER:", "+      MemberValuePairs();", "+      break;", "+    default:", "+      jj_la1[167] = jj_gen;", "+      ;", "+    }", "+    jj_consume_token(RPAREN);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddeeaa895b39680a9257b6bab215c025", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 627, "methodNumberAfterChange": 658, "signatureBeforeChange": "\r   public void ReInit(java.io.InputStream stream, String encoding)", "signatureAfterChange": "\r   public void ReInit(java.io.InputStream stream, String encoding)", "diff": ["+  /** Reinitialise. */\r", "-    for (int i = 0; i < 192; i++) jj_la1[i] = -1;\r", "+    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1c187ee894d5e9c13763ce826ac3ba", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 133, "signatureBeforeChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "    final public void EnumDeclaration(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void EnumDeclaration(int modifiers) throws ParseException {\r", "-        String sOldClass = _sClass;\r", "-        int oldClasses = _classes;\r", "-        int oldNcss = _ncss;\r", "-        int oldFunctions = _functions;\r", "-\r", "-        // Chris Povirk\r", "-        int oldSingle;\r", "-        int oldMulti;\r", "-      Util.debug( \"EnumDeclaration().START\" );\r", "-    jj_consume_token(ENUM);\r", "-    jj_consume_token(IDENTIFIER);\r", "-                if (!_sClass.equals(\"\")) {\r", "-                        _sClass += \".\";\r", "-                }\r", "-                _sClass += getToken(0).image;\r", "-                _classLevel ++;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IMPLEMENTS:\r", "-      ImplementsList(false);\r", "-      break;\r", "-    default:\r", "-      jj_la1[177] = jj_gen;\r", "-      ;\r", "-    }\r", "-        // Chris Povirk\r", "-      oldSingle = JavaParserTokenManager._iSingleComments;\r", "-      oldMulti = JavaParserTokenManager._iMultiComments;\r", "-    EnumBody();\r", "-             _classLevel--;\r", "-             if (_classLevel == 0) {\r", "-                 //_topLevelClasses++;\r", "-                 ObjectMetric metric = new ObjectMetric();\r", "-                 metric.name = _sPackage + _sClass;\r", "-                 metric.ncss = _ncss - oldNcss;\r", "-                 metric.functions = _functions - oldFunctions;\r", "-                 metric.classes = _classes - oldClasses;\r", "-                 Token lastToken = getToken( 0 );\r", "-                 //metric.add( new Integer( lastToken.endLine ) );\r", "-                 //metric.add( new Integer( lastToken.endColumn ) );\r", "-                 metric.javadocs = _javadocs;\r", "-\r", "-                 // Chris Povirk\r", "-                 metric.javadocsLn = _jvdcLines;\r", "-                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;\r", "-\r", "-                 _vClasses.add(metric);\r", "-                 _pPackageMetric.functions += _functions - oldFunctions;\r", "-                 _pPackageMetric.classes++;\r", "-\r", "-                 // added by SMS\r", "-                 _pPackageMetric.javadocs += _javadocs;\r", "-                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;\r", "-                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;\r", "-                 //\r", "-             }\r", "-             _functions = oldFunctions;\r", "-             _classes = oldClasses + 1;\r", "-             _sClass = sOldClass;\r", "-  }\r", "+", "+  final public void EnumDeclaration(int modifiers) throws ParseException {", "+        String sOldClass = _sClass;", "+        int oldClasses = _classes;", "+        int oldNcss = _ncss;", "+        int oldFunctions = _functions;", "+", "+        // Chris Povirk", "+        int oldSingle;", "+        int oldMulti;", "+      Util.debug( \"EnumDeclaration().START\" );", "+    jj_consume_token(ENUM);", "+    jj_consume_token(IDENTIFIER);", "+                if (!_sClass.equals(\"\")) {", "+                        _sClass += \".\";", "+                }", "+                _sClass += getToken(0).image;", "+                _classLevel ++;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IMPLEMENTS:", "+      ImplementsList(false);", "+      break;", "+    default:", "+      jj_la1[182] = jj_gen;", "+      ;", "+    }", "+        // Chris Povirk", "+      oldSingle = JavaParserTokenManager._iSingleComments;", "+      oldMulti = JavaParserTokenManager._iMultiComments;", "+    EnumBody();", "+             _classLevel--;", "+             if (_classLevel == 0) {", "+                 //_topLevelClasses++;", "+                 ObjectMetric metric = new ObjectMetric();", "+                 metric.name = _sPackage + _sClass;", "+                 metric.ncss = _ncss - oldNcss;", "+                 metric.functions = _functions - oldFunctions;", "+                 metric.classes = _classes - oldClasses;", "+                 Token lastToken = getToken( 0 );", "+                 //metric.add( new Integer( lastToken.endLine ) );", "+                 //metric.add( new Integer( lastToken.endColumn ) );", "+                 metric.javadocs = _javadocs;", "+", "+                 // Chris Povirk", "+                 metric.javadocsLn = _jvdcLines;", "+                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;", "+                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;", "+", "+                 _vClasses.add(metric);", "+                 _pPackageMetric.functions += _functions - oldFunctions;", "+                 _pPackageMetric.classes++;", "+", "+                 // added by SMS", "+                 _pPackageMetric.javadocs += _javadocs;", "+                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;", "+                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;", "+                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;", "+                 //", "+             }", "+             _functions = oldFunctions;", "+             _classes = oldClasses + 1;", "+             _sClass = sOldClass;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c50f3790f9b5923c845597a947ea8e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 658, "methodNumberAfterChange": 663, "signatureBeforeChange": "\r   public void ReInit(java.io.InputStream stream, String encoding)", "signatureAfterChange": "   public void ReInit(java.io.InputStream stream, String encoding)", "diff": ["-  /** Reinitialise. */\r", "-  public void ReInit(java.io.InputStream stream, String encoding) {\r", "-    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }\r", "-    token_source.ReInit(jj_input_stream);\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Reinitialise. */", "+  public void ReInit(java.io.InputStream stream, String encoding) {", "+    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }", "+    token_source.ReInit(jj_input_stream);", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64129feb7cc5121ec0015a43a134a61", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 109, "signatureBeforeChange": "\r \r   final public void BreakStatement() throws ParseException", "signatureAfterChange": "\r \r   final public void BreakStatement() throws ParseException", "diff": ["-      jj_la1[144] = jj_gen;\r", "+      jj_la1[155] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb737694bcc3ec2b1e114b773fde2bd6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 139, "signatureBeforeChange": "\r \r   final public void TypeParameter() throws ParseException", "signatureAfterChange": "    final public void TypeParameter() throws ParseException", "diff": ["-\r", "-  final public void TypeParameter() throws ParseException {\r", "-    jj_consume_token(IDENTIFIER);\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case EXTENDS:\r", "-      TypeBound();\r", "-      break;\r", "-    default:\r", "-      jj_la1[186] = jj_gen;\r", "-      ;\r", "-    }\r", "-  }\r", "+", "+  final public void TypeParameter() throws ParseException {", "+    jj_consume_token(IDENTIFIER);", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case EXTENDS:", "+      TypeBound();", "+      break;", "+    default:", "+      jj_la1[191] = jj_gen;", "+      ;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1b87e4ce0ab05bc42024f25246f923", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r   final public void VariableDeclarator() throws ParseException", "signatureAfterChange": "\r \r   final public void VariableDeclarator() throws ParseException", "diff": ["-      jj_la1[49] = jj_gen;\r", "+      jj_la1[55] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01896c5be73eec3b28116abe76352c3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 117, "signatureBeforeChange": "\r \r   final public void Identifier() throws ParseException", "signatureAfterChange": "    final public void Identifier() throws ParseException", "diff": ["-\r", "-  final public void Identifier() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IDENTIFIER:\r", "-      jj_consume_token(IDENTIFIER);\r", "-      break;\r", "-    case ASSERT:\r", "-      jj_consume_token(ASSERT);\r", "-      break;\r", "-    default:\r", "-      jj_la1[160] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void Identifier() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IDENTIFIER:", "+      jj_consume_token(IDENTIFIER);", "+      break;", "+    case ASSERT:", "+      jj_consume_token(ASSERT);", "+      break;", "+    default:", "+      jj_la1[165] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2b51c23fdef2ff684f046507855a124", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 117, "signatureBeforeChange": "\r \r   final public void NormalAnnotation() throws ParseException", "signatureAfterChange": "\r \r   final public void NormalAnnotation() throws ParseException", "diff": ["-      jj_la1[151] = jj_gen;\r", "+      jj_la1[162] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4834aa6f77aa39f1bf2a913afab841b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 65, "signatureBeforeChange": "\r \r   final public void AndExpression() throws ParseException", "signatureAfterChange": "    final public void AndExpression() throws ParseException", "diff": ["-\r", "-  final public void AndExpression() throws ParseException {\r", "-    EqualityExpression();\r", "-    label_44:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case BIT_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[97] = jj_gen;\r", "-        break label_44;\r", "-      }\r", "-      jj_consume_token(BIT_AND);\r", "-      EqualityExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void AndExpression() throws ParseException {", "+    EqualityExpression();", "+    label_44:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case BIT_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[96] = jj_gen;", "+        break label_44;", "+      }", "+      jj_consume_token(BIT_AND);", "+      EqualityExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7984dda6baa744e7a802029370fdfce", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 661, "methodNumberAfterChange": 666, "signatureBeforeChange": "\r   public JavaParser(JavaParserTokenManager tm)", "signatureAfterChange": "   public JavaParser(JavaParserTokenManager tm)", "diff": ["-  /** Constructor with generated Token Manager. */\r", "-  public JavaParser(JavaParserTokenManager tm) {\r", "-    token_source = tm;\r", "-    token = new Token();\r", "-    jj_ntk = -1;\r", "-    jj_gen = 0;\r", "-    for (int i = 0; i < 202; i++) jj_la1[i] = -1;\r", "-    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\r", "-  }\r", "+  /** Constructor with generated Token Manager. */", "+  public JavaParser(JavaParserTokenManager tm) {", "+    token_source = tm;", "+    token = new Token();", "+    jj_ntk = -1;", "+    jj_gen = 0;", "+    for (int i = 0; i < 208; i++) jj_la1[i] = -1;", "+    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();", "+  }"]}]}