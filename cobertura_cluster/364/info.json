{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfe0b7e7032dfee4ded983cdf4d5d0a2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a75a79074b3b142a74da6a14d8e2271", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void addLineSwitch(int lineNumber, int switchNumber, int[] keys)", "signatureAfterChange": "  \tpublic void addLineSwitch(int lineNumber, int switchNumber, int min, int max, int maxBranches)", "diff": ["-\tpublic void addLineSwitch(int lineNumber, int switchNumber, int[] keys) ", "+\tpublic void addLineSwitch(int lineNumber, int switchNumber, int min, int max, int maxBranches) ", "-\t\t\t\tlineData.addSwitch(switchNumber, keys);", "-\t\t\t\tthis.branches.put(Integer.valueOf(lineNumber), lineData);", "-\t\t\t}", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t}", "-\t}", "+\t\t\t\tlineData.addSwitch(switchNumber, min, max, maxBranches);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e917538c6788373d618b7f497ee48c90", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void markLineAsBranch(int lineNumber)", "signatureAfterChange": "     public void addLineSwitch(int lineNumber, int switchNumber, int min, int max)", "diff": ["-\tpublic void markLineAsBranch(int lineNumber)", "-\t{", "-\t\tLineData lineData = getLineData(lineNumber);", "-\t\tif (lineData != null)", "-\t\t{", "-\t\t\tlineData.setBranch(true);", "-\t\t\tthis.branches.put(new Integer(lineNumber), lineData);", "-\t\t}", "-\t}", "+   public void addLineSwitch(int lineNumber, int switchNumber, int min, int max) ", "+   {", "+      LineData lineData = getLineData(lineNumber);", "+      if (lineData != null) ", "+      {", "+         lineData.addSwitch(switchNumber, min, max);", "+         this.branches.put(new Integer(lineNumber), lineData);", "+      }", "+   }"]}]}