{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f094bb15f55426e180083ab79a344624", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c988e447ad8f1b0182e0fc34063331ad", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "2fe97005312f235d23879f33762071ad5315ea64", "commitAfterChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean equals(Object obj)", "signatureAfterChange": "  \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn (hits == lineData.hits) && (isBranch == lineData.isBranch)", "-\t\t\t\t&& (lineNumber == lineData.lineNumber)", "-\t\t\t\t&& (methodDescriptor.equals(lineData.methodDescriptor))", "-\t\t\t\t&& (methodName.equals(lineData.methodName));", "+\t\treturn (this.hits == lineData.hits)", "+\t\t\t\t&& (this.isBranch == lineData.isBranch)", "+\t\t\t\t&& (this.lineNumber == lineData.lineNumber)", "+\t\t\t\t&& (this.methodDescriptor.equals(lineData.methodDescriptor))", "+\t\t\t\t&& (this.methodName.equals(lineData.methodName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db873cacd5dcdfb892e8380c1924e26a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "2fe97005312f235d23879f33762071ad5315ea64", "commitAfterChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean equals(Object obj)", "signatureAfterChange": " \tpublic boolean equals(Object obj)", "diff": ["-\t\tboolean areFileNamesEqual = (sourceFileName == classData.sourceFileName)", "-\t\t\t\t|| ((sourceFileName != null)", "-\t\t\t\t\t\t&& (classData.sourceFileName != null) && (sourceFileName", "+\t\tboolean areFileNamesEqual = (this.sourceFileName == classData.sourceFileName)", "+\t\t\t\t|| ((this.sourceFileName != null)", "+\t\t\t\t\t\t&& (classData.sourceFileName != null) && (this.sourceFileName", "-\t\t\t\t&& branches.equals(classData.branches)", "-\t\t\t\t&& lines.equals(classData.lines)", "-\t\t\t\t&& methodNamesAndDescriptors", "+\t\t\t\t&& this.branches.equals(classData.branches)", "+\t\t\t\t&& this.lines.equals(classData.lines)", "+\t\t\t\t&& this.methodNamesAndDescriptors", "+\t}"]}]}