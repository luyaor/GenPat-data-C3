{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ac9153087cd8ab1f0abd9121065610b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7265e114621aaaa7cecc7955487b44fe", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "cd01654d464661ad4ee16d9e5f0f6e799c0ad9e4", "commitAfterChange": "7f42310aa94d3450acefa63804376619941a31c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "signatureAfterChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "diff": ["-\t\tCollection sourceFiles;", "+\t\tSortedSet sourceFiles;", "-\t\t\tMap sortedSourceFileList = new TreeMap();", "-\t\t\t{", "-\t\t\t\tSourceFileData sourceFileData = (SourceFileData)iter.next();", "-\t\t\t\tsortedSourceFileList.put(sourceFileData.getBaseName(),", "-\t\t\t\t\t\tsourceFileData);", "-\t\t\t}", "-", "-\t\t\tfor (Iterator iter = sortedSourceFileList.values().iterator(); iter", "-\t\t\t\t\t.hasNext();)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1d3a18b1009154d6476abd9cab8112", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "8d76b07e3d230fcd0d3b233e7ffc80df6ca3ec82", "commitAfterChange": "c7179e693f89a314eb6898100456db755030dd92", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "signatureAfterChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "diff": ["-\t\tSortedSet sourceFiles;", "+\t\tCollection sourceFiles;", "-\t\t// sourceFiles is sorted, but it's sorted by the full path", "-\t\t// to the file, and we only want to sort based on the", "-\t\t// file's basename.", "+\t\t// sourceFiles may be sorted, but if so it's sorted by", "+\t\t// the full path to the file, and we only want to sort", "+\t\t// based on the file's basename."]}]}