{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c8c758c70152aafe6ca224e0b12cc9c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28e111b3a1df5859a4712d35a3b2601d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 344, "methodNumberAfterChange": 438, "signatureBeforeChange": "\r \r   final private boolean jj_3R_171()", "signatureAfterChange": "\r \r   private boolean jj_3R_231()", "diff": ["-\r", "-  final private boolean jj_3R_171() {\r", "-    if (jj_3R_89()) return true;\r", "-    Token xsp;\r", "-    xsp = jj_scanpos;\r", "-    if (jj_3_30()) jj_scanpos = xsp;\r", "-    return false;\r", "-  }\r", "+\r", "+  private boolean jj_3R_231() {\r", "+    if (jj_3R_189()) return true;\r", "+    Token xsp;\r", "+    xsp = jj_scanpos;\r", "+    if (jj_3R_256()) jj_scanpos = xsp;\r", "+    return false;\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4438e0dec107a03dee18bc2f77fdfb68", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 528, "signatureBeforeChange": "\r \r   final private boolean jj_3R_256()", "signatureAfterChange": "\r \r   private boolean jj_3R_286()", "diff": ["-\r", "-  final private boolean jj_3R_256() {\r", "-    if (jj_3R_93()) return true;\r", "-    Token xsp;\r", "-    while (true) {\r", "-      xsp = jj_scanpos;\r", "-      if (jj_3_15()) { jj_scanpos = xsp; break; }\r", "-    }\r", "-    return false;\r", "-  }\r", "+\r", "+  private boolean jj_3R_286() {\r", "+    if (jj_3R_100()) return true;\r", "+    Token xsp;\r", "+    while (true) {\r", "+      xsp = jj_scanpos;\r", "+      if (jj_3_17()) { jj_scanpos = xsp; break; }\r", "+    }\r", "+    return false;\r", "+  }\r"]}]}