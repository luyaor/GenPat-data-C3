{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71ad8d558efff9ab2ee56bb1b27eb236", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af88d214bd6fa281bea1af1274fe987", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "ad48f54044374ab06cfbbd82f19fbc693233ef1d", "commitAfterChange": "8b78aded7bc2195ca2875df15fa36b034194b55e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void parseArguments(String[] args)", "signatureAfterChange": "  \tprivate void parseArguments(String[] args)", "diff": ["+\t\tFile dataFile = CoverageDataFileHandler.getDefaultDataFile();", "+", "-\t\t\t\tCoverageDataFileHandler.setDefaultDataFile(args[++i]);", "+\t\t\t\tdataFile = new File(args[++i]);", "-\t\tprojectData = ProjectData.getGlobalProjectData();", "+\t\tprojectData = CoverageDataFileHandler.loadCoverageData(dataFile);", "+\t\tif (projectData == null)", "+\t\t\tprojectData = new ProjectData();", "-\t\tProjectData.saveGlobalProjectData();", "+\t\tCoverageDataFileHandler.saveCoverageData(projectData, dataFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a2e41c92e8105be65c376ac363688d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "7a6cf9ee7c01328fd060bf78a56186190300c13b", "commitAfterChange": "c26f5a170c752d9d1d5b884dd7eb60b982637269", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "signatureAfterChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "diff": ["+\t\tString baseDir = null;", "-\t\t\t\tfinder.addBaseDirectory(new File(args[++i]));", "+\t\t\t\tbaseDir = args[++i];", "-\t\t\t\tfinder.addSourceFilePath(args[i]);", "+            \tif( baseDir==null) {", "+            \t\tfinder.addSourceDirectory( args[i]);", "+            \t} else {", "+            \t\tfinder.addSourceFile( baseDir, args[i]);", "+            \t}", "+\t\tComplexityCalculator complexity = new ComplexityCalculator(finder);", "-\t\t\tnew HTMLReport(projectData, destinationDir, finder);", "+\t\t\tnew HTMLReport(projectData, destinationDir, finder, complexity);", "-\t\t\tnew XMLReport(projectData, destinationDir, finder);", "+\t\t\tnew XMLReport(projectData, destinationDir, finder, complexity);"]}]}