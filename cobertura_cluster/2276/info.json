{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "711f70344675bbaecdc9a71491f63b98", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7553645394951acbc40e4f8d5caff9e5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/ant/FunctionalTest.java", "commitBeforeChange": "afe0ab59234a4abebf70ce97a6afb99cdcb43d75", "commitAfterChange": "5b30351fa9d71ab4016d2fcbdce172b2f16c1c45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate static void runTestAntScript(String testName, String target) throws IOException", "signatureAfterChange": " \tprivate static void runTestAntScript(String testName, String target) throws IOException", "diff": ["-\t\ttask.createArg().setValue(\"test.xml\");", "+\t\ttask.createArg().setValue(BASEDIR + \"/test.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5f092d360c07f88e8b7730363f49dd0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/check/Main.java", "commitBeforeChange": "89f4eaca365e898685523b26abb2975d34c5493c", "commitAfterChange": "b5fae504c12a9486e23c38b8e2fb563abfcdacb8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tvoid setMinimumCoverageRate(String minimumCoverageRate) \t\t\tthrows MalformedPatternException", "signatureAfterChange": "  \tvoid setMinimumCoverageRate(String minimumCoverageRate) \t\t\tthrows MalformedPatternException", "diff": ["-\t\tminimumCoverageRates.put(pc.compile(tokenizer.nextToken()),", "+\t\tthis.minimumCoverageRates.put(pc.compile(tokenizer.nextToken()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1fc0bf4422281219fff0789aedc0e2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaCharStream.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r   public char readChar() throws java.io.IOException", "signatureAfterChange": "\r   public char readChar() throws java.io.IOException", "diff": ["+/** Read a character. */\r", "-                 backup(backSlashCnt);\r", "+                 backup(backSlashCnt-1);\r", "-        return (c);\r", "+        return c;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8836dc14b99469fb2e2ab4de9f63348", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/check/Main.java", "commitBeforeChange": "89f4eaca365e898685523b26abb2975d34c5493c", "commitAfterChange": "b5fae504c12a9486e23c38b8e2fb563abfcdacb8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tdouble inRangeAndDivideByOneHundred(int coverageRateAsPercentage)", "signatureAfterChange": "  \tdouble inRangeAndDivideByOneHundred(int coverageRateAsPercentage)", "diff": ["-\t\tthrow new IllegalArgumentException(", "-\t\t\t\t\"Invalid value, valid range is [0 .. 100]\");", "+\t\tthrow new IllegalArgumentException(\"The value \"", "+\t\t\t\t+ coverageRateAsPercentage", "+\t\t\t\t+ \"% is invalid.  Percentages must be between 0 and 100.\");"]}]}