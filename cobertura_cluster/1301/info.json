{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eddd26eeba5e28af93fe6781ab528e30", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3010cc02bfbadf5d6ff4002b47749a51", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/AsciiFormatter.java", "commitBeforeChange": "f44527006156d82d108277efea7d0bf4a4cd5a22", "commitAfterChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private String _formatObjectResume( int objects                                         , long lObjectSum                                         , long lFunctionSum                                         , long lClassesSum                                         , long lJVDCSum     )", "signatureAfterChange": "      private String _formatObjectResume( int objects                                         , long lObjectSum                                         , long lFunctionSum                                         , long lClassesSum                                         , long lJVDCSum     )", "diff": ["-        String sRetVal = \"Average Object NCSS:             \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (fAverageNcss),     9) + NL;", "-        sRetVal += \"Average Object Functions:        \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (fAverageFuncs),    9) + NL;", "-        sRetVal += \"Average Object Inner Classes:    \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (fAverageClasses),  9) + NL;", "-        sRetVal += \"Average Object Javadoc Comments: \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (fAverageJavadocs), 9) + NL;", "-        sRetVal += \"Program NCSS:                    \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (_javancss.getNcss()), 9) + NL;", "-        ", "+        String sRetVal = \"Average Object NCSS:             \"", "+            + Util.paddWithSpace(_pNumberFormat.format(fAverageNcss),     9) + NL", "+            + \"Average Object Functions:        \"", "+            + Util.paddWithSpace(_pNumberFormat.format(fAverageFuncs),    9) + NL", "+            + \"Average Object Inner Classes:    \"", "+            + Util.paddWithSpace(_pNumberFormat.format(fAverageClasses),  9) + NL", "+            + \"Average Object Javadoc Comments: \"", "+            + Util.paddWithSpace(_pNumberFormat.format(fAverageJavadocs), 9) + NL", "+            + \"Program NCSS:                    \"", "+            + Util.paddWithSpace(_pNumberFormat.format(_javancss.getNcss()), 9) + NL;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e984e65ca47fcf8c349d740569041698", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/AsciiFormatter.java", "commitBeforeChange": "f44527006156d82d108277efea7d0bf4a4cd5a22", "commitAfterChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private String _formatPackageMatrix( int packages                                          , int classesSum                                          , int functionsSum                                          , int javadocsSum                                          , int ncssSum      )", "signatureAfterChange": "      private String _formatPackageMatrix( int packages                                          , int classesSum                                          , int functionsSum                                          , int javadocsSum                                          , int ncssSum      )", "diff": ["-        String sRetVal = Util.paddWithSpace( \"Packages\"", "-                                             , maxItemLength ) ", "-            + \" \" ", "-            + Util.paddWithSpace(\"Classes\", maxItemLength) ", "-            + \" \" ", "-            + Util.paddWithSpace(\"Functions\", maxItemLength) ", "-            + \" \" ", "-            + Util.paddWithSpace(\"NCSS\", maxItemLength) ", "-            + \" \" ", "-            + Util.paddWithSpace(\"Javadocs\", maxItemLength) ", "-            + \" | per\" + NL;", "+        String sRetVal =", "+            Util.paddWithSpace( \"Packages\" , maxItemLength ) + ' '", "+            + Util.paddWithSpace(\"Classes\", maxItemLength) + ' '", "+            + Util.paddWithSpace(\"Functions\", maxItemLength) + ' '", "+            + Util.paddWithSpace(\"NCSS\", maxItemLength) + ' '", "+            + Util.paddWithSpace(\"Javadocs\", maxItemLength)", "+            + \" | per\" + NL", "-        sRetVal += Util.multiplyChar( '-', (maxItemLength + 1)*6 + 1 )", "-            + NL", "-            + Util.paddWithSpace(_pNumberFormat.format", "-                                      (packages), maxItemLength) + \" \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (classesSum), maxItemLength) + \" \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (functionsSum), maxItemLength) + \" \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (ncssSum), maxItemLength) + \" \" +", "-               Util.paddWithSpace(_pNumberFormat.format", "-                                  (javadocsSum), maxItemLength) + \" | Project\" + NL;", "+            + Util.multiplyChar( '-', (maxItemLength + 1)*6 + 1 ) + NL", "+            + Util.paddWithSpace(_pNumberFormat.format(packages), maxItemLength) + ' '", "+            + Util.paddWithSpace(_pNumberFormat.format(classesSum), maxItemLength) + ' '", "+            + Util.paddWithSpace(_pNumberFormat.format(functionsSum), maxItemLength) + ' '", "+            + Util.paddWithSpace(_pNumberFormat.format(ncssSum), maxItemLength) + ' '", "+            + Util.paddWithSpace(_pNumberFormat.format(javadocsSum), maxItemLength)", "+            + \" | Project\" + NL", "+            + Util.multiplyChar( ' ', maxItemLength + 1 )", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( classesSum, packages ) ), maxItemLength ) + ' '", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( functionsSum, packages ) ), maxItemLength ) + ' '", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( ncssSum, packages ) ), maxItemLength ) + ' '", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( javadocsSum, packages ) ), maxItemLength )", "+            + \" | Package\" + NL", "-        sRetVal += Util.multiplyChar( ' ', maxItemLength + 1 ) ", "-            + Util.paddWithSpace( _pNumberFormat.format( _divide( classesSum, packages ) )", "-                                  , maxItemLength )", "-            + \" \"", "-            + Util.paddWithSpace( _pNumberFormat.format( _divide( functionsSum, packages ) )", "-                                  , maxItemLength )", "-            + \" \" ", "-            + Util.paddWithSpace( _pNumberFormat.format( _divide( ncssSum, packages ) )", "-                                  , maxItemLength )", "-            + \" \" ", "-            + Util.paddWithSpace( _pNumberFormat.format( _divide( javadocsSum, packages ) )", "-                                  , maxItemLength )", "-            + \" | Package\" + NL;", "+            + Util.multiplyChar( ' ', (maxItemLength + 1)*2 )", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( functionsSum, classesSum ) ), maxItemLength ) + ' '", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( ncssSum, classesSum ) ), maxItemLength ) + ' '", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( javadocsSum, classesSum ) ), maxItemLength )", "+            + \" | Class\" + NL", "-        sRetVal += Util.multiplyChar( ' ', (maxItemLength + 1)*2 ) ", "-            + Util.paddWithSpace( _pNumberFormat.format( _divide( functionsSum, classesSum ) )", "-                                  , maxItemLength ) ", "-            + \" \" ", "-            + Util.paddWithSpace( _pNumberFormat.format( _divide( ncssSum, classesSum ) )", "-                                  , maxItemLength )", "-            + \" \" ", "-            + Util.paddWithSpace( _pNumberFormat.format( _divide( javadocsSum, classesSum ) )", "-                                  , maxItemLength ) ", "-            + \" | Class\" + NL;", "-        ", "-        sRetVal += Util.multiplyChar( ' ', (maxItemLength + 1)*3 )", "-               + Util.paddWithSpace( _pNumberFormat.format( _divide( ncssSum, functionsSum ) )", "-                                     , maxItemLength )", "-               + \" \"", "-               + Util.paddWithSpace( _pNumberFormat.format( _divide( javadocsSum, functionsSum ) )", "-                                  , maxItemLength )", "-               + \" | Function\" + NL;", "+            + Util.multiplyChar( ' ', (maxItemLength + 1)*3 )", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( ncssSum, functionsSum ) ), maxItemLength ) + ' '", "+            + Util.paddWithSpace( _pNumberFormat.format( _divide( javadocsSum, functionsSum ) ), maxItemLength )", "+            + \" | Function\" + NL;", "+", "-        ", "+"]}]}