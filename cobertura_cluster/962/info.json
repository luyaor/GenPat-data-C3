{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7687fbb4f1c6f1a29fc7ea4dc5090eed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287fb6abb7dc97fb7243d491059c5dfa", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic int getNumberOfCoveredBranches()", "signatureAfterChange": " \t \tpublic int getNumberOfCoveredBranches()", "diff": ["-\tpublic int getNumberOfCoveredBranches()", "-\t\treturn (isBranch() && (getHits() > 0)) ? 1 : 0;", "-\t}", "+\t", "+\tpublic int getNumberOfCoveredBranches()", "+\t{", "+\t\tint ret = 0;", "+\t\tif (jumps != null)", "+\t\t\tfor (int i = jumps.size() - 1; i >= 0; i--)", "+\t\t\t\tret += ((JumpData) jumps.get(i)).getNumberOfCoveredBranches();", "+\t\tif (switches != null)", "+\t\t\tfor (int i = switches.size() - 1; i >= 0; i--)", "+\t\t\t\tret += ((SwitchData) switches.get(i)).getNumberOfCoveredBranches();", "+\t\treturn ret;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae60908dd16e950aa89054c34c30aa2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic int getNumberOfValidBranches()", "signatureAfterChange": "  \tpublic int getNumberOfValidBranches()", "diff": ["-\t\treturn (isBranch()) ? 1 : 0;", "+\t\tint ret = 0;", "+\t\tif (jumps != null)", "+\t\t\tfor (int i = jumps.size() - 1; i >= 0; i--)", "+\t\t\t\tret += ((JumpData) jumps.get(i)).getNumberOfValidBranches();", "+\t\tif (switches != null)", "+\t\t\tfor (int i = switches.size() - 1; i >= 0; i--)", "+\t\t\t\tret += ((SwitchData) switches.get(i)).getNumberOfValidBranches();", "+\t\treturn ret;", "+\t}"]}]}