{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75e1858804ff831795b49f1efe9aef5e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3093ea6fd0323566e2ed71973c8c5aa8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 129, "signatureBeforeChange": "\r \r   final public void AnnotationTypeMemberDeclaration() throws ParseException", "signatureAfterChange": "    final public void AnnotationTypeMemberDeclaration() throws ParseException", "diff": ["-\r", "-  final public void AnnotationTypeMemberDeclaration() throws ParseException {\r", "-   int modifiers;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ABSTRACT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case CLASS:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FINAL:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case INTERFACE:\r", "-    case LONG:\r", "-    case NATIVE:\r", "-    case PRIVATE:\r", "-    case PROTECTED:\r", "-    case PUBLIC:\r", "-    case SHORT:\r", "-    case STATIC:\r", "-    case TESTAAAA:\r", "-    case SYNCHRONIZED:\r", "-    case TRANSIENT:\r", "-    case VOLATILE:\r", "-    case IDENTIFIER:\r", "-    case AT:\r", "-      modifiers = Modifiers();\r", "-      if (jj_2_51(2147483647)) {\r", "-        Type();\r", "-        jj_consume_token(IDENTIFIER);\r", "-        jj_consume_token(LPAREN);\r", "-        jj_consume_token(RPAREN);\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case _DEFAULT:\r", "-          DefaultValue();\r", "-          break;\r", "-        default:\r", "-          jj_la1[169] = jj_gen;\r", "-          ;\r", "-        }\r", "-        jj_consume_token(SEMICOLON);\r", "-            _ncss++;\r", "-            Util.debug( \"_ncss++\" );\r", "-      } else {\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case CLASS:\r", "-        case INTERFACE:\r", "-          ClassOrInterfaceDeclaration(modifiers);\r", "-          break;\r", "-        case ENUM:\r", "-          EnumDeclaration(modifiers);\r", "-          break;\r", "-        case AT:\r", "-          AnnotationTypeDeclaration(modifiers);\r", "-          break;\r", "-        case BOOLEAN:\r", "-        case BYTE:\r", "-        case CHAR:\r", "-        case DOUBLE:\r", "-        case FLOAT:\r", "-        case INT:\r", "-        case LONG:\r", "-        case SHORT:\r", "-        case IDENTIFIER:\r", "-          FieldDeclaration15(modifiers);\r", "-          break;\r", "-        default:\r", "-          jj_la1[170] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-      }\r", "-      break;\r", "-    case SEMICOLON:\r", "-      jj_consume_token(SEMICOLON);\r", "-            _ncss++;\r", "-            Util.debug( \"_ncss++\" );\r", "-      break;\r", "-    default:\r", "-      jj_la1[171] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void AnnotationTypeMemberDeclaration() throws ParseException {", "+   int modifiers;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ABSTRACT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case CLASS:", "+    case DOUBLE:", "+    case ENUM:", "+    case FINAL:", "+    case FLOAT:", "+    case INT:", "+    case INTERFACE:", "+    case LONG:", "+    case NATIVE:", "+    case PRIVATE:", "+    case PROTECTED:", "+    case PUBLIC:", "+    case SHORT:", "+    case STATIC:", "+    case TESTAAAA:", "+    case SYNCHRONIZED:", "+    case TRANSIENT:", "+    case VOLATILE:", "+    case IDENTIFIER:", "+    case AT:", "+      modifiers = Modifiers();", "+      if (jj_2_50(2147483647)) {", "+        Type();", "+        jj_consume_token(IDENTIFIER);", "+        jj_consume_token(LPAREN);", "+        jj_consume_token(RPAREN);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case _DEFAULT:", "+          DefaultValue();", "+          break;", "+        default:", "+          jj_la1[174] = jj_gen;", "+          ;", "+        }", "+        jj_consume_token(SEMICOLON);", "+            _ncss++;", "+            Util.debug( \"_ncss++\" );", "+      } else {", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case CLASS:", "+        case INTERFACE:", "+          ClassOrInterfaceDeclaration(modifiers);", "+          break;", "+        case ENUM:", "+          EnumDeclaration(modifiers);", "+          break;", "+        case AT:", "+          AnnotationTypeDeclaration(modifiers);", "+          break;", "+        case BOOLEAN:", "+        case BYTE:", "+        case CHAR:", "+        case DOUBLE:", "+        case FLOAT:", "+        case INT:", "+        case LONG:", "+        case SHORT:", "+        case IDENTIFIER:", "+          FieldDeclaration15(modifiers);", "+          break;", "+        default:", "+          jj_la1[175] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+      }", "+      break;", "+    case SEMICOLON:", "+      jj_consume_token(SEMICOLON);", "+            _ncss++;", "+            Util.debug( \"_ncss++\" );", "+      break;", "+    default:", "+      jj_la1[176] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba5747d120d4ae3ffad7a3900c5273c1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 129, "signatureBeforeChange": "\r \r   final public void AnnotationTypeMemberDeclaration() throws ParseException", "signatureAfterChange": "    final public void AnnotationTypeMemberDeclaration() throws ParseException", "diff": ["-\r", "-  final public void AnnotationTypeMemberDeclaration() throws ParseException {\r", "-   int modifiers;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case ABSTRACT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case CLASS:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FINAL:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case INTERFACE:\r", "-    case LONG:\r", "-    case NATIVE:\r", "-    case PRIVATE:\r", "-    case PROTECTED:\r", "-    case PUBLIC:\r", "-    case SHORT:\r", "-    case STATIC:\r", "-    case TESTAAAA:\r", "-    case SYNCHRONIZED:\r", "-    case TRANSIENT:\r", "-    case VOLATILE:\r", "-    case IDENTIFIER:\r", "-    case AT:\r", "-      modifiers = Modifiers();\r", "-      if (jj_2_51(2147483647)) {\r", "-        Type();\r", "-        jj_consume_token(IDENTIFIER);\r", "-        jj_consume_token(LPAREN);\r", "-        jj_consume_token(RPAREN);\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case _DEFAULT:\r", "-          DefaultValue();\r", "-          break;\r", "-        default:\r", "-          jj_la1[169] = jj_gen;\r", "-          ;\r", "-        }\r", "-        jj_consume_token(SEMICOLON);\r", "-            _ncss++;\r", "-            Util.debug( \"_ncss++\" );\r", "-      } else {\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case CLASS:\r", "-        case INTERFACE:\r", "-          ClassOrInterfaceDeclaration(modifiers);\r", "-          break;\r", "-        case ENUM:\r", "-          EnumDeclaration(modifiers);\r", "-          break;\r", "-        case AT:\r", "-          AnnotationTypeDeclaration(modifiers);\r", "-          break;\r", "-        case BOOLEAN:\r", "-        case BYTE:\r", "-        case CHAR:\r", "-        case DOUBLE:\r", "-        case FLOAT:\r", "-        case INT:\r", "-        case LONG:\r", "-        case SHORT:\r", "-        case IDENTIFIER:\r", "-          FieldDeclaration15(modifiers);\r", "-          break;\r", "-        default:\r", "-          jj_la1[170] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-      }\r", "-      break;\r", "-    case SEMICOLON:\r", "-      jj_consume_token(SEMICOLON);\r", "-            _ncss++;\r", "-            Util.debug( \"_ncss++\" );\r", "-      break;\r", "-    default:\r", "-      jj_la1[171] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void AnnotationTypeMemberDeclaration() throws ParseException {", "+   int modifiers;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case ABSTRACT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case CLASS:", "+    case DOUBLE:", "+    case ENUM:", "+    case FINAL:", "+    case FLOAT:", "+    case INT:", "+    case INTERFACE:", "+    case LONG:", "+    case NATIVE:", "+    case PRIVATE:", "+    case PROTECTED:", "+    case PUBLIC:", "+    case SHORT:", "+    case STATIC:", "+    case TESTAAAA:", "+    case SYNCHRONIZED:", "+    case TRANSIENT:", "+    case VOLATILE:", "+    case IDENTIFIER:", "+    case AT:", "+      modifiers = Modifiers();", "+      if (jj_2_50(2147483647)) {", "+        Type();", "+        jj_consume_token(IDENTIFIER);", "+        jj_consume_token(LPAREN);", "+        jj_consume_token(RPAREN);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case _DEFAULT:", "+          DefaultValue();", "+          break;", "+        default:", "+          jj_la1[174] = jj_gen;", "+          ;", "+        }", "+        jj_consume_token(SEMICOLON);", "+            _ncss++;", "+            Util.debug( \"_ncss++\" );", "+      } else {", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case CLASS:", "+        case INTERFACE:", "+          ClassOrInterfaceDeclaration(modifiers);", "+          break;", "+        case ENUM:", "+          EnumDeclaration(modifiers);", "+          break;", "+        case AT:", "+          AnnotationTypeDeclaration(modifiers);", "+          break;", "+        case BOOLEAN:", "+        case BYTE:", "+        case CHAR:", "+        case DOUBLE:", "+        case FLOAT:", "+        case INT:", "+        case LONG:", "+        case SHORT:", "+        case IDENTIFIER:", "+          FieldDeclaration15(modifiers);", "+          break;", "+        default:", "+          jj_la1[175] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+      }", "+      break;", "+    case SEMICOLON:", "+      jj_consume_token(SEMICOLON);", "+            _ncss++;", "+            Util.debug( \"_ncss++\" );", "+      break;", "+    default:", "+      jj_la1[176] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}]}