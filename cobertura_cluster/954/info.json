{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b80b2cd55dccee214d7310500f55f286", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c597b30f8db2ad96f33db21f1d89df", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 350, "signatureBeforeChange": "\r \r   final private boolean jj_3R_398()", "signatureAfterChange": "\r \r   private boolean jj_3R_285()", "diff": ["-\r", "-  final private boolean jj_3R_398() {\r", "-    if (jj_3R_411()) {\r", "-    jj_scanpos = xsp;\r", "-    if (jj_3R_412()) return true;\r", "-    }\r", "+\r", "+  private boolean jj_3R_285() {\r", "+    if (jj_3R_102()) return true;\r", "+    Token xsp;\r", "+    xsp = jj_scanpos;\r", "+    if (jj_3R_441()) jj_scanpos = xsp;\r", "+    return false;\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "615d90d1b8bfb5733366eccbea9a07bf", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 587, "methodNumberAfterChange": 319, "signatureBeforeChange": "\r \r   final private boolean jj_3R_240()", "signatureAfterChange": "\r \r   private boolean jj_3R_267()", "diff": ["+\r", "+  private boolean jj_3R_267() {\r", "+    if (jj_scan_token(DO)) return true;\r", "+    if (jj_3R_223()) return true;\r", "+    if (jj_scan_token(WHILE)) return true;\r", "+    if (jj_scan_token(LPAREN)) return true;\r", "+    if (jj_3R_117()) return true;\r", "+    if (jj_scan_token(RPAREN)) return true;\r", "+    if (jj_scan_token(SEMICOLON)) return true;\r", "+    return false;\r", "+  }\r", "-\r", "-  final private boolean jj_3R_240() {\r", "-    if (jj_scan_token(DO)) return true;\r", "-    if (jj_3R_201()) return true;\r", "-    if (jj_scan_token(WHILE)) return true;\r", "-    if (jj_scan_token(LPAREN)) return true;\r", "-    if (jj_3R_107()) return true;\r", "-    if (jj_scan_token(RPAREN)) return true;\r", "-    if (jj_scan_token(SEMICOLON)) return true;\r", "-    return false;\r", "-  }\r"]}]}