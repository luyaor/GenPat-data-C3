{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f152ed173684b9b8e96337cf9654e00a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f6621b3c0e7336aa24322579f46682", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r   final public void CreationAnnotation() throws ParseException", "signatureAfterChange": "   final public void CreationAnnotation() throws ParseException", "diff": ["-//Added by REYNAUD Sebastien (LOGICA)\r", "-  final public void CreationAnnotation() throws ParseException {\r", "-    jj_consume_token(AT);\r", "-    jj_consume_token(INTERFACE);\r", "-    jj_consume_token(IDENTIFIER);\r", "-    jj_consume_token(LBRACE);\r", "-    label_64:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ABSTRACT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case CLASS:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FINAL:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case INTERFACE:\r", "-      case LONG:\r", "-      case NATIVE:\r", "-      case PRIVATE:\r", "-      case PROTECTED:\r", "-      case PUBLIC:\r", "-      case SHORT:\r", "-      case STATIC:\r", "-      case TESTAAAA:\r", "-      case SYNCHRONIZED:\r", "-      case TRANSIENT:\r", "-      case VOLATILE:\r", "-      case IDENTIFIER:\r", "-      case SEMICOLON:\r", "-      case AT:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[167] = jj_gen;\r", "-        break label_64;\r", "-      }\r", "-      AnnotationTypeMemberDeclaration();\r", "-    }\r", "-    jj_consume_token(RBRACE);\r", "-  }\r", "+//Added by REYNAUD Sebastien (LOGICA)", "+  final public void CreationAnnotation() throws ParseException {", "+    jj_consume_token(AT);", "+    jj_consume_token(INTERFACE);", "+    jj_consume_token(IDENTIFIER);", "+    jj_consume_token(LBRACE);", "+    label_67:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ABSTRACT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case CLASS:", "+      case DOUBLE:", "+      case ENUM:", "+      case FINAL:", "+      case FLOAT:", "+      case INT:", "+      case INTERFACE:", "+      case LONG:", "+      case NATIVE:", "+      case PRIVATE:", "+      case PROTECTED:", "+      case PUBLIC:", "+      case SHORT:", "+      case STATIC:", "+      case TESTAAAA:", "+      case SYNCHRONIZED:", "+      case TRANSIENT:", "+      case VOLATILE:", "+      case IDENTIFIER:", "+      case SEMICOLON:", "+      case AT:", "+        ;", "+        break;", "+      default:", "+        jj_la1[172] = jj_gen;", "+        break label_67;", "+      }", "+      AnnotationTypeMemberDeclaration();", "+    }", "+    jj_consume_token(RBRACE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73724a1a8a95c09c79a13aa174b0f4a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r   final public void CreationAnnotation() throws ParseException", "signatureAfterChange": "   final public void CreationAnnotation() throws ParseException", "diff": ["-//Added by REYNAUD Sebastien (LOGICA)\r", "-  final public void CreationAnnotation() throws ParseException {\r", "-    jj_consume_token(AT);\r", "-    jj_consume_token(INTERFACE);\r", "-    jj_consume_token(IDENTIFIER);\r", "-    jj_consume_token(LBRACE);\r", "-    label_64:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ABSTRACT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case CLASS:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FINAL:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case INTERFACE:\r", "-      case LONG:\r", "-      case NATIVE:\r", "-      case PRIVATE:\r", "-      case PROTECTED:\r", "-      case PUBLIC:\r", "-      case SHORT:\r", "-      case STATIC:\r", "-      case TESTAAAA:\r", "-      case SYNCHRONIZED:\r", "-      case TRANSIENT:\r", "-      case VOLATILE:\r", "-      case IDENTIFIER:\r", "-      case SEMICOLON:\r", "-      case AT:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[167] = jj_gen;\r", "-        break label_64;\r", "-      }\r", "-      AnnotationTypeMemberDeclaration();\r", "-    }\r", "-    jj_consume_token(RBRACE);\r", "-  }\r", "+//Added by REYNAUD Sebastien (LOGICA)", "+  final public void CreationAnnotation() throws ParseException {", "+    jj_consume_token(AT);", "+    jj_consume_token(INTERFACE);", "+    jj_consume_token(IDENTIFIER);", "+    jj_consume_token(LBRACE);", "+    label_67:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ABSTRACT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case CLASS:", "+      case DOUBLE:", "+      case ENUM:", "+      case FINAL:", "+      case FLOAT:", "+      case INT:", "+      case INTERFACE:", "+      case LONG:", "+      case NATIVE:", "+      case PRIVATE:", "+      case PROTECTED:", "+      case PUBLIC:", "+      case SHORT:", "+      case STATIC:", "+      case TESTAAAA:", "+      case SYNCHRONIZED:", "+      case TRANSIENT:", "+      case VOLATILE:", "+      case IDENTIFIER:", "+      case SEMICOLON:", "+      case AT:", "+        ;", "+        break;", "+      default:", "+        jj_la1[172] = jj_gen;", "+        break label_67;", "+      }", "+      AnnotationTypeMemberDeclaration();", "+    }", "+    jj_consume_token(RBRACE);", "+  }"]}]}