{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f89ab3df6c0da9c6b9c42dd30aea038b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3038b73b762c09989ad9f13867cb74cb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/CoverageData.java", "commitBeforeChange": "a119f823fa866e69698a670d633a7067d8632a28", "commitAfterChange": "860d83d968c4c37826a8e5fbbd1ba35cd97da38d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic int getNumberOfBranches()", "signatureAfterChange": " \tpublic int getNumberOfValidBranches()", "diff": ["-\t */", "-\tpublic int getNumberOfBranches()", "-\t{", "-\t\treturn conditionals.size();", "-\t}", "+\t */", "+\tpublic int getNumberOfValidBranches()", "+\t{", "+\t\treturn conditionals.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37be55ef10a45df2305fba068b75afd1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/ASCII_UCodeESC_CharStream.java", "commitBeforeChange": "7878dbc8c14057d3c27375fea2484940a54a6ebc", "commitAfterChange": "5c3edcc6dd3fd1408cac466f6859d53cda78784e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic final char[] getSuffix(int len)", "signatureAfterChange": "    public final char[] GetSuffix(int len)", "diff": ["-\tpublic final char[] getSuffix(int len)", "-\t{", "-\t\tchar[] ret = new char[len];", "-\t\tif ((bufpos + 1) >= len)", "-\t\t\tSystem.arraycopy(buffer, bufpos - len + 1, ret, 0, len);", "-\t\telse", "-\t\t{", "-\t\t\tSystem.arraycopy(buffer, bufsize - (len - bufpos - 1), ret, 0, len - bufpos - 1);", "-\t\t\tSystem.arraycopy(buffer, 0, ret, len - bufpos - 1, bufpos + 1);", "-\t\t}", "-\t\treturn ret;", "-\t}", "+", "+  public final char[] GetSuffix(int len)", "+  {", "+     char[] ret = new char[len];", "+", "+     if ((bufpos + 1) >= len)", "+        System.arraycopy(buffer, bufpos - len + 1, ret, 0, len);", "+     else", "+     {", "+        System.arraycopy(buffer, bufsize - (len - bufpos - 1), ret, 0,", "+                                                          len - bufpos - 1);", "+        System.arraycopy(buffer, 0, ret, len - bufpos - 1, bufpos + 1);", "+     }", "+", "+     return ret;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3939256d15ff0ea92ce01e1487806582", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/CoverageData.java", "commitBeforeChange": "a119f823fa866e69698a670d633a7067d8632a28", "commitAfterChange": "860d83d968c4c37826a8e5fbbd1ba35cd97da38d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic int getNumberOfLines()", "signatureAfterChange": " \tpublic int getNumberOfValidLines()", "diff": ["-\tpublic int getNumberOfLines()", "+\tpublic int getNumberOfValidLines()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f56a3f1ba9c16d4262ea4f8e90cd4ea", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CheckTask.java", "commitBeforeChange": "89f4eaca365e898685523b26abb2975d34c5493c", "commitAfterChange": "b5fae504c12a9486e23c38b8e2fb563abfcdacb8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void setLine(String lineCoverageRate)", "signatureAfterChange": "  \tpublic void setLineCoverageRate(String lineCoverageRate)", "diff": ["-", "-\tpublic void setLine(String lineCoverageRate)", "-\t{", "-\t\tthis.lineCoverageRate = lineCoverageRate;", "-\t}", "+", "+\tpublic void setLineCoverageRate(String lineCoverageRate)", "+\t{", "+\t\tthis.lineCoverageRate = lineCoverageRate;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "461857b2399f60af886e07ac17127c8e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/ASCII_UCodeESC_CharStream.java", "commitBeforeChange": "7878dbc8c14057d3c27375fea2484940a54a6ebc", "commitAfterChange": "5c3edcc6dd3fd1408cac466f6859d53cda78784e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate final void updateLineColumn(char c)", "signatureAfterChange": "    private final void UpdateLineColumn(char c)", "diff": ["+  private final void UpdateLineColumn(char c)", "+  {", "+     column++;", "+     if (prevCharIsLF)", "+     {", "+        prevCharIsLF = false;", "+        line += (column = 1);", "+     }", "+     else if (prevCharIsCR)", "+     {", "+        prevCharIsCR = false;", "+        if (c == '\\n')", "+        {", "+           prevCharIsLF = true;", "+        }", "+        else", "+           line += (column = 1);", "+     }", "-\tprivate final void updateLineColumn(char c)", "-\t{", "-\t\tcolumn++;", "+     switch (c)", "+     {", "+        case '\\r' :", "+           prevCharIsCR = true;", "+           break;", "+        case '\\n' :", "+           prevCharIsLF = true;", "+           break;", "+        case '\\t' :", "+           column--;", "+           column += (8 - (column & 07));", "+           break;", "+        default :", "+           break;", "+     }", "-\t\tif (prevCharIsLF)", "-\t\t{", "-\t\t\tprevCharIsLF = false;", "-\t\t\tline += (column = 1);", "-\t\t}", "-\t\telse if (prevCharIsCR)", "-\t\t{", "-\t\t\tprevCharIsCR = false;", "-\t\t\tif (c == '\\n')", "-\t\t\t{", "-\t\t\t\tprevCharIsLF = true;", "-\t\t\t}", "-\t\t\telse", "-\t\t\t\tline += (column = 1);", "-\t\t}", "+     bufline[bufpos] = line;", "+     bufcolumn[bufpos] = column;", "+  }", "-\t\tswitch (c)", "-\t\t{", "-\t\t\tcase '\\r':", "-\t\t\t\tprevCharIsCR = true;", "-\t\t\t\tbreak;", "-\t\t\tcase '\\n':", "-\t\t\t\tprevCharIsLF = true;", "-\t\t\t\tbreak;", "-\t\t\tcase '\\t':", "-\t\t\t\tcolumn--;", "-\t\t\t\tcolumn += (8 - (column & 07));", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\tbreak;", "-\t\t}", "-\t\tbufline[bufpos] = line;", "-\t\tbufcolumn[bufpos] = column;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed57784e69fbc3e139af23c66fb4f37", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/JumpData.java", "commitBeforeChange": "6ac2c0b6c938faf3dc2176107b5000ec39847927", "commitAfterChange": "3bf3d08329fe4862654ebd370ff6f5988db85528", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic int getBrachNumber()", "signatureAfterChange": "  \tpublic int getBranchNumber()", "diff": ["-\tpublic int getBrachNumber()", "+\tpublic int getBranchNumber()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "524ba23001fa1df027ff5487b5447c7f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/reporting/xml/XMLReportTest.java", "commitBeforeChange": "f7504c0f1520232019e0ec5d7d9a44b2a102b7d9", "commitAfterChange": "b5c49534c0665dd8d1ec5c58aeda5a4c21cfd276", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void TODOtearDown()", "signatureAfterChange": "  \tpublic void tearDown()", "diff": ["-\tpublic void TODOtearDown()", "+\tpublic void tearDown()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ede9a669cef36b8696a81e137d52818", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "2d04adc2554406c41824d5b965907076ecdceb80", "commitAfterChange": "cd01654d464661ad4ee16d9e5f0f6e799c0ad9e4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void generateClassLists() throws IOException", "signatureAfterChange": "  \tprivate void generateSourceFileLists() throws IOException", "diff": ["-\tprivate void generateClassLists() throws IOException", "+\tprivate void generateSourceFileLists() throws IOException", "-\t\tgenerateClassList(null);", "+\t\tgenerateSourceFileList(null);", "-\t\t\tgenerateClassList(packageData);", "+\t\t\tgenerateSourceFileList(packageData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f16802338758001e78e371cdc9294b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/ASCII_UCodeESC_CharStream.java", "commitBeforeChange": "7878dbc8c14057d3c27375fea2484940a54a6ebc", "commitAfterChange": "5c3edcc6dd3fd1408cac466f6859d53cda78784e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic final char beginToken() throws java.io.IOException", "signatureAfterChange": "    public final char BeginToken() throws java.io.IOException", "diff": ["+  public final char BeginToken() throws java.io.IOException", "+  {     ", "+     if (inBuf > 0)", "+     {", "+        --inBuf;", "+        return buffer[tokenBegin = (bufpos == bufsize - 1) ? (bufpos = 0)", "+                                                           : ++bufpos];", "+     }", "+     tokenBegin = 0;", "+     bufpos = -1;", "-\tpublic final char beginToken() throws java.io.IOException", "-\t{", "-\t\tif (inBuf > 0)", "-\t\t{", "-\t\t\t--inBuf;", "-\t\t\treturn buffer[tokenBegin = (bufpos == bufsize - 1) ? (bufpos = 0) : ++bufpos];", "-\t\t}", "+     return readChar();", "+  }     ", "-\t\ttokenBegin = 0;", "-\t\tbufpos = -1;", "-\t\treturn readChar();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba7ea7b40b859eb450be4f25ab5e090", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "cbc25c039577cb031ebc2642ca908fb2416646b0", "commitAfterChange": "6e5bdd4a260b41be4efbef0899cf1900c2626b0c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic int getBranchSize()", "signatureAfterChange": " \t \tpublic int getConditionSize()", "diff": ["-\tpublic int getBranchSize() {", "+\tpublic int getConditionSize() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ba5a25bb6a06a2be43aa3f2684c738", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/SecondPassMethodInstrumenter.java", "commitBeforeChange": "7bf6715900a0a7f2b86cdfc96321716fbe7f974f", "commitAfterChange": "7ff4cde6cb6b71f99139358732f26e11af99b113", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate void instrumentGetClassData()", "signatureAfterChange": "  \tprivate void instrumentOwnerClass()", "diff": ["-\t//)", "-\tprivate void instrumentGetClassData()", "+\tprivate void instrumentOwnerClass()", "-\t\t// Get an instance of ProjectData:", "-\t\t// ProjectData.getGlobalProjectData()", "-//\t\tmv.visitMethodInsn(INVOKESTATIC,", "-//\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "-//\t\t\t\t\"getGlobalProjectData\",", "-//\t\t\t\t\"()Lnet/sourceforge/cobertura/coveragedata/ProjectData;\");", "-", "-\t\t// Get the ClassData object for this class:", "-\t\t// projectData.getClassData(\"name.of.this.class\")", "+\t\t// OwnerClass is the name of the class being instrumented", "-//\t\tmv", "-//\t\t\t.visitMethodInsn(INVOKEVIRTUAL,", "-//\t\t\t\t\t\"net/sourceforge/cobertura/coveragedata/ProjectData\",", "-//\t\t\t\t\t\"getOrCreateClassData\",", "-//\t\t\t\t\t\"(Ljava/lang/String;)Lnet/sourceforge/cobertura/coveragedata/ClassData;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e7b72fbb929bace765cf2a6c822ed9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/ASCII_UCodeESC_CharStream.java", "commitBeforeChange": "7878dbc8c14057d3c27375fea2484940a54a6ebc", "commitAfterChange": "5c3edcc6dd3fd1408cac466f6859d53cda78784e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate final void adjustBuffSize()", "signatureAfterChange": "         private final void AdjustBuffSize()", "diff": ["+  private final void AdjustBuffSize()", "+  {", "+     if (available == bufsize)", "+     {", "+        if (tokenBegin > 2048)", "+        {", "+           bufpos = 0;", "+           available = tokenBegin;", "+        }", "+        else", "+           ExpandBuff(false);", "+     }", "+     else if (available > tokenBegin)", "+        available = bufsize;", "+     else if ((tokenBegin - available) < 2048)", "+        ExpandBuff(true);", "+     else", "+        available = tokenBegin;", "+  }", "-\tprivate final void adjustBuffSize()", "-\t{", "-\t\tif (available == bufsize)", "-\t\t{", "-\t\t\tif (tokenBegin > 2048)", "-\t\t\t{", "-\t\t\t\tbufpos = 0;", "-\t\t\t\tavailable = tokenBegin;", "-\t\t\t}", "-\t\t\telse", "-\t\t\t\texpandBuff(false);", "-\t\t}", "-\t\telse if (available > tokenBegin)", "-\t\t\tavailable = bufsize;", "-\t\telse if ((tokenBegin - available) < 2048)", "-\t\t\texpandBuff(true);", "-\t\telse", "-\t\t\tavailable = tokenBegin;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb22f79a115fbebb3691bcb73ea923d6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/ASCII_UCodeESC_CharStream.java", "commitBeforeChange": "7878dbc8c14057d3c27375fea2484940a54a6ebc", "commitAfterChange": "5c3edcc6dd3fd1408cac466f6859d53cda78784e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate final void expandBuff(boolean wrapAround)", "signatureAfterChange": "    private final void ExpandBuff(boolean wrapAround)", "diff": ["+  private final void ExpandBuff(boolean wrapAround)", "+  {", "+     char[] newbuffer = new char[bufsize + 2048];", "+     int newbufline[] = new int[bufsize + 2048];", "+     int newbufcolumn[] = new int[bufsize + 2048];", "+     try", "+     {", "+        if (wrapAround)", "+        {", "+           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);", "+           System.arraycopy(buffer, 0, newbuffer,", "+                                             bufsize - tokenBegin, bufpos);", "+           buffer = newbuffer;", "-\tprivate final void expandBuff(boolean wrapAround)", "-\t{", "-\t\tchar[] newbuffer = new char[bufsize + 2048];", "-\t\tint newbufline[] = new int[bufsize + 2048];", "-\t\tint newbufcolumn[] = new int[bufsize + 2048];", "+           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);", "+           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);", "+           bufline = newbufline;", "-\t\ttry", "-\t\t{", "-\t\t\tif (wrapAround)", "-\t\t\t{", "-\t\t\t\tSystem.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);", "-\t\t\t\tSystem.arraycopy(buffer, 0, newbuffer, bufsize - tokenBegin, bufpos);", "-\t\t\t\tbuffer = newbuffer;", "+           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);", "+           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);", "+           bufcolumn = newbufcolumn;", "-\t\t\t\tSystem.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);", "-\t\t\t\tSystem.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);", "-\t\t\t\tbufline = newbufline;", "+           bufpos += (bufsize - tokenBegin);", "+        }", "+        else", "+        {", "+           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);", "+           buffer = newbuffer;", "-\t\t\t\tSystem.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);", "-\t\t\t\tSystem.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);", "-\t\t\t\tbufcolumn = newbufcolumn;", "+           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);", "+           bufline = newbufline;", "-\t\t\t\tbufpos += (bufsize - tokenBegin);", "-\t\t\t}", "-\t\t\telse", "-\t\t\t{", "-\t\t\t\tSystem.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);", "-\t\t\t\tbuffer = newbuffer;", "+           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);", "+           bufcolumn = newbufcolumn;", "-\t\t\t\tSystem.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);", "-\t\t\t\tbufline = newbufline;", "+           bufpos -= tokenBegin;", "+        }", "+     }", "+     catch (Throwable t)", "+     {", "+        throw new Error(t.getMessage());", "+     }", "-\t\t\t\tSystem.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);", "-\t\t\t\tbufcolumn = newbufcolumn;", "+     available = (bufsize += 2048);", "+     tokenBegin = 0;", "+  }", "-\t\t\t\tbufpos -= tokenBegin;", "-\t\t\t}", "-\t\t}", "-\t\tcatch (Throwable t)", "-\t\t{", "-\t\t\tthrow new Error(t.getMessage());", "-\t\t}", "-\t\tavailable = (bufsize += 2048);", "-\t\ttokenBegin = 0;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d795d3aecbf60e733058b4aeb91445ef", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/ant/FunctionalTest.java", "commitBeforeChange": "d92a270dbbdba12262811a88f1774dfb99ec4747", "commitAfterChange": "4052f54cd9489cd94b023c7b5db8ea06aaaae0c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate static void verify(String testName) throws Exception", "signatureAfterChange": "  \tprivate static void verifyXml(String testName) throws Exception", "diff": ["-\t// TODO: Also verify that the HTML reports are XHTML 1.0", "+", "+\tprivate static void verifyXml(String testName) throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f455d6e9abbddee6977735e7b78d70f2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/SwitchDataTest.java", "commitBeforeChange": "6ac2c0b6c938faf3dc2176107b5000ec39847927", "commitAfterChange": "3bf3d08329fe4862654ebd370ff6f5988db85528", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testGetBranchNumber()", "signatureAfterChange": "  \tpublic void testGetSwitchNumber()", "diff": ["-\tpublic void testGetBranchNumber()", "+\tpublic void testGetSwitchNumber()"]}]}