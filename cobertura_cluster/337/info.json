{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da129a56e87f6104b62a3b718d058caf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "732dc94f6ff23f98f3c047d5c015a816", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "commitAfterChange": "d0e0a0f0aa7d8408ac3779914ce8b50e1c541921", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "diff": ["-                _sClass += new String(getToken(0).image);\r", "+                _sClass += getToken(0).image;\r", "-                 Vector vMetrics = new Vector();\r", "-                 vMetrics.addElement(new String(_sPackage + _sClass));\r", "-                 vMetrics.addElement(new Integer(_ncss - oldNcss));\r", "-                 vMetrics.addElement(new Integer(_functions - oldFunctions));\r", "-                 vMetrics.addElement(new Integer(_classes - oldClasses));\r", "+                 ObjectMetric metric = new ObjectMetric();\r", "+                 metric.name = _sPackage + _sClass;\r", "+                 metric.ncss = _ncss - oldNcss;\r", "+                 metric.functions = _functions - oldFunctions;\r", "+                 metric.classes = _classes - oldClasses;\r", "-                 vMetrics.addElement( new Integer( lastToken.endLine ) );\r", "-                 vMetrics.addElement( new Integer( lastToken.endColumn ) );\r", "-                 vMetrics.addElement( new Integer( _javadocs ) );\r", "+                 //metric.add( new Integer( lastToken.endLine ) );\r", "+                 //metric.add( new Integer( lastToken.endColumn ) );\r", "+                 metric.javadocs = _javadocs;\r", "-                 vMetrics.addElement( new Integer(_jvdcLines));\r", "-                 vMetrics.addElement( new Integer(JavaParserTokenManager._iSingleComments - oldSingle));\r", "-                 vMetrics.addElement( new Integer(JavaParserTokenManager._iMultiComments - oldMulti));\r", "+                 metric.javadocsLn = _jvdcLines;\r", "+                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;\r", "+                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;\r", "-                 _vClasses.addElement(vMetrics);\r", "+                 _vClasses.add(metric);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae4b108eba33fef624c8bceee7362fa", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "c277fa7366a5b91289ee476b78638d0f14478c1c", "commitAfterChange": "d0e0a0f0aa7d8408ac3779914ce8b50e1c541921", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \r   final public void UnmodifiedClassDeclaration() throws ParseException", "signatureAfterChange": "\r \r   final public void UnmodifiedClassDeclaration() throws ParseException", "diff": ["-                _sClass += new String(getToken(2).image);\r", "+                _sClass += getToken(2).image;\r", "-                        Vector vMetrics = new Vector();\r", "-                        vMetrics.addElement(new String(_sPackage + _sClass));\r", "-                        vMetrics.addElement(new Integer(_ncss - oldNcss));\r", "-                        vMetrics.addElement(new Integer(_functions - oldFunctions));\r", "-                        vMetrics.addElement(new Integer(_classes - oldClasses));\r", "+                        ObjectMetric metric = new ObjectMetric();\r", "+                        metric.name = _sPackage + _sClass;\r", "+                        metric.ncss = _ncss - oldNcss;\r", "+                        metric.functions = _functions - oldFunctions;\r", "+                        metric.classes = _classes - oldClasses;\r", "-                        vMetrics.addElement( new Integer( lastToken.endLine ) );\r", "-                        vMetrics.addElement( new Integer( lastToken.endColumn ) );\r", "-                        //vMetrics.addElement( new Integer( _javadocs ) );\r", "-                        _vClasses.addElement(vMetrics);\r", "+                        //metric.add( new Integer( lastToken.endLine ) );\r", "+                        //metric.add( new Integer( lastToken.endColumn ) );\r", "+                        //metric.add( new Integer( _javadocs ) );\r", "+                        _vClasses.add( metric );\r"]}]}