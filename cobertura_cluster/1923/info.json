{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01b1ee4723ed3283103882e3ccd480ea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26385ee4c32f71017d254a712196394d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/InstrumentTask.java", "commitBeforeChange": "76fa01baf70f8272800d4a2e686311024ccc5ab9", "commitAfterChange": "a200058f73d8ed1c2d6487fd38cdebc8a65529c5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void execute() throws BuildException", "signatureAfterChange": "  \tpublic void execute() throws BuildException", "diff": ["-\tpublic void execute() throws BuildException", "-\t{", "-\t\tinitArgs();", "+\tpublic void execute() throws BuildException {", "+\t\tCommandLineBuilder builder = null;", "+\t\ttry {", "+\t\t\tbuilder = new CommandLineBuilder();", "+\t\t\tif (dataFile != null)", "+\t\t\t\tbuilder.addArg(\"--datafile\", dataFile);", "+\t\t\tif (toDir != null)", "+\t\t\t\tbuilder.addArg(\"--destination\", toDir.getAbsolutePath());", "-\t\tif (dataFile != null)", "-\t\t{", "-\t\t\taddArg(\"--datafile\");", "-\t\t\taddArg(dataFile);", "+\t\t\t// ignoreRegex.setRegex() is never called, but that's ok", "+\t\t\t// because ant sets it somehow, I think", "+\t\t\tif (ignoreRegex != null)", "+\t\t\t\tbuilder.addArg(\"--ignore\", ignoreRegex.getRegex());", "+", "+\t\t\tcreateArgumentsForFilesets(builder);", "+", "+\t\t\tbuilder.saveArgs();", "+\t\t} catch (IOException ioe) {", "+\t\t\tgetProject().log(\"Error creating commands file.\", Project.MSG_ERR);", "+\t\t\tthrow new BuildException(\"Unable to create the commands file.\", ioe);", "-", "-\t\tif (toDir != null)", "-\t\t{", "-\t\t\taddArg(\"--destination\");", "-\t\t\taddArg(toDir.toString());", "-\t\t}", "-", "-\t\t// ignoreRegex.setRegex() is never called, but that's ok", "-\t\t// because ant sets it somehow, I think", "-\t\tif (ignoreRegex != null)", "-\t\t{", "-\t\t\taddArg(\"--ignore\");", "-\t\t\taddArg(ignoreRegex.getRegex());", "-\t\t}", "-", "-\t\thandleFilesets();", "-", "-\t\tsaveArgs();", "-\t\t * TODO: Do something here so that we can set System.in and System.out on", "-\t\t * getJava() to the one we're using now.  So that when instrumentation calls", "-\t\t * System.out, it will show up as \"[instrument] doing stuff\" instead of", "-\t\t * \"[java] doing stuff\" in the ant output.", "+\t\t * TODO: Do something here so that we can set System.in and System.out", "+\t\t * on getJava() to the one we're using now. So that when instrumentation", "+\t\t * calls System.out, it will show up as \"[instrument] doing stuff\"", "+\t\t * instead of \"[java] doing stuff\" in the ant output.", "-\t\tif (getJava().executeJava() != 0)", "-\t\t{", "-\t\t\tthrow new BuildException(\"Error instrumenting classes. See messages above.\");", "+\t\tgetJava().createArg().setValue(\"--commandsfile\");", "+\t\tgetJava().createArg().setValue(builder.getCommandLineFile());", "+\t\tif (getJava().executeJava() != 0) {", "+\t\t\tthrow new BuildException(", "+\t\t\t\t\t\"Error instrumenting classes. See messages above.\");", "-\t\tunInitArgs();", "-\t}", "+\t\tbuilder.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3011e1f8d170038dce6d2342bf7ae0e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/ReportTask.java", "commitBeforeChange": "76fa01baf70f8272800d4a2e686311024ccc5ab9", "commitAfterChange": "a200058f73d8ed1c2d6487fd38cdebc8a65529c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void execute() throws BuildException", "signatureAfterChange": " \t \tpublic void execute() throws BuildException", "diff": ["+\tpublic void execute() throws BuildException {", "+\t\tCommandLineBuilder builder = null;", "+\t\ttry {", "+\t\t\tbuilder = new CommandLineBuilder();", "+\t\t\tif (dataFile != null)", "+\t\t\t\tbuilder.addArg(\"--datafile\", dataFile);", "+\t\t\tif (destDir != null)", "+\t\t\t\tbuilder.addArg(\"--destination\", destDir.getAbsolutePath());", "+\t\t\tif (format != null)", "+\t\t\t\tbuilder.addArg(\"--format\", format);", "+\t\t\tif (srcDir != null)", "+\t\t\t\tbuilder.addArg(srcDir);", "+", "+\t\t\tcreateArgumentsForFilesets(builder);", "+", "+\t\t\tbuilder.saveArgs();", "+\t\t} catch (IOException ioe) {", "+\t\t\tgetProject().log(\"Error creating commands file.\", Project.MSG_ERR);", "+\t\t\tthrow new BuildException(\"Unable to create the commands file.\", ioe);", "-", "-\tpublic void execute() throws BuildException", "-\t{", "-\t\tinitArgs();", "-", "-\t\tif (dataFile != null)", "-\t\t{", "-\t\t\taddArg(\"--datafile\");", "-\t\t\taddArg(dataFile);", "-\t\t}", "-\t\t", "-\t\taddArg(\"--destination\");", "-\t\taddArg(this.destDir.getAbsolutePath());", "-\t\t", "-\t\taddArg(\"--format\");", "-\t\taddArg(format);", "-\t\t", "-\t\tif (srcDir != null) {", "-\t\t\taddArg(srcDir);", "-\t\t}", "-", "-\t\thandleFilesets();", "-", "-\t\tsaveArgs();", "-\t\t * TODO: Do something here so that we can set System.in and System.out on", "-\t\t * getJava() to the one we're using now.  So that when instrumentation calls", "-\t\t * System.out, it will show up as \"[instrument] doing stuff\" instead of", "-\t\t * \"[java] doing stuff\" in the ant output.", "+\t\t * TODO: Do something here so that we can set System.in and System.out", "+\t\t * on getJava() to the one we're using now. So that when instrumentation", "+\t\t * calls System.out, it will show up as \"[instrument] doing stuff\"", "+\t\t * instead of \"[java] doing stuff\" in the ant output.", "-\t\tif (getJava().executeJava() != 0)", "-\t\t{", "-\t\t\tthrow new BuildException(\"Error running reports. See messages above.\");", "+\t\tgetJava().createArg().setValue(\"--commandsfile\");", "+\t\tgetJava().createArg().setValue(builder.getCommandLineFile());", "+\t\tif (getJava().executeJava() != 0) {", "+\t\t\tthrow new BuildException(", "+\t\t\t\t\t\"Error running reports. See messages above.\");", "-\t\tunInitArgs();", "-\t}", "+\t\tbuilder.dispose();"]}]}