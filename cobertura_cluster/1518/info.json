{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1dd8c0175e51cae553e1bdc3c87f3b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0a8c6d34215e4a0481e62c1e411cc00", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 131, "signatureBeforeChange": "\r   final public int Modifiers() throws ParseException", "signatureAfterChange": "   final public int Modifiers() throws ParseException", "diff": ["- */\r", "-  final public int Modifiers() throws ParseException {\r", "-   int modifiers = 0;\r", "-   _tmpToken = null;\r", "-    label_66:\r", "-    while (true) {\r", "-      if (jj_2_52(2)) {\r", "-        ;\r", "-      } else {\r", "-        break label_66;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case PUBLIC:\r", "-        jj_consume_token(PUBLIC);\r", "-              modifiers |= ModifierSet.PUBLIC;\r", "-      if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case STATIC:\r", "-        jj_consume_token(STATIC);\r", "-              modifiers |= ModifierSet.STATIC;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case PROTECTED:\r", "-        jj_consume_token(PROTECTED);\r", "-                 modifiers |= ModifierSet.PROTECTED;       if ( _tmpToken == null ) {\r", "-       _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case PRIVATE:\r", "-        jj_consume_token(PRIVATE);\r", "-               modifiers |= ModifierSet.PRIVATE;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case FINAL:\r", "-        jj_consume_token(FINAL);\r", "-             modifiers |= ModifierSet.FINAL;       if ( _tmpToken == null ) {\r", "-       _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case ABSTRACT:\r", "-        jj_consume_token(ABSTRACT);\r", "-                modifiers |= ModifierSet.ABSTRACT;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case SYNCHRONIZED:\r", "-        jj_consume_token(SYNCHRONIZED);\r", "-                    modifiers |= ModifierSet.SYNCHRONIZED;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case NATIVE:\r", "-        jj_consume_token(NATIVE);\r", "-              modifiers |= ModifierSet.NATIVE;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case TRANSIENT:\r", "-        jj_consume_token(TRANSIENT);\r", "-                 modifiers |= ModifierSet.TRANSIENT;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case VOLATILE:\r", "-        jj_consume_token(VOLATILE);\r", "-                modifiers |= ModifierSet.VOLATILE;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case TESTAAAA:\r", "-        jj_consume_token(TESTAAAA);\r", "-                modifiers |= ModifierSet.STRICTFP;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case AT:\r", "-        Annotation();\r", "-        break;\r", "-      default:\r", "-        jj_la1[172] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-    {if (true) return modifiers;}\r", "-    throw new Error(\"Missing return statement in function\");\r", "-  }\r", "+ */", "+  final public int Modifiers() throws ParseException {", "+   int modifiers = 0;", "+   _tmpToken = null;", "+    label_69:", "+    while (true) {", "+      if (jj_2_51(2)) {", "+        ;", "+      } else {", "+        break label_69;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PUBLIC:", "+        jj_consume_token(PUBLIC);", "+              modifiers |= ModifierSet.PUBLIC;", "+      if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case STATIC:", "+        jj_consume_token(STATIC);", "+              modifiers |= ModifierSet.STATIC;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case PROTECTED:", "+        jj_consume_token(PROTECTED);", "+                 modifiers |= ModifierSet.PROTECTED;       if ( _tmpToken == null ) {", "+       _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case PRIVATE:", "+        jj_consume_token(PRIVATE);", "+               modifiers |= ModifierSet.PRIVATE;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case FINAL:", "+        jj_consume_token(FINAL);", "+             modifiers |= ModifierSet.FINAL;       if ( _tmpToken == null ) {", "+       _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case ABSTRACT:", "+        jj_consume_token(ABSTRACT);", "+                modifiers |= ModifierSet.ABSTRACT;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case SYNCHRONIZED:", "+        jj_consume_token(SYNCHRONIZED);", "+                    modifiers |= ModifierSet.SYNCHRONIZED;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case NATIVE:", "+        jj_consume_token(NATIVE);", "+              modifiers |= ModifierSet.NATIVE;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case TRANSIENT:", "+        jj_consume_token(TRANSIENT);", "+                 modifiers |= ModifierSet.TRANSIENT;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case VOLATILE:", "+        jj_consume_token(VOLATILE);", "+                modifiers |= ModifierSet.VOLATILE;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case TESTAAAA:", "+        jj_consume_token(TESTAAAA);", "+                modifiers |= ModifierSet.STRICTFP;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case AT:", "+        Annotation();", "+        break;", "+      default:", "+        jj_la1[177] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+    {if (true) return modifiers;}", "+    throw new Error(\"Missing return statement in function\");", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4dabad56717572830b6e2aa7aee7ced", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 131, "signatureBeforeChange": "\r   final public int Modifiers() throws ParseException", "signatureAfterChange": "   final public int Modifiers() throws ParseException", "diff": ["- */\r", "-  final public int Modifiers() throws ParseException {\r", "-   int modifiers = 0;\r", "-   _tmpToken = null;\r", "-    label_66:\r", "-    while (true) {\r", "-      if (jj_2_52(2)) {\r", "-        ;\r", "-      } else {\r", "-        break label_66;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case PUBLIC:\r", "-        jj_consume_token(PUBLIC);\r", "-              modifiers |= ModifierSet.PUBLIC;\r", "-      if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case STATIC:\r", "-        jj_consume_token(STATIC);\r", "-              modifiers |= ModifierSet.STATIC;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case PROTECTED:\r", "-        jj_consume_token(PROTECTED);\r", "-                 modifiers |= ModifierSet.PROTECTED;       if ( _tmpToken == null ) {\r", "-       _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case PRIVATE:\r", "-        jj_consume_token(PRIVATE);\r", "-               modifiers |= ModifierSet.PRIVATE;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case FINAL:\r", "-        jj_consume_token(FINAL);\r", "-             modifiers |= ModifierSet.FINAL;       if ( _tmpToken == null ) {\r", "-       _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case ABSTRACT:\r", "-        jj_consume_token(ABSTRACT);\r", "-                modifiers |= ModifierSet.ABSTRACT;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case SYNCHRONIZED:\r", "-        jj_consume_token(SYNCHRONIZED);\r", "-                    modifiers |= ModifierSet.SYNCHRONIZED;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case NATIVE:\r", "-        jj_consume_token(NATIVE);\r", "-              modifiers |= ModifierSet.NATIVE;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case TRANSIENT:\r", "-        jj_consume_token(TRANSIENT);\r", "-                 modifiers |= ModifierSet.TRANSIENT;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case VOLATILE:\r", "-        jj_consume_token(VOLATILE);\r", "-                modifiers |= ModifierSet.VOLATILE;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case TESTAAAA:\r", "-        jj_consume_token(TESTAAAA);\r", "-                modifiers |= ModifierSet.STRICTFP;       if ( _tmpToken == null ) {\r", "-          _tmpToken = getToken( 0 );\r", "-      }\r", "-        break;\r", "-      case AT:\r", "-        Annotation();\r", "-        break;\r", "-      default:\r", "-        jj_la1[172] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-    }\r", "-    {if (true) return modifiers;}\r", "-    throw new Error(\"Missing return statement in function\");\r", "-  }\r", "+ */", "+  final public int Modifiers() throws ParseException {", "+   int modifiers = 0;", "+   _tmpToken = null;", "+    label_69:", "+    while (true) {", "+      if (jj_2_51(2)) {", "+        ;", "+      } else {", "+        break label_69;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PUBLIC:", "+        jj_consume_token(PUBLIC);", "+              modifiers |= ModifierSet.PUBLIC;", "+      if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case STATIC:", "+        jj_consume_token(STATIC);", "+              modifiers |= ModifierSet.STATIC;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case PROTECTED:", "+        jj_consume_token(PROTECTED);", "+                 modifiers |= ModifierSet.PROTECTED;       if ( _tmpToken == null ) {", "+       _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case PRIVATE:", "+        jj_consume_token(PRIVATE);", "+               modifiers |= ModifierSet.PRIVATE;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case FINAL:", "+        jj_consume_token(FINAL);", "+             modifiers |= ModifierSet.FINAL;       if ( _tmpToken == null ) {", "+       _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case ABSTRACT:", "+        jj_consume_token(ABSTRACT);", "+                modifiers |= ModifierSet.ABSTRACT;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case SYNCHRONIZED:", "+        jj_consume_token(SYNCHRONIZED);", "+                    modifiers |= ModifierSet.SYNCHRONIZED;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case NATIVE:", "+        jj_consume_token(NATIVE);", "+              modifiers |= ModifierSet.NATIVE;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case TRANSIENT:", "+        jj_consume_token(TRANSIENT);", "+                 modifiers |= ModifierSet.TRANSIENT;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case VOLATILE:", "+        jj_consume_token(VOLATILE);", "+                modifiers |= ModifierSet.VOLATILE;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case TESTAAAA:", "+        jj_consume_token(TESTAAAA);", "+                modifiers |= ModifierSet.STRICTFP;       if ( _tmpToken == null ) {", "+          _tmpToken = getToken( 0 );", "+      }", "+        break;", "+      case AT:", "+        Annotation();", "+        break;", "+      default:", "+        jj_la1[177] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+    {if (true) return modifiers;}", "+    throw new Error(\"Missing return statement in function\");", "+  }"]}]}