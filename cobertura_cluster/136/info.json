{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d92f2e251dc53adbf1a33424ada06dfe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aca93bfc4b88d43669a36bde7230838", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/instrument/CoberturaInstrumenter.java", "commitBeforeChange": "44c190f03e94ec51d4b0e2c341ffa423444f43cd", "commitAfterChange": "b998129da7b5361165253e4716b0daef5935d307", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) \t\t\tthrows IOException", "signatureAfterChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) \t\t\tthrows IOException", "diff": ["-\t\t\tcr2.accept(cv2, ClassReader.EXPAND_FRAMES);", "+\t\t\tcr2.accept(new CheckClassAdapter(cv2), ClassReader.SKIP_FRAMES);", "+\t\t\tStringWriter sw = new StringWriter();", "+\t\t\tPrintWriter pw = new PrintWriter(sw);", "+\t\t\tCheckClassAdapter.verify(new ClassReader(cw2.toByteArray()), false,", "+\t\t\t\t\tpw);", "+\t\t\tlogger.debug(sw.toString());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ac7bf3a364d3a70490d580db1a9270", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/instrument/CoberturaInstrumenter.java", "commitBeforeChange": "b93d2b6e74310c83786b54e4e9e27c6da79dee62", "commitAfterChange": "90826793faf4540a10760bb904f524aa6e57aef0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) \t\t\tthrows IOException", "signatureAfterChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) \t\t\tthrows IOException", "diff": ["-\t\t\tcr2.accept(cv2, ClassReader.EXPAND_FRAMES);", "+\t\t\tcr2.accept(new CheckClassAdapter(cv2), ClassReader.SKIP_FRAMES);", "+\t\t\tStringWriter sw = new StringWriter();", "+\t\t\tPrintWriter pw = new PrintWriter(sw);", "+\t\t\tCheckClassAdapter.verify(new ClassReader(cw2.toByteArray()), false,", "+\t\t\t\t\tpw);", "+\t\t\tlogger.debug(sw.toString());", "+"]}]}