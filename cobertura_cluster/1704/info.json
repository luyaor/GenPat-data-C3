{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ad0596d91a0a3e96dbb7be8e807f4d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fa5e68d46bbcef203c1bc9df6c18c8f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 133, "signatureBeforeChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "    final public void EnumDeclaration(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void EnumDeclaration(int modifiers) throws ParseException {\r", "-        String sOldClass = _sClass;\r", "-        int oldClasses = _classes;\r", "-        int oldNcss = _ncss;\r", "-        int oldFunctions = _functions;\r", "-\r", "-        // Chris Povirk\r", "-        int oldSingle;\r", "-        int oldMulti;\r", "-      Util.debug( \"EnumDeclaration().START\" );\r", "-    jj_consume_token(ENUM);\r", "-    jj_consume_token(IDENTIFIER);\r", "-                if (!_sClass.equals(\"\")) {\r", "-                        _sClass += \".\";\r", "-                }\r", "-                _sClass += getToken(0).image;\r", "-                _classLevel ++;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IMPLEMENTS:\r", "-      ImplementsList(false);\r", "-      break;\r", "-    default:\r", "-      jj_la1[177] = jj_gen;\r", "-      ;\r", "-    }\r", "-        // Chris Povirk\r", "-      oldSingle = JavaParserTokenManager._iSingleComments;\r", "-      oldMulti = JavaParserTokenManager._iMultiComments;\r", "-    EnumBody();\r", "-             _classLevel--;\r", "-             if (_classLevel == 0) {\r", "-                 //_topLevelClasses++;\r", "-                 ObjectMetric metric = new ObjectMetric();\r", "-                 metric.name = _sPackage + _sClass;\r", "-                 metric.ncss = _ncss - oldNcss;\r", "-                 metric.functions = _functions - oldFunctions;\r", "-                 metric.classes = _classes - oldClasses;\r", "-                 Token lastToken = getToken( 0 );\r", "-                 //metric.add( new Integer( lastToken.endLine ) );\r", "-                 //metric.add( new Integer( lastToken.endColumn ) );\r", "-                 metric.javadocs = _javadocs;\r", "-\r", "-                 // Chris Povirk\r", "-                 metric.javadocsLn = _jvdcLines;\r", "-                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;\r", "-\r", "-                 _vClasses.add(metric);\r", "-                 _pPackageMetric.functions += _functions - oldFunctions;\r", "-                 _pPackageMetric.classes++;\r", "-\r", "-                 // added by SMS\r", "-                 _pPackageMetric.javadocs += _javadocs;\r", "-                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;\r", "-                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;\r", "-                 //\r", "-             }\r", "-             _functions = oldFunctions;\r", "-             _classes = oldClasses + 1;\r", "-             _sClass = sOldClass;\r", "-  }\r", "+", "+  final public void EnumDeclaration(int modifiers) throws ParseException {", "+        String sOldClass = _sClass;", "+        int oldClasses = _classes;", "+        int oldNcss = _ncss;", "+        int oldFunctions = _functions;", "+", "+        // Chris Povirk", "+        int oldSingle;", "+        int oldMulti;", "+      Util.debug( \"EnumDeclaration().START\" );", "+    jj_consume_token(ENUM);", "+    jj_consume_token(IDENTIFIER);", "+                if (!_sClass.equals(\"\")) {", "+                        _sClass += \".\";", "+                }", "+                _sClass += getToken(0).image;", "+                _classLevel ++;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IMPLEMENTS:", "+      ImplementsList(false);", "+      break;", "+    default:", "+      jj_la1[182] = jj_gen;", "+      ;", "+    }", "+        // Chris Povirk", "+      oldSingle = JavaParserTokenManager._iSingleComments;", "+      oldMulti = JavaParserTokenManager._iMultiComments;", "+    EnumBody();", "+             _classLevel--;", "+             if (_classLevel == 0) {", "+                 //_topLevelClasses++;", "+                 ObjectMetric metric = new ObjectMetric();", "+                 metric.name = _sPackage + _sClass;", "+                 metric.ncss = _ncss - oldNcss;", "+                 metric.functions = _functions - oldFunctions;", "+                 metric.classes = _classes - oldClasses;", "+                 Token lastToken = getToken( 0 );", "+                 //metric.add( new Integer( lastToken.endLine ) );", "+                 //metric.add( new Integer( lastToken.endColumn ) );", "+                 metric.javadocs = _javadocs;", "+", "+                 // Chris Povirk", "+                 metric.javadocsLn = _jvdcLines;", "+                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;", "+                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;", "+", "+                 _vClasses.add(metric);", "+                 _pPackageMetric.functions += _functions - oldFunctions;", "+                 _pPackageMetric.classes++;", "+", "+                 // added by SMS", "+                 _pPackageMetric.javadocs += _javadocs;", "+                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;", "+                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;", "+                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;", "+                 //", "+             }", "+             _functions = oldFunctions;", "+             _classes = oldClasses + 1;", "+             _sClass = sOldClass;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1c187ee894d5e9c13763ce826ac3ba", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 133, "signatureBeforeChange": "\r \r   final public void EnumDeclaration(int modifiers) throws ParseException", "signatureAfterChange": "    final public void EnumDeclaration(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void EnumDeclaration(int modifiers) throws ParseException {\r", "-        String sOldClass = _sClass;\r", "-        int oldClasses = _classes;\r", "-        int oldNcss = _ncss;\r", "-        int oldFunctions = _functions;\r", "-\r", "-        // Chris Povirk\r", "-        int oldSingle;\r", "-        int oldMulti;\r", "-      Util.debug( \"EnumDeclaration().START\" );\r", "-    jj_consume_token(ENUM);\r", "-    jj_consume_token(IDENTIFIER);\r", "-                if (!_sClass.equals(\"\")) {\r", "-                        _sClass += \".\";\r", "-                }\r", "-                _sClass += getToken(0).image;\r", "-                _classLevel ++;\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case IMPLEMENTS:\r", "-      ImplementsList(false);\r", "-      break;\r", "-    default:\r", "-      jj_la1[177] = jj_gen;\r", "-      ;\r", "-    }\r", "-        // Chris Povirk\r", "-      oldSingle = JavaParserTokenManager._iSingleComments;\r", "-      oldMulti = JavaParserTokenManager._iMultiComments;\r", "-    EnumBody();\r", "-             _classLevel--;\r", "-             if (_classLevel == 0) {\r", "-                 //_topLevelClasses++;\r", "-                 ObjectMetric metric = new ObjectMetric();\r", "-                 metric.name = _sPackage + _sClass;\r", "-                 metric.ncss = _ncss - oldNcss;\r", "-                 metric.functions = _functions - oldFunctions;\r", "-                 metric.classes = _classes - oldClasses;\r", "-                 Token lastToken = getToken( 0 );\r", "-                 //metric.add( new Integer( lastToken.endLine ) );\r", "-                 //metric.add( new Integer( lastToken.endColumn ) );\r", "-                 metric.javadocs = _javadocs;\r", "-\r", "-                 // Chris Povirk\r", "-                 metric.javadocsLn = _jvdcLines;\r", "-                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;\r", "-\r", "-                 _vClasses.add(metric);\r", "-                 _pPackageMetric.functions += _functions - oldFunctions;\r", "-                 _pPackageMetric.classes++;\r", "-\r", "-                 // added by SMS\r", "-                 _pPackageMetric.javadocs += _javadocs;\r", "-                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;\r", "-                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;\r", "-                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;\r", "-                 //\r", "-             }\r", "-             _functions = oldFunctions;\r", "-             _classes = oldClasses + 1;\r", "-             _sClass = sOldClass;\r", "-  }\r", "+", "+  final public void EnumDeclaration(int modifiers) throws ParseException {", "+        String sOldClass = _sClass;", "+        int oldClasses = _classes;", "+        int oldNcss = _ncss;", "+        int oldFunctions = _functions;", "+", "+        // Chris Povirk", "+        int oldSingle;", "+        int oldMulti;", "+      Util.debug( \"EnumDeclaration().START\" );", "+    jj_consume_token(ENUM);", "+    jj_consume_token(IDENTIFIER);", "+                if (!_sClass.equals(\"\")) {", "+                        _sClass += \".\";", "+                }", "+                _sClass += getToken(0).image;", "+                _classLevel ++;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case IMPLEMENTS:", "+      ImplementsList(false);", "+      break;", "+    default:", "+      jj_la1[182] = jj_gen;", "+      ;", "+    }", "+        // Chris Povirk", "+      oldSingle = JavaParserTokenManager._iSingleComments;", "+      oldMulti = JavaParserTokenManager._iMultiComments;", "+    EnumBody();", "+             _classLevel--;", "+             if (_classLevel == 0) {", "+                 //_topLevelClasses++;", "+                 ObjectMetric metric = new ObjectMetric();", "+                 metric.name = _sPackage + _sClass;", "+                 metric.ncss = _ncss - oldNcss;", "+                 metric.functions = _functions - oldFunctions;", "+                 metric.classes = _classes - oldClasses;", "+                 Token lastToken = getToken( 0 );", "+                 //metric.add( new Integer( lastToken.endLine ) );", "+                 //metric.add( new Integer( lastToken.endColumn ) );", "+                 metric.javadocs = _javadocs;", "+", "+                 // Chris Povirk", "+                 metric.javadocsLn = _jvdcLines;", "+                 metric.singleLn = JavaParserTokenManager._iSingleComments - oldSingle;", "+                 metric.multiLn = JavaParserTokenManager._iMultiComments - oldMulti;", "+", "+                 _vClasses.add(metric);", "+                 _pPackageMetric.functions += _functions - oldFunctions;", "+                 _pPackageMetric.classes++;", "+", "+                 // added by SMS", "+                 _pPackageMetric.javadocs += _javadocs;", "+                 //_pPackageMetric.javadocsLn += JavaParserTokenManager._iFormalComments - oldFormal;", "+                 //_pPackageMetric.singleLn += JavaParserTokenManager._iSingleComments - oldSingle;", "+                 //_pPackageMetric.multiLn += Manager._iMultiComments - oldMulti;", "+                 //", "+             }", "+             _functions = oldFunctions;", "+             _classes = oldClasses + 1;", "+             _sClass = sOldClass;", "+  }"]}]}