{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c98018293bc6bdf286b788104fea96cf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807500a2c7e9159e25cf9196310c188b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/PackageDataTest.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testBranchCoverage()", "signatureAfterChange": "  \tpublic void testBranchCoverage()", "diff": ["-\t\tclassData.markLineAsBranch(1);", "-\t\tclassData.markLineAsBranch(2);", "-\t\tclassData.markLineAsBranch(3);", "-\t\tclassData.markLineAsBranch(4);", "+\t\tclassData.addLineJump(1, 0);", "+      classData.addLineSwitch(1, 1, new int[] {1,5});", "+\t\tclassData.addLineJump(2, 0);", "+\t\tclassData.addLineSwitch(3, 0, 1, 3);", "-\t\tassertEquals(4, packageData.getNumberOfValidBranches());", "+\t\tassertEquals(12, packageData.getNumberOfValidBranches());", "+      classData.touchJump(1, 0, true);", "+      classData.touch(1);", "+      classData.touchJump(1, 0, false);", "+      classData.touchSwitch(1, 1, 0);", "-", "-\t\tassertEquals(2, packageData.getNumberOfCoveredBranches());", "-\t\tassertEquals(4, packageData.getNumberOfValidBranches());", "-\t\tassertEquals(0.50d, packageData.getBranchCoverageRate(), 0d);", "+      classData.touchJump(2, 0, false);", "+      ", "+\t\tassertEquals(4, packageData.getNumberOfCoveredBranches());", "+\t\tassertEquals(12, packageData.getNumberOfValidBranches());", "+\t\tassertEquals(0.33d, packageData.getBranchCoverageRate(), 0.01d);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d781ad6b8cfc412d47210017fb1c267d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/merge/MergeTest.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testMergeBranches()", "signatureAfterChange": " \t \tpublic void testMergeBranches()", "diff": ["-\t\tfirstClass.markLineAsBranch(1);", "+\t\tfirstClass.addLineJump(1, 0);", "-\t\tfirstClass.markLineAsBranch(2);", "+\t\tfirstClass.addLineJump(2, 0);", "+\t\tfirstClass.addLineJump(2, 1);", "-\t\tfirstClass.markLineAsBranch(4);", "+\t\tfirstClass.addLineSwitch(4, 0, 0, 2);", "-\t\tfirstClassB.markLineAsBranch(1);", "+\t\tfirstClassB.addLineJump(1, 0);", "-\t\tfirstClassB.markLineAsBranch(3);", "+\t\tfirstClassB.addLineSwitch(3, 0, 2, 4);", "-\t\tfirstClassB.markLineAsBranch(6);", "+\t\tfirstClassB.addLineJump(6, 0);", "-\t\tassertTrue( line1.isBranch());", "+\t\tassertTrue( line1.hasBranch());", "-\t\tassertTrue( line2.isBranch());", "+\t\tassertTrue( line2.hasBranch());", "-\t\tassertTrue( line3.isBranch());", "+\t\tassertTrue( line3.hasBranch());", "-\t\tassertTrue( line4.isBranch());", "+\t\tassertTrue( line4.hasBranch());", "-\t\tassertFalse( line5.isBranch());", "+\t\tassertFalse( line5.hasBranch());", "-\t\tassertTrue( line6.isBranch());", "+\t\tassertTrue( line6.hasBranch());", "-\t\tassertFalse( line7.isBranch());", "+\t\tassertFalse( line7.hasBranch());", "-\t\tassertFalse( line8.isBranch());", "+\t\tassertFalse( line8.hasBranch());"]}]}