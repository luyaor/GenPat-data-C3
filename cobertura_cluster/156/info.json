{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35eb2470d0d4f79faaea59c68f4785bf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2d19a7ca7febc9fabf348d034c91c2e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/reporting/JUnitXMLParserEntityResolver.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic InputSource resolveEntity(String publicId, String systemId) \t\t\tthrows SAXException", "signatureAfterChange": "  \tpublic InputSource resolveEntity(String publicId, String systemId) \t\t\tthrows SAXException", "diff": ["-\t\tlog.info(String.format(\"systemId=%s\", systemId));", "+\t\tSystem.out.println(\"systemId=\" + systemId);", "-\t\t\tlog.info(String.format(", "-\t\t\t\t\t\"Unable to open local DTD file %s, using %s instead\",", "-\t\t\t\t\tlocalDtd.getAbsolutePath(), systemId));", "+\t\t\tSystem.out.println(\"Unable to open local DTD file \"", "+\t\t\t\t\t+ localDtd.getAbsolutePath() + \", using \" + systemId", "+\t\t\t\t\t+ \" instead.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1f8a461d8cee1306942e423bf74db6f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/thread/test/ThreadedFunctionalTest.java", "commitBeforeChange": "089650db9d28712b1a3dfdba40a72f053f7ead6f", "commitAfterChange": "0e90a9877baa84d9c9d3f4d025446eaac17fe3ad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void compileSource(final File srcDir)", "signatureAfterChange": "  \tpublic void compileSource(final File srcDir)", "diff": ["-\t\tlog.info(String.format(\"Invoking groovyC command on %s\", srcDir", "-\t\t\t\t.getAbsolutePath()));", "+\t\tSystem.out.println(\"Invoking groovyC command on \"", "+\t\t\t\t+ srcDir.getAbsolutePath());", "-\t\tlog.info(\"Finish invoking groovyC command.\");", "+\t\tSystem.out.println(\"Finish invoking groovyC command.\");"]}]}