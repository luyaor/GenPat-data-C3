{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac3c54272e00d787f557e49c5be4acb1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41d432a74b57f177eed6313fd3f37e5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r \r   final public void UnmodifiedInterfaceDeclaration() throws ParseException", "signatureAfterChange": "\r \r   final public void UnmodifiedInterfaceDeclaration() throws ParseException", "diff": ["+\r", "+                //Added by REYNAUD Sebastien (LOGICA)\r", "+                int oldJavadocs = _javadocs;\r", "-      jj_la1[40] = jj_gen;\r", "+      jj_la1[46] = jj_gen;\r", "-      jj_la1[41] = jj_gen;\r", "+      jj_la1[47] = jj_gen;\r", "-    label_22:\r", "+    label_23:\r", "-        jj_la1[42] = jj_gen;\r", "-        break label_22;\r", "+        jj_la1[48] = jj_gen;\r", "+        break label_23;\r", "+                        //Added by REYNAUD Sebastien (LOGICA)\r", "+                        else\r", "+                        {\r", "+                        ObjectMetric metric1 = new ObjectMetric();\r", "+                  metric1.name = _sPackage + _sClass;\r", "+                        metric1.ncss = _ncss - oldNcss;\r", "+                  metric1.functions = _functions - oldFunctions;\r", "+                  metric1.classes = _classes - oldClasses;\r", "+                  Token lastToken = getToken( 0 );\r", "+                  _vClasses.add( metric1 );\r", "+                  _pPackageMetric.functions += _functions - oldFunctions;\r", "+                  _pPackageMetric.classes++;\r", "+                        //_pPackageMetric.javadocs += _javadocs;\r", "+                        metric1.javadocs = _javadocs - oldJavadocs;\r", "+                        }\r", "+                        //\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d790459389acb3f2989381e8649e7a53", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \r   final public void UnmodifiedClassDeclaration() throws ParseException", "signatureAfterChange": "\r \r   final public void UnmodifiedClassDeclaration() throws ParseException", "diff": ["+\r", "+                //Added by REYNAUD Sebastien (LOGICA)\r", "+                int oldJavadocs = _javadocs;\r", "+      label_11:\r", "+      while (true) {\r", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "+        case DOT:\r", "+          ;\r", "+          break;\r", "+        default:\r", "+          jj_la1[21] = jj_gen;\r", "+          break label_11;\r", "+        }\r", "+        jj_consume_token(DOT);\r", "+        Name();\r", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "+        case LT:\r", "+          TypeArguments();\r", "+          break;\r", "+        default:\r", "+          jj_la1[22] = jj_gen;\r", "+          ;\r", "+        }\r", "+      }\r", "-      jj_la1[21] = jj_gen;\r", "+      jj_la1[23] = jj_gen;\r", "-      jj_la1[22] = jj_gen;\r", "+      jj_la1[24] = jj_gen;\r", "+                        //Added by REYNAUD Sebastien (LOGICA)\r", "+                        else\r", "+                        {\r", "+                        ObjectMetric metric1 = new ObjectMetric();\r", "+                  metric1.name = _sPackage + _sClass ;\r", "+                        metric1.ncss = _ncss - oldNcss;\r", "+                  metric1.functions = _functions - oldFunctions;\r", "+                  metric1.classes = _classes - oldClasses;\r", "+                  Token lastToken = getToken( 0 );\r", "+                  _vClasses.add( metric1 );\r", "+                  _pPackageMetric.functions += _functions - oldFunctions;\r", "+                  _pPackageMetric.classes++;\r", "+                        metric1.javadocs = _javadocs - oldJavadocs;\r", "+                        }\r", "+                        //\r", "+\r"]}]}