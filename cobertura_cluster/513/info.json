{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c6a2bdb6d0fc34f43325bc0f4627115", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "515c3dc6da20853423b33b11fa98681f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/XmlFormatter.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private String _formatObjectResume( int objects                                         , long lObjectSum                                         , long lFunctionSum                                         , long lClassesSum                                         , long lJVDCSum                                         , long lJVDCLSum                                         , long lSLSum                                         , long lMLSum                )", "signatureAfterChange": "      private String _formatObjectResume( int objects                                         , long lObjectSum                                         , long lFunctionSum                                         , long lClassesSum                                         , long lJVDCSum                                         , long lJVDCLSum                                         , long lSLSum                                         , long lMLSum                )", "diff": ["-                // added by SMS", "-                double fAverageJVDCL = _divide( lJVDCLSum   , objects );", "-                double fAverageSL         = _divide( lSLSum                , objects );", "-                double fAverageML         = _divide( lMLSum                , objects );", "-                //", "+        // added by SMS", "+        //double fAverageJVDCL = _divide( lJVDCLSum   , objects );", "+        //double fAverageSL         = _divide( lSLSum                , objects );", "+        //double fAverageML         = _divide( lMLSum                , objects );", "+        //", "-               //                \"      <javadocs_lines>\" + _pNumberFormat.format( fAverageJVDCL ) + \"</javadocs_lines>\\n\" +", "-               //                \"      <single_comment_lines>\" + _pNumberFormat.format( fAverageSL ) + \"</single_comment_lines>\\n\" + ", "-               //                \"      <implementation_comment_lines>\" + _pNumberFormat.format( fAverageML ) + \"</implementation_comment_lines>\\n\" +", "+            //\"      <javadocs_lines>\" + _pNumberFormat.format( fAverageJVDCL ) + \"</javadocs_lines>\\n\" +", "+            //\"      <single_comment_lines>\" + _pNumberFormat.format( fAverageSL ) + \"</single_comment_lines>\\n\" + ", "+            //\"      <implementation_comment_lines>\" + _pNumberFormat.format( fAverageML ) + \"</implementation_comment_lines>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecc99118f82993397cb988459f845b88", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/XmlFormatter.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private String _formatFunctionResume( int functions                                           , long lFunctionSum                                           , long lCCNSum                                           , long lJVDCSum                                                , long lJVDCLSum                                           , long lSLSum                                           , long lMLSum                )", "signatureAfterChange": "      private String _formatFunctionResume( int functions                                           , long lFunctionSum                                           , long lCCNSum                                           , long lJVDCSum                                                , long lJVDCLSum                                           , long lSLSum                                           , long lMLSum                )", "diff": ["-                // added by SMS", "-                double fAverageJVDCL = _divide( lJVDCLSum   , functions );", "-                double fAverageSL         = _divide( lSLSum                , functions );", "-                double fAverageML         = _divide( lMLSum                , functions );", "-                //", "+        // added by SMS", "+        //double fAverageJVDCL = _divide( lJVDCLSum   , functions );", "+        //double fAverageSL         = _divide( lSLSum                , functions );", "+        //double fAverageML         = _divide( lMLSum                , functions );", "+        //", "-                        \"      <javadocs>\" + _pNumberFormat.format( fAverageJVDC ) + \"</javadocs>\\n\" +", "-                       //                           \"      <javadocs_lines>\" + _pNumberFormat.format( fAverageJVDCL ) + \"</javadocs_lines>\\n\" +", "-                       //                           \"      <single_comment_lines>\" + _pNumberFormat.format( fAverageSL ) + \"</single_comment_lines>\\n\" + ", "-                       //                           \"      <implementation_comment_lines>\" + _pNumberFormat.format( fAverageML ) + \"</implementation_comment_lines>\\n\" +", "-                        \"    </function_averages>\\n\" +", "+                       \"      <javadocs>\" + _pNumberFormat.format( fAverageJVDC ) + \"</javadocs>\\n\" +", "+                       //\"      <javadocs_lines>\" + _pNumberFormat.format( fAverageJVDCL ) + \"</javadocs_lines>\\n\" +", "+                       //\"      <single_comment_lines>\" + _pNumberFormat.format( fAverageSL ) + \"</single_comment_lines>\\n\" + ", "+                       //\"      <implementation_comment_lines>\" + _pNumberFormat.format( fAverageML ) + \"</implementation_comment_lines>\\n\" +", "+                       \"    </function_averages>\\n\" +"]}]}