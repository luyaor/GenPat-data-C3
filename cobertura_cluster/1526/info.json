{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ceceae5ba87acb6cc2d3d06edcd7aaf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65d3e160a8fda54353104764fd6161ad", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "1ee130d23185750a6f545220e4718734f717f945", "commitAfterChange": "e554a91dcb997ac716f6bbc702c152a7fa5040ca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "signatureAfterChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "diff": ["-\t\tSortedMap sortedSourceFiles = new TreeMap();", "-\t\tfor (Iterator iter = sourceFiles.iterator(); iter.hasNext();)", "-\t\t{", "-\t\t\tSourceFileData sourceFileData = (SourceFileData)iter.next();", "-\t\t\tsortedSourceFiles.put(sourceFileData.getBaseName(),", "-\t\t\t\t\tsourceFileData);", "-\t\t}", "+\t\tVector sortedSourceFiles = new Vector();", "+\t\tsortedSourceFiles.addAll(sourceFiles);", "+\t\tCollections.sort(sortedSourceFiles,", "+\t\t\t\tnew SourceFileDataBaseNameComparator());", "-\t\t\tfor (Iterator iter = sortedSourceFiles.values().iterator(); iter", "+\t\t\tfor (Iterator iter = sortedSourceFiles.iterator(); iter"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5a96de7f0b61824567fc09179fea1a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      \tpublic void addClassData(ClassData classData)", "signatureAfterChange": "      \tpublic void addClassData(ClassData classData)", "diff": ["-\t\tString sourceFileName = classData.getSourceFileName();", "-\t\tSourceFileData sourceFileData = (SourceFileData)children.get(sourceFileName);", "-\t\tif (sourceFileData == null)", "-\t\t{", "-\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "-\t\t\t// Each key is a source file name, stored as an String object.", "-\t\t\t// Each value is information about the source file, stored as", "-\t\t\t// a SourceFileData object.", "-\t\t\tthis.children.put(sourceFileName, sourceFileData);", "-\t\t}", "-\t\tsourceFileData.addClassData(classData);", "+\t\tif (children.containsKey(classData.getBaseName()))", "+\t\t\tthrow new IllegalArgumentException(\"Package \" + this.name", "+\t\t\t\t\t+ \" already contains a class with the name \"", "+\t\t\t\t\t+ classData.getBaseName());", "+", "+\t\t// Each key is a class basename, stored as an String object.", "+\t\t// Each value is information about the class, stored as a ClassData object.", "+\t\tchildren.put(classData.getBaseName(), classData);"]}]}