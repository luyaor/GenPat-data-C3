{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13e2400546ca6db70d0487c94751e948", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39dfa57b6dd05c81fc537b4a7c3f0c0e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/InjectCodeTouchPointListener.java", "commitBeforeChange": "16e57fa03454d1d8ab895fe3215c1c1c7570f750", "commitAfterChange": "9402254283588bbf5a0b3d6c1d0433c021780e7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void afterLabel(int eventId, Label label, int currentLine, MethodVisitor mv)", "signatureAfterChange": " \tpublic void afterLabel(int eventId, Label label, int currentLine, MethodVisitor mv)", "diff": ["-\t\t\tcodeProvider.generateCodeThatIncrementsCoberturaCounterFromInternalVariable(mv,lastJumpIdVariableIndex,classMap.getClassName());", "-\t\t\tcodeProvider.generateCodeThatZeroJumpCounterIdVariable(mv,lastJumpIdVariableIndex);\t", "+\t\t\tcodeProvider.generateCodeThatIncrementsCoberturaCounterFromInternalVariable(mv,lastJumpIdVariableIndex,classMap.getClassName());\t", "+\t\t", "+\t\tif (classMap.isJumpDestinationLabel(eventId)){\t\t", "+\t\t\tcodeProvider.generateCodeThatZeroJumpCounterIdVariable(mv,lastJumpIdVariableIndex);\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f6942ea5c60794eca17497bc630e1a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/Main.java", "commitBeforeChange": "28da59e676555d6a3fd2483291c3805a95c4872c", "commitAfterChange": "bc7846d1c8afd6f93bc4d943eb1815d2b50a927c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void addInstrumentation(File file)", "signatureAfterChange": " \tprivate void addInstrumentation(File file)", "diff": ["-\t\t\tFile outputFile = new File(destinationDirectory, cv", "-\t\t\t\t\t.getClassName().replace('.', File.separatorChar)", "-\t\t\t\t\t+ \".class\");", "-\t\t\toutputFile.getParentFile().mkdirs();", "-\t\t\toutputStream = new FileOutputStream(outputFile);", "-\t\t\toutputStream.write(instrumentedClass);", "+\t\t\tif (cv.isInstrumented())", "+\t\t\t{", "+\t\t\t\tFile outputFile = new File(destinationDirectory, cv", "+\t\t\t\t\t\t.getClassName().replace('.', File.separatorChar)", "+\t\t\t\t\t\t+ \".class\");", "+\t\t\t\toutputFile.getParentFile().mkdirs();", "+\t\t\t\toutputStream = new FileOutputStream(outputFile);", "+\t\t\t\toutputStream.write(instrumentedClass);", "+\t\t\t}"]}]}