{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55eb090a505ba9aaf3b9a0833b4dcf24", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09eee10f47ed5a0d9c3e7d6d65430054", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "d2a99fd01a0928b8540b82a22d6a1f3dfabcc94a", "commitAfterChange": "c6fd277b28f155d1b35d06833203b627d24523c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void parseArguments(String[] args)", "signatureAfterChange": "  \tprivate void parseArguments(String[] args)", "diff": ["-\t\tcoberturaInstrumenter.setIgnoreRegexes(ignoreRegexes);", "-\t\t", "+\t\tcoberturaInstrumenter.setIgnoreRegexes(ignoreRegexes);\t\t", "-\t\t\telse if (args[i].equals(\"--destination\")){", "+\t\t\telse if (args[i].equals(\"--destination\")) {", "-\t\t\t}else if (args[i].equals(\"--ignore\"))", "-\t\t\t{", "+\t\t\t} else if (args[i].equals(\"--ignore\")) {", "-\t\t\telse if (args[i].equals(\"--includeClasses\"))", "-\t\t\t{", "+\t\t\telse if (args[i].equals(\"--includeClasses\")) {", "-\t\t\t}", "-\t\t\telse if (args[i].equals(\"--excludeClasses\"))", "-\t\t\t{", "+\t\t\t} else if (args[i].equals(\"--excludeClasses\")) {", "-\t\t\t}", "-\t\t\telse", "-\t\t\t{", "-\t\t\t\tCoberturaFile coberturaFile = new CoberturaFile(baseDir, args[i]);", "-\t\t\t\tfilePaths.add(coberturaFile);", "+\t\t\t} else {", "+\t\t\t\tfilePaths.add(new CoberturaFile(baseDir, args[i]));", "-\t\t// Load coverage data", "-\t\tif (dataFile.isFile()){", "-\t\t\tprojectData = CoverageDataFileHandler.loadCoverageData(dataFile);", "-\t\t}else{", "-\t\t\tprojectData = new ProjectData();", "-\t\t};", "-\t\tcoberturaInstrumenter.setProjectData(projectData);", "+\t\t// Load previous coverage data (if exists)", "+\t\tprojectData = dataFile.isFile() ?", "+\t\t    CoverageDataFileHandler.loadCoverageData(dataFile) : new ProjectData();", "+        coberturaInstrumenter.setProjectData(projectData);", "-\t\t", "-\t\t", "-\t\twhile (iter.hasNext())", "-\t\t{", "+\t\twhile (iter.hasNext()) {", "-\t\t\tif (coberturaFile.isArchive())", "-\t\t\t{", "+\t\t\tif (coberturaFile.isArchive()) {", "-\t\t\t}", "-\t\t\telse", "-\t\t\t{", "+\t\t\t} else {", "-\t\t// Save coverage data", "+\t\t// Save coverage data (ser file with list of touch points, but not hits registered). ", "-//\t\tProjectData.turnOffAutoSave();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b90656be2d6ba335f1188ea68e5a934", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic long getHits(int branch)", "signatureAfterChange": "  \tpublic long getHits(int branch)", "diff": ["-\tpublic long getHits(int branch)", "-\t{", "-\t\tlock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\tif (hits.length > branch)", "-\t\t\t\treturn hits[branch];", "-\t\t\treturn -1;", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t}", "+\tpublic long getHits(int branch) {", "+\t\treturn (hits.length > branch) ? hits[branch] : -1;\t\t"]}]}