{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46645dd26116d8d97ebf8d74fc36dbc4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "498f68349466f8768a1d3eeb28a2d6f7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/XmlFormatter.java", "commitBeforeChange": "f2a1589f3fddacd7c9dde273e37e9c7b011a4059", "commitAfterChange": "f776167cb1845634c8ed7ca4cc5c429175d5af6f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public String printObjectNcss()", "signatureAfterChange": "      public String printObjectNcss()", "diff": ["+", "+        // added by REYNAUD Sebastien (LOGICA)", "+        long lJVDCSL\t  = 0;", "+        long lSinglel\t  = 0;", "+        long lMultil\t  = 0;", "+        //", "+", "-            String sClass = classMetric.name;", "+            String sClass  = classMetric.name;", "-            //int jvdcsl     = ((Integer)vClassMetrics.elementAt(OBJ_JVDC_LINES)).intValue();", "-            //int singlel           = ((Integer)vClassMetrics.elementAt(OBJ_SINGLE_LINES)).intValue();", "-            //int multil     = ((Integer)vClassMetrics.elementAt(OBJ_MULTI_LINES)).intValue();", "+            int jvdcsl     = classMetric.javadocsLn;", "+            int singlel    = classMetric.singleLn;", "+            int multil     = classMetric.multiLn;", "+", "+            // added by REYNAUD Sebastien (LOGICA)", "+            lJVDCSL += (long)jvdcsl;", "+            lSinglel += (long)singlel;", "+            lMultil += (long)multil;", "+            //", "+", "-                //\"      <javadocs_lines>\" + jvdcsl + \"</javadocs_lines>\\n\" +", "-                //\"      <single_comment_lines>\" + singlel + \"</single_comment_lines>\\n\" +", "-                //\"      <implementation_comment_lines>\" + multil + \"</implementation_comment_lines>\\n\" +", "+                \"      <javadocs_lines>\" + jvdcsl + \"</javadocs_lines>\\n\" +", "+                \"      <single_comment_lines>\" + singlel + \"</single_comment_lines>\\n\" +", "+                \"      <implementation_comment_lines>\" + multil + \"</implementation_comment_lines>\\n\" +", "+        /* Removed by REYNAUD Sebastien (LOGICA)", "+\t\t*/", "+", "+        // added by REYNAUD Sebastien (LOGICA)", "+        sbRetVal.append( _formatObjectResume( vObjectMetrics.size()", "+                , lObjectSum", "+                , lFunctionSum", "+                , lClassesSum", "+                , lJVDCSum", "+                , lJVDCSL", "+                , lSinglel", "+                , lMultil", "+                ) );", "+        //", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7be77a32e877a16e0cf43720a544874", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/xml/XMLReport.java", "commitBeforeChange": "a06d9b00841fe75e6bb9c88cb8981adad8d77c8d", "commitAfterChange": "d17a10884fc97a4f569cde2a87c993248d8fcc7d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic XMLReport(ProjectData projectData, File destinationDir, \t\t\tFileFinder finder, ComplexityCalculator complexity) throws IOException", "signatureAfterChange": "  \tpublic XMLReport(ProjectData projectData, File destinationDir, \t\t\tFileFinder finder, ComplexityCalculator complexity) throws IOException", "diff": ["+\t\t\tdouble ccn = complexity.getCCNForProject(projectData);", "+\t\t\tint numLinesCovered = projectData.getNumberOfCoveredLines();", "+\t\t\tint numLinesValid = projectData.getNumberOfValidLines();", "+\t\t\tint numBranchesCovered = projectData.getNumberOfCoveredBranches();", "+\t\t\tint numBranchesValid = projectData.getNumberOfValidBranches();", "+\t\t\t ", "-\t\t\tprintln(\"<coverage line-rate=\\\"\"", "-\t\t\t\t\t+ projectData.getLineCoverageRate() + \"\\\" branch-rate=\\\"\"", "-\t\t\t\t\t+ projectData.getBranchCoverageRate() + \"\\\" version=\\\"\"", "-\t\t\t\t\t+ Header.version() + \"\\\" timestamp=\\\"\"", "-\t\t\t\t\t+ new Date().getTime() + \"\\\">\");", "+\t\t\tprintln(", "+\t\t\t\t\t\"<coverage line-rate=\\\"\" + projectData.getLineCoverageRate()", "+\t\t\t\t\t+ \"\\\" branch-rate=\\\"\" + projectData.getBranchCoverageRate()", "+\t\t\t\t\t+ \"\\\" lines-covered=\\\"\" + numLinesCovered", "+\t\t\t\t\t+ \"\\\" lines-valid=\\\"\" + numLinesValid", "+\t\t\t\t\t+ \"\\\" branches-covered=\\\"\" + numBranchesCovered", "+\t\t\t\t\t+ \"\\\" branches-valid=\\\"\" + numBranchesValid", "+", "+\t\t\t\t\t+ \"\\\" complexity=\\\"\" + ccn", "+", "+\t\t\t\t\t+ \"\\\" version=\\\"\" + Header.version()", "+\t\t\t\t\t+ \"\\\" timestamp=\\\"\" + new Date().getTime()", "+\t\t\t\t\t+ \"\\\">\");"]}]}