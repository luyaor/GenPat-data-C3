{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "543b2b69a43afde17f1bee7eb3610452", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05ff289fbd52f0b67b5a3cc64967599c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic int getNumberOfValidBranches()", "signatureAfterChange": "  \tpublic int getNumberOfValidBranches()", "diff": ["-\tpublic int getNumberOfValidBranches()", "-\t{", "-\t\tlock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\treturn hits.length + 1;", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t}", "+\tpublic int getNumberOfValidBranches() {", "+\t\treturn Math.min(hits.length + 1, maxBranches);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18dfad666b3c4e6269cc0cb6815744da", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic double getBranchCoverageRate()", "signatureAfterChange": "  \tpublic double getBranchCoverageRate()", "diff": ["-\tpublic double getBranchCoverageRate()", "-\t{", "-\t\tlock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\tint branches = hits.length + 1;", "-\t\t\tint hit = (defaultHits > 0) ? 1 : 0;", "-\t\t\tfor (int i = hits.length - 1; i >= 0; hit += ((hits[i--] > 0) ? 1 : 0));", "-\t\t\treturn ((double) hit) / branches;", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t}", "+\tpublic double getBranchCoverageRate() {", "+\t\tint branches = getNumberOfValidBranches();", "+\t\tint hit = (defaultHits > 0) ? 1 : 0;", "+\t\tfor (int i = hits.length - 1; i >= 0; hit += ((hits[i--] > 0) ? 1 : 0));", "+\t\treturn ((double) hit) / branches;"]}]}