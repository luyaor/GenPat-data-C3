{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b6bec5de39230ce4d05da8589a43028", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0fba0c4f6fe1713a8eb2a72c2919b4", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SortedSet getSourceFiles()", "signatureAfterChange": "  \tpublic Collection getSourceFiles()", "diff": ["-\tpublic SortedSet getSourceFiles()", "+\tpublic Collection getSourceFiles()", "-\t\treturn new TreeSet(this.children.values());", "+\t\tSortedMap sourceFileDatas = new TreeMap();", "+\t\tIterator iter = this.children.values().iterator();", "+\t\twhile (iter.hasNext()) {", "+\t\t\tClassData classData = (ClassData)iter.next();", "+\t\t\tString sourceFileName = classData.getSourceFileName();", "+\t\t\tSourceFileData sourceFileData = (SourceFileData)sourceFileDatas.get(sourceFileName);", "+\t\t\tif (sourceFileData == null)", "+\t\t\t{", "+\t\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "+\t\t\t\tsourceFileDatas.put(sourceFileName, sourceFileData);", "+\t\t\t}", "+\t\t\tsourceFileData.addClassData(classData);", "+\t\t}", "+\t\treturn sourceFileDatas.values();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ca77c0373342e9bb6445e4eccfa8ca", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Collection getSourceFiles()", "signatureAfterChange": "  \tpublic Collection getSourceFiles()", "diff": ["-\t\tIterator iter = this.children.values().iterator();", "-\t\twhile (iter.hasNext()) {", "-\t\t\tClassData classData = (ClassData)iter.next();", "-\t\t\tString sourceFileName = classData.getSourceFileName();", "-\t\t\tSourceFileData sourceFileData = (SourceFileData)sourceFileDatas.get(sourceFileName);", "-\t\t\tif (sourceFileData == null)", "-\t\t\t{", "-\t\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "-\t\t\t\tsourceFileDatas.put(sourceFileName, sourceFileData);", "+\t\t", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\tIterator iter = this.children.values().iterator();", "+\t\t\twhile (iter.hasNext()) {", "+\t\t\t\tClassData classData = (ClassData)iter.next();", "+\t\t\t\tString sourceFileName = classData.getSourceFileName();", "+\t\t\t\tSourceFileData sourceFileData = (SourceFileData)sourceFileDatas.get(sourceFileName);", "+\t\t\t\tif (sourceFileData == null)", "+\t\t\t\t{", "+\t\t\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "+\t\t\t\t\tsourceFileDatas.put(sourceFileName, sourceFileData);", "+\t\t\t\t}", "+\t\t\t\tsourceFileData.addClassData(classData);", "-\t\t\tsourceFileData.addClassData(classData);", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}]}