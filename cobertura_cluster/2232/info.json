{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a1675e93a20db1ccb41808da21227a8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0fba0c4f6fe1713a8eb2a72c2919b4", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "edbadf596ee0053098884e80bfe34fad03d14803", "commitAfterChange": "3a6bc5d8bee24a7428f0483949b490297e667ef7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SortedSet getSourceFiles()", "signatureAfterChange": "  \tpublic Collection getSourceFiles()", "diff": ["-\tpublic SortedSet getSourceFiles()", "+\tpublic Collection getSourceFiles()", "-\t\treturn new TreeSet(this.children.values());", "+\t\tSortedMap sourceFileDatas = new TreeMap();", "+\t\tIterator iter = this.children.values().iterator();", "+\t\twhile (iter.hasNext()) {", "+\t\t\tClassData classData = (ClassData)iter.next();", "+\t\t\tString sourceFileName = classData.getSourceFileName();", "+\t\t\tSourceFileData sourceFileData = (SourceFileData)sourceFileDatas.get(sourceFileName);", "+\t\t\tif (sourceFileData == null)", "+\t\t\t{", "+\t\t\t\tsourceFileData = new SourceFileData(sourceFileName);", "+\t\t\t\tsourceFileDatas.put(sourceFileName, sourceFileData);", "+\t\t\t}", "+\t\t\tsourceFileData.addClassData(classData);", "+\t\t}", "+\t\treturn sourceFileDatas.values();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9da4133329389ff287156fa613420eb5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/util/FileFinder.java", "commitBeforeChange": "7a6cf9ee7c01328fd060bf78a56186190300c13b", "commitAfterChange": "c26f5a170c752d9d1d5b884dd7eb60b982637269", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void addSourceFilePath(String path)", "signatureAfterChange": " \tpublic void addSourceFile( String baseDir, String file)", "diff": ["-\tpublic void addSourceFilePath(String path) {", "-\t\tchange();", "-\t\tsourceFilePaths.add(getCorrectedPath(path));", "-\t}", "+\t */", "+\tpublic void addSourceFile( String baseDir, String file) {", "+\t\tif( LOGGER.isDebugEnabled())", "+\t\t\tLOGGER.debug( \"Adding sourceFile baseDir=[\" + baseDir + \"] file=[\" + file + \"]\");", "+", "+\t\tif( baseDir==null || file==null)", "+\t\t\tthrow new NullPointerException();", "+\t\t// Change \\ to / in case of Windows users", "+\t\tfile = getCorrectedPath( file);", "+\t\tbaseDir = getCorrectedPath( baseDir);", "+\t\t", "+\t\t// Add file to sourceFilesMap", "+\t\tSet container = (Set) sourceFilesMap.get(baseDir);", "+\t\tif( container==null) {", "+\t\t\tcontainer = new HashSet();", "+\t\t\tsourceFilesMap.put( baseDir, container);", "+\t\tcontainer.add( file);"]}]}