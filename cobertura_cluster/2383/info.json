{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a320682b4660dfe199cfacf3e5237f71", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09159f1fd3c8bd66102050a67c58c90d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 66, "signatureBeforeChange": "\r \r   final public void EqualityExpression() throws ParseException", "signatureAfterChange": "   final public void EqualityExpression() throws ParseException", "diff": ["-\r", "-  final public void EqualityExpression() throws ParseException {\r", "-    InstanceOfExpression();\r", "-    label_45:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case EQ:\r", "-      case NE:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[98] = jj_gen;\r", "-        break label_45;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case EQ:\r", "-        jj_consume_token(EQ);\r", "-        break;\r", "-      case NE:\r", "-        jj_consume_token(NE);\r", "-        break;\r", "-      default:\r", "-        jj_la1[99] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      InstanceOfExpression();\r", "-    }\r", "-  }\r", "+//Added by REYNAUD Sebastien (LOGICA)", "+  final public void EqualityExpression() throws ParseException {", "+    AssigmentExpression();", "+    label_45:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case EQ:", "+      case NE:", "+        ;", "+        break;", "+      default:", "+        jj_la1[97] = jj_gen;", "+        break label_45;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case EQ:", "+        jj_consume_token(EQ);", "+        break;", "+      case NE:", "+        jj_consume_token(NE);", "+        break;", "+      default:", "+        jj_la1[98] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      AssigmentExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1385f2ea008bd1b4b701de33aa82621", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 66, "signatureBeforeChange": "\r \r   final public void EqualityExpression() throws ParseException", "signatureAfterChange": "   final public void EqualityExpression() throws ParseException", "diff": ["-\r", "-  final public void EqualityExpression() throws ParseException {\r", "-    InstanceOfExpression();\r", "-    label_45:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case EQ:\r", "-      case NE:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[98] = jj_gen;\r", "-        break label_45;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case EQ:\r", "-        jj_consume_token(EQ);\r", "-        break;\r", "-      case NE:\r", "-        jj_consume_token(NE);\r", "-        break;\r", "-      default:\r", "-        jj_la1[99] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      InstanceOfExpression();\r", "-    }\r", "-  }\r", "+//Added by REYNAUD Sebastien (LOGICA)", "+  final public void EqualityExpression() throws ParseException {", "+    AssigmentExpression();", "+    label_45:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case EQ:", "+      case NE:", "+        ;", "+        break;", "+      default:", "+        jj_la1[97] = jj_gen;", "+        break label_45;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case EQ:", "+        jj_consume_token(EQ);", "+        break;", "+      case NE:", "+        jj_consume_token(NE);", "+        break;", "+      default:", "+        jj_la1[98] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      AssigmentExpression();", "+    }", "+  }"]}]}