{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c373361a7d790e009c0c0c7b958251e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f6c65bf8e5bfccda89d8fbe49f9723", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/ClassDataTest.java", "commitBeforeChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "commitAfterChange": "ec1fd1d424f2f4413436786d9da0ddb5f02e1d9d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void testBranch()", "signatureAfterChange": "  \tpublic void testBranch()", "diff": ["+", "+\t\tassertFalse(b.isBranch(4));", "+\t\tb.markLineAsBranch(4);", "+\t\tassertTrue(b.isBranch(4));", "+", "+\t\tCollection branches = b.getBranches();", "+\t\tassertEquals(2, branches.size());", "+\t\tassertEquals(b.getNumberOfValidBranches(), branches.size());", "+\t\t//assertTrue(branches.contains(new LineData(2, \"test\", \"(I)B\")));", "+\t\t//assertTrue(branches.contains(new LineData(4, \"test\", \"(I)B\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6cc0bfb074fc4f05945463d35b0de40", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/reporting/html/JavaToHtmlTest.java", "commitBeforeChange": "c57840c28d3b4acf8a5597b15379ecbf84ea1c07", "commitAfterChange": "7c03e51a2a7556402417f3e9b3b80130bc7781c9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static void testSyntaxHighlight()", "signatureAfterChange": "  \tpublic static void testSyntaxHighlight()", "diff": ["+\t\tassertEquals(", "+\t\t\t\t\"System.out.println(<span class=\\\"string\\\">'Q'</span>);\",", "+\t\t\t\tjavaToHtml.process(\"System.out.println('Q');\"));", "+\t\tassertEquals(\".charAt(currentIndex - 1) == <span class=\\\"string\\\">'\\\\\\\\'</span>)));\", javaToHtml", "+\t\t\t\t.process(\".charAt(currentIndex - 1) == '\\\\\\\\')));\"));", "+\t\tassertEquals(\"<span class=\\\"string\\\">'\\\\n'</span>\", javaToHtml.process(\"'\\\\n'\"));"]}]}