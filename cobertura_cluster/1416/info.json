{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f75fad7c17a48ece58dee180749df7ee", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c70caae44ccc15d38840d2b901bcf6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "39aff69c052bed11ddf0e72014f573a749d7b423", "commitAfterChange": "d2a99fd01a0928b8540b82a22d6a1f3dfabcc94a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic ClassData getClassData(String name)", "signatureAfterChange": "  \tpublic ClassData getClassData(String name)", "diff": ["-\t\tlock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\treturn (ClassData)this.classes.get(name);", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t}", "+\t\treturn (ClassData)this.classes.get(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d01a50094a0e433c38b3a7491540a5a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic int getNumberOfCoveredBranches()", "signatureAfterChange": "  \tpublic int getNumberOfCoveredBranches()", "diff": ["-\tpublic int getNumberOfCoveredBranches()", "-\t{", "-\t\tlock.lock();", "-\t\ttry", "+\tpublic int getNumberOfCoveredBranches() {", "+\t\tint ret = (defaultHits > 0) ? 1 : 0;", "+\t\tfor (int i = hits.length -1; i >= 0;i--) ", "-\t\t\tint ret = (defaultHits > 0) ? 1 : 0;", "-\t\t\tfor (int i = hits.length -1; i >= 0;i--) ", "-\t\t\t{", "-\t\t\t\tif (hits[i] > 0) ret++;", "-\t\t\t}", "-\t\t\treturn ret;", "+\t\t\tif (hits[i] > 0) ret++;", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t}", "+\t\treturn ret;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da17c6833c1577151c19434b98c99c6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tvoid touchBranch(int branch,int new_hits)", "signatureAfterChange": " \t \tvoid touchBranch(int branch,int new_hits)", "diff": ["-\tvoid touchBranch(int branch,int new_hits) ", "-\t{", "-\t\tlock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\tif (branch == -1)", "-\t\t\t\tdefaultHits+=new_hits;", "-\t\t\telse ", "-\t\t\t{", "-\t\t\t\tif (hits.length <= branch)", "-\t\t\t\t{", "-\t\t\t\t\tlong[] old = hits;", "-\t\t\t\t\thits = new long[branch + 1];", "-\t\t\t\t\tSystem.arraycopy(old, 0, hits, 0, old.length);", "-\t\t\t\t\tArrays.fill(hits, old.length, hits.length - 1, 0);", "-\t\t\t\t}", "-\t\t\t\thits[branch]+=new_hits;", "+\tvoid touchBranch(int branch,int new_hits) {", "+\t\tif (branch == -1) {", "+\t\t\tdefaultHits+=new_hits;", "+\t\t} else {", "+\t\t\tif (hits.length <= branch) {", "+\t\t\t\tlong[] old = hits;", "+\t\t\t\thits = new long[branch + 1];", "+\t\t\t\tSystem.arraycopy(old, 0, hits, 0, old.length);", "+\t\t\t\tArrays.fill(hits, old.length, hits.length - 1, 0);", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "+\t\t\thits[branch]+=new_hits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b169a67b9f67cc7fb0709d0fcf392afb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic long getDefaultHits()", "signatureAfterChange": "  \tpublic long getDefaultHits()", "diff": ["-\tpublic long getDefaultHits()", "-\t{", "-\t\tlock.lock();", "-\t\ttry", "-\t\t{", "-\t\t\treturn defaultHits;", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t}", "+\tpublic long getDefaultHits() {", "+\t\treturn defaultHits;"]}]}