{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2876ef73517948239ead7ccca9a5e180", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a899dacabc6ba7016ac1ed3936163c8f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/webapp/test/WebAppFunctionalTest.java", "commitBeforeChange": "2b194b3d77bf600da43b42901e6946bf29c86ff0", "commitAfterChange": "a26b3c4c66c38163a0a617a9215854c17c3271a0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test \tpublic void flushCoberturaDataOnly() throws Exception", "signatureAfterChange": " \t \t@Test \tpublic void testFlushCoberturaDataOnly() throws Exception", "diff": ["-", "+\t", "-\tpublic void flushCoberturaDataOnly() throws Exception {", "-\t\tWebappServer webappServer = new WebappServer(webappServerDir, false);", "-", "-\t\twebappServer.deployApp(srcDir, true, \"com.acme.*\");", "-", "-\t\twebappServer.withRunningServer();", "-", "-\t\tFile xmlReport = webappServer.getXmlReport();", "-", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tNode dom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tint hitCountBefore = TestUtils.getHitCount(dom,", "-\t\t\t\tWebappServer.SIMPLE_SERVLET_CLASSNAME, \"doGet\");", "+\tpublic void testFlushCoberturaDataOnly() throws Exception {", "+\t\tcreateSimpleWar();", "+\t\t", "+\t\tcreateCoberturaServlet();", "+\t\t", "+\t\tcreateCoberturaJar();", "+\t\t", "+\t\tinstrumentWar();", "+\t\t", "+\t\tstartUpServlet();", "+\t\t\t\t", "+\t\tgenerateReportFile();", "+\t\t", "+\t\tNode dom = TestUtils.getXMLReportDOM(new File(tempDir.getAbsolutePath(), \"coverage.xml\"));", "+\t\t", "+\t\tint hitCountBefore = TestUtils.getHitCount(dom, SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "+\t\t", "-", "-\t\tThread.sleep(10 * 1000);", "-", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tint hitCountAfter = TestUtils.getHitCount(dom,", "-\t\t\t\tWebappServer.SIMPLE_SERVLET_CLASSNAME, \"doGet\");", "-", "+\t\t", "+\t\tgenerateReportFile();", "+\t\t", "+\t\tdom = TestUtils.getXMLReportDOM(new File(tempDir.getAbsolutePath(), \"coverage.xml\"));", "+\t\t", "+\t\tint hitCountAfter = TestUtils.getHitCount(dom, SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "+\t\t", "-", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tint finalCount = TestUtils.getHitCount(dom,", "-\t\t\t\tWebappServer.SIMPLE_SERVLET_CLASSNAME, \"doGet\");", "-", "-\t\twebappServer.killServer();", "-", "+\t\t", "+\t\ttester.stop();", "+\t\t", "+\t\tgenerateReportFile();", "+\t\t", "+\t\tdom = TestUtils.getXMLReportDOM(new File(tempDir.getAbsolutePath(), \"coverage.xml\"));", "+\t\t", "+\t\tint finalCount = TestUtils.getHitCount(dom, SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "+\t\t", "+\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbbc8790c4c93c82d9c5f2b28bd23c5b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/webapp/test/WebAppFunctionalTest.java", "commitBeforeChange": "2b194b3d77bf600da43b42901e6946bf29c86ff0", "commitAfterChange": "a26b3c4c66c38163a0a617a9215854c17c3271a0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Test \tpublic void flushCoberturaData2() throws Exception", "signatureAfterChange": " \t \t@Test \tpublic void testFlushCoberturaData2() throws Exception", "diff": ["-", "+\t", "-\tpublic void flushCoberturaData2() throws Exception {", "-\t\tWebappServer webappServer = new WebappServer(webappServerDir, false);", "-", "-\t\twebappServer.deployApp(srcDir, true, \"com.acme.*\");", "-", "-\t\twebappServer.withRunningServer();", "-", "-\t\twebappServer.pingServer();", "-", "-\t\tFile xmlReport = webappServer.getXmlReport();", "-", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tNode dom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tint hitCountBefore = TestUtils.getHitCount(dom,", "-\t\t\t\tWebappServer.SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "-", "+\tpublic void testFlushCoberturaData2() throws Exception {", "+\t\tcreateSimpleWar();", "+\t\t", "+\t\tcreateCoberturaServlet();", "+\t\t", "+\t\tcreateCoberturaJar();", "+\t\t", "+\t\tinstrumentWar();", "+\t\t", "+\t\tstartUpServlet();", "+\t\t", "+\t\tpingServer();", "+\t\t", "+\t\tgenerateReportFile();", "+\t\t", "+\t\tNode dom = TestUtils.getXMLReportDOM(new File(tempDir.getAbsolutePath(), \"coverage.xml\"));", "+\t\t", "+\t\tint hitCountBefore = TestUtils.getHitCount(dom, SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "+\t\t", "-", "-\t\twebappServer.pingCoberturaServer();", "-", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tint hitCountAfter = TestUtils.getHitCount(dom,", "-\t\t\t\tWebappServer.SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "-", "-\t\tassertEquals(1, hitCountAfter);", "-", "-\t\twebappServer.killServer();", "-\t\tThread.sleep(5 * 1000); // Give server time to shutdown.", "-", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tint hitCountFinal = TestUtils.getHitCount(dom,", "-\t\t\t\tWebappServer.SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "-", "-\t\tassertEquals(1, hitCountFinal);", "+\t\t", "+\t\tpingCoberturaServer();", "+\t\t", "+\t\tgenerateReportFile();", "+\t\t", "+\t\tdom = TestUtils.getXMLReportDOM(new File(tempDir.getAbsolutePath(), \"coverage.xml\"));", "+\t\t", "+\t\tint hitCountAfter = TestUtils.getHitCount(dom, SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "+\t\t", "+\t\tassertEquals(2, hitCountAfter);", "+\t\t", "+\t\ttester.stop();", "+\t\t", "+\t\tgenerateReportFile();", "+\t\t", "+\t\tdom = TestUtils.getXMLReportDOM(new File(tempDir.getAbsolutePath(), \"coverage.xml\"));", "+\t\t", "+\t\tint hitCountFinal = TestUtils.getHitCount(dom, SIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "+\t\t", "+\t\tassertEquals(hitCountAfter, hitCountFinal);"]}]}