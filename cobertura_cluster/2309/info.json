{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23dae1154346d786e35b7d8896c25265", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66554c8f510d337cc125942829d272ba", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void parseArguments(String[] args)", "signatureAfterChange": "  \tprivate void parseArguments(String[] args)", "diff": ["+         else if (args[i].equals(\"--ignoreBranches\"))", "+         {", "+            RegexUtil.addRegex(ignoreBranchesRegexes, args[++i]);", "+         }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba080f6a9ed33484c19fb646e1712958", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/Main.java", "commitBeforeChange": "86a9d8a32326d9cff579d91c382eb51ec16ca6a4", "commitAfterChange": "f64a9c48c348d6f5827b53fdd5b8ef4f4bcc6831", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "signatureAfterChange": " \t \tprivate void parseArguments(String[] args) throws Exception", "diff": ["+\t\t\t} else if (args[i].equals(\"--encoding\")) {", "+\t\t\t\tsetEncoding( args[++i]);", "-            \tif( baseDir==null) {", "-            \t\tfinder.addSourceDirectory( args[i]);", "-            \t} else {", "-            \t\tfinder.addSourceFile( baseDir, args[i]);", "-            \t}", "+            if( baseDir==null) {", "+               finder.addSourceDirectory( args[i]);", "+            } else {", "+               finder.addSourceFile( baseDir, args[i]);", "+            }", "-\t\t\tLOGGER.debug(\"format is \" + format);", "+\t\t\tLOGGER.debug(\"format is \" + format + \" encoding is \" + encoding);", "-\t\t\tnew HTMLReport(projectData, destinationDir, finder, complexity);", "+\t\t\tnew HTMLReport(projectData, destinationDir, finder, complexity, encoding);"]}]}