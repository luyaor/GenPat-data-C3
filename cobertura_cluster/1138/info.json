{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "603a7cba3feb56521c9647b2871b16f0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c165ccbe27c9f93e255f294778f0518", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/CoverageData.java", "commitBeforeChange": "c7fb0b8cc80d7d214ae05e943100e9521802d5dd", "commitAfterChange": "7f47a6101d550eed225cbc5d96f9824ad91cbdc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tdouble getBranchCoverageRate();", "signatureAfterChange": " \tpublic double getBranchCoverageRate()", "diff": ["-\tdouble getBranchCoverageRate();", "+\tpublic double getBranchCoverageRate()", "+\t{", "+\t\tif (conditionals.size() == 0)", "+\t\t{", "+\t\t\t// no conditional branches, therefore 100% branch coverage.", "+\t\t\treturn 1d;", "+\t\t}", "+\t\treturn (double)getNumberOfCoveredBranches() / conditionals.size();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f83b055b99424cf4a2260c31e7e523c2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/CoverageData.java", "commitBeforeChange": "c7fb0b8cc80d7d214ae05e943100e9521802d5dd", "commitAfterChange": "7f47a6101d550eed225cbc5d96f9824ad91cbdc7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tvoid merge(CoverageData coverageData);", "signatureAfterChange": " \tpublic void merge(CoverageData coverageData)", "diff": ["-\tvoid merge(CoverageData coverageData);", "+\tpublic void merge(CoverageData coverageData)", "+\t{", "+\t\tlines.putAll(coverageData.lines);", "+\t\tconditionals.putAll(coverageData.conditionals);", "+\t\tmethodNamesAndSignatures.addAll(coverageData", "+\t\t\t\t.getMethodNamesAndSignatures());", "+\t}"]}]}