{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6af3f8120b327b2918c69af62dbfdc81", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1ed32e405ee008839996a8134655c0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/xml/XMLReport.java", "commitBeforeChange": "f7504c0f1520232019e0ec5d7d9a44b2a102b7d9", "commitAfterChange": "b5c49534c0665dd8d1ec5c58aeda5a4c21cfd276", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void dumpMethods(CoverageData instrumentation)", "signatureAfterChange": "  \tprivate void dumpMethods(Clazz clazz)", "diff": ["+\tprivate void dumpMethods(Clazz clazz)", "+", "+\t\tCoverageData coverageData = clazz.getRawCoverageData();", "+\t\tIterator iter = coverageData.getMethodNamesAndDescriptors()", "+\t\t\t\t.iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tdumpMethod(coverageData, (String)iter.next());", "+\t\t}", "+", "-\tprivate void dumpMethods(CoverageData instrumentation)", "-\t\tIterator iter = instrumentation.getMethodNamesAndDescriptors()", "-\t\t\t\t.iterator();", "-", "-\t\t\tString methodNameAndSignature = (String)iter.next();", "-", "-\t\t\tprintln(\"<method nameAndSignature=\\\"\"", "-\t\t\t\t\t+ xmlEscape(methodNameAndSignature) + \"\\\">\");", "-\t\t\tincreaseIndentation();", "-", "-\t\t\ttry", "-\t\t\t{", "-\t\t\t\tprintln(\"<line rate=\\\"\"", "-\t\t\t\t\t\t+ instrumentation", "-\t\t\t\t\t\t\t\t.getLineCoverageRate(methodNameAndSignature)", "-\t\t\t\t\t\t+ \"\\\"/>\");", "-\t\t\t\tprintln(\"<branch rate=\\\"\"", "-\t\t\t\t\t\t+ instrumentation", "-\t\t\t\t\t\t\t\t.getBranchCoverageRate(methodNameAndSignature)", "-\t\t\t\t\t\t+ \"\\\"/>\");", "-\t\t\t}", "-\t\t\tcatch (IllegalArgumentException ex)", "-\t\t\t{", "-\t\t\t\tlogger.warn(ex);", "-\t\t\t}", "-", "-\t\t\tdecreaseIndentation();", "-\t\t\tprintln(\"</method>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8cdc66c2dc540423fc0300187be271", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/xml/XMLReport.java", "commitBeforeChange": "f7504c0f1520232019e0ec5d7d9a44b2a102b7d9", "commitAfterChange": "b5c49534c0665dd8d1ec5c58aeda5a4c21cfd276", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void dumpClassDetails(Clazz clazz)", "signatureAfterChange": "  \tprivate void dumpLine(CoverageData coverageData, Integer lineNumberObject)", "diff": ["-\tprivate void dumpClassDetails(Clazz clazz)", "-\t\tprintln(\"<file name=\\\"\" + clazz.getLongFileName() + \"\\\"/>\");", "-\t\tprintln(\"<line rate=\\\"\" + clazz.getLineCoverageRate() + \"\\\"/>\");", "-\t\tprintln(\"<branch rate=\\\"\" + clazz.getBranchCoverageRate() + \"\\\"/>\");", "-", "-\t\tdumpMethods(clazz.getRawCoverageData());", "-", "-\t\tStringBuffer sb = new StringBuffer();", "-\t\tCoverageData instrumentation = clazz.getRawCoverageData();", "-\t\tIterator iter = instrumentation.getValidLineNumbers().iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tsb.append(iter.next());", "-\t\t\tif (iter.hasNext())", "-\t\t\t{", "-\t\t\t\tsb.append(\", \");", "-\t\t\t}", "-\t\t}", "-\t\tprintln(\"<valid lines=\\\"\" + sb.toString() + \"\\\"/>\");", "-", "-\t\titer = instrumentation.getValidLineNumbers().iterator();", "-\t\twhile (iter.hasNext())", "-\t\t{", "-\t\t\tint lineNumber = ((Integer)iter.next()).intValue();", "-\t\t\tlong hitCount = instrumentation.getHitCount(lineNumber);", "-\t\t\tprintln(\"<line number=\\\"\" + lineNumber + \"\\\" hits=\\\"\" + hitCount", "-\t\t\t\t\t+ \"\\\"/>\");", "-\t\t}", "+", "+\tprivate void dumpLine(CoverageData coverageData, Integer lineNumberObject)", "+\t{", "+\t\tint lineNumber = lineNumberObject.intValue();", "+\t\tlong hitCount = coverageData.getHitCount(lineNumber);", "+\t\tboolean isBranch = coverageData.isBranch(lineNumber);", "+", "+\t\tprintln(\"<line number=\\\"\" + lineNumber + \"\\\" hits=\\\"\" + hitCount", "+\t\t\t\t+ \"\\\" branch=\\\"\" + isBranch + \"\\\"/>\");"]}]}