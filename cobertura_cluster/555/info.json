{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1af9e129ef0f7a1a46944e60803d7aa6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b8646e52a486d3ed432162d974e87f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "b1e7879329998643d42728bb6b8029d8483b12b0", "commitAfterChange": "c357c3ab27173426ddabfdf358bf583cc0ca08c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static void main(String[] args)", "signatureAfterChange": "  \tpublic static void main(String[] args)", "diff": ["+\tpublic static void main(String[] args) {", "+\t\tHeader.print(System.out);", "+\t\tlong startTime = System.currentTimeMillis();", "+\t\t\targs = CommandLineBuilder.preprocessCommandLineArguments(args);", "+\t\t} catch (Exception ex) {", "+\t\t\tSystem.err.println(\"Error: Cannot process arguments: \"", "+\t\t\t\t\t+ ex.getMessage());", "+\t\t\tSystem.exit(1);", "+\t\ttry {", "+\t\t\tnew Cobertura(createArgumentsFromCMDParams(args).build())", "+\t\t\t\t\t.instrumentCode().saveProjectData();", "+\t\t} catch (Throwable throwable) {", "+\t\t\tSystem.err.println(String.format(", "+\t\t\t\t\t\"Failed while instrumenting code: %s\", throwable", "+\t\t\t\t\t\t\t.getMessage()));", "+\t\t\tthrowable.printStackTrace();", "+\t\t}", "+", "+\t\tlong stopTime = System.currentTimeMillis();", "+\t\tlogger.info(\"Instrument time: \" + (stopTime - startTime) + \"ms\");", "-", "-\tpublic static void main(String[] args) {", "-\t\tHeader.print(System.out);", "-", "-\t\tlong startTime = System.currentTimeMillis();", "-", "-\t\tMain main = new Main();", "-", "-\t\ttry {", "-\t\t\targs = CommandLineBuilder.preprocessCommandLineArguments(args);", "-\t\t} catch (Exception ex) {", "-\t\t\tSystem.err.println(\"Error: Cannot process arguments: \"", "-\t\t\t\t\t+ ex.getMessage());", "-\t\t\tSystem.exit(1);", "-\t\t}", "-\t\tmain.parseArguments(args);", "-", "-\t\tlong stopTime = System.currentTimeMillis();", "-\t\tlogger.info(\"Instrument time: \" + (stopTime - startTime) + \"ms\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e465df669457fa5d939f39a86540e05d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CheckTask.java", "commitBeforeChange": "98a1c5393bec425291a2a3140327df05e58b1582", "commitAfterChange": "e6b9546f524ec82a34db61772929657e87625501", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void execute() throws BuildException", "signatureAfterChange": "  \tpublic void execute() throws BuildException", "diff": ["+\t\t}", "+", "+\t\tif (packageBranchRate != null)", "+\t\t{", "+\t\t\tgetJava().createArg().setValue(\"--packagebranch\");", "+\t\t\tgetJava().createArg().setValue(packageBranchRate);", "+\t\t}", "+", "+\t\tif (packageLineRate != null)", "+\t\t{", "+\t\t\tgetJava().createArg().setValue(\"--packageline\");", "+\t\t\tgetJava().createArg().setValue(packageLineRate);"]}]}