{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff62363e643e26561b2538bfb523fe9e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a73cdaed5882e2e0ac4d06a046426e36", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "\r \r   final public void MultiplicativeExpression() throws ParseException", "signatureAfterChange": "    final public void MultiplicativeExpression() throws ParseException", "diff": ["-\r", "-  final public void MultiplicativeExpression() throws ParseException {\r", "-    UnaryExpression();\r", "-    label_49:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-      case SLASH:\r", "-      case REM:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[107] = jj_gen;\r", "-        break label_49;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-        jj_consume_token(STAR);\r", "-        break;\r", "-      case SLASH:\r", "-        jj_consume_token(SLASH);\r", "-        break;\r", "-      case REM:\r", "-        jj_consume_token(REM);\r", "-        break;\r", "-      default:\r", "-        jj_la1[108] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      UnaryExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void MultiplicativeExpression() throws ParseException {", "+    UnaryExpression();", "+    label_50:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+      case SLASH:", "+      case REM:", "+        ;", "+        break;", "+      default:", "+        jj_la1[107] = jj_gen;", "+        break label_50;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+        jj_consume_token(STAR);", "+        break;", "+      case SLASH:", "+        jj_consume_token(SLASH);", "+        break;", "+      case REM:", "+        jj_consume_token(REM);", "+        break;", "+      default:", "+        jj_la1[108] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      UnaryExpression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3c626c7b82552f26d8d0bfca2a6b294", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "\r \r   final public void MultiplicativeExpression() throws ParseException", "signatureAfterChange": "    final public void MultiplicativeExpression() throws ParseException", "diff": ["-\r", "-  final public void MultiplicativeExpression() throws ParseException {\r", "-    UnaryExpression();\r", "-    label_49:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-      case SLASH:\r", "-      case REM:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[107] = jj_gen;\r", "-        break label_49;\r", "-      }\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case STAR:\r", "-        jj_consume_token(STAR);\r", "-        break;\r", "-      case SLASH:\r", "-        jj_consume_token(SLASH);\r", "-        break;\r", "-      case REM:\r", "-        jj_consume_token(REM);\r", "-        break;\r", "-      default:\r", "-        jj_la1[108] = jj_gen;\r", "-        jj_consume_token(-1);\r", "-        throw new ParseException();\r", "-      }\r", "-      UnaryExpression();\r", "-    }\r", "-  }\r", "+", "+  final public void MultiplicativeExpression() throws ParseException {", "+    UnaryExpression();", "+    label_50:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+      case SLASH:", "+      case REM:", "+        ;", "+        break;", "+      default:", "+        jj_la1[107] = jj_gen;", "+        break label_50;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case STAR:", "+        jj_consume_token(STAR);", "+        break;", "+      case SLASH:", "+        jj_consume_token(SLASH);", "+        break;", "+      case REM:", "+        jj_consume_token(REM);", "+        break;", "+      default:", "+        jj_la1[108] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+      UnaryExpression();", "+    }", "+  }"]}]}