{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b02eaf517d6b0610bee33dd6ea8a156a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f4b6f147dd9a1018b30008c93e86676", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/CoverageDataContainer.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic double getBranchCoverageRate()", "signatureAfterChange": " \tpublic double getBranchCoverageRate()", "diff": ["-\t\tIterator iter = this.children.values().iterator();", "-\t\twhile (iter.hasNext())", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tCoverageData coverageContainer = (CoverageData)iter.next();", "-\t\t\tnumber += coverageContainer.getNumberOfValidBranches();", "-\t\t\tnumberCovered += coverageContainer.getNumberOfCoveredBranches();", "+\t\t\tIterator iter = this.children.values().iterator();", "+\t\t\twhile (iter.hasNext())", "+\t\t\t{", "+\t\t\t\tCoverageData coverageContainer = (CoverageData)iter.next();", "+\t\t\t\tnumber += coverageContainer.getNumberOfValidBranches();", "+\t\t\t\tnumberCovered += coverageContainer.getNumberOfCoveredBranches();", "+\t\t\t}", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae01581827f0ece971c3b254a3ec8c00", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic int getNumberOfCoveredBranches()", "signatureAfterChange": " \tpublic int getNumberOfCoveredBranches()", "diff": ["-\t\tfor (Iterator i = branches.values().iterator(); ", "-\t\t\ti.hasNext(); ", "-\t\t\tnumber += ((LineData) i.next()).getNumberOfCoveredBranches())", "-\t\t\t;", "-\t\treturn number;", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\tfor (Iterator i = branches.values().iterator(); ", "+\t\t\t\ti.hasNext(); ", "+\t\t\t\tnumber += ((LineData) i.next()).getNumberOfCoveredBranches())", "+\t\t\t\t;", "+\t\t\treturn number;", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}]}