{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab10138040db952ac671f3e936b95916", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b86afe1c4f451ca151e7b8b77eced3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 150, "signatureBeforeChange": "\r \r   final public void MethodDeclarator15() throws ParseException", "signatureAfterChange": "    final public void MethodDeclarator15() throws ParseException", "diff": ["-\r", "-  final public void MethodDeclarator15() throws ParseException {\r", "-    jj_consume_token(IDENTIFIER);\r", "-    FormalParameters();\r", "-    label_79:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LBRACKET:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[198] = jj_gen;\r", "-        break label_79;\r", "-      }\r", "-      jj_consume_token(LBRACKET);\r", "-      jj_consume_token(RBRACKET);\r", "-    }\r", "-  }\r", "+", "+  final public void MethodDeclarator15() throws ParseException {", "+    jj_consume_token(IDENTIFIER);", "+    FormalParameters();", "+    label_83:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LBRACKET:", "+        ;", "+        break;", "+      default:", "+        jj_la1[204] = jj_gen;", "+        break label_83;", "+      }", "+      jj_consume_token(LBRACKET);", "+      jj_consume_token(RBRACKET);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29eb1900efdfc4d7772f839100e02c0e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 136, "signatureBeforeChange": "\r \r   final public void ImplementsList(boolean isInterface) throws ParseException", "signatureAfterChange": "    final public void ImplementsList(boolean isInterface) throws ParseException", "diff": ["-\r", "-  final public void ImplementsList(boolean isInterface) throws ParseException {\r", "-    jj_consume_token(IMPLEMENTS);\r", "-    ClassOrInterfaceType();\r", "-    label_69:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[180] = jj_gen;\r", "-        break label_69;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      ClassOrInterfaceType();\r", "-    }\r", "-      if (isInterface)\r", "-         {if (true) throw new ParseException(\"An interface cannot implement other interfaces\");}\r", "-  }\r", "+", "+  final public void ImplementsList(boolean isInterface) throws ParseException {", "+    jj_consume_token(IMPLEMENTS);", "+    ClassOrInterfaceType();", "+    label_72:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[185] = jj_gen;", "+        break label_72;", "+      }", "+      jj_consume_token(COMMA);", "+      ClassOrInterfaceType();", "+    }", "+      if (isInterface)", "+         {if (true) throw new ParseException(\"An interface cannot implement other interfaces\");}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be76e6c5f18eec1b1a24984d955c0ab", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "\r   final public void LocalVariableDeclaration() throws ParseException", "signatureAfterChange": "   final public void LocalVariableDeclaration() throws ParseException", "diff": ["-}*/\r", "-  final public void LocalVariableDeclaration() throws ParseException {\r", "-    Modifiers();\r", "-    Type();\r", "-    VariableDeclarator();\r", "-    label_57:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[141] = jj_gen;\r", "-        break label_57;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      VariableDeclarator();\r", "-    }\r", "-  }\r", "+}*/", "+  final public void LocalVariableDeclaration() throws ParseException {", "+    Modifiers();", "+    Type();", "+    VariableDeclarator();", "+    label_58:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[142] = jj_gen;", "+        break label_58;", "+      }", "+      jj_consume_token(COMMA);", "+      VariableDeclarator();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50693225d1c8a9378c1d4818621f141f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "\r \r   final public void ArgumentList() throws ParseException", "signatureAfterChange": "    final public void ArgumentList() throws ParseException", "diff": ["-\r", "-  final public void ArgumentList() throws ParseException {\r", "-    Expression();\r", "-    label_52:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[130] = jj_gen;\r", "-        break label_52;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      Expression();\r", "-    }\r", "-  }\r", "+", "+  final public void ArgumentList() throws ParseException {", "+    Expression();", "+    label_53:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[131] = jj_gen;", "+        break label_53;", "+      }", "+      jj_consume_token(COMMA);", "+      Expression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b2d24eb4402b2dd49c70d96161ffd2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "\r   final public void LocalVariableDeclaration() throws ParseException", "signatureAfterChange": "   final public void LocalVariableDeclaration() throws ParseException", "diff": ["-}*/\r", "-  final public void LocalVariableDeclaration() throws ParseException {\r", "-    Modifiers();\r", "-    Type();\r", "-    VariableDeclarator();\r", "-    label_57:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[141] = jj_gen;\r", "-        break label_57;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      VariableDeclarator();\r", "-    }\r", "-  }\r", "+}*/", "+  final public void LocalVariableDeclaration() throws ParseException {", "+    Modifiers();", "+    Type();", "+    VariableDeclarator();", "+    label_58:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[142] = jj_gen;", "+        break label_58;", "+      }", "+      jj_consume_token(COMMA);", "+      VariableDeclarator();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64b2b6e65bd16a6ef6f147923846819d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 135, "signatureBeforeChange": "\r \r   final public void ExtendsList(boolean isInterface) throws ParseException", "signatureAfterChange": "    final public void ExtendsList(boolean isInterface) throws ParseException", "diff": ["-\r", "-  final public void ExtendsList(boolean isInterface) throws ParseException {\r", "-   boolean extendsMoreThanOne = false;\r", "-    jj_consume_token(EXTENDS);\r", "-    ClassOrInterfaceType();\r", "-    label_68:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[179] = jj_gen;\r", "-        break label_68;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      ClassOrInterfaceType();\r", "-                                  extendsMoreThanOne = true;\r", "-    }\r", "-      if (extendsMoreThanOne && !isInterface)\r", "-         {if (true) throw new ParseException(\"A class cannot extend more than one other class\");}\r", "-  }\r", "+", "+  final public void ExtendsList(boolean isInterface) throws ParseException {", "+   boolean extendsMoreThanOne = false;", "+    jj_consume_token(EXTENDS);", "+    ClassOrInterfaceType();", "+    label_71:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[184] = jj_gen;", "+        break label_71;", "+      }", "+      jj_consume_token(COMMA);", "+      ClassOrInterfaceType();", "+                                  extendsMoreThanOne = true;", "+    }", "+      if (extendsMoreThanOne && !isInterface)", "+         {if (true) throw new ParseException(\"A class cannot extend more than one other class\");}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8144ef3afa074f997a73362b87be5af2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 137, "signatureBeforeChange": "\r \r   final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException", "signatureAfterChange": "    final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException", "diff": ["-\r", "-  final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException {\r", "-    jj_consume_token(LBRACE);\r", "-           _ncss++; Util.debug( \"ClassOrInterfaceBody()._ncss++\" );\r", "-    label_70:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ABSTRACT:\r", "-      case ASSERT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case CLASS:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FINAL:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case INTERFACE:\r", "-      case LONG:\r", "-      case NATIVE:\r", "-      case PRIVATE:\r", "-      case PROTECTED:\r", "-      case PUBLIC:\r", "-      case SHORT:\r", "-      case STATIC:\r", "-      case TESTAAAA:\r", "-      case SYNCHRONIZED:\r", "-      case TRANSIENT:\r", "-      case VOID:\r", "-      case VOLATILE:\r", "-      case IDENTIFIER:\r", "-      case LBRACE:\r", "-      case SEMICOLON:\r", "-      case AT:\r", "-      case LT:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[181] = jj_gen;\r", "-        break label_70;\r", "-      }\r", "-      ClassOrInterfaceBodyDeclaration(isInterface);\r", "-    }\r", "-    jj_consume_token(RBRACE);\r", "-  }\r", "+", "+  final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException {", "+    jj_consume_token(LBRACE);", "+           _ncss++; Util.debug( \"ClassOrInterfaceBody()._ncss++\" );", "+    label_73:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ABSTRACT:", "+      case ASSERT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case CLASS:", "+      case DOUBLE:", "+      case ENUM:", "+      case FINAL:", "+      case FLOAT:", "+      case INT:", "+      case INTERFACE:", "+      case LONG:", "+      case NATIVE:", "+      case PRIVATE:", "+      case PROTECTED:", "+      case PUBLIC:", "+      case SHORT:", "+      case STATIC:", "+      case TESTAAAA:", "+      case SYNCHRONIZED:", "+      case TRANSIENT:", "+      case VOID:", "+      case VOLATILE:", "+      case IDENTIFIER:", "+      case LBRACE:", "+      case SEMICOLON:", "+      case AT:", "+      case LT:", "+        ;", "+        break;", "+      default:", "+        jj_la1[186] = jj_gen;", "+        break label_73;", "+      }", "+      ClassOrInterfaceBodyDeclaration(isInterface);", "+    }", "+    jj_consume_token(RBRACE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "835e16ac914ba22614d0730ecb8d8657", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 143, "signatureBeforeChange": "\r \r   final public void TypeBound() throws ParseException", "signatureAfterChange": "    final public void TypeBound() throws ParseException", "diff": ["-\r", "-  final public void TypeBound() throws ParseException {\r", "-    jj_consume_token(EXTENDS);\r", "-    ClassOrInterfaceType();\r", "-    label_74:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case BIT_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[192] = jj_gen;\r", "-        break label_74;\r", "-      }\r", "-      jj_consume_token(BIT_AND);\r", "-      ClassOrInterfaceType();\r", "-    }\r", "-  }\r", "+", "+  final public void TypeBound() throws ParseException {", "+    jj_consume_token(EXTENDS);", "+    ClassOrInterfaceType();", "+    label_77:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case BIT_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[197] = jj_gen;", "+        break label_77;", "+      }", "+      jj_consume_token(BIT_AND);", "+      ClassOrInterfaceType();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2a5f223dbfb5d15cba811ed33c833a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 136, "signatureBeforeChange": "\r \r   final public void ImplementsList(boolean isInterface) throws ParseException", "signatureAfterChange": "    final public void ImplementsList(boolean isInterface) throws ParseException", "diff": ["-\r", "-  final public void ImplementsList(boolean isInterface) throws ParseException {\r", "-    jj_consume_token(IMPLEMENTS);\r", "-    ClassOrInterfaceType();\r", "-    label_69:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[180] = jj_gen;\r", "-        break label_69;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      ClassOrInterfaceType();\r", "-    }\r", "-      if (isInterface)\r", "-         {if (true) throw new ParseException(\"An interface cannot implement other interfaces\");}\r", "-  }\r", "+", "+  final public void ImplementsList(boolean isInterface) throws ParseException {", "+    jj_consume_token(IMPLEMENTS);", "+    ClassOrInterfaceType();", "+    label_72:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[185] = jj_gen;", "+        break label_72;", "+      }", "+      jj_consume_token(COMMA);", "+      ClassOrInterfaceType();", "+    }", "+      if (isInterface)", "+         {if (true) throw new ParseException(\"An interface cannot implement other interfaces\");}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adcd1acad160d4903a10eb033fec403f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 143, "signatureBeforeChange": "\r \r   final public void TypeBound() throws ParseException", "signatureAfterChange": "    final public void TypeBound() throws ParseException", "diff": ["-\r", "-  final public void TypeBound() throws ParseException {\r", "-    jj_consume_token(EXTENDS);\r", "-    ClassOrInterfaceType();\r", "-    label_74:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case BIT_AND:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[192] = jj_gen;\r", "-        break label_74;\r", "-      }\r", "-      jj_consume_token(BIT_AND);\r", "-      ClassOrInterfaceType();\r", "-    }\r", "-  }\r", "+", "+  final public void TypeBound() throws ParseException {", "+    jj_consume_token(EXTENDS);", "+    ClassOrInterfaceType();", "+    label_77:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case BIT_AND:", "+        ;", "+        break;", "+      default:", "+        jj_la1[197] = jj_gen;", "+        break label_77;", "+      }", "+      jj_consume_token(BIT_AND);", "+      ClassOrInterfaceType();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3410d93d13761d28ee4b409cb096a30", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 148, "signatureBeforeChange": "\r \r   final public void FieldDeclaration15(int modifiers) throws ParseException", "signatureAfterChange": "    final public void FieldDeclaration15(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void FieldDeclaration15(int modifiers) throws ParseException {\r", "-    Type();\r", "-    VariableDeclarator();\r", "-    label_78:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[197] = jj_gen;\r", "-        break label_78;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      VariableDeclarator();\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-  }\r", "+", "+  final public void FieldDeclaration15(int modifiers) throws ParseException {", "+    Type();", "+    VariableDeclarator();", "+    label_82:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[203] = jj_gen;", "+        break label_82;", "+      }", "+      jj_consume_token(COMMA);", "+      VariableDeclarator();", "+    }", "+    jj_consume_token(SEMICOLON);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7ada5e57f19b14acf40665e5e697f1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 150, "signatureBeforeChange": "\r \r   final public void MethodDeclarator15() throws ParseException", "signatureAfterChange": "    final public void MethodDeclarator15() throws ParseException", "diff": ["-\r", "-  final public void MethodDeclarator15() throws ParseException {\r", "-    jj_consume_token(IDENTIFIER);\r", "-    FormalParameters();\r", "-    label_79:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case LBRACKET:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[198] = jj_gen;\r", "-        break label_79;\r", "-      }\r", "-      jj_consume_token(LBRACKET);\r", "-      jj_consume_token(RBRACKET);\r", "-    }\r", "-  }\r", "+", "+  final public void MethodDeclarator15() throws ParseException {", "+    jj_consume_token(IDENTIFIER);", "+    FormalParameters();", "+    label_83:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LBRACKET:", "+        ;", "+        break;", "+      default:", "+        jj_la1[204] = jj_gen;", "+        break label_83;", "+      }", "+      jj_consume_token(LBRACKET);", "+      jj_consume_token(RBRACKET);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13299a76924298caa082ca5b7a427bc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 135, "signatureBeforeChange": "\r \r   final public void ExtendsList(boolean isInterface) throws ParseException", "signatureAfterChange": "    final public void ExtendsList(boolean isInterface) throws ParseException", "diff": ["-\r", "-  final public void ExtendsList(boolean isInterface) throws ParseException {\r", "-   boolean extendsMoreThanOne = false;\r", "-    jj_consume_token(EXTENDS);\r", "-    ClassOrInterfaceType();\r", "-    label_68:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[179] = jj_gen;\r", "-        break label_68;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      ClassOrInterfaceType();\r", "-                                  extendsMoreThanOne = true;\r", "-    }\r", "-      if (extendsMoreThanOne && !isInterface)\r", "-         {if (true) throw new ParseException(\"A class cannot extend more than one other class\");}\r", "-  }\r", "+", "+  final public void ExtendsList(boolean isInterface) throws ParseException {", "+   boolean extendsMoreThanOne = false;", "+    jj_consume_token(EXTENDS);", "+    ClassOrInterfaceType();", "+    label_71:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[184] = jj_gen;", "+        break label_71;", "+      }", "+      jj_consume_token(COMMA);", "+      ClassOrInterfaceType();", "+                                  extendsMoreThanOne = true;", "+    }", "+      if (extendsMoreThanOne && !isInterface)", "+         {if (true) throw new ParseException(\"A class cannot extend more than one other class\");}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd59ffe334039caf3f0916566a1f10b9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 137, "signatureBeforeChange": "\r \r   final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException", "signatureAfterChange": "    final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException", "diff": ["-\r", "-  final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException {\r", "-    jj_consume_token(LBRACE);\r", "-           _ncss++; Util.debug( \"ClassOrInterfaceBody()._ncss++\" );\r", "-    label_70:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ABSTRACT:\r", "-      case ASSERT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case CLASS:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FINAL:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case INTERFACE:\r", "-      case LONG:\r", "-      case NATIVE:\r", "-      case PRIVATE:\r", "-      case PROTECTED:\r", "-      case PUBLIC:\r", "-      case SHORT:\r", "-      case STATIC:\r", "-      case TESTAAAA:\r", "-      case SYNCHRONIZED:\r", "-      case TRANSIENT:\r", "-      case VOID:\r", "-      case VOLATILE:\r", "-      case IDENTIFIER:\r", "-      case LBRACE:\r", "-      case SEMICOLON:\r", "-      case AT:\r", "-      case LT:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[181] = jj_gen;\r", "-        break label_70;\r", "-      }\r", "-      ClassOrInterfaceBodyDeclaration(isInterface);\r", "-    }\r", "-    jj_consume_token(RBRACE);\r", "-  }\r", "+", "+  final public void ClassOrInterfaceBody(boolean isInterface) throws ParseException {", "+    jj_consume_token(LBRACE);", "+           _ncss++; Util.debug( \"ClassOrInterfaceBody()._ncss++\" );", "+    label_73:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ABSTRACT:", "+      case ASSERT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case CLASS:", "+      case DOUBLE:", "+      case ENUM:", "+      case FINAL:", "+      case FLOAT:", "+      case INT:", "+      case INTERFACE:", "+      case LONG:", "+      case NATIVE:", "+      case PRIVATE:", "+      case PROTECTED:", "+      case PUBLIC:", "+      case SHORT:", "+      case STATIC:", "+      case TESTAAAA:", "+      case SYNCHRONIZED:", "+      case TRANSIENT:", "+      case VOID:", "+      case VOLATILE:", "+      case IDENTIFIER:", "+      case LBRACE:", "+      case SEMICOLON:", "+      case AT:", "+      case LT:", "+        ;", "+        break;", "+      default:", "+        jj_la1[186] = jj_gen;", "+        break label_73;", "+      }", "+      ClassOrInterfaceBodyDeclaration(isInterface);", "+    }", "+    jj_consume_token(RBRACE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f6621b3c0e7336aa24322579f46682", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r   final public void CreationAnnotation() throws ParseException", "signatureAfterChange": "   final public void CreationAnnotation() throws ParseException", "diff": ["-//Added by REYNAUD Sebastien (LOGICA)\r", "-  final public void CreationAnnotation() throws ParseException {\r", "-    jj_consume_token(AT);\r", "-    jj_consume_token(INTERFACE);\r", "-    jj_consume_token(IDENTIFIER);\r", "-    jj_consume_token(LBRACE);\r", "-    label_64:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ABSTRACT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case CLASS:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FINAL:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case INTERFACE:\r", "-      case LONG:\r", "-      case NATIVE:\r", "-      case PRIVATE:\r", "-      case PROTECTED:\r", "-      case PUBLIC:\r", "-      case SHORT:\r", "-      case STATIC:\r", "-      case TESTAAAA:\r", "-      case SYNCHRONIZED:\r", "-      case TRANSIENT:\r", "-      case VOLATILE:\r", "-      case IDENTIFIER:\r", "-      case SEMICOLON:\r", "-      case AT:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[167] = jj_gen;\r", "-        break label_64;\r", "-      }\r", "-      AnnotationTypeMemberDeclaration();\r", "-    }\r", "-    jj_consume_token(RBRACE);\r", "-  }\r", "+//Added by REYNAUD Sebastien (LOGICA)", "+  final public void CreationAnnotation() throws ParseException {", "+    jj_consume_token(AT);", "+    jj_consume_token(INTERFACE);", "+    jj_consume_token(IDENTIFIER);", "+    jj_consume_token(LBRACE);", "+    label_67:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ABSTRACT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case CLASS:", "+      case DOUBLE:", "+      case ENUM:", "+      case FINAL:", "+      case FLOAT:", "+      case INT:", "+      case INTERFACE:", "+      case LONG:", "+      case NATIVE:", "+      case PRIVATE:", "+      case PROTECTED:", "+      case PUBLIC:", "+      case SHORT:", "+      case STATIC:", "+      case TESTAAAA:", "+      case SYNCHRONIZED:", "+      case TRANSIENT:", "+      case VOLATILE:", "+      case IDENTIFIER:", "+      case SEMICOLON:", "+      case AT:", "+        ;", "+        break;", "+      default:", "+        jj_la1[172] = jj_gen;", "+        break label_67;", "+      }", "+      AnnotationTypeMemberDeclaration();", "+    }", "+    jj_consume_token(RBRACE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e9e75ca66ab9cf9f7e3f088a6d877d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 148, "signatureBeforeChange": "\r \r   final public void FieldDeclaration15(int modifiers) throws ParseException", "signatureAfterChange": "    final public void FieldDeclaration15(int modifiers) throws ParseException", "diff": ["-\r", "-  final public void FieldDeclaration15(int modifiers) throws ParseException {\r", "-    Type();\r", "-    VariableDeclarator();\r", "-    label_78:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[197] = jj_gen;\r", "-        break label_78;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      VariableDeclarator();\r", "-    }\r", "-    jj_consume_token(SEMICOLON);\r", "-  }\r", "+", "+  final public void FieldDeclaration15(int modifiers) throws ParseException {", "+    Type();", "+    VariableDeclarator();", "+    label_82:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[203] = jj_gen;", "+        break label_82;", "+      }", "+      jj_consume_token(COMMA);", "+      VariableDeclarator();", "+    }", "+    jj_consume_token(SEMICOLON);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49d69383fca0b9fc6db8874e44ffd09", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "\r \r   final public void ArgumentList() throws ParseException", "signatureAfterChange": "    final public void ArgumentList() throws ParseException", "diff": ["-\r", "-  final public void ArgumentList() throws ParseException {\r", "-    Expression();\r", "-    label_52:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case COMMA:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[130] = jj_gen;\r", "-        break label_52;\r", "-      }\r", "-      jj_consume_token(COMMA);\r", "-      Expression();\r", "-    }\r", "-  }\r", "+", "+  final public void ArgumentList() throws ParseException {", "+    Expression();", "+    label_53:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case COMMA:", "+        ;", "+        break;", "+      default:", "+        jj_la1[131] = jj_gen;", "+        break label_53;", "+      }", "+      jj_consume_token(COMMA);", "+      Expression();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73724a1a8a95c09c79a13aa174b0f4a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r   final public void CreationAnnotation() throws ParseException", "signatureAfterChange": "   final public void CreationAnnotation() throws ParseException", "diff": ["-//Added by REYNAUD Sebastien (LOGICA)\r", "-  final public void CreationAnnotation() throws ParseException {\r", "-    jj_consume_token(AT);\r", "-    jj_consume_token(INTERFACE);\r", "-    jj_consume_token(IDENTIFIER);\r", "-    jj_consume_token(LBRACE);\r", "-    label_64:\r", "-    while (true) {\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ABSTRACT:\r", "-      case BOOLEAN:\r", "-      case BYTE:\r", "-      case CHAR:\r", "-      case CLASS:\r", "-      case DOUBLE:\r", "-      case ENUM:\r", "-      case FINAL:\r", "-      case FLOAT:\r", "-      case INT:\r", "-      case INTERFACE:\r", "-      case LONG:\r", "-      case NATIVE:\r", "-      case PRIVATE:\r", "-      case PROTECTED:\r", "-      case PUBLIC:\r", "-      case SHORT:\r", "-      case STATIC:\r", "-      case TESTAAAA:\r", "-      case SYNCHRONIZED:\r", "-      case TRANSIENT:\r", "-      case VOLATILE:\r", "-      case IDENTIFIER:\r", "-      case SEMICOLON:\r", "-      case AT:\r", "-        ;\r", "-        break;\r", "-      default:\r", "-        jj_la1[167] = jj_gen;\r", "-        break label_64;\r", "-      }\r", "-      AnnotationTypeMemberDeclaration();\r", "-    }\r", "-    jj_consume_token(RBRACE);\r", "-  }\r", "+//Added by REYNAUD Sebastien (LOGICA)", "+  final public void CreationAnnotation() throws ParseException {", "+    jj_consume_token(AT);", "+    jj_consume_token(INTERFACE);", "+    jj_consume_token(IDENTIFIER);", "+    jj_consume_token(LBRACE);", "+    label_67:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ABSTRACT:", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case CLASS:", "+      case DOUBLE:", "+      case ENUM:", "+      case FINAL:", "+      case FLOAT:", "+      case INT:", "+      case INTERFACE:", "+      case LONG:", "+      case NATIVE:", "+      case PRIVATE:", "+      case PROTECTED:", "+      case PUBLIC:", "+      case SHORT:", "+      case STATIC:", "+      case TESTAAAA:", "+      case SYNCHRONIZED:", "+      case TRANSIENT:", "+      case VOLATILE:", "+      case IDENTIFIER:", "+      case SEMICOLON:", "+      case AT:", "+        ;", "+        break;", "+      default:", "+        jj_la1[172] = jj_gen;", "+        break label_67;", "+      }", "+      AnnotationTypeMemberDeclaration();", "+    }", "+    jj_consume_token(RBRACE);", "+  }"]}]}