{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "725b5148a49263c66e70bf050e812f28", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a66383cd460b593939aae36f8eaa3163", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/FastArrayCodeProvider.java", "commitBeforeChange": "19ceee05d925a56765de9c8658cd706bba52717d", "commitAfterChange": "8436089ae83994fd4e20a6c9d4bf74654ba39159", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void generateCINITmethod(MethodVisitor mv,String className,int counters_cnt)", "signatureAfterChange": " \t \tpublic void generateCINITmethod(MethodVisitor mv,String className,int counters_cnt)", "diff": ["-\tpublic void generateCINITmethod(MethodVisitor mv,String className,int counters_cnt){", "-\t\tsuper.generateCINITmethod(mv,className,counters_cnt);", "+\t", "+\tpublic void generateCINITmethod(MethodVisitor mv,String className,int counters_cnt) {", "+\t\tmv.visitFieldInsn(Opcodes.GETSTATIC, className, COBERTURA_COUNTERS_FIELD_NAME, COBERTURA_COUNTERS_FIELD_TYPE);", "+\t\tLabel l1 = new Label();", "+\t\tmv.visitJumpInsn(Opcodes.IFNONNULL, l1);", "-\t    \t\tCOBERTURA_COUNTERS_FIELD_TYPE);\t    ", "+\t    \t\tCOBERTURA_COUNTERS_FIELD_TYPE);", "+\t    generateRegisterClass(mv, className);", "+\t    mv.visitLabel(l1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28f44d027eec2f317aff94139a7009a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/AtomicArrayCodeProvider.java", "commitBeforeChange": "19ceee05d925a56765de9c8658cd706bba52717d", "commitAfterChange": "8436089ae83994fd4e20a6c9d4bf74654ba39159", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void generateCINITmethod(MethodVisitor mv,String className,int counters_cnt)", "signatureAfterChange": " \t \tpublic void generateCINITmethod(MethodVisitor mv,String className,int counters_cnt)", "diff": ["-\t\tsuper.generateCINITmethod(mv,className,counters_cnt);", "+\t\tmv.visitFieldInsn(Opcodes.GETSTATIC, className, COBERTURA_COUNTERS_FIELD_NAME, COBERTURA_COUNTERS_FIELD_TYPE);", "+\t\tLabel l1 = new Label();", "+\t\tmv.visitJumpInsn(Opcodes.IFNONNULL, l1);", "+", "+\t    generateRegisterClass(mv, className);", "+\t    mv.visitLabel(l1);"]}]}