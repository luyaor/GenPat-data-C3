{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "449cab2706707a71a543c2aa90bbb9d0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71bcaae16eb08347a18f4ab4cb9927f3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/test/util/WebappServer.java", "commitBeforeChange": "c375766d9094530d2f833df204ec339bfbb1b3b9", "commitAfterChange": "eca94255cccacd9f5e33441462a1b8a3ddc4d322", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic WebappServer(File webappServerDir, boolean tomcat)", "signatureAfterChange": "  \tpublic WebappServer(File webappServerDir, boolean tomcat)", "diff": ["+\t\tServerSocket s;", "+\t\ttry {", "+\t\t\ts = new ServerSocket(0);", "+\t\t\twebappPort = s.getLocalPort();", "+\t\t\ts.close();", "+\t\t\t", "+\t\t\ts = new ServerSocket(0);", "+\t\t\tstopPort = s.getLocalPort();", "+\t\t\ts.close();", "+\t\t} catch (IOException e) {", "+\t\t\te.printStackTrace();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5f07bc89dd6c150d5c20f2f0bc150f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "0c4c989beaaa7dcd1e0ebf1b93967c436c5e76e9", "commitAfterChange": "1e2c9cddc06be7e4629e00cee41846cbb63566ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "signatureAfterChange": "  \tprivate void generateSourceFileList(PackageData packageData) \t\t\tthrows IOException", "diff": ["+", "+\t\t// sourceFiles is sorted, but it's sorted by the full path", "+\t\t// to the file, and we only want to sort based on the", "+\t\t// file's basename.", "+\t\tSortedMap sortedSourceFiles = new TreeMap();", "+\t\tfor (Iterator iter = sourceFiles.iterator(); iter.hasNext();)", "+\t\t{", "+\t\t\tSourceFileData sourceFileData = (SourceFileData)iter.next();", "+\t\t\tsortedSourceFiles.put(sourceFileData.getBaseName(), sourceFileData);", "+\t\t}", "+", "-", "-\t\t\tfor (Iterator iter = sourceFiles.iterator(); iter.hasNext();)", "+\t\t\tfor (Iterator iter = sortedSourceFiles.values().iterator(); iter.hasNext();)"]}]}