{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6305543670dd345d8ffd74ed95167865", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d7039f00f4cf29816a507229970f87", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/Javancss.java", "commitBeforeChange": "8470613dce5289e48aeaaebf95d84de1414dad70", "commitAfterChange": "77a25c204e0d22c334a40e10db5134e2cb525c03", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void _measureFiles(Vector vJavaSourceFiles_)         throws IOException,                ParseException,                TokenMgrError", "signatureAfterChange": "\r \r     private void _measureFiles( List vJavaSourceFiles_ ) throws IOException, ParseException, TokenMgrError", "diff": ["-", "-    private void _measureFiles(Vector vJavaSourceFiles_)", "-        throws IOException,", "-               ParseException,", "-               TokenMgrError", "-    {", "-        // for each file", "-        for(Enumeration e = vJavaSourceFiles_.elements(); e.hasMoreElements(); ) ", "-        {", "-            String sJavaFileName = (String)e.nextElement();", "-", "-            // if the file specifies other files...", "-            if (sJavaFileName.charAt(0) == '@') ", "-            {", "-                if (sJavaFileName.length() > 1) ", "-                {", "-                    String sFileName = sJavaFileName.substring(1);", "-                    sFileName = FileUtil.normalizeFileName( sFileName );", "-                    if (_htProcessedAtFiles.get(sFileName) != null) ", "-                    {", "-                        continue;", "-                    }", "-                    _htProcessedAtFiles.put( sFileName, sFileName );", "-                    String sJavaSourceFileNames = null;", "-                    try ", "-                    {", "-                        sJavaSourceFileNames = FileUtil.readFile(sFileName);", "-                    }", "-                    catch(IOException pIOException) ", "-                    {", "-                        _sErrorMessage = \"File Read Error: \" + sFileName;", "-                        _thrwError = pIOException;", "-                        ", "-                        throw pIOException;", "-                    }", "-                    Vector vTheseJavaSourceFiles =", "-                           Util.stringToLines(sJavaSourceFileNames);", "-                    _measureFiles(vTheseJavaSourceFiles);", "-                }", "-            } ", "-            else ", "-            {", "-                try ", "-                {", "-                    _measureSource( sJavaFileName );", "-                } catch( Throwable pThrowable ) ", "-                {", "-                    // hmm, do nothing? Use getLastError() or so to check for details.", "-                }", "-            }", "-        }", "-    }", "+\r", "+    private void _measureFiles( List/*<File>*/ vJavaSourceFiles_ ) throws IOException, ParseException, TokenMgrError\r", "+    {\r", "+        // for each file\r", "+        for ( Iterator e = vJavaSourceFiles_.iterator(); e.hasNext(); )\r", "+        {\r", "+            File file = (File) e.next();\r", "+\r", "+            try\r", "+            {\r", "+                _measureSource( file );\r", "+            }\r", "+            catch ( Throwable pThrowable )\r", "+            {\r", "+                // hmm, do nothing? Use getLastError() or so to check for details.\r", "+            }\r", "+        }\r", "+    }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa74d2d8e534a9d0373560df04bb4650", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/Javancss.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void _measureFiles(Vector vJavaSourceFiles_)         throws IOException,                ParseException,                TokenMgrError", "signatureAfterChange": "      private void _measureFiles( List vJavaSourceFiles_ ) throws IOException, ParseException, TokenMgrError", "diff": ["-    private void _measureFiles(Vector vJavaSourceFiles_)", "-        throws IOException,", "-               ParseException,", "-               TokenMgrError", "+    private void _measureFiles( List/*<File>*/ vJavaSourceFiles_ ) throws IOException, ParseException, TokenMgrError", "-        for(Enumeration e = vJavaSourceFiles_.elements(); e.hasMoreElements(); ) ", "+        for ( Iterator e = vJavaSourceFiles_.iterator(); e.hasNext(); )", "-            String sJavaFileName = (String)e.nextElement();", "+            File file = (File) e.next();", "-            // if the file specifies other files...", "-            if (sJavaFileName.charAt(0) == '@') ", "+            try", "-                if (sJavaFileName.length() > 1) ", "-                {", "-                    String sFileName = sJavaFileName.substring(1);", "-                    sFileName = FileUtil.normalizeFileName( sFileName );", "-                    if (_htProcessedAtFiles.get(sFileName) != null) ", "-                    {", "-                        continue;", "-                    }", "-                    _htProcessedAtFiles.put( sFileName, Util.getConstantObject() );", "-                    String sJavaSourceFileNames = null;", "-                    try ", "-                    {", "-                        sJavaSourceFileNames = FileUtil.readFile(sFileName);", "-                    }", "-                    catch(IOException pIOException) ", "-                    {", "-                        _sErrorMessage = \"File Read Error: \" + sFileName;", "-                        _thrwError = pIOException;", "-                        ", "-                        throw pIOException;", "-                    }", "-                    Vector vTheseJavaSourceFiles =", "-                           Util.stringToLines(sJavaSourceFileNames);", "-                    _measureFiles(vTheseJavaSourceFiles);", "-                }", "-            } ", "-            else ", "+                _measureSource( file );", "+            }", "+            catch ( Throwable pThrowable )", "-                try ", "-                {", "-                    _measureSource( sJavaFileName );", "-                } catch( Throwable pThrowable ) ", "-                {", "-                    // hmm, do nothing? Use getLastError() or so to check for details.", "-                }", "+                // hmm, do nothing? Use getLastError() or so to check for details."]}]}