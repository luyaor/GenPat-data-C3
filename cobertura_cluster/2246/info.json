{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c2270ff38c78241932e87ea77196916", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a93e71bae4ef8c6293c9800d0cad529", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic boolean equals(Object obj)", "signatureAfterChange": "  \tpublic boolean equals(Object obj)", "diff": ["-\tpublic boolean equals(Object obj)", "-\t{", "+\tpublic boolean equals(Object obj) {", "-\t\tgetBothLocks(switchData);", "-\t\ttry", "-\t\t{", "-\t\t\treturn (this.defaultHits == switchData.defaultHits)", "-\t\t\t\t\t&& (Arrays.equals(this.hits, switchData.hits))", "-\t\t\t\t\t&& (this.switchNumber == switchData.switchNumber);", "-\t\t}", "-\t\tfinally", "-\t\t{", "-\t\t\tlock.unlock();", "-\t\t\tswitchData.lock.unlock();", "-\t\t}", "+\t\treturn (this.defaultHits == switchData.defaultHits)", "+\t\t\t\t&& (Arrays.equals(this.hits, switchData.hits))", "+\t\t\t\t&& (this.switchNumber == switchData.switchNumber);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c988e447ad8f1b0182e0fc34063331ad", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "2fe97005312f235d23879f33762071ad5315ea64", "commitAfterChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean equals(Object obj)", "signatureAfterChange": "  \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn (hits == lineData.hits) && (isBranch == lineData.isBranch)", "-\t\t\t\t&& (lineNumber == lineData.lineNumber)", "-\t\t\t\t&& (methodDescriptor.equals(lineData.methodDescriptor))", "-\t\t\t\t&& (methodName.equals(lineData.methodName));", "+\t\treturn (this.hits == lineData.hits)", "+\t\t\t\t&& (this.isBranch == lineData.isBranch)", "+\t\t\t\t&& (this.lineNumber == lineData.lineNumber)", "+\t\t\t\t&& (this.methodDescriptor.equals(lineData.methodDescriptor))", "+\t\t\t\t&& (this.methodName.equals(lineData.methodName));"]}]}