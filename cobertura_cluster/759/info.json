{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "015aa4764e63edb20c5ff1e65944adf9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2918e304392f235eb56d98705eb99cd2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/merge/Main.java", "commitBeforeChange": "d9b067065494165b0f454760e566b1138c8e5581", "commitAfterChange": "85ae392ac278d91cf4a15a7cedcc17aab0d71eea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic Main(String[] args)", "signatureAfterChange": "  \tpublic Main(String[] args)", "diff": ["-\t\t// Load the data file", "-\t\tProjectData projectData = CoverageDataFileHandler", "-\t\t\t\t.loadCoverageData(dataFile);", "+\t\t// Load coverage data", "+\t\tProjectData projectData = null;", "+\t\tif (dataFile.isFile())", "+\t\t\tprojectData = CoverageDataFileHandler.loadCoverageData(dataFile);", "-\t\t{", "-\t\t\tSystem.err.println(\"Error: Unable to read from data file \"", "-\t\t\t\t\t+ dataFile.getAbsolutePath());", "-\t\t\tSystem.exit(1);", "-\t\t}", "+\t\t\tprojectData = new ProjectData();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ea41bfcfd79500fdc14679050a0059", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "6c6d6c76c09024a5191fe1c0cd3e7fdf05a53316", "commitAfterChange": "f23f5bf81f0fad907fdffec71d55d604d0e8edd6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate String generateTableRowForClass(ClassData classData)", "signatureAfterChange": "  \tprivate String generateTableRowForClass(ClassData classData)", "diff": ["-\t\tdouble lineCoverage = classData.getLineCoverageRate();", "-\t\tdouble branchCoverage = classData.getBranchCoverageRate();", "+\t\tdouble lineCoverage = -1;", "+\t\tdouble branchCoverage = -1;", "+", "+\t\tif (classData.getNumberOfValidLines() > 0)", "+\t\t\tlineCoverage = classData.getLineCoverageRate();", "+\t\tif (classData.getNumberOfValidBranches() > 0)", "+\t\t\tbranchCoverage = classData.getBranchCoverageRate();", "+", "-\t\tif (classData.getNumberOfValidLines() == 0)", "-\t\t{", "-\t\t\tret.append(generateTableColumnsForNA(ccn));", "-\t\t}", "-\t\telse", "-\t\t{", "-\t\t\tret.append(generateTableColumnsFromData(lineCoverage,", "-\t\t\t\t\tbranchCoverage, ccn));", "-\t\t}", "+\t\tret.append(generateTableColumnsFromData(lineCoverage, branchCoverage,", "+\t\t\t\tccn));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef296a666d2561d90bb6a200b26de24", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/util/CommandLineBuilder.java", "commitBeforeChange": "812a0f037547b5bfd90513d27afa1d5eed84b9f8", "commitAfterChange": "05b520171519b94aa37837e16d784c0003cbcd18", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String[] preprocessCommandLineArguments(String[] args)", "signatureAfterChange": " \tpublic static String[] preprocessCommandLineArguments(String[] args) throws IOException", "diff": ["-\tpublic static String[] preprocessCommandLineArguments(String[] args) {", "+\tpublic static String[] preprocessCommandLineArguments(String[] args) throws IOException {", "-\t\t\t\t\tlogger.fatal( \"'--commandsfile' specified as last option, ignoring.\");", "-\t\t\t\t\treturn args;", "+\t\t\t\t\tthrow new IllegalArgumentException(\"'--commandsfile' specified as last option.\");", "-\t\t\t\tlogger.fatal(\"Unable to read temporary commands file \"", "-\t\t\t\t\t\t+ commandsFileName + \".\");", "-\t\t\t\treturn args;", "+\t\t\t\tthrow new IOException( \"Unable to read temporary commands file \"", "+\t\t\t\t\t\t+ commandsFileName + \".\");"]}]}