{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d61b5cfe2bb65fcbcc4f5991a0c5af09", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6360699a3c63862fc56e70e0a0eabf43", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/CoberturaInstrumenter.java", "commitBeforeChange": "9cc3ded0b65b31adac64811985585524fe8a19d2", "commitAfterChange": "1b2f14e32eeb4f61ac0892467417af4d479c58fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) throws IOException", "signatureAfterChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) throws IOException", "diff": ["-\t\tif (cv.shouldBeInstrumented()) { //Not instrumented classes should be not included into the report", "-\t\t cv.getClassMap().applyOnProjectData(projectData,cv.shouldBeInstrumented());", "-\t\t}", "+\t\t// if (cv.shouldBeInstrumented()) { //Not instrumented classes should be not included into the report", "+\t\tcv.getClassMap().applyOnProjectData(projectData, cv.shouldBeInstrumented());", "+\t\t// }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8399a22133e51a74c3909f8c77caeb24", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/CoberturaInstrumenter.java", "commitBeforeChange": "4d909f48e2f07ffe6cb92fd53174e50465cdfae8", "commitAfterChange": "23923f3f6dbe900a5325855399c600eb696bd86f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) throws IOException", "signatureAfterChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) throws IOException", "diff": ["-\t\tlogger.debug(\"Migrating classmap in projectData to store in *.ser file: \"+cv.getClassMap().getClassName());", "-\t\tcv.getClassMap().applyOnProjectData(projectData,cv.shouldBeInstrumented());", "+\t\tlogger.debug(\"Migrating classmap in projectData to store in *.ser file: \" + cv.getClassMap().getClassName());", "+\t\t", "+\t\tif (cv.shouldBeInstrumented()) { //Not instrumented classes should be not included into the report", "+\t\t cv.getClassMap().applyOnProjectData(projectData,cv.shouldBeInstrumented());", "+\t\t}"]}]}