{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8fadf64b20fd3ab76a968e7547ff4cf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23380a5eadcb79bb035107235986dfa1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CommonMatchingTask.java", "commitBeforeChange": "76fa01baf70f8272800d4a2e686311024ccc5ab9", "commitAfterChange": "a200058f73d8ed1c2d6487fd38cdebc8a65529c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprotected void saveArgs()", "signatureAfterChange": "  \tprivate void createArgumentsForFilenames( CommandLineBuilder builder, String[] filenames) throws IOException", "diff": ["-", "-\tprotected void saveArgs()", "-\t{", "-\t\ttry", "-\t\t{", "-\t\t\tcommandLineWriter.flush();", "-\t\t\tcommandLineWriter.close();", "-\t\t}", "-\t\tcatch (IOException ioe)", "-\t\t{", "-\t\t\tgetProject().log(", "-\t\t\t\t\t\"Error saving commands file \"", "-\t\t\t\t\t\t\t+ commandLineFile.getAbsolutePath(),", "-\t\t\t\t\tProject.MSG_ERR);", "-\t\t\tthrow new BuildException(\"Unable to save the commands file.\", ioe);", "-\t\t}", "-", "-\t\t/* point to commands file */", "-\t\tgetJava().createArg().setValue(\"--commandsfile\");", "-\t\tgetJava().createArg().setValue(commandLineFile.getAbsolutePath());", "-\t}", "+", "+\tprivate void createArgumentsForFilenames( CommandLineBuilder builder, String[] filenames) throws IOException", "+\t{", "+\t\tfor (int i = 0; i < filenames.length; i++)", "+\t\t{", "+\t\t\tgetProject().log(\"Adding \" + filenames[i] + \" to list\",", "+\t\t\t\t\tProject.MSG_VERBOSE);", "+\t\t\tbuilder.addArg(filenames[i]);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f7c3ff9692dd3c0a99a1b57bb46955f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/ant/CommonMatchingTask.java", "commitBeforeChange": "76fa01baf70f8272800d4a2e686311024ccc5ab9", "commitAfterChange": "a200058f73d8ed1c2d6487fd38cdebc8a65529c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void initArgs()", "signatureAfterChange": "  \tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException", "diff": ["-", "-\tprotected void initArgs()", "-\t{", "-\t\ttry", "-\t\t{", "-\t\t\tcommandLineFile = File.createTempFile(\"cobertura.\", \".cmdline\");", "-\t\t\tcommandLineFile.deleteOnExit();", "-\t\t\tcommandLineWriter = new FileWriter(commandLineFile);", "-\t\t}", "-\t\tcatch (IOException ioe)", "-\t\t{", "-\t\t\tgetProject().log(", "-\t\t\t\t\t\"Error initializing commands file \"", "-\t\t\t\t\t\t\t+ commandLineFile.getAbsolutePath(),", "-\t\t\t\t\tProject.MSG_ERR);", "-\t\t\tthrow new BuildException(\"Unable to initialize commands file.\",", "-\t\t\t\t\tioe);", "-\t\t}", "-\t}", "+\tprotected void createArgumentsForFilesets( CommandLineBuilder builder) throws IOException {", "+\t\tIterator iter = fileSets.iterator();", "+\t\twhile (iter.hasNext())", "+\t\t{", "+\t\t\tFileSet fileSet = (FileSet)iter.next();", "+", "+\t\t\tbuilder.addArg(\"--basedir\", baseDir(fileSet));", "+\t\t\tcreateArgumentsForFilenames( builder, getFilenames(fileSet));", "+\t\t}", "+\t}"]}]}