{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee158b9b979665fd123f093186f26158", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df0f8853843a5a7ec841dbde77d7291", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic int getNumberOfCoveredBranches()", "signatureAfterChange": " \t \tpublic int getNumberOfCoveredBranches()", "diff": ["-\t\tif (jumps != null)", "-\t\t\tfor (int i = jumps.size() - 1; i >= 0; i--)", "-\t\t\t\tret += ((JumpData) jumps.get(i)).getNumberOfCoveredBranches();", "-\t\tif (switches != null)", "-\t\t\tfor (int i = switches.size() - 1; i >= 0; i--)", "-\t\t\t\tret += ((SwitchData) switches.get(i)).getNumberOfCoveredBranches();", "-\t\treturn ret;", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\tif (jumps != null)", "+\t\t\t\tfor (int i = jumps.size() - 1; i >= 0; i--)", "+\t\t\t\t\tret += ((JumpData) jumps.get(i)).getNumberOfCoveredBranches();", "+\t\t\tif (switches != null)", "+\t\t\t\tfor (int i = switches.size() - 1; i >= 0; i--)", "+\t\t\t\t\tret += ((SwitchData) switches.get(i)).getNumberOfCoveredBranches();", "+\t\t\treturn ret;", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d622cfe5b66ec65c032a7d42c893b57", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic int getNumberOfValidBranches()", "signatureAfterChange": "  \tpublic int getNumberOfValidBranches()", "diff": ["-\t\tif (jumps != null)", "-\t\t\tfor (int i = jumps.size() - 1; i >= 0; i--)", "-\t\t\t\tret += ((JumpData) jumps.get(i)).getNumberOfValidBranches();", "-\t\tif (switches != null)", "-\t\t\tfor (int i = switches.size() - 1; i >= 0; i--)", "-\t\t\t\tret += ((SwitchData) switches.get(i)).getNumberOfValidBranches();", "-\t\treturn ret;", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\tif (jumps != null)", "+\t\t\t\tfor (int i = jumps.size() - 1; i >= 0; i--)", "+\t\t\t\t\tret += ((JumpData) jumps.get(i)).getNumberOfValidBranches();", "+\t\t\tif (switches != null)", "+\t\t\t\tfor (int i = switches.size() - 1; i >= 0; i--)", "+\t\t\t\t\tret += ((SwitchData) switches.get(i)).getNumberOfValidBranches();", "+\t\t\treturn ret;", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}]}