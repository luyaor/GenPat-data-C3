{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd38bbaccc5f4bd2a993859f3b978a8c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36dab4b473eec1e7b82f686cf26c1105", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 610, "methodNumberAfterChange": 611, "signatureBeforeChange": "\r \r   final private boolean jj_3R_324()", "signatureAfterChange": "\r \r   private boolean jj_3R_301()", "diff": ["-\r", "-  final private boolean jj_3R_324() {\r", "-    if (jj_3R_347()) return true;\r", "-    Token xsp;\r", "-    while (true) {\r", "-      xsp = jj_scanpos;\r", "-      if (jj_3R_348()) { jj_scanpos = xsp; break; }\r", "-    }\r", "-    return false;\r", "-  }\r", "+\r", "+  private boolean jj_3R_301() {\r", "+    if (jj_3R_312()) return true;\r", "+    Token xsp;\r", "+    while (true) {\r", "+      xsp = jj_scanpos;\r", "+      if (jj_3R_343()) { jj_scanpos = xsp; break; }\r", "+    }\r", "+    return false;\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fee42c461ea711089c66a4e8a230e95", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 424, "methodNumberAfterChange": 602, "signatureBeforeChange": "\r \r   final private boolean jj_3R_341()", "signatureAfterChange": "\r \r   private boolean jj_3R_108()", "diff": ["-\r", "-  final private boolean jj_3R_341() {\r", "-    if (jj_3R_355()) return true;\r", "-    Token xsp;\r", "-    while (true) {\r", "-      xsp = jj_scanpos;\r", "-      if (jj_3R_371()) { jj_scanpos = xsp; break; }\r", "-    }\r", "-    return false;\r", "-  }\r", "+\r", "+  private boolean jj_3R_108() {\r", "+    if (jj_3R_154()) return true;\r", "+    Token xsp;\r", "+    while (true) {\r", "+      xsp = jj_scanpos;\r", "+      if (jj_3R_155()) { jj_scanpos = xsp; break; }\r", "+    }\r", "+    return false;\r", "+  }\r"]}]}