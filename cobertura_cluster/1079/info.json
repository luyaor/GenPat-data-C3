{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec08fc81cdfcc1f99e0c112ab5da624c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1efa6a43e1be1febc7bbb9ba35abd869", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "metrics/metrics-model/src/test/java/net/sourceforge/cobertura/metrics/model/location/SourceLocationTest.java", "commitBeforeChange": "78afd7a9ea91683156391f9ba3a9d2844e027fd2", "commitAfterChange": "76b6aa22931fd8b9d49c41bc823662e95693cf99", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void validateMarshalling() throws Exception", "signatureAfterChange": "      @Test     public void validateMarshalling() throws Exception", "diff": ["-        final SourceLocation unitUnderTest = new SourceLocation(packageName, className, methodName, lineNumber);", "+        final SourceLocation unitUnderTest = new SourceLocation(", "+                packageName, className, methodName, lineNumber, branchSegment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af5ab922283d154292516854c73717e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "metrics/metrics-model/src/test/java/net/sourceforge/cobertura/metrics/model/location/SourceLocationTest.java", "commitBeforeChange": "78afd7a9ea91683156391f9ba3a9d2844e027fd2", "commitAfterChange": "76b6aa22931fd8b9d49c41bc823662e95693cf99", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test(expected = NullPointerException.class)     public void validateExceptionOnNullPackageName()", "signatureAfterChange": "      @Test(expected = NullPointerException.class)     public void validateExceptionOnNullPackageName()", "diff": ["-        new SourceLocation(null, className, methodName, lineNumber);", "+        new SourceLocation(null, className, methodName, lineNumber, branchSegment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e299740cf232ca27c855200cfed3fa", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "metrics/metrics-model/src/test/java/net/sourceforge/cobertura/metrics/model/location/SourceLocationTest.java", "commitBeforeChange": "78afd7a9ea91683156391f9ba3a9d2844e027fd2", "commitAfterChange": "76b6aa22931fd8b9d49c41bc823662e95693cf99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void validateExceptionOnEmptyPackageName()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void validateExceptionOnEmptyPackageName()", "diff": ["-        new SourceLocation(\"\", className, methodName, lineNumber);", "+        new SourceLocation(\"\", className, methodName, lineNumber, branchSegment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8e3053b981c85fbc3687001b3f61839", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "metrics/metrics-model/src/test/java/net/sourceforge/cobertura/metrics/model/location/SourceLocationTest.java", "commitBeforeChange": "78afd7a9ea91683156391f9ba3a9d2844e027fd2", "commitAfterChange": "76b6aa22931fd8b9d49c41bc823662e95693cf99", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void validateExceptionOnEmptyMethodName()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void validateExceptionOnEmptyMethodName()", "diff": ["-        new SourceLocation(packageName, className, \"\", lineNumber);", "+        new SourceLocation(packageName, className, \"\", lineNumber, branchSegment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9aaf4b513da5f70311d55460e20076b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "metrics/metrics-model/src/test/java/net/sourceforge/cobertura/metrics/model/location/SourceLocationTest.java", "commitBeforeChange": "78afd7a9ea91683156391f9ba3a9d2844e027fd2", "commitAfterChange": "76b6aa22931fd8b9d49c41bc823662e95693cf99", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void validateExceptionOnNegativeLineNumber()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void validateExceptionOnNegativeLineNumber()", "diff": ["-        new SourceLocation(packageName, className, methodName, -42);", "+        new SourceLocation(packageName, className, methodName, -42, branchSegment);", "+    }"]}]}