{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1f49a50487d64ee3a6ab86a77836cb8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b3290c20b81416ddfd0d97b3605921", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/thread/test/ThreadedFunctionalTest.java", "commitBeforeChange": "a60d2bc22171233e011b257f7dcf6851da67b1d2", "commitAfterChange": "db1a19fd2ba9631bb2b41b9cfce57d242f929b74", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void runTest(String code) throws Exception", "signatureAfterChange": "  \tprivate void runTest(String code) throws Exception", "diff": ["-\t\t\tSystem.out.println(\"Executing build: \" + i);", "+\t\t\tlog.info(String.format(\"Executing build: %s\", i));", "-\t\tSystem.out.println(\"Starting reporting task.\");", "+\t\tlog.info(\"Starting reporting task.\");", "-\t\tSystem.out.println(\"Finish reporting task.\");", "+\t\tlog.info(\"Finish reporting task.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1baf44b767b06e34cf99869d644426d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/ant/FunctionalConditionCoverageTest.java", "commitBeforeChange": "a60d2bc22171233e011b257f7dcf6851da67b1d2", "commitAfterChange": "db1a19fd2ba9631bb2b41b9cfce57d242f929b74", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate static void runTestAntScript(String testName, String target) \t\t\tthrows IOException", "signatureAfterChange": " \tprivate static void runTestAntScript(String testName, String target) \t\t\tthrows IOException", "diff": ["-\t\tSystem.out.println(classpath);", "+\t\tlog.info(classpath);", "-\t\t\t\tSystem.out.println(\"\\n\\n\\nOutput from Ant for \" + testName", "-\t\t\t\t\t\t+ \" test:\\n----------------------------------------\\n\"", "-\t\t\t\t\t\t+ Util.getText(outputFile)", "-\t\t\t\t\t\t+ \"----------------------------------------\");", "+\t\t\t\tlog.info(String.format(\"\\n\\n\\nOutput from Ant for %s test:\"", "+\t\t\t\t\t\t+ \"\\n----------------------------------------\"", "+\t\t\t\t\t\t+ \"\\n%s----------------------------------------\",", "+\t\t\t\t\t\ttestName, Util.getText(outputFile)));"]}]}