{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffd57c539f97450fd4c7ff4afde75ce5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27c4397eecea53d19f7f7aa0bce27e2c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/reporting/html/HTMLReport.java", "commitBeforeChange": "f21d7d6c791a9d50e30e19d77af0c8b3f2897c6c", "commitAfterChange": "c7d1188d7a787c1ac94e330ba40b7b04d9966dca", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate static String generateTableHeader(String title, \t\t\tboolean showColumnForNumberOfClasses)", "signatureAfterChange": "  \tprivate static String generateTableHeader(String title, \t\t\tboolean showColumnForNumberOfClasses)", "diff": ["-\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"20%\\\">\"", "+\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"18%\\\">\"", "-\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"20%\\\">\"", "+\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"8%\\\"># Lines</td>\");", "+\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"18%\\\">\"", "+\t\tret.append(\"  <td class=\\\"heading\\\" width=\\\"8%\\\"># Branches</td>\");", "-\t\t\t\t.append(\"  <td class=\\\"heading\\\" width=\\\"10%\\\">\"", "+\t\t\t\t.append(\"  <td class=\\\"heading\\\" width=\\\"3%\\\">\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df14a8259522369d88b19f44d0b7e5d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/reporting/xml/XMLReportTest.java", "commitBeforeChange": "f7504c0f1520232019e0ec5d7d9a44b2a102b7d9", "commitAfterChange": "b5c49534c0665dd8d1ec5c58aeda5a4c21cfd276", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testXMLReportValidity() throws Exception", "signatureAfterChange": "  \tpublic void testXMLReportValidity() throws Exception", "diff": ["-\t\t// Now that that's out of the way, we can validate the XML report", "+\t\t// Create a validating XML document parser", "-\t\t//factory.setValidating(true);", "+\t\tfactory.setValidating(true);", "+\t\tdocumentBuilder.setEntityResolver(new JUnitXMLParserEntityResolver(", "+\t\t\t\tbasedir));", "+\t\t// Parse the XML report", "-\t\t\tinputStream = new FileInputStream(pathToTestOutput", "-\t\t\t\t\t+ \"/coverage.xml\");", "+\t\t\tinputStream = new FileInputStream(pathToXMLReport);"]}]}