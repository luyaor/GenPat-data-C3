{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf80bcf39d5cb78226cc3b50cd6f24ff", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deec60575f38effb38db09910e279e2d", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/webapp/test/WebAppFunctionalTest.java", "commitBeforeChange": "2b194b3d77bf600da43b42901e6946bf29c86ff0", "commitAfterChange": "a26b3c4c66c38163a0a617a9215854c17c3271a0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Test \tpublic void flushCoberturaData() throws Exception", "signatureAfterChange": " \t \t@Test \tpublic void testFlushCoberturaData() throws Exception", "diff": ["-", "+\t", "-\tpublic void flushCoberturaData() throws Exception {", "-\t\tWebappServer webappServer = new WebappServer(webappServerDir, false);", "+\tpublic void testFlushCoberturaData() throws Exception {", "+\t\tcreateSimpleWar();", "-\t\twebappServer.deployApp(srcDir, true, true, true);", "+\t\tcreateCoberturaServlet();", "-\t\twebappServer.withRunningServer();", "+\t\tcreateCoberturaJar();", "-\t\twebappServer.pingServer();", "+\t\tinstrumentWar();", "-\t\tFile xmlReport = webappServer.getXmlReport();", "+\t\tstartUpServlet();", "-\t\tgenerateReportFile(xmlReport);", "+\t\tpingServer();", "-\t\tNode dom = TestUtils.getXMLReportDOM(xmlReport);", "+\t\tgenerateReportFile();", "-\t\tint hitCountBefore = TestUtils.getHitCount(dom, SAVE_DATA_CLASSNAME,", "-\t\t\t\tSAVE_DATA_METHOD_NAME);", "+\t\tNode dom = TestUtils.getXMLReportDOM(new File(", "+\t\t\t\ttempDir.getAbsolutePath(), \"coverage.xml\"));", "+", "+\t\tint hitCountBefore = TestUtils.getHitCount(dom,", "+\t\t\t\tSIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "-\t\twebappServer.pingCoberturaServer();", "+\t\tpingCoberturaServer();", "-\t\tThread.sleep(10 * 1000);", "+\t\tgenerateReportFile();", "-\t\tgenerateReportFile(xmlReport);", "+\t\tdom = TestUtils.getXMLReportDOM(new File(tempDir.getAbsolutePath(),", "+\t\t\t\t\"coverage.xml\"));", "-\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "+\t\tint hitCountAfter = TestUtils.getHitCount(dom,", "+\t\t\t\tSIMPLE_SERVLET_CLASSNAME, SAVE_DATA_METHOD_NAME);", "-\t\tint hitCountAfter = TestUtils.getHitCount(dom, SAVE_DATA_CLASSNAME,", "-\t\t\t\tSAVE_DATA_METHOD_NAME);", "-", "-\t\twebappServer.killServer();", "-", "-\t\tassertEquals(\"hit count should have increased by one\",", "+\t\ttester.stop();", "+\t\t", "+\t\tassertEquals(\"Hit count should have increased by one\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e038f7071a620872941130bd7a4dffa1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/test/java/net/sourceforge/cobertura/webapp/test/WebAppFunctionalTest.java", "commitBeforeChange": "2b194b3d77bf600da43b42901e6946bf29c86ff0", "commitAfterChange": "a26b3c4c66c38163a0a617a9215854c17c3271a0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void basicStartAndStopOfWebApp(boolean tomcat) throws Exception", "signatureAfterChange": "  \tprivate void instrumentWar()", "diff": ["-\tpublic void basicStartAndStopOfWebApp(boolean tomcat) throws Exception {", "-\t\tWebappServer webappServer = new WebappServer(webappServerDir, tomcat);", "-", "-\t\twebappServer.deployApp(srcDir, \"com.acme.*\");", "-", "-\t\twebappServer.withRunningServer();", "-", "-\t\twebappServer.pingServer();", "-", "-\t\tFile xmlReport = webappServer.getXmlReport();", "-", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tNode dom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tassertFalse(TestUtils.isMethodHit(dom,", "-\t\t\t\t\"com.acme.servlet.SimpleServlet\", \"doGet\"));", "-", "-\t\twebappServer.killServer();", "-\t\tThread.sleep(5 * 1000);", "-\t\tgenerateReportFile(xmlReport);", "-", "-\t\tdom = TestUtils.getXMLReportDOM(xmlReport);", "-", "-\t\tassertTrue(\"doGet has hits=0 in cobertura report\", TestUtils", "-\t\t\t\t.isMethodHit(dom, \"com.acme.servlet.SimpleServlet\", \"doGet\"));", "+", "+\tprivate void instrumentWar() {", "+\t\tinstrumentWar(new File(tempDir, \"webapps/simple.war\"));", "+\t\t// Future: There is an issue with ServetTester api and adding a custom classloader.", "+\t\t// When specify the instrumented .war file it still prefers to use the", "+\t\t// target/test-classes/**/*.class files instead. In this situation we instrument the", "+\t\t// classes directly but a better solution should be provided for this.", "+\t\tinstrumentClasses(new File(\"target/test-classes/com/acme/servlet/SimpleServlet.class\"));", "+\t}"]}]}