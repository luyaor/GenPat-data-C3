{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a822e3ba468d3754f6a82ddbd4e97d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6dd7f839008af719cc0daf9690cc5b", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "39aff69c052bed11ddf0e72014f573a749d7b423", "commitAfterChange": "d2a99fd01a0928b8540b82a22d6a1f3dfabcc94a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tprivate void getBothLocks(LineData other)", "signatureAfterChange": "  \tpublic int getNumberOfJumps()", "diff": ["-\tprivate void getBothLocks(LineData other) {", "-\t\t/*", "-\t\t * To prevent deadlock, we need to get both locks or none at all.", "-\t\t * ", "-\t\t * When this method returns, the thread will have both locks.", "-\t\t * Make sure you unlock them!", "-\t\t */", "-\t\tboolean myLock = false;", "-\t\tboolean otherLock = false;", "-\t\twhile ((!myLock) || (!otherLock))", "-\t\t{", "-\t\t\ttry", "-\t\t\t{", "-\t\t\t\tmyLock = lock.tryLock();", "-\t\t\t\totherLock = other.lock.tryLock();", "-\t\t\t}", "-\t\t\tfinally", "-\t\t\t{", "-\t\t\t\tif ((!myLock) || (!otherLock))", "-\t\t\t\t{", "-\t\t\t\t\t//could not obtain both locks - so unlock the one we got.", "-\t\t\t\t\tif (myLock)", "-\t\t\t\t\t{", "-\t\t\t\t\t\tlock.unlock();", "-\t\t\t\t\t}", "-\t\t\t\t\tif (otherLock)", "-\t\t\t\t\t{", "-\t\t\t\t\t\tother.lock.unlock();", "-\t\t\t\t\t}", "-\t\t\t\t\t//do a yield so the other threads will get to work.", "-\t\t\t\t\tThread.yield();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "+", "+\tpublic int getNumberOfJumps() {", "+\t\treturn jumps==null?0:jumps.size();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65dcf18c38ca2af03edadae7d0d843f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SwitchData.java", "commitBeforeChange": "8ea55afb103f49353a2e9875f78db3c0202d4a87", "commitAfterChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void getBothLocks(SwitchData other)", "signatureAfterChange": " \t \tpublic int getMaxBranches()", "diff": ["-", "-\tprivate void getBothLocks(SwitchData other) {", "-\t\t/*", "-\t\t * To prevent deadlock, we need to get both locks or none at all.", "-\t\t * ", "-\t\t * When this method returns, the thread will have both locks.", "-\t\t * Make sure you unlock them!", "-\t\t */", "-\t\tboolean myLock = false;", "-\t\tboolean otherLock = false;", "-\t\twhile ((!myLock) || (!otherLock))", "-\t\t{", "-\t\t\ttry", "-\t\t\t{", "-\t\t\t\tmyLock = lock.tryLock();", "-\t\t\t\totherLock = other.lock.tryLock();", "-\t\t\t}", "-\t\t\tfinally", "-\t\t\t{", "-\t\t\t\tif ((!myLock) || (!otherLock))", "-\t\t\t\t{", "-\t\t\t\t\t//could not obtain both locks - so unlock the one we got.", "-\t\t\t\t\tif (myLock)", "-\t\t\t\t\t{", "-\t\t\t\t\t\tlock.unlock();", "-\t\t\t\t\t}", "-\t\t\t\t\tif (otherLock)", "-\t\t\t\t\t{", "-\t\t\t\t\t\tother.lock.unlock();", "-\t\t\t\t\t}", "-\t\t\t\t\t//do a yield so the other threads will get to work.", "-\t\t\t\t\tThread.yield();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t", "+\tpublic int getMaxBranches() {", "+\t\treturn maxBranches;"]}]}