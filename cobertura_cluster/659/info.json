{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7a4ff9ee97d566a4276b2731a0e2f24", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4b7cfda6961c4c27b9435843bec42c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/TouchCollector.java", "commitBeforeChange": "39aff69c052bed11ddf0e72014f573a749d7b423", "commitAfterChange": "d2a99fd01a0928b8540b82a22d6a1f3dfabcc94a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\t@Override \t\tpublic boolean equals(Object obj)", "signatureAfterChange": "  \t\tprivate LineData getOrCreateLine(int classLine)", "diff": ["-\t\t}", "-\t\t@Override", "-\t\tpublic boolean equals(Object obj) {", "-\t\t\tif (this == obj)", "-\t\t\t\treturn true;", "-\t\t\tif (obj == null)", "-\t\t\t\treturn false;", "-\t\t\tif (getClass() != obj.getClass())", "-\t\t\t\treturn false;", "-\t\t\tLineTouchData other = (LineTouchData) obj;", "-\t\t\tif (classId != other.classId)", "-\t\t\t\treturn false;", "-\t\t\tif (lineNumber != other.lineNumber)", "-\t\t\t\treturn false;", "-\t\t\treturn true;", "-\t\t}\t\t", "+\t\tprivate LineData getOrCreateLine(int classLine) {", "+\t\t\tLineData ld=classData.getLineData(classLine);", "+\t\t\tif(ld==null){", "+\t\t\t\tld=classData.addLine(classLine, null, null);", "+\t\t\t}", "+\t\t\treturn ld;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd21fa9c7eaf21ec9dd49bcf20103bcd", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/TouchCollector.java", "commitBeforeChange": "39aff69c052bed11ddf0e72014f573a749d7b423", "commitAfterChange": "d2a99fd01a0928b8540b82a22d6a1f3dfabcc94a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t\t@Override \t\tpublic boolean equals(Object obj)", "signatureAfterChange": " \t\t \t\tpublic void putLineTouchPoint(int classLine, int counterId, String methodName, String methodDescription)", "diff": ["-\t\t}", "-\t\t@Override", "-\t\tpublic boolean equals(Object obj) {", "-\t\t\tif (this == obj)", "-\t\t\t\treturn true;", "-\t\t\tif (!super.equals(obj))", "-\t\t\t\treturn false;", "-\t\t\tif (getClass() != obj.getClass())", "-\t\t\t\treturn false;", "-\t\t\tJumpTouchData other = (JumpTouchData) obj;", "-\t\t\tif (branch != other.branch)", "-\t\t\t\treturn false;", "-\t\t\tif (branchNumber != other.branchNumber)", "-\t\t\t\treturn false;", "-\t\t\treturn true;", "-\t\t}\t\t", "+\t\t", "+\t\tpublic void putLineTouchPoint(int classLine, int counterId, String methodName, String methodDescription) {", "+\t\t\tupdateLine(classLine);", "+//\t\t\tSystem.out.println(\"Line: \"+methodName+\":\"+methodDescription+\":\"+classLine+\":\"+counterId +\" = \"+res[counterId]);\t\t\t\t", "+\t\t\tLineData ld=classData.addLine(classLine, methodName,methodDescription);", "+\t\t\tld.touch(res[counterId]);", "+\t\t}"]}]}