{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83f70f292952ba22ce659ea428457222", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1efb0166897f3031816692edc7dc7ccc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/dsl/ArgumentsBuilder.java", "commitBeforeChange": "bc93294332e3e5efecbe1281a0fb379611f3a0b8", "commitAfterChange": "213aee7d4c04a7e8bd9d7b16d07fd7c2dfa60684", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public ArgumentsBuilder listOfFilesToInstrument(String listFileName)", "signatureAfterChange": "  \tpublic ArgumentsBuilder listOfFilesToInstrument(String listFileName)", "diff": ["-        public ArgumentsBuilder listOfFilesToInstrument(String listFileName) {", "-\t\tString baseDir = getBaseDirectory().getPath();", "-                try {", "-                        File file = new File(listFileName);", "-                        FileReader fileReader = new FileReader(file);", "-                        BufferedReader bufferedReader = new BufferedReader(fileReader);", "-                        StringBuffer stringBuffer = new StringBuffer();", "-                        String line;", "-                        while ((line = bufferedReader.readLine()) != null) {", "-                                line = line.replace(baseDir, \"\");", "-                                filesToInstrument.add(new CoberturaFile(baseDir, line));", "-                        }", "-                        fileReader.close();", "-                } catch (IOException e) {", "-                  e.printStackTrace();", "-                }", "-                return this;", "-        }", "+\tpublic ArgumentsBuilder listOfFilesToInstrument(String listFileName) {", "+\t\tString baseDir = getBaseDirectory();", "+\t\ttry {", "+\t\t\tFile file = new File(listFileName);", "+\t\t\tFileReader fileReader = new FileReader(file);", "+\t\t\tBufferedReader bufferedReader = new BufferedReader(fileReader);", "+\t\t\tStringBuffer stringBuffer = new StringBuffer();", "+\t\t\tString line;", "+\t\t\twhile ((line = bufferedReader.readLine()) != null) {", "+\t\t\t\tline = line.replace(baseDir, \"\");", "+\t\t\t\tfilesToInstrument.add(new CoberturaFile(baseDir, line));", "+\t\t\t}", "+\t\t\tfileReader.close();", "+\t\t} catch (IOException e) {", "+\t\t  e.printStackTrace();", "+\t\t}", "+\t\treturn this;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e55c35638ab01876f35efe9dc5f5e48", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/javancss/src/main/java/javancss/test/JavancssTest.java", "commitBeforeChange": "9ac55d5dd9da7acba5767458e0419a845f53dcb6", "commitAfterChange": "ec2f1cc4f2aad1148c57a4054f837fd08fb09811", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void _doJvdcsTest(int testFileNumber, int expectedJvdcsResult)", "signatureAfterChange": "      private void _doJvdcsTest( int testFileNumber, int expectedJvdcsResult )", "diff": ["-    private void _doJvdcsTest(int testFileNumber, int expectedJvdcsResult) {", "-                Javancss pJavancss;", "-                pJavancss = new Javancss( FileUtil.concatPath( _sTestDir", "-                                                               , \"Test\" + testFileNumber + \".java\"    ) );", "-                Vector vObjectMetrics = pJavancss.getObjectMetrics();", "-                Vector vClassMetrics = (Vector)vObjectMetrics.elementAt( 0 );", "-                int jvdcs      = ((Integer)vClassMetrics.elementAt(OBJ_JVDCS)).intValue();", "-                /*int jvdc = pJavancss.getJvdc();*/", "-                bugIf( jvdcs != expectedJvdcsResult", "-                   , \"Parsing file Test\" + testFileNumber + \".java failed. Jvdc is \"", "-                     + jvdcs ", "-                     + \" and not \" + expectedJvdcsResult + \".\"", "-                       );", "-        }", "+    private void _doJvdcsTest( int testFileNumber, int expectedJvdcsResult )", "+    {", "+        Javancss pJavancss;", "+        pJavancss = new Javancss( new File( testDir, \"Test\" + testFileNumber + \".java\" ) );", "+        List vObjectMetrics = pJavancss.getObjectMetrics();", "+        List vClassMetrics = (List) vObjectMetrics.get( 0 );", "+        int jvdcs = ( (Integer) vClassMetrics.get( OBJ_JVDCS ) ).intValue();", "+        /* int jvdc = pJavancss.getJvdc(); */", "+        bugIf( jvdcs != expectedJvdcsResult, \"Parsing file Test\" + testFileNumber + \".java failed. Jvdc is \" + jvdcs", "+                        + \" and not \" + expectedJvdcsResult + \".\" );", "+    }"]}]}