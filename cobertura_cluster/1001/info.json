{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84d45e182a0ecbbd9aeac12c4ffe79fa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ddbe3e0d1f318f3d4d2bf4a991fdde0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/InjectCodeClassInstrumenter.java", "commitBeforeChange": "19ceee05d925a56765de9c8658cd706bba52717d", "commitAfterChange": "8436089ae83994fd4e20a6c9d4bf74654ba39159", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t@Override \tpublic void visitEnd()", "signatureAfterChange": " \t@Override \tpublic void visitEnd()", "diff": ["-\t\t\tMethodVisitor mv=super.visitMethod(Opcodes.ACC_STATIC, \"<clinit>\", \"()V\", null,\tnull);", "+\t\t\tMethodVisitor mv = super.visitMethod(Opcodes.ACC_STATIC, \"<clinit>\", \"()V\", null,\tnull);", "-\t\t\tcodeProvider.generateCINITmethod(mv, classMap.getClassName(),classMap.getMaxCounterId()+1);", "+\t\t\tcodeProvider.generateCallCoberturaInitMethod(mv, classMap.getClassName());", "+\t\tcodeProvider.generateCoberturaInitMethod(cv, classMap.getClassName(), ", "+\t\t\t\tclassMap.getMaxCounterId() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9330ec1f217316bed20a35219c8b13f0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coverage/CoverageData.java", "commitBeforeChange": "a119f823fa866e69698a670d633a7067d8632a28", "commitAfterChange": "860d83d968c4c37826a8e5fbbd1ba35cd97da38d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate LineInformation getLineInformation(int lineNumber)", "signatureAfterChange": "  \tprivate LineInformation getLineInformation(int lineNumber)", "diff": ["+\tprivate LineInformation getLineInformation(int lineNumber)", "+\t{", "+\t\tLineInformation lineInformation = (LineInformation)lines", "+\t\t\t\t.get(new Integer(lineNumber));", "+\t\tif (lineInformation == null)", "+\t\t{", "+\t\t\tlineInformation = new LineInformation(lineNumber);", "+\t\t\tSystem.out.println(\"QQQ adding line \" + lineNumber);", "+\t\t\tlines.put(new Integer(lineNumber), lineInformation);", "+\t\t}", "+\t\treturn lineInformation;", "+", "+\t}", "-", "-\tprivate LineInformation getLineInformation(int lineNumber)", "-\t{", "-\t\tLineInformation lineInformation = (LineInformation)lines", "-\t\t\t\t.get(new Integer(lineNumber));", "-\t\tif (lineInformation == null)", "-\t\t{", "-\t\t\tlineInformation = new LineInformation(lineNumber);", "-\t\t\tlines.put(new Integer(lineNumber), lineInformation);", "-\t\t}", "-\t\treturn lineInformation;", "-"]}]}