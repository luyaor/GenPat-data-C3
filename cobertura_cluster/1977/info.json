{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ab5059f6359c14823635ff614512ac5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217d8d46fc39f6ab78087eb0771ce1a2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass2/BuildClassMapClassVisitor.java", "commitBeforeChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "commitAfterChange": "6f41b309127d9fbf50973998e4a8da088f5c332e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Override \tpublic void visit(int version, int access, String name, String signature, \t\t\tString parent, String[] interfaces)", "signatureAfterChange": " \t@Override \tpublic void visit(int version, int access, String name, String signature, \t\t\tString parent, String[] interfaces)", "diff": ["-\t\tif (((access & Opcodes.ACC_INTERFACE) != 0)", "-\t\t\t\t|| Arrays.asList(interfaces).contains(Type.getInternalName(HasBeenInstrumented.class))){", "+\t\tif ((access & Opcodes.ACC_INTERFACE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49e3efa6f2e23967a239817948069f49", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass2/BuildClassMapClassVisitor.java", "commitBeforeChange": "9ccc6bc0443cb6df4d5f870a59c4a26b900db956", "commitAfterChange": "6f41b309127d9fbf50973998e4a8da088f5c332e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Override \tpublic MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions)", "signatureAfterChange": " \t@Override \tpublic MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions)", "diff": ["+\t\tif (((access & Opcodes.ACC_STATIC) != 0) ", "+\t\t\t\t&& CodeProvider.COBERTURA_INIT_METHOD_NAME.equals(name)) {", "+\t\t  toInstrument = false; //  The class has bean already instrumented.", "+\t\t}", "+\t\t"]}]}