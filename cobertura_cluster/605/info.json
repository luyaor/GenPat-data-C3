{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d81dfdb329cdf621f5aa223bf3ee6bb2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d0facf1c79f01ba7b0c46b9e3141a9", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 115, "signatureBeforeChange": "\r \r   final public void Assignment() throws ParseException", "signatureAfterChange": "   final public void TryWithResources() throws ParseException", "diff": ["-\r", "-  final public void Assignment() throws ParseException {\r", "-    PrimaryExpression();\r", "-    AssignmentOperator();\r", "-    Expression();\r", "-  }\r", "+/** Try-with-resource parameter with jdk 7**/", "+  final public void TryWithResources() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case LPAREN:", "+      jj_consume_token(LPAREN);", "+      label_63:", "+      while (true) {", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case ASSERT:", "+        case BOOLEAN:", "+        case BYTE:", "+        case CHAR:", "+        case DOUBLE:", "+        case ENUM:", "+        case FALSE:", "+        case FLOAT:", "+        case INT:", "+        case LONG:", "+        case NEW:", "+        case NULL:", "+        case SHORT:", "+        case SUPER:", "+        case THIS:", "+        case TRUE:", "+        case VOID:", "+        case INTEGER_LITERAL:", "+        case FLOATING_POINT_LITERAL:", "+        case CHARACTER_LITERAL:", "+        case STRING_LITERAL:", "+        case IDENTIFIER:", "+        case LPAREN:", "+        case BANG:", "+        case TILDE:", "+        case INCR:", "+        case DECR:", "+        case PLUS:", "+        case MINUS:", "+          ;", "+          break;", "+        default:", "+          jj_la1[161] = jj_gen;", "+          break label_63;", "+        }", "+        Expression();", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case SEMICOLON:", "+          jj_consume_token(SEMICOLON);", "+          break;", "+        default:", "+          jj_la1[162] = jj_gen;", "+          ;", "+        }", "+      }", "+      jj_consume_token(RPAREN);", "+      break;", "+    default:", "+      jj_la1[163] = jj_gen;", "+      ;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62ddc1e31fa807250069af985bcb1793", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 115, "signatureBeforeChange": "\r \r   final public void Assignment() throws ParseException", "signatureAfterChange": "   final public void TryWithResources() throws ParseException", "diff": ["-\r", "-  final public void Assignment() throws ParseException {\r", "-    PrimaryExpression();\r", "-    AssignmentOperator();\r", "-    Expression();\r", "-  }\r", "+/** Try-with-resource parameter with jdk 7**/", "+  final public void TryWithResources() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case LPAREN:", "+      jj_consume_token(LPAREN);", "+      label_63:", "+      while (true) {", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case ASSERT:", "+        case BOOLEAN:", "+        case BYTE:", "+        case CHAR:", "+        case DOUBLE:", "+        case ENUM:", "+        case FALSE:", "+        case FLOAT:", "+        case INT:", "+        case LONG:", "+        case NEW:", "+        case NULL:", "+        case SHORT:", "+        case SUPER:", "+        case THIS:", "+        case TRUE:", "+        case VOID:", "+        case INTEGER_LITERAL:", "+        case FLOATING_POINT_LITERAL:", "+        case CHARACTER_LITERAL:", "+        case STRING_LITERAL:", "+        case IDENTIFIER:", "+        case LPAREN:", "+        case BANG:", "+        case TILDE:", "+        case INCR:", "+        case DECR:", "+        case PLUS:", "+        case MINUS:", "+          ;", "+          break;", "+        default:", "+          jj_la1[161] = jj_gen;", "+          break label_63;", "+        }", "+        Expression();", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case SEMICOLON:", "+          jj_consume_token(SEMICOLON);", "+          break;", "+        default:", "+          jj_la1[162] = jj_gen;", "+          ;", "+        }", "+      }", "+      jj_consume_token(RPAREN);", "+      break;", "+    default:", "+      jj_la1[163] = jj_gen;", "+      ;", "+    }", "+  }"]}]}