{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "981fa495cf36f63e5b91699655c65190", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c2074997a46f4f0141a853a42c3ee6f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "\r \r   final public void BooleanLiteral() throws ParseException", "signatureAfterChange": "    final public void BooleanLiteral() throws ParseException", "diff": ["-\r", "-  final public void BooleanLiteral() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case TRUE:\r", "-      jj_consume_token(TRUE);\r", "-      break;\r", "-    case FALSE:\r", "-      jj_consume_token(FALSE);\r", "-      break;\r", "-    default:\r", "-      jj_la1[128] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void BooleanLiteral() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case TRUE:", "+      jj_consume_token(TRUE);", "+      break;", "+    case FALSE:", "+      jj_consume_token(FALSE);", "+      break;", "+    default:", "+      jj_la1[129] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5255b13a25c23db2ad9276e893f302", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "\r \r   final public void BooleanLiteral() throws ParseException", "signatureAfterChange": "    final public void BooleanLiteral() throws ParseException", "diff": ["-\r", "-  final public void BooleanLiteral() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case TRUE:\r", "-      jj_consume_token(TRUE);\r", "-      break;\r", "-    case FALSE:\r", "-      jj_consume_token(FALSE);\r", "-      break;\r", "-    default:\r", "-      jj_la1[128] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void BooleanLiteral() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case TRUE:", "+      jj_consume_token(TRUE);", "+      break;", "+    case FALSE:", "+      jj_consume_token(FALSE);", "+      break;", "+    default:", "+      jj_la1[129] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}]}