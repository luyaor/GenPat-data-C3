{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "debe9f3b691be9e3044b95d52fbf6abf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067e720883aaf7b575080dc080e50ef7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/reporting/CoverageTest.java", "commitBeforeChange": "7cdece92ea0660e086a27d07d0eef3df4b583a23", "commitAfterChange": "100512ee483a0d8eebc3eb78a5d8913b7b64ddb6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testCoverage()", "signatureAfterChange": "  \tpublic void testCoverage()", "diff": ["-\t\tCoverage coverage = new Coverage();", "+\t\tCoverageReport coverage = new CoverageReport(Collections.EMPTY_MAP);", "-\t\tassertEquals(clazz1.getNumberOfBranches(), coverage", "-\t\t\t\t.getNumberOfBranches());", "+\t\tassertEquals(clazz1.getNumberOfBranches(), coverage.getNumberOfBranches());", "-\t\tassertEquals(clazz1.getBranchCoverageRate(), coverage", "-\t\t\t\t.getBranchCoverageRate(), 0.00001);", "-\t\tassertEquals(clazz1.getLineCoverageRate(), coverage", "-\t\t\t\t.getLineCoverageRate(), 0.00001);", "+\t\tassertEquals(clazz1.getBranchCoverageRate(), coverage.getBranchCoverageRate(), 0.00001);", "+\t\tassertEquals(clazz1.getLineCoverageRate(), coverage.getLineCoverageRate(), 0.00001);", "-\t\tassertEquals(clazz1.getNumberOfBranches()", "-\t\t\t\t+ clazz2.getNumberOfBranches(), coverage", "-\t\t\t\t.getNumberOfBranches());", "-\t\tassertEquals(clazz1.getNumberOfLines() + clazz2.getNumberOfLines(),", "-\t\t\t\tcoverage.getNumberOfLines());", "-\t\tassertEquals(0.5, coverage.getBranchCoverageRate(), 0.00001);", "+\t\tassertEquals(clazz1.getNumberOfBranches() + clazz2.getNumberOfBranches(), coverage.getNumberOfBranches());", "+\t\tassertEquals(clazz1.getNumberOfLines() + clazz2.getNumberOfLines(), coverage.getNumberOfLines());", "+\t\tassertEquals(0.85, coverage.getBranchCoverageRate(), 0.008);", "-\t\t\t\tclazz1.getNumberOfBranches() + clazz2.getNumberOfBranches()", "-\t\t\t\t\t\t+ clazz3.getNumberOfBranches(), coverage", "-\t\t\t\t\t\t.getNumberOfBranches());", "-\t\tassertEquals(clazz1.getNumberOfLines() + clazz2.getNumberOfLines()", "-\t\t\t\t+ clazz3.getNumberOfLines(), coverage.getNumberOfLines());", "-\t\tassertEquals(0.5, coverage.getBranchCoverageRate(), 0.00001);", "-\t\tassertEquals(0.5, coverage.getLineCoverageRate(), 0.00001);", "+\t\t\t\tclazz1.getNumberOfBranches() + clazz2.getNumberOfBranches() + clazz3.getNumberOfBranches(), ", "+\t\t\t\tcoverage.getNumberOfBranches()", "+\t\t\t\t);", "+", "+\t\tassertEquals(", "+\t\t        clazz1.getNumberOfLines() + clazz2.getNumberOfLines() + clazz3.getNumberOfLines(), ", "+\t\t        coverage.getNumberOfLines()", "+\t\t        );", "+\t\t", "+\t\tassertEquals(0.7, coverage.getBranchCoverageRate(), 0.00001);", "+\t\tassertEquals(0.4857, coverage.getLineCoverageRate(), 0.001);", "-\t\tassertEquals(clazz1.getNumberOfBranches()", "-\t\t\t\t+ clazz2.getNumberOfBranches(), coverage", "-\t\t\t\t.getNumberOfBranches());", "-\t\tassertEquals(clazz1.getNumberOfLines() + clazz2.getNumberOfLines(),", "-\t\t\t\tcoverage.getNumberOfLines());", "-\t\tassertEquals(0.5, coverage.getBranchCoverageRate(), 0.00001);", "+", "+\t\tassertEquals(clazz1.getNumberOfBranches() + clazz2.getNumberOfBranches(), coverage.getNumberOfBranches());", "+\t\tassertEquals(clazz1.getNumberOfLines() + clazz2.getNumberOfLines(), coverage.getNumberOfLines());", "+\t\tassertEquals(0.85, coverage.getBranchCoverageRate(), 0.008);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e625472dec2327371e6cf647619d96f4", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/LineDataTest.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testGetNumbers()", "signatureAfterChange": "  \tpublic void testGetNumbers()", "diff": ["-\t\tassertEquals(0, a.getNumberOfCoveredBranches());", "+\t\tassertEquals(0, a.getNumberOfCoveredBranches());", "-\t\ta.setBranch(true);", "+\t\ta.addJump(0);", "+\t\ta.addJump(1);", "-\t\tassertEquals(0, a.getNumberOfCoveredBranches());", "-\t\tassertEquals(1, a.getNumberOfValidBranches());", "+\t\tassertEquals(0, a.getNumberOfCoveredBranches());", "+\t\tassertEquals(4, a.getNumberOfValidBranches());", "-\t\t\tassertEquals(1, a.getBranchCoverageRate(), 0);", "+\t\t\tassertEquals(0, a.getBranchCoverageRate(), 0);", "-\t\t\tassertEquals(1, a.getNumberOfCoveredBranches());", "-\t\t\tassertEquals(1, a.getNumberOfValidBranches());", "+\t\t\tassertEquals(0, a.getNumberOfCoveredBranches());", "+\t\t\tassertEquals(4, a.getNumberOfValidBranches());", "-\t\ta.setBranch(false);", "+\t\ta.touchJump(0, true);", "+\t\tassertEquals(0.25, a.getBranchCoverageRate(), 0);", "+\t\tassertEquals(1, a.getLineCoverageRate(), 0);", "+\t\tassertEquals(1, a.getNumberOfCoveredLines());", "+\t\tassertEquals(1, a.getNumberOfCoveredBranches());", "+\t\tassertEquals(4, a.getNumberOfValidBranches());", "+\t\tassertEquals(1, a.getNumberOfValidLines());", "+", "+\t\ta.touchJump(1, false);", "+\t\tassertEquals(0.5, a.getBranchCoverageRate(), 0);", "+\t\tassertEquals(1, a.getLineCoverageRate(), 0);", "+\t\tassertEquals(1, a.getNumberOfCoveredLines());", "+\t\tassertEquals(2, a.getNumberOfCoveredBranches());", "+\t\tassertEquals(4, a.getNumberOfValidBranches());", "+\t\tassertEquals(1, a.getNumberOfValidLines());", "+", "+\t\ta.touchJump(1, true);", "+\t\tassertEquals(0.75, a.getBranchCoverageRate(), 0);", "+\t\tassertEquals(1, a.getLineCoverageRate(), 0);", "+\t\tassertEquals(1, a.getNumberOfCoveredLines());", "+\t\tassertEquals(3, a.getNumberOfCoveredBranches());", "+\t\tassertEquals(4, a.getNumberOfValidBranches());", "+\t\tassertEquals(1, a.getNumberOfValidLines());", "+", "+\t\ta.touchJump(0, false);", "-\t\tassertEquals(0, a.getNumberOfCoveredBranches());", "-\t\tassertEquals(0, a.getNumberOfValidBranches());", "+\t\tassertEquals(4, a.getNumberOfCoveredBranches());", "+\t\tassertEquals(4, a.getNumberOfValidBranches());"]}]}