{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d54b5d8edfd1ef7e1a473462d927ac5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b011119f8c0c482b9dcc5106c6b5ae2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate LineData getLineData(int lineNumber)", "signatureAfterChange": "  \tprivate LineData getLineData(int lineNumber)", "diff": ["-\t\treturn (LineData)children.get(new Integer(lineNumber));", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\treturn (LineData)children.get(Integer.valueOf(lineNumber));", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2df9b0ae0812e0256f37359a9773d15c", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void addLineJump(int lineNumber, int branchNumber)", "signatureAfterChange": "  \tpublic void addLineJump(int lineNumber, int branchNumber)", "diff": ["-\t\tLineData lineData = getLineData(lineNumber);", "-\t\tif (lineData != null) ", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tlineData.addJump(branchNumber);", "-\t\t\tthis.branches.put(new Integer(lineNumber), lineData);", "+\t\t\tLineData lineData = getLineData(lineNumber);", "+\t\t\tif (lineData != null) ", "+\t\t\t{", "+\t\t\t\tlineData.addJump(branchNumber);", "+\t\t\t\tthis.branches.put(Integer.valueOf(lineNumber), lineData);", "+\t\t\t}", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "315ee9fd13f77444e540c8df4859bd53", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void addLineSwitch(int lineNumber, int switchNumber, int min, int max)", "signatureAfterChange": "  \tpublic void addLineSwitch(int lineNumber, int switchNumber, int min, int max)", "diff": ["-\t\tLineData lineData = getLineData(lineNumber);", "-\t\tif (lineData != null) ", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tlineData.addSwitch(switchNumber, min, max);", "-\t\t\tthis.branches.put(new Integer(lineNumber), lineData);", "+\t\t\tLineData lineData = getLineData(lineNumber);", "+\t\t\tif (lineData != null) ", "+\t\t\t{", "+\t\t\t\tlineData.addSwitch(switchNumber, min, max);", "+\t\t\t\tthis.branches.put(Integer.valueOf(lineNumber), lineData);", "+\t\t\t}", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "708b289b18c3d193de9790b2959d4980", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void addLineSwitch(int lineNumber, int switchNumber, int[] keys)", "signatureAfterChange": "  \tpublic void addLineSwitch(int lineNumber, int switchNumber, int[] keys)", "diff": ["-\t\tLineData lineData = getLineData(lineNumber);", "-\t\tif (lineData != null) ", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tlineData.addSwitch(switchNumber, keys);", "-\t\t\tthis.branches.put(new Integer(lineNumber), lineData);", "+\t\t\tLineData lineData = getLineData(lineNumber);", "+\t\t\tif (lineData != null) ", "+\t\t\t{", "+\t\t\t\tlineData.addSwitch(switchNumber, keys);", "+\t\t\t\tthis.branches.put(Integer.valueOf(lineNumber), lineData);", "+\t\t\t}", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94c75210f17b167d89099fd5faf6a34e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic boolean isValidSourceLineNumber(int lineNumber)", "signatureAfterChange": " \tpublic boolean isValidSourceLineNumber(int lineNumber)", "diff": ["-\t\treturn children.containsKey(new Integer(lineNumber));", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\treturn children.containsKey(Integer.valueOf(lineNumber));", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78adc3c961e2ad27401dfef44ccddde", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic boolean hasBranch(int lineNumber)", "signatureAfterChange": " \tpublic boolean hasBranch(int lineNumber)", "diff": ["-\t\treturn branches.containsKey(new Integer(lineNumber));", "+\t\tlock.lock();", "+\t\ttry", "+\t\t{", "+\t\t\treturn branches.containsKey(Integer.valueOf(lineNumber));", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}]}