{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4dde0aeaeaa687570f264a2bd7d740c6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c2f4db08947d479a0a5293f5adba822", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "\r \r   final public void StatementExpression() throws ParseException", "signatureAfterChange": "    final public void StatementExpression() throws ParseException", "diff": ["-\r", "-  final public void StatementExpression() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case INCR:\r", "-      PreIncrementExpression();\r", "-      break;\r", "-    case DECR:\r", "-      PreDecrementExpression();\r", "-      break;\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-      PrimaryExpression();\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ASSIGN:\r", "-      case INCR:\r", "-      case DECR:\r", "-      case PLUSASSIGN:\r", "-      case MINUSASSIGN:\r", "-      case STARASSIGN:\r", "-      case SLASHASSIGN:\r", "-      case ANDASSIGN:\r", "-      case ORASSIGN:\r", "-      case XORASSIGN:\r", "-      case REMASSIGN:\r", "-      case LSHIFTASSIGN:\r", "-      case RSIGNEDSHIFTASSIGN:\r", "-      case RUNSIGNEDSHIFTASSIGN:\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case INCR:\r", "-          jj_consume_token(INCR);\r", "-          break;\r", "-        case DECR:\r", "-          jj_consume_token(DECR);\r", "-          break;\r", "-        case ASSIGN:\r", "-        case PLUSASSIGN:\r", "-        case MINUSASSIGN:\r", "-        case STARASSIGN:\r", "-        case SLASHASSIGN:\r", "-        case ANDASSIGN:\r", "-        case ORASSIGN:\r", "-        case XORASSIGN:\r", "-        case REMASSIGN:\r", "-        case LSHIFTASSIGN:\r", "-        case RSIGNEDSHIFTASSIGN:\r", "-        case RUNSIGNEDSHIFTASSIGN:\r", "-          AssignmentOperator();\r", "-          Expression();\r", "-          break;\r", "-        default:\r", "-          jj_la1[142] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[143] = jj_gen;\r", "-        ;\r", "-      }\r", "-      break;\r", "-    default:\r", "-      jj_la1[144] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void StatementExpression() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case INCR:", "+      PreIncrementExpression();", "+      break;", "+    case DECR:", "+      PreDecrementExpression();", "+      break;", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+      PrimaryExpression();", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ASSIGN:", "+      case INCR:", "+      case DECR:", "+      case PLUSASSIGN:", "+      case MINUSASSIGN:", "+      case STARASSIGN:", "+      case SLASHASSIGN:", "+      case ANDASSIGN:", "+      case ORASSIGN:", "+      case XORASSIGN:", "+      case REMASSIGN:", "+      case LSHIFTASSIGN:", "+      case RSIGNEDSHIFTASSIGN:", "+      case RUNSIGNEDSHIFTASSIGN:", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case INCR:", "+          jj_consume_token(INCR);", "+          break;", "+        case DECR:", "+          jj_consume_token(DECR);", "+          break;", "+        case ASSIGN:", "+        case PLUSASSIGN:", "+        case MINUSASSIGN:", "+        case STARASSIGN:", "+        case SLASHASSIGN:", "+        case ANDASSIGN:", "+        case ORASSIGN:", "+        case XORASSIGN:", "+        case REMASSIGN:", "+        case LSHIFTASSIGN:", "+        case RSIGNEDSHIFTASSIGN:", "+        case RUNSIGNEDSHIFTASSIGN:", "+          AssignmentOperator();", "+          Expression();", "+          break;", "+        default:", "+          jj_la1[143] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[144] = jj_gen;", "+        ;", "+      }", "+      break;", "+    default:", "+      jj_la1[145] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932d49056ca1cd1a28aaf1fe88b06ad5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/util/FileFixture.java", "commitBeforeChange": "c622bee22587b63269a18b5c81b772e57972f11c", "commitAfterChange": "930f57b0124b47f1a801a2446dab92d8ba1c474e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void deleteTree(File fileRoot)", "signatureAfterChange": "      protected void deleteTree(File fileRoot)", "diff": ["-        } else {", "-            File[] files = fileRoot.listFiles();", "-            for (int i = 0; i < files.length; i++) {", "-                deleteTree(files[i]);", "-            }", "-            fileRoot.delete();", "+", "+        File[] files = fileRoot.listFiles();", "+        for (int i = 0; i < files.length; i++) {", "+            deleteTree(files[i]);", "+        }", "+        fileRoot.delete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7db112d8a85b055dfad0fe32a97793f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "\r \r   final public void StatementExpression() throws ParseException", "signatureAfterChange": "    final public void StatementExpression() throws ParseException", "diff": ["-\r", "-  final public void StatementExpression() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case INCR:\r", "-      PreIncrementExpression();\r", "-      break;\r", "-    case DECR:\r", "-      PreDecrementExpression();\r", "-      break;\r", "-    case ASSERT:\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case ENUM:\r", "-    case FALSE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case NEW:\r", "-    case NULL:\r", "-    case SHORT:\r", "-    case SUPER:\r", "-    case THIS:\r", "-    case TRUE:\r", "-    case VOID:\r", "-    case INTEGER_LITERAL:\r", "-    case FLOATING_POINT_LITERAL:\r", "-    case CHARACTER_LITERAL:\r", "-    case STRING_LITERAL:\r", "-    case IDENTIFIER:\r", "-    case LPAREN:\r", "-      PrimaryExpression();\r", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-      case ASSIGN:\r", "-      case INCR:\r", "-      case DECR:\r", "-      case PLUSASSIGN:\r", "-      case MINUSASSIGN:\r", "-      case STARASSIGN:\r", "-      case SLASHASSIGN:\r", "-      case ANDASSIGN:\r", "-      case ORASSIGN:\r", "-      case XORASSIGN:\r", "-      case REMASSIGN:\r", "-      case LSHIFTASSIGN:\r", "-      case RSIGNEDSHIFTASSIGN:\r", "-      case RUNSIGNEDSHIFTASSIGN:\r", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-        case INCR:\r", "-          jj_consume_token(INCR);\r", "-          break;\r", "-        case DECR:\r", "-          jj_consume_token(DECR);\r", "-          break;\r", "-        case ASSIGN:\r", "-        case PLUSASSIGN:\r", "-        case MINUSASSIGN:\r", "-        case STARASSIGN:\r", "-        case SLASHASSIGN:\r", "-        case ANDASSIGN:\r", "-        case ORASSIGN:\r", "-        case XORASSIGN:\r", "-        case REMASSIGN:\r", "-        case LSHIFTASSIGN:\r", "-        case RSIGNEDSHIFTASSIGN:\r", "-        case RUNSIGNEDSHIFTASSIGN:\r", "-          AssignmentOperator();\r", "-          Expression();\r", "-          break;\r", "-        default:\r", "-          jj_la1[142] = jj_gen;\r", "-          jj_consume_token(-1);\r", "-          throw new ParseException();\r", "-        }\r", "-        break;\r", "-      default:\r", "-        jj_la1[143] = jj_gen;\r", "-        ;\r", "-      }\r", "-      break;\r", "-    default:\r", "-      jj_la1[144] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void StatementExpression() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case INCR:", "+      PreIncrementExpression();", "+      break;", "+    case DECR:", "+      PreDecrementExpression();", "+      break;", "+    case ASSERT:", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case ENUM:", "+    case FALSE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case NEW:", "+    case NULL:", "+    case SHORT:", "+    case SUPER:", "+    case THIS:", "+    case TRUE:", "+    case VOID:", "+    case INTEGER_LITERAL:", "+    case FLOATING_POINT_LITERAL:", "+    case CHARACTER_LITERAL:", "+    case STRING_LITERAL:", "+    case IDENTIFIER:", "+    case LPAREN:", "+      PrimaryExpression();", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ASSIGN:", "+      case INCR:", "+      case DECR:", "+      case PLUSASSIGN:", "+      case MINUSASSIGN:", "+      case STARASSIGN:", "+      case SLASHASSIGN:", "+      case ANDASSIGN:", "+      case ORASSIGN:", "+      case XORASSIGN:", "+      case REMASSIGN:", "+      case LSHIFTASSIGN:", "+      case RSIGNEDSHIFTASSIGN:", "+      case RUNSIGNEDSHIFTASSIGN:", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case INCR:", "+          jj_consume_token(INCR);", "+          break;", "+        case DECR:", "+          jj_consume_token(DECR);", "+          break;", "+        case ASSIGN:", "+        case PLUSASSIGN:", "+        case MINUSASSIGN:", "+        case STARASSIGN:", "+        case SLASHASSIGN:", "+        case ANDASSIGN:", "+        case ORASSIGN:", "+        case XORASSIGN:", "+        case REMASSIGN:", "+        case LSHIFTASSIGN:", "+        case RSIGNEDSHIFTASSIGN:", "+        case RUNSIGNEDSHIFTASSIGN:", "+          AssignmentOperator();", "+          Expression();", "+          break;", "+        default:", "+          jj_la1[143] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        break;", "+      default:", "+        jj_la1[144] = jj_gen;", "+        ;", "+      }", "+      break;", "+    default:", "+      jj_la1[145] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}]}