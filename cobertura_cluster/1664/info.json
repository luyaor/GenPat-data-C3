{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9b2ad571396abf176c4c01fd9e0c8b3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d96f6f57be05367c973503e6ac3e888", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/ClassInstrumenter.java", "commitBeforeChange": "792c5093dbce280ed92358a7ad1456924b5e55ab", "commitAfterChange": "16403757be60e9df4fb5dd5f25f934e5bcad9472", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic MethodVisitor visitMethod(final int access, final String name, \t\t\tfinal String desc, final String signature, \t\t\tfinal String[] exceptions)", "signatureAfterChange": "  \tpublic MethodVisitor visitMethod(final int access, final String name, \t\t\tfinal String desc, final String signature, \t\t\tfinal String[] exceptions)", "diff": ["-\t\t\t\tthis.myName, access, name, desc, signature, exceptions, ignoreRegexs, ", "-\t\t\t\tignoreBranchesRegexs);", "+\t\t\t\tthis.myName, this.superName, access, name, desc, signature, exceptions, ", "+\t\t\t\tignoreRegexs, ignoreBranchesRegexs,  ignoreTrivial);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dbc91b240f90fae391604d85586f473", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/ClassInstrumenter.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic MethodVisitor visitMethod(final int access, final String name, \t\t\tfinal String desc, final String signature, \t\t\tfinal String[] exceptions)", "signatureAfterChange": "  \tpublic MethodVisitor visitMethod(final int access, final String name, \t\t\tfinal String desc, final String signature, \t\t\tfinal String[] exceptions)", "diff": ["-\t\treturn mv == null ? null : new MethodInstrumenter(classData, mv,", "-\t\t\t\tthis.myName, name, desc, ignoreRegexs);", "+      return mv == null ? null : new FirstPassMethodInstrumenter(classData, mv,", "+            this.myName, access, name, desc, signature, exceptions, ignoreRegexs, ", "+            ignoreBranchesRegexs);"]}]}