{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f10ec178c73e27fadbe7d129c7c9ba5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "996571334c073615c45569177a9e51f6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 89, "signatureBeforeChange": "\r \r   final public void AllocationExpression() throws ParseException", "signatureAfterChange": "\r \r   final public void AllocationExpression() throws ParseException", "diff": ["-    if (jj_2_36(2)) {\r", "+\r", "+        //Added by REYNAUD Sebastien (LOGICA)\r", "+        int oldJavadocs = _javadocs;\r", "+        int oldNcss = _ncss;\r", "+    if (jj_2_39(2)) {\r", "-          jj_la1[120] = jj_gen;\r", "+          jj_la1[131] = jj_gen;\r", "-                         _sClass += sName + \"$\" + _anonClassCount++;\r", "+                         //_sClass += sName + \"$\" + _anonClassCount ;//Removed by REYNAUD Sebastien (LOGICA)\r", "+\r", "+                                //Added by REYNAUD Sebastien (LOGICA)\r", "+                                _sClass += sName;\r", "+                                //\r", "+                                //Added by REYNAUD Sebastien (LOGICA)\r", "+                                ObjectMetric metric = new ObjectMetric();\r", "+                                metric.name = _sPackage + _sClass;\r", "+                                metric.ncss = _ncss - oldNcss;\r", "+                            metric.functions = _functions - oldFunctions;\r", "+                      metric.classes = _classes - oldClasses;\r", "+                        Token lastToken = getToken( 0 );\r", "+                        _vClasses.add( metric );\r", "+                        _pPackageMetric.functions += _functions - oldFunctions;\r", "+                        _pPackageMetric.classes++;\r", "+                                metric.javadocs = _javadocs - oldJavadocs;\r", "+                                //\r", "-            jj_la1[121] = jj_gen;\r", "+            jj_la1[132] = jj_gen;\r", "-          jj_la1[122] = jj_gen;\r", "+          jj_la1[133] = jj_gen;\r", "-        jj_la1[123] = jj_gen;\r", "+        jj_la1[134] = jj_gen;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41d432a74b57f177eed6313fd3f37e5", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "48f95094d36dfc0a50d7cb3328f1fa90adefb8bb", "commitAfterChange": "f9e2e0b895d2f39d8af57ae695af8dfce323a3f2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r \r   final public void UnmodifiedInterfaceDeclaration() throws ParseException", "signatureAfterChange": "\r \r   final public void UnmodifiedInterfaceDeclaration() throws ParseException", "diff": ["+\r", "+                //Added by REYNAUD Sebastien (LOGICA)\r", "+                int oldJavadocs = _javadocs;\r", "-      jj_la1[40] = jj_gen;\r", "+      jj_la1[46] = jj_gen;\r", "-      jj_la1[41] = jj_gen;\r", "+      jj_la1[47] = jj_gen;\r", "-    label_22:\r", "+    label_23:\r", "-        jj_la1[42] = jj_gen;\r", "-        break label_22;\r", "+        jj_la1[48] = jj_gen;\r", "+        break label_23;\r", "+                        //Added by REYNAUD Sebastien (LOGICA)\r", "+                        else\r", "+                        {\r", "+                        ObjectMetric metric1 = new ObjectMetric();\r", "+                  metric1.name = _sPackage + _sClass;\r", "+                        metric1.ncss = _ncss - oldNcss;\r", "+                  metric1.functions = _functions - oldFunctions;\r", "+                  metric1.classes = _classes - oldClasses;\r", "+                  Token lastToken = getToken( 0 );\r", "+                  _vClasses.add( metric1 );\r", "+                  _pPackageMetric.functions += _functions - oldFunctions;\r", "+                  _pPackageMetric.classes++;\r", "+                        //_pPackageMetric.javadocs += _javadocs;\r", "+                        metric1.javadocs = _javadocs - oldJavadocs;\r", "+                        }\r", "+                        //\r", "+\r"]}]}