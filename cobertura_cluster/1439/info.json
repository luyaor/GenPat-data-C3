{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e2489d77eae64a3b55e092e5d574f84", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c07c225fdb94374eea66572ad422e4e", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/instrument/CoberturaInstrumenter.java", "commitBeforeChange": "35acea63ae80bc6a1e7453e64f26fa350a167870", "commitAfterChange": "686ffbecc7fe730d4e67767186de755b501fcc7f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) \t\t\tthrows IOException", "signatureAfterChange": " \tpublic InstrumentationResult instrumentClass(InputStream inputStream) \t\t\tthrows IOException", "diff": ["-\t\t\t\tignoreRegexes, cv0.getDuplicatesLinesCollector(),", "+\t\t\t\tignoreRegexes, ignoreClassAnnotations,", "+\t\t\t\tcv0.getDuplicatesLinesCollector(),", "-\t\t\t *  BuildClassMapClassInstrumenter and DetectDuplicatedCodeClassVisitor has not modificated bytecode, ", "-\t\t\t *  so we can use any bytecode representation of that class. ", "+\t\t\t *  BuildClassMapClassInstrumenter and DetectDuplicatedCodeClassVisitor has not modificated bytecode,", "+\t\t\t *  so we can use any bytecode representation of that class."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717333b98fe0e0f95c6dd997e27136a1", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void addInstrumentationToSingleClass(File file)", "signatureAfterChange": "  \tprivate void addInstrumentationToSingleClass(File file)", "diff": ["-\t\t\tcv = new ClassInstrumenter(projectData, cw, ignoreRegexes);", "+\t\t\tcv = new ClassInstrumenter(projectData, cw, ignoreRegexes, ignoreBranchesRegexes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71958b61dc1704e2f8a32d6c247fbdc3", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/main/java/net/sourceforge/cobertura/dsl/ArgumentsBuilder.java", "commitBeforeChange": "35acea63ae80bc6a1e7453e64f26fa350a167870", "commitAfterChange": "686ffbecc7fe730d4e67767186de755b501fcc7f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic Arguments build()", "signatureAfterChange": "  \tpublic Arguments build()", "diff": ["-\t\t\t\tignoreMethodAnnotations, sources);", "+\t\t\t\tignoreMethodAnnotations, ignoreClassAnnotations, sources);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8765aa7ab2584d8d7c79662d7de77df2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate boolean addInstrumentationToArchive(CoberturaFile file, ZipInputStream archive, \t\t\tZipOutputStream output) throws Exception", "signatureAfterChange": "  \tprivate boolean addInstrumentationToArchive(CoberturaFile file, ZipInputStream archive, \t\t\tZipOutputStream output) throws Exception", "diff": ["-\t\t\t\t\t\t\tcw, ignoreRegexes);", "+\t\t\t\t\t\t\tcw, ignoreRegexes, ignoreBranchesRegexes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b400eaeca788b5e299eabd6a6a5729d0", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "792c5093dbce280ed92358a7ad1456924b5e55ab", "commitAfterChange": "16403757be60e9df4fb5dd5f25f934e5bcad9472", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void addInstrumentationToSingleClass(File file) throws Throwable", "signatureAfterChange": "  \tprivate void addInstrumentationToSingleClass(File file) throws Throwable", "diff": ["-\t\t\tcv = new ClassInstrumenter(projectData, cw, ignoreRegexes, ignoreBranchesRegexes);", "+\t\t\tcv = new ClassInstrumenter(projectData, cw, ignoreRegexes, ignoreBranchesRegexes,", "+\t                   ignoreTrivial);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb0c68c55a336096537102bc102d492", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "792c5093dbce280ed92358a7ad1456924b5e55ab", "commitAfterChange": "16403757be60e9df4fb5dd5f25f934e5bcad9472", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate boolean addInstrumentationToArchive(CoberturaFile file, ZipInputStream archive, \t\t\tZipOutputStream output) throws Throwable", "signatureAfterChange": "  \tprivate boolean addInstrumentationToArchive(CoberturaFile file, ZipInputStream archive, \t\t\tZipOutputStream output) throws Throwable", "diff": ["-\t\t\t\t\t\t\t\tcw, ignoreRegexes, ignoreBranchesRegexes);", "+\t\t\t\t\t\t\t\tcw, ignoreRegexes, ignoreBranchesRegexes,", "+\t\t\t\t\t\t\t\tignoreTrivial);"]}]}