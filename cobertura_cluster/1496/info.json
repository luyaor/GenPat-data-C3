{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf658a91ee73ea04505c0e54ef88153b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab53f04a1746c83d345a34f0e42a0956", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/FirstPassMethodInstrumenter.java", "commitBeforeChange": "792c5093dbce280ed92358a7ad1456924b5e55ab", "commitAfterChange": "16403757be60e9df4fb5dd5f25f934e5bcad9472", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FirstPassMethodInstrumenter(ClassData classData, final MethodVisitor mv, \t\t\tfinal String owner, final int access, final String name, final String desc,  \t\t\tfinal String signature, final String[] exceptions, final Collection ignoreRegexs, \t\t\tfinal Collection ignoreBranchesRegexs)", "signatureAfterChange": "  \tpublic FirstPassMethodInstrumenter(ClassData classData, final MethodVisitor mv, \t\t\tfinal String owner, final String superOwner, final int access, final String name, final String desc,  \t\t\tfinal String signature, final String[] exceptions, final Collection ignoreRegexs, \t\t\tfinal Collection ignoreBranchesRegexs,  \t\t\tfinal boolean ignoreTrivial)", "diff": ["-\t\t\tfinal String owner, final int access, final String name, final String desc, ", "+\t\t\tfinal String owner, final String superOwner, final int access, final String name, final String desc, ", "-\t\t\tfinal Collection ignoreBranchesRegexs)", "+\t\t\tfinal Collection ignoreBranchesRegexs, ", "+\t\t\tfinal boolean ignoreTrivial)", "-\t\twriterMethodVisitor = mv;", "+\t\tthis.writerMethodVisitor = mv;", "+\t\tthis.ownerSuperClass = superOwner;", "+\t\tthis.ignoreTrivial = ignoreTrivial;", "+", "+\t\tif (ignoreTrivial)", "+\t\t{", "+\t\t\tcheckForTrivialSignature();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db31208a51f233de8be32413c60d78ce", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/pass3/InjectCodeClassInstrumenter.java", "commitBeforeChange": "cd6bc28c213448c4f17fad67a6e8eae42d8d9463", "commitAfterChange": "6981a5ab040697261e06e872e609bd3dca7fd012", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes,ClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap)", "signatureAfterChange": " \tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes, boolean threadsafeRigorous, \t\t\tClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap, \t\t\tSet<String> ignoredMethods)", "diff": ["-\tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes,ClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap) {", "+\tpublic InjectCodeClassInstrumenter(ClassVisitor cv, Collection<Pattern> ignoreRegexes, boolean threadsafeRigorous,", "+\t\t\tClassMap classMap,Map<Integer, Map<Integer, Integer>> duplicatedLinesMap,", "+\t\t\tSet<String> ignoredMethods) {", "-\t\ttouchPointListener=new InjectCodeTouchPointListener(classMap,codeProvider);", "+\t\tthis.ignoredMethods = ignoredMethods;", "+\t\tcodeProvider = threadsafeRigorous ?  new AtomicArrayCodeProvider() : new FastArrayCodeProvider();", "+\t\ttouchPointListener=new InjectCodeTouchPointListener(classMap, codeProvider);\t\t"]}]}