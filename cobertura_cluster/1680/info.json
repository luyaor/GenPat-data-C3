{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d64de2b50e2ac36c7ce969176822420a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b8a345e8c47fa9faa78dd932f8bc53", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "47a36b11251526c5e9936089f03282ea0c599dba", "commitAfterChange": "fa6590b4914422a1fe749c75560371053ab58bee", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void addClassData(ClassData classData)", "signatureAfterChange": "  \tpublic void addClassData(ClassData classData)", "diff": ["-\t\tString packageName = ClassHelper.getPackageName(classData.getName());", "+\t\tString packageName = classData.getPackageName();", "-\t\t\tchildren.put(packageName, packageData);", "+\t\t\tthis.children.put(packageName, packageData);", "+\t\tthis.classes.put(classData.getName(), classData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c988e447ad8f1b0182e0fc34063331ad", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/LineData.java", "commitBeforeChange": "2fe97005312f235d23879f33762071ad5315ea64", "commitAfterChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean equals(Object obj)", "signatureAfterChange": "  \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn (hits == lineData.hits) && (isBranch == lineData.isBranch)", "-\t\t\t\t&& (lineNumber == lineData.lineNumber)", "-\t\t\t\t&& (methodDescriptor.equals(lineData.methodDescriptor))", "-\t\t\t\t&& (methodName.equals(lineData.methodName));", "+\t\treturn (this.hits == lineData.hits)", "+\t\t\t\t&& (this.isBranch == lineData.isBranch)", "+\t\t\t\t&& (this.lineNumber == lineData.lineNumber)", "+\t\t\t\t&& (this.methodDescriptor.equals(lineData.methodDescriptor))", "+\t\t\t\t&& (this.methodName.equals(lineData.methodName));"]}]}