{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab2bb9831d7f894bd3c8b63d9b6736af", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db873cacd5dcdfb892e8380c1924e26a", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "2fe97005312f235d23879f33762071ad5315ea64", "commitAfterChange": "390c1e710f4f0726f16380595fad91f1ff044c3b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean equals(Object obj)", "signatureAfterChange": " \tpublic boolean equals(Object obj)", "diff": ["-\t\tboolean areFileNamesEqual = (sourceFileName == classData.sourceFileName)", "-\t\t\t\t|| ((sourceFileName != null)", "-\t\t\t\t\t\t&& (classData.sourceFileName != null) && (sourceFileName", "+\t\tboolean areFileNamesEqual = (this.sourceFileName == classData.sourceFileName)", "+\t\t\t\t|| ((this.sourceFileName != null)", "+\t\t\t\t\t\t&& (classData.sourceFileName != null) && (this.sourceFileName", "-\t\t\t\t&& branches.equals(classData.branches)", "-\t\t\t\t&& lines.equals(classData.lines)", "-\t\t\t\t&& methodNamesAndDescriptors", "+\t\t\t\t&& this.branches.equals(classData.branches)", "+\t\t\t\t&& this.lines.equals(classData.lines)", "+\t\t\t\t&& this.methodNamesAndDescriptors", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f216227b63dbfc4a162c0aaada19cecb", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/test/net/sourceforge/cobertura/coveragedata/ClassDataTest.java", "commitBeforeChange": "bf941a7f564e654014cdeb95d087ebf521f84a51", "commitAfterChange": "f303df7bb25dcf642a0fe779a25c47eb365c1484", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void testTouch()", "signatureAfterChange": "  \tpublic void testTouch()", "diff": ["-\t\tassertEquals(0, b.getHitCount(line));", "+\t\tassertEquals(0, b.getLineCoverage(line).getHits());", "-\t\tassertEquals(1, b.getHitCount(line));", "+\t\tassertEquals(1, b.getLineCoverage(line).getHits());", "-\t\tassertEquals(2, b.getHitCount(line));", "+\t\tassertEquals(2, b.getLineCoverage(line).getHits());"]}]}