{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "315749ded71a798c1a72ff1cbcd3cbff", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc848877e31c7b942ea976d82ae8db2", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "cce89b709fa940ca864f60f2b38877a45a7300cd", "commitAfterChange": "17d835dacb78da3254751a64d4c70c9d5b5fb9b5", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 146, "signatureBeforeChange": "\r \r   final public void ReferenceType() throws ParseException", "signatureAfterChange": "    final public void ReferenceType() throws ParseException", "diff": ["-\r", "-  final public void ReferenceType() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case SHORT:\r", "-      PrimitiveType();\r", "-      label_76:\r", "-      while (true) {\r", "-        jj_consume_token(LBRACKET);\r", "-        jj_consume_token(RBRACKET);\r", "-                                            _sName += \"[]\";\r", "-        if (jj_2_61(2)) {\r", "-          ;\r", "-        } else {\r", "-          break label_76;\r", "-        }\r", "-      }\r", "-      break;\r", "-    case IDENTIFIER:\r", "-      ClassOrInterfaceType();\r", "-      label_77:\r", "-      while (true) {\r", "-        if (jj_2_62(2)) {\r", "-          ;\r", "-        } else {\r", "-          break label_77;\r", "-        }\r", "-        jj_consume_token(LBRACKET);\r", "-        jj_consume_token(RBRACKET);\r", "-                                                       _sName += \"[]\";\r", "-      }\r", "-      break;\r", "-    default:\r", "-      jj_la1[195] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void ReferenceType() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case SHORT:", "+      PrimitiveType();", "+      label_80:", "+      while (true) {", "+        jj_consume_token(LBRACKET);", "+        jj_consume_token(RBRACKET);", "+                                            _sName += \"[]\";", "+        if (jj_2_60(2)) {", "+          ;", "+        } else {", "+          break label_80;", "+        }", "+      }", "+      break;", "+    case IDENTIFIER:", "+      ClassOrInterfaceType();", "+      label_81:", "+      while (true) {", "+        if (jj_2_61(2)) {", "+          ;", "+        } else {", "+          break label_81;", "+        }", "+        jj_consume_token(LBRACKET);", "+        jj_consume_token(RBRACKET);", "+                                                       _sName += \"[]\";", "+      }", "+      break;", "+    default:", "+      jj_la1[201] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d8947d2f599c94b3bf35669215c9e79", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/javancss/parser/JavaParser.java", "commitBeforeChange": "ccff278429de7c4e879c9d109cf4708952d56d28", "commitAfterChange": "d2ad7dd1017c159829b307d2a1c8b739eed01416", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 146, "signatureBeforeChange": "\r \r   final public void ReferenceType() throws ParseException", "signatureAfterChange": "    final public void ReferenceType() throws ParseException", "diff": ["-\r", "-  final public void ReferenceType() throws ParseException {\r", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\r", "-    case BOOLEAN:\r", "-    case BYTE:\r", "-    case CHAR:\r", "-    case DOUBLE:\r", "-    case FLOAT:\r", "-    case INT:\r", "-    case LONG:\r", "-    case SHORT:\r", "-      PrimitiveType();\r", "-      label_76:\r", "-      while (true) {\r", "-        jj_consume_token(LBRACKET);\r", "-        jj_consume_token(RBRACKET);\r", "-                                            _sName += \"[]\";\r", "-        if (jj_2_61(2)) {\r", "-          ;\r", "-        } else {\r", "-          break label_76;\r", "-        }\r", "-      }\r", "-      break;\r", "-    case IDENTIFIER:\r", "-      ClassOrInterfaceType();\r", "-      label_77:\r", "-      while (true) {\r", "-        if (jj_2_62(2)) {\r", "-          ;\r", "-        } else {\r", "-          break label_77;\r", "-        }\r", "-        jj_consume_token(LBRACKET);\r", "-        jj_consume_token(RBRACKET);\r", "-                                                       _sName += \"[]\";\r", "-      }\r", "-      break;\r", "-    default:\r", "-      jj_la1[195] = jj_gen;\r", "-      jj_consume_token(-1);\r", "-      throw new ParseException();\r", "-    }\r", "-  }\r", "+", "+  final public void ReferenceType() throws ParseException {", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case SHORT:", "+      PrimitiveType();", "+      label_80:", "+      while (true) {", "+        jj_consume_token(LBRACKET);", "+        jj_consume_token(RBRACKET);", "+                                            _sName += \"[]\";", "+        if (jj_2_60(2)) {", "+          ;", "+        } else {", "+          break label_80;", "+        }", "+      }", "+      break;", "+    case IDENTIFIER:", "+      ClassOrInterfaceType();", "+      label_81:", "+      while (true) {", "+        if (jj_2_61(2)) {", "+          ;", "+        } else {", "+          break label_81;", "+        }", "+        jj_consume_token(LBRACKET);", "+        jj_consume_token(RBRACKET);", "+                                                       _sName += \"[]\";", "+      }", "+      break;", "+    default:", "+      jj_la1[201] = jj_gen;", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }"]}]}