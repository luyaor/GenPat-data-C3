{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d03d48c7744aa789870f19b97202847", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f9865072ddf8f62152d74fc603847f", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/PackageData.java", "commitBeforeChange": "9a830b0110b84315c0c267421611842128c2ca35", "commitAfterChange": "2d04adc2554406c41824d5b965907076ecdceb80", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic ClassData getClassData(String fullClassName)", "signatureAfterChange": "  \tpublic Collection getClasses()", "diff": ["-", "-\tpublic ClassData getClassData(String fullClassName) {", "-\t    String keyName = new ClassData(getClassNameIgnoreInner(fullClassName)).getBaseName();", "-\t    return (ClassData) children.get(keyName);", "-\t}", "+\tpublic Collection getClasses()", "+\t{", "+\t\tCollection classes = new TreeSet();", "+\t\tIterator iter = this.children.values().iterator();", "+\t\twhile (iter.hasNext()) {", "+\t\t\tSourceFileData sourceFileData = (SourceFileData)iter.next();", "+\t\t\tclasses.addAll(sourceFileData.getChildren());", "+\t\t}", "+\t\treturn classes;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84b15122de353d15a03ca2222d56ad7", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/SourceFileData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic boolean isValidSourceLineNumber(int lineNumber)", "signatureAfterChange": "  \tpublic boolean isValidSourceLineNumber(int lineNumber)", "diff": ["-\t\tIterator iter = this.children.values().iterator();", "-\t\twhile (iter.hasNext())", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tClassData classData = (ClassData)iter.next();", "-\t\t\tif (classData.isValidSourceLineNumber(lineNumber))", "-\t\t\t\treturn true;", "+\t\t\tIterator iter = this.children.values().iterator();", "+\t\t\twhile (iter.hasNext())", "+\t\t\t{", "+\t\t\t\tClassData classData = (ClassData)iter.next();", "+\t\t\t\tif (classData.isValidSourceLineNumber(lineNumber))", "+\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t}", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();"]}]}