{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11a29c7fa9c8a180c288a99c028f1979", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18877dc749e9881172043bde09b2dcab", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "metrics/metrics-model/src/main/java/net/sourceforge/cobertura/metrics/model/location/SourceLocation.java", "commitBeforeChange": "78afd7a9ea91683156391f9ba3a9d2844e027fd2", "commitAfterChange": "76b6aa22931fd8b9d49c41bc823662e95693cf99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public SourceLocation(final String packageName,                           final String className,                           final String methodName,                           final int lineNumber)", "signatureAfterChange": "     public SourceLocation(final String packageName,                           final String className,                           final String methodName,                           final int lineNumber,                           final int branchSegment)", "diff": ["-                          final int lineNumber) {", "+                          final int lineNumber,", "+                          final int branchSegment) {", "+        Validate.isTrue(branchSegment >= 0, \"Cannot handle negative branchSegment argument.\");", "+        this.branchSegment = branchSegment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2d901ae4f8870deaa3117be18ec5ed6", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "metrics/metrics-api/src/main/java/net/sourceforge/cobertura/metrics/api/AbstractCoverageCalculator.java", "commitBeforeChange": "6f6a7661efb1fcbc73aa09bb85cdab7bdaf35db8", "commitAfterChange": "d1cf5bb06c93aa997e1f1f2066f2bdd82d480da5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public final Rate getCoverageRate(final CoverageType type)", "signatureAfterChange": "     @Override     public final Rate getCoverageRate(final SourceLocationFilter filter, final CoverageType type)", "diff": ["-    public final Rate getCoverageRate(final CoverageType type) {", "+    public final Rate getCoverageRate(final SourceLocationFilter filter, final CoverageType type) {", "-        Validate.notNull(type, \"Cannot handle null CoverageType argument.\");", "+        Validate.notNull(type, \"Cannot handle null type argument.\");", "+        Validate.notNull(filter, \"Cannot handle null filter argument.\");", "-        return getRate(type);", "+        return getRate(filter, type);"]}]}