{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b92772bdcd65caa0e1a7dbc47203f52", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b2ea2820909ed9acc13b068d7a200bc", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ClassData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic LineData addLine(int lineNumber, String methodName, \t\t\tString methodDescriptor)", "signatureAfterChange": "  \tpublic LineData addLine(int lineNumber, String methodName, \t\t\tString methodDescriptor)", "diff": ["-\t\tLineData lineData = getLineData(lineNumber);", "-\t\tif (lineData == null)", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tlineData = new LineData(lineNumber);", "-\t\t\t// Each key is a line number in this class, stored as an Integer object.", "-\t\t\t// Each value is information about the line, stored as a LineData object.", "-\t\t\tchildren.put(new Integer(lineNumber), lineData);", "+\t\t\tLineData lineData = getLineData(lineNumber);", "+\t\t\tif (lineData == null)", "+\t\t\t{", "+\t\t\t\tlineData = new LineData(lineNumber);", "+\t\t\t\t// Each key is a line number in this class, stored as an Integer object.", "+\t\t\t\t// Each value is information about the line, stored as a LineData object.", "+\t\t\t\tchildren.put(new Integer(lineNumber), lineData);", "+\t\t\t}", "+\t\t\tlineData.setMethodNameAndDescriptor(methodName, methodDescriptor);", "+\t      ", "+\t\t\t// methodName and methodDescriptor can be null when cobertura.ser with ", "+\t\t\t// no line information was loaded (or was not loaded at all).", "+\t\t\tif( methodName!=null && methodDescriptor!=null)", "+\t\t\t\tmethodNamesAndDescriptors.add(methodName + methodDescriptor);", "+\t\t\treturn lineData;", "-\t\tlineData.setMethodNameAndDescriptor(methodName, methodDescriptor);", "-      ", "-\t\t// methodName and methodDescriptor can be null when cobertura.ser with ", "-\t\t// no line information was loaded (or was not loaded at all).", "-\t\tif( methodName!=null && methodDescriptor!=null)", "-\t\t\tmethodNamesAndDescriptors.add(methodName + methodDescriptor);", "-\t\treturn lineData;", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97a45eb9b6f2a738c739797a886b77b8", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "9d9559bc35e31469dc0037197bbb87c9c61ff122", "commitAfterChange": "3c60402fd58f26a40620843b35fedf083357e308", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void addClassData(ClassData classData)", "signatureAfterChange": "  \tpublic void addClassData(ClassData classData)", "diff": ["-\t\tString packageName = classData.getPackageName();", "-\t\tPackageData packageData = (PackageData)children.get(packageName);", "-\t\tif (packageData == null)", "+\t\tlock.lock();", "+\t\ttry", "-\t\t\tpackageData = new PackageData(packageName);", "-\t\t\t// Each key is a package name, stored as an String object.", "-\t\t\t// Each value is information about the package, stored as a PackageData object.", "-\t\t\tthis.children.put(packageName, packageData);", "+\t\t\tString packageName = classData.getPackageName();", "+\t\t\tPackageData packageData = (PackageData)children.get(packageName);", "+\t\t\tif (packageData == null)", "+\t\t\t{", "+\t\t\t\tpackageData = new PackageData(packageName);", "+\t\t\t\t// Each key is a package name, stored as an String object.", "+\t\t\t\t// Each value is information about the package, stored as a PackageData object.", "+\t\t\t\tthis.children.put(packageName, packageData);", "+\t\t\t}", "+\t\t\tpackageData.addClassData(classData);", "+\t\t\tthis.classes.put(classData.getName(), classData);", "-\t\tpackageData.addClassData(classData);", "-\t\tthis.classes.put(classData.getName(), classData);", "+\t\tfinally", "+\t\t{", "+\t\t\tlock.unlock();", "+\t\t}"]}]}