{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34cc539fd308693e7276a72630dfbc56", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d5a7db6c4d2c488459a3357ab24996", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/coveragedata/ProjectData.java", "commitBeforeChange": "3a88f8312591e720c6c5583a3c854cd8911977a7", "commitAfterChange": "28a503bb032971e8c3210d048d0d0939d0e8f231", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic Collection getClasses()", "signatureAfterChange": "  \tpublic Collection getClasses()", "diff": ["-\t\treturn this.classes.values();", "+\t    Collection result = new ArrayList(children.size() * 15);  // just an approximation, no science here", "+\t    for (Iterator it = children.values().iterator(); it.hasNext(); ) {", "+\t        PackageData packageData = (PackageData) it.next();", "+\t        result.addAll(packageData.getChildren());", "+\t    }", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f80eb84c3717ad2a0bf63751db87460", "repository": "https://github.com/cobertura/cobertura.git", "fileName": "cobertura/src/net/sourceforge/cobertura/instrument/Main.java", "commitBeforeChange": "4558077bc3fa9bafa9125049db80cf9c99da089f", "commitAfterChange": "f21d7d6c791a9d50e30e19d77af0c8b3f2897c6c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void addInstrumentation(File file)", "signatureAfterChange": " \tprivate void addInstrumentation(FileInfo fileInfo)", "diff": ["-\tprivate void addInstrumentation(File file)", "+\tprivate void addInstrumentation(FileInfo fileInfo)", "-\t\tif (isClass(file))", "+\t\tif (fileInfo.isClass() && shouldInstrument(fileInfo.pathname))", "-\t\t\taddInstrumentationToSingleClass(file);", "+\t\t\taddInstrumentationToSingleClass(fileInfo);", "-\t\telse if (file.isDirectory())", "+\t\telse if (fileInfo.isDirectory())", "-\t\t\tFile[] contents = file.listFiles();", "+\t\t\tString[] contents = fileInfo.list();", "-\t\t\t\taddInstrumentation(contents[i]);", "+\t\t\t{", "+\t\t\t\tFile relativeFile = new File(fileInfo.pathname, contents[i]);", "+\t\t\t\tFileInfo relativeFileInfo = new FileInfo(fileInfo.baseDir, relativeFile.toString());", "+\t\t\t\t//recursion!", "+\t\t\t\taddInstrumentation(relativeFileInfo);", "+\t\t\t}"]}]}