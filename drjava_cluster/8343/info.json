{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0aa6a46759e1425775cd1dc1b4c52b64", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bac82df20ee07c20c1da08e94e215258", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private InterpreterJVM()", "signatureAfterChange": "   private InterpreterJVM()", "diff": ["+", "+    _classPath = new ClassPathVector();", "+    _classPathManager = new ClassPathManager();", "+    _defaultInterpreter = new InterpreterData(new DynamicJavaAdapter(_classPathManager));", "+    _interpreters = new Hashtable<String,InterpreterData>();", "+    _junitTestManager = new JUnitTestManager(this);", "+    _messageOnResetFailure = true;", "+    ", "+    //    _interactionsProcessor = new InteractionsProcessor();", "+    ", "-    reset();", "-    //    _interactionsProcessor = new InteractionsProcessor();", "-    _messageOnResetFailure = true;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc845efd7812deacff28ca7265363f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected AbstractMasterJVM(String slaveClassName) throws RemoteException", "signatureAfterChange": "   protected AbstractMasterJVM(String slaveClassName)", "diff": ["-    */", "-  protected AbstractMasterJVM(String slaveClassName) throws RemoteException {", "-    super();", "-    _slaveClassName = slaveClassName;", "+   */", "+  protected AbstractMasterJVM(String slaveClassName) {", "+    _monitor = new StateMonitor<State>(State.FRESH);", "+    _slaveFactory = new SlaveFactory(slaveClassName);", "+    _masterStub = new LazyThunk<MasterRemote>(new Thunk<MasterRemote>() {", "+      public MasterRemote value() {", "+        try { return (MasterRemote) UnicastRemoteObject.exportObject(AbstractMasterJVM.this, 0); }", "+        catch (RemoteException re) {", "+          error.log(re);", "+          throw new UnexpectedException(re);", "+        }", "+      }", "+    });", "-    _monitorThread = null;", "-    ", "-    _log.log(this + \" CREATED\");", "-    "]}], "num": 8343}