{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be46a39dd122a83be24c1ff63cf952d4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae3433da77f0156d2b1267d1f11a435", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public SymbolData getSymbolData(boolean giveAmbigException, String className, Data enclosingData, JExpression jexpr,                                    boolean giveException)", "signatureAfterChange": "   public SymbolData getSymbolData(boolean giveAmbigException, String className, Data enclosingData, JExpression jexpr,                                    boolean giveException)", "diff": ["-      if (giveAmbigException) {_addError(\"Ambiguous reference to class or interface \" + className, jexpr); return SymbolData.AMBIGUOUS_REFERENCE;}", "+      if (giveAmbigException) {", "+        _addError(\"Ambiguous reference to class or interface \" + className, jexpr); ", "+        return SymbolData.AMBIGUOUS_REFERENCE;", "+      }", "-    if (checkAccessibility(jexpr, result.getMav(), className, result, enclosingData.getSymbolData(), \"class or interface\")) {", "+    if (checkAccess(jexpr, result.getMav(), className, result, enclosingData.getSymbolData(), \"class or interface\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acda95fe1bd3e35f764c7dd38bcacadc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public SymbolData getSymbolData(boolean giveAmbigException, String className, Data currentData, JExpression jexpr,                                    boolean giveException)", "signatureAfterChange": "   public SymbolData getSymbolData(boolean giveAmbigException, String className, Data enclosingData, JExpression jexpr,                                    boolean giveException)", "diff": ["-  public SymbolData getSymbolData(boolean giveAmbigException, String className, Data currentData, JExpression jexpr, ", "+  public SymbolData getSymbolData(boolean giveAmbigException, String className, Data enclosingData, JExpression jexpr, ", "-    Data d = currentData;", "+    Data d = enclosingData;", "-      result = currentData.getInnerClassOrInterface(className);", "+      result = enclosingData.getInnerClassOrInterface(className);", "-    if (checkAccessibility(jexpr, result.getMav(), className, result, currentData.getSymbolData(), \"class or interface\")) {", "+    if (checkAccessibility(jexpr, result.getMav(), className, result, enclosingData.getSymbolData(), \"class or interface\")) {"]}], "num": 24458}