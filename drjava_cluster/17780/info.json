{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cfc0e5a73d67c68b4cdbd9eba5868f8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54994f65d27c2e6d46522c6ce4d6704f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "c600519b6859da4af01c52410f91013b1bbd745a", "commitAfterChange": "7f9f9a0527fe13a3dbec8283aa5b08139cfc594b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public void testInvokeStaticMethod() throws Exception", "signatureAfterChange": "         public void testInvokeStaticMethod() throws Exception", "diff": ["-    assertEquals(\"A\", invokeStaticMethod(l, \"A\", \"getName\"));", "-    assertEquals(\"B\", invokeStaticMethod(l, \"B\", \"getName\"));", "-    assertEquals(\"C\", invokeStaticMethod(l, \"C\", \"getName\"));", "+    assertEquals(\"A\", invokeStaticMethod(l, \"pkg.A\", \"getName\"));", "+    assertEquals(\"B\", invokeStaticMethod(l, \"bpkg.B\", \"getName\"));", "+    assertEquals(\"C\", invokeStaticMethod(l, \"pkg.C\", \"getName\"));", "-    try { invokeStaticMethod(\"A\", \"getName\"); fail(\"expected exception\"); }", "+    try { invokeStaticMethod(\"pkg.A\", \"getName\"); fail(\"expected exception\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8d16a9e17eef2bb3869970b2af387b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/EagerFileProperty.java", "commitBeforeChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "commitAfterChange": "f88a51007770d2637f5170b66e852db63e500083", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void update()", "signatureAfterChange": "      public void update()", "diff": ["-      if (_attributes.get(\"dir\").equals(\"/\")) {", "+      if (_attributes.get(\"rel\").equals(\"/\")) {", "-                                   new File(StringOps.unescapeSpacesWith1bHex(StringOps.replaceVariables(_attributes.get(\"dir\"), PropertyMaps.ONLY, PropertyMaps.GET_CURRENT))));", "+                                   new File(StringOps.unescapeSpacesWith1bHex(StringOps.replaceVariables(_attributes.get(\"rel\"), PropertyMaps.ONLY, PropertyMaps.GET_CURRENT))));", "-    catch(IOException e) { _value = \"Error.\"; }", "-    catch(SecurityException e) { _value = \"Error.\"; }", "+    catch(IOException e) { _value = \"(Error...)\"; }", "+    catch(SecurityException e) { _value = \"(Error...)\"; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a408d0ba5ef6b9f7b307dc29c20b217", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "c600519b6859da4af01c52410f91013b1bbd745a", "commitAfterChange": "7f9f9a0527fe13a3dbec8283aa5b08139cfc594b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testGetStaticField() throws Exception", "signatureAfterChange": "      public void testGetStaticField() throws Exception", "diff": ["-    assertEquals(\"A\", getStaticField(l, \"A\", \"NAME\"));", "-    assertEquals(\"B\", getStaticField(l, \"B\", \"NAME\"));", "-    assertEquals(\"C\", getStaticField(l, \"C\", \"NAME\"));", "+    assertEquals(\"A\", getStaticField(l, \"pkg.A\", \"NAME\"));", "+    assertEquals(\"B\", getStaticField(l, \"bpkg.B\", \"NAME\"));", "+    assertEquals(\"C\", getStaticField(l, \"pkg.C\", \"NAME\"));", "-    try { getStaticField(\"A\", \"NAME\"); fail(\"expected exception\"); }", "+    try { getStaticField(\"pkg.A\", \"NAME\"); fail(\"expected exception\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3cb6b3bb48673b27e102754c90ee3bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PreemptingClassLoaderTest.java", "commitBeforeChange": "e6763da4d9e1118450dc76cc396410e4a3b0e46a", "commitAfterChange": "9c8a785db081b77d8ac8b9698b67d2973d82d49a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testLoadsPreemptedClasses2() throws ClassNotFoundException", "signatureAfterChange": "      public void testLoadsPreemptedClasses2() throws ClassNotFoundException", "diff": ["-    PreemptingClassLoader l = new PreemptingClassLoader(BASE_LOADER, \"edu.rice.cs.plt.reflect.ReflectUtil$Version\");", "+    PreemptingClassLoader l = new PreemptingClassLoader(BASE_LOADER, \"edu.rice.cs.plt.recur.RecurUtil$ArrayStringMode\");", "-    assertLoadsSameClass(BASE_LOADER, l, \"edu.rice.cs.plt.reflect.ReflectUtil\");", "+    assertLoadsSameClass(BASE_LOADER, l, \"edu.rice.cs.plt.recur.RecurUtil\");", "-      \"edu.rice.cs.plt.reflect.ReflectUtil$Version\", ", "-      \"edu.rice.cs.plt.reflect.ReflectUtil$Version$1\" };", "+      \"edu.rice.cs.plt.recur.RecurUtil$ArrayStringMode\", ", "+      \"edu.rice.cs.plt.recur.RecurUtil$ArrayStringMode$1\" };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06970f3d6f01d24afe4ba2f15752e82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PreemptingClassLoaderTest.java", "commitBeforeChange": "e6763da4d9e1118450dc76cc396410e4a3b0e46a", "commitAfterChange": "9c8a785db081b77d8ac8b9698b67d2973d82d49a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testLoadsPreemptedClasses1() throws ClassNotFoundException", "signatureAfterChange": "      public void testLoadsPreemptedClasses1() throws ClassNotFoundException", "diff": ["-    PreemptingClassLoader l = new PreemptingClassLoader(BASE_LOADER, \"edu.rice.cs.plt.reflect.ReflectUtil\");", "+    PreemptingClassLoader l = new PreemptingClassLoader(BASE_LOADER, \"edu.rice.cs.plt.recur.RecurUtil\");", "-    { \"edu.rice.cs.plt.reflect.ReflectUtil\",", "-      \"edu.rice.cs.plt.reflect.ReflectUtil$Version\",", "-      \"edu.rice.cs.plt.reflect.ReflectUtil$Version$1\" };", "+    { \"edu.rice.cs.plt.recur.RecurUtil\",", "+      \"edu.rice.cs.plt.recur.RecurUtil$ArrayStringMode\",", "+      \"edu.rice.cs.plt.recur.RecurUtil$ArrayStringMode$1\" };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb71c02038066c495369b2357b133b44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-    PropertyMaps.TEMPLATE.setProperty(\"Misc\", new MutableFileProperty(\"drjavajar.file\", null,", "-                                                                      \"If the command line was stored in a .drjavajar file,\"+", "-                                                                      \"then this property contains the file. Otherwise, it is \"+", "-                                                                      \"empty.\\n\"+", "+    PropertyMaps.TEMPLATE.setProperty(\"Misc\", new MutableFileProperty(\"enclosing.djapp.file\", null,", "+                                                                      \"If the command line was enclosed in a .djapp file that \"+", "+                                                                      \"was a JAR file, then this property contains the file. \"+", "+                                                                      \"Otherwise, it is empty.\\n\"+"]}], "num": 17780}