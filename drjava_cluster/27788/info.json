{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f4677e010179a4aa79d2515e1064a60", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c0f7ab4a29a52fb0d97d8c6a1726551", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          public void testForConcreteMethodDef()", "signatureAfterChange": "          public void testForConcreteMethodDef()", "diff": ["-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                                new Word (SourceInfo.NO_INFO, \"field1\")),", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                                new Word (SourceInfo.NONE, \"field1\")),", "-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "-                                                                new Word (SourceInfo.NO_INFO, \"field2\")),", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"boolean\"), ", "+                                                                new Word (SourceInfo.NONE, \"field2\")),", "-        new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+        new ConcreteMethodDef(SourceInfo.NONE, ", "-                              new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                              new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                              new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                              new Word(SourceInfo.NONE, \"methodName\"),", "-                              new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {", "-        new ValueReturnStatement(SourceInfo.NO_INFO, ", "-                                 new IntegerLiteral(SourceInfo.NO_INFO, 5))}));", "+                              new BracedBody(SourceInfo.NONE, new BodyItemI[] {", "+        new ValueReturnStatement(SourceInfo.NONE, ", "+                                 new IntegerLiteral(SourceInfo.NONE, 5))}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "982f586a837d3ca97b19d256ac1076c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          public void testForConcreteMethodDef()", "signatureAfterChange": "          public void testForConcreteMethodDef()", "diff": ["-        new FormalParameter(JExprParser.NO_SOURCE_INFO, ", "-                            new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                                              new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                                              new Word (JExprParser.NO_SOURCE_INFO, \"field1\")),", "+        new FormalParameter(SourceInfo.NO_INFO, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                                              new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                                              new Word (SourceInfo.NO_INFO, \"field1\")),", "-        new FormalParameter(JExprParser.NO_SOURCE_INFO, ", "-                            new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                                              new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"boolean\"), ", "-                                                              new Word (JExprParser.NO_SOURCE_INFO, \"field2\")),", "+        new FormalParameter(SourceInfo.NO_INFO, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                                              new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "+                                                              new Word (SourceInfo.NO_INFO, \"field2\")),", "-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {", "-        new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, ", "-                                 new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5))}));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {", "+        new ValueReturnStatement(SourceInfo.NO_INFO, ", "+                                 new IntegerLiteral(SourceInfo.NO_INFO, 5))}));"]}], "num": 27788}