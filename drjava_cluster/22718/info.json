{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6dc71ba70231f0c361ca789f318b176", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fb7fb38dd6727701b35984bab49666e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "545558ad10034df1c23d84066b19e4c96d5c4d21", "commitAfterChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected synchronized final void invokeSlave(String[] jvmArgs, String cp)     throws IOException, RemoteException", "signatureAfterChange": "   protected synchronized final void invokeSlave(String[] jvmArgs, String cp)     throws IOException, RemoteException", "diff": ["-    Thread t = new Thread() {", "+    Thread t = new Thread(_exportMasterThreadName) {", "+            //javax.swing.JOptionPane.showMessageDialog(null, edu.rice.cs.util.StringOps.getStackTrace(re));", "+    _stubFile.deleteOnExit();", "-    Thread thread = new Thread() {", "+    Thread thread = new Thread(_waitForQuitThreadName) {", "+            if (_startupInProgress) {", "+              // If we get here, the process died without registering.", "+              //  (This might be the case if something was wrong with the", "+              //   classpath, or if the new JVM couldn't acquire a port", "+              //   for debugging.)", "+              //", "+              // Proper behavior in this case is unclear, so we'll let", "+              //  our subclasses decide.  By default, we print a stack", "+              //  trace and do not proceed, to avoid going into a loop.", "+              slaveQuitDuringStartup(status);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec2f3238f508fdf3beef8770d410bdde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "dbc7e70c9333c80fb6fec4d990a068dec31067fa", "commitAfterChange": "cd93f4a911fe5ca4af96aafefd0069d86ef20364", "methodNumberBeforeChange": 696, "methodNumberAfterChange": 696, "signatureBeforeChange": "          public void interactionEnded()", "signatureAfterChange": "          public void interactionEnded()", "diff": ["+            else if (lastError.startsWith(\"Static Error: Undefined name '\") && lastError.endsWith(\"'\")) {", "+              // it was an \"undefined name\" exception", "+              String undefinedName = lastError.substring(lastError.indexOf('\\'') + 1, lastError.lastIndexOf('\\''));", "+              ", "+              if ((undefinedName.length() > 0) &&", "+                  (Character.isUpperCase(undefinedName.charAt(0))) &&", "+                  (undefinedName.indexOf('.') >= 0)) {", "+                // the undefined name starts with a capital letter and contains a dot", "+                // show auto-import dialog", "+                String undefinedClassName = undefinedName.substring(0, undefinedName.indexOf('.'));", "+                _showAutoImportDialog(undefinedClassName);", "+              }", "+            }"]}], "num": 22718}