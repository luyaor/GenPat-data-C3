{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ecc0ca3facbdcd98386fa8a13b3e22f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602dd09d3f4af65378293e4ef9ae6ba6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "ff9333e71e149a259aa78828cab4c9a697c57c55", "commitAfterChange": "9063c30c220a374fd05cad2179b7b27d5702591e", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public static <T1, T2> Command2<T1, T2> compose(final Command2<? super T1, ? super T2> c1,                                                    final Command2<? super T1, ? super T2> c2)", "signatureAfterChange": "   public static <T1, T2> Runnable2<T1, T2> compose(final Runnable2<? super T1, ? super T2> r1,                                                     final Runnable2<? super T1, ? super T2> r2)", "diff": ["-  /** @return  A command that executes {@code c1} followed by {@code c2} with the same input */", "-  public static <T1, T2> Command2<T1, T2> compose(final Command2<? super T1, ? super T2> c1, ", "-                                                  final Command2<? super T1, ? super T2> c2) { ", "-    return new Command2<T1, T2>() {", "-      public void run(T1 arg1, T2 arg2) { c1.run(arg1, arg2); c2.run(arg1, arg2); }", "+  /** @return  A runnable that executes {@code r1} followed by {@code r2} with the same input */", "+  public static <T1, T2> Runnable2<T1, T2> compose(final Runnable2<? super T1, ? super T2> r1, ", "+                                                   final Runnable2<? super T1, ? super T2> r2) { ", "+    return new Runnable2<T1, T2>() {", "+      public void run(T1 arg1, T2 arg2) { r1.run(arg1, arg2); r2.run(arg1, arg2); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79ea54104303c5617fb07eccbf52ee3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "ff9333e71e149a259aa78828cab4c9a697c57c55", "commitAfterChange": "9063c30c220a374fd05cad2179b7b27d5702591e", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public static <T> Command1<T> compose(final Command1<? super T> c1,                                          final Command1<? super T> c2)", "signatureAfterChange": "   public static <T> Runnable1<T> compose(final Runnable1<? super T> r1,                                           final Runnable1<? super T> r2)", "diff": ["-  /** @return  A command that executes {@code c1} followed by {@code c2} with the same input */", "-  public static <T> Command1<T> compose(final Command1<? super T> c1, ", "-                                        final Command1<? super T> c2) { ", "-    return new Command1<T>() {", "-      public void run(T arg) { c1.run(arg); c2.run(arg); }", "+  /** @return  A runnable that executes {@code r1} followed by {@code r2} with the same input */", "+  public static <T> Runnable1<T> compose(final Runnable1<? super T> r1, ", "+                                         final Runnable1<? super T> r2) { ", "+    return new Runnable1<T>() {", "+      public void run(T arg) { r1.run(arg); r2.run(arg); }"]}], "num": 16285}