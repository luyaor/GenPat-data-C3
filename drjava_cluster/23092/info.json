{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "124490eec847b747e676928b83ad5f0e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e12b7ef0a0163663f0f0a497ecfffdc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 774, "methodNumberAfterChange": 106, "signatureBeforeChange": "   public synchronized void installModalWindowAdapter(Window w)", "signatureAfterChange": "         public String getToolTipText()", "diff": ["+        public String getToolTipText() { return null; }", "-    * @return window adapter */", "-  public synchronized void installModalWindowAdapter(Window w) {", "-//    MODAL_LOG.log(\"installModalWindowAdapter, window = \"+System.identityHashCode(w));", "-    if (_modalWindowAdapters.containsKey(w)) {", "-      // already installed", "-//      MODAL_LOG.log(\"\\talready installed\");", "-      return;", "-    } ", "-    ", "-    if (_modalWindowAdapterOwner==null) {", "-//      MODAL_LOG.log(\"\\tadapter available\");", "-      // modal adapter is available, claim it", "-      _modalWindowAdapterOwner = w;", "-      WindowAdapter wa = new WindowAdapter() {", "-        public void windowDeactivated(WindowEvent we) {", "-          we.getWindow().toFront();", "-          we.getWindow().requestFocus();", "-        }", "-        public void windowIconified(WindowEvent we) {", "-          we.getWindow().toFront();", "-          we.getWindow().requestFocus();", "-        }", "-        public void windowLostFocus(WindowEvent we) {", "-          we.getWindow().toFront();", "-          we.getWindow().requestFocus();", "-        }", "-      };", "-      _modalWindowAdapters.put(w, wa);", "-      // install it", "-      w.addWindowListener(wa);", "-      w.addWindowFocusListener(wa);", "-    }", "-    // else nothing to do; modal adapter is already owned by another window", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf903570213305e3135f1bd7a90c735", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void valueChanged(ListSelectionEvent e)", "signatureAfterChange": "       public void valueChanged(ListSelectionEvent e)", "diff": ["+       */", "+      public void valueChanged(ListSelectionEvent e) {", "+        if (!e.getValueIsAdjusting() && !_model.isEmpty()) {", "+          final INavigatorItem newItem = (INavigatorItem) getSelectedValue();", "+          if (current != newItem) {", "+            final INavigatorItem oldItem = current;", "+            NodeData oldData = new NodeData() {", "+              public <T> T execute(NodeDataVisitor<T> v) {", "+                return v.itemCase(oldItem);", "+              }", "+            };", "+            NodeData newData = new NodeData() {", "+              public <T> T execute(NodeDataVisitor<T> v) {", "+                return v.itemCase(newItem);", "+              }", "+            };", "+            for(INavigationListener listener: navListeners) {", "+              if (oldItem != null) listener.lostSelection(oldData);", "+              if (newItem != null) listener.gainedSelection(newData);", "+            }", "+            current = newItem;", "+          }", "+        }", "+      }", "-   */", "-  public void valueChanged(ListSelectionEvent e)", "-  {", "-    if(!e.getValueIsAdjusting() && !_docs.isEmpty()) {", "-      if(currentselected != this.getSelectedValue()) {", "-        final INavigatorItem currItem = currentselected;", "-        final INavigatorItem nextItem = (INavigatorItem)JListNavigator.this.getSelectedValue();", "-        NodeData currData = new NodeData() {", "-          public <T> T execute(NodeDataVisitor<T> v) {", "-            return v.itemCase(currItem);", "-          }", "-        };", "-        NodeData nextData = new NodeData() {", "-          public <T> T execute(NodeDataVisitor<T> v) {", "-            return v.itemCase(nextItem);", "-          }", "-        };", "-        for(INavigationListener listener: navListeners) {", "-          listener.lostSelection(currData);", "-          if(nextItem != null) {", "-            listener.gainedSelection(nextData);", "-          }", "-        }", "-        currentselected = (INavigatorItem)this.getSelectedValue();", "-      } ", "-    }", "-  }"]}], "num": 23092}