{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "102de3cc3894de27df8f4f3d19207294", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08d42e25d858adb222a9c76c10c2c055", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 79, "signatureBeforeChange": "   private synchronized int _findKeywordAtToplevel( String keyword, String text)", "signatureAfterChange": "   private synchronized int _findKeywordAtToplevel(String keyword,                                                   String text,                                                   int textOffset)", "diff": ["-  private synchronized int _findKeywordAtToplevel( String keyword, String text) {", "-   ", "+  private synchronized int _findKeywordAtToplevel(String keyword,", "+                                                  String text,", "+                                                  int textOffset) {", "+    int oldLocation = getCurrentLocation();", "+    ", "-        setCurrentLocation(index);", "+        setCurrentLocation(textOffset + index);", "-    } ", "+    }", "+    setCurrentLocation(oldLocation);", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2746bae506287e3d2fae0ac0ec05d47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeClassInfo.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "         public Object visit(FieldDeclaration node)", "signatureAfterChange": "     public Void visit(FieldDeclaration node)", "diff": ["+    public Void visit(FieldDeclaration node) {", "+      fields.put(node.getName(), new TreeFieldInfo(node,", "+                                                   classFinder,", "+                                                   TreeClassInfo.this));", "+      return null;", "-         */", "-        public Object visit(FieldDeclaration node) {", "-            fields.put(node.getName(), new TreeFieldInfo(node,", "-\t\t\t\t\t\t\t classFinder,", "-\t\t\t\t\t\t\t TreeClassInfo.this));", "-            return null;", "-        }"]}], "num": 10139}