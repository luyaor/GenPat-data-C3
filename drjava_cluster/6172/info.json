{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60290edbbd3fc9603dc6b930050d2463", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19bb0c4b98e07b3cf4fb42324f8ca62a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "2370f2c7f7c07240c3b8b35c7a798df6cf9b488b", "commitAfterChange": "e855fbea41f0dcbe20751dbee6936124456f2ccf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    if (here >= doc.getLength()) {", "+    if (here > doc.getLength()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb2b9be44519ce6765c3c48a7b61fad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "fe00431171da3d65b1c1aa9aecc4d485691511fe", "commitAfterChange": "08f174fa59972b118ad07b366735f774758ec0e6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _createPositionsArray()", "signatureAfterChange": "   private void _createPositionsArray()", "diff": ["-", "+      ", "-             (offset < defsText.length()))", "+             (offset <= defsText.length()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8802944c5f043051bada36713bd37d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "f32b1e10d3ab04ca267d7bdc1cbc12db38b5ac66", "commitAfterChange": "1813ff0222dc4ecf20a5cf6ed36333ed813c089d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-    if (! heapSizeGiven && jvmArgString.indexOf(\"-Xmx\")==0) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);", "+    if (! heapSizeGiven && jvmArgString.indexOf(\"-Xmx\")<0) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aa041f3426406a0fbfd5ee8fbf7b2d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/AbstractPredicateSet.java", "commitBeforeChange": "4ccce94972f08c312d50b54960d2376aad8ce767", "commitAfterChange": "7abad9d4d237e1759bd098868c3fc80eb6e4365f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   @Override public boolean isEmpty()", "signatureAfterChange": "   @Override public boolean isEmpty()", "diff": ["-  /** Returns {@code size(1) != 0}. */", "-  @Override public boolean isEmpty() { return size(1) != 0; }", "+  /** Returns {@code size(1) == 0}. */", "+  @Override public boolean isEmpty() { return size(1) == 0; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f9ad3f72a8a91a893465ee36f6ac83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "1ad2cf8823fa75a1b2d677ad26440a5bc60f0265", "commitAfterChange": "4422ac993d9ef619bb5508370a7288146c4d0a20", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "    public void appendExceptionResult(String exceptionClass,                                     String message,                                     String stackTrace,                                     AttributeSet set)", "signatureAfterChange": "    public void appendExceptionResult(String exceptionClass,                                     String message,                                     String stackTrace,                                     AttributeSet set)", "diff": ["-      if (null != message || \"null\".equals(message)) {", "+      if (null == message || \"null\".equals(message)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ff9d95978a2e778b3ad8b4fb8e5cb7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                         int lineNumber)", "signatureAfterChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                         int lineNumber)", "diff": ["-    // Assume first one is correct, for now", "-    //if (classes.size() > 0) {", "-    ", "-      if (lineNumber > DebugAction.ANY_LINE) {", "+      if (lineNumber != DebugAction.ANY_LINE) {", "+        // If lines.size > 0, lineNumber was found in ref", "-          // The ReferenceType might be in an inner class", "+          // The ReferenceType might be in an inner class, so", "+          //  look for locationsOfLine for nestedTypes", "-                ref =currRef;", "-                break;                ", "+                ref = currRef;", "+                break;", "-      //if (ref != null && !ref.isPrepared()) {", "-      //   return null;", "-      //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3243254e8ec5f0e1a8633b88dd21946", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractConsoleController.java", "commitBeforeChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "commitAfterChange": "fd372db787cedeccdc43d382b7e2999ff5184943", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int getNewCaretPos(DocumentEvent e, ConsoleDocument doc)", "signatureAfterChange": "     private int getNewCaretPos(DocumentEvent e, ConsoleDocument doc)", "diff": ["-      // Figure out where the prompt was before the insertion", "-      final int prevPromptPos = (insertPos <= promptPos) ? promptPos - insertLen : promptPos;", "-      // If caret was at previous prompt (or before), move it to the new prompPos.", "+      // Figure out where the prompt was before the insertion; printed output precedes the prompt", "+      final int prevPromptPos = (insertPos < promptPos) ? promptPos - insertLen : promptPos;", "+      // If caret was at previous prompt (or before), move it to the new prompPos.  ", "-       * relative position to the prompt. */", "+       * relative position to the prompt. (On keyboard input, prevPromptPos == promptPos, making this a no-op. */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8d6bf3d7989b99507b7e0f4048a5dfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "fc51b2245942e6d87f48245a9b8cdb4aedbcacc2", "commitAfterChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   protected void _clearCache(int offset)", "signatureAfterChange": "   protected void _clearCache(int offset)", "diff": ["-      if (offset < 0) {", "+      if (offset <= 0) {"]}], "num": 6172}