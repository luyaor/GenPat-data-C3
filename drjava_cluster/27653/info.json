{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cc308415f93ce3159e650aa5de4f87a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de7f9407bca69838ca7dd8d8d69ce3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1b6ef7c7e1a6439fd1630b14326c67b0978e88ba", "commitAfterChange": "93cff9492f5f66f78081d1bfed6f05eaa775f999", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 270, "signatureBeforeChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "diff": ["+      if(doc != null) {", "+        try {", "+          File f = doc.getFile();", "+          if(_model.isProjectFile(f))", "+            _saveProjectAction.setEnabled(true);", "+        }", "+        catch(FileMovedException fme) {", "+          //do nothing", "+        }", "+        catch(IllegalStateException ise) {", "+          //thrown if the document does not yet have a file", "+        }", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eb7ff0d25cf7108195e0496c6fca05e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementEvaluator.java", "commitBeforeChange": "01be6f17c639ec58b95c88218e8e01ef8369695d", "commitAfterChange": "3b9696a707d284763f4bff7a7d587935d483984c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Override public Result visit(ThrowStatement node)", "signatureAfterChange": "      @Override public Result visit(ThrowStatement node)", "diff": ["+    // bug fix for DrJava bug 3008828", "+    if (t == null) {", "+        // as per Java Language Specification (JLS):", "+        // http://java.sun.com/docs/books/jls/third_edition/html/statements.html#14.18", "+        // \"If evaluation of the Expression completes normally, producing a null value,", "+        // then an instance V\ufffd of class NullPointerException is created and thrown instead of null.\" ", "+        t = new NullPointerException();", "+        t.setStackTrace(new StackTraceElement[0]);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96e9bb1dffab1944e79833d973d6ff0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 363, "signatureBeforeChange": "     private void _fileClosed(OpenDefinitionsDocument doc)", "signatureAfterChange": "     private void _fileClosed(OpenDefinitionsDocument doc)", "diff": ["-    private void _fileClosed(OpenDefinitionsDocument doc){", "+    private void _fileClosed(OpenDefinitionsDocument doc) {", "+      }", "+      if (doc != null) {", "+        try {", "+          File f = doc.getFile();", "+          if(_model.isProjectFile(f) || doc.isAuxiliaryFile()) _model.setProjectChanged(true);", "+        }", "+        catch(FileMovedException fme) { /* do nothing */ }", "+        catch(IllegalStateException ise) { /* do nothing */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d961f011c630258d7bb1af45525e8d78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static ArrayList<String> getLookAndFeels()", "signatureAfterChange": "     public static ArrayList<String> getLookAndFeels()", "diff": ["-          catch (Exception ex) {", "-            // failed to load/instantiate class, or it is not supported.", "-            // It is not a valid choice.", "-          }", "+          // failed to load/instantiate class, or it is not supported; it is not a valid choice.", "+          catch (ClassNotFoundException e) { /* do nothing */ }", "+          catch (InstantiationException e) { /* do nothing */ }", "+          catch (IllegalAccessException e) { /* do nothing */ }"]}], "num": 27653}