{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cbefbaa554e3b2252405434a25dd2a2", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98da49628e27c36ce50bc0a2ad3a189d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public TypeData forPlusAssignmentExpression(PlusAssignmentExpression that)", "signatureAfterChange": "   public TypeData forPlusAssignmentExpression(PlusAssignmentExpression that)", "diff": ["-    TypeData value_result = that.getValue().visit(this);", "-    TypeData name_result = that.getName().visit(new LValueWithValueTypeChecker(this));", "+    TypeData valueRes = that.getValue().visit(this);", "+    TypeData nameRes = that.getName().visit(new LValueWithValueTypeChecker(this));", "-    return forPlusAssignmentExpressionOnly(that, name_result, value_result);", "+    return forPlusAssignmentExpressionOnly(that, nameRes, valueRes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0dead0c74fe40eeaaabe5138140a6e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public TypeData forNumericAssignmentExpression(NumericAssignmentExpression that)", "signatureAfterChange": "   public TypeData forNumericAssignmentExpression(NumericAssignmentExpression that)", "diff": ["-    TypeData value_result = that.getValue().visit(this);", "-    TypeData name_result = that.getName().visit(new LValueWithValueTypeChecker(this));", "+    TypeData valueRes = that.getValue().visit(this);", "+    TypeData nameRes = that.getName().visit(new LValueWithValueTypeChecker(this));", "-    return forNumericAssignmentExpressionOnly(that, name_result, value_result);", "+    return forNumericAssignmentExpressionOnly(that, nameRes, valueRes);"]}], "num": 16861}