{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cae29274ac2051bf53128fb2870791fe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "432b2163308177f6a985bce8773973e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   protected SymbolData defineAnonymousSymbolData(final AnonymousClassInstantiation anonInst,                                                   final String qualifiedAnonName,                                                  final String superName)", "signatureAfterChange": "   protected SymbolData defineAnonymousSymbolData(final AnonymousClassInstantiation anonInst,                                                   final String qualifiedAnonName,                                                  final String superName)", "diff": ["-    System.err.println(\"defineAnonymousSymbolData called for \" + qualifiedAnonName + \" extending \" + superName);", "+//    System.err.println(\"defineAnonymousSymbolData called for \" + qualifiedAnonName + \" extending \" + superName);", "-      if (enclosingSD == null) {", "-        System.err.println(\"***ALARM*** Class \" + _enclosingClassName + \" has been defined but is not found in symbolTable\");", "-        assert false;", "-      }", "+      assert (enclosingSD != null); ", "-      if (enclosingSD.getName().equals(\"HasAnonymousInnerClass\")) ", "-        System.err.println(\"****** The SymbolData for \" + sd + \" added to the inner classes of \" + enclosingSD);", "+//      if (enclosingSD.getName().equals(\"HasAnonymousInnerClass\")) ", "+//        System.err.println(\"****** The SymbolData for \" + sd + \" added to the inner classes of \" + enclosingSD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99cfce622bea94ed9777309b12b4eefc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected Pair<LinkedList<MethodData>, LinkedList<MethodData>>      _getMatchingMethods(String methodName, SymbolData enclosingSD, InstanceData[] arguments, JExpression jexpr,                          boolean isConstructor, SymbolData thisSD)", "signatureAfterChange": "     protected Pair<LinkedList<MethodData>, LinkedList<MethodData>>      _getMatchingMethods(String methodName, SymbolData enclosingSD, InstanceData[] arguments, JExpression jexpr,                          boolean isConstructor, SymbolData thisSD)", "diff": ["-//        System.err.println(\"*** for NonEmpty(), params length = \" + md.getParams().length + \"; args length = \" + arguments.length);", "+//        System.err.println(\"*** for NonEmpty(), params length = \" + md.getParams().length + \"; args length = \" ", "+//                             + arguments.length);", "-        ", "-        if (matches && checkAccessibility(jexpr, md.getMav(), md.getName(), enclosingSD, thisSD, \"method\")) {", "+        if (matches && checkAccess(jexpr, md.getMav(), md.getName(), enclosingSD, thisSD, \"method\")) {", "-          if (matches && checkAccessibility(jexpr, md.getMav(), md.getName(), enclosingSD, thisSD, \"method\")) {", "+          if (matches && checkAccess(jexpr, md.getMav(), md.getName(), enclosingSD, thisSD, \"method\")) {", "-//      System.err.println(\"***** enclosingSD = \" + enclosingSD + \"; thisSD = \" + thisSD + \"; matching methods: \" + matching);", "+//      System.err.println(\"***** enclosingSD = \" + enclosingSD + \"; thisSD = \" + thisSD + \"; matching methods: \" ", "+//                           + matching);"]}], "num": 11084}