{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0350add8afbeb1c7fd1310a17f3b42c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a09218e9863b5a496d91bff70f2949", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "194b7a090e0ed824f08942e6e6efd976dc158404", "commitAfterChange": "c0f3fda00a0dfdfc7ba1813b053360e729d2a0e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "signatureAfterChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "diff": ["-    _testRunner = new JUnitTestRunner(_jmc);", "+    _testRunner = makeRunner();", "-   //new ScrollableDialog(null, \"JUnitManager.findTestClasses invoked\", \"Candidate classes are = \" + classNames, \"files = \" + files).show();", "-    ", "-    try {", "-      for (i = 0; i < classNames.size(); i++) {", "-        String cName = classNames.get(i);", "-       //new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "-        try {", "-          if (_isTestCase(cName)) {", "-            //new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "-            _testClassNames.add(cName);", "-            _testFiles.add(files.get(i));", "-            _suite.addTest(_testRunner.getTest(cName));", "-          }", "-        }", "-        catch(LinkageError e) { ", "-          //debug.log(e);", "-          _jmc.classFileError(new ClassFileError(cName, files.get(i).getCanonicalPath(), e));", "+    for (Pair<String, File> pair : IterUtil.zip(classNames, files)) {", "+      String cName = pair.first();", "+      try {", "+        if (_isJUnitTest(_testRunner.loadPossibleTest(cName))) {", "+          _testClassNames.add(cName);", "+          _testFiles.add(pair.second());", "+          _suite.addTest(_testRunner.getTest(cName));", "+      catch (ClassNotFoundException e) { error.log(e); }", "+      catch(LinkageError e) {", "+        //debug.log(e);", "+        String path = IOUtil.attemptAbsoluteFile(pair.second()).getPath();", "+        _jmc.classFileError(new ClassFileError(cName, path, e));", "+      }", "-    catch(IOException e) { throw new UnexpectedException(e); }", "-    //new ScrollableDialog(null, \"TestClassNames are: \" + _testClassNames, \"\", \"\").show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c619e3f37bf879e3d7f1c65de25d6ab1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 29, "signatureBeforeChange": "      protected void traversePanel()", "signatureAfterChange": "   public void reload(R startRegion, R endRegion)", "diff": ["-  protected void traversePanel() {", "-    Enumeration docNodes = _rootNode.children();", "-    while (docNodes.hasMoreElements()) {", "-      DefaultMutableTreeNode docNode = (DefaultMutableTreeNode) docNodes.nextElement();          ", "-      // Find the correct start offset node for this region", "-      Enumeration regionNodes = docNode.children();", "-      while (regionNodes.hasMoreElements()) {", "-        DefaultMutableTreeNode regionNode = (DefaultMutableTreeNode) regionNodes.nextElement();", "-        _regTreeModel.reload(regionNode);", "-      }", "-      _regTreeModel.reload(docNode);  // file name may have changed", "-    }", "-  }", "+  // Reloads regions between starting and endRegion inclusive.  Assumes startRegion, endRegion are in the same document.", "+  public void reload(R startRegion, R endRegion) {", "+    SortedSet<R> tail = _regionManager.getTailSet(startRegion);", "+    Iterator<R> iterator = tail.iterator();", "+    ", "+    while (iterator.hasNext()) {", "+      R r = iterator.next();", "+      if (r.compareTo(endRegion) > 0) break; ", "+      System.err.println(\"Reloading region '\" + r.getString() + \"'\");", "+      _regTreeModel.reload(getNode(r));", "+    }", "+  }"]}], "num": 26121}