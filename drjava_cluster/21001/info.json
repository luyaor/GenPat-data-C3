{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87e331048316e3b5395f2971bf3fcf1f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9758ff922ce02a9221d1a4c49d300199", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "606df60980e3cc99d6da6907f3f1ce716cb9aae3", "commitAfterChange": "dbed8a61b502959ade9624734104a39bb55bea38", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(final String[] args)", "signatureAfterChange": "      public static void main(final String[] args)", "diff": ["+    ", "+    /*", "+     * Set the LookAndFeel for this session. If using a Plastic LAF, the theme must be set before setting the LAF.", "+     */", "-      if (! configLAFName.equals(currLAFName)) UIManager.setLookAndFeel(configLAFName);", "+      String failureMessage =", "+        \"DrJava could not load the configured theme for the Plastic Look and Feel.\\n\" +", "+        \"If you've manually edited your configuration file, try \\n\" +", "+        \"removing the key \\\"plastic.theme\\\" and restarting DrJava.\\n\" +", "+        \"In the meantime, the system default Look and Feel will be used.\\n\";", "+      String failureTitle = \"Theme not found\";", "+      if(Utilities.isPlasticLaf(configLAFName)) {", "+        String themeName = PLASTIC_THEMES_PACKAGE + \".\" + DrJava.getConfig().getSetting(PLASTIC_THEMES);", "+        try {", "+          PlasticTheme theme = (PlasticTheme) Class.forName(themeName).getConstructor(new Class<?>[]{}).newInstance();", "+          PlasticLookAndFeel.setPlasticTheme(theme);", "+          PlasticLookAndFeel.setTabStyle(PlasticLookAndFeel.TAB_STYLE_METAL_VALUE);", "+          com.jgoodies.looks.Options.setPopupDropShadowEnabled(true);", "+          if(! configLAFName.equals(currLAFName)) UIManager.setLookAndFeel(configLAFName);", "+        } catch(NoSuchMethodException nsmex) {", "+          JOptionPane.showMessageDialog(null, failureMessage, failureTitle, JOptionPane.ERROR_MESSAGE);", "+        } catch(SecurityException sex) {", "+          JOptionPane.showMessageDialog(null, failureMessage, failureTitle, JOptionPane.ERROR_MESSAGE);", "+        } catch(InstantiationException iex) {", "+          JOptionPane.showMessageDialog(null, failureMessage, failureTitle, JOptionPane.ERROR_MESSAGE);", "+        } catch(IllegalAccessException iaex) {", "+          JOptionPane.showMessageDialog(null, failureMessage, failureTitle, JOptionPane.ERROR_MESSAGE);", "+        } catch(IllegalArgumentException iaex) {", "+          JOptionPane.showMessageDialog(null, failureMessage, failureTitle, JOptionPane.ERROR_MESSAGE);", "+        } catch(InvocationTargetException itex) {", "+          JOptionPane.showMessageDialog(null, failureMessage, failureTitle, JOptionPane.ERROR_MESSAGE);", "+        }", "+      } else if (! configLAFName.equals(currLAFName)) {", "+        UIManager.setLookAndFeel(configLAFName);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b65799e3436cfe1a293f24cc0a06bd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "signatureAfterChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "diff": ["-      try {", "-        // First, get the class name to use.  This relies on Java's convention of", "-        // one top-level class per file.", "-        String className = getDocument().getQualifiedClassName();", "-        ", "-        // Then clear the current interaction and replace it with a \"java X\" line.", "-        InteractionsDocument iDoc = _interactionsModel.getDocument();", "-        ", "-        synchronized(_interpreterControl) {  // why is this synchronization here?", "+      ", "+      // Get the class name for this document, the first top level class in the document.", "+      final String className = getDocument().getQualifiedClassName();", "+      final InteractionsDocument iDoc = _interactionsModel.getDocument();", "+      if (! checkIfClassFileInSync()) {", "+        iDoc.insertBeforeLastPrompt(DOCUMENT_OUT_OF_SYNC_MSG, InteractionsDocument.ERROR_STYLE);", "+        return;", "+      }", "+      ", "+      _runMain = new DummyGlobalModelListener() {", "+        public void interpreterReady(File wd) {", "+          ", "+          // Load the proper text into the interactions document", "-          if (!checkIfClassFileInSync()) {", "-            iDoc.insertBeforeLastPrompt(DOCUMENT_OUT_OF_SYNC_MSG, InteractionsDocument.ERROR_STYLE);", "-          }", "+          ", "+", "-", "-          // Notify listeners that the file is about to be run.", "-          _notifier.runStarted(this);", "-", "-          // Finally, execute the new interaction.", "+          ", "+          // Finally, execute the new interaction and record that event", "+          _notifier.runStarted(ConcreteOpenDefDoc.this);", "+          SwingUtilities.invokeLater(new Runnable() {", "+            public void run() { ", "+              /* Remove _runMain listener AFTER this interpreterReady listener completes and DROPS it readLock on", "+               * _interactionsModel._notifier. */", "+              _interactionsModel.removeListener(_runMain);", "+            }", "+          });", "+          ", "-      }", "-      catch (EditDocumentException e) {", "-        // This was thrown by insertText - and shouldn't have happened.", "-        throw new UnexpectedException(e);", "-      }", "+      };", "+      ", "+      _interactionsModel.addListener(_runMain);", "+      ", "+      // Reset interactions to the soure root for this document; class will be executed when new interpreter is ready", "+      resetInteractions(getSourceRoot());", "+        "]}], "num": 21001}