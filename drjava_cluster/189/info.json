{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7243f1fc26ee97899fdc491f01b75042", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8db3a071d197507a88891b9a3be9b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v2_0/edu/rice/cs/drjava/model/compiler/JSR14v20Compiler.java", "commitBeforeChange": "9f7616fd6847dd00d848676323dd2e5f5ac106c9", "commitAfterChange": "9ffaf267aed8adb3ea1a9aa4f99ce4ee78724acb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected Context createContext(File[] sourceRoots)", "signatureAfterChange": "      protected Context createContext(File[] sourceRoots)", "diff": ["+  ", "-    ", "-    if(CompilerWarnings.SHOW_UNCHECKED) {", "-      options.put(\"-Xlint:unchecked\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_DEPRECATION) {", "-      options.put(\"-Xlint:deprecation\",\"\");", "-    }", "-", "-    if(CompilerWarnings.SHOW_PATH) {", "-      options.put(\"-Xlint:path\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_SERIAL) {", "-      options.put(\"-Xlint:serial\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_FINALLY) {", "-      options.put(\"-Xlint:finally\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_FALLTHROUGH) {", "-      options.put(\"-Xlint:fallthrough\",\"\");", "-      options.put(\"-Xlint:switchcheck\",\"\"); //Some compilers appear to use this option instead. Anyone know anything about this?", "-    }", "-    ", "-    // Turn on debug -- maybe this should be setable some day?", "+    options.putAll(CompilerOptions.getOptions(_warningsEnabled));", "+    //Should be setable some day?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e005d2ec96ad96e97da656d051ad25e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v1_0/edu/rice/cs/drjava/model/compiler/JavacGJCompiler.java", "commitBeforeChange": "f3b76b44e2a57d2f1c8a2d30bef33ca77d379a75", "commitAfterChange": "02d55075a7583943307bcca2b254ec492f7f204d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected Hashtable<String, String> createOptionsHashtable(File[] sourceRoots)", "signatureAfterChange": "      protected Hashtable createOptionsHashtable(File[] sourceRoots)", "diff": ["-  protected Hashtable<String, String> createOptionsHashtable(File[] sourceRoots) {", "-    Hashtable<String, String> options = Hashtable.make();", "+  protected Hashtable createOptionsHashtable(File[] sourceRoots) {", "+    Hashtable options = Hashtable.make();", "-    options.put(\"-warnunchecked\", \"\");", "+    if(CompilerWarnings.SHOW_UNCHECKED) {", "+      options.put(\"-Xlint:unchecked\",\"\");", "+    }", "+    ", "+    if(CompilerWarnings.SHOW_DEPRECATION) {", "+      options.put(\"-Xlint:deprecation\",\"\");", "+    }", "+", "+    if(CompilerWarnings.SHOW_PATH) {", "+      options.put(\"-Xlint:path\",\"\");", "+    }", "+    ", "+    if(CompilerWarnings.SHOW_SERIAL) {", "+      options.put(\"-Xlint:serial\",\"\");", "+    }", "+    ", "+    if(CompilerWarnings.SHOW_FINALLY) {", "+      options.put(\"-Xlint:finally\",\"\");", "+    }", "+    ", "+    if(CompilerWarnings.SHOW_FALLTHROUGH) {", "+      options.put(\"-Xlint:fallthrough\",\"\");", "+      options.put(\"-Xlint:switchcheck\",\"\"); //Some compilers appear to use this option instead. Anyone know anything about this?", "+    }"]}], "num": 189}