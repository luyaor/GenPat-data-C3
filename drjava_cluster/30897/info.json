{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06a901361c168cf9eb58430e856c2a29", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ee130ca4ffa88ad8ea84ba6b2690a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "a24082414064ecb42431a2e612770e1ab3e9fefa", "commitAfterChange": "b2a145d8d3ea1ad947e0937f542b0780baf31d45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void checkTypeParameters(TypeParameter[] tparams)", "signatureAfterChange": "   public void checkTypeParameters(TypeParameter[] tparams)", "diff": ["-      Type firstBound = param.getBound().acceptVisitor(v);", "-      Iterable<Type> restBounds = checkList(param.getInterfaceBounds());", "-      BoundedSymbol bounds = getTypeVariable(param).symbol();", "-      if (IterUtil.isEmpty(restBounds)) { bounds.initializeUpperBound(firstBound); }", "-      else {", "-        bounds.initializeUpperBound(new IntersectionType(IterUtil.compose(firstBound, restBounds)));", "+      Type upperBound = param.getBound().acceptVisitor(v);", "+      for (Type t : checkList(param.getInterfaceBounds())) {", "+        upperBound = ts.meet(upperBound, t);", "+      BoundedSymbol bounds = getTypeVariable(param).symbol();", "+      bounds.initializeUpperBound(upperBound);", "-  }  ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae7a548e5b732b076c5893d865f982a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   private void _setupKeyBindingsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupKeyBindingsPanel(ConfigPanel panel)", "diff": ["-    KeyStrokeData tmpKsd;", "-    KeyStrokeOptionComponent tmpKsoc;", "+    KeyStrokeOptionComponent ksoc;", "-    Enumeration e = KeyBindingManager.ONLY.getKeyStrokeData();", "-    while (e.hasMoreElements()) {", "-      tmpKsd = (KeyStrokeData) e.nextElement();", "-      if (tmpKsd.getOption() != null) {", "+    for (KeyStrokeData ksd: KeyBindingManager.ONLY.getKeyStrokeData()) {", "+      if (ksd.getOption() != null) {", "-//        KeyStroke ks = tmpKsd.getKeyStroke();", "-//        Action a = KeyBindingManager.Singleton.get(ks);", "-        Action a = tmpKsd.getAction();", "+        Action a = ksd.getAction();", "-        if ((desc == null) || (desc.equals(\"\"))) {", "-          desc = tmpKsd.getName();", "-        }", "+        if (desc == null || desc.equals(\"\")) desc = ksd.getName();", "-        tmpKsoc = new KeyStrokeOptionComponent((KeyStrokeOption)tmpKsd.getOption(),", "-                                               tmpKsd.getName(), this, desc);", "-        if (tmpKsoc != null) {", "-          _comps.add(tmpKsoc);", "-        }", "+        ksoc = new KeyStrokeOptionComponent((KeyStrokeOption)ksd.getOption(), ksd.getName(), this, desc);", "+        if (ksoc != null) _comps.add(ksoc);"]}], "num": 30897}