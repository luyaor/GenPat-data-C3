{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f62206b9d09f387cf812c62429dcf659", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e1d9546124817ef09641e01a3fa673", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 238, "signatureBeforeChange": "   public static <T1, T2> boolean or(Iterable<? extends T1> iter1, Iterable<? extends T2> iter2,                                     Predicate2<? super T1, ? super T2> pred)", "signatureAfterChange": "   public static <T1, T2> boolean or(Iterable<? extends T1> iter1, Iterable<? extends T2> iter2,                                     Predicate2<? super T1, ? super T2> pred)", "diff": ["-    while (i1.hasNext()) { if (pred.value(i1.next(), i2.next())) { return true; } }", "+    while (i1.hasNext()) { if (pred.contains(i1.next(), i2.next())) { return true; } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29fd12cc0c25924bf1f5cbe1dee20e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 237, "signatureBeforeChange": "   public static <T1, T2> boolean and(Iterable<? extends T1> iter1, Iterable<? extends T2> iter2,                                      Predicate2<? super T1, ? super T2> pred)", "signatureAfterChange": "   public static <T1, T2> boolean and(Iterable<? extends T1> iter1, Iterable<? extends T2> iter2,                                      Predicate2<? super T1, ? super T2> pred)", "diff": ["-    while (i1.hasNext()) { if (!pred.value(i1.next(), i2.next())) { return false; } }", "+    while (i1.hasNext()) { if (!pred.contains(i1.next(), i2.next())) { return false; } }"]}], "num": 20174}