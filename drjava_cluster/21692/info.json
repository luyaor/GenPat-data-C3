{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f7a60b94e1717278021e112868c0591", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e3c03d7194e070387a9a8e6f7f00b75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "e664df55ae0a7bd09b3050ad4027139ea59836cd", "commitAfterChange": "41fd33d17362a9b484003b73b5562d87a9b206fa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void checkTypeParameters(TypeParameter[] tparams)", "signatureAfterChange": "   public void checkTypeParameters(TypeParameter[] tparams)", "diff": ["-  /** Tag the given type parameters with a new VariableType, and set the bounds appropriately. */", "+   */", "+    checkStructureForTypeParameters(tparams);", "+    ensureWellFormedTypeParameters(tparams);", "+  }", "-      Iterable<ReferenceTypeName> bounds = IterUtil.compose(param.getBound(), param.getInterfaceBounds());", "-      // meet is guaranteed to be nonempty, and thus not TOP", "-      Type upperBound = ts.meet(checkList(bounds));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9482fe42bf193f1097e0db0adff71ef0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "6b936f625ceea21472b90559f34694154e802e14", "commitAfterChange": "8d43ad99265fb94492eb304c2a9128684a27d753", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void setTypeParameterBounds(TypeParameter[] tparams)", "signatureAfterChange": "   public void checkTypeParameters(TypeParameter[] tparams)", "diff": ["-  public void setTypeParameterBounds(TypeParameter[] tparams) {", "+  /** Tag the given type parameters with a new VariableType, and set the bounds appropriately. */", "+  public void checkTypeParameters(TypeParameter[] tparams) {", "+    for (TypeParameter tparam : tparams) {", "+      setTypeVariable(tparam, new VariableType(new BoundedSymbol(tparam, tparam.getRepresentation())));", "+    }"]}], "num": 21692}