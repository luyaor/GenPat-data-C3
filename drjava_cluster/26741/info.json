{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c05f8abf53c19f87f474d82f08146b6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4251d75a52784c84aea7bb34eb8874b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ToolbarOptionComponent.java", "commitBeforeChange": "6815df02bf2c6da2982073900e33dbad7bfa8424", "commitAfterChange": "0ef216d80b2e9cc63f2ef7b2c23490480ef77851", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ToolbarOptionComponent(String title, Frame parent)", "signatureAfterChange": "   public ToolbarOptionComponent(String title, Frame parent)", "diff": ["-    super( title, parent);", "+    super(title, parent);", "+", "+    DrJava.getConfig().addOptionListener(OptionConstants.TOOLBAR_TEXT_ENABLED,", "+                                         new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oe) {", "+        resetToCurrent();", "+      }", "+    });", "+    DrJava.getConfig().addOptionListener(OptionConstants.TOOLBAR_ICONS_ENABLED,", "+                                         new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oe) {", "+        resetToCurrent();", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74148c38be0638d5273f23f2a2a40461", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/swing/AppletComponent.java", "commitBeforeChange": "7f27d4def62ff1bda42279f1d632d1636f2811d4", "commitAfterChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void updateState()", "signatureAfterChange": "      private void updateState()", "diff": ["-      if (_state.equals(State.FRESH)) { _applet.init(); _state = State.PAUSED; }", "-      _applet.start();", "-      _state = State.RUNNING;", "+      if (_state.equals(State.FRESH)) {", "+        _state = State.PAUSED;", "+        // run Applet.init() outside teh event thread, as per bug report 3069101:", "+        // https://sourceforge.net/tracker/?func=detail&atid=438935&aid=3069101&group_id=44253", "+        edu.rice.cs.plt.concurrent.ConcurrentUtil.runInThread(new Runnable() {", "+          public void run() {", "+            _applet.init();", "+            _applet.start();", "+            _state = State.RUNNING;", "+            if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+            validate();", "+          }", "+        });", "+      }", "-    // lazily update size rather than trying to intercept all resizing methods", "-    if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+    if (_state.equals(State.RUNNING)) {", "+      // lazily update size rather than trying to intercept all resizing methods", "+      if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "825dcd36e82e5a6fb9783d4571cf8351", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ToolbarOptionComponent.java", "commitBeforeChange": "9c5777f5c4beabc12e35e029719473305aed7334", "commitAfterChange": "6f3940face1890969eb276e9b92d09c044ad9646", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ToolbarOptionComponent(String title, Frame parent)", "signatureAfterChange": "   public ToolbarOptionComponent(String title, Frame parent)", "diff": ["+    _noneButton = new JRadioButton(NONE);", "+    _noneButton.setActionCommand(NONE);", "+    ", "+    _group.add(_noneButton);", "+    _buttonPanel.add(_noneButton);", "+    DrJava.getConfig().addOptionListener(OptionConstants.TOOLBAR_ENABLED,", "+                                         new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oe) { ", "+        resetToCurrent();", "+      }", "+    });", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "867a7e9042664761b921121aa7738f95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "   protected void _setupMenu()", "signatureAfterChange": "   protected void _setupMenu()", "diff": ["+      final Action copyAction = new CopyAction(_view.getTextPane(), _clipboard);", "+      copyAction.setEnabled(false);", "+", "+      _view.addAction(IWorkbenchActionConstants.COPY, copyAction);", "+      ", "+    _view.addAction(IWorkbenchActionConstants.PASTE, ", "+\t\t   new PasteAction(_view.getTextPane(), _clipboard));", "+    _view.addSelectionListener(new SelectionAdapter() { ", "+\t    public void widgetSelected(SelectionEvent e) {", "+\t\t//System.out.println(\"About to Show:\" + ", "+\t\t//\t\t   _view.getTextPane().getSelectionCount());", "+\t\tcopyAction.setEnabled(", "+\t\t\t\t      (_view.getTextPane().getSelectionCount() > 0));", "+\t    }", "+\t});", "+\t\t\t ", "-        Vector<String> classpathElements = _model.getClasspath();", "+        Vector<URL> classpathElements = _model.getClasspath();", "-          cpBuf.append(classpathElements.get(i));", "+          cpBuf.append(classpathElements.get(i).toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9a035774cbe0bc903a6d54e6b5a773e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "405bec7d97445f0020939e0560dc10393430aac1", "commitAfterChange": "070ce5905e33fc289f79bfc0035862d6493d03f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DynamicJavaAdapter()", "signatureAfterChange": "   public DynamicJavaAdapter()", "diff": ["-    //_djInterpreter.setAccessible(true);", "+    if (DrJava.getConfig().getSetting(OptionConstants.ALLOW_PRIVATE_ACCESS).booleanValue()) {", "+      _djInterpreter.setAccessible(true);", "+    }", "+    DrJava.getConfig().addOptionListener(OptionConstants.ALLOW_PRIVATE_ACCESS, new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        _djInterpreter.setAccessible(oce.value.booleanValue());", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd89fd1e7f6db1c7796cd64aaae95357", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "512f2d01a44aebe9e820ea2b6904a7d9ee6beac7", "commitAfterChange": "7f5ff64d986e80db8fa3ceeb1048b991af6a4ea0", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 270, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    OptionListener<String> link382OptionListener = new OptionListener<String>() {", "+      public void optionChanged(OptionEvent<String> oce) {", "+        _javaAPIList = null;", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(JUNIT_3_8_2_LINK, link382OptionListener);", "+    OptionListener<Vector<String>> additionalLinkOptionListener = new OptionListener<Vector<String>>() {", "+      public void optionChanged(OptionEvent<Vector<String>> oce) {", "+        _javaAPIList = null;", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(JAVADOC_ADDITIONAL_LINKS, additionalLinkOptionListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a79f9c3eeb0eb43a92d35c6bac377a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "12067b12cea198f72f8758eab77d6f544c743a53", "commitAfterChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "methodNumberBeforeChange": 344, "methodNumberAfterChange": 345, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["+", "+    // DrJava Errors", "+    _toolBar.addSeparator();", "+    final JButton errorsButton = _createToolbarButton(_errorsAction);", "+    errorsButton.setVisible(false);", "+    errorsButton.setBackground(DrJava.getConfig().getSetting(DRJAVA_ERRORS_BUTTON_COLOR));", "+    DrJavaErrorHandler.setButton(errorsButton);", "+    _toolBar.add(errorsButton);", "+    /** The OptionListener for DRJAVA_ERRORS_BUTTON_COLOR. */", "+    OptionListener<Color> errBtnColorOptionListener = new OptionListener<Color>() {", "+      public void optionChanged(OptionEvent<Color> oce) {", "+        errorsButton.setBackground(oce.value);", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(DRJAVA_ERRORS_BUTTON_COLOR, errBtnColorOptionListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ee84bfeb2c8ab9fb528eec703987c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7b6e3a6da13b7dd368ad89b9fff988959ce6f154", "commitAfterChange": "fa3177c8f1a9365cfe319bc8c57ed12beb180d00", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    int state = config.getSetting(WINDOW_STATE).intValue();", "+    //ensure that we don't set window state to minimized", "+    state &= ~Frame.ICONIFIED;", "+    ", "+    if (!Toolkit.getDefaultToolkit().isFrameStateSupported(state)) {", "+      //we have a bad state, so reset to default", "+      state = WINDOW_STATE.getDefault();", "+    }", "+", "+    ", "+    //Work-aroung for Java bug #6365898?", "+    //setExtendedState does not work until the window in shown on Linux.", "+    final int stateCopy = state;", "+    addWindowListener(new WindowAdapter() {", "+      public void windowOpened(WindowEvent e) {", "+        setExtendedState(stateCopy);", "+        //this is a one-off listener", "+        removeWindowListener(this);", "+      }", "+    });"]}], "num": 26741}