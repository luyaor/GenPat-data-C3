{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d026e78f5a004bdd48a33665f75fa771", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6e1ee27bc609d0bf14cbaeec01aa4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "0fed03351fa05790a48229380b62c5e4589b0332", "commitAfterChange": "bb3d7a008c8c1c70f49fe5197e6722769a8fe6d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public VectorOptionComponent(VectorOption<T> opt, String text, Frame parent)", "signatureAfterChange": "   public VectorOptionComponent(VectorOption<T> opt, String text, Frame parent)", "diff": ["+    ", "+    /* Only used in VectorFileOptionComponent subclass */", "+    _moveUpButton = new JButton(new AbstractAction(\"Move Up\") {", "+      public void actionPerformed(ActionEvent ae) {", "+        if (!_list.isSelectionEmpty()) {", "+          int index = _list.getSelectedIndex();", "+          if (index > 0) {", "+            Object o = _listModel.getElementAt(index);", "+            _listModel.remove(index);", "+            _listModel.insertElementAt(o, index - 1);", "+            _list.setSelectedIndex(index - 1);", "+            notifyChangeListeners();", "+          }", "+        }", "+      }", "+    });", "+    /* Only used in VectorFileOptionComponent subclass */", "+    _moveDownButton = new JButton(new AbstractAction(\"Move Down\") {", "+      public void actionPerformed(ActionEvent ae) {", "+        if (!_list.isSelectionEmpty()) {", "+          int index = _list.getSelectedIndex();", "+          if (index < _listModel.getSize() - 1) {", "+            Object o = _listModel.getElementAt(index);", "+            _listModel.remove(index);", "+            _listModel.insertElementAt(o, index + 1);", "+            _list.setSelectedIndex(index + 1);", "+            notifyChangeListeners();", "+          }", "+        }", "+      }", "+    });", "+    ", "+    ", "-    _buttonPanel.add(_addButton);", "-    _buttonPanel.add(_removeButton);", "-    //buttons.setLayout(new BoxLayout(buttons, BoxLayout.X_AXIS));", "-    //buttons.add(Box.createGlue());", "-    //buttons.add(Box.createGlue());", "-    //buttons.add(Box.createGlue());", "+    _buttonPanel.setBorder(new EmptyBorder(5,5,5,5));", "+    _buttonPanel.setLayout(new BoxLayout(_buttonPanel, BoxLayout.X_AXIS));", "+    ", "+    _buttonPanel.add(Box.createHorizontalGlue());", "+    _addButtons(); // all buttons needs to be added consecutively as a group for glue to work properly               ", "+    _buttonPanel.add(Box.createHorizontalGlue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7587155a71ac3409563a19b51314ed05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString)", "signatureAfterChange": "      public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString)", "diff": ["+    ", "+    /** Default copy action.  Returns focus to the correct pane. */", "+    final Action copyAction = new AbstractAction(\"Copy contents to clipboard\", MainFrame.getIcon(\"Copy16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        getErrorListPane().selectAll();", "+        String t = getErrorListPane().getSelectedText();", "+        if (t != null) {", "+          if (t.length() != 0) {", "+            StringSelection stringSelection = new StringSelection(t);", "+            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();", "+            clipboard.setContents(stringSelection, getErrorListPane());", "+            ClipboardHistoryModel.singleton().put(t);", "+          }", "+        }", "+      }", "+    };", "+    addPopupMenu(copyAction);", "+    getPopupMenu().add(new AbstractAction(\"Save Copy of Contents...\", MainFrame.getIcon(\"Save16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        _frame._saveDocumentCopy(getErrorListPane().getErrorDocument());", "+      }", "+    });", "+    getPopupMenu().addSeparator();", "+    getPopupMenu().add(new AbstractAction(\"Print...\", MainFrame.getIcon(\"Print16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        getErrorListPane().getErrorDocument().print();", "+      }", "+    });", "+    getPopupMenu().add(new AbstractAction(\"Print Preview...\", MainFrame.getIcon(\"PrintPreview16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        getErrorListPane().getErrorDocument().preparePrintJob();", "+        new PreviewErrorFrame();", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "879002cfc55d5211ee5a00005d776dcf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/EditExternalDialog.java", "commitBeforeChange": "ac02f569f5916c295bec9f11458dcf6db5964244", "commitAfterChange": "91734830bfc37ccb85bb6b7693b74ec1fa3e1c29", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["-    Action upAction = new AbstractAction(\"Move Up\") {", "+", "+    _dropDownButton = new DropDownButton();", "+    _upAction = new AbstractAction(\"Move Up\") {", "-    _upButton = new JButton(upAction);", "-    Action downAction = new AbstractAction(\"Move Down\") {", "+    _downAction = new AbstractAction(\"Move Down\") {", "-    _downButton = new JButton(downAction);", "+    ", "+    _importAction = new AbstractAction(\"Import...\") {", "+      public void actionPerformed(ActionEvent e) {", "+        _import();", "+      }", "+    };", "+    _exportAction = new AbstractAction(\"Export...\") {", "+      public void actionPerformed(ActionEvent e) {", "+        _export();", "+      }", "+    };", "+    ", "+    _importButton = new JButton(_importAction);", "+    _exportButton = new JButton(_exportAction);", "+    _upButton = new JButton(_upAction);", "+    _downButton = new JButton(_downAction);", "+", "+    _dropDownButton.getPopupMenu().add(_importAction);", "+    _dropDownButton.getPopupMenu().add(_exportAction);", "+    ", "+    _dropDownButton.setIcon(new ImageIcon(getClass().getResource(\"/edu/rice/cs/drjava/ui/icons/Down16.gif\")));", "+", "-", "+    ", "+    bottom.add(_dropDownButton);", "+        _upAction.setEnabled(_list.getSelectedIndex()>0);", "+        _downAction.setEnabled(_list.getSelectedIndex()<_list.getModel().getSize());", "+    ", "+    _importChooser = new JFileChooser() {", "+      public void setCurrentDirectory(File dir) {", "+        //next two lines are order dependent!", "+        super.setCurrentDirectory(dir);", "+        setDialogTitle(\"Import:  \" + getCurrentDirectory());", "+      }", "+    };", "+    _importChooser.setPreferredSize(new Dimension(650, 410));", "+    _importChooser.setFileFilter(_extProcFilter);", "+    _importChooser.setMultiSelectionEnabled(false);", "+", "+    _exportChooser = new JFileChooser() {", "+      public void setCurrentDirectory(File dir) {", "+        //next two lines are order dependent!", "+        super.setCurrentDirectory(dir);", "+        setDialogTitle(\"Export:  \" + getCurrentDirectory());", "+      }", "+    };", "+    _exportChooser.setPreferredSize(new Dimension(650, 410));", "+    _exportChooser.setFileFilter(_saveExtProcFilter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f349385441d5161146f8d7bce0cb305", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "bfbbbb34f309b13ef404f393392d7ea8745940cd", "commitAfterChange": "9d671cad5f849049059b2e199aea7279dd398525", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private List<File> _compileLanguageLevelsFiles(List<File> files, List<DJError> errors,                                                            Iterable<File> classPath, Iterable<File> bootClassPath)", "signatureAfterChange": "   private List<File> _compileLanguageLevelsFiles(List<File> files, List<DJError> errors,                                                            Iterable<File> classPath, Iterable<File> bootClassPath)", "diff": ["-    LinkedList<File> filesToBeClosed = new LinkedList<File>(); // Used to record .java files that are open at the same time as their .dj? files.", "+    final LinkedList<File> filesToBeClosed = new LinkedList<File>(); // Used to record .java files that are open at the same time as their .dj? files.", "-        if(files.contains(javaFile)){", "-          ", "+        if(files.contains(javaFile)){          ", "-          ", "-        } ", "+          // delete file later so closeFiles doesn't complain about missing files", "+        }", "+        else {", "+          // Delete the stale .java file now (if it exists), a file with this name will subsequently be generated", "+          javaFile.delete();", "+        }", "-        ", "-        // Delete the stale .java file (if it exists), a file with this name will subsequently be generated", "-        javaFile.delete();", "-      new edu.rice.cs.drjava.ui.DrJavaScrollableDialog(null, \"Warning: Files need to be closed\",", "-                                                       \"The following files have matching .dj? files open.\", ", "-                                                       \"These .java files need to be closed for proper compiling. \\n \\n \\n\" +", "-                                                       filesToBeClosed.toString().replace(\", \",\"\\n\"),true).show();", "+      final JButton closeButton = new JButton(new AbstractAction(\"Close Files\") {", "+        public void actionPerformed(ActionEvent e) {", "+          // no op, i.e. delete everything", "+        }", "+      });", "+      final JButton keepButton = new JButton(new AbstractAction(\"Keep Open\") {", "+        public void actionPerformed(ActionEvent e) {", "+          // clear the set, i.e. do not delete anything", "+          filesToBeClosed.clear();", "+        }", "+      });", "+//      new edu.rice.cs.drjava.ui.DrJavaScrollableDialog(null, \"Warning: Files need to be closed\",", "+//                                                       \"The following files have matching .dj? files open.\", ", "+//                                                       \"These .java files need to be closed for proper compiling. \\n \\n \\n\" +", "+//                                                       filesToBeClosed.toString().replace(\", \",\"\\n\"),true).show();", "+      ScrollableListDialog<File> dialog = new ScrollableListDialog.Builder<File>()", "+        .setTitle(\"Java File\"+(filesToBeClosed.size()==1?\"\":\"s\")+\" Need to Be Closed\")", "+        .setText(\"The following .java \"+(filesToBeClosed.size()==1?", "+                                           \"file has a matching .dj? file\":", "+                                           \"files have matching .dj? files\")+\" open.\\n\"+", "+                 (filesToBeClosed.size()==1?", "+                    \"This .java file needs\":", "+                    \"These .java files need\")+\" to be closed for proper compiling.\")", "+        .setItems(filesToBeClosed)", "+        .setMessageType(JOptionPane.WARNING_MESSAGE)", "+        .setFitToScreen(true)", "+        .clearButtons()", "+        .addButton(closeButton)", "+        .addButton(keepButton)", "+        .build();", "+      ", "+      dialog.showDialog();", "+      ", "+      LinkedList<OpenDefinitionsDocument> docsToBeClosed = new LinkedList<OpenDefinitionsDocument>();", "+      for(File f: filesToBeClosed) {", "+        try {", "+          docsToBeClosed.add(_model.getDocumentForFile(f));", "+        }", "+        catch(IOException ioe) { /* ignore, just don't close this document */ }", "+      }", "+      _model.closeFiles(docsToBeClosed);", "+      // delete the files now because closeFiles has executed and won't complain about missing files anymore", "+      for(File f: filesToBeClosed) {        ", "+        // Delete the stale .java file now (if it exists), a file with this name will subsequently be generated", "+        f.delete();", "+      }", "-                     \"level files. Do you want to delete the class files in the following directories?\")", "+                     \"level files. Do you want to delete the class files in the following director\"+(dirsWithLLFiles.size()==1?\"y\":\"ies\")+\"?\")"]}], "num": 20802}