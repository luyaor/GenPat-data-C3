{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6564563f23b6b9f922f16af1ad83ccfb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d836b67e93837a7627ba8140aa0420", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void killInterpreterJVM(File wd)", "signatureAfterChange": "   public void restartInterpreterJVM(boolean force)", "diff": ["-   */", "-  public void killInterpreterJVM(File wd) {", "-    debug.logStart();", "-    _startupComplete.attemptEnsureSignaled();", "-    boolean restart = (wd != null);", "-    InterpreterJVMRemoteI current;", "-    synchronized (_startupLock) {", "-      _workingDir = wd;", "-      _restart = restart;", "-      _cleanlyRestarting = true;", "-      current = _interpreterJVM.getAndSet(null);", "-    }", "-    if (current != null) {", "-      if (restart) _interactionsModel.interpreterResetting();", "-      quitSlave();", "-      // new slave JVM is started by in handleSlaveQuit()", "-    }", "-    debug.logEnd();", "-  }", "+   */", "+  public void restartInterpreterJVM(boolean force) { _state.value().restart(force); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce3d4e298345ac230eed9e2afa4284b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected void handleSlaveQuit(int status)", "signatureAfterChange": "   protected void handleSlaveQuit(int status)", "diff": ["-    boolean wasRestarting;", "-    boolean doRestart;", "-    synchronized (_startupLock) {", "-      wasRestarting = _cleanlyRestarting;", "-      _cleanlyRestarting = false;", "-      doRestart = _restart;", "-      _interpreterJVM.set(null);", "-    }", "-    if (!wasRestarting) { _interactionsModel.replCalledSystemExit(status); }", "-    if (doRestart) {", "-      // We have already fired this event if we are cleanly restarting", "-      if (!wasRestarting) { _interactionsModel.interpreterResetting(); }", "-      startInterpreterJVM();", "-    }", "+    _state.value().stopped(status);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e595d3200c1990ac19aa78b67a96ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected void handleSlaveConnected(SlaveRemote newSlave)", "signatureAfterChange": "   protected void handleSlaveConnected(SlaveRemote newSlave)", "diff": ["-    Boolean allowAccess = DrJava.getConfig().getSetting(OptionConstants.ALLOW_PRIVATE_ACCESS);", "-    try { slaveCast.setPrivateAccessible(allowAccess); }", "-    catch (RemoteException re) { _handleRemoteException(re); }", "-", "-    synchronized (_startupLock) {", "-      _restart = true;", "-      _cleanlyRestarting = false;", "-      _startupAttempts = 0;", "-      _slaveJVMUsed = false;", "-      _interpreterJVM.set(slaveCast); // initialized after all other state is set", "-      _startupComplete.signal();", "-    }", "-    _interactionsModel.interpreterReady(_workingDir);", "-    _junitModel.junitJVMReady();", "+    _state.value().started(slaveCast);"]}], "num": 24986}