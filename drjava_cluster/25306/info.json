{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ba37d7953fb4d3cb18803f655229308", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d6e81f353a43f1bab2ff21501040d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "a30a5503c4bed745d3bf75a4b449d026f5c00795", "commitAfterChange": "18853ae3d062d9694905fb3ffaa507db78319f52", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public Pair<String,String> getVariableToString(String var)", "diff": ["-  public String getVariableToString(String var) {", "-    if (!isValidFieldName(var)) { return \"<error in watch name>\"; }", "-    Object[] val = getVariable(var);", "-    if (val.length == 0) { return null; }", "+  public Pair<String,String> getVariableToString(String var) {", "+//    if (!isValidFieldName(var)) { return \"<error in watch name>\"; }", "+    Pair<Object,String>[] val = getVariable(var);", "+    if (val.length == 0) { return new Pair<String,String>(null,null); }", "-      Object o = val[0];", "-      try { return TextUtil.toString(o); }", "-      catch (Throwable t) { return \"<error in toString()>\"; }", "+      Object o = val[0].first();", "+      try { return new Pair<String,String>(TextUtil.toString(o),val[0].second()); }", "+      catch (Throwable t) { return new Pair<String,String>(\"<error in toString()>\",\"\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da9da7ecc9da98d4d0cf247359dcfdf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "commitAfterChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Pair<String,String> getVariableToString(String var)", "signatureAfterChange": "   public Pair<String,String> getVariableToString(String var)", "diff": ["+    synchronized(_stateLock) {", "-    Pair<Object,String>[] val = getVariable(var);", "-    if (val.length == 0) { return new Pair<String,String>(null,null); }", "-    else {", "-      Object o = val[0].first();", "-      try { return new Pair<String,String>(TextUtil.toString(o),val[0].second()); }", "-      catch (Throwable t) { return new Pair<String,String>(\"<error in toString()>\",\"\"); }", "+      Pair<Object,String>[] val = getVariable(var);  // recursive locking", "+      if (val.length == 0) { return new Pair<String,String>(null,null); }", "+      else {", "+        Object o = val[0].first();", "+        try { return new Pair<String,String>(TextUtil.toString(o),val[0].second()); }", "+        catch (Throwable t) { return new Pair<String,String>(\"<error in toString()>\",\"\"); }", "+      }"]}], "num": 25306}