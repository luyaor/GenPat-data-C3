{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15eb411fd302faa7539f91f2f5481b4f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d6c28cbeec68abd9473ad4901f2750", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsListTest.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIsEmpty()", "signatureAfterChange": "      public void testIsEmpty()", "diff": ["-    assertTrue(isEmpty(emptyStrings));", "-    assertFalse(isEmpty(singletonStrings));", "-    assertFalse(isEmpty(twoStrings));", "-    assertFalse(isEmpty(threeStrings));", "+    assertTrue(emptyStrings.isEmpty());", "+    assertFalse(singletonStrings.isEmpty());", "+    assertFalse(twoStrings.isEmpty());", "+    assertFalse(threeStrings.isEmpty());", "-    assertTrue(isEmpty(emptyNumbers));", "-    assertFalse(isEmpty(singletonNumbers));", "-    assertFalse(isEmpty(twoNumbers));", "-    assertFalse(isEmpty(threeNumbers));", "+    assertTrue(emptyNumbers.isEmpty());", "+    assertFalse(singletonNumbers.isEmpty());", "+    assertFalse(twoNumbers.isEmpty());", "+    assertFalse(threeNumbers.isEmpty());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa470b922b833fbed8890f9590ffc06f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "5e007ed2a02c59f9c5f0ddad6c5fd3c21d5bb370", "commitAfterChange": "098248186c2cd94be6c7bc9bfe60fa3101b5a0ba", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void updateLines(R region)", "signatureAfterChange": "   public void updateLines(R r)", "diff": ["-  /** Updates _lineStartPos, _lineEndPos in regions following (and including) r.   Assumes this contains r. */", "-  public void updateLines(R region) { ", "+    * necessarily a region in this manager.  */", "+  public void updateLines(R r) { ", "-    /* Get the tailSet consisting of the ordered set of regions [start, end) such that end > offset. */", "+    /* Get the tailSet consisting of the ordered set of regions >= r. */", "-    SortedSet<R> tail = getTailSet(region);", "+    SortedSet<R> tail = getTailSet(r);", "-    assert (tail.size() > 0);", "-    for (R r: tail) r.update();", "+    // tail can be empty if r is a constructed DocumentRegion", "+    for (R region: tail) {", "+      if (region.getStartOffset() == region.getEndOffset()) removeRegion(region);", "+      region.update();", "+    }"]}], "num": 26524}