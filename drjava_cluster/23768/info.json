{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c732a5e2ff20ed359aedd89f1987f374", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04e948e128fc2d7b88d5e021306d8a61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/JVMProcessCreator.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Process start() throws IOException", "signatureAfterChange": "   public Process start() throws IOException", "diff": ["+    List<String> jvmArgs = StringOps.commandLineToList(StringOps.replaceVariables(_jvmArgs, _props));", "+    List<String> cmds = StringOps.commandLineToList(StringOps.replaceVariables(_cmdline, _props));", "-    args.addAll(_jvmArgs);", "-    args.addAll(_command);", "+    args.addAll(jvmArgs);", "+    args.addAll(cmds);", "+", "+    String workdir = StringOps.replaceVariables(_workdir, _props);", "+    File dir = null;", "+    if (!workdir.trim().equals(\"\")) { dir = new File(workdir); }", "+    ", "-    return Runtime.getRuntime().exec(cmdarray,env,_dir);", "+    return Runtime.getRuntime().exec(cmdarray,env,dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b7aeb73a996e33228e3e2d7be27e98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessCreator.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Process start() throws IOException", "signatureAfterChange": "   public Process start() throws IOException", "diff": ["-    String[] cmdarray = _command.toArray(new String[_command.size()]);", "+    List<String> cmds = StringOps.commandLineToList(StringOps.replaceVariables(_cmdline, _props));", "+    String[] cmdarray = cmds.toArray(new String[cmds.size()]);", "+    String workdir = StringOps.replaceVariables(_workdir, _props);", "+    File dir = null;", "+    if (!workdir.trim().equals(\"\")) { dir = new File(workdir); }", "-    return Runtime.getRuntime().exec(cmdarray,env,_dir);", "+    return Runtime.getRuntime().exec(cmdarray,env,dir);"]}], "num": 23768}