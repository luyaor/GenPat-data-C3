{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d28ed56b7ff76ae40053d441b504cbe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1502c312a40611e65b0c3e02df528b30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public ErrorPanel(SingleDisplayModel model, MainFrame frame, String s)", "signatureAfterChange": "    public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString)", "diff": ["-  public ErrorPanel(SingleDisplayModel model, MainFrame frame, String s){", "-    super(frame, s);", "+  public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString){", "+    super(frame, tabString);", "+    ", "+    _mainPanel.setLayout(new BorderLayout());", "+    ", "+    _leftPanel = new JPanel(new BorderLayout());", "+    ", "+    _errorNavPanel = new JPanel(new GridBagLayout());", "+    ", "+    ", "+    /******** Initialize the error navigation buttons ********/", "+    _errorNavButtonsPanel = new JPanel(new BorderLayout());", "+    ", "+    _nextErrorButton = new JButton(MainFrame.getIcon(\"Down16.gif\"));//new JButton(\"Next Error\");", "+    _prevErrorButton = new JButton(MainFrame.getIcon(\"Up16.gif\"));//new JButton(\"Prev Error\");", "+", "+    _nextErrorButton.setMargin(new Insets(0,0,0,0));", "+    _nextErrorButton.setToolTipText(\"Go to the next error\");", "+    _prevErrorButton.setMargin(new Insets(0,0,0,0));", "+    _prevErrorButton.setToolTipText(\"Go to the previous error\");", "+", "+    ", "+//    _errorPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 3)); ", "+//    _errorPanel.setPreferredSize(new Dimension(27,35));", "+//    _errorPanel.add(_prevErrorButton);", "+//    _errorPanel.add(_nextErrorButton);", "+//    _uiBox.add(_errorPanel, BorderLayout.WEST);", "+    _errorNavButtonsPanel.add(_prevErrorButton, BorderLayout.NORTH);", "+    _errorNavButtonsPanel.add(_nextErrorButton, BorderLayout.SOUTH);", "+    _errorNavButtonsPanel.setBorder(new EmptyBorder(18,5,18,5)); // 5 pix padding on sides", "+    ", "+//    JPanel middlePanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 0, 0));", "+//    middlePanel.add(_errorNavButtonsPanel);", "+    ", "+    _errorNavPanel.add(_errorNavButtonsPanel);//, BorderLayout.CENTER);", "+    _showHighlightsCheckBox = new JCheckBox( \"Highlight source\", true);", "+    ", "+//    _mainPanel.setMinimumSize(new Dimension(225,60));", "+    // We make the vertical scrollbar always there.", "+    // If we don't, when it pops up it cuts away the right edge of the", "+    // text. Very bad.", "+    _scroller = new BorderlessScrollPane(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                                         JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);", "+    ", "+    _leftPanel.add(_scroller, BorderLayout.CENTER);", "+    _leftPanel.add(_errorNavPanel, BorderLayout.EAST);", "+", "+    customPanel = new JPanel(new BorderLayout());", "+    _rightPanel = new JPanel(new BorderLayout());", "+    _rightPanel.setBorder(new EmptyBorder(0,5,0,5)); // 5 pix padding on sides", "+//    uiBox.setBorder(new EmptyBorder(5,0,0,0)); // 5 pix padding on top", "+    _rightPanel.add(new JLabel(labelString, SwingConstants.LEFT), BorderLayout.NORTH);", "+    _rightPanel.add(customPanel, BorderLayout.CENTER);", "+    _rightPanel.add(_showHighlightsCheckBox, BorderLayout.SOUTH);", "+    ", "+    _mainPanel.add(_leftPanel, BorderLayout.CENTER);", "+    _mainPanel.add(_rightPanel, BorderLayout.EAST);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180d3410f8bc59ac0bee653cae329dca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HistorySaveDialog.java", "commitBeforeChange": "f7d7f9408f2057a9b6a01f331a339bb27027bc95", "commitAfterChange": "03dd354632fbfc12bf279640160bfd934404dc39", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public HistorySaveDialog (MainFrame frame, FileSaveSelector selector, String history)", "signatureAfterChange": "      public HistorySaveDialog (MainFrame frame)", "diff": ["-  public HistorySaveDialog (MainFrame frame, FileSaveSelector selector, String history) {", "-    _frame = frame;", "-    _selector = selector;", "-    _history = history;", "-    ", "-    Container content = this.getContentPane();", "+  ", "+  public HistorySaveDialog (MainFrame frame) {", "+    _dialog = new JDialog(frame,\"Save Interactions History\", true);    ", "+    Container content = _dialog.getContentPane();", "-    _textArea.append(_history);", "-    _saveButton = new JButton(\"Save\");", "-    _saveButton.addActionListener(_saveAction);", "-    _cancelButton = new JButton(\"Cancel\");", "-    _cancelButton.addActionListener(_cancelAction);", "+    JButton _saveButton = new JButton(\"Save\"),", "+      _cancelButton = new JButton(\"Cancel\");", "+    _cancelButton.addActionListener(_cancelListener);", "+    _saveButton.addActionListener(_saveListener);", "-    this.setTitle(\"Save Interactions History\");", "-    this.setSize(400,300);", "-    this.setLocation(300,300);", "+    _dialog.setSize(400,300);", "+    _dialog.setLocationRelativeTo(frame);", "-    _textScroll = new JScrollPane(_textArea,", "-                                  JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,", "-                                  JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "-    ", "-    _buttonPanel = new JPanel();", "-    _buttonPanel.setLayout(new BoxLayout(_buttonPanel, BoxLayout.X_AXIS));", "-    _buttonPanel.add(Box.createGlue());", "-    _buttonPanel.add(_saveButton);", "+    JScrollPane _textScroll = ", "+      new BorderlessScrollPane(_textArea,", "+                               JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                               JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "+    JPanel scrollWrapper = new JPanel(new BorderLayout(0,5));", "+    scrollWrapper.setBorder(new EmptyBorder(5,5,0,5));", "+    scrollWrapper.add(new JLabel(\"Make your editing changes, and then click \\\"Save\\\".\"),BorderLayout.NORTH);", "+    scrollWrapper.add(_textScroll,BorderLayout.CENTER);", "+    JPanel bottomPanel = new JPanel(new BorderLayout());", "+    JPanel _buttonPanel = new JPanel(new GridLayout(1,0,5,5));", "+", "+    _buttonPanel.add(_saveButton);", "+    bottomPanel.add(_buttonPanel,BorderLayout.EAST);", "+    bottomPanel.setBorder(new EmptyBorder(5,5,5,5));", "+    content.add(scrollWrapper, BorderLayout.CENTER);", "+    content.add(bottomPanel, BorderLayout.SOUTH);", "-    content.add(_textScroll, BorderLayout.CENTER);", "-    content.add(_buttonPanel, BorderLayout.SOUTH);", "-    ", "-    this.show();    ", "+    _dialog.getRootPane().setDefaultButton(_saveButton);", "+    _textArea.requestDefaultFocus();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a696799ee1bb4651d3cc2f730598cfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/UncaughtExceptionWindow.java", "commitBeforeChange": "8a3aaf6e3fe6fafb27249a8ad4b2c013ef4ae05a", "commitAfterChange": "102797244429ae58868d0037b49467f5a00bbd6a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public UncaughtExceptionWindow(Throwable exception)", "signatureAfterChange": "   public UncaughtExceptionWindow(JFrame frame, Throwable exception)", "diff": ["-  public UncaughtExceptionWindow(Throwable exception) {", "+  public UncaughtExceptionWindow(JFrame frame, Throwable exception) {", "+    super(frame,\"Unexpected Error\");", "-    this.setLocation(200,200);", "-    Insets ins = new Insets(20,20,20,20);", "+    //this.setLocation(200,200);", "+    setLocationRelativeTo(frame);", "-      // If we set this pane to be of type text/rtf, it wraps based on words", "-      // as opposed to based on characters.", "+    //Insets ins = new Insets(20,20,20,20);", "+    ", "+    // If we set this pane to be of type text/rtf, it wraps based on words", "+    // as opposed to based on characters.", "-    _stackTrace.setBackground(new Color(204,204,204));", "-    _stackTrace.setMargin(ins);", "-    _exceptionInfo = new JTextArea(_getExceptionString());", "-    _exceptionInfo.setBackground(new Color(204,204,204));", "-    _exceptionInfo.setMargin(ins);", "-    _exceptionInfo.setEditable(false);", "-    _exceptionInfo.setLineWrap(true);", "-    _exceptionInfo.setWrapStyleWord(true);", "+    //_stackTrace.setBackground(new Color(204,204,204));", "+    // _stackTrace.setMargin(ins);", "+    msg[1] = exception.toString();", "+    _exceptionInfo = new JOptionPane(msg,JOptionPane.ERROR_MESSAGE,", "+                                     JOptionPane.DEFAULT_OPTION,null,", "+                                     new Object[0]);", "+      //new JTextArea(_getExceptionString());", "+    //_exceptionInfo.setBackground(new Color(204,204,204));", "+    //_exceptionInfo.setMargin(ins);", "+    //_exceptionInfo.setEditable(false);", "+    //_exceptionInfo.setLineWrap(true);", "+    //_exceptionInfo.setWrapStyleWord(true);", "-    _okPanel.setBackground(new Color(204,204,204));", "+    //_okPanel.setBackground(new Color(204,204,204));", "-    _topPanel = new JPanel();//new BorderLayout());", "-    _topPanel.add(_exceptionInfo);//, BorderLayout.CENTER);", "+    //_topPanel = new JPanel();//new BorderLayout());", "+    //_topPanel.add(_exceptionInfo);//, BorderLayout.CENTER);", "-    _stackTraceScroll = new JScrollPane(_stackTrace, ", "-                                        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "-                                        JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "-    this.getContentPane().setLayout(new BorderLayout());", "-    this.getContentPane().add(_exceptionInfo, BorderLayout.NORTH);", "-    this.getContentPane().add(_stackTraceScroll, BorderLayout.CENTER);", "-    this.getContentPane().add(_okPanel, BorderLayout.SOUTH);", "-    this.setTitle(\"Uncaught Exception\");", "+    _stackTraceScroll = new ", "+      BorderlessScrollPane(_stackTrace, ", "+                           JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                           JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "+    JPanel cp = new JPanel(new BorderLayout(5,5));", "+    cp.setBorder(new EmptyBorder(5,5,5,5));", "+    setContentPane(cp);", "+    cp.add(_exceptionInfo, BorderLayout.NORTH);", "+    cp.add(_stackTraceScroll, BorderLayout.CENTER);", "+    cp.add(_okPanel, BorderLayout.SOUTH);", "+    // this.setTitle(\"Uncaught Exception\");", "-    this.setVisible(true);", "+    //this.setVisible(true);", "+    show();"]}], "num": 18788}