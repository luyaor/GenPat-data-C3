{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8484acdf4b289425bc1adb85109ec5e3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a45e5f5c63c540738907c68390a3f650", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "signatureAfterChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "diff": ["-  /** Delegate to method in LLV. */", "+  /** Delegate to helper method. */", "-    simpleAnonymousClassInstantiationHelper(that, _bodyData);", "+    SymbolData enclosing = getQualifiedSymbolData(_enclosingClassName);", "+    assert enclosing != null;", "+    simpleAnonymousClassInstantiationHelper(that, enclosing);", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbfa52310334d09011ae3e78dbf71531", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that)", "signatureAfterChange": "   public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that)", "diff": ["-  /** Delegate to method in LLV. */", "-  public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that) {", "-    complexAnonymousClassInstantiationHelper(that, _bodyData);", "+  /** Delegate to helper method. */", "+  public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that) {", "+    SymbolData enclosing = getQualifiedSymbolData(_enclosingClassName);", "+    assert enclosing != null;", "+    complexAnonymousClassInstantiationHelper(that, enclosing);  // TODO: the wrong enclosing context?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0c47ad5887fc5db3e6be4779d827d34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 47, "signatureBeforeChange": "           public void testComplexAnonymousClassInstantiationHelper()", "signatureAfterChange": "     public void xtestComplexAnonymousClassInstantiationHelper()", "diff": ["-    ", "-    public void testComplexAnonymousClassInstantiationHelper() {", "+    /* NOTE: This is test excluded because the tested method is now a no-op. */", "+    public void xtestComplexAnonymousClassInstantiationHelper() {", "-     _fv.complexAnonymousClassInstantiationHelper(basic, _sd1);", "+     _fv._enclosingClassName = \"i.like.monkey\";", "+     _fv.complexAnonymousClassInstantiationHelper(basic, _sd1);  // TODO: the wrong enclosing context?"]}], "num": 1805}