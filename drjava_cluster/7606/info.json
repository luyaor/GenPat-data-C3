{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "080b5bbff6b508b845591315555e67e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d9e6fba8dfdc2e27c08be17c822bf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public synchronized void addWatch(String field) throws DebugException", "signatureAfterChange": "   public synchronized void addWatch(String field) throws DebugException", "diff": ["-    _ensureReady();", "+    // _ensureReady();", "-    _watches.add(new DebugWatchData(field));", "+    final DebugWatchData w = new DebugWatchData(field);", "+    _watches.add(w);", "+    ", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.watchSet(w); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df09610e98dba626e26c74bad36da49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "08f616afaebe02cc02ba5da4da4990852caead81", "commitAfterChange": "879a487e79b03eab55f32f29728bf19cb9181971", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, final boolean allTests)", "diff": ["-  private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests) {", "+  private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, final boolean allTests) {", "-              _jvm.runTestSuite();", "+              boolean testsPresent = _jvm.runTestSuite();  // The false boolean return value could be changed to an exception.", "+              if (! testsPresent) throw new RemoteException(\"No unit test classes were passed to the slave JVM\");", "-            catch(RemoteException e) { ", "-              /* System.err.println(\"Caught \" + e); */", "-              throw new UnexpectedException(e); ", "+            catch(RemoteException e) { // Unit testing was aborted; cleanup", "+              EventQueue.invokeLater(new Runnable() { public void run() { nonTestCase(allTests); } });", "-        // Probably a java.rmi.UnmarshalException caused by the interruption of unit testing.", "-        // Swallow the exception and proceed."]}], "num": 7606}