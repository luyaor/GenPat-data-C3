{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "000256413b9e3348cfbfc94cb4fd56cf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e349b1bb53f8042b4c407af6c6f2b19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "c0f3fda00a0dfdfc7ba1813b053360e729d2a0e8", "commitAfterChange": "c6a161a5a4f58810a30c95aeb5df1cdc34d75882", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-    _jvm.setOptionArgs(DrJava.getConfig().getSetting(SLAVE_JVM_ARGS));", "+    StringBuilder sb = new StringBuilder();", "+    if (!(\"\".equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX).trim()))) {", "+      sb.append(\"-Xmx\");", "+      sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "+      sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "+      sb.append(\" \");", "+    }", "+    sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_ARGS));", "+    _jvm.setOptionArgs(sb.toString());", "-    DrJava.getConfig().addOptionListener(SLAVE_JVM_ARGS, new OptionListener<String>() {", "-      public void optionChanged(OptionEvent<String> oe) { _jvm.setOptionArgs(oe.value); }", "-    }); ", "+    OptionListener<String> updateListener = new OptionListener<String>() {", "+      public void optionChanged(OptionEvent<String> oe) {", "+        StringBuilder sb = new StringBuilder();", "+        if (!(\"\".equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX).trim()))) {", "+          sb.append(\"-Xmx\");", "+          sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "+          sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "+          sb.append(\" \");", "+        }", "+        sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_ARGS));", "+        _jvm.setOptionArgs(sb.toString());", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(SLAVE_JVM_ARGS, updateListener); ", "+    DrJava.getConfig().addOptionListener(SLAVE_JVM_XMX, updateListener); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc230f89273852e4f9902e6c6515d9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-    try { _jvm = new MainJVM(workDir); }", "-    catch(java.rmi.server.ExportException e) {", "-      if (e.getMessage().equals(\"Listen failed on port: 0\")) throw new RuntimeException(e);", "-      else throw new UnexpectedException(e);", "-    }", "-    catch(RemoteException e) { throw new UnexpectedException(e); }", "+    _jvm = new MainJVM(workDir);", "-    ", "-    StringBuilder sb = new StringBuilder();", "-    if ((!(\"\".equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX)))) &&", "-        (!(OptionConstants.heapSizeChoices.get(0).equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX))))) {", "-      sb.append(\"-Xmx\");", "-      sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "-      sb.append(\"M \");", "-    }", "-    sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_ARGS));", "-    _jvm.setOptionArgs(sb.toString());", "-    ", "-    OptionListener<String> updateListener = new OptionListener<String>() {", "-      public void optionChanged(OptionEvent<String> oe) {", "-        StringBuilder sb = new StringBuilder();", "-        if ((!(\"\".equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX)))) &&", "-            (!(OptionConstants.heapSizeChoices.get(0).equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX))))) { ", "-          sb.append(\"-Xmx\");", "-          sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "-          sb.append(\"M \");", "-        }", "-        sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_ARGS));", "-        _jvm.setOptionArgs(sb.toString());", "-      }", "-    };", "-    DrJava.getConfig().addOptionListener(SLAVE_JVM_ARGS, updateListener); ", "-    DrJava.getConfig().addOptionListener(SLAVE_JVM_XMX, updateListener); ", "-    // Note: starting the JVM in another thread does not appear to improve performance", "-//    AbstractMasterJVM._log.log(\"Starting the interpreter in \" + this);", "-    _jvm.startInterpreterJVM();", "+    new Thread(\"Start interpreter JVM\") {", "+      public void run() { _jvm.startInterpreterJVM(); }", "+    }.start();"]}], "num": 4326}