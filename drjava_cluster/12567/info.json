{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ba02ce97af324c5231804a001d8877b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e5d2d2da0d415fd046176ce8003a67b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "8714a43a313a1a0d2ca9cc83816dab7a08ff011b", "commitAfterChange": "ea5cfb95023de08fddeb23c31d383ebdee6d9006", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   void indentLines()", "signatureAfterChange": "   private void _indentLines()", "diff": ["-  void indentLines() {", "+  private void _indentLines() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "333596691fb59524127218d229a51304", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public TypeData forUninitializedVariableDeclarator(UninitializedVariableDeclarator that)", "signatureAfterChange": "   public TypeData forUninitializedVariableDeclarator(UninitializedVariableDeclarator that)", "diff": ["-    final TypeData type_result = getSymbolData(that.getType().getName(), _data, that.getType());", "-    final TypeData name_result = that.getName().visit(this);", "-    return forUninitializedVariableDeclaratorOnly(that, type_result, name_result);", "+    final TypeData typeRes = getSymbolData(that.getType().getName(), _data, that.getType());", "+    final TypeData nameRes = that.getName().visit(this);", "+    return forUninitializedVariableDeclaratorOnly(that, typeRes, nameRes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e69bd1df7f644cd6ea7179fdd71e63e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": "      void _saveProjectHelper(File file)", "signatureAfterChange": "      void _saveProjectHelper(File file)", "diff": ["-      if (file.getName().indexOf(\".\") == -1) file =  new File (file.getAbsolutePath() + \".pjt\");", "-      String filename = file.getCanonicalPath();", "-      _model.saveProject(filename, _gatherDocInfo());", "+      if (file.getName().indexOf(\".\") == -1) file = new File (file.getAbsolutePath() + \".pjt\");", "+      String fileName = file.getCanonicalPath();", "+      _model.saveProject(file, _gatherDocInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd0b3b0650a5d0718774c65d196bca9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public TypeData forExpressionStatement(ExpressionStatement that)", "signatureAfterChange": "   public TypeData forExpressionStatement(ExpressionStatement that)", "diff": ["-    final TypeData expression_result = that.getExpression().visit(etc);", "+    final TypeData exprRes = that.getExpression().visit(etc);", "-    return expression_result;", "+    return exprRes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94728d5cc9da9ebb9da7735c9615da69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "8a6aa1a4952b620a2a0738d8a36f5b0059482f99", "commitAfterChange": "ddbef72a194d17966584ef9d18603b05f8480094", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public <T extends INavigatorItem> Enumeration<T> getDocuments()", "signatureAfterChange": "   public <T extends INavigatorItem> Enumeration<T> getDocuments()", "diff": ["-      Enumeration e_tmp = ((DefaultMutableTreeNode)_model.getRoot()).depthFirstEnumeration();", "+      Enumeration e = ((DefaultMutableTreeNode)_model.getRoot()).depthFirstEnumeration();", "-      while(e_tmp.hasMoreElements()) {", "-        DefaultMutableTreeNode node = (DefaultMutableTreeNode)e_tmp.nextElement();", "+      while(e.hasMoreElements()) {", "+        DefaultMutableTreeNode node = (DefaultMutableTreeNode) e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d81927ac8f3abb1e28076d0ba17169", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "8714a43a313a1a0d2ca9cc83816dab7a08ff011b", "commitAfterChange": "ea5cfb95023de08fddeb23c31d383ebdee6d9006", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   private void _indent()", "signatureAfterChange": "   public void indent()", "diff": ["-  private void _indent() {", "-    // because _indent() is a function called directly by the Keymap", "+  public void indent() {", "+    // because indent() is a function called directly by the Keymap", "-      indentLines();", "+      _indentLines();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe64fa1da842e9bd54548e1d02d07d83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "b818b8a0f0981edaebaa07c3dc3e655c941dcd48", "commitAfterChange": "e02b291d62bdaa0ea7b37dd3f2ab84515aaa6d58", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   void getDistToCurrentBraceNewline(IndentInfo braceInfo)", "signatureAfterChange": "   void getDistToCurrentBraceNewline(IndentInfo braceInfo)", "diff": ["-    if (braceInfo.distToEnclosingBrace == -1 || copyCursor.atStart()) return; // no brace", "+    if (braceInfo.distToBraceCurrent == -1 || copyCursor.atStart()) return; // no brace", "-    copyCursor.move(-braceInfo.distToEnclosingBrace);", "+    copyCursor.move(-braceInfo.distToBraceCurrent);", "-    if (walkcount == -1) braceInfo.distToEnclosingBraceStart = -1;", "+    if (walkcount == -1) braceInfo.distToNewlineCurrent = -1;", "-      braceInfo.distToEnclosingBraceStart = walkcount + braceInfo.distToEnclosingBrace;", "+      braceInfo.distToNewlineCurrent = walkcount + braceInfo.distToBraceCurrent;"]}], "num": 12567}