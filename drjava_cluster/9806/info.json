{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7c6b81b48bae0680ee8e7ec52eab0b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658e213c0e1ed9d752c5a56105a6ddf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "2e4dc36e0c74c534d3da6cd41fba04222175644c", "commitAfterChange": "1ea3dd9f63752abe86fd2373767db30462f2b9f6", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public File getMasterWorkingDirectory()", "signatureAfterChange": "   public File getMasterWorkingDirectory()", "diff": ["-    File workDir = DrJava.getConfig().getSetting( OptionConstants.WORKING_DIRECTORY);", "-//    Utilities.show(\"In getMasterWorkingDirectory, workDir = \" + workDir);", "-    if (workDir != null && workDir != FileOption.NULL_FILE) {", "-//      Utilities.show (\"Returning '\" + workDir + \"' as master working directory\");", "-      return workDir;", "-    }", "-    return new File(System.getProperty(\"user.dir\"));", "+    return new File(System.getProperty(\"user.home\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c94c1b95f0c4b7f870718c8d998dfa1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private boolean _javadoc(String[] args, String classPath) throws IOException", "signatureAfterChange": "   private boolean _javadoc(String[] args, String classPath) throws IOException", "diff": ["-    String jsr14path = DrJava.getConfig().getSetting(OptionConstants.JSR14_LOCATION).toString();", "-    if (version < 1.5 && jsr14path != null && !jsr14path.equals(\"\"))", "-      jvmArgs = new String[]{\"-Xbootclasspath/p:\" + jsr14path};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0aace88fdbb1e7362a30936a513a73c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "f363167d40173f307f3b6d87b64a8df73677629e", "commitAfterChange": "77220424f428efb13ceff0f3f3fbcabc12a58bbe", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public File getMasterWorkingDirectory()", "signatureAfterChange": "   public File getMasterWorkingDirectory()", "diff": ["-    File workDir = DrJava.getConfig().getSetting( OptionConstants.WORKING_DIRECTORY);", "-    if (workDir != null && workDir != FileOption.NULL_FILE) return workDir;", "-    return new File(System.getProperty(\"user.dir\"));", "+    return new File(System.getProperty(\"user.home\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9b59e3c0ddf01305a37a5e23a78012e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "2e4dc36e0c74c534d3da6cd41fba04222175644c", "commitAfterChange": "1ea3dd9f63752abe86fd2373767db30462f2b9f6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "signatureAfterChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "diff": ["-        File workDir = getConfig().getSetting(WORKING_DIRECTORY);", "-        if (workDir == null) workDir = FileOption.NULL_FILE;", "+        File workDir = new File(System.getProperty(\"user.home\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc3f1d5bbfc64114502dd2fbc3717287", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ec40b9684eedda5f12a01f89d69b3f935e227946", "commitAfterChange": "684e63a5129d977349573eb45595e3cb9be51496", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void startInterpreterJVM()", "signatureAfterChange": "   public void startInterpreterJVM()", "diff": ["-    String optionArgString = DrJava.getConfig().getSetting(OptionConstants.JVM_ARGS);", "-    List<String> optionArgs = ArgumentTokenizer.tokenize(optionArgString);", "-    jvmArgs.addAll(optionArgs);", "+    // Cannot do the following line because it causes an error on Macs in the Eclipse plug-in.", "+    // By instantiating the config, somehow the Apple JVM tries to start up AWT, which seems", "+    // to be prohibited by Eclipse.  Badness ensues.", "+//    String optionArgString = DrJava.getConfig().getSetting(OptionConstants.JVM_ARGS);", "+//    List<String> optionArgs = ArgumentTokenizer.tokenize(optionArgString);", "+    jvmArgs.addAll(_optionArgs);"]}], "num": 9806}