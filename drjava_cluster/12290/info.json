{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d70a63d8cf90d52016b446ca986df07", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418e46e52d877fedb47c1187ff6ef624", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public synchronized void testMultiThreadedSetCurrentThread()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testMultiThreadedSetCurrentThread() throws Exception", "diff": ["-  public synchronized void testMultiThreadedSetCurrentThread()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public synchronized void testMultiThreadedSetCurrentThread() throws Exception {", "+    _debugger.addListener(debugListener);", "-     // Compile the class", "-     OpenDefinitionsDocument doc = doCompile(MONKEY_CLASS, tempFile());", "-     _debugger.addListener(debugListener);", "-     // Start debugger", "-     synchronized(_notifierLock) {", "-       _debugger.startup();", "-       _waitForNotifies(1);  // startup", "-       _notifierLock.wait();", "-     }", "-     ", "-     // Set two breakpoints", "-     int index = MONKEY_CLASS.indexOf(\"System.out.println(\\\"I\\'m a thread! Yeah!\\\");\");", "-     _debugger.toggleBreakpoint(doc,index,11);", "-     index = MONKEY_CLASS.indexOf(\"System.out.println(\\\"James likes bananas!\\\");\");", "-     _debugger.toggleBreakpoint(doc,index,17);", "-     ", "-      // Run the main() method, hitting both breakpoints in different threads", "-     synchronized(_notifierLock) {", "-       interpretIgnoreResult(\"java Monkey\");", "-       _waitForNotifies(6); // (suspended, updated, breakpointReached) * 2", "-       _notifierLock.wait();", "-     }", "-     DebugThreadData threadA = new DebugThreadData(_debugger.getCurrentThread());", "-     DebugThreadData threadB = new DebugThreadData(_debugger.getThreadAt(1));", "-     synchronized(_notifierLock) {", "-       _asyncDoSetCurrentThread(threadB);", "-       _waitForNotifies(2);  // updated, suspended", "-       _notifierLock.wait();", "-     }", "-     ", "-     DebugThreadData thread1 = new DebugThreadData(_debugger.getThreadAt(1));", "-     DebugThreadData thread2 = new DebugThreadData(_debugger.getCurrentThread());", "-     ", "-     // make sure threads have switched places", "-     assertTrue(thread1.getUniqueID() == threadA.getUniqueID());", "-     assertTrue(thread2.getUniqueID() == threadB.getUniqueID());", "-     ", "-       // Close doc and make sure breakpoints are removed", "-     _model.closeFile(doc);", "-     ", "-     // Shutdown the debugger", "-     if (printMessages) System.out.println(\"Shutting down...\");", "-     InterpretListener interpretListener = new InterpretListener() {", "-       public void interpreterChanged(boolean inProgress){", "-         // Don't notify: happens in the same thread", "-        interpreterChangedCount++;", "-       }", "-     };", "-     _model.addListener(interpretListener);", "-     synchronized(_notifierLock) {", "-       //_asyncResume();", "-       //_asyncResume();", "-       _debugger.shutdown();", "-       _waitForNotifies(2);  // shutdown, interactionEnded", "-       _notifierLock.wait();", "-     }", "-     interpretListener.assertInterpreterChangedCount(1);", "-     debugListener.assertDebuggerShutdownCount(1);  //fires", "-     if (printMessages) System.out.println(\"Shut down.\");", "-     _model.removeListener(interpretListener);", "-     _debugger.removeListener(debugListener);", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"Monkey.java\",", "+                                                   MONKEY_CLASS);", "+    ", "+    // Set two breakpoints", "+    int index = MONKEY_CLASS.indexOf(\"System.out.println(\\\"I\\'m a thread! Yeah!\\\");\");", "+    _debugger.toggleBreakpoint(doc,index,11);", "+    index = MONKEY_CLASS.indexOf(\"System.out.println(\\\"James likes bananas!\\\");\");", "+    _debugger.toggleBreakpoint(doc,index,17);", "+    ", "+    // Run the main() method, hitting both breakpoints in different threads", "+    synchronized(_notifierLock) {", "+      interpretIgnoreResult(\"java Monkey\");", "+      _waitForNotifies(6); // (suspended, updated, breakpointReached) * 2", "+      _notifierLock.wait();", "+    }", "+    DebugThreadData threadA = new DebugThreadData(_debugger.getCurrentThread());", "+    DebugThreadData threadB = new DebugThreadData(_debugger.getThreadAt(1));", "+    synchronized(_notifierLock) {", "+      _asyncDoSetCurrentThread(threadB);", "+      _waitForNotifies(2);  // updated, suspended", "+      _notifierLock.wait();", "+    }", "+    ", "+    DebugThreadData thread1 = new DebugThreadData(_debugger.getThreadAt(1));", "+    DebugThreadData thread2 = new DebugThreadData(_debugger.getCurrentThread());", "+    ", "+    // make sure threads have switched places", "+    assertTrue(thread1.getUniqueID() == threadA.getUniqueID());", "+    assertTrue(thread2.getUniqueID() == threadB.getUniqueID());", "+    ", "+    // Shut down", "+    _shutdownAndWaitForInteractionEnded();", "+    _debugger.removeListener(debugListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "914cce9c6c40e9ece710ccc7f8c1bb69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testDebugSourcepath()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testDebugSourcepath() throws Exception", "diff": ["-  public void testDebugSourcepath()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public void testDebugSourcepath() throws Exception {", "-    ", "-    // Compile the class", "-    File file2 = new File(_tempDir, \"DrJavaDebugClass.java\");", "-    OpenDefinitionsDocument doc = doCompile(DEBUG_CLASS, file2);", "-    Vector<File> path = new Vector<File>();", "-    path.addElement(_tempDir);", "-    ", "-    // Start debugger and add breakpoint", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);  // startup", "-      _notifierLock.wait();", "-    }", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\",", "+                                                   DEBUG_CLASS);", "+    Vector<File> path = new Vector<File>();", "+    path.addElement(_tempDir);  // directory where doc's file is saved", "+    ", "+    // Add a breakpoint", "-    // Shutdown the debugger and listen for the interpret call to end", "-    if (printMessages) System.out.println(\"Shutting down...\");", "-    InterpretListener interpretListener = new InterpretListener() {", "-       public void interpreterChanged(boolean inProgress) {", "-         // Don't notify: happens in the same thread", "-        interpreterChangedCount++;", "-       }", "-     };", "-    _model.addListener(interpretListener);", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // interactionEnded, shutdown", "-      _notifierLock.wait();", "-    }", "-    interpretListener.assertInteractionEndCount(1);  // fires", "-    interpretListener.assertInterpreterChangedCount(1);  // fires (don't wait)", "-    _model.removeListener(interpretListener);", "-    ", "-    debugListener.assertDebuggerShutdownCount(1);  // fires", "-    if (printMessages) System.out.println(\"Shut down.\");", "+    // Shut down", "+    _shutdownAndWaitForInteractionEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51e6e2298d9a99f7dd38708aa4815db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public synchronized void testStepOut()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testStepOut() throws Exception", "diff": ["-  public synchronized void testStepOut()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public synchronized void testStepOut() throws Exception {", "-    ", "-    // Compile the class", "-    File file2 = new File(_tempDir, \"DrJavaDebugClass.java\");", "-    OpenDefinitionsDocument doc = doCompile(DEBUG_CLASS, file2);", "-    // Start debugger and add breakpoint", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);  // startup", "-      _notifierLock.wait();", "-    }", "+    ", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\",", "+                                                   DEBUG_CLASS);", "-    // Shutdown the debugger and listen for the interpret call to end", "-    if (printMessages) System.out.println(\"Shutting down...\");", "-    InterpretListener interpretListener = new InterpretListener() {", "-       public void interpreterChanged(boolean inProgress) {", "-         // Don't notify: happens in the same thread", "-        interpreterChangedCount++;", "-       }", "-     };", "-    _model.addListener(interpretListener);", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // interactionEnded, shutdown", "-      _notifierLock.wait();", "-    }", "-    interpretListener.assertInteractionEndCount(1);", "-    _model.removeListener(interpretListener);", "-", "-    debugListener.assertBreakpointRemovedCount(1);  // fires (don't wait)", "-    debugListener.assertDebuggerShutdownCount(1);  // fires", "-    if (printMessages) System.out.println(\"Shut down.\");", "+    // Shut down", "+    _shutdownAndWaitForInteractionEnded();"]}], "num": 12290}