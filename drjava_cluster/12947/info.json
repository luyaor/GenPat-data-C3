{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4148eda5db7428989d2a3b26baaf6e26", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c451330e821c966a09bd4edaf291531", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"ActionStartPrevStmtPlus\");", "-    // Find end of previous statement", "+    // Find end of previous statement (or end of case statement)", "-      indent = doc.getIndentOfCurrStmt(prevDelimiterPos);", "+      // Include colons as end of statement (ie. \"case\")", "+      char[] indentDelims = {';', '{', '}', ':'};", "+      indent = doc.getIndentOfCurrStmt(prevDelimiterPos, indentDelims);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5db721672b6cbfeaa0038c00d70bfc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtDelimiterSameLine()      throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtDelimiterSameLine()      throws BadLocationException", "diff": ["-      assertEquals(\"prev delimiter on same line, no indent\", 0, _doc.getIndentOfCurrStmt(6));", "+      assertEquals(\"prev delimiter on same line, no indent\", 0, _getIndentOfCurrStmt(6));", "-      assertEquals(\"prev delimiter on same line, indent two spaces\", 2, _doc.getIndentOfCurrStmt(8));", "+      assertEquals(\"prev delimiter on same line, indent two spaces\", 2, _getIndentOfCurrStmt(8));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db7a5e121b8916221f8082e8a8ecdd8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void testGetNodePath() throws Exception", "signatureAfterChange": "   public void testGetNodePath() throws Exception", "diff": ["-    Assert.assertEquals(\"Null does not return empty string\", \"\", xc.getNodePath(null));", "+    Assert.assertEquals(\"Null does not return empty string\", \"\", XMLConfig.getNodePath(null));", "-    Assert.assertEquals(\"Path to name is not concutest/name\", \"concutest/name\", xc.getNodePath(name));", "+    Assert.assertEquals(\"Path to name is not concutest/name\", \"concutest/name\", XMLConfig.getNodePath(name));"]}], "num": 12947}