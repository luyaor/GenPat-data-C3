{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85506df612083e18cf4e42d9a27a130b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f51f93ae275a23668595af0e9365c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   final public Expression literal() throws ParseException", "signatureAfterChange": "   final public Expression literal() throws ParseException", "diff": ["+        // if(t.image.equals(\"2147483648\")){t.image = \"-2147483648\";} // Introduced an error with int x = 2147483648", "+", "+", "-        {if (true) return new LongLiteral(t.image,", "-                               filename,", "-                               t.beginLine, t.beginColumn,", "-                               t.endLine,   t.endColumn);}", "+        if(t.image.endsWith(\"L\")) t.image=t.image.substring(0,t.image.length()-1);", "+           {if (true) return new LongLiteral(t.image, filename,", "+                                  t.beginLine, t.beginColumn,", "+                                  t.endLine,   t.endColumn);}", "-        jj_la1[125] = jj_gen;", "+        jj_la1[126] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7722ccdd6f08b46caa6ae1382b354c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 85, "signatureBeforeChange": "   final public ThrowStatement throwStatement() throws ParseException", "signatureAfterChange": "   final public ThrowStatement throwStatement() throws ParseException", "diff": ["-    b = jj_consume_token(THROW);", "-    exp = expression();", "-    e = jj_consume_token(SEMICOLON);", "-      {if (true) return new ThrowStatement(exp,", "-                                filename,", "-                                b.beginLine, b.beginColumn,", "-                                e.endLine,   e.endColumn);}", "+    try {", "+      b = jj_consume_token(THROW);", "+      exp = expression();", "+      e = jj_consume_token(SEMICOLON);", "+        {if (true) return new ThrowStatement(exp,", "+                                  filename,", "+                                  b.beginLine, b.beginColumn,", "+                                  e.endLine,   e.endColumn);}", "+    } catch (ParseException pe) {", "+      _throwParseException(pe,\"Invalid throw statement\");", "+    }"]}], "num": 8087}