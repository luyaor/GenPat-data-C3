{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bbc5d0920c7247894868c16a63810db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3737c856a97894a4628cf377378aaceb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/GlobalModelTest.java", "commitBeforeChange": "2ec67558fcc2be0c684677fea7ee9feb674b02bc", "commitAfterChange": "a937ccbbfe3e2271b14c781e19a341556df45efe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testSaveFromFileMenu() throws BadLocationException", "signatureAfterChange": "   public void testCancelSaveAsAlreadySaved()     throws BadLocationException, IOException", "diff": ["-  ", "-  public void testSaveFromFileMenu() throws BadLocationException {", "-    Document doc = _gm.getDefinitionsDocument();", "-    doc.insertString(0, \"blah\", null);", "-    assertTrue(\"#0.0\", _gm.isModifiedSinceSave());", "-    TestWriterCommand com = new TestWriterCommand(\"blah.txt\");", "-    _gm.saveFile(com);", "-    assertEquals(\"#1.0\", \"saveFile \", _recorder.getEventList());", "-    assertTrue(\"#1.1\", !_gm.isModifiedSinceSave());", "-    assertEquals(\"#1.2\", \"blah\", com.getBuffer());", "-  }", "+   */", "+  public void testCancelSaveAsAlreadySaved()", "+    throws BadLocationException, IOException", "+  {", "+    _setupDocument(FOO_TEXT);", "+    final File file = _tempFile();", "+", "+    // No listeners here -- other tests ensure the first save works", "+    _model.saveFile(new FileSelector(file));", "+    _assertModified(false);", "+    _assertContents(FOO_TEXT);", "+    assertEquals(\"contents of saved file\",", "+                 FOO_TEXT,", "+                 _readFile(file));", "+", "+    // No events better be fired!", "+    _model.addListener(new TestListener());", "+", "+    // Muck up the document", "+    _changeDocumentText(BAR_TEXT);", "+", "+    _model.saveFileAs(new CancelingSelector());", "+", "+    assertEquals(\"contents of saved file\",", "+                 FOO_TEXT,", "+                 _readFile(file));", "+", "+    file.delete();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fc5480899e7c7f0d10ecd68034d8f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "c7350c43cf88b83fadf7abd46778d953858e61df", "commitAfterChange": "0b53b816728d7888dd8424a695754000657f778a", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "diff": ["+    //disable file backups, remember original setting", "+    Boolean backupStatus = DrJava.getConfig().getSetting(BACKUP_FILES);", "+    DrJava.getConfig().setSetting(BACKUP_FILES, Boolean.FALSE);", "+    ", "-    // Listener to use on future save", "+    // Listener to use on future saves", "+", "+    File backup = new File(file.getPath() + \"~\");", "+    backup.delete();", "-    ", "+", "-    assertEquals(\"contents of saved file\",", "+    assertEquals(\"contents of saved file 2nd write\",", "+", "+    assertEquals(\"no backup was made\", false, backup.exists());", "+", "+    ", "+    //enable file backups", "+    DrJava.getConfig().setSetting(BACKUP_FILES, Boolean.TRUE);", "+    ", "+    // Muck up the document", "+    changeDocumentText(FOO_TEXT, doc);", "+", "+    // Save over top of the previous file", "+    doc.saveFile(new FileSelector(file));", "+    listener.assertSaveCount(2);", "+    ", "+    assertEquals(\"contents of saved file 3rd write\",", "+                 FOO_TEXT,", "+                 FileOps.readFileAsString(file));", "+    assertEquals(\"contents of backup file 3rd write\",", "+\t\t BAR_TEXT,", "+\t\t FileOps.readFileAsString(backup));", "+", "+    /* Set the config back to the original option */", "+    DrJava.getConfig().setSetting(BACKUP_FILES, backupStatus);"]}], "num": 26274}