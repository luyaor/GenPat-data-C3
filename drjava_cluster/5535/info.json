{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28fd8bc05edcc559be3d6ab12da173a7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1396c346ce0b4478f7f7b5e5f954cc8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionEvaluator.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private Object handleConstructor(Expression node, Expression outer, Iterable<Expression> args)", "signatureAfterChange": "   private Object handleConstructor(Expression node, Expression outer, Iterable<Expression> args)", "diff": ["-    Object outerVal = (outer == null) ? null : value(outer);", "+    Object outerVal;", "+    if (outer == null) {", "+      if (hasEnclosingThis(node)) { outerVal = _bindings.getThis(getEnclosingThis(node)); }", "+      else { outerVal = null; }", "+    }", "+    else { outerVal = value(outer); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b869010cd59c9081a500ed9a32727444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e3aa74ce1fa8ce4d59f29e9f6e97ca23385b706a", "commitAfterChange": "11a1fd8ec1856cc868f8eef6e338058f0b33cb8e", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": "   public void generateJavaAPISet()", "signatureAfterChange": "   public void generateJavaAPISet()", "diff": ["+      else if (linkVersion.equals(JAVADOC_1_7_TEXT)) {", "+        base = DrJava.getConfig().getSetting(JAVADOC_1_7_LINK) + \"/\";", "+        stripPrefix = \"\"; // nothing needs to be stripped, links in 1.7 Javadoc are relative", "+        suffix = \"/allclasses-1.7.html\";", "+      }"]}], "num": 5535}