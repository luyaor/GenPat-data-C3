{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1948e3bec82dbba0cfcd64b4acc59bfc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "861d8471b9a3000bbac149230f22a194", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 194, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\")   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["+  @SuppressWarnings(\"unchecked\")", "+    // update preference values here", "+    Map<OptionParser,String> sp = _state.getPreferencesStoredInProject();", "+    for(OptionParser key: sp.keySet()) {", "+      sp.put(key, DrJava.getConfig().getOptionMap().getString(key));", "+    }", "+    builder.setPreferencesStoredInProject(sp);", "+    _state.setPreferencesStoredInProject(sp);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9430949273485c233881470cc36e444e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOpsTest.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testGetFiles() throws IOException", "signatureAfterChange": "   public void testGetFiles() throws IOException", "diff": ["-    assertEquals(\"non-recursive FilesInDir test\", res1, FileOps.getFilesInDir(dir1, false, ff));", "-    assertEquals(\"recursive FileInDir test\", res2, FileOps.getFilesInDir(dir1, true, ff));", "+    List<File> nrfiles = new ArrayList<File>();", "+    for(File f : FileOps.getFilesInDir(dir1, false, ff)) {", "+      nrfiles.add(f.getCanonicalFile());", "+    }", "+", "+    List<File> rfiles = new ArrayList<File>();", "+    for(File f : FileOps.getFilesInDir(dir1, true, ff)) {", "+      rfiles.add(f.getCanonicalFile());", "+    }", "+        ", "+    assertEquals(\"non-recursive FilesInDir test\", res1, nrfiles);", "+    assertEquals(\"recursive FileInDir test\", res2, rfiles);"]}], "num": 6459}