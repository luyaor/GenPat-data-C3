{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78914e920cff05a525253e7083187835", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f0a28800b186c0ecf36bebe6abce94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "f520b1b5f1b15642429d7c7844d7ac7a96f3e402", "commitAfterChange": "e7fa83968a0076b95166203c3ff9a5bddde8dfee", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void setActiveDoc(ItemT doc)", "signatureAfterChange": "   public void setActiveDoc(ItemT doc)", "diff": ["+    assert EventQueue.isDispatchThread();", "-    synchronized(_model) {", "-      if (_current == doc) return; // doc is already _current (the active doc)", "-      found = _model.contains(doc);", "-    }", "+//    synchronized(_model) {", "+    if (_current == doc) return; // doc is already _current (the active doc)", "+    found = _model.contains(doc);", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d779cdfcbef4424d834e467567760b52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "14370880ba431a91577f4a6da91962f3187c5d5d", "commitAfterChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "methodNumberBeforeChange": 649, "methodNumberAfterChange": 649, "signatureBeforeChange": "          public void interactionEnded()", "signatureAfterChange": "          public void interactionEnded()", "diff": ["+      assert EventQueue.isDispatchThread();  // overkill; this method is a listener invocation wrapped in invokeLater", "-      // a strange NullPointerException was reported in this method ([ 1938268 ])", "-      // just making sure that all references are non-null", "-      if (im != null) {", "-        final String lastError = im.getLastError();", "-        final edu.rice.cs.drjava.config.FileConfiguration config = DrJava.getConfig();", "-        if ((config != null) &&", "-            (config.getSetting(edu.rice.cs.drjava.config.OptionConstants.DIALOG_AUTOIMPORT_ENABLED))) {", "-          if (lastError != null) {", "-            // the interaction ended and there was an error", "-            // check that this error is different than the last one (second to last may be null):", "-            final String secondToLastError = im.getSecondToLastError();", "-            if ((secondToLastError!=null) ||", "-                (!lastError.equals(secondToLastError))) {", "-              // this aborts the auto-importing if the same class comes up twice in a row", "-              if (lastError.startsWith(\"Static Error: Undefined class '\") && lastError.endsWith(\"'\")) {", "-                // it was an \"undefined class\" exception", "-                // show auto-import dialog", "-                String undefinedClassName = lastError.substring(lastError.indexOf('\\'')+1,", "-                                                                lastError.lastIndexOf('\\''));", "-                _showAutoImportDialog(undefinedClassName);", "-              }", "-              else if (lastError.startsWith(\"java.lang.OutOfMemoryError\")) {", "-                askToIncreaseSlaveMaxHeap();", "-              }", "+      final String lastError = im.getLastError();", "+      final edu.rice.cs.drjava.config.FileConfiguration config = DrJava.getConfig();", "+      if (config != null && config.getSetting(edu.rice.cs.drjava.config.OptionConstants.DIALOG_AUTOIMPORT_ENABLED)) {", "+        if (lastError != null) {", "+          // the interaction ended and there was an error", "+          // check that this error is different than the last one (second to last may be null):", "+          final String secondToLastError = im.getSecondToLastError();", "+          if (secondToLastError != null || ! lastError.equals(secondToLastError)) {", "+            // this aborts the auto-importing if the same class comes up twice in a row", "+            if (lastError.startsWith(\"Static Error: Undefined class '\") && lastError.endsWith(\"'\")) {", "+              // it was an \"undefined class\" exception", "+              // show auto-import dialog", "+              String undefinedClassName = lastError.substring(lastError.indexOf('\\'') + 1, lastError.lastIndexOf('\\''));", "+              _showAutoImportDialog(undefinedClassName);", "+            }", "+            else if (lastError.startsWith(\"java.lang.OutOfMemoryError\")) {", "+              askToIncreaseSlaveMaxHeap();", "-        else {", "-          // reset the last errors, so the dialog works again if it is re-enabled", "-          im.resetLastErrors();", "-        }", "-//      Utilities.invokeLater(new Runnable() {", "-//        public void run() {", "+      else im.resetLastErrors(); // reset the last errors, so the dialog works again if it is re-enabled", "+      ", "-//        }", "-//      });"]}], "num": 17947}