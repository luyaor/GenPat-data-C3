{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68fffc9b3482c206484855cc311dec0d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a862a17e50a4127dfbf705957ec85174", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected boolean _hasModifiedFiles(List<OpenDefinitionsDocument> defDocs)", "signatureAfterChange": "   protected static boolean _hasModifiedFiles(List<OpenDefinitionsDocument> defDocs)", "diff": ["-  protected boolean _hasModifiedFiles(List<OpenDefinitionsDocument> defDocs) {", "-    boolean hasModifiedFiles = false;", "-    for(OpenDefinitionsDocument odd : defDocs){", "-      hasModifiedFiles |= odd.isModifiedSinceSave();", "+  protected static boolean _hasModifiedFiles(List<OpenDefinitionsDocument> defDocs) {", "+    for(OpenDefinitionsDocument doc : defDocs) {", "+      if (doc.isModifiedSinceSave()) return true;  // Not all documents must be inspected", "-    return hasModifiedFiles;", "+    return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf0e64bcf4834d439b059b75e68a734", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public void documentSaved(String fileName)", "signatureAfterChange": "     public void documentSaved(String fileName)", "diff": ["+    /** Updates status of this document in the cache. */", "-      boolean addThis = false;", "-      synchronized(_dmLock) {  // lock the document manager so that document manager fields can be updated", "-        addThis = isUnmanagedOrUntitled();", "-        if (addThis) {", "-          setNotInQueue();", "+//      Utilities.showDebug(\"Document \" + _doc + \" has been saved as \" + fileName);", "+      synchronized(_cacheLock) {  // lock the document manager so that document manager fields can be updated", "+        if (isUnmanagedOrUntitled()) {", "+          add();  // add formerly unmanaged/untitled document to queue", "-      if (addThis) { addToQueue(); }  // synchronization is done in add method for cache"]}], "num": 8631}