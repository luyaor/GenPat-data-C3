{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27b8d2db0b9698357899f0085ea94ddc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32e9eed9ca574e0946512ec4560a7552", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a25fe41044d292186863ba8ddd26164fdef4fc59", "commitAfterChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 230, "signatureBeforeChange": "     public void actionPerformed(ActionEvent e)", "signatureAfterChange": "      private void _junitFolder()", "diff": ["-    public void actionPerformed(ActionEvent e) {", "-      new Thread(\"Running JUnit Tests\") {", "-        public void run() {", "-//          new ScrollableDialog(null, \"_junitAllAction called\", \"\", \"\").show();", "-          try {", "-            hourglassOn();", "-            if (_model.isProjectActive()) _model.getJUnitModel().junitProject();", "-            else _model.getJUnitModel().junitAll();", "-          }", "-          finally {  hourglassOff(); }", "-        }", "-      }.start();", "-    }", "+  ", "+  private void _junitFolder() {", "+    final SwingWorker worker = new SwingWorker() {", "+      public Object construct() {", "+        ", "+        INavigatorItem n;", "+        hourglassOn();  // turned off when JUnitStarted event is fired", "+        Enumeration<INavigatorItem> e = _model.getDocumentNavigator().getDocuments();", "+        final LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "+        if (_model.getDocumentNavigator().isGroupSelected()) {", "+          while (e.hasMoreElements()){", "+            n = e.nextElement();", "+            if(_model.getDocumentNavigator().isSelectedInGroup(n)){", "+              l.add((OpenDefinitionsDocument) n);  // FIX THIS CAST!", "+            }", "+          }", "+          _model.getJUnitModel().junitDocs(l);", "+        }", "+        return null;", "+      }", "+    };", "+    worker.start(); ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95a920a49804608aeba57e6d6bd3c453", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "54ca35a697068e061a6e4015227b37b547246d01", "commitAfterChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   protected void _setupMenu()", "signatureAfterChange": "   protected void _setupMenu()", "diff": ["-    resetInteractionsAction.setToolTipText(\"Reset Interactions Pane\");", "+    resetInteractionsAction.setToolTipText(\"Resets the Interactions Pane\");", "+", "+    Action showClasspathAction = new Action() {", "+      public void run() {", "+        String title = \"Interpreter Classpath\";", "+        StringBuffer cpBuf = new StringBuffer();", "+        Vector<String> classpathElements = _model.getClasspath();", "+        for(int i = 0; i < classpathElements.size(); i++) {", "+          cpBuf.append(classpathElements.get(i));", "+          if (i + 1 < classpathElements.size()) {", "+            cpBuf.append(\"\\n\");", "+          }", "+        }", "+        _view.showInfoDialog(title, cpBuf.toString());", "+      }", "+    };", "+    showClasspathAction.setText(\"Show Interpreter Classpath\");", "+    showClasspathAction.setToolTipText(\"Shows the classpath used in the interactions pane.\");", "+    _view.addMenuItem(showClasspathAction);"]}], "num": 2490}