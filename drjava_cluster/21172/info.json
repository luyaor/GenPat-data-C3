{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8616e57e83be67dc1aab07ad507d4051", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f2eeee7749b164a3141fcfa6e479d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "f32b1e10d3ab04ca267d7bdc1cbc12db38b5ac66", "commitAfterChange": "1813ff0222dc4ecf20a5cf6ed36333ed813c089d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public static JComponent createCopyrightTab()", "signatureAfterChange": "                              public static JComponent createCopyrightTab()", "diff": ["-", "+  ", "+    sb.append(\"\\n\\nUsed memory: about \");", "+    sb.append(StringOps.memSizeToString(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()));", "+    sb.append(\"\\nFree memory: about \");", "+    sb.append(StringOps.memSizeToString(Runtime.getRuntime().freeMemory()));", "+    sb.append(\"\\nTotal memory: about \");", "+    sb.append(StringOps.memSizeToString(Runtime.getRuntime().totalMemory()));", "+    sb.append(\"\\nTotal memory can expand to: about \");", "+    sb.append(StringOps.memSizeToString(Runtime.getRuntime().maxMemory()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb571169b8b47a9b6e9a060ee77c52d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "b86859aaefb86c79b1343c533fc1a98460d5733a", "commitAfterChange": "c95281d4127bdbd843c86748b646c5941d6c6e28", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title, \r                           String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord, \r                           boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc, \r                           FindReplacePanel findReplace)", "signatureAfterChange": "\r   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title, \r                           String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord, \r                           boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc, \r                           FindReplacePanel findReplace)", "diff": ["+    // set \"Find Again\" button tooltip\r", "+    StringBuilder sb = new StringBuilder();\r", "+    sb.append(\"<html>Find '\").append(title);\r", "+    if (!title.equals(_searchString)) sb.append(\"...\");\r", "+    sb.append(\"'\");\r", "+    if (_searchAll) sb.append(\" in all files\");\r", "+    else if (_searchSelectionOnly) sb.append(\" only in original selection.\");\r", "+    sb.append(\".\");\r", "+    if (_matchCase) sb.append(\"<br>Case must match.\");\r", "+    if (_wholeWord) sb.append(\"<br>Whole words only.\");\r", "+    if (_noComments) sb.append(\"<br>No comments or strings.\");\r", "+    if (_noTestCases) sb.append(\"<br>No test cases.\");\r", "+    sb.append(\"</html>\");\r", "+    _findAgainButton.setToolTipText(sb.toString());\r", "+\r"]}], "num": 21172}