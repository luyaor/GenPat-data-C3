{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e036d9ff37258150c9105fc35fc088ad", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "588bf62f22792bbf415e800bd7b263e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "37262ef2e840757bbfd75bab1bbfe80d6ece9277", "commitAfterChange": "315ce15a47c9238ec0ff41b59ed5b10517a92a39", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-    Predicate<File> subdirFilter = LambdaUtil.or(IOUtil.regexpCanonicalCaseFilePredicate(\"j2sdk.*\"),", "-                                                 IOUtil.regexpCanonicalCaseFilePredicate(\"jdk.*\"),", "-                                                 IOUtil.regexpCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\"));", "+    Predicate<File> subdirFilter = LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"j2sdk.*\"),", "+                                                 IOUtil.regexCanonicalCaseFilePredicate(\"jdk.*\"),", "+                                                 IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d098a2bf4fe2dab4100431c2542972a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected static void searchRootsForJars(LinkedHashMap<File,Set<JDKDescriptor>> roots,                                            LinkedHashMap<File,Set<JDKDescriptor>> jars)", "signatureAfterChange": "   protected static void searchRootsForJars(LinkedHashMap<File,Set<JDKDescriptor>> roots,                                            LinkedHashMap<File,Set<JDKDescriptor>> jars)", "diff": ["+    JDKToolsLibrary.msg(\"***** roots = \" + roots);", "-                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\"),", "-                                                               IOUtil.regexCanonicalCaseFilePredicate(\"java.*\")));", "+                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+.*\"),", "+                                                               IOUtil.regexCanonicalCaseFilePredicate(\"java-.*\"))); ", "+      JDKToolsLibrary.msg(\"Searching root (for jar files): \" + root.getKey());", "+        JDKToolsLibrary.msg(\"Looking at subdirectory: \" + subdir);", "+        addIfFile(new File(subdir, \"Contents/Classes/classes.jar\"), root.getValue(), jars);", "+        addIfFile(new File(subdir, \"Contents/Home/lib/tools.jar\"), root.getValue(), jars);"]}], "num": 23793}