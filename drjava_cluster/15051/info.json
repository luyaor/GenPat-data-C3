{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e12f023d4bb499e7c34594925b1ccf19", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2778be7932c639442407f7e3cd62e0a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 72, "signatureBeforeChange": "   public void nonTestCase()", "signatureAfterChange": "   public void nonTestCase(final boolean isTestAll)", "diff": ["-  public void nonTestCase() {", "+   */", "+  public void nonTestCase(final boolean isTestAll) {", "-      _docBeingTested = null;", "+//      _docBeingTested = null;", "+      _isTestInProgress = false;", "-          l.nonTestCase();", "+          l.nonTestCase(isTestAll);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e611660ee6849089e407c1f59d2eda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected final void invokeSlave(String[] jvmArgs, String cp) throws IOException, RemoteException", "signatureAfterChange": "   protected final void invokeSlave(String[] jvmArgs, String cp, File workDir) throws IOException, RemoteException", "diff": ["-  protected final void invokeSlave(String[] jvmArgs, String cp) throws IOException, RemoteException {", "+  protected final void invokeSlave(String[] jvmArgs, String cp, File workDir) throws IOException, RemoteException {", "-      final Process process = ExecJVM.runJVM(RUNNER, args, cp, jvmArgs);", "+      final Process process = ExecJVM.runJVM(RUNNER, args, cp, jvmArgs, workDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39bbd7623d8cd447bb98c661bf473206", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "commitAfterChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _notifyNonTestCase(final boolean testAll)", "signatureAfterChange": "   private void _notifyNonTestCase(final boolean testAll, final boolean didCompileFail)", "diff": ["-  private void _notifyNonTestCase(final boolean testAll) { ", "-    Utilities.invokeLater(new Runnable() { public void run() { _notifier.nonTestCase(testAll); } });", "+  private void _notifyNonTestCase(final boolean testAll, final boolean didCompileFail) { ", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.nonTestCase(testAll, didCompileFail); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d057fedc43a482c759688f5cb57e182", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleQuestion.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc,                           BraceReduction reducedModel,                          int pos)", "diff": ["-  public void indentLine(DefinitionsDocument doc, int pos) {", "-    if (applyRule(doc, pos)) {", "-      _yesRule.indentLine(doc, pos);", "+  public void indentLine(DefinitionsDocument doc, ", "+                         BraceReduction reducedModel,", "+                         int pos)", "+  {", "+    if (applyRule(doc, reducedModel, pos)) {", "+      _yesRule.indentLine(doc, reducedModel, pos);", "-      _noRule.indentLine(doc, pos);", "+      _noRule.indentLine(doc, reducedModel, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f450e9ed662279bd4b897e5e64acf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public InterpreterExtension()", "signatureAfterChange": "     public InterpreterExtension(ClasspathManager cpm)", "diff": ["-    public InterpreterExtension() {", "+    public InterpreterExtension(ClasspathManager cpm) {", "-      classLoader = new ClassLoaderExtension(this);", "+      ", "+      classLoader = new ClassLoaderExtension(this, cpm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f63d9cc3fd198d37eb9adac54106d09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "99e17181157667354a79af5fff7558664559fae9", "commitAfterChange": "0f014669daf60c46746e3e582159e95f94a3d43c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void addDebugInterpreter(String name)", "signatureAfterChange": "   public void addDebugInterpreter(String name, String className)", "diff": ["-  public void addDebugInterpreter(String name) {", "-    JavaDebugInterpreter interpreter = new JavaDebugInterpreter(name);", "+  public void addDebugInterpreter(String name, String className) {", "+    JavaDebugInterpreter interpreter = new JavaDebugInterpreter(name, className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb6508bf108341cc63a399b8339f4c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/Option.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public <T> Option(String name)", "signatureAfterChange": "     public Option(String name, T def)", "diff": ["-    public <T> Option(String name) { super(name); }", "+    public Option(String name, T def) { super(name,def); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a7f85c9cfc1a064fe5b9cac890b3d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/PolymorphicMethodDeclaration.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicMethodDeclaration(int flags, Type type, String name,                                       List<FormalParameter> params, List<? extends ReferenceType> excepts, BlockStatement body,                                       String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "signatureAfterChange": "   public PolymorphicMethodDeclaration(int flags, Type type, String name,                                       List<FormalParameter> params, List<? extends ReferenceType> excepts, BlockStatement body, boolean va,                                       String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "diff": ["-                                      List<FormalParameter> params, List<? extends ReferenceType> excepts, BlockStatement body,", "+                                      List<FormalParameter> params, List<? extends ReferenceType> excepts, BlockStatement body, boolean va,", "-    super(flags, type, name, params, excepts, body, fn, bl, bc, el, ec);", "+    super(flags, type, name, params, excepts, body, va, fn, bl, bc, el, ec);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38c344990f9e56c7a2e5db02634905c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DefaultInteractionsModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected void _notifyInterpreterReady()", "signatureAfterChange": "   protected void _notifyInterpreterReady(final File wd)", "diff": ["-  protected void _notifyInterpreterReady() { ", "-    Utilities.invokeLater(new Runnable() { public void run() { _notifier.interpreterReady(); } });", "+  protected void _notifyInterpreterReady(final File wd) { ", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.interpreterReady(wd); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee9e79d20e5567ea230135310d1d0fc5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   static void openCommandLineFiles(final MainFrame mf, final String[] filesToOpen, final int len)", "signatureAfterChange": "   static void openCommandLineFiles(final MainFrame mf, final String[] filesToOpen, final int len, final boolean jump)", "diff": ["-  static void openCommandLineFiles(final MainFrame mf, final String[] filesToOpen, final int len) { ", "-    Utilities.invokeAndWait(new Runnable() { public void run() { _openCommandLineFiles(mf, filesToOpen, len); }});", "+  static void openCommandLineFiles(final MainFrame mf, final String[] filesToOpen, final int len, final boolean jump) { ", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _openCommandLineFiles(mf, filesToOpen, len, jump); }});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3941ba2f6d19be0b376d86728269160", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/StringOption.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public StringOption(String key)", "signatureAfterChange": "   public StringOption(String key, String def)", "diff": ["-  public StringOption(String key) { super(key); }", "+  public StringOption(String key, String def) { super(key,def); }"]}], "num": 15051}