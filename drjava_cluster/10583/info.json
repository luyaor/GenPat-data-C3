{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9804988585b9bdcd62216e35f84b4703", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2748f5e67fc2d3d05b8cac718f868633", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "f9b63c51c7bc39c2ca858a18aa7508745f80cf7d", "commitAfterChange": "d6d4677e688efef1e947ef9682a8dd44d0381e6b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void valueChanged(ListSelectionEvent e)", "signatureAfterChange": "   public void valueChanged(ListSelectionEvent e)", "diff": ["-    if(!e.getValueIsAdjusting() && !_docs.isEmpty())", "-    {", "-      if(currentselected != this.getSelectedValue())", "-      {", "-        for(int i = 0; i<navListeners.size(); i++)", "-        {", "-          navListeners.elementAt(i).lostSelection(currentselected);", "-          if(this.getSelectedValue() != null)", "-          {", "-            navListeners.elementAt(i).gainedSelection((INavigatorItem)this.getSelectedValue());", "+    if(!e.getValueIsAdjusting() && !_docs.isEmpty()) {", "+      if(currentselected != this.getSelectedValue()) {", "+        final INavigatorItem currItem = currentselected;", "+        final INavigatorItem nextItem = (INavigatorItem)JListNavigator.this.getSelectedValue();", "+        NodeData currData = new NodeData() {", "+          public <T> T execute(NodeDataVisitor<T> v) {", "+            return v.itemCase(currItem);", "+          }", "+        };", "+        NodeData nextData = new NodeData() {", "+          public <T> T execute(NodeDataVisitor<T> v) {", "+            return v.itemCase(nextItem);", "+          }", "+        };", "+        for(INavigationListener listener: navListeners) {", "+          listener.lostSelection(currData);", "+          if(nextItem != null) {", "+            listener.gainedSelection(nextData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf903570213305e3135f1bd7a90c735", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void valueChanged(ListSelectionEvent e)", "signatureAfterChange": "       public void valueChanged(ListSelectionEvent e)", "diff": ["+       */", "+      public void valueChanged(ListSelectionEvent e) {", "+        if (!e.getValueIsAdjusting() && !_model.isEmpty()) {", "+          final INavigatorItem newItem = (INavigatorItem) getSelectedValue();", "+          if (current != newItem) {", "+            final INavigatorItem oldItem = current;", "+            NodeData oldData = new NodeData() {", "+              public <T> T execute(NodeDataVisitor<T> v) {", "+                return v.itemCase(oldItem);", "+              }", "+            };", "+            NodeData newData = new NodeData() {", "+              public <T> T execute(NodeDataVisitor<T> v) {", "+                return v.itemCase(newItem);", "+              }", "+            };", "+            for(INavigationListener listener: navListeners) {", "+              if (oldItem != null) listener.lostSelection(oldData);", "+              if (newItem != null) listener.gainedSelection(newData);", "+            }", "+            current = newItem;", "+          }", "+        }", "+      }", "-   */", "-  public void valueChanged(ListSelectionEvent e)", "-  {", "-    if(!e.getValueIsAdjusting() && !_docs.isEmpty()) {", "-      if(currentselected != this.getSelectedValue()) {", "-        final INavigatorItem currItem = currentselected;", "-        final INavigatorItem nextItem = (INavigatorItem)JListNavigator.this.getSelectedValue();", "-        NodeData currData = new NodeData() {", "-          public <T> T execute(NodeDataVisitor<T> v) {", "-            return v.itemCase(currItem);", "-          }", "-        };", "-        NodeData nextData = new NodeData() {", "-          public <T> T execute(NodeDataVisitor<T> v) {", "-            return v.itemCase(nextItem);", "-          }", "-        };", "-        for(INavigationListener listener: navListeners) {", "-          listener.lostSelection(currData);", "-          if(nextItem != null) {", "-            listener.gainedSelection(nextData);", "-          }", "-        }", "-        currentselected = (INavigatorItem)this.getSelectedValue();", "-      } ", "-    }", "-  }"]}], "num": 10583}