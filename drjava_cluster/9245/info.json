{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9cbf1af5d1dd8edd76cb1680595e684", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3713b3b5bdac619660a2f7ecfdc65c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "12aaa1ddc474cfa046da07f830508d72c218a8f6", "commitAfterChange": "47d5fc81163cac95e4e64b470a149e7ec540b233", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public void optionChanged (OptionEvent<Integer> oce)", "signatureAfterChange": "         public void optionChanged (OptionEvent<Integer> oce)", "diff": ["-      int historySize = oce.value.intValue();", "+      int newSize = oce.value.intValue();", "-      if (size() > historySize) {", "+      // Sanity check", "+      if (newSize < 0) newSize = 0;", "+      ", "+      // Remove old elements if the new size is less than current size", "+      if (size() > newSize) {", "-        int numberOfElements = size() - historySize;", "+        int numToDelete = size() - newSize;", "-        for (int i=0; i< numberOfElements; i++) {", "+        for (int i=0; i< numToDelete; i++) {", "-      MAX_SIZE = historySize;", "+      MAX_SIZE = newSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5ba7d4c333b83b346f7f6c5f7ee59de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "4982367a9f8342b35bf4d2b855165f1464002815", "commitAfterChange": "53e98ff57787e0706379741f49fd137430e3549b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public void optionChanged (OptionEvent<Integer> oce)", "signatureAfterChange": "         public void optionChanged (OptionEvent<Integer> oce)", "diff": ["-      ", "-      // Sanity check", "-      if (newSize < 0) newSize = 0;", "-      ", "-      // Remove old elements if the new size is less than current size", "-      if (size() > newSize) {", "-        ", "-        int numToDelete = size() - newSize;", "-        ", "-        for (int i=0; i< numToDelete; i++) {", "-          _vector.remove(0);", "-        }", "-        ", "-        moveEnd();", "-      }", "-      MAX_SIZE = newSize;", "+      setMaxSize(newSize);"]}], "num": 9245}