{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e173bd1cdd980ff7f8ae4a937b5dd4ab", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7089e58753068f8807f768d151cf6853", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["-    if (isReady()) {", "-      try {", "-        removeAllBreakpoints();", "-        removeAllWatches();", "-        _vm.dispose();", "-      }", "-      catch (VMDisconnectedException vmde) {", "-        //VM was shutdown prematurely", "-      }", "-      finally {", "-        ((DefaultInteractionsModel)_model.getInteractionsModel()).setToDefaultInterpreter();", "-        _vm = null;", "-        _eventManager = null;", "-        _suspendedThreads = new RandomAccessStack();", "-        _deadThreads = new DeadThreadFilter();", "-        _runningThread = null;", "-      }", "+    if (!isReady()) {", "+      throw new IllegalStateException(\"Cannot shut down if debugger is not active.\");", "+    }", "+    ", "+    try {", "+      removeAllBreakpoints();", "+      removeAllWatches();", "+    }", "+    catch (DebugException de) {", "+      // Couldn't remove breakpoints/watches", "+      _log(\"Could not remove breakpoints/watches: \" + de);", "+    }", "+    ", "+    try {", "+      _vm.dispose();", "+    }", "+    catch (VMDisconnectedException vmde) {", "+      //VM was shutdown prematurely", "+    }", "+    finally {", "+      ((DefaultInteractionsModel)_model.getInteractionsModel()).setToDefaultInterpreter();", "+      _vm = null;", "+      _eventManager = null;", "+      _suspendedThreads = new RandomAccessStack();", "+      _deadThreads = new DeadThreadFilter();", "+      _runningThread = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a91fc42ae558cb7beea4480f3958858b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void move(int count)", "signatureAfterChange": "   public void move(int count)", "diff": ["-  */", "+   */", "-    rmb.move(count);", "-    rmc.move(count);", "+    try {", "+      rmb.move(count);", "+      rmc.move(count);", "+    }", "+    catch(IllegalArgumentException e) { ", "+      resetLocation();", "+      throw new UnexpectedException(e);", "+    }"]}], "num": 25507}