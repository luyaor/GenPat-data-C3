{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32043006ae5275c18bec5efab03225aa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7208e2029a79581e4d0a126c01c55791", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     int deleteRight(Iterator delTo)", "signatureAfterChange": "     int deleteRight(Iterator delTo)", "diff": ["-      */", "+    /** Deletes from offset in this to endOffset in delTo. Uses ModelList.collapse to perform quick deletion. */", "-      this.collapse(delTo);", "+      collapse(delTo);", "-      if (this.eq(delTo) && this.current().isGap()) {", "+      if (eq(delTo) && current().isGap()) {", "-        this.current().shrink(delTo.getBlockOffset() - this.getBlockOffset());", "-        return this.getBlockOffset();", "+        current().shrink(delTo.getBlockOffset() - getBlockOffset());", "+        return getBlockOffset();", "-      if (!this.eq(delTo)) {", "-        this.clipLeft();", "-      }", "+      if (! eq(delTo)) clipLeft();", "-      if (!this.atStart()) {", "-        this.prev();", "-      }", "+      if (! atStart()) prev();", "-        this.setTo(delTo);", "+        setTo(delTo);", "-        this.setTo(delTo);", "+        setTo(delTo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da6d92ed07cf67f10d63463c4696fcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private int getWhiteSpaceBetween(int relStart, int relEnd) throws BadLocationException", "signatureAfterChange": "   public boolean posInBlockComment(final int pos)", "diff": ["+  public boolean posInBlockComment(final int pos) {", "+    final int here = _currentLocation;", "+    final int distToStart = here - getLineStartPos(here);", "+    _reduced.resetLocation();", "+    ReducedModelState state = stateAtRelLocation(-distToStart);", "+    ", "+    return (state.equals(ReducedModelState.INSIDE_BLOCK_COMMENT));", "+  }", "-    */", "-  private int getWhiteSpaceBetween(int relStart, int relEnd) throws BadLocationException {", "-    String text = this.getText(_currentLocation - relStart, Math.abs(relStart - relEnd));", "-    int length = text.length();", "-    while ((i < length) && (text.charAt(i) == ' '))", "-      i++;", "-    return  i;"]}], "num": 17623}