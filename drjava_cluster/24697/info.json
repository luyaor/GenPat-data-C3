{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f738cecd241cf694bae7436f1c349ea7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "584503c0b66ade1b0eaa10d1d7d50972", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "   public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["-  public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info) ", "+   */", "+  public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) ", "-    ProjectFileBuilder builder = new ProjectFileBuilder(filename);", "+    ProjectProfile builder = new ProjectProfile(file);", "-      if (! doc.isUntitled()) {", "-        // could not use doc.isInProjectPath because we may be in flat file view which returns false", "-        String projectPath = new File(filename).getParentFile().getCanonicalPath() + File.separator;", "-        String filePath = doc.getFile().getParentFile().getCanonicalPath() + File.separator;", "-        if (filePath.startsWith(projectPath)) {", "-          DocumentInfoGetter g = info.get(doc);", "-          builder.addSourceFile(g);", "-          srcFileList.add(g.getFile());", "-        }", "-        else if (doc.isAuxiliaryFile()) {", "-          DocumentInfoGetter g = info.get(doc);", "-          builder.addAuxiliaryFile(g);", "-          auxFileList.add(g.getFile());", "-        }", "+      if (doc.isInProjectPath()) {", "+        DocumentInfoGetter g = info.get(doc);", "+        builder.addSourceFile(g);", "+        srcFileList.add(g.getFile());", "+      }", "+      else if (doc.isAuxiliaryFile()) {", "+        DocumentInfoGetter g = info.get(doc);", "+        builder.addAuxiliaryFile(g);", "+        auxFileList.add(g.getFile());", "-    // add classpath info", "-//    Vector<File> currentclasspaths = DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH);", "-//    for (File f: currentclasspaths) { builder.addClasspathFile(f); }", "-    // New behavior: only save project-specific classpaths.", "-    } else {", "-      //System.err.println(\"Project ClasspathVector is null!\");", "-    }", "+    } ", "+//    else System.err.println(\"Project ClasspathVector is null!\");", "-    File wd = getRawWorkingDirectory();  // the value of WORKING_DIRECTORY to be stored in the project", "-    if (wd != null) builder.setWorkingDirectory(wd);", "+    File wd = getWorkingDirectory();  // the value of WORKING_DIRECTORY to be stored in the project", "+    if (wd != null && bd != FileOption.NULL_FILE) builder.setWorkingDirectory(wd);", "-    setFileGroupingState(makeProjectFileGroupingState(mainClass, bd, wd, new File(filename), srcFiles, exCp));", "+    setFileGroupingState(makeProjectFileGroupingState(mainClass, bd, wd, file, srcFiles, exCp));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db69c378ea26f324495a008e8c5110cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionMapLoaderTest.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testProperConfigSet() throws IOException", "signatureAfterChange": "          public void testProperConfigSet() throws IOException", "diff": ["-\tInputStream is = new StringInputStream(OPTION_DOC);", "+\tcheckSet(OPTION_DOC,new Integer(-1),\"foo\",\"bar\",\"baz\",1);", "+    }", "-\t\t     map.getOption(INDENT_LEVEL),new Integer(-1));", "-\tassertEquals(map.getOption(JAVAC_LOCATION),\"foo\");", "-\tassertEquals(map.getOption(JSR14_LOCATION),\"bar\");", "-\tassertEquals(map.getOption(JSR14_COLLECTIONSPATH),\"baz\");", "-\tassertEquals(map.getOption(EXTRA_CLASSPATH).elementAt(0),\"bam\");"]}], "num": 24697}