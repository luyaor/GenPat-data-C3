{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "635539ddbec9b12c6deb997a70ca2973", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1155eecccb4d63a5f15e6e9dd58d08ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 241, "signatureBeforeChange": "   public static <T1, T2, T3, T4> boolean and(Iterable<? extends T1> iter1,                                               Iterable<? extends T2> iter2,                                              Iterable<? extends T3> iter3,                                              Iterable<? extends T4> iter4,                                              Predicate4<? super T1, ? super T2, ? super T3, ? super T4> pred)", "signatureAfterChange": "   public static <T1, T2, T3, T4> boolean and(Iterable<? extends T1> iter1,                                               Iterable<? extends T2> iter2,                                              Iterable<? extends T3> iter3,                                              Iterable<? extends T4> iter4,                                              Predicate4<? super T1, ? super T2, ? super T3, ? super T4> pred)", "diff": ["-      if (!pred.value(i1.next(), i2.next(), i3.next(), i4.next())) { return false; }", "+      if (!pred.contains(i1.next(), i2.next(), i3.next(), i4.next())) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa9912d2814468fa107226a2c088eb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 242, "signatureBeforeChange": "   public static <T1, T2, T3, T4> boolean or(Iterable<? extends T1> iter1,                                              Iterable<? extends T2> iter2,                                             Iterable<? extends T3> iter3,                                             Iterable<? extends T4> iter4,                                             Predicate4<? super T1, ? super T2, ? super T3, ? super T4> pred)", "signatureAfterChange": "   public static <T1, T2, T3, T4> boolean or(Iterable<? extends T1> iter1,                                              Iterable<? extends T2> iter2,                                             Iterable<? extends T3> iter3,                                             Iterable<? extends T4> iter4,                                             Predicate4<? super T1, ? super T2, ? super T3, ? super T4> pred)", "diff": ["-      if (pred.value(i1.next(), i2.next(), i3.next(), i4.next())) { return true; }", "+      if (pred.contains(i1.next(), i2.next(), i3.next(), i4.next())) { return true; }"]}], "num": 15729}