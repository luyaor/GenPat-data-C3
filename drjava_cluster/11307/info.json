{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1c18dbe713b1e26f699a2e234bac052", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3885d9a15e78df3b0b1dd575397d507", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "3bb1b911d950f482b9e797d7de6104b1444684b7", "commitAfterChange": "045c3614cbae106e482ef86c608a22bd0f55ebc4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "signatureAfterChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "diff": ["-        File junitLocation = getConfig().getSetting(JUNIT_LOCATION);", "-        boolean junitLocationConfigured =", "-          (edu.rice.cs.drjava.model.junit.ConcJUnitUtils.isValidJUnitFile(junitLocation) ||", "-           edu.rice.cs.drjava.model.junit.ConcJUnitUtils.isValidConcJUnitFile(junitLocation));", "-        _log.log(\"junitLocation: \"+junitLocation);", "-        _log.log(\"junitLocationConfigured: \"+junitLocationConfigured);", "-        if (DrJava.getConfig().getSetting(OptionConstants.RT_CONCJUNIT_LOCATION_ENABLED) && // enabled", "-            !junitLocationConfigured && // not valid ", "-            (junitLocation != null) && // not null", "-            (!FileOps.NULL_FILE.equals(junitLocation)) && // not NULL_FILE", "-            (junitLocation.exists())) { // but exists", "-          // invalid file, clear setting", "-          getConfig().setSetting(JUNIT_LOCATION_ENABLED, false);", "-          getConfig().saveConfiguration();", "-          junitLocationConfigured = false;", "-        }", "-          || (!\"\".equals(masterMemory) && !OptionConstants.heapSizeChoices.get(0).equals(masterMemory))", "-          || (DrJava.getConfig().getSetting(OptionConstants.RT_CONCJUNIT_LOCATION_ENABLED) && junitLocationConfigured);", "+          || (!\"\".equals(masterMemory) && !OptionConstants.heapSizeChoices.get(0).equals(masterMemory));", "-            if (DrJava.getConfig().getSetting(OptionConstants.JUNIT_LOCATION_ENABLED) &&", "-                junitLocationConfigured) {", "-              extendedClassPath.add(junitLocation);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5aafdb1be836bd953b19114789fe8cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "69317eecda3235d4815eb5d9a5b9e536b8481c4a", "commitAfterChange": "3549437d3f0aec05949cb330cf74662cd269bb15", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   private void _doStartup()", "signatureAfterChange": "   private void _doStartup()", "diff": ["+    // ConcJUnit argument: -Xbootclasspath/p:rt.concjunit.jar", "+    File junitLocation = DrJava.getConfig().getSetting(OptionConstants.JUNIT_LOCATION);", "+    boolean concJUnitLocationConfigured =", "+      edu.rice.cs.drjava.model.junit.DefaultJUnitModel.isValidConcJUnitFile(junitLocation);", "+    File rtLocation = DrJava.getConfig().getSetting(OptionConstants.RT_CONCJUNIT_LOCATION);", "+    boolean rtLocationConfigured =", "+      edu.rice.cs.drjava.model.junit.DefaultJUnitModel.isValidRTConcJUnitFile(rtLocation);", "+    if (!rtLocationConfigured && // not valid", "+        (rtLocation != null) && // not null", "+        (!FileOps.NULL_FILE.equals(rtLocation)) && // not NULL_FILE", "+        (rtLocation.exists())) { // but exists", "+      // invalid file, clear setting", "+      DrJava.getConfig().setSetting(OptionConstants.RT_CONCJUNIT_LOCATION, FileOps.NULL_FILE);", "+      rtLocationConfigured = false;", "+    }", "+    if (concJUnitLocationConfigured && rtLocationConfigured) {", "+      try {", "+        // NOTE: this is a work-around", "+        // it seems like it's impossible to pass long file names here on Windows", "+        // so we are using a clumsy method that determines the short file name", "+        File shortF = FileOps.getShortFile(rtLocation);", "+        jvmArgs.add(\"-Xbootclasspath/p:\"+shortF.getAbsolutePath().replace(File.separatorChar, '/'));", "+      }", "+      catch(IOException ioe) {", "+        // we couldn't get the short file name (on Windows), disable \"lucky\" warnings", "+        DrJava.getConfig().setSetting(OptionConstants.RT_CONCJUNIT_LOCATION, FileOps.NULL_FILE);", "+        rtLocationConfigured = false;", "+      }", "+    }", "+    ", "+    "]}], "num": 11307}