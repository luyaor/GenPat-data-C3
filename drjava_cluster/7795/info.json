{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5ffbbb96ac4ddc5b3211d5f033d6ec1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a049dfa08a3e0d4c05360d437761c2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public Void forInterfaceDef(InterfaceDef that)", "signatureAfterChange": "   public Void forInterfaceDef(InterfaceDef that)", "diff": ["-    // The following for loop should be no-op because interfaces can't have fields!", "+    ", "+    // The following assert should be true because interfaces can't have fields!", "-//    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);", "+    ", "+    for (int i = 0; i < that.getInterfaces().length; i++) that.getInterfaces()[i].visit(this);", "+", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e187aae9da51921ab1be774414d2d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistryTest.java", "commitBeforeChange": "321e79b1f242fd0fc2fe88ee000f7a52383c7144", "commitAfterChange": "511e6cd8ca564113db7580e483d49804656e893b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testLimitAllAtOnce()", "signatureAfterChange": "   public void testLimitAllAtOnce()", "diff": ["-      loader.addToRestrictedList(_defaultCompilers[i]);", "+      for (int j = 0; j < _defaultCompilers[i].length; j++) {", "+        loader.addToRestrictedList(_defaultCompilers[i][j]);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af797bf84cfc33489bf29a424ffa1a2e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "8dca2c41e488541cc2d04650b3eeeeac73b63c7b", "commitAfterChange": "6d85a2756dd57e112f92e2bc7d39f5d4e70ce5ff", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void addJavaInterpreter(String name)", "signatureAfterChange": "   public void addJavaInterpreter(String name)", "diff": ["-    interpreter.addClassPath(_classpath);", "+    // Add each entry on the accumulated classpath", "+    for (int i=0; i < _classpath.size(); i++) {", "+      interpreter.addClassPath(_classpath.elementAt(i));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdcb5ad45d205f26db7230a6e914ab7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "527b327a81252940ede7723bc28a80b1911fdddb", "commitAfterChange": "60cd84614ab1a6d35590df8d34b30b47cae7364d", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "   private void updateList()", "signatureAfterChange": "   private void updateList()", "diff": ["-      _okButton.setEnabled(_matchList.getModel().getSize()>0);", "+      for(int i=0; i<_buttons.length-1; ++i) {", "+        _buttons[i].setEnabled(_matchList.getModel().getSize()>0);", "+      }"]}], "num": 7795}