{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25200598670176efd9464ff4eb778e3e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5891120d67e5cc777f7fcbc6bafc96ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private File refreshNode(DefaultMutableTreeNode node)", "signatureAfterChange": "   private File refreshNode(DefaultMutableTreeNode node)", "diff": ["+    ", "-    if (!f.exists()) return null; ", "+    if (!f.exists()) {", "+      if (node == _root) {", "+        File parentFile = f.getParentFile();", "+        if (parentFile != null) {", "+          parentFile = formatFile(parentFile);", "+          while (!parentFile.exists()) {", "+            parentFile = parentFile.getParentFile();", "+          }", "+          setRootFile(null);", "+          setSelectedDirectory(parentFile);", "+        }", "+      }", "+      else {", "+        getModel().removeNodeFromParent(node);", "+      }", "+      return null; ", "+    }", "-        return f; // children are not generated yet", "+        return f; // children are not generated yet & thus do not need refreshing", "-      DefaultMutableTreeNode n = (DefaultMutableTreeNode) e.nextElement();", "-      if (nodeShouldBeRemoved(n)) ", "-        nodesToRemove.add(n); ", "-      else", "-        set.add(refreshNode(n));", "-    }", "-    for(DefaultMutableTreeNode n : nodesToRemove) {", "-      getModel().removeNodeFromParent(n);", "+      DefaultMutableTreeNode child = (DefaultMutableTreeNode) e.nextElement();", "+      File childFile = refreshNode(child);", "+      if (childFile != null) set.add(refreshNode(child));", "+    if (node == _root) { // make sure the root node is always expanded", "+      _tree.expandPath(new TreePath(node.getPath()));      ", "+    }", "-  }  ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7352a795ee0c8ab8854163d0b8cdd9b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c46b51159c995a9970485b3c515f743b3910e9fc", "commitAfterChange": "20a2512e394be5865ddd8dc1ebd648c5dfb08d0c", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "   private void _storePositionInfo()", "signatureAfterChange": "   private void _storePositionInfo()", "diff": ["-    // Window size.", "-    Dimension size = getSize();", "-    config.setSetting(WINDOW_HEIGHT, new Integer(size.height));", "-    config.setSetting(WINDOW_WIDTH, new Integer(size.width));", "-", "+    // Window bounds.", "+    if (config.getSetting(WINDOW_STORE_POSITION).booleanValue()) {", "+      Rectangle bounds = getBounds();", "+      config.setSetting(WINDOW_HEIGHT, new Integer(bounds.height));", "+      config.setSetting(WINDOW_WIDTH, new Integer(bounds.width));", "+      config.setSetting(WINDOW_X, new Integer(bounds.x));", "+      config.setSetting(WINDOW_Y, new Integer(bounds.y));", "+    }", "+    else {", "+      // Reset to defaults to restore pristine behavior.", "+      config.setSetting(WINDOW_HEIGHT, WINDOW_HEIGHT.getDefault());", "+      config.setSetting(WINDOW_WIDTH, WINDOW_WIDTH.getDefault());", "+      config.setSetting(WINDOW_X, WINDOW_X.getDefault());", "+      config.setSetting(WINDOW_Y, WINDOW_Y.getDefault());", "+    }", "+      "]}], "num": 2563}