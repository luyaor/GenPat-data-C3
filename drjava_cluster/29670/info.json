{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8d8f060d7825072a5758a795c6020ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eee3976a9f868e8f86ab95e41a9eb55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "   public Void visit(MethodDeclaration node)", "signatureAfterChange": "   public Void visit(MethodDeclaration node)", "diff": ["-    Iterator it = node.getParameters().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getParameters()) {", "+      n.acceptVisitor(this);", "-    it = node.getExceptions().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getExceptions()) {", "+      n.acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48075ed9c5333ab1f82fe37eaf41676", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public Class visit(InnerAllocation node)", "signatureAfterChange": "   public Class visit(InnerAllocation node)", "diff": ["-    Class ec = (Class)node.getExpression().acceptVisitor(this);", "-    ", "+    Class ec = node.getExpression().acceptVisitor(this);", "+", "-    Class c = (Class)type.acceptVisitor(this);", "+    Class c = type.acceptVisitor(this);", "-    ", "+", "-    ", "+", "-        ", "+", "-          cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+          cargs[i++] = ((Node)it.next()).acceptVisitor(this);", "-    ", "+", "-    ", "+"]}], "num": 29670}