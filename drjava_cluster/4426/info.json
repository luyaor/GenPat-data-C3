{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "623efa9785f5c5cc2c41a2b323cd24ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1edb5ce0ad80b9b061eb7ade2e57b8b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic void testSkippingComments ()", "signatureAfterChange": "      public void testSkippingComments () throws BadLocationException", "diff": ["-\t", "-\tpublic void testSkippingComments () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 13, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 13, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testSkippingComments () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 13, ii.distToBrace);", "+    assertEquals(\"1.1\", 13, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a9ed6f755feb34e3aa8d271d41d9dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic void testSkippingComments ()", "signatureAfterChange": "      public void testSkippingComments () throws BadLocationException", "diff": ["-\t", "-\tpublic void testSkippingComments () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 13, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 13, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testSkippingComments () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 13, ii.distToBrace);", "+    assertEquals(\"1.1\", 13, ii.distToNewline);", "+  }"]}], "num": 4426}