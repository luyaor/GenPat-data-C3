{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecf823e77bd6c5409747d13155620316", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33bc272c30866abf653596af4d5b7980", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "diff": ["+    acquireReadLock();", "+    try { return _getHighlightStatus(start, end); }", "+    finally { releaseReadLock(); }", "+  }", "-    acquireReadLock();", "-    try {", "-      synchronized(_reduced) {", "-        _setCurrentLocation(start);", "-        /* Now ask reduced model for highlight status for chars till end */", "-        v = _reduced.getHighlightStatus(start, end - start);", "-        ", "-        /* Go through and find any NORMAL blocks. Within them check for keywords. */", "-        for (int i = 0; i < v.size(); i++) {", "-          HighlightStatus stat = v.get(i);", "-          if (stat.getState() == HighlightStatus.NORMAL) i = _highlightKeywords(v, i);", "-        }", "-    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36df154d733215ffddfc62b0e5daa49f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "a9e88c9896a0247806cc1a6d54ae50329689432b", "commitAfterChange": "87dc6eec48d92797c0b33779a71935f55ec078b5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public File[] getSourceRootSet() throws InvalidPackageException", "signatureAfterChange": "   public File[] getSourceRootSet() throws InvalidPackageException;", "diff": ["-  public File[] getSourceRootSet() throws InvalidPackageException {", "-    LinkedList roots = new LinkedList();", "-", "-    for (int i = 0; i < _definitionsDocs.size(); i++) {", "-      OpenDefinitionsDocument doc = (OpenDefinitionsDocument)", "-        _definitionsDocs.get(i);", "-      File root = doc.getSourceRoot();", "-", "-      // Don't add duplicate Files, based on path", "-      if (!roots.contains(root)) {", "-        roots.add(root);", "-      }", "-    }", "-", "-    return (File[]) roots.toArray(new File[0]);", "-  }", "+  public File[] getSourceRootSet() throws InvalidPackageException;"]}], "num": 24492}