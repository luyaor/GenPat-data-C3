{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75326cdd5c91b86d7904f3efe5fc0fe5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "698b414c90cff842c6bf508c2d6a812f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     @Override public Type visit(ObjectMethodCall node)", "signatureAfterChange": "     @Override public Type visit(ObjectMethodCall node)", "diff": ["-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.method\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.method\", node); }", "+        else { throw new ExecutionError(\"no.such.method\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734fe19c33c2d03f9d8a009b3b61666f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void checkConstructorCall(ConstructorCall node)", "signatureAfterChange": "   public void checkConstructorCall(ConstructorCall node)", "diff": ["-    catch (TypeSystemException e) {", "+    catch (UnmatchedLookupException e) {", "-      throw new ExecutionError(\"no.such.constructor\", node);", "+      if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.constructor\", node); }", "+      else { throw new ExecutionError(\"no.such.constructor\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cc864a88381f6674e1293acf02b6883", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     @Override public Type visit(ObjectFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(ObjectFieldAccess node)", "diff": ["-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.field\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.field\", node); }", "+        else { throw new ExecutionError(\"no.such.field\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28044972518b0de94596d6a929e890e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     @Override public Type visit(SimpleMethodCall node)", "signatureAfterChange": "     @Override public Type visit(SimpleMethodCall node)", "diff": ["-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.method\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.method\", node); }", "+        else { throw new ExecutionError(\"no.such.method\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4de607ec73075d2dc56ff545db75e01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     @Override public Type visit(StaticMethodCall node)", "signatureAfterChange": "     @Override public Type visit(StaticMethodCall node)", "diff": ["-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.static.method\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.method\", node); }", "+        else { throw new ExecutionError(\"no.such.method\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed759a95a2a8e181276f4a0346bdb172", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     @Override public Type visit(SuperFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(SuperFieldAccess node)", "diff": ["-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.field\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.field\", node); }", "+        else { throw new ExecutionError(\"no.such.field\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f361c1900f03f58dd659fac090cd34fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     @Override public Type visit(SuperMethodCall node)", "signatureAfterChange": "     @Override public Type visit(SuperMethodCall node)", "diff": ["-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.method\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.method\", node); }", "+        else { throw new ExecutionError(\"no.such.method\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7cc9ce81a8b40f7eda426825ecabe0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     @Override public Type visit(StaticFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(StaticFieldAccess node)", "diff": ["-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.static.field\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.field\", node); }", "+        else { throw new ExecutionError(\"no.such.static.field\", node); }"]}], "num": 13563}