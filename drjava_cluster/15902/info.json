{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45a5a53cbe1b98eee98c4c12ab73e717", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a3c6c4c839640089a99bbe1f36678ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipComments.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-        if (state.equals(ReducedModelState.INSIDE_LINE_COMMENT)) return false;", "-        if (state.equals(ReducedModelState.INSIDE_BLOCK_COMMENT)) {  // Handle case: ...*/*", "+        if (state.equals(INSIDE_LINE_COMMENT)) return false;", "+        if (state.equals(INSIDE_BLOCK_COMMENT)) {  // Handle case: ...*/*", "-        if (state.equals(ReducedModelState.FREE)) { // Can prefix still fit on the current line?", "+        if (state.equals(FREE)) { // Can prefix still fit on the current line?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8192c819eb28b1014260fb78e39d9fab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/StateBlock.java", "commitBeforeChange": "603c8744a127b7738a621d0f6b6e698d9647db86", "commitAfterChange": "d97f194d4894331315bb927c9da13ccef8ff7fc7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\t\tswitch(this.state){", "-\t\t\tcase ReducedToken.FREE: hilite = \"FREE\";break;", "-\t\t\tcase ReducedToken.INSIDE_LINE_COMMENT: hilite = \"LINE\";break;", "-\t\t\tcase ReducedToken.INSIDE_BLOCK_COMMENT: hilite = \"BLOCK\";break;", "-\t\t\tcase ReducedToken.INSIDE_QUOTE: hilite = \"QUOTE\";break;", "-\t\t\t}", "+\t\t ", "+\t\t\tif (state.equals(BLOCK_COMMENT_COLOR))", "+\t\t\t\thilite = \"BLOCK\";", "+\t\t\tif (state.equals(LINE_COMMENT_COLOR))", "+\t\t\t\thilite = \"LINE\";", "+\t\t\tif (state.equals(QUOTE_COLOR))", "+\t\t\t\thilite = \"QUOTE\";", "+\t\t\telse //state.equals(DEFAULT_COLOR)", "+\t\t\t\thilite = \"DEFAULT\";", "+\t\t\t\t\t\t\t\t\t\t\t\t"]}], "num": 15902}