{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a225dd9d387f39571e63bfbeb51c0034", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a0822ea7ddeef1cd9efea44ed02bb21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void anonymousClassInstantiationHelper(AnonymousClassInstantiation that, Data enclosing, SymbolData superC)", "signatureAfterChange": "   public void anonymousClassInstantiationHelper(AnonymousClassInstantiation that, Data enclosing, SymbolData superC)", "diff": ["-    SymbolData sd = new SymbolData(getQualifiedClassName(enclosing.getSymbolData().getName()) + \"$\" + enclosing.getSymbolData().preincrementAnonymousInnerClassNum());", "+    String anonName = getQualifiedClassName(enclosing.getSymbolData().getName()) + \"$\" + ", "+      enclosing.getSymbolData().preincrementAnonymousInnerClassNum();", "+    SymbolData sd = new SymbolData(anonName);", "-    that.getBody().visit(new ClassBodyAdvancedVisitor(sd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getBody().visit(new ClassBodyAdvancedVisitor(sd, anonName, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3b21d79e88a9437ba2139d70bbbd74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public FullJavaVisitor(File file,                           String packageName,                           String enclosingClassName,                          LinkedList<String> importedFiles,                           LinkedList<String> importedPackages,                          HashSet<String> classesInThisFile,                           Hashtable<String, Triple<SourceInfo, LanguageLevelVisitor, SymbolData>> continuations,                          LinkedList<Command> fixUps)", "signatureAfterChange": "   public FullJavaVisitor(File file,                           String packageName,                           String enclosingClassName,                          LinkedList<String> importedFiles,                           LinkedList<String> importedPackages,                          HashSet<String> classesInThisFile,                           Hashtable<String, Triple<SourceInfo, LanguageLevelVisitor, SymbolData>> continuations,                          LinkedList<Command> fixUps)", "diff": ["-    */", "+  /** This constructor is called from sites where no generic type variables are in scope. */", "-    super(file, packageName, enclosingClassName, importedFiles, importedPackages, classesInThisFile, continuations, fixUps);", "+    this(file, packageName, enclosingClassName, importedFiles, importedPackages, classesInThisFile, continuations, ", "+         fixUps, new HashMap<String, SymbolData>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8628160608bf6e5e42ec0cca783e10a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "signatureAfterChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "diff": ["-   */", "+    */", "+//    System.err.println(\"Processing InnerClassDef for \" + name);", "-    ", "-      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, name, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));"]}], "num": 7816}