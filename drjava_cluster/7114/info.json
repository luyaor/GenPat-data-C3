{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5557d69b8afba30fd06998fdf468b279", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f088a5a75b4bdc529c34c27803e0190", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "commitAfterChange": "afb4d888e2c907babf9fe3737eb7d3791cf965d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic InteractionsView()", "signatureAfterChange": " \t \tpublic InteractionsView()", "diff": ["-\t\t//add actions for enter key", "+\t\t//add actions for enter key, etc.", "+    // Up and down need to be bound both for keypad and not", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_UP, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyPrevAction);", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyPrevAction);", "+", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_DOWN, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyNextAction);", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyNextAction);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a10bef1fa35f513f8bf9e1638c31303", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsView.java", "commitBeforeChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "commitAfterChange": "afb4d888e2c907babf9fe3737eb7d3791cf965d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic InteractionsView()", "signatureAfterChange": " \t \tpublic InteractionsView()", "diff": ["-\t\t//add actions for enter key", "+\t\t//add actions for enter key, etc.", "+    // Up and down need to be bound both for keypad and not", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_UP, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyPrevAction);", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyPrevAction);", "+", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_DOWN, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyNextAction);", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyNextAction);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e779f8e71cebfa1d9ec13a08d54cdc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsPane.java", "commitBeforeChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "commitAfterChange": "afb4d888e2c907babf9fe3737eb7d3791cf965d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic InteractionsView()", "signatureAfterChange": " \t \tpublic InteractionsView()", "diff": ["-\t\t//add actions for enter key", "+\t\t//add actions for enter key, etc.", "+    // Up and down need to be bound both for keypad and not", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_UP, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyPrevAction);", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyPrevAction);", "+", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_DOWN, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyNextAction);", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t _historyNextAction);", "+"]}], "num": 7114}