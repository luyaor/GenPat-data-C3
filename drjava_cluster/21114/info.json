{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f55c165e8906a6d6ad7387251b7e389", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428e6f01026c13262b415b89dce1c54c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platforms/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "commitAfterChange": "6ac69c3693d2354a6dc85f7c3cd5e1082ee678fa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private Context createContext(File[] sourceRoots)", "signatureAfterChange": "      private Context createContext(File[] sourceRoots)", "diff": ["-    options.putAll(CompilerOptions.getOptions(_warningsEnabled));", "+    // options.putAll(CompilerOptions.getOptions(_warningsEnabled));  // No putAll(String, String) method in Options!", "+    for (Map.Entry<String, String> e: CompilerOptions.getOptions(_warningsEnabled).entrySet()) ", "+      options.put(e.getKey(), e.getValue());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983b754b85d1ddd14d261fe1f7c7ce27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaProperty.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r   public void setAttributes(HashMap<String,String> attrs, edu.rice.cs.util.Lambda<String,String> replaceLambda)", "signatureAfterChange": "   public void setAttributes(HashMap<String,String> attrs, Lambda<String,String> replaceLambda)", "diff": ["-    */\r", "-  public void setAttributes(HashMap<String,String> attrs, edu.rice.cs.util.Lambda<String,String> replaceLambda) {\r", "-    String value;\r", "-    for(String key: attrs.keySet()) {\r", "-      value = attrs.get(key);\r", "-      setAttribute(key, replaceLambda.apply(value));\r", "-    }\r", "-  }\r", "+    */", "+  public void setAttributes(HashMap<String,String> attrs, Lambda<String,String> replaceLambda) {", "+    String value;", "+    for(String key: attrs.keySet()) {", "+      value = attrs.get(key);", "+      setAttribute(key, replaceLambda.value(value));", "+    }", "+  }"]}], "num": 21114}