{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbca2e964b427e97b28dafe0ee30eafd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39fc62522c197177bf1e20e6311e538f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "68bd63f6034f2863f39ab1e69222ff477d2c17f9", "commitAfterChange": "0fae02937c58237a9087228b753c7aa76d749043", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   final public List enumBody(String enumTypeName) throws ParseException", "signatureAfterChange": "   final public List<Node> enumBody(String enumTypeName) throws ParseException", "diff": ["-  final public List enumBody(String enumTypeName) throws ParseException {", "+  final public List<Node> enumBody(String enumTypeName) throws ParseException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef13eb8b7fef2fb727068dac9e3f7ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   final public List parseStream() throws ParseException", "signatureAfterChange": "   final public List<Node> parseStream() throws ParseException", "diff": ["-  final public List parseStream() throws ParseException {", "+  final public List<Node> parseStream() throws ParseException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c8c39dfa6adbe39d6340c18837f694", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public List<IdentifierToken> getQualifiedName(String methodName, Class[] args) throws NoSuchMethodException", "signatureAfterChange": "   public List<IdentifierToken> getQualifiedName(String methodName, Class<?>[] args) throws NoSuchMethodException", "diff": ["-  public List<IdentifierToken> getQualifiedName(String methodName, Class[] args) throws NoSuchMethodException{", "+  public List<IdentifierToken> getQualifiedName(String methodName, Class<?>[] args) throws NoSuchMethodException{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81493ac9288e3f0aa594414f567f737b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/Context.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     Method lookupSuperMethod(Node node, String mname, Class[] params)  throws NoSuchMethodException;", "signatureAfterChange": "     Method lookupSuperMethod(Node node, String mname, Class<?>[] params)  throws NoSuchMethodException;", "diff": ["-    Method lookupSuperMethod(Node node, String mname, Class[] params)", "+    Method lookupSuperMethod(Node node, String mname, Class<?>[] params)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df17ff7c2ccff4d64cb974fb2cd19de9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/EvaluationVisitorExtension.java", "commitBeforeChange": "4ae3dba211535b42e36ea3344ccafcfcc3ff3edd", "commitAfterChange": "90464e2ed7c77705e57d251eb7f4b67e377039d6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public Object visit(VariableDeclaration node)", "signatureAfterChange": "   public Object visit(VariableDeclaration node)", "diff": ["-    Class c = NodeProperties.getType(node.getType());", "+    Class<?> c = NodeProperties.getType(node.getType());", "-      if (!(c.isPrimitive()                     ||", "+      if (!(c.isPrimitive()                    ||"]}], "num": 11165}