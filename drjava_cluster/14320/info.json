{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e069b3e4cc9d5aa173ebfa89ce1a587", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7767c5a7721aeddcdcbd8c636943e245", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 301, "signatureBeforeChange": "     protected ClassFinder(String name, Iterable<? extends Type> typeArgs, boolean onlyStatic)", "signatureAfterChange": "     protected ClassFinder(String name, Iterable<? extends Type> typeArgs, Access.Module accessModule,                           boolean onlyStatic)", "diff": ["-    protected ClassFinder(String name, Iterable<? extends Type> typeArgs, boolean onlyStatic) {", "+    protected ClassFinder(String name, Iterable<? extends Type> typeArgs, Access.Module accessModule,", "+                          boolean onlyStatic) {", "+      _accessModule = accessModule;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b59e71a8c80f973bcfb66f370cc916", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "     public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "     public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs,                                         Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-  public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs)", "+  public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs,", "+                                        Access.Module accessModule)"]}], "num": 14320}