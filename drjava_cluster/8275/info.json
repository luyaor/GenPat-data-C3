{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "610e96efa66e1cdbf78d20d54d926923", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89840488a6e4ac920c29528ed69ba0f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 46, "signatureBeforeChange": "   private void _threwException(final Throwable t)", "signatureAfterChange": "   private void _handleRemoteException(RemoteException e)", "diff": ["-  /** Lets the model know if any exceptions occur while communicating with the Interpreter JVM. */", "-  private void _threwException(final Throwable t) { DrJavaErrorHandler.record(t); }", "+  /** Lets the model know if any exceptions occur while communicating with the Interpreter JVM. */", "+  private void _handleRemoteException(RemoteException e) {", "+    if (e instanceof UnmarshalException && e.getCause() instanceof EOFException) {", "+      /* Interpreter JVM has disappeared (perhaps reset); just ignore the error. */", "+    else { DrJavaErrorHandler.record(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a861c2d5bbdae356b961c45c5b956779", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "29ec68db51be49631902c1a08dc8658c156745b6", "commitAfterChange": "ab72d5391a7476aed8a2fc83f5cb9b83bb5fe1d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void _addHighlight(int from, int to) throws BadLocationException", "signatureAfterChange": "   private void _addHighlight(int from, int to) throws BadLocationException", "diff": ["-    _matchHighlight = getHighlighter().addHighlight(from, to, _highlightPainter);", "+    if (CodeStatus.DEVELOPMENT) {", "+      _matchHighlight = (HighlightManager.HighlightInfo)_highlightManager.addHighlight(from, to, MATCH_PAINTER);", "+    }", "+    else {", "+      _matchHighlight = getHighlighter().addHighlight(from, to, MATCH_PAINTER);", "+    }"]}], "num": 8275}