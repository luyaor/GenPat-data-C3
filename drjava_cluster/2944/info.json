{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4efe3080015e5ca868a94aa64e6e1b5b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63d7afae7f7b3dc8455c1d2cd8c90915", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ab929f2517998893e7ac2a2baadc6213c733962b", "commitAfterChange": "0fe56dbec731a045fe28e9c5bc1a9260c7157f46", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 150, "signatureBeforeChange": "       private void getFilesInDir(File d, List<File> acc, boolean recur)", "signatureAfterChange": "           public boolean accept(File f)", "diff": ["-  private void getFilesInDir(File d, List<File> acc, boolean recur){", "-    if(d.isDirectory()){", "-      File[] fa = d.listFiles();", "-      for(File f: fa){", "-        if(f.isDirectory() && recur){ ", "-          getFilesInDir(f, acc, recur);", "-        }else if(f.isFile()){", "-          acc.add(f);", "-        }", "-      }      ", "-    }else{", "-      acc.add(d);", "-    }", "-  }", "+        files = FileOps.getFilesInDir(dir, openSelector.isRecursive(), new FileFilter(){", "+          public boolean accept(File f){ ", "+            return f.isDirectory() ||", "+              f.isFile() && ", "+              f.getName().endsWith(DrJava.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab55aebada34ef263ada2921b098f085", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HelpFrame.java", "commitBeforeChange": "b4e48852da60211c31b0141438d3f04d6c627263", "commitAfterChange": "4402afa3c67a362593909f349f9fbb816e477bed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void hyperlinkUpdate(HyperlinkEvent event)", "signatureAfterChange": "     public void hyperlinkUpdate(HyperlinkEvent event)", "diff": ["-   */", "-  public void hyperlinkUpdate(HyperlinkEvent event){", "-    if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {", "-      // Only follow links within the documentation", "-      URL url = event.getURL();", "-      String protocol = url.getProtocol();", "-      String path = url.getPath();", "-      if ((\"file\".equals(protocol) || \"jar\".equals(protocol))", "-            && path.indexOf(HELP_PATH) >= 0) {", "-        displayPage(url);", "-      }", "-    }", "+  private final HyperlinkListener _linkListener = new HyperlinkListener() {", "+    public void hyperlinkUpdate(HyperlinkEvent event){", "+      if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {", "+        // Only follow links within the documentation", "+        URL url = event.getURL();", "+        String protocol = url.getProtocol();", "+        String path = url.getPath();", "+        if ((\"file\".equals(protocol) || \"jar\".equals(protocol))", "+              && path.indexOf(HELP_PATH) >= 0) {", "+          jumpTo(url);", "+        }", "+      }", "+    }"]}], "num": 2944}