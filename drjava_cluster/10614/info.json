{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2883bdc366430afc66124ecece9cf2bf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085dd43544ac279e57a9bc3cbdecf3df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 11, "signatureBeforeChange": "          public static void main(String... args)", "signatureAfterChange": "     public T call()", "diff": ["+    public ThunkCallable(Thunk<? extends T> thunk) { _thunk = thunk; }", "+    public T call() { return _thunk.value(); }", "-    ", "-    public static void main(String... args) {", "-      OutputStream out = System.out;", "-      IOUtil.replaceSystemOut(VoidOutputStream.INSTANCE);", "-      try {", "-        out.write(PREFIX);", "-        ObjectOutputStream objOut = new ObjectOutputStream(out);", "-        try {", "-          Object result = null;", "-          Exception exception = null;", "-          try {", "-            ObjectInputStream objIn = new ObjectInputStream(System.in);", "-            try {", "-              Thunk<?> task = (Thunk<?>) objIn.readObject();", "-              try { result = task.value(); }", "-              catch (Throwable e) { exception = new InvocationTargetException(e); }", "-            }", "-            finally { objIn.close(); }", "-          }", "-          catch (Exception e) { exception = e; } // problem with objIn", "-          ", "-          objOut.writeObject(result);", "-          objOut.writeObject(exception);", "-        }", "-        finally { objOut.close(); }", "-      }", "-      catch (IOException e) { error.log(\"Error writing to System.out\", e); }", "-      finally { IOUtil.revertSystemOut(); }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "febe11e6abf5fe99db6dc7a0f553ec48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public static void main(String... args)", "signatureAfterChange": "     public static void main(String... args)", "diff": ["+          IOUtil.replaceSystemOut(VoidOutputStream.INSTANCE);", "-            IOUtil.replaceSystemOut(VoidOutputStream.INSTANCE);", "+            ObjectInputStream objIn = new ObjectInputStream(System.in);", "-              ObjectInputStream objIn = new ObjectInputStream(System.in);", "-              try {", "-                Thunk<?> task = (Thunk<?>) objIn.readObject();", "-                try { result = task.value(); }", "-                catch (Throwable e) { exception = new InvocationTargetException(e); }", "-              }", "-              finally { objIn.close(); }", "+              Thunk<?> task = (Thunk<?>) objIn.readObject();", "+              try { result = task.value(); }", "+              catch (Throwable e) { exception = new InvocationTargetException(e); }", "-            catch (Exception e) { exception = e; } // problem with objIn", "+            finally { objIn.close(); }", "+          catch (Exception e) { exception = e; } // problem with objIn"]}], "num": 10614}