{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01b9cfd1340d7a00fd06991a179c5ab7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01fef0acb6856b3e822552c2897e8284", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "f8733505f202fffe732820ec266645b66b5ecb1b", "commitAfterChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-    catch(Throwable t) {", "-//      new ScrollableDialog(null, \"UnexceptedExceptionThrown\", t.toString(), \"\").show();", "-      throw new UnexpectedException(t); ", "+    catch(Exception e) {", "+//      new ScrollableDialog(null, \"UnexceptedExceptionThrown\", e.toString(), \"\").show();", "+      throw new UnexpectedException(e); ", "-      catch(Throwable t) {", "+      catch(Exception e) {", "-        throw new UnexpectedException(t);", "+        throw new UnexpectedException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44d0229141403bccf52b5f75d815a4c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f1e49fbbed5c92cb9e03198e54bd2a4b521e7d76", "commitAfterChange": "f8db0c631984f399cc3dc69f63db7cc67ab9e242", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": "   public void toggleBookmark()", "signatureAfterChange": "   public void toggleBookmark()", "diff": ["-      if (rm.contains(r)) rm.addRegion(r);", "+      if (! rm.contains(r)) rm.addRegion(r);", "-    catch (FileMovedException fme) {", "-      throw new UnexpectedException(fme);", "-    }", "-    catch (BadLocationException ble) {", "-      throw new UnexpectedException(ble);", "-    }", "+    catch (FileMovedException fme) { throw new UnexpectedException(fme); }", "+    catch (BadLocationException ble) { throw new UnexpectedException(ble); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb42197005988ac3ab69032783abf3e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDABreakpoint.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "signatureAfterChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "diff": ["+    ", "+    try { _position = doc.createPosition(offset); }", "+    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+    ", "-    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    if ((_manager != null) && (_manager.isReady())) {", "+    if (_manager != null && _manager.isReady()) {", "+  }"]}], "num": 31016}