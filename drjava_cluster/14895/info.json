{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bf812cd06ad0376c55d90790db22ffe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6724d785d95146768bde7a3a1311ce4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-mint/edu/rice/cs/drjava/model/compiler/MintCompiler.java", "commitBeforeChange": "ecec455630699fb47e48815ed0e8ff7ef49584c1", "commitAfterChange": "09b707cda41d2d3c82d34a50c8dbebc9d7cd95a2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,\r                                                    java.util.List<? extends File> classPath, \r                                                    java.util.List<? extends File> sourcePath,\r                                                    File destination, \r                                                    java.util.List<? extends File> bootClassPath,\r                                                    String sourceVersion,\r                                                    boolean showWarnings)", "signatureAfterChange": "\r   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,\r                                                    java.util.List<? extends File> classPath, \r                                                    java.util.List<? extends File> sourcePath,\r                                                    File destination, \r                                                    java.util.List<? extends File> bootClassPath,\r                                                    String sourceVersion,\r                                                    boolean showWarnings)", "diff": ["+    msg(\"DrJava compile: files: \"+((files!=null)?IOUtil.pathToString(files):\"n/a\"));\r", "+    msg(\"            classPath: \"+((classPath!=null)?IOUtil.pathToString(classPath):\"n/a\"));\r", "+    msg(\"           sourcePath: \"+((sourcePath!=null)?IOUtil.pathToString(sourcePath):\"n/a\"));\r", "+    msg(\"          destination: \"+destination);\r", "+    msg(\"        bootClassPath: \"+((bootClassPath!=null)?IOUtil.pathToString(bootClassPath):\"n/a\"));\r", "-//    Context context = _createContext(filteredClassPath, sourcePath, destination, bootClassPath, sourceVersion, showWarnings);\r", "-//    new CompilerErrorListener(context, errors);\r", "-//    \r", "+    Context context = _createContext(filteredClassPath, sourcePath, destination, bootClassPath, sourceVersion, showWarnings);\r", "+    new CompilerErrorListener(context, errors);\r", "+    \r", "-////////    int result = compile(new String[] {},\r", "-////////                         ListBuffer.<File>lb().appendArray(files.toArray(new File[0])).toList());\r", "+\r", "+    int result = compile(new String[] {},\r", "+                         ListBuffer.<File>lb().appendArray(files.toArray(new File[0])).toList(),\r", "+                         context);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2751642533dc71065471d314f038a4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-mint/edu/rice/cs/drjava/model/compiler/MintCompiler.java", "commitBeforeChange": "d6e5a814c07284651f7c529a85f464592512b19a", "commitAfterChange": "7068b1b7376b1c3813644f4d8ea2780684ca5f7c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,\r                                                    java.util.List<? extends File> classPath, \r                                                    java.util.List<? extends File> sourcePath,\r                                                    File destination, \r                                                    java.util.List<? extends File> bootClassPath,\r                                                    String sourceVersion,\r                                                    boolean showWarnings)", "signatureAfterChange": "\r   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,\r                                                    java.util.List<? extends File> classPath, \r                                                    java.util.List<? extends File> sourcePath,\r                                                    File destination, \r                                                    java.util.List<? extends File> bootClassPath,\r                                                    String sourceVersion,\r                                                    boolean showWarnings)", "diff": ["-    msg(\"DrJava compile: files: \"+((files!=null)?IOUtil.pathToString(files):\"n/a\"));\r", "-    msg(\"            classPath: \"+((classPath!=null)?IOUtil.pathToString(classPath):\"n/a\"));\r", "-    msg(\"           sourcePath: \"+((sourcePath!=null)?IOUtil.pathToString(sourcePath):\"n/a\"));\r", "-    msg(\"          destination: \"+destination);\r", "-    msg(\"        bootClassPath: \"+((bootClassPath!=null)?IOUtil.pathToString(bootClassPath):\"n/a\"));\r", "-    \r", "-//    JavaCompiler compiler = JavaCompiler.instance(context);\r", "-//    \r", "-//    /** Default FileManager provided by Context class */\r", "-//    DefaultFileManager fileManager = (DefaultFileManager) context.get(JavaFileManager.class);\r", "-//    com.sun.tools.javac.util.List<JavaFileObject> fileObjects = com.sun.tools.javac.util.List.nil();\r", "-//    for (File f : files) fileObjects = fileObjects.prepend(fileManager.getRegularFile(f));\r", "-//    \r", "-//    try { compiler.compile(fileObjects); }\r", "-//    catch(Throwable t) {  // compiler threw an exception/error (typically out of memory error)\r", "-//      errors.addFirst(new DJError(\"Compile exception: \" + t, false));\r", "-//      error.log(t);\r", "-//    }\r"]}], "num": 14895}