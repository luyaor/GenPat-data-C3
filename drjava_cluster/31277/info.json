{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afaed020bc2b039b3d4cb28532aa9a4b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418ca1be098829a206953db8fa2b30a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "26668262ef01a77108768ef35014f0c42dcfcb10", "commitAfterChange": "29c3a48aaad146d1b60a0606bb1625984a770c41", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   static boolean _isNum(String x)", "signatureAfterChange": "   static boolean _isNum(String x)", "diff": ["+      int radix = 10;", "+      int bits = 32;", "+        // string is not empty", "+        char ch = x.charAt(end-1);", "+        if ((ch=='l')||(ch=='L')) { // skip trailing 'l' or 'L'", "+          --end;", "+          bits = 64;  ", "+        }", "+        if (end-begin>1) {", "-          char ch = x.charAt(end-1);", "-          if ((ch=='l')||(ch=='L')) --end; // skip trailing 'l' or 'L'", "-          if (end-begin>1) {", "+          if (x.charAt(0)=='0') { // skip leading '0' of octal or hexadecimal literal", "+            ++begin;", "+            radix = 8;", "+            if (end-begin>1) {", "-              if (x.charAt(0)=='0') { // skip leading '0' of octal or hexadecimal literal", "-                  ++begin;", "-                  if (end-begin>1) {", "-                      // string is not empty", "-                      ch = x.charAt(1);", "-                      if ((ch=='x')||(ch=='X')) ++begin; // skip 'x' or 'X' from hexadecimal literal", "-                  }", "+              ch = x.charAt(1);", "+              if ((ch=='x')||(ch=='X')) { // skip 'x' or 'X' from hexadecimal literal", "+                ++begin;", "+                radix = 16;", "+            }", "+        }", "-          Long.parseLong(x.substring(begin,end));", "-          return true;", "+        // BigInteger can parse hex numbers representing negative longs; Long can't", "+        java.math.BigInteger val = new java.math.BigInteger(x.substring(begin, end), radix);", "+        return (val.bitLength() <= bits);", "-          return false;", "+        return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a5ed94d5cf5e18d1d04067082815ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "9ff0bbc54aa9f8d40241e0aedff6b31864ba4a0e", "commitAfterChange": "26668262ef01a77108768ef35014f0c42dcfcb10", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private boolean _isNum(String x)", "signatureAfterChange": "   static boolean _isNum(String x)", "diff": ["-  private boolean _isNum(String x) {", "+  static boolean _isNum(String x) {", "-      if (x.endsWith(\"l\")||x.endsWith(\"L\")) {", "-          try {", "-              Long.parseLong(x.substring(0,x.length()-1));", "-              return true;", "-          } ", "-          catch (NumberFormatException e2) {", "-              return false;", "+      int begin = 0;", "+      int end = x.length();", "+      if (end-begin>1) {", "+          // string is not empty", "+          char ch = x.charAt(end-1);", "+          if ((ch=='l')||(ch=='L')) --end; // skip trailing 'l' or 'L'", "+          if (end-begin>1) {", "+              // string is not empty", "+              if (x.charAt(0)=='0') { // skip leading '0' of octal or hexadecimal literal", "+                  ++begin;", "+                  if (end-begin>1) {", "+                      // string is not empty", "+                      ch = x.charAt(1);", "+                      if ((ch=='x')||(ch=='X')) ++begin; // skip 'x' or 'X' from hexadecimal literal", "+                  }", "+              }", "-      return false;", "+      try {", "+          Long.parseLong(x.substring(begin,end));", "+          return true;", "+      }", "+      catch (NumberFormatException e2) {", "+          return false;", "+      }"]}], "num": 31277}