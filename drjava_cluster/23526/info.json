{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd7d676145fcf248a8991ed5e6ad67cb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc944a2cc4ddfef50ca1612be778033", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 486, "methodNumberAfterChange": 486, "signatureBeforeChange": "\r \r   public void forClassLiteral(ClassLiteral that)", "signatureAfterChange": "    public void forClassLiteral(ClassLiteral that)", "diff": ["-\r", "-  public void forClassLiteral(ClassLiteral that) {\r", "-    forClassLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getType().visit(this);\r", "-    forClassLiteralOnly(that);\r", "-  }\r", "+", "+  public void forClassLiteral(ClassLiteral that) {", "+    forClassLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    that.getType().visit(this);", "+    forClassLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9b0e96f41746724e310726efe370b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 379, "signatureBeforeChange": "\r \r \r   public void forBlock(Block that)", "signatureAfterChange": "     public void forBlock(Block that)", "diff": ["-\r", "-  public void forBlock(Block that) {\r", "-    forBlockDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getStatements().visit(this);\r", "-    forBlockOnly(that);\r", "-  }\r", "+", "+  public void forBlock(Block that) {", "+    forBlockDoFirst(that);", "+    if (prune(that)) return;", "+    that.getStatements().visit(this);", "+    forBlockOnly(that);", "+  }"]}], "num": 23526}