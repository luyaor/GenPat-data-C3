{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "238eca5b036302e342d087e813a25c72", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a8ac9427e895083ccddea1950a72611", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "d6e5a814c07284651f7c529a85f464592512b19a", "commitAfterChange": "7068b1b7376b1c3813644f4d8ea2780684ca5f7c", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   private void _doStartup()", "signatureAfterChange": "   private void _doStartup()", "diff": ["+    // add additional boot class path items specified by the selected compiler", "+    for (File f: _interactionsModel.getCompilerBootClassPath()) {", "+      try {", "+        // NOTE: this is a work-around", "+        // it seems like it's impossible to pass long file names here on Windows", "+        // so we are using a clumsy method that determines the short file name", "+        File shortF = FileOps.getShortFile(f);", "+        jvmArgs.add(\"-Xbootclasspath/a:\"+shortF.getAbsolutePath().replace(File.separatorChar, '/'));", "+      }", "+      catch(IOException ioe) {", "+        // TODO: figure out what to do here. error? warn?", "+      }", "+    }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2220e2b4259a1b9479bf43530e6f14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "1de5cb95fee280565741d04f9d0c9ba9427f28c2", "commitAfterChange": "c12f68e3bc37fa5484d2cfb01f6ad9fc1d626551", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "   public synchronized OpenDefinitionsDocument newFile()", "signatureAfterChange": "   public synchronized OpenDefinitionsDocument newFile(File parentDir)", "diff": ["-  public synchronized OpenDefinitionsDocument newFile() {", "+  public synchronized OpenDefinitionsDocument newFile(File parentDir) {", "+    ((ConcreteOpenDefDoc)oddoc).setParentDirectory(parentDir);", "-    _documentNavigator.addDocument(idoc);", "+    if(parentDir != null) {", "+      try {", "+        _documentNavigator.addDocument(idoc, fixPathForNavigator(parentDir.getCanonicalPath() + \"/\"));", "+      }", "+      catch(IOException ioe) {", "+        _documentNavigator.addDocument(idoc);", "+      }", "+    }", "+    else", "+      _documentNavigator.addDocument(idoc);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1486d791119dce085562804fcaa1579", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e8f48651b4fb31b2a1907635fbd654b3f66a98b2", "commitAfterChange": "2499b0018a7f137bb1baaaf2d077c26486e3f12e", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException", "diff": ["-    setFileGroupingState(_makeProjectFileGroupingState(buildDir, projectFile, srcFiles));", "+    File mainClass;", "+    try{", "+      mainClass = ir.getJarMainClass();", "+      if(mainClass != null){", "+        mainClass = new File(projectFile.getParentFile().getPath(), mainClass.getPath()).getCanonicalFile();", "+      }", "+    }catch(IOException e){", "+      mainClass = null;", "+    }", "+    ", "+    setFileGroupingState(_makeProjectFileGroupingState(mainClass, buildDir, projectFile, srcFiles));"]}], "num": 4144}