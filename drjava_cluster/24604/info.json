{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe93b6278e4fae1f94e300715e3d69d0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "082516a5e227f5841efa90615bdd152d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6a170ab14316cceed86d0cd5eef7d1a5e1482088", "commitAfterChange": "8de007bf6be2b43ee2e0404f529aa96c640a30ed", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   void generateOpenJavadocList()", "signatureAfterChange": "   public void generateJavaAPIList()", "diff": ["-  /** Generate Javadoc class list. */", "-  void generateOpenJavadocList() {", "-    if (_openJavadocList == null) {", "+  /** Generate Java API class list. */", "+  public void generateJavaAPIList() {", "+    if (_javaAPIList == null) {", "+      String suffix = \"\";", "+        suffix = \"/allclasses-1.3.html\";", "+        suffix = \"/allclasses-1.4.html\";", "+        suffix = \"/allclasses-1.5.html\";", "-        _openJavadocList = new ArrayList<OpenJavadocListEntry>();", "-        URL url = new URL(base + \"/allclasses-frame.html\");", "+        _javaAPIList = new ArrayList<JavaAPIListEntry>();", "+        URL url = MainFrame.class.getResource(\"/edu/rice/cs/drjava/docs/javaapi\"+suffix);", "-              _openJavadocList.add(new OpenJavadocListEntry(simpleClassName, fullClassName, new URL(base + \"/\" + link + \".html\")));", "+              _javaAPIList.add(new JavaAPIListEntry(simpleClassName, fullClassName, new URL(base + \"/\" + link + \".html\")));", "-      if (_openJavadocList.size()==0) { _openJavadocList = null; }", "+      if (_javaAPIList.size()==0) { _javaAPIList = null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2274986a18cc4ee97dfd75e747ae3762", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 139, "signatureBeforeChange": "   public void generateJavaAPIList()", "signatureAfterChange": "   public void generateJavaAPIList()", "diff": ["+      ", "+      // the string that will be ADDED to the beginning of the link to form the full URL", "+      ", "+      // the string that will be REMOVED from the beginning of the link to form the fully-qualified class name", "+      String stripPrefix = \"\";", "+      ", "+      // the HTML file name that contains all the links", "+        stripPrefix = \"\"; // nothing needs to be stripped, links in 1.3 Javadoc are relative", "+        stripPrefix = \"\"; // nothing needs to be stripped, links in 1.4 Javadoc are relative", "+        stripPrefix = \"\"; // nothing needs to be stripped, links in 1.5 Javadoc are relative", "-        base = \"\";", "+        base = \"\"; // links in 1.6 Javadoc are absolute, so nothing needs to be added to get an absolute URL", "+        // but we do need to strip the absolute part to get correct fully-qualified class names", "+        // and we take the default string here, not what the user entered, because the links in", "+        // our allclasses-1.6.html file go to the original Sun website.", "+        stripPrefix = JAVADOC_1_6_LINK.getDefaultString() + \"/\";", "-              String fullClassName = link.replace('/', '.');", "+              String fullClassName = link.substring(stripPrefix.length()).replace('/', '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243098e94813cb52420ad885b6c78924", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "33fc3d467fee5f4de09286fa1079029cb22ee327", "commitAfterChange": "ca0d74addfd439eb6314fb8167978328b41eb16f", "methodNumberBeforeChange": 712, "methodNumberAfterChange": 712, "signatureBeforeChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "diff": ["-      String text = fname + \" has changed on disk. Would you like to reload it?\\n\" + ", "-        \"This will discard any changes you have made.\";", "-      int rc = JOptionPane.showConfirmDialog(MainFrame.this, text, fname + \" Modified on Disk\", ", "-                                             JOptionPane.YES_NO_OPTION);", "+      String text = fname + \" has changed on disk.\\n\" + ", "+        \"Would you like to reload it and discard any changes you have made?\";", "+      String[] options = { \"Reload from disk\", \"Keep my changes\" };", "+      int rc = JOptionPane.showOptionDialog(MainFrame.this, text, fname + \" Modified on Disk\", ", "+                                            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,", "+                                            null, options, options[0]);", "-        case JOptionPane.YES_OPTION:    return true;", "-        case JOptionPane.NO_OPTION:     return false;", "+        case 0:                         return true;", "+        case 1:                         return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cace6328a825134bd20a3478aa811ba8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6bd1f449c6b6476464bf38d05b5455668d0d2ac5", "commitAfterChange": "c6857a248a65e4dc52a9c98c57b551279861859d", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": "   private void _close()", "signatureAfterChange": "   private void _close()", "diff": ["-//    LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "-//    l.add(_model.getActiveDocument());", "-//    _model.closeFiles(l);", "-    ", "+    //    LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "+    //    l.add(_model.getActiveDocument());", "+    //    _model.closeFiles(l);", "+    String filename = null;", "-      if(_model.getActiveDocument().isAuxiliaryFile() || ", "-         _model.getActiveDocument().isProjectFile()){", "-        String text = \"Closing this file will permanently remove it from the current project.\" + ", "-          \"\\nAre you sure that you want to close this file?\";", "-        ", "-        int rc = JOptionPane.showConfirmDialog(MainFrame.this,", "-                                             text,", "-                                             \"Close \" + ", "-                                               _model.getActiveDocument().getFile().getName() + ", "-                                               \"?\",", "-                                             JOptionPane.YES_NO_OPTION);", "-        if(rc != JOptionPane.YES_OPTION)", "-          return;", "-      }", "-      ", "-      //Either this is an external file or user actually wants to close it", "-      _model.closeFile(_model.getActiveDocument());", "-        ", "+      filename = _model.getActiveDocument().getFile().getName();", "-      //Not sure what exactly should be done.", "-      //For now, let's just say the error is unexpected.", "-      throw new UnexpectedException(e);", "+      filename = \"File\";", "+    if(_model.getActiveDocument().isAuxiliaryFile() || ", "+       _model.getActiveDocument().isProjectFile()){", "+      String text = \"Closing this file will permanently remove it from the current project.\" + ", "+        \"\\nAre you sure that you want to close this file?\";", "+      ", "+      Object[] options = {\"Yes\", \"No\"};", "+      int rc = JOptionPane.showOptionDialog(MainFrame.this,", "+                                            text,", "+                                            \"Close \" + filename + \"?\",", "+                                            JOptionPane.YES_NO_OPTION,", "+                                            JOptionPane.QUESTION_MESSAGE,", "+                                            null,", "+                                            options,", "+                                            options[1]);", "+      if(rc != JOptionPane.YES_OPTION)", "+        return;", "+    }", "+    ", "+    //Either this is an external file or user actually wants to close it", "+    _model.closeFile(_model.getActiveDocument());", "+      "]}], "num": 24604}