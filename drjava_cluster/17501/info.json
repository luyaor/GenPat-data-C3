{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdfe965e3048083c872f14318da4d7f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb89578b64783dbbb144b7a21570f4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "8c167429ba92c08453565171838e7b90a541e18d", "commitAfterChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public InterpreterJVM(String url) throws RemoteException,                                            NotBoundException,                                            MalformedURLException", "signatureAfterChange": "    public InterpreterJVM(String url) throws RemoteException,                                            NotBoundException,                                            MalformedURLException", "diff": ["+", "+    // On Windows, any frame or dialog opened from Interactions pane will", "+    // appear *behind* DrJava's frame, unless a previous frame or dialog ", "+    // is shown here.  Not sure what the difference is, but this hack ", "+    // seems to work.  (I'd be happy to find a better solution, though.)", "+    // Only necessary on Windows, since frames and dialogs on other ", "+    // platforms appear correctly in front of DrJava.", "+    if (_isWindowsPlatform()) {", "+      JDialog d = new JDialog();", "+      d.show();", "+      d.hide();", "+    }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4e0aeb86fb3ba9cd0d5cbb4c362da6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "a1bb596f611e797f635c25509a0e5fd84bbde0d1", "commitAfterChange": "1ad2cf8823fa75a1b2d677ad26440a5bc60f0265", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(final String[] args)", "signatureAfterChange": "      public static void main(final String[] args)", "diff": ["-  ", "-      //      MainFrame mf = new MainFrame();", "+      // The MainFrame *must* be constructed after the compiler setup process has", "+      // occurred; otherwise, the list of compilers in the UI will be wrong.", "+      // At some point this should be fixed, which would involve making the", "+      // CompilerRegistry notify listeners when there is a change in the list of", "+      // available compilers.", "+      MainFrame mf = new MainFrame();", "-      openCommandLineFiles(_mf, args);", "-      _mf.show();", "+      openCommandLineFiles(mf, args);", "+      mf.show();"]}], "num": 17501}