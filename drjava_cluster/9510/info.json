{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e490734537b8b8524bbbc06c5106a7a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c87838de5badb3cdcfa1f491ab172b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "e97d669e5368c283be3ec2a94ca1c792daab5138", "commitAfterChange": "d75bb4144501a8419376e0dc8dbe054c7511983f", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public String getPackageName()", "signatureAfterChange": "   public String getPackageName()", "diff": ["-    try { return getStrictPackageName(); }", "-    catch(InvalidPackageException e) { return \"\"; }", "+    Reader r;", "+    acquireReadLock();", "+    try { r = new StringReader(getText()); }", "+    finally { releaseReadLock(); }", "+    try { return new Parser(r).packageDeclaration().getName(); }", "+    catch (ParseException e) { return \"\"; }", "+    finally {", "+      try { r.close(); }", "+      catch (IOException e) { /* ignore */ }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb57223dc5f17626978232b2f23a012", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "commitAfterChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 78, "signatureBeforeChange": "      public String getText()", "signatureAfterChange": "   public String _getText()", "diff": ["-    try { return getText(0, getLength()); }", "-    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+  /** Raw version of getText() that assumes the ReadLock is already held. */", "+  public String _getText() { ", "+    try { return getText(0, getLength()); }  // calls method defined in DefaultStyledDocument", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+  }"]}], "num": 9510}