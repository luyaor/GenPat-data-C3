{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f80af9ba90a7ee3e2fe9ab99eb29c57", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a556f43f451fa01a6b068d0be7bc796", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/ContinuationTest.java", "commitBeforeChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "commitAfterChange": "d75f8c4199bcbc3343c2ad391d599295e4ed6fb7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testIsEven()", "signatureAfterChange": "      public void testIsEven()", "diff": ["-    // this probably causes a stack overflow", "-    //assertTrue(isEven(300000));", "-    //assertFalse(isEven(300001));", "+    // this should cause a stack overflow", "+    try { isEven(300000); fail(\"isEven(300000) did not overflow the stack\"); }", "+    catch (StackOverflowError e) { /* expected behavior */ }", "-    // this should execute without an overflow", "+    // this should execute without a stack overflow", "-    assertFalse(safeIsEven(300001).value());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c9d3607fce9a231a8776156390798a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementEvaluator.java", "commitBeforeChange": "b2d2046328b12720e786659c0fc4f52e88a58d32", "commitAfterChange": "0fe874dd6d2f82ba868df35578fd530c5227b9f2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    @Override public Result visit(final ForEachStatement node)", "signatureAfterChange": "    @Override public Result visit(final ForEachStatement node)", "diff": ["-        iter = (Iterator<?>) getIterator.invoke(iterable, getIterator, node);", "+        try { getIterator.setAccessible(true); }", "+        catch (SecurityException e) { /* made a best attempt */ }", "+        iter = (Iterator<?>) getIterator.invoke(iterable);"]}], "num": 2205}