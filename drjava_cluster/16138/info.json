{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cf696ad4df6896239c2e6af7ccd5973", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdba05ce8b01b7dbf78bae86f525f648", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/FileFinderTest.java", "commitBeforeChange": "52e75c08548a33d68da52ba945e927947c13bd71", "commitAfterChange": "bc2ff71530c43866f8f779132c88a0e166f012d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testFindFile()", "signatureAfterChange": "      public void testFindFile()", "diff": ["-  public void testFindFile()", "-  {", "+  public void testFindFile() {", "-    try", "-    {", "+    try {", "-    catch(IOException ioe)", "-    {", "+    catch(IOException ioe) {", "+    //When running the ant script for testing this is the relative path to the directory that contains this file", "+    ff.addPath(\"dynamicjava/interpreter\");", "+    ", "+    //Try to find a file that does exist, namely this current file", "+    try {", "+      thisFile = ff.findFile(\"Interpreter.java\");", "+      assertTrue(\"Found This File\", thisFile != null);", "+    }", "+    catch(IOException ioe) {", "+      fail();", "+    }", "+    ", "+    ", "-    try", "-    {", "+    try {", "-    catch(IOException fnf)", "-    {", "+    catch(IOException fnf) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6f69a50c4eb7e116e6bf49145ab4cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _calculatePositions()", "signatureAfterChange": "   private void _calculatePositions()", "diff": ["-        //Remember the indexes in the _errors and _positions arrays that are for errors in this file", "+        //Remember the indexes in the _errors and _positions arrays that ", "+        // are for the errors in this file", "-        if (fileEndIndex != fileStartIndex){", "+        if (fileEndIndex != fileStartIndex) {", "+          // Try to use the canonical file if possible", "+          try {", "+            file = file.getCanonicalFile();", "+          }", "+          catch (IOException ioe) {", "+            // Oh well, store it as is", "+          }", "-    } catch (BadLocationException ble) {", "+    }", "+    catch (BadLocationException ble) {"]}], "num": 16138}