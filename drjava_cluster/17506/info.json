{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37c82579316c109ef66ff76b53761216", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f411780ac1045fdf17c4a1c525d8f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "d75bb4144501a8419376e0dc8dbe054c7511983f", "commitAfterChange": "a31b2c97ecb1660744788e96501356f9c0219d19", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void getDistToEnclosingBrace(IndentInfo braceInfo)", "signatureAfterChange": "   protected void getDistToEnclosingBrace(IndentInfo braceInfo)", "diff": ["-    Stack<ReducedToken> braceStack = new Stack<ReducedToken>();", "+    Stack<Brace> braceStack = new Stack<Brace>();", "-    while (!iter.atStart()) {", "+    while (! iter.atStart()) {", "+            ", "+      ReducedToken curToken = iter.current();", "+      int size = curToken.getSize();", "+      distance += size;", "+      relDistance += size;", "-      distance += iter.current().getSize();", "-      relDistance += iter.current().getSize();", "-", "-      if (!iter.current().isGap()) {", "+      if (! curToken.isGap()) {", "+        ", "+        Brace curBrace = (Brace) curToken;", "-              if (iter.current().isOpenBrace()) {", "+              if (curBrace.isOpenBrace()) {", "-                  braceInfo.braceType = iter.current().getType();", "+                  braceInfo.braceType = curBrace.getType();", "-                ReducedToken popped = braceStack.pop();", "-                if (!iter.current().isMatch(popped)) {", "+                Brace popped = braceStack.pop();", "+                if (! curBrace.isMatch(popped)) {", "-              else {", "-                braceStack.push(iter.current());", "-              }", "+              else braceStack.push(curBrace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84878351d9b881110a5ae0b2e52faee2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "d75bb4144501a8419376e0dc8dbe054c7511983f", "commitAfterChange": "a31b2c97ecb1660744788e96501356f9c0219d19", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected void getDistToEnclosingBraceCurrent(IndentInfo braceInfo)", "signatureAfterChange": "   protected void getDistToEnclosingBraceCurrent(IndentInfo braceInfo)", "diff": ["-    Stack<ReducedToken> braceStack = new Stack<ReducedToken>();", "+    Stack<Brace> braceStack = new Stack<Brace>();", "-      distance += iter.current().getSize();", "-      relDistance += iter.current().getSize();", "+      ReducedToken curToken = iter.current();", "+      int size = curToken.getSize();", "+      distance += size;", "+      relDistance += size;", "-      if (!iter.current().isGap()) {", "-", "+      if (! curToken.isGap()) {", "+        Brace curBrace = (Brace) curToken;", "-              if (iter.current().isOpenBrace()) {", "+              if (curBrace.isOpenBrace()) {", "-    braceInfo.braceTypeCurrent = iter.current().getType();", "+                  braceInfo.braceTypeCurrent = curBrace.getType();", "-                ReducedToken popped = braceStack.pop();", "-                if (!iter.current().isMatch(popped)) {", "+                Brace popped = braceStack.pop();", "+                if (! curBrace.isMatch(popped)) {", "-              else {", "-                braceStack.push(iter.current());", "-              }", "+              else braceStack.push(curBrace);"]}], "num": 17506}