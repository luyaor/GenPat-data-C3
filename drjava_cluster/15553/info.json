{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa591a333a52aaf7b658f2b0fc44a682", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caf61a4527526fb8ff80a55085724545", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "      public void testArrayAllocationExpression2() throws ParseException", "signatureAfterChange": "      public void testArrayAllocationExpression2() throws ParseException", "diff": ["-    Expression expected = new ArrayAllocation(new IntTypeName(), new ArrayAllocation.TypeDescriptor(new LinkedList<Expression>(), 1, new ArrayInitializer(cells), -1, -1));", "+    Expression expected = new ArrayAllocation(new IntTypeName(),", "+                                              new ArrayAllocation.TypeDescriptor(new LinkedList<Expression>(), 1,", "+                                                                                 new ArrayInitializer(cells),", "+                                                                                 SourceInfo.NONE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f44151fcc67b52ff655c063240268086", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "      public void testArrayAllocationExpression() throws ParseException", "signatureAfterChange": "      public void testArrayAllocationExpression() throws ParseException", "diff": ["-    expectedAST.add(new ArrayAllocation(new IntTypeName(), new ArrayAllocation.TypeDescriptor(sizes, 1, null, -1, -1)));", "+    Expression expected = new ArrayAllocation(new IntTypeName(), new ArrayAllocation.TypeDescriptor(sizes, 1, null, -1, -1));", "-    verifyOutput( \"new int[foo]\", expectedAST);", "+    verifyExprOutput( \"new int[foo]\", expected);"]}], "num": 15553}