{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad81058a57b1a50d8729d5470bb9b678", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3addf92914af55d5214a06a732fdcf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 252, "signatureBeforeChange": "    private void _saveProjectAs()", "signatureAfterChange": "   private void _saveProjectAs()", "diff": ["+   *  specified file.  Nothing is written in the file system; this action is performed by a subsequent _saveAll(). */", "-    // This redundant-looking hack is necessary for JDK 1.3.1 on Mac OS X!", "+//    // This redundant-looking hack is necessary for JDK 1.3.1 on Mac OS X!", "-    File selection = _saveChooser.getSelectedFile();", "-    if (selection != null) {  // what is this block of commands for?", "-      _saveChooser.setSelectedFile(selection.getParentFile());", "-      _saveChooser.setSelectedFile(selection);", "-      _saveChooser.setSelectedFile(null);", "-    }", "+//    File selection = _saveChooser.getSelectedFile();", "+//    if (selection != null) {  // what is this block of commands for?", "+//      _saveChooser.setSelectedFile(selection.getParentFile());", "+//      _saveChooser.setSelectedFile(selection);", "+//      _saveChooser.setSelectedFile(null);", "+//    }", "-      if (! file.exists() || _verifyOverwrite()) {", "-        _saveProjectHelper(file);", "-        try {", "-          file = file.getCanonicalFile();", "-          if (file.getPath().endsWith(\".pjt\")) _openProjectHelper(file);", "-          else _openProjectHelper(new File(file.getAbsolutePath() + \".pjt\"));", "-        }", "-        catch (IOException e) { throw new UnexpectedException(e); }", "+      if (! file.exists() || _verifyOverwrite()) { ", "+        _model.setProjectFile(file);", "+        _currentProjFile = file;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b641ee22effc932b3c30a567f94f4a9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 141, "signatureBeforeChange": "     public Component getListCellRendererComponent(JList list,                                                   Object value,                                                   int index,                                                   boolean iss,                                                   boolean chf)", "signatureAfterChange": "      private void _saveProject()", "diff": ["+  ", "+  private void _saveProject() {", "+    ", "+    ", "+    // This redundant-looking hack is necessary for JDK 1.3.1 on Mac OS X!", "+    File selection = _saveChooser.getSelectedFile();", "+    if (selection != null) {", "+      _saveChooser.setSelectedFile(selection.getParentFile());", "+      _saveChooser.setSelectedFile(selection);", "+      _saveChooser.setSelectedFile(null);", "+    }", "+", "+    if (_currentProjFile != null) ", "+      _saveChooser.setSelectedFile(_currentProjFile);", "+", "+    int rc = _saveChooser.showSaveDialog(this);", "+    if (rc == JFileChooser.APPROVE_OPTION) {", "+      ", "+      try{", "+        File file = _saveChooser.getSelectedFile();", "+        String filename = file.getCanonicalPath();    ", "+        _model.saveProject(filename);", "+        _openProjectHelper(file);", "+      }", "+      catch(IOException ioe) {", "+        _showIOError(ioe);", "+      }", "+    }", "+    ", "+", "+    ", "-     */", "-    public Component getListCellRendererComponent(JList list,", "-                                                  Object value,", "-                                                  int index,", "-                                                  boolean iss,", "-                                                  boolean chf)", "-    {", "-      // Use exisiting behavior", "-      super.getListCellRendererComponent(list, value, index, iss, chf);", "-", "-      // Change label", "-      String label = _model.getDisplayFilename((OpenDefinitionsDocument)value);", "-      setText(label);", "-", "-      return this;", "-    }"]}], "num": 1821}