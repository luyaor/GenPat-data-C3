{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46fe4ba1bfc196cabc524b50229e3c02", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2d759616cae5fb9394f0e9fff1a967", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void updatePanel()", "signatureAfterChange": "   protected void updatePanel()", "diff": ["-//    Enumeration docNodes = _rootNode.children();", "-//    while (docNodes.hasMoreElements()) {", "-//      DefaultMutableTreeNode docNode = (DefaultMutableTreeNode) docNodes.nextElement();          ", "-//      // Find the correct start offset node for this region", "-//      Enumeration regionNodes = docNode.children();", "-//      while (regionNodes.hasMoreElements()) {", "-//        DefaultMutableTreeNode regionNode = (DefaultMutableTreeNode) regionNodes.nextElement();", "-//        _regTreeModel.nodeChanged(regionNode);", "-//      }", "-//      _regTreeModel.nodeChanged(docNode);  // file name may have changed", "-//    }", "-    ", "-    revalidate();", "-    repaint();", "-    _lastUpdateTime = System.currentTimeMillis();", "-    _frame.resetChanged();", "+    synchronized(_updateLock) { ", "+      _updatePending = false; ", "+      _lastChangeTime = _frame.getLastChangeTime();", "+    }", "+    revalidate();", "+//    traversePanel();", "+    repaint();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf88e14d1ae699eeaa67e34404b1620", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public synchronized void runImmediateQuitTest() throws Exception", "signatureAfterChange": "     public void runImmediateQuitTest() throws Exception", "diff": ["-    public synchronized void runImmediateQuitTest() throws Exception {", "-      _currentTest = \"runImmediateQuitTest\";", "-      _justQuit = false;", "-", "-      // this needs to be reset because the slave is going to check it!", "-      _letter = 'a';", "-", "-      invokeSlave(new String[]{\"-Djava.system.class.loader=edu.rice.cs.util.newjvm.CustomSystemClassLoader\"}, FileOption.NULL_FILE);", "-//      invokeSlave();", "+    public void runImmediateQuitTest() throws Exception {", "-      // we don't wait for it to start before calling quit.", "-      // This should not throw an exception! It should quickly return,", "-      // queueing up a quit to be processes ASAP.", "-      quitSlave();", "-", "-      // now we just wait for the quit to process", "-      while (! _justQuit) {", "-        wait();", "+//      Utilities.show(\"ImmediateQuitTest started\");", "+      ", "+      _currentTest = \"runImmediateQuitTest\";", "+      synchronized (_testLock) { ", "+        _justQuit = false; ", "+        _connected = false;", "+        _letter = 'a';  // this needs to be reset because the slave is going to check it!", "-      // If we get here, it worked as expected.", "+      invokeSlave(new String[]{\"-Djava.system.class.loader=edu.rice.cs.util.newjvm.CustomSystemClassLoader\"}, FileOption.NULL_FILE);", "+", "+//      Utilities.show(\"slave invoked\");", "+      ", "+      // Immediately call quit, which should not throw an exception. It should return without waiting.", "+      quitSlave();", "+                     ", "+//      Utilities.show(\"slave quit\");     ", "+", "+      // now we just wait for the quit to process", "+      synchronized(_testLock) { ", "+        while (! _justQuit) _testLock.wait(); ", "+        _currentTest = \"\";  // If we get here, it worked as expected.", "+      }", "+                     ", "+//      Utilities.show(\"ImmediateQuitTest finished\");", "+      ", "-      _currentTest = \"\";"]}], "num": 13052}