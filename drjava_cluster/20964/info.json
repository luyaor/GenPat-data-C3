{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5e577763b1585d743b99cd1b1d22340", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7a6413a26ab14c5045974fd8431dbdc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["-   */", "+  /** Abstracted out since this is called from find and replace/find. */", "-    // FindResult contains the document that the result was found in, offset to the next occurence of ", "+    // FindResult contains the document that the result was found in, offset to the next occurrence of ", "-    OpenDefinitionsDocument openDoc = _defPane.getOpenDefDocument();", "+    OpenDefinitionsDocument matchDoc = ((DefaultSingleDisplayModel) _model).getODDForDocument(doc);", "+    OpenDefinitionsDocument openDoc = _defPane.getOpenDefDocument();", "+", "-    // If there actually *is* a match, then switch ", "-    // active documents. otherwise don't", "-    if (pos != -1) {", "+    // If there actually *is* a match, then switch active documents. otherwise don't", "+    if (pos != -1) { // found a match", "-      // XXX: this is fundamentally ugly - we should support direct, ordered", "-      //      iteration through all OpenDefinitionsDocuments.", "-      _model.setActiveDocument(((DefaultSingleDisplayModel) _model).getODDForDocument(doc));", "+      ", "+      if (! matchDoc.equals(openDoc)) {", "+        _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "+      }", "-      } else {", "+      } ", "+      else", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbdba26d2a10021f3d85fcdb3a7f19bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "signatureAfterChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "diff": ["+         ", "+        final OpenDefinitionsDocument doc = fr.getDocument();", "-        if (! _model.getActiveDocument().equals(fr.getDocument())) {", "-          _model.setActiveDocument(fr.getDocument());", "-        }", "+        if (_model.getActiveDocument() != doc) _model.setActiveDocument(doc);", "-        ", "-        final OpenDefinitionsDocument doc = _model.getActiveDocument();", "-//        final OpenDefinitionsDocument doc = fr.getDocument();", "-        ", "-//        // get the time stamp after making the document the active one", "-//        long newts = doc.getTimestamp();", "-//        if (newts != origts) {", "-//          // timestamps changed, document has been modified, so all our FindResults", "-//          // may not apply anymore. we are going to discard all FindResults for this", "-//          // document.", "-//          // add thi document to the list of reverted documents", "-//          reverted.add(doc);", "-//          continue;", "-//        }", "-        doc.acquireReadLock();", "+//        doc.acquireReadLock();", "-        finally { doc.releaseReadLock(); }", "+//        finally { doc.releaseReadLock(); }", "-      SwingUtilities.invokeLater(new Runnable() {", "+      EventQueue.invokeLater(new Runnable() {"]}], "num": 20964}