{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fc907a968ee32023f26b1753669bdb2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "073399c7f334b6b3ba536e8292879b60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public synchronized void endCompoundEdit(int key)", "signatureAfterChange": "   public synchronized void endCompoundEdit(int key)", "diff": ["-    if (_keys.size() > 0) {", "-      if (_keys.get(0).intValue() == key) {", "-        CompoundEdit compoundEdit = _compoundEdits.remove(0);", "-        compoundEdit.end();", "-        ", "-        if (compoundEdit.canUndo()) {", "-          if (!_compoundEditInProgress()) {", "-            super.addEdit(compoundEdit);", "-            //          if (!canUndo()) {", "-            //            throw new RuntimeException(\"could not add the edit to the undomanager\");", "-            //          }", "-            _notifyUndoHappened();", "-          }", "-          else _compoundEdits.get(0).addEdit(compoundEdit);", "+    if (_keys.size() == 0) return;", "+    ", "+    if (_keys.get(0) == key) {", "+      _keys.remove(0);", "+      final CompoundEdit ce = _compoundEdits.remove(0);", "+ ", "+      ce.end();", "+      if (ce.canUndo()) {", "+        if (! _compoundEditInProgress()) {", "+          super.addEdit(ce);", "+          _notifyUndoHappened();", "-        _keys.remove(0);", "-        ", "-        // signal view to update undo state", "-      }", "-      else throw new IllegalStateException(\"Improperly nested compound edits.\");", "+        else _compoundEdits.get(0).addEdit(ce);", "+      } ", "+    else throw new IllegalStateException(\"Improperly nested compound edits.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0977b4f3e4a9f338342a1a985122897e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "8ccb5b5787c23c1ec149415240d859632e14b0eb", "commitAfterChange": "de735ebb692c41fde6f4d0600cc3fb90b66c892a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void endCompoundEdit(int key)", "signatureAfterChange": "   public void endCompoundEdit(int key)", "diff": ["-    if(_keys.get(0).intValue() == key) {", "-      CompoundEdit compoundEdit = _compoundEdits.remove(0);", "-      compoundEdit.end();", "-", "-      if (compoundEdit.canUndo()) {", "-        if (!_compoundEditInProgress()) {", "-          super.addEdit(compoundEdit);", "+    if(_keys.size() > 0) {", "+      if(_keys.get(0).intValue() == key) {", "+        CompoundEdit compoundEdit = _compoundEdits.remove(0);", "+        compoundEdit.end();", "+        ", "+        if (compoundEdit.canUndo()) {", "+          if (!_compoundEditInProgress()) {", "+            super.addEdit(compoundEdit);", "-          _notifyUndoHappened();", "+            _notifyUndoHappened();", "+          }", "+          else {", "+            _compoundEdits.get(0).addEdit(compoundEdit);", "+          }", "-        else {", "-          _compoundEdits.get(0).addEdit(compoundEdit);", "-        }", "-      }", "-      _keys.remove(0);", "+        _keys.remove(0);", "-    }", "-    else {", "-      throw new IllegalStateException(\"Improperly nested compound edits.\");", "+      }", "+      else {", "+        throw new IllegalStateException(\"Improperly nested compound edits.\");", "+      }"]}], "num": 22239}