{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3155124a31cec1b1b1d8346d071105a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d917c18cedb859c96a632546c19c31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashMultiset.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public boolean removeAllInstances(Object obj)", "signatureAfterChange": "      public boolean removeAllInstances(Object obj)", "diff": ["-  ", "-  public boolean removeAllInstances(Object obj) {", "-    if (!contains(obj)) { return false; }", "-    else { doRemove(obj, count(obj)); return true; }", "-  }", "+  ", "+  public boolean removeAllInstances(Object obj) {", "+    Option<T> cast = CollectUtil.castIfContains(this, obj);", "+    if (cast.isSome()) { doRemove(cast.unwrap(), count(obj)); return true; }", "+    else { return false; }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb68cfe6ab4e0b5bbae4c9f885780e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashMultiset.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public boolean remove(Object obj, int instances)", "signatureAfterChange": "      public boolean remove(Object obj, int instances)", "diff": ["-  ", "-  public boolean remove(Object obj, int instances) {", "-    if (!contains(obj)) { return false; }", "-    else { doRemove(obj, instances); return true; }", "-  }", "+  public boolean remove(Object obj, int instances) {", "+    Option<T> cast = CollectUtil.castIfContains(this, obj);", "+    if (cast.isSome()) { doRemove(cast.unwrap(), instances); return true; }", "+    else { return false; }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbafd118d60f194fca345bd714264d5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashMultiset.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public boolean remove(Object obj)", "signatureAfterChange": "      @Override public boolean remove(Object obj)", "diff": ["-  public boolean remove(Object obj) {", "-    if (!contains(obj)) { return false; }", "-    else { doRemove(obj, 1); return true; }", "-  }", "+  @Override public boolean remove(Object obj) {", "+    Option<T> cast = CollectUtil.castIfContains(this, obj);", "+    if (cast.isSome()) { doRemove(cast.unwrap(), 1); return true; }", "+    else { return false; }"]}], "num": 29710}