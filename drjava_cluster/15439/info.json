{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81d2ebb758bfc804ec0f68ec0f3739ca", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261043f326b3408d06cd219d5dee3db0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "signatureAfterChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "diff": ["-        //Add parameterization <Mirror>. ", "-        List args = new LinkedList();  // Mirror is the common supertype of StringReference, Value, and ReferenceType", "+        //Added parameterization <Mirror>. ", "+        List<Mirror> args = new LinkedList<Mirror>();  // Mirror is the common supertype of StringReference, Value, and ReferenceType", "-        if (type == null) {", "-          args.add(null);", "-        }", "+        if (type == null) args.add(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60bd69f0b2ded854d0a5de6c3b014a83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "signatureAfterChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "diff": ["-        //Add parameterization <Mirror>. ", "-        List args = new LinkedList();  // Mirror is the common supertype of StringReference, Value, and ReferenceType", "+        //Added parameterization <Mirror>. ", "+        List<Mirror> args = new LinkedList<Mirror>();  // Mirror is the common supertype of StringReference, Value, and ReferenceType", "-        if (type == null) {", "-          args.add(null);", "-        }", "+        if (type == null) args.add(null);"]}], "num": 15439}