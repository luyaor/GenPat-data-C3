{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dffcee61f33de4a5ab3fc000c040129c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59ee0148a5904ba8d7d140f47a2d6c78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DocumentDebugAction.java", "commitBeforeChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "commitAfterChange": "d11247645bb07934951554afdf566907fa77ed82", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DocumentDebugAction (JPDADebugger manager,                               OpenDefinitionsDocument doc,                               int offset) throws DebugException", "signatureAfterChange": "   public DocumentDebugAction (JPDADebugger manager,                               OpenDefinitionsDocument doc,                               int offset) throws DebugException", "diff": ["-//    try {", "+    try {", "-// getEnclosingClassName is incorrect right now and numbers anonymous inner classes incorrectly", "-//        if (doc.getNumberOfLines()<500) {", "-//          // only do this on short files", "-//          // in long files, getEnclosingClassName might take too long", "-//          _exactClassName = doc.getEnclosingClassName(offset, true);", "-//        }", "+        if (doc.getNumberOfLines()<500) {", "+          // only do this on short files", "+          // in long files, getEnclosingClassName might take too long", "+          _exactClassName = doc.getEnclosingClassName(offset, true);", "+        }", "-//    }", "-//    catch(ClassNameNotFoundException cnnfe) { /* ignore, we don't need the exact class name */ }", "-//    catch(BadLocationException ble) { /* ignore, we don't need the exact class name */ }", "+    }", "+    catch(ClassNameNotFoundException cnnfe) { /* ignore, we don't need the exact class name */ }", "+    catch(BadLocationException ble) { /* ignore, we don't need the exact class name */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c37e8186ea7a5914ddeadba5a7a6b05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ImportationManager.java", "commitBeforeChange": "7d7f71637ac82cabd526a44e6c766574f76fc311", "commitAfterChange": "33c99bc453e2b8a224944d7334183adb0010fc32", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void declareClassImport(String cname) throws ClassNotFoundException", "signatureAfterChange": "   public void declareClassImport(String cname) throws ClassNotFoundException", "diff": ["+   */", "+  public void declareClassImport(String cname) throws ClassNotFoundException {", "+    try {", "+      // A previous importation of this class is removed to avoid a new", "+      // existance verification and to speed up further loadings.", "+      if (!singleTypeImportClauses.remove(cname)) {", "+        Class.forName(cname, true, classLoader);", "+      }", "+    } catch (ClassNotFoundException e) {", "+      // try to find an inner class with this name", "+      Class c = findInnerClass(cname);", "+      singleTypeImportClauses.remove((c == null) ? cname : c.getName());", "+      singleTypeImportClauses.add(0, (c == null) ? cname : c.getName());", "+    } finally {", "+      singleTypeImportClauses.add(0, cname);", "+  }", "-     */", "-    public void declareClassImport(String cname) throws ClassNotFoundException {", "-\ttry {", "-\t    // A previous importation of this class is removed to avoid a new", "-\t    // existance verification and to speed up further loadings.", "-\t    if (!singleTypeImportClauses.remove(cname)) {", "-\t\tClass.forName(cname, true, classLoader);", "-\t    }", "-\t} catch (ClassNotFoundException e) {", "-\t    // try to find an inner class with this name", "-\t    Class c = findInnerClass(cname);", "-\t    singleTypeImportClauses.remove((c == null) ? c.getName() : cname);", "-\t    singleTypeImportClauses.add(0, (c == null) ? c.getName() : cname);", "-\t} finally {", "-\t    singleTypeImportClauses.add(0, cname);", "-\t}"]}], "num": 28323}