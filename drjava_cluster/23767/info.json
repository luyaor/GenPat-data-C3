{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c047bfd0d3389350940c1a35c877fe31", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7d24820a1de80bdc7c64b88845d8ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5, T v6)", "signatureAfterChange": "   public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4, T v5, T v6)", "diff": ["+  /** Create an immutable SizedIterable containing the given values. */", "+  public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4, T v5, T v6) {", "+    @SuppressWarnings(\"unchecked\") T[] values = (T[]) new Object[]{ v1, v2, v3, v4, v5, v6 };", "+    return new ObjectArrayWrapper<T>(values);", "+  }", "-  /** Create an immutable SizedIterable containing the given values */", "-  public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5, T v6) {", "-    SizedIterable<T> result = SingletonIterable.make(v1);", "-    result = ComposedIterable.make(result, v2);", "-    result = ComposedIterable.make(result, v3);", "-    result = ComposedIterable.make(result, v4);", "-    result = ComposedIterable.make(result, v5);", "-    result = ComposedIterable.make(result, v6);", "-    return result;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a4709fc3c8f7c493ce70edab527bdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5)", "signatureAfterChange": "   public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4, T v5, T v6, T v7)", "diff": ["+  /** Create an immutable SizedIterable containing the given values. */", "+  public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4, T v5, T v6, T v7) {", "+    @SuppressWarnings(\"unchecked\") T[] values = (T[]) new Object[]{ v1, v2, v3, v4, v5, v6 , v7 };", "+    return new ObjectArrayWrapper<T>(values);", "+  }", "-  /** Create an immutable SizedIterable containing the given values */", "-  public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5) {", "-    SizedIterable<T> result = SingletonIterable.make(v1);", "-    result = ComposedIterable.make(result, v2);", "-    result = ComposedIterable.make(result, v3);", "-    result = ComposedIterable.make(result, v4);", "-    result = ComposedIterable.make(result, v5);", "-    return result;", "-  }"]}], "num": 23767}