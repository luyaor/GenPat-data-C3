{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de0d330dc634f8ccc89c2c7bd249a56c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90dd452312e3b165041fe19f65e7e19c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleAllocation.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                           SourceInfo si)", "signatureAfterChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args, SourceInfo si)", "diff": ["-  public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,", "-                          SourceInfo si) {", "+   */", "+  public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args, SourceInfo si) {", "+    this(Option.<List<TypeName>>none(), tp, args, si);", "+  }", "-", "-    if (tp == null) throw new IllegalArgumentException(\"tp == null\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f64003d04bb2dfc4672959469d8e259e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InnerAllocation.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public InnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs, List<? extends Expression> args,                          SourceInfo si)", "signatureAfterChange": "   public InnerAllocation(Expression exp, String cn, Option<List<TypeName>> ctargs, List<? extends Expression> args,                          SourceInfo si)", "diff": ["-  public InnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs, List<? extends Expression> args,", "+  public InnerAllocation(Expression exp, String cn, Option<List<TypeName>> ctargs, List<? extends Expression> args,", "+                         SourceInfo si) {", "+    this(exp, Option.<List<TypeName>>none(), cn, ctargs, args, si);", "+  }", "-    ", "-    if (cn == null) throw new IllegalArgumentException(\"cn == null\");", "-    if (exp == null) throw new IllegalArgumentException(\"exp == null\");", "-    ", "-    classTypeArguments = (ctargs == null) ? new ArrayList<TypeName>(0) : new ArrayList<TypeName>(ctargs);"]}], "num": 14213}