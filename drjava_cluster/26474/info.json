{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caac745c9c1511ded267e4662c0110b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32880e2e4976597f8999e9ccf6d2e118", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "a6eff600a2f1091d06db04a34e4bdfb3aa68fc7b", "commitAfterChange": "866c36fa1066e6b03d2032d7a634a7d510172641", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   private void _stepHelper(int flag, boolean shouldNotify) throws DebugException", "signatureAfterChange": "   private void _stepHelper(StepType type, boolean shouldNotify) throws DebugException", "diff": ["-  private void _stepHelper(int flag, boolean shouldNotify) throws DebugException {", "+  private void _stepHelper(StepType type, boolean shouldNotify) throws DebugException {", "-    List<StepRequest> steps = _eventManager.stepRequests();  // Added parameterization <StepRequest>. JDK 1.5 will eliminate this type warning", "+    List<StepRequest> steps = _eventManager.stepRequests();", "-    //Step step =", "-    new Step(this, StepRequest.STEP_LINE, flag);", "+    int stepFlag = Integer.MIN_VALUE; // should always be changed, but compiler doesn't check that", "+    switch (type) {", "+      case STEP_INTO: stepFlag = StepRequest.STEP_INTO; break;", "+      case STEP_OVER: stepFlag = StepRequest.STEP_OVER; break;", "+      case STEP_OUT: stepFlag = StepRequest.STEP_OUT; break;", "+    }", "+    new Step(this, StepRequest.STEP_LINE, stepFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "329a5797b89a3b6de3c334cb20d34820", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Step.java", "commitBeforeChange": "530cb3b64455d081e962324602750973729aa1fb", "commitAfterChange": "edb6c56f8ad5495255b4157f1e495f302271cd2d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _createRequest() throws DebugException", "signatureAfterChange": "   protected void _createRequests() throws DebugException", "diff": ["-  protected void _createRequest() throws DebugException {", "+  protected void _createRequests() throws DebugException {", "-    _request = _manager.getEventRequestManager().", "+    StepRequest request = _manager.getEventRequestManager().", "-      for (int i=0; i<excludes.length; ++i) {", "-        _request.addClassExclusionFilter(excludes[i]);", "+      for (int i=0; i < javaExcludes.length; i++) {", "+        request.addClassExclusionFilter(javaExcludes[i]);", "-      _request.addClassExclusionFilter(\"koala.*\");", "+      request.addClassExclusionFilter(\"koala.*\");", "-      _request.addClassExclusionFilter(\"edu.rice.cs.drjava.*\");", "-      _request.addClassExclusionFilter(\"edu.rice.cs.util.*\");", "+      request.addClassExclusionFilter(\"edu.rice.cs.drjava.*\");", "+      request.addClassExclusionFilter(\"edu.rice.cs.util.*\");", "+    ", "+    // Add this request (the only one) to the list", "+    _requests.addElement(request);"]}], "num": 26474}