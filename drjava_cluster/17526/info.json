{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "034c0c4f756a274d0db7943192dadbf4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9caec5c18adf806802444ab597d812fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": "          public void setUp()", "signatureAfterChange": "          public void setUp()", "diff": ["+      LanguageLevelConverter.loadSymbolTable();", "-      SymbolData Double = new SymbolData(\"java.lang.Double\");", "-      SymbolData Float = new SymbolData(\"java.lang.Float\");", "-      SymbolData Long = new SymbolData(\"java.lang.Long\");", "-      SymbolData Integer = new SymbolData(\"java.lang.Integer\");", "-      SymbolData o = new SymbolData(\"java.lang.Object\");", "-      o.setIsContinuation(false);", "-      o.setMav(_publicMav);", "-      symbolTable.put(\"java.lang.Object\", o);", "-", "-      Integer.setSuperClass(o);", "-      SymbolData Short = new SymbolData(\"java.lang.Short\");", "-      SymbolData Character = new SymbolData(\"java.lang.Character\");", "-      SymbolData Byte = new SymbolData(\"java.lang.Byte\");", "-      SymbolData Boolean = new SymbolData(\"java.lang.Boolean\");", "-      symbolTable.put(\"java.lang.Double\", Double);", "-      symbolTable.put(\"java.lang.Float\", Float);", "-      symbolTable.put(\"java.lang.Long\", Long);", "-      symbolTable.put(\"java.lang.Integer\", Integer);", "-      symbolTable.put(\"java.lang.Short\", Short);", "-      symbolTable.put(\"java.lang.Character\", Character);", "-      symbolTable.put(\"java.lang.Byte\", Byte);", "-      symbolTable.put(\"java.lang.Boolean\", Boolean);", "-", "+      _object = symbolTable.get(\"java.lang.Object\");", "+      assert _object != null;", "+//      o.setIsContinuation(false);", "+//      o.setMav(_publicMav);", "+//      symbolTable.put(\"java.lang.Object\", o);", "+      ", "+      assert symbolTable.get(\"java.lang.Double\") != null;", "+//      Double.setIsContinuation(false);", "+//      Double.setMav(_publicMav);", "+//      Double.setSuperClass(o);   // a white lie for this test", "+//      symbolTable.put(\"java.lang.Double\", Double);", "+      ", "+      assert symbolTable.get(\"java.lang.Float\") != null;", "+//      Float.setIsContinuation(false);", "+//      Float.setMav(_publicMav);", "+//      Float.setSuperClass(o);    // a white lie for this test", "+//      symbolTable.put(\"java.lang.Float\", Float);", "+      ", "+      assert symbolTable.get(\"java.lang.Long\") != null;", "+//      Long.setIsContinuation(false);", "+//      Long.setMav(_publicMav);", "+//      Long.setSuperClass(o);     // a white lie for this test", "+//      symbolTable.put(\"java.lang.Long\", Long);", "+            ", "+      assert symbolTable.get(\"java.lang.Integer\") != null;", "+//      Integer.setIsContinuation(false);", "+//      Integer.setMav(_publicMav);", "+//      Integer.setSuperClass(o);   // a white lie for this test", "+//      symbolTable.put(\"java.lang.Integer\", Integer);", "+            ", "+      assert symbolTable.get(\"java.lang.Short\") != null;", "+//      Short.setIsContinuation(false);", "+//      Short.setMav(_publicMav);", "+//      Short.setSuperClass(o);   // a white lie for this test", "+//      symbolTable.put(\"java.lang.Short\", Short);", "+      ", "+      assert symbolTable.get(\"java.lang.Character\") != null;", "+//      Character.setIsContinuation(false);", "+//      Character.setMav(_publicMav);", "+//      Character.setSuperClass(o);   // a white lie for this test     ", "+//      symbolTable.put(\"java.lang.Character\", Character);", "+      ", "+      assert symbolTable.get(\"java.lang.Byte\") != null;", "+//      Byte.setIsContinuation(false);", "+//      Byte.setMav(_publicMav);", "+//      Byte.setSuperClass(o);   // a white lie for this test        ", "+//      symbolTable.put(\"java.lang.Byte\", Byte);", "+      ", "+      assert symbolTable.get(\"java.lang.Boolean\") != null;", "+//      Boolean.setIsContinuation(false);", "+//      Boolean.setMav(_publicMav);", "+//      Boolean.setSuperClass(o);   // a white lie for this test   ", "+//      symbolTable.put(\"java.lang.Boolean\", Boolean);", "+         ", "+      assert symbolTable.get(\"java.lang.String\") != null;", "+//      SymbolData string = new SymbolData(\"java.lang.String\");", "+//      string.setIsContinuation(false);", "+//      string.setMav(_publicMav);", "+//      string.setSuperClass(_object);   // a white lie for this test   ", "+//      symbolTable.put(\"java.lang.String\", string);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ae5938a428a306091de45acfe43874", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r     \r     public void setUp()", "signatureAfterChange": "          public void setUp()", "diff": ["-    \r", "-    public void setUp() {\r", "-      errors = new LinkedList<Pair<String, JExpressionIF>>();\r", "-      symbolTable = new Symboltable();\r", "-      LanguageLevelVisitor.symbolTable = symbolTable;\r", "-\r", "-      _btc = new TypeChecker(new File(\"\"), \"\", new LinkedList<String>(), new LinkedList<String>());\r", "-      _btc._targetVersion = JavaVersion.JAVA_5;\r", "-      _btc._importedPackages.addFirst(\"java.lang\");\r", "-      _errorAdded = false;\r", "-      _sd1 = new SymbolData(\"i.like.monkey\");\r", "-      _sd2 = new SymbolData(\"i.like.giraffe\");\r", "-      _sd3 = new SymbolData(\"zebra\");\r", "-      _sd4 = new SymbolData(\"u.like.emu\");\r", "-      _sd5 = new SymbolData(\"\");\r", "-      _sd6 = new SymbolData(\"cebu\");\r", "-      \r", "-      SymbolData Double = new SymbolData(\"java.lang.Double\");\r", "-      SymbolData Float = new SymbolData(\"java.lang.Float\");\r", "-      SymbolData Long = new SymbolData(\"java.lang.Long\");\r", "-      SymbolData Integer = new SymbolData(\"java.lang.Integer\");\r", "-      SymbolData o = new SymbolData(\"java.lang.Object\");\r", "-      o.setIsContinuation(false);\r", "-      o.setMav(_publicMav);\r", "-      symbolTable.put(\"java.lang.Object\", o);\r", "-\r", "-      Integer.setSuperClass(o);\r", "-      SymbolData Short = new SymbolData(\"java.lang.Short\");\r", "-      SymbolData Character = new SymbolData(\"java.lang.Character\");\r", "-      SymbolData Byte = new SymbolData(\"java.lang.Byte\");\r", "-      SymbolData Boolean = new SymbolData(\"java.lang.Boolean\");\r", "-      symbolTable.put(\"java.lang.Double\", Double);\r", "-      symbolTable.put(\"java.lang.Float\", Float);\r", "-      symbolTable.put(\"java.lang.Long\", Long);\r", "-      symbolTable.put(\"java.lang.Integer\", Integer);\r", "-      symbolTable.put(\"java.lang.Short\", Short);\r", "-      symbolTable.put(\"java.lang.Character\", Character);\r", "-      symbolTable.put(\"java.lang.Byte\", Byte);\r", "-      symbolTable.put(\"java.lang.Boolean\", Boolean);\r", "-\r", "-    }\r", "+    ", "+    public void setUp() {", "+      errors = new LinkedList<Pair<String, JExpressionIF>>();", "+      symbolTable = new Symboltable();", "+      LanguageLevelVisitor.symbolTable = symbolTable;", "+", "+      _btc = new TypeChecker(new File(\"\"), \"\", new LinkedList<String>(), new LinkedList<String>());", "+      LanguageLevelConverter.OPT = new Options(JavaVersion.JAVA_5, IterUtil.<File>empty());", "+      _btc._importedPackages.addFirst(\"java.lang\");", "+      _errorAdded = false;", "+      _sd1 = new SymbolData(\"i.like.monkey\");", "+      _sd2 = new SymbolData(\"i.like.giraffe\");", "+      _sd3 = new SymbolData(\"zebra\");", "+      _sd4 = new SymbolData(\"u.like.emu\");", "+      _sd5 = new SymbolData(\"\");", "+      _sd6 = new SymbolData(\"cebu\");", "+      ", "+      SymbolData Double = new SymbolData(\"java.lang.Double\");", "+      SymbolData Float = new SymbolData(\"java.lang.Float\");", "+      SymbolData Long = new SymbolData(\"java.lang.Long\");", "+      SymbolData Integer = new SymbolData(\"java.lang.Integer\");", "+      SymbolData o = new SymbolData(\"java.lang.Object\");", "+      o.setIsContinuation(false);", "+      o.setMav(_publicMav);", "+      symbolTable.put(\"java.lang.Object\", o);", "+", "+      Integer.setSuperClass(o);", "+      SymbolData Short = new SymbolData(\"java.lang.Short\");", "+      SymbolData Character = new SymbolData(\"java.lang.Character\");", "+      SymbolData Byte = new SymbolData(\"java.lang.Byte\");", "+      SymbolData Boolean = new SymbolData(\"java.lang.Boolean\");", "+      symbolTable.put(\"java.lang.Double\", Double);", "+      symbolTable.put(\"java.lang.Float\", Float);", "+      symbolTable.put(\"java.lang.Long\", Long);", "+      symbolTable.put(\"java.lang.Integer\", Integer);", "+      symbolTable.put(\"java.lang.Short\", Short);", "+      symbolTable.put(\"java.lang.Character\", Character);", "+      symbolTable.put(\"java.lang.Byte\", Byte);", "+      symbolTable.put(\"java.lang.Boolean\", Boolean);", "+", "+    }"]}], "num": 17526}