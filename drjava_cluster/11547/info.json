{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83aa944d7633e4c569092bead4392d36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bda1fdc8cc88d7256c362a4be9ac932", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/CompletionMonitorTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testDegenerateSignal()", "signatureAfterChange": "      public void testDegenerateSignal() throws InterruptedException", "diff": ["-  public void testDegenerateSignal() {", "-    ", "+  public void testDegenerateSignal() throws InterruptedException {", "-    assertTrue(\"Flag should start out as true\", as.isFlag());", "-    //This thread will interrupt the main thread if it hangs", "+    assertTrue(\"Flag should start out as true\", as.isSignalled());", "-    ThreadInterrupter interrupter = new ThreadInterrupter();", "-    interrupter.start();", "-    ", "-    assertTrue(\"WaitOne hung, and was interrupted by the failsafe.\", as.waitOne());", "-    interrupter.targetCompleted();", "+    DelayedInterrupter interrupter = new DelayedInterrupter(50);", "+    as.insureSignalled();", "+    interrupter.abort();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7705a14e090618c5830e88b395e8c9c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1c3947ce9682f305287b6afe6b5c5d87597bae6f", "commitAfterChange": "0acb22a1f5b2329a270795e5839a4690952252ed", "methodNumberBeforeChange": 673, "methodNumberAfterChange": 674, "signatureBeforeChange": "      public void nonTestCase(boolean isTestAll)", "signatureAfterChange": "      public void nonTestCase(boolean isTestAll)", "diff": ["+      DrJavaErrorHandler.record(new UnexpectedException(\"NonTestCase should not be called!\"));", "-        _junitAction.setEnabled(true);", "-        _junitAllAction.setEnabled(true);", "-        _junitProjectAction.setEnabled(_model.isProjectActive());", "-        _junitErrorPanel.reset();", "+        _resetJUnit();"]}], "num": 11547}