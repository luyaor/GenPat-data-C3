{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1e67f5a00e712e4e262d96c9b5b3c11", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f7445882bee8382b7d6ddaf85ee7b52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "      public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "signatureAfterChange": "      public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "diff": ["-    OpenDefinitionsDocument doc1,doc2;", "-    final File file1,file2;", "-    file1 = tempFile(1);", "-    doc1 = _model.getDocumentForFile(file1);", "+    final File file1 = tempFile(1);", "+    final OpenDefinitionsDocument doc1 = _model.getDocumentForFile(file1);", "-    doc1.saveFileAs(new FileSelector(file1));", "+    saveFileAs(doc1, new FileSelector(file1));", "-    file2 = tempFile(2);", "-    doc2 = _model.getDocumentForFile(file2);", "+    final File file2 = tempFile(2);", "+    final OpenDefinitionsDocument doc2 = _model.getDocumentForFile(file2);", "-    try {", "-      doc2.saveFileAs(new WarningFileSelector(file1));", "-      fail(\"Did not warn of open file as expected\");", "-    }", "-    catch (OpenWarningException e) { /* Good behavior for file saving ... */ }", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        try { ", "+          doc2.saveFileAs(new WarningFileSelector(file1));", "+          fail(\"Did not warn of open file as expected\");", "+        }", "+        catch (Exception e) { /* Good behavior for file saving ... */ }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c218be2aad918bf632810e89e8781720", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "      public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "signatureAfterChange": "      public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "diff": ["-    OpenDefinitionsDocument doc1,doc2;", "-    final File file1,file2;", "-    file1 = tempFile(1);", "-    doc1 = _model.getDocumentForFile(file1);", "+    final File file1 = tempFile(1);", "+    final OpenDefinitionsDocument doc1 = _model.getDocumentForFile(file1);", "-    doc1.saveFileAs(new FileSelector(file1));", "+    saveFileAs(doc1, new FileSelector(file1));", "-    file2 = tempFile(2);", "-    doc2 = _model.getDocumentForFile(file2);", "+    final File file2 = tempFile(2);", "+    final OpenDefinitionsDocument doc2 = _model.getDocumentForFile(file2);", "-    try {", "-      doc2.saveFileAs(new WarningFileSelector(file1));", "-      fail(\"Did not warn of open file as expected\");", "-    }", "-    catch (OpenWarningException e) { /* Good behavior for file saving ... */ }", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        try { ", "+          doc2.saveFileAs(new WarningFileSelector(file1));", "+          fail(\"Did not warn of open file as expected\");", "+        }", "+        catch (Exception e) { /* Good behavior for file saving ... */ }", "+      }", "+    });"]}], "num": 577}