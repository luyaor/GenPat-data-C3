{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f6818087a38d4653b4bc1d580f656a6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a521c6e42a12abc6b54d803b9ee99b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/AWTContainerNavigatorFactory.java", "commitBeforeChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "commitAfterChange": "6d55d86705248616cac5b324a7c528485ceb6104", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public IDocumentNavigator<ItemT> makeTreeNavigator(String name, final IDocumentNavigator<ItemT> parent,                                                  final List<Pair<String, INavigatorItemFilter<ItemT>>> l)", "signatureAfterChange": "     public IDocumentNavigator<ItemT> makeTreeNavigator(String name, final IDocumentNavigator<ItemT> parent,                                                  final List<Pair<String, INavigatorItemFilter<ItemT>>> l)", "diff": ["-   */", "+      */", "-      final IDocumentNavigator<ItemT> tbr = makeTreeNavigator(name);", "-      ", "-      Utilities.invokeAndWait(new Runnable() { ", "+      final IDocumentNavigator<ItemT> child = makeTreeNavigator(name);", "+      Utilities.invokeLater(new Runnable() { ", "-          ", "-          for(Pair<String, INavigatorItemFilter<ItemT>> p: l) { tbr.addTopLevelGroup(p.getFirst(), p.getSecond()); }", "-          ", "-          migrateNavigatorItems(tbr, parent);", "-          migrateListeners(tbr, parent);", "-        }", "+//          synchronized (child.getModelLock()) { // dropped because of cost; each atomic action is still synchronized", "+            for(Pair<String, INavigatorItemFilter<ItemT>> p: l) { child.addTopLevelGroup(p.getFirst(), p.getSecond()); }", "+            migrateNavigatorItems(child, parent);", "+            migrateListeners(child, parent);", "+          }", "+//        }", "-      return tbr;", "+      return child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "726b0eb22e73b8b722e91836ec2f6aab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/AWTContainerNavigatorFactory.java", "commitBeforeChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "commitAfterChange": "6d55d86705248616cac5b324a7c528485ceb6104", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public IDocumentNavigator<ItemT> makeListNavigator(final IDocumentNavigator<ItemT> parent)", "signatureAfterChange": "     public IDocumentNavigator<ItemT> makeListNavigator(final IDocumentNavigator<ItemT> parent)", "diff": ["-   */", "+      */", "-      final IDocumentNavigator<ItemT> tbr = makeListNavigator();", "-      Utilities.invokeAndWait(new Runnable() { ", "-        public void run() { ", "-          migrateNavigatorItems(tbr, parent);", "-          migrateListeners(tbr, parent);", "-        }", "+      final IDocumentNavigator<ItemT> child = makeListNavigator();", "+      Utilities.invokeLater(new Runnable() { ", "+        public void run() {", "+//          synchronized (child.getModelLock()) { // dropped because of cost; each atomic action is still synchronized", "+            migrateNavigatorItems(child, parent);", "+            migrateListeners(child, parent);", "+          }", "+//        }", "-      return tbr;", "+      return child;"]}], "num": 26085}