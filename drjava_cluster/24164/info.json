{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f184bda6214d0b3bfe5d51534d0c244", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62370e2189062b108dfbbdc0eb52f544", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 235, "methodNumberAfterChange": 235, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["-    _closeAll();", "-    _saveProjectAs();", "+//    _closeAll();", "+    ", "+    _saveChooser.setFileFilter(_projectFilter);", "+    int rc = _saveChooser.showSaveDialog(this);", "+    if (rc == JFileChooser.APPROVE_OPTION) {", "+      File file = _saveChooser.getSelectedFile();", "+      String fileName = file.getName();", "+      // ensure that saved file has extesion \".pjt\"", "+      if (! fileName.endsWith(\".pjt\")) {", "+        int lastIndex = fileName.lastIndexOf(\".\");", "+        if (lastIndex == -1) file = new File (file.getAbsolutePath() + \".pjt\");", "+        else file = new File(fileName.substring(0, lastIndex) + \".pjt\");", "+      }", "+      try { _model.newProject(file); }", "+      catch(IOException e) { throw new UnexpectedException(e); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7384b9ac1aef06452f4575121736fcc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "35d9365226ba0771f8b6c75f7ce46695407e7805", "commitAfterChange": "e00a80132d9c599630e60c288ab824f99427e68b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "diff": ["+    ", "+    // Check if this has an anonymous inner class", "+    if (hasAnonymous(_thisClassName)) { ", "+      // Get the class", "+      Class c = _loadClassForThis(context);", "+      Field[] fields = c.getDeclaredFields();    ", "+      int numToWalk;", "+      String outerClassName = null;", "+      // Check for a field that begins with this$", "+      for (int i = 0; i < fields.length; i++) {", "+        if (fields[i].getName().startsWith(\"this$\")) {", "+          String fieldName = fields[i].getName();", "+          int lastIndex = fieldName.lastIndexOf(\"$\");", "+          numDollars = Integer.valueOf(fieldName.substring(lastIndex+1, fieldName.length())).intValue() + 1;", "+          break;", "+        }", "+      }", "+    }"]}], "num": 24164}