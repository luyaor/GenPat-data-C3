{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5234ab9e978890db9d484d96b38a20e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b69f87ca2ef484fb93cbeb6b23460fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testHighlightKeywords1() throws BadLocationException", "signatureAfterChange": "   public void testHighlightKeywords1() throws BadLocationException", "diff": ["-    assertEquals(HighlightStatus.KEYWORD, v.elementAt(0).getState());", "-    assertEquals(HighlightStatus.NORMAL, v.elementAt(1).getState());", "-    assertEquals(HighlightStatus.KEYWORD, v.elementAt(2).getState());", "-    assertEquals(HighlightStatus.NORMAL, v.elementAt(3).getState());", "-    assertEquals(HighlightStatus.TYPE, v.elementAt(4).getState());", "-    assertEquals(HighlightStatus.NORMAL, v.elementAt(5).getState());", "+    assertEquals(HighlightStatus.KEYWORD, v.get(0).getState());", "+    assertEquals(HighlightStatus.NORMAL, v.get(1).getState());", "+    assertEquals(HighlightStatus.KEYWORD, v.get(2).getState());", "+    assertEquals(HighlightStatus.NORMAL, v.get(3).getState());", "+    assertEquals(HighlightStatus.TYPE, v.get(4).getState());", "+    assertEquals(HighlightStatus.NORMAL, v.get(5).getState());", "-    assertEquals(HighlightStatus.KEYWORD, v.elementAt(6).getState());", "-    assertEquals(HighlightStatus.NORMAL, v.elementAt(7).getState());", "-    assertEquals(HighlightStatus.TYPE, v.elementAt(8).getState());", "-    assertEquals(HighlightStatus.NORMAL, v.elementAt(9).getState());", "-    assertEquals(HighlightStatus.NUMBER, v.elementAt(10).getState());", "-    assertEquals(HighlightStatus.NORMAL, v.elementAt(11).getState());", "+    assertEquals(HighlightStatus.KEYWORD, v.get(6).getState());", "+    assertEquals(HighlightStatus.NORMAL, v.get(7).getState());", "+    assertEquals(HighlightStatus.TYPE, v.get(8).getState());", "+    assertEquals(HighlightStatus.NORMAL, v.get(9).getState());", "+    assertEquals(HighlightStatus.NUMBER, v.get(10).getState());", "+    assertEquals(HighlightStatus.NORMAL, v.get(11).getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "791a52c828ede654bfd431aaa0f5c953", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testStaticWatches() throws Exception", "signatureAfterChange": "   public void testStaticWatches() throws Exception", "diff": ["-    ", "+", "-    ", "+", "-    assertEquals(\"watch name incorrect\", \"foo\", watches.elementAt(0).getName());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch name incorrect\", \"twoDeepFoo\", watches.elementAt(2).getName());", "-    assertEquals(\"watch name incorrect\", \"threeDeepFoo\", watches.elementAt(3).getName());", "-    assertEquals(\"watch name incorrect\", \"asdf\", watches.elementAt(4).getName());", "-    assertEquals(\"watch value incorrect\", \"6\", watches.elementAt(0).getValue());", "-    assertEquals(\"watch value incorrect\", \"8\", watches.elementAt(1).getValue());", "-    assertEquals(\"watch value incorrect\", \"13\", watches.elementAt(2).getValue());", "-    assertEquals(\"watch value incorrect\", \"18\", watches.elementAt(3).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(4).getValue());", "+    assertEquals(\"watch name incorrect\", \"foo\", watches.get(0).getName());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch name incorrect\", \"twoDeepFoo\", watches.get(2).getName());", "+    assertEquals(\"watch name incorrect\", \"threeDeepFoo\", watches.get(3).getName());", "+    assertEquals(\"watch name incorrect\", \"asdf\", watches.get(4).getName());", "+    assertEquals(\"watch value incorrect\", \"6\", watches.get(0).getValue());", "+    assertEquals(\"watch value incorrect\", \"8\", watches.get(1).getValue());", "+    assertEquals(\"watch value incorrect\", \"13\", watches.get(2).getValue());", "+    assertEquals(\"watch value incorrect\", \"18\", watches.get(3).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(4).getValue());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch value incorrect\", \"0\", watches.elementAt(1).getValue());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch value incorrect\", \"0\", watches.get(1).getValue());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch value incorrect\", \"8\", watches.elementAt(1).getValue());", "-    ", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch value incorrect\", \"8\", watches.get(1).getValue());", "+"]}], "num": 7411}