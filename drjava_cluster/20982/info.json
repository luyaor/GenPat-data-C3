{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92ea92bc798f05c7a953fa5e46732b0b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7de0f58fc6cb7eda813df714b10960c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private int _moveLeft(int count, int currentOffset)", "signatureAfterChange": "     private int _moveLeft(int count, int currentOffset)", "diff": ["-        if (! atStart())  currentOffset = current().getSize(); //make sure list not empty", "+        if (! atStart()) currentOffset = current().getSize(); // ! atStart() is precondition for calling current()", "+        else throw new IllegalArgumentException(\"At Start\");  // avoids duplicate atStart test", "-      if (atStart()) throw new IllegalArgumentException(\"At Start\");", "+      else if (atStart()) throw new IllegalArgumentException(\"At Start\");", "-", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38c59d0501315480883c53f058d118f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private int _moveLeft(int count, int currentOffset)", "signatureAfterChange": "     private int _moveLeft(int count, int currentOffset)", "diff": ["+        assert currentOffset == 0;", "-        if (! atStart()) currentOffset = current().getSize(); // ! atStart() is precondition for calling current()", "-        else throw new IllegalArgumentException(\"At Start\");  // avoids duplicate atStart test", "+        if (atStart()) throw new IllegalArgumentException(\"At Start\");  ", "+        currentOffset = current().getSize(); // ! atStart() is precondition for calling current()"]}], "num": 20982}