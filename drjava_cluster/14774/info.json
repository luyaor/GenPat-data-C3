{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2395d7980c0f9dd440f819517a9c09b8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31a080f9a590da0fc3fe0653e3256280", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "80409edd2937e2ffd25d6f924b225a912cebbe30", "commitAfterChange": "24d7e06348270bf19caad633e3b0f236f8140fab", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void setSearchBackwards(boolean searchBackwards)", "signatureAfterChange": "    public void setSearchBackwards(boolean searchBackwards)", "diff": ["+    if (_searchBackwards != searchBackwards) {", "+      int len = _findWord.length();", "+      // If we switch from searching forward to searching backwards,", "+      // isOnMatch is true, and _findword is the same as the _lastFindWord,", "+      // we know the user just found _findWord, so skip one find.", "+      if (isOnMatch() && _findWord.equals(_lastFindWord)) {", "+        _skipOneFind = true;", "+      }", "+    }        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7480f7ecc41473451145a1e5b8ed123", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 92, "signatureBeforeChange": "     public int compareTo(GoToFileListEntry other)", "signatureAfterChange": "          public int compareTo(ClassNameAndPackageEntry other)", "diff": ["+    ", "+    public int compareTo(ClassNameAndPackageEntry other) {", "+      int res = getClassName().toLowerCase().compareTo(other.getClassName().toLowerCase());", "+      if (res!=0) { return res; }", "+      return getFullPackage().toLowerCase().compareTo(other.getFullPackage().toLowerCase());", "+    }", "-    public int compareTo(GoToFileListEntry other) { return str.toLowerCase().compareTo(other.str.toLowerCase()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77999275623a20d6a36cb2cde613d47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void setupDocument(String text) throws BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument setupDocument(String text)     throws BadLocationException", "diff": ["-  protected void setupDocument(String text) throws BadLocationException {", "+  protected OpenDefinitionsDocument setupDocument(String text)", "+    throws BadLocationException", "+  {", "-    _model.newFile();", "-    listener.assertNewCount(1);", "-    assertLength(0);", "-    assertModified(false);", "-    changeDocumentText(text);", "+    // Open a new document", "+    int numOpen = _model.getDefinitionsDocuments().length;", "+    OpenDefinitionsDocument doc = _model.newFile();", "+    assertNumOpenDocs(numOpen + 1);", "+", "+    listener.assertNewCount(1);", "+    assertLength(0, doc);", "+    assertModified(false, doc);", "+", "+    changeDocumentText(text, doc);", "+", "+    return doc;"]}], "num": 14774}