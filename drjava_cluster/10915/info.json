{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6be615a7d7c4905f62c024da86a50788", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d54159cfa0b9993e622776b107c2621", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "signatureAfterChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "diff": ["-    acquireReadLock();", "-    synchronized(_reduced) {", "+//    acquireReadLock();", "+//    synchronized(_reduced) {", "-      try {", "-        while (true) {", "-          index = text.indexOf(keyword, index);", "-          if (index == -1) break; // not found", "-          else {", "-            // found a match, check quality", "-            _setCurrentLocation(textOffset + index);", "-            ", "-            // check that the keyword is not in a comment and is followed by whitespace", "-            int indexPastKeyword = index + keyword.length();", "-            if (indexPastKeyword < text.length()) {", "-              if (! _isShadowed() && Character.isWhitespace(text.charAt(indexPastKeyword))) {", "-                // found a match but may not be at top level", "-                if (! notInBlock(index)) index = -1; //in a paren phrase, gone too far", "-                break;", "-              }", "-              else index++;  //move past so we can search again", "-            }", "-            else { // No space found past the keyword", "-              index = -1;", "+//      try {", "+      while (true) {", "+        index = text.indexOf(keyword, index);", "+        if (index == -1) break; // not found", "+        else {", "+          // found a match, check quality", "+          _setCurrentLocation(textOffset + index);", "+          ", "+          // check that the keyword is not in a comment and is followed by whitespace", "+          int indexPastKeyword = index + keyword.length();", "+          if (indexPastKeyword < text.length()) {", "+            if (! _isShadowed() && Character.isWhitespace(text.charAt(indexPastKeyword))) {", "+              // found a match but may not be at top level", "+              if (! notInBlock(index)) index = -1; //in a paren phrase, gone too far", "+            else index++;  //move past so we can search again", "+          }", "+          else { // No space found past the keyword", "+            index = -1;", "+            break;", "-        _setCurrentLocation(oldPos);", "-//        _log.log(\"findKeyWord(\" + keyword + \", ..., \" + textOffset + \")\");", "-        return index;", "-      finally { releaseReadLock(); }", "-    }", "+      _setCurrentLocation(oldPos);", "+//        _log.log(\"findKeyWord(\" + keyword + \", ..., \" + textOffset + \")\");", "+      return index;", "+//      }", "+//      finally { releaseReadLock(); }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f16ad262b3ad4246f97ff0b1ff692f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "signatureAfterChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "diff": ["-    acquireReadLock();", "-    synchronized(_reduced) {", "+//    acquireReadLock();", "+//    synchronized(_reduced) {", "-      try {", "-        while (true) {", "-          index = text.indexOf(keyword, index);", "-          if (index == -1) break; // not found", "-          else {", "-            // found a match, check quality", "-            _setCurrentLocation(textOffset + index);", "-            ", "-            // check that the keyword is not in a comment and is followed by whitespace", "-            int indexPastKeyword = index + keyword.length();", "-            if (indexPastKeyword < text.length()) {", "-              if (! _isShadowed() && Character.isWhitespace(text.charAt(indexPastKeyword))) {", "-                // found a match but may not be at top level", "-                if (! notInBlock(index)) index = -1; //in a paren phrase, gone too far", "-                break;", "-              }", "-              else index++;  //move past so we can search again", "-            }", "-            else { // No space found past the keyword", "-              index = -1;", "+//      try {", "+      while (true) {", "+        index = text.indexOf(keyword, index);", "+        if (index == -1) break; // not found", "+        else {", "+          // found a match, check quality", "+          _setCurrentLocation(textOffset + index);", "+          ", "+          // check that the keyword is not in a comment and is followed by whitespace", "+          int indexPastKeyword = index + keyword.length();", "+          if (indexPastKeyword < text.length()) {", "+            if (! _isShadowed() && Character.isWhitespace(text.charAt(indexPastKeyword))) {", "+              // found a match but may not be at top level", "+              if (! notInBlock(index)) index = -1; //in a paren phrase, gone too far", "+            else index++;  //move past so we can search again", "+          }", "+          else { // No space found past the keyword", "+            index = -1;", "+            break;", "-        _setCurrentLocation(oldPos);", "-//        _log.log(\"findKeyWord(\" + keyword + \", ..., \" + textOffset + \")\");", "-        return index;", "-      finally { releaseReadLock(); }", "-    }", "+      _setCurrentLocation(oldPos);", "+//        _log.log(\"findKeyWord(\" + keyword + \", ..., \" + textOffset + \")\");", "+      return index;", "+//      }", "+//      finally { releaseReadLock(); }", "+//    }"]}], "num": 10915}