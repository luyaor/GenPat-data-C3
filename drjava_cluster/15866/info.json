{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c297418c3c04f1c2435c04a3e68542b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e61eac4d01904d6714c4bfdee984216", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public Class<?> visit(BitOrAssignExpression node)", "signatureAfterChange": "   public Type visit(BitOrAssignExpression node)", "diff": ["-  public Class<?> visit(BitOrAssignExpression node) {", "+  public Type visit(BitOrAssignExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e2932cf1425100e13be7300026ecdfc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "      public void testArrayAllocation() throws InterpreterException", "signatureAfterChange": "      public void testArrayAllocation() throws InterpreterException", "diff": ["-    Class<?> type = exp.acceptVisitor(_typeChecker);", "+    Type type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa84ff8d6bea6d6e04ef6b1c7c400009", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "   protected abstract ObjectMethodCall _unbox(Expression child, Class<?> type);", "signatureAfterChange": "   protected abstract ObjectMethodCall _unbox(Expression child, Type type);", "diff": ["-  protected abstract ObjectMethodCall _unbox(Expression child, Class<?> type);", "+  protected abstract ObjectMethodCall _unbox(Expression child, Type type);"]}], "num": 15866}