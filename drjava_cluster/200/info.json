{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ea06670545bd362a00eb6d642a4aa98", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785db2215dfda0bcad6021e1753aefef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public Void forClassImportStatementOnly(ClassImportStatement that)", "signatureAfterChange": "   public Void forClassImportStatementOnly(ClassImportStatement that)", "diff": ["-      sd = new SymbolData(temp);", "-      continuations.put(temp, new Pair<SourceInfo, LanguageLevelVisitor>(that.getSourceInfo(), this));", "-      symbolTable.put(temp, sd);", "+//      System.err.println(\"Creating continuation for imported class \" + temp);", "+      sd = addSymbolData(that.getSourceInfo(), temp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff06dc8ef0657338f4af6f938ef3b0cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 23, "signatureBeforeChange": "   protected SymbolData addSymbolData(SourceInfo si, String qualifiedClassName)", "signatureAfterChange": "   protected SymbolData getQualifiedSymbolData(String qualClassName, SourceInfo si)", "diff": ["+    * searches imported files, primitive types, as well as types in the symbol table. */", "+  protected SymbolData getQualifiedSymbolData(String qualClassName, SourceInfo si) {", "+    return getQualifiedSymbolData(qualClassName, si, false, false, true);", "+  }", "-  protected SymbolData addSymbolData(SourceInfo si, String qualifiedClassName) {", "-    SymbolData sd = new SymbolData(qualifiedClassName);  // create a continuation", "-    continuations.put(qualifiedClassName, new Pair<SourceInfo, LanguageLevelVisitor>(si, this));", "-    symbolTable.put(qualifiedClassName, sd);", "-//    System.err.println(\"Creating continuation for \" + qualifiedClassName + \" at LLV:1124\");"]}], "num": 200}