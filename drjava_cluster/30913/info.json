{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dcff33036c2d31bc9c0e6b83ef6815f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0300fc70e30952a65ace18c9b0f01f7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private boolean \t_combineCurrentAndNextIfFind(String first, String second, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private boolean \t_combineCurrentAndNextIfFind(String first, String second, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t\t\t\t\t// delete the first Brace and augment the second", "+\t\t\t\t\t// the backslash examples.", "+\t\t\t\t\t// \\-\\\\", "+\t\t\t\t\telse if ((copyCursor.current().getType().equals(\"\\\\\\\\\")) &&", "+\t\t\t\t\t\t\t\t\t (copyCursor.prevItem().getType().equals(\"\\\\\")))", "+\t\t\t\t\t\t{", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\\\");", "+\t\t\t\t\t\t\tcopyCursor.prev();", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\\\\\\\");", "+\t\t\t\t\t\t\tcopyCursor.current().setState(ReducedToken.FREE);", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} // \\-\\\"", "+\t\t\t\t\telse if ((copyCursor.current().getType().equals(\"\\\\\\\"\")) &&", "+\t\t\t\t\t\t\t\t\t (copyCursor.prevItem().getType().equals(\"\\\\\")))", "+\t\t\t\t\t\t{", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\"\");", "+\t\t\t\t\t\t\tcopyCursor.prev();", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\\\\\\\");", "+\t\t\t\t\t\t\tcopyCursor.current().setState(ReducedToken.FREE);", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t}", "+// delete the first Brace and augment the second"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99f30143e405dc282984a6c70efd98e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "209bedfa2bd8c92b4b250a04fcd63c3f7f96576a", "commitAfterChange": "8993de4964b51e2163e6ef77e75f505716cdcf78", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   private boolean \t_combineCurrentAndNextIfFind(String first, String second, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private boolean \t_combineCurrentAndNextIfFind(String first, String second, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t\t\t\t// first delete the second Brace", "+\t\t\t\telse if ((copyCursor.current().getType().equals(\"/*\"))&&", "+\t\t\t\t\t\t\t\t (copyCursor.prevItem().getType().equals(\"/\")))", "+\t\t\t\t\t{", "+\t\t\t\t\t\tcopyCursor.current().setType(\"*\");", "+\t\t\t\t\t\tcopyCursor.prev();", "+\t\t\t\t\t\tcopyCursor.current().setType(\"//\");", "+\t\t\t\t\t\tcopyCursor.current().setState(ReducedToken.FREE);", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\telse if ((copyCursor.current().getType().equals(\"//\"))&&", "+\t\t\t\t\t\t\t\t (copyCursor.prevItem().getType().equals(\"/\")))", "+\t\t\t\t\t{", "+\t\t\t\t\t\tcopyCursor.current().setType(\"/\");", "+\t\t\t\t\t\tcopyCursor.prev();", "+\t\t\t\t\t\tcopyCursor.current().setType(\"//\");", "+\t\t\t\t\t\tcopyCursor.current().setState(ReducedToken.FREE);", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\telse if ((copyCursor.current().getType().equals(\"\"))&&", "+\t\t\t\t\t\t\t\t (copyCursor.prevItem().getType().equals(\"\")))", "+\t\t\t\t\t{", "+\t\t\t\t\t\t// delete first Gap and augment the second", "+\t\t\t\t\t\tcopyCursor.prev();", "+\t\t\t\t\t\tint growth = copyCursor.current().getSize();", "+\t\t\t\t\t\tcopyCursor.remove();", "+\t\t\t\t\t\tcopyCursor.current().grow(growth);", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t// delete the first Brace and augment the second", "+\t\t\t\tcopyCursor.prev();", "-\t\t\t\tcopyCursor.prev(); // move back to the first Brace\t\t\t\t"]}], "num": 30913}