{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9839189dad840f4e0e9d135e07dc23b0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d653eb95ff077cf4186ca5237802d62f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "diff": ["-    assertEquals(\"insertion\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"insertion\",text, _defModel.getText());", "-    assertEquals(\"commenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"commenting\",commented, _defModel.getText());", "-    assertEquals(\"undo commenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"undo commenting\",text, _defModel.getText());", "-    assertEquals(\"redo commenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"redo commenting\",commented, _defModel.getText());", "-    assertEquals(\"uncommenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"uncommenting\",text, _defModel.getText());", "-    assertEquals(\"undo uncommenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"undo uncommenting\",commented, _defModel.getText());", "-    assertEquals(\"redo uncommenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"redo uncommenting\",text, _defModel.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fa9438efce190d56c14dfa7095a780", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public void testSpaceSuffix() throws BadLocationException", "signatureAfterChange": "       public void testSpaceSuffix() throws BadLocationException", "diff": ["-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open bracket.\", _aligned, _doc.getText(0, _doc.getLength())); ", "+    assertEquals(\"Line aligned to open bracket.\", _aligned, _doc.getText()); "]}], "num": 16498}