{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ebeeb28973f84eae93008dd8c345d93", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b70dd9852fde2169734136e8bfc7c42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void removeRegions(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public void removeRegions(final OpenDefinitionsDocument doc)", "diff": ["-      // notify", "-      Utilities.invokeLater(new Runnable() { public void run() {", "+      // notify all listeners for all regions", "+      _notifyRegionsRemoved(regions);", "+//      Utilities.invokeLater(new Runnable() { public void run() {", "+//        _lock.startRead();", "+//        try {", "+//          for (RegionManagerListener<R> l: _listeners) { ", "+//            for (R r: regions) { l.regionRemoved(r); }", "+//          } ", "+//        } ", "+//        finally { _lock.endRead(); }", "+//      } });", "+      _regions.remove(doc);", "+    }", "+  }", "-            for (final R r: regions) { l.regionRemoved(r); }", "-      _regions.remove(doc);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cdf842fc290bb8e2551bd86318d9fd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "commitAfterChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void addRegion(final R region)", "signatureAfterChange": "   public void addRegion(final R region)", "diff": ["-    if (! docRegions.contains(region)) { // region does not already exist in manager", "+    final boolean alreadyContained = docRegions.contains(region);", "+    if (!alreadyContained) { // region does not already exist in manager", "-    // notify.  invokeLater unnecessary if it only runs in the event thread", "-    Utilities.invokeLater(new Runnable() { public void run() {", "-      _lock.startRead();", "-      try {", "-        for (RegionManagerListener<R> l: _listeners) { l.regionAdded(region); }", "-      } finally { _lock.endRead(); }", "-    } });", "+    // only notify if the region was actually added", "+    if (!alreadyContained) {", "+      // notify.  invokeLater unnecessary if it only runs in the event thread", "+      Utilities.invokeLater(new Runnable() { public void run() {", "+        _lock.startRead();", "+        try {", "+          for (RegionManagerListener<R> l: _listeners) { l.regionAdded(region); }", "+        } finally { _lock.endRead(); }", "+      } });", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92367100c2446a23310bb7a7e6331b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void clearRegions()", "signatureAfterChange": "   public void clearRegions()", "diff": ["-    Utilities.invokeLater(new Runnable() { public void run() {", "-      _lock.startRead();", "-      try {", "-        for (RegionManagerListener<R> l: _listeners) { ", "-          for (R r: regions) { l.regionRemoved(r); }", "-        }", "-      } ", "-      finally { _lock.endRead(); }", "-    } });", "+    _notifyRegionsRemoved(regions);", "+//    Utilities.invokeLater(new Runnable() { public void run() {", "+//      _lock.startRead();", "+//      try {", "+//        for (RegionManagerListener<R> l: _listeners) { ", "+//          for (R r: regions) { l.regionRemoved(r); }", "+//        }", "+//      } ", "+//      finally { _lock.endRead(); }", "+//    } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d774f10efc644613eef53f17674209a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "commitAfterChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void removeRegion(final R region)", "signatureAfterChange": "   public void removeRegion(final R region)", "diff": ["-    docRegions.remove(region);  // remove the region from the manager", "+    final boolean wasRemoved = docRegions.remove(region);  // remove the region from the manager", "-    // notify", "-    Utilities.invokeLater(new Runnable() { public void run() {", "-      _lock.startRead();", "-      try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "-      finally { _lock.endRead(); }", "-    } });", "+    // only notify if the region was actually added", "+    if (wasRemoved) {", "+      // notify", "+      Utilities.invokeLater(new Runnable() { public void run() {", "+        _lock.startRead();", "+        try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "+        finally { _lock.endRead(); }", "+      } });", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78e5988f48471260abe75b735c3dfc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void removeRegion(final R region)", "signatureAfterChange": "   public void removeRegion(final R region)", "diff": ["-    if (wasRemoved) {", "-      // notify", "-      Utilities.invokeLater(new Runnable() { public void run() {", "-        _lock.startRead();", "-        try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "-        finally { _lock.endRead(); }", "-      } });", "-    }", "+    if (wasRemoved) _notifyRegionRemoved(region);", "+//      // notify", "+//      Utilities.invokeLater(new Runnable() { public void run() {", "+//        _lock.startRead();", "+//        try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "+//        finally { _lock.endRead(); }", "+//      } });", "+//    }", "+  }"]}], "num": 16227}