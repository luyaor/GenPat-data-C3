{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44dd43b054c79a1c1af3a00865fc7527", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f529ea50e0cd2d36978dcfc99b65ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected String interpret(String input) throws BadLocationException", "signatureAfterChange": "   protected String interpret(String input) throws DocumentAdapterException", "diff": ["-  protected String interpret(String input) throws BadLocationException {", "-    Document interactionsDoc = _model.getInteractionsDocument();", "-    interactionsDoc.insertString(interactionsDoc.getLength(), input, null);", "+  protected String interpret(String input) throws DocumentAdapterException {", "+    DocumentAdapter interactionsDoc = _model.getInteractionsDocument();", "+    interactionsDoc.insertText(interactionsDoc.getDocLength(), input, ", "+                               InteractionsDocument.DEFAULT_STYLE);", "-    final int resultsStartLocation = interactionsDoc.getLength() + 1;", "+    final int resultsStartLocation = interactionsDoc.getDocLength() + 1;", "-    final int resultsEndLocation = interactionsDoc.getLength() - 1 -", "+    final int resultsEndLocation = interactionsDoc.getDocLength() - 1 -", "-    return interactionsDoc.getText(resultsStartLocation, resultsLen);", "+    return interactionsDoc.getDocText(resultsStartLocation, resultsLen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f073714b347e88351d8ef11cad2126b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlusTest.java", "commitBeforeChange": "c1ff07970240c7ef75ff58b54b7af66d381343b1", "commitAfterChange": "6b8d5f90d1b0c18f973bf387b8050eb09c2cb40f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testSimpleBraces() throws BadLocationException", "signatureAfterChange": "   public void testSingleLineContract() throws BadLocationException", "diff": ["-  public void testSimpleBraces() throws BadLocationException {", "+  public void testSingleLineContract() throws BadLocationException {", "-    IndentRuleAction rule2 = new ActionStartStmtOfBracePlus(\"   \");", "-", "-    // {", "-    //  { } ", "-    String text = \"{\\n { }\\n\";", "+    IndentRuleAction rule2 = new ActionStartStmtOfBracePlus(\"   \"); // 3 spaces", "+    ", "+    String text = \"public void foo() {\\nbar();\";", "+    String aligned1 = text;", "+    String aligned2 = \"public void foo() {\\n   bar();\";", "+    ", "-    rule1.indentLine(_doc, 7);  // does nothing", "-    _assertContents(text);", "-    rule2.indentLine(_doc, 7);  // Indents one level", "-    _assertContents(text + \"   \");", "+    rule1.indentRule(_doc, 20);", "+    assertEquals(\"single line contract, no indent, no suffix\", ", "+                 aligned1, _doc.getText(0, _doc.getLength()));", "+    ", "+    _setDocText(text);", "+    rule2.indentRule(_doc, 20);", "+    assertEquals(\"single line contract, no indent, with suffix\", ", "+                 aligned2, _doc.getText(0, _doc.getLength()));"]}], "num": 9189}