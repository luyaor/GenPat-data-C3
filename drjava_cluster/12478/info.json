{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f943a659d3dbab419e97890719adc0d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b69fbf19f1eb43763bf7f2591319838", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "12384109e03448701c98d404f37be617f6e32fee", "commitAfterChange": "7b8e61b54c444deec40202441181317a86727c3a", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "   private void _updateToolbarButtons()", "signatureAfterChange": "   private void _updateToolbarButtons()", "diff": ["-    ", "+    Font toolbarFont = DrJava.getConfig().getSetting(FONT_TOOLBAR);    ", "+    boolean iconsEnabled = DrJava.getConfig().getSetting(TOOLBAR_ICONS_ENABLED).booleanValue();", "+    boolean textEnabled = DrJava.getConfig().getSetting(TOOLBAR_TEXT_ENABLED).booleanValue();", "+", "-      ", "-        ", "-        /**if (a == null) {", "+        /*", "+        if (a == null) {", "-          */", "-          ", "-        Font toolbarFont = DrJava.getConfig().getSetting(FONT_TOOLBAR);", "+        */", "+", "-        if (a==null) {", "+        if (a == null) {", "-          ", "-        boolean iconsEnabled = DrJava.getConfig().getSetting(TOOLBAR_ICONS_ENABLED).booleanValue();", "-          ", "+", "-        boolean textEnabled = DrJava.getConfig().getSetting(TOOLBAR_TEXT_ENABLED).booleanValue();", "-          ", "-          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c40c2ee58113c75bf47c40c6277affe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "f5e0f21c1557f81d0d7f0c29eb237b06db708ca4", "commitAfterChange": "0d9f1553021bdec23ece7e3cb20a25799f49e14f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void insertConsoleText(String txt)", "signatureAfterChange": "   public void insertConsoleText(String txt)", "diff": ["-    if (_insertTextCommand != null) ", "-      synchronized(commandLock) {", "-      _insertTextCommand.apply(txt); ", "+    synchronized(commandLock) {", "+      if (_insertTextCommand != null) ", "+        _insertTextCommand.apply(txt); ", "+      else", "+        throw new IllegalStateException(\"Console not ready for text insertion\");", "-    else", "-      throw new IllegalStateException(\"Console not ready for text insertion\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c9b4ac84fc69838774d9607c36b1ba8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "commitAfterChange": "c0ad820565377d42d023afeab71166682f497054", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-    List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // opened documents in the project source tree", "+    final List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // opened documents in the project source tree", "-    for (OpenDefinitionsDocument d: projDocs) {", "-      if (d.isProjectFile()) closeFile(d);", "-      else {", "-        try {", "-          final INavigatorItem idoc = d;", "-          final String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "-          Utilities.invokeAndWait(new Runnable() { ", "-            public void run() { _documentNavigator.refreshDocument(idoc, path); }", "-          });", "-        }", "-        catch(IOException e) { ", "-          /* Do nothing; findbugs signals a bug unless this catch clause spans more than two lines */ ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        for (OpenDefinitionsDocument d: projDocs) {", "+          if (d.isProjectFile()) closeFile(d);", "+          else {", "+            try {", "+              final INavigatorItem idoc = d;", "+              final String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "+              _documentNavigator.refreshDocument(idoc, path);  // this operation must run in event thread", "+            }", "+            catch(IOException e) { ", "+              /* Do nothing; findbugs signals a bug unless this catch clause spans more than two lines */ ", "+            }", "+          }", "-    }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4528a1e9e47a75d3513bdb82a7142612", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "8f195628c479018f0ebf1ac1d99bf34d28c32416", "commitAfterChange": "27c73ce4c03fdd5ec2bb518a13d37e65a3950316", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "signatureAfterChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "diff": ["-      if(!lru.isEmpty() && lru.getFirst() == odd){", "+      if (!lru.isEmpty() && lru.getFirst() == odd) {", "-    ", "-    if(!(isDDocInCache(odd) && pair.getFirst().isModifiedSinceSave())){", "-//      System.out.println(\"adding \" + odd + \" to lru\");", "+     ", "+", "+    if (!(isDDocInCache(odd) && pair.getFirst().isModifiedSinceSave())) {", "+      //      System.out.println(\"adding \" + odd + \" to lru\");", "-", "+    ", "-    if(lru.size() > CACHE_SIZE){", "-      synchronized(lru) {", "+    synchronized(lru) {", "+      if (lru.size() > CACHE_SIZE) {", "-      }", "-      Pair<DefinitionsDocument,DDReconstructor> removedPair = table.get(odd);", "-//      System.out.println(\"should i dispose of \" + odd + \"?\");", "-     ", "-      if(isDDocInCache(odd) && removedPair.getFirst().isModifiedSinceSave()){", "-//        System.out.println(\"no\");", "-      } else {", "-//        System.out.println(\"disposing of \" + odd);", "+        Pair<DefinitionsDocument,DDReconstructor> removedPair = table.get(odd);", "+        //      System.out.println(\"should i dispose of \" + odd + \"?\");", "+        ", "+        if(isDDocInCache(odd) && removedPair.getFirst().isModifiedSinceSave()){", "+          //        System.out.println(\"no\");", "+        } else {", "+          //        System.out.println(\"disposing of \" + odd);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cfc41564f1cb10e0b58319183ea8a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "61e3c6619f8434257df7672e78ae68ff291ff92d", "commitAfterChange": "ba6c4f3e75450c2f5fbfc757090778e3a5129db6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["-      synchronized(_slaveJVMLock) {", "-        compilerErrorsArray = (CompilerError[]) compilerErrors.toArray(new CompilerError[compilerErrors.size()]);", "-      }", "-      ", "+      compilerErrorsArray = (CompilerError[]) compilerErrors.toArray(new CompilerError[compilerErrors.size()]);", "+", "-      if (compilerErrorsArray.length == 0) compilerErrorsArray = compiler.compile(sourceRoots, files);", "+    ", "+      if (compilerErrorsArray.length == 0) ", "+        synchronized(_slaveJVMLock) { compilerErrorsArray = compiler.compile(sourceRoots, files); }"]}], "num": 12478}