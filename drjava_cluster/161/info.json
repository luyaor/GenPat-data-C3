{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49b13c8b68e2efdf83d2d818a266dd8f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83cef06c972a91c1351559d0d6186208", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "3c9da7b6f33927502f9cee032fa48adae4a189de", "commitAfterChange": "5b8db3ab6ffa6e60a3e348c2f56419eeafa67e87", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testDancingUIFileClosed() throws IOException", "signatureAfterChange": "   public void testDancingUIFileClosed() throws IOException", "diff": ["-     SingleDisplayModelFileClosedListener closeListener =", "-       new SingleDisplayModelFileClosedListener();", "+     SingleDisplayModelFileClosedListener closeListener = new SingleDisplayModelFileClosedListener();", "+     _closeDone = false;", "+     ", "+    ", "+     Utilities.invokeLater(new Runnable() {", "+       public void run() { _frame.getCloseButton().doClick(); }", "+     });", "-     synchronized(closeListener) {", "-       Thread thread = new Thread(new Runnable() {", "-         public void run() {", "-           _frame.getCloseButton().doClick();", "-         }", "-       });", "-       SwingUtilities.invokeLater(thread);", "-", "-       try{", "-         closeListener.wait();", "-       }", "-       catch(InterruptedException exception) {", "-         fail(exception.toString());", "-       }", "+//     _log.log(\"Waiting for file closing\");", "+     ", "+     synchronized (_closeLock) {", "+       try { while (! _closeDone) _closeLock.wait(); }", "+       catch(InterruptedException exception) { fail(exception.toString()); }", "-     if( !FileOps.deleteDirectory(_tempDir) ) {", "+     if (! FileOps.deleteDirectory(_tempDir)) {", "+//     _log.log(\"testDancingUIClosed completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7955de31903f4ddcf0ed859f2b9a98d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "3c9da7b6f33927502f9cee032fa48adae4a189de", "commitAfterChange": "5b8db3ab6ffa6e60a3e348c2f56419eeafa67e87", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testDancingUIFileOpened() throws IOException", "signatureAfterChange": "   public void testDancingUIFileOpened() throws IOException", "diff": ["+     ", "+     ", "-     SingleDisplayModelCompileListener compileListener =", "-       new SingleDisplayModelCompileListener();", "+     ", "+     _compileDone = false;", "+     SingleDisplayModelCompileListener compileListener = new SingleDisplayModelCompileListener();", "-     synchronized(compileListener) {", "-       SwingUtilities.invokeLater(new Runnable() {", "-         public void run() {", "-           _frame.getCompileAllButton().doClick();", "-         }", "-       });", "+     Utilities.invokeLater(new Runnable() {", "+       public void run() { _frame.getCompileAllButton().doClick();}", "+     });", "-       try{", "-         compileListener.wait();", "-       }", "-       catch(InterruptedException exception) {", "-         fail(exception.toString());", "-       }", "+//     _log.log(\"Waiting for compile\");", "+     synchronized(_compileLock) {", "+       try { while (! _compileDone) _compileLock.wait(); }", "+       catch(InterruptedException exception) { fail(exception.toString()); }", "-     if( !FileOps.deleteDirectory(_tempDir) ) {", "-       System.err.println(\"Couldn't fully delete directory \" + _tempDir.getAbsolutePath() +", "-                          \"\\nDo it by hand.\\n\");", "-     }", "+     if (! FileOps.deleteDirectory(_tempDir))", "+       System.err.println(\"Couldn't fully delete directory \" + _tempDir.getAbsolutePath() + \"\\nDo it by hand.\\n\");", "+   ", "+//     _log.log(\"testDancingUIFileOpened completed\");"]}], "num": 161}