{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08004aff223184493a333b78ae68133f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e70b23c304442e19358fd0ee7af9e37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public TypeData forSimpleNameReference(SimpleNameReference that)", "signatureAfterChange": "   public TypeData forSimpleNameReference(SimpleNameReference that)", "diff": ["-    //first, try to resolve this name as a field or variable reference", "+    // first, try to resolve this name as a field or variable reference", "-      if (!reference.hasValue()) {", "+      if (! reference.hasValue()) {", "-      //if reference is non-static, but context is static, give error", "-      if (!reference.hasModifier(\"static\") && inStaticMethod()) {", "-        _addError(\"Non static field or variable \" + reference.getName() + \" cannot be referenced from a static context\", that);", "+      // if reference is non-static (and not a local variable), but context is static, give error", "+      if (inStaticMethod() && ! reference.hasModifier(\"static\")  && ! reference.isLocalVariable()) {", "+        _addError(\"Non-static variable or field \" + reference.getName() + \" cannot be referenced from a static context\", that);", "-      return reference.getType().getInstanceData();", "-        ", "+      return reference.getType().getInstanceData();  ", "-      ", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e35053440daab36f2a2c959662a09de2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "commitAfterChange": "d3bb1d993ed8ffd95b42e820e37d6479998a9605", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static ArrayList<String> getLookAndFeels()", "signatureAfterChange": "     public static ArrayList<String> getLookAndFeels()", "diff": ["-      if(!_registered) {", "+      if(!_registered && !PlatformFactory.ONLY.isMacPlatform()) {"]}], "num": 12467}