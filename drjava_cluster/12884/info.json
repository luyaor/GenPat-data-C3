{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "681b1b92d89b260c3e0d689711c15a20", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2e2f9f339662209935d10470caa19e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3f81b37285813b52f5c285ae3a68ee4a21753a7e", "commitAfterChange": "844a54657c2f878fc1ea01131f59375a436ab7c8", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 247, "signatureBeforeChange": "      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "      private void _saveAllBeforeProceeding(String message)", "diff": ["-    public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-      String message;", "-      if (reason == COMPILE_REASON) {", "-        message =", "-          \"To compile, you must first save ALL modified files.\\n\" +", "-          \"Would you like to save and then compile?\";", "-      }", "-      else if (reason == JUNIT_REASON) {", "-        message =", "-          \"To run JUnit, you must first save and compile ALL modified\\n\" +", "-          \"files. Would you like to save and then compile?\";", "-      }", "-      else if (reason == JAVADOC_REASON) {", "-        message =", "-          \"To run JavaDoc, you must first save ALL modified files.\\n\" +", "-          \"Would you like to save and then run JavaDoc?\"; ", "-      }", "-      else if (reason == DEBUG_REASON) {", "-        message =", "-          \"To use debugging commands, you must first save and compile\\n\" +", "-          \"ALL modified files. Would you like to save and then compile?\";", "-      }", "-      else {", "-        throw new RuntimeException(\"Invalid reason for forcing a save.\");", "-      }", "-      int rc = JOptionPane.showConfirmDialog(MainFrame.this, message,", "-                                             \"Must save all files to continue\",", "-                                             JOptionPane.YES_NO_OPTION);", "-      switch (rc) {", "-        case JOptionPane.YES_OPTION:", "-          _saveAll();", "-          break;", "-        case JOptionPane.NO_OPTION:", "-        case JOptionPane.CANCEL_OPTION:", "-        case JOptionPane.CLOSED_OPTION:", "-          // do nothing", "-          break;", "-        default:", "-          throw new RuntimeException(\"Invalid rc from showConfirmDialog: \" + rc);", "+    private void _saveAllBeforeProceeding(String message) {", "+      if (_model.hasModifiedDocuments()) {", "+        int rc = JOptionPane.showConfirmDialog(MainFrame.this, message,", "+                                               \"Must save all files to continue\",", "+                                               JOptionPane.YES_NO_OPTION);", "+        switch (rc) {", "+          case JOptionPane.YES_OPTION:", "+            _saveAll();", "+            break;", "+          case JOptionPane.NO_OPTION:", "+          case JOptionPane.CANCEL_OPTION:", "+          case JOptionPane.CLOSED_OPTION:", "+            // do nothing", "+            break;", "+          default:", "+            throw new RuntimeException(\"Invalid rc from showConfirmDialog: \" + rc);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef85d3686a3eb55d12990df10a77d3ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public INavigatorItem removeDocument(INavigatorItem doc) throws IllegalArgumentException", "signatureAfterChange": "   public INavigatorItem removeDocument(INavigatorItem doc) throws IllegalArgumentException", "diff": ["-    System.err.println(\"removing from old list \" + doc);", "-    int i = _docs.indexOf(doc);", "-    if( i == -1 ) {", "-      throw new IllegalArgumentException(\"Document \" + doc + \" not found in Document Navigator\");", "-    }", "-    else {", "-      INavigatorItem next = null;", "-      if(currentselected == doc)", "-      {", "-        next = getNext(doc);", "-        if(next == doc)", "-        {", "-          next = null;", "-        }", "-      } ", "-      INavigatorItem tbr = _docs.remove(i);", "-      this.setListData(_docs);", "-      if(next != null)", "-      {", "-        this.setSelectedValue(next, true);", "-      }", "-      return tbr;", "+    synchronized (_model) {", "+      // System.err.println(\"removing from old list \" + doc);", "+      int i = _model.indexOf(doc);", "+      if( i == -1 )", "+        throw new IllegalArgumentException(\"Document \" + doc + \" not found in Document Navigator\");", "+      INavigatorItem item = (INavigatorItem) _model.remove(i);", "+      return item;"]}], "num": 12884}