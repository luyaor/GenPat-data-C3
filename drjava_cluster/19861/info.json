{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72fc175ba3d21aecca78a1f8a46f2e6f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17ce9fd551b505b25140d6056a3ec3e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 402, "signatureBeforeChange": "\r \r   public void forUninitializedVariableDeclarator(UninitializedVariableDeclarator that)", "signatureAfterChange": "    public void forUninitializedVariableDeclarator(UninitializedVariableDeclarator that)", "diff": ["-\r", "-  public void forUninitializedVariableDeclarator(UninitializedVariableDeclarator that) {\r", "-    forUninitializedVariableDeclaratorDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getType().visit(this);\r", "-    forUninitializedVariableDeclaratorOnly(that);\r", "-  }\r", "+", "+  public void forUninitializedVariableDeclarator(UninitializedVariableDeclarator that) {", "+    forUninitializedVariableDeclaratorDoFirst(that);", "+    if (prune(that)) return;", "+    that.getType().visit(this);", "+    forUninitializedVariableDeclaratorOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5352032b206d1f40eed8195f079b936e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 403, "signatureBeforeChange": "\r \r   public void forInitializedVariableDeclarator(InitializedVariableDeclarator that)", "signatureAfterChange": "    public void forInitializedVariableDeclarator(InitializedVariableDeclarator that)", "diff": ["-\r", "-  public void forInitializedVariableDeclarator(InitializedVariableDeclarator that) {\r", "-    forInitializedVariableDeclaratorDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getType().visit(this);\r", "-    that.getInitializer().visit(this);\r", "-    forInitializedVariableDeclaratorOnly(that);\r", "-  }\r", "+", "+  public void forInitializedVariableDeclarator(InitializedVariableDeclarator that) {", "+    forInitializedVariableDeclaratorDoFirst(that);", "+    if (prune(that)) return;", "+    that.getType().visit(this);", "+    that.getInitializer().visit(this);", "+    forInitializedVariableDeclaratorOnly(that);", "+  }"]}], "num": 19861}