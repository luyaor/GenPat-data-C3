{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bf5d0013b0abd62f0a47ed0ffa744df", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ced0ec0faba1458f60ff498de711ff3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "commitAfterChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private InterpretResult interpret(String input, Interpreter interpreter)", "signatureAfterChange": "      private InterpretResult interpret(String input, Interpreter interpreter)", "diff": ["-    boolean available = _busyInterpreters.add(interpreter);", "-    if (!available) { debug.logEnd(); return InterpretResult.busy(); }", "+    boolean available = addBusyInterpreter(interpreter);", "+    if (! available) { debug.logEnd(); return InterpretResult.busy(); }", "-    Thread.currentThread().setContextClassLoader(_interpreterLoader);", "+    Thread.currentThread().setContextClassLoader(_interpreterLoader);  // _interpreterLoader is final", "-    finally { _busyInterpreters.remove(interpreter); }", "+    finally { removeBusyInterpreter(interpreter); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c83cdfff692b6d3e55019647176a13d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "3c002733e6bec1f112ca58ec38806686ba48b477", "commitAfterChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void addDebugInterpreter(String name, JavaInterpreter interpreter)", "signatureAfterChange": "   void addDebugInterpreter(String name, JavaInterpreter interpreter)", "diff": ["-  public void addDebugInterpreter(String name, JavaInterpreter interpreter) {", "-    if (_debugInterpreters.containsKey(name)) {", "-      throw new IllegalArgumentException(\"Names for debug interpreters must be unique\");", "-    }", "-    _debugInterpreters.put(name, interpreter);", "+  void addDebugInterpreter(String name, JavaInterpreter interpreter) {", "+    if (_debugInterpreters.containsKey(name)) {", "+      throw new IllegalArgumentException(\"Names for debug interpreters must be unique\");", "+    }", "+    _debugInterpreters.put(name, new InterpreterData(interpreter));"]}], "num": 28350}