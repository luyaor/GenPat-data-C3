{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66579aef7e2b6b493dde1170c5d588dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "410f9c7bddfa1cf85dc0b59dcefd0a83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   final public PackageDeclaration packageDeclaration() throws ParseException", "signatureAfterChange": "   final public PackageDeclaration packageDeclaration() throws ParseException", "diff": ["-    List<IdentifierToken> list = null;", "+    ReferenceType name = null;", "-      list = name();", "+      name = ReferenceTypeName();", "-      {if (true) return new PackageDeclaration(list,", "+      if(name instanceof GenericReferenceType){", "+        {if (true) throw new ParseException(\"Package names cannot be parameterized.\");}", "+      }", "+      {if (true) return new PackageDeclaration(name.getRepresentation(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3098cce0c772c2a65d07b9f61ee3765", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   final public ImportDeclaration importDeclaration() throws ParseException", "signatureAfterChange": "   final public ImportDeclaration importDeclaration() throws ParseException", "diff": ["-    List<IdentifierToken> list;", "+    ReferenceType name = null;", "-    list = name();", "+    name = ReferenceTypeName();", "-      {if (true) return new ImportDeclaration(list, star != null,", "+      if(name instanceof GenericReferenceType){", "+        {if (true) throw new ParseException(\"Import names cannot be parameterized.\");}", "+      }", "+      {if (true) return new ImportDeclaration(name.getRepresentation(), star != null,"]}], "num": 19036}