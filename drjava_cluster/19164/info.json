{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b594f8bd7ef4fdfda6b2245f915bab36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280f75f202bc0d089b21a40a33a923f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "8907059ef43f15e7b338686159e3333fd997b238", "commitAfterChange": "191c3e4b63ea8ecc780014db5fc908a6ccd9ee7a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void setMachine(DefinitionsPane defPane)", "signatureAfterChange": "   private void _updateMachine()", "diff": ["-  ", "-  public void setMachine(DefinitionsPane defPane) {", "-    _defPane = defPane;", "-    OpenDefinitionsDocument doc = defPane.getOpenDocument();", "-    _machine = doc.createFindReplaceMachine();", "+   // caret has been changed", "+  private void _updateMachine() {", "+    if (_caretChanged) {", "+      OpenDefinitionsDocument doc = _model.getActiveDocument();", "+      _machine.setDocument(doc.getDocument());", "+      _machine.setStart(doc.getDocument().getCurrentLocation());", "+      _machine.setPosition(doc.getDocument().getCurrentLocation());", "+      _caretChanged = false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "463eb17c41d4a2fdefad2dc6a5c9899d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "commitAfterChange": "229b97efe43c666e9a5a8a6450aaf594c37171c3", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": "     public void removeRegion(final R region)", "signatureAfterChange": "     public void removeRegion(final R r)", "diff": ["-    public void removeRegion(final R region) {      ", "+    public void removeRegion(final R r) {      ", "-      final R cur = _current; // so we can verify if _current got changed", "-      if (region == cur) {", "-        if (nextCurrentRegion().equals(cur)) {", "-          if (prevCurrentRegion().equals(cur)) {", "-            _current = null;", "-          }", "-        }", "-      }", "-      for(int i = 0; i < _regions.size(); ++i) {", "-        if (region == _regions.get(i)) {", "+      if (r == _current && nextCurrentRegion().equals(_current) && prevCurrentRegion().equals(_current)) ", "+        _current = null;  // Removed last region ?", "+", "+      for (int i = 0; i < _regions.size(); ++i) {", "+        if (r.equals(_regions.get(i))) {", "+          _regionsSet.remove(r);", "+          assert _regions.size() == _regionsSet.size();", "-          for (RegionManagerListener<R> l: _listeners) { l.regionRemoved (region); }", "+          for (RegionManagerListener<R> l: _listeners) { l.regionRemoved (r); }"]}], "num": 19164}