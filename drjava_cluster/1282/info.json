{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc75c40f6867a7fd619036fea993fe3f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc6adcc31c9a04b817df68fce6af114", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 559, "signatureBeforeChange": "   public void resetChanged()", "signatureAfterChange": "       public void run()", "diff": ["-  /** Resets the changed status of the MainFrame. */", "-  public void resetChanged() { _changed = false; }", "+    Thread updater = new Thread(new Runnable() {", "+      public void run() {", "+        synchronized(_updateLock) { ", "+          try { _updateLock.wait(UPDATE_DELAY); } ", "+          catch(InterruptedException e) { /* fall through */ }", "+        }", "+        EventQueue.invokeLater(new Runnable() { ", "+          public void run() {", "+            synchronized(_updateLock) { ", "+              _tabUpdatePending = false;", "+              _lastUpdatedComponent = c;", "+            }", "+//            System.err.println(\"Repainting \" + c);", "+            c.revalidate();", "+            c.repaint();", "+          }", "+        });", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f19e0b4b58e9bd64d97986f90730216", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "eccc0f4ca399d1b769babc36cdb28f136cc1e3a4", "commitAfterChange": "cd4dd52c44e1088dca0dd0286c0899f125ae070a", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 39, "signatureBeforeChange": "   private void _debugNext()", "signatureAfterChange": "     public void actionPerformed(ActionEvent ae)", "diff": ["+  {", "+    public void actionPerformed(ActionEvent ae) {", "+      _debugStep(DebugManager.STEP_OUT);", "-   */", "-  private void _debugNext(){", "-    //_model.getDebugManager().next();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c44a879ba3bca8ed4f828b4d286213d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void closeScript()", "signatureAfterChange": " public void run()", "diff": ["-   */", "-  public void closeScript() {", "-    //_interactions = null;  // Why do this?  It can only cause problems...", "-    _currentInteraction = -1;", "-    _passedCurrent = false;", "-  }", "+       * locked section avoiding the race. */", "+      SwingUtilities.invokeLater(new Runnable() { public void run() { _model.interpretCurrentInteraction(); } });"]}], "num": 1282}