{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1924cffbd96502941fb6480ca37c7f9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310175e2620790ffccac9bb414641a53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "74f78a37f662a82d90e6d47182c226ff9314be8c", "commitAfterChange": "56fdc380f0aee79a90c160b06fcb5549f8bb95f4", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   private static String _readThroughIndex(int line, int column)", "signatureAfterChange": "   private static String _readThroughIndex(int line, int column)", "diff": ["-        result.append(l);", "-        if (l.trim().length()>0) result.append(' ');", "-        result.append(\"//[\").append(_fileInLine).append(']').append(newLine);", "+        result.append(l).append(newLine);", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3164be42eeb6638cba7760ff221cab2e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": "    private void _open()", "signatureAfterChange": "    private void _open()", "diff": ["-    // Close an untitled, unchanged document if it is the only one open", "-    boolean closeUntitled = _hasOneUnchangedDoc();", "-    OpenDefinitionsDocument oldDoc = _currentDefPane.getOpenDocument();", "-", "-      if (closeUntitled) {", "-        _model.closeFile(oldDoc);", "-      }", "-      _docList.setSelectedValue(openDoc, true);", "+      _model.setActiveDocument(openDoc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c3ae97ee8fb4b1e18260f8320e65d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "63c14fb4387b2322a54bec21270f907efc3bbeb5", "commitAfterChange": "abcd28f90aa707a487bed59497ff45149a089bc9", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 376, "signatureBeforeChange": "   private int _gotoLine()", "signatureAfterChange": "   private int _gotoLine()", "diff": ["-        _currentDefPane.centerViewOnLine(lineNum);", "-        int pos = _model.getActiveDocument().gotoLine(lineNum);", "-        _currentDefPane.setCaretPosition(pos);", "-        return pos;", "-      }", "+        return _jumpToLine(lineNum);      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5553e2a757ae4724d4a0d02f918b0186", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public synchronized void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public synchronized void setPrivateAccessible(boolean allow)", "diff": ["-    Interpreter active = _activeInterpreter.getInterpreter();", "-    if (active instanceof JavaInterpreter) {", "-      ((JavaInterpreter)active).setPrivateAccessible(allow);", "-    }", "-  } ", "+    // TODO: implement with Options values", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d777edaa2d67ff968b6aa013356a913", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "47d5fc81163cac95e4e64b470a149e7ec540b233", "commitAfterChange": "d012414100e088dfd0a2ea6e642cc05f11fbf32b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _createPanels()", "signatureAfterChange": "   private void _createPanels()", "diff": ["-    PanelTreeNode fontNode = _createPanel(\"Fonts\");", "-    fontNode.getPanel().displayComponents(); ", "+    /*PanelTreeNode fontNode = _createPanel(\"Fonts\");", "+    _setupFontPanel(fontNode.getPanel());", "+    */", "-    colorNode.getPanel().displayComponents();", "-    PanelTreeNode keystrokesNode = _createPanel(\"Key Bindings\");", "-    keystrokesNode.getPanel().displayComponents();", "+    _setupColorPanel(colorNode.getPanel());", "+", "+    /*PanelTreeNode keystrokesNode = _createPanel(\"Key Bindings\");", "+    _setupKeyBindingsPanel(keystrokesNode.getPanel());", "+    */", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "621828a0da49482652a5908a7e6af7d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessSequence.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected void stopAllRedirectors()", "signatureAfterChange": "   protected void stopAllRedirectors()", "diff": ["-    while(!_redirectors.isEmpty()) {", "-      StreamRedirectThread r = _redirectors.iterator().next();", "-      r.setStopFlag();", "-      _redirectors.remove(r);", "-    }", "+    _stdOutRedirector.setStopFlag();", "+    _stdErrRedirector.setStopFlag();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "995b0c4c61b64017532844e949baefc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static Method loadMainMethod()      throws NoSuchMethodException, SecurityException", "signatureAfterChange": "   private static Method loadMainMethod()      throws NoSuchMethodException, SecurityException", "diff": ["-      File fLoc = CONFIG.getSetting(JAVAC_LOCATION);", "-      if(fLoc != FileOption.NULL_FILE) {", "-        URL[] urls = new URL[] {fLoc.toURL()};", "+      //File fLoc = getConfig().getSetting(JAVAC_LOCATION);", "+      //if(fLoc != FileOption.NULL_FILE) {", "+        //URL[] urls = new URL[] {fLoc.toURL()};", "-        ClassLoader dcl = new DrJavaClassLoader(urls);", "+        ClassLoader dcl = new DrJavaClassLoader();", "-      }", "+      //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c7560b913428376b7744b16c4997fc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    _model = new DefaultGlobalModel();", "-    OpenDefinitionsDocument doc = _model.newFile();", "-    _currentDocIndex = 0;", "-    _definitionsDocs = new DefaultListModel();", "-    _definitionsDocs.addElement(doc);", "+    _model = new SingleDisplayModel();", "-    _defScrollPanes = new LinkedList();", "-    JScrollPane defScroll = _createDefScrollPane(doc);", "+    _defScrollPanes = new Hashtable();", "+    JScrollPane defScroll = _createDefScrollPane(_model.getActiveDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f5104c2736c87717c4cb2afe25335d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0c95fc4366bd5654ddd2a4c942b1634c96be89c8", "commitAfterChange": "57576abf3c61a61cbc760b4b0e10c533bcfaab23", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": "   public OpenDefinitionsDocument newFile(File parentDir)", "signatureAfterChange": "   public OpenDefinitionsDocument newFile(File parentDir)", "diff": ["-  public OpenDefinitionsDocument newFile(File parentDir) {", "+  public OpenDefinitionsDocument newFile(File parentDir) { return newFile(parentDir, \"\"); }", "-    doc.setParentDirectory(parentDir);", "-    addDocToNavigator(doc);", "-    _notifier.newFileCreated(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae4c21032661ff29d3e50f8f38d2f814", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 226, "signatureBeforeChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-          _switchDefScrollPane();", "-          ", "-          boolean isModified = active.isModifiedSinceSave();", "-          boolean canCompile = (!isModified && !active.isUntitled());", "-          _saveAction.setEnabled(isModified || active.isUntitled());", "-          _revertAction.setEnabled(!active.isUntitled());", "-          ", "-          // Update error highlights", "-          _compilerErrorPanel.getErrorListPane().selectNothing();", "-          _junitErrorPanel.getErrorListPane().selectNothing();", "-          _javadocErrorPanel.getErrorListPane().selectNothing();", "-          ", "-          int pos = _currentDefPane.getCaretPosition();", "-          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-          _currentDefPane.getJUnitErrorCaretListener().updateHighlight(pos);", "-          _currentDefPane.getJavadocErrorCaretListener().updateHighlight(pos);", "-          ", "-          // Update FileChoosers' directory", "-          _setCurrentDirectory(active);", "-          ", "-          // Update title and position", "-          updateFileTitle();", "-          _currentDefPane.requestFocus();", "-          _posListener.updateLocation();", "-          ", "-          // Check if modified (but only if we're not closing all files)", "-          if (!_model.isClosingAllFiles()) {", "-            try {", "-              active.revertIfModifiedOnDisk();", "-            }", "-            catch (FileMovedException fme) {", "-              _showFileMovedError(fme);", "-            }", "-            catch (IOException e) {", "-              _showIOError(e);", "-            }", "-          }", "-          ", "-          // Change Find/Replace to the new defpane", "-          if (_findReplace.isDisplayed()) {", "-            _findReplace.stopListening();", "-            _findReplace.beginListeningTo(_currentDefPane);", "-            //uninstallFindReplaceDialog(_findReplace);", "-            //installFindReplaceDialog(_findReplace);", "-          }", "+      _switchDefScrollPane();", "+      ", "+      boolean isModified = active.isModifiedSinceSave();", "+      boolean canCompile = (!isModified && !active.isUntitled());", "+      _saveAction.setEnabled(isModified || active.isUntitled());", "+      _revertAction.setEnabled(!active.isUntitled());", "+      ", "+      // Update error highlights          ", "+      int pos = _currentDefPane.getCaretPosition();", "+      _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+      ", "+      // Update FileChoosers' directory", "+      _setCurrentDirectory(active);", "+      ", "+      // Update title and position", "+      updateFileTitle();", "+      _currentDefPane.requestFocus();", "+      _posListener.updateLocation();", "+      ", "+      // Check if modified (but only if we're not closing all files)", "+      if (!_model.isClosingAllFiles()) {", "+        try {", "+          active.revertIfModifiedOnDisk();", "+        }", "+        catch (FileMovedException fme) {", "+          _showFileMovedError(fme);", "+        }", "+        catch (IOException e) {", "+          _showIOError(e);", "+        }", "+      }", "+      ", "+      // Change Find/Replace to the new defpane", "+      if (_findReplace.isDisplayed()) {", "+        _findReplace.stopListening();", "+        _findReplace.beginListeningTo(_currentDefPane);", "+        //uninstallFindReplaceDialog(_findReplace);", "+        //installFindReplaceDialog(_findReplace);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0cdd6d1568ae3163d4ed45d36b30d2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-  /** Process a local inner interface definition */", "+  /** Process a local interface definition */", "-    // TODO: is this necessarily local?", "-    handleInnerInterfaceDef(that, _bodyData, getQualifiedClassName(_bodyData.getSymbolData().getName()) + \".\"", "-                              + _bodyData.getSymbolData().preincrementLocalClassNum() + that.getName().getText());", "+    _addAndIgnoreError(\"Local interfaces are illegal in Java.\", that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92112a5fa9b89f73c8ca01860f5bcb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "2d246c494fbb75a0c4f2511eff1e602e629e213d", "commitAfterChange": "dda1eca509a9b15531a1f437487ab6782b2e8d21", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "signatureAfterChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "diff": ["-    ", "+        ", "+      if(TigerUtilities.isBridge(curr)) continue; //If the method is a bridge method, dont consider it, go to the next", "+", "-      boolean bestBridge = TigerUtilities.isBridge(best);", "-      boolean ambiBridge = TigerUtilities.isBridge(ambiguous);", "-      if (bestBridge && !ambiBridge) {", "-        return ambiguous;", "-      }", "-      else if (!bestBridge && ambiBridge) {", "-        return best;", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd77e83573b916381ca683592fd0568c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "4e55340834f8e6032cf1387752575fd19cb935fe", "commitAfterChange": "de413eda4232899a577fad80816630301e25a4de", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _findAll()", "signatureAfterChange": "   private void _findAll()", "diff": ["-    StringBuilder tabLabel = new StringBuilder(\"Find: \");", "-    if (title.length() <= 10) tabLabel.append(title);", "-    else tabLabel.append(title.substring(0,10)).append(\"...\");", "+//    StringBuilder tabLabel = new StringBuilder(\"Find: \");", "+//    if (title.length() <= 10) tabLabel.append(title);", "+//    else tabLabel.append(title.substring(0,10)).append(\"...\");", "+    String tabLabel = (title.length() <= 20) ? title : title.substring(0,20);", "-      _frame.createFindResultsPanel(rm, tabLabel.toString(), searchStr, searchAll, _machine.getMatchCase(), ", "+      _frame.createFindResultsPanel(rm, tabLabel, searchStr, searchAll, _machine.getMatchCase(), ", "-    _model.refreshActiveDocument();  // Rationale: a giant findAll left the definitions pane is a strange state", "+//    _model.refreshActiveDocument();  // Rationale: a giant findAll left the definitions pane is a strange state", "+    panel.requestFocusInWindow();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c25460e399a24c4ade4930470de84f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "     public void removeFromDebugger()", "signatureAfterChange": "     public void removeFromDebugger()", "diff": ["-    public void removeFromDebugger() {", "-      while (getBreakpointManager().getRegions().size() > 0) {", "-        Breakpoint bp = getBreakpointManager().getRegions().get(0);", "-        getBreakpointManager().removeRegion(bp);", "-      }", "-    }", "+    public void removeFromDebugger() { getBreakpointManager().removeRegions(this); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d44edac30db26dd2fb6f9303c5379c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "0c8d146c06eba1c2298f0daceb39048930ad6325", "commitAfterChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 33, "signatureBeforeChange": "      private void _displayWatchpoints()", "signatureAfterChange": "      private void _displayWatchpoints()", "diff": ["-    DrJava.consoleOut().println(\"Watchpoints:\");", "-        DrJava.consoleOut().print(\"! \");", "-        DrJava.consoleOut().println(currWatchpoint);", "-        DrJava.consoleOut().println(currWatchpoint);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6428cd3ff8f382fa7808413cb5f441f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "34f2ea007a9d228268fe51193dea23995f823c51", "commitAfterChange": "fc5097bf3e220739875860f050e455b4fcf1d859", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 57, "signatureBeforeChange": "   synchronized void openAndScroll(OpenDefinitionsDocument doc, Location location)", "signatureAfterChange": "   synchronized void openAndScroll(final OpenDefinitionsDocument doc, final int line,                                   String className, final boolean shouldHighlight)", "diff": ["-  synchronized void openAndScroll(OpenDefinitionsDocument doc, Location location) {", "+   */", "+  synchronized void openAndScroll(final OpenDefinitionsDocument doc, final int line,", "+                                  String className, final boolean shouldHighlight) {", "-      final OpenDefinitionsDocument docF = doc;", "-      final Location locationF = location;", "-      ", "-          l.threadLocationUpdated(docF, locationF.lineNumber());", "+          l.threadLocationUpdated(doc, line, shouldHighlight);", "-      String className = location.declaringType().name();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e15bec5d37e6eb886bb2713121230421", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugStackData.java", "commitBeforeChange": "84d9616c0e996a5b5cfb00905acbb7cb89e76467", "commitAfterChange": "22c18addd3fbd5284d6b10beeea3492ad5e2e35d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DebugStackData(StackFrame frame)", "signatureAfterChange": "   public DebugStackData(String method, int line)", "diff": ["-  public DebugStackData(StackFrame frame) {", "-    //String method = \"(unknown)\";", "-    //String line = \"(unknown)\";", "-    _method = frame.location().declaringType().name() + \".\" +", "-      frame.location().method().name();", "-    //_method = method;", "-    _line = frame.location().lineNumber();", "+  public DebugStackData(String method, int line) {", "+    _method = method;", "+    _line = line;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e57f66a61d11aacfb9906314a5a820ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0bbc4205cb6cdac938c33646446cffe67a254d86", "commitAfterChange": "32c1a96bda59745efd4d13dbac97b7a11f8d7d24", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm)", "signatureAfterChange": "   protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm)", "diff": ["-      final int key = _doc.getUndoManager().startCompoundEdit();", "+      // final int key = _doc.getUndoManager().startCompoundEdit(); //Commented out in regards to French KeyBoard Fix", "-        _doc.getUndoManager().endCompoundEdit(key);", "+        //_doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit", "+        endCompoundEdit();", "-        _doc.getUndoManager().endCompoundEdit(key);", "-        _doc.getUndoManager().undo(key);", "+        //        _doc.getUndoManager().endCompoundEdit(key); fixed for french keyboard fix", "+        endCompoundEdit();", "+        _doc.getUndoManager().undo();", "-        _doc.getUndoManager().endCompoundEdit(key);", "+", "+  // _doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit()", "+        endCompoundEdit();"]}], "num": 9784}