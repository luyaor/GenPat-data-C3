{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86ae0d82cb4540bdfcbd6b0a08ddc7da", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b064680271d1e738dabbed42beb4b11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["-    _globalContext.define(\"B\", Boolean.class);", "+    _globalContext.define(\"B\", Boolean.class);", "+    _globalContext.define(\"I\", int[].class);", "+    ", "+    try {", "+      _interpreter.interpret(\"int x = 0;\");", "+      _interpreter.interpret(\"Integer X = new Integer(0);\");", "+      _interpreter.interpret(\"Boolean B = Boolean.FALSE;\");", "+      _interpreter.interpret(\"boolean b = false;\");", "+      _interpreter.interpret(\"int[] I = {1, 2, 3};\");", "+    }", "+    catch (ExceptionReturnedException ere) {", "+      fail(\"Should have been able to declare variables for interpreter.\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80d64e1d5f2afb906b1f56345b2ecd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testOpenRealFileAllowAbandon()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testOpenRealFile()     throws BadLocationException, IOException", "diff": ["-  public void testOpenRealFileAllowAbandon()", "+   */", "+  public void testOpenRealFile()", "-    _model.openFile(new FileSelector(tempFile));", "-    listener.assertOpenCount(1);", "-    assertModified(false);", "-    assertContents(BAR_TEXT);", "+    try {", "+      OpenDefinitionsDocument doc = _model.openFile(new FileSelector(tempFile));", "+      listener.assertOpenCount(1);", "+      assertModified(false, doc);", "+      assertContents(BAR_TEXT, doc);", "+    }", "+    catch (OperationCanceledException oce) {", "+      // Should not be canceled", "+      fail(\"Open was unexpectedly canceled!\");", "+    }"]}], "num": 12597}