{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a73e7e7c1a5dfc9425d7a2bb363c6ac6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd9e250fe013cb9ca029dc2ede24ad9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "7d7d651695cc4a26c75cdfb50217f79acc4c45a4", "commitAfterChange": "641e8d72a9e70ecaee90e1431ba7ab971af51ca9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testSystemIn()", "signatureAfterChange": "      public void testSystemIn()", "diff": ["-      assertEquals(\"Should have returned the correct text.\", \"test-text\\n\", buf.toString());", "+      // we don't expect the newline anymore, this is now added by the input box", "+      assertEquals(\"Should have returned the correct text.\", \"test-text\", buf.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ba108bb1fd529bb2a29c6519d268045", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "c806186de1ee7459e18ea735c68146d90041369a", "commitAfterChange": "48bd01bfa11f5e14cb30ac1d3cf033310b2e45bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010904-1436\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010908-2252\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "208a186d3bd73f5575ca6bc1e357fa71", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "7d82d9a9e73d6d4daf3c6fb1f950005e1d7ff33e", "commitAfterChange": "6a6368ca8d833ea78d352b3e04edd79feda76cc6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010817-1437\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1152\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25866ab42c562a883fdcdc1b923540bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r   \r   public void testMultipleNodes() throws Exception", "signatureAfterChange": "      public void testMultipleNodes() throws Exception", "diff": ["-  \r", "-  public void testMultipleNodes() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "-                                                    + \"  <bar>abc</bar>\\n\"\r", "-                                                    + \"  <bar>ghi</bar>\\n\"\r", "-                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"\r", "-                                                    + \"</foo>\"));\r", "-    List<String> r = xc.getMultiple(\"foo/bar\");\r", "-    assertEquals(2, r.size());\r", "-    assertEquals(\"abc\", r.get(0));\r", "-    assertEquals(\"ghi\", r.get(1));\r", "-  }\r", "+  ", "+  public void testMultipleNodes() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\\n\"", "+                                                    + \"  <bar>abc</bar>\\n\"", "+                                                    + \"  <bar>ghi</bar>\\n\"", "+                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"", "+                                                    + \"</foo>\"));", "+    List<String> r = xc.getMultiple(\"foo/bar\");", "+    assertEquals(2, r.size());", "+    assertEquals(\"abc\", r.get(0));", "+    assertEquals(\"ghi\", r.get(1));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c570e80346471f37df676d442deeb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "27f76b3570f92cb654b7ee802931f28fe5414773", "commitAfterChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 411, "signatureBeforeChange": "     private void updateLocation(int line, int col)", "signatureAfterChange": "     private void updateLocation(int line, int col)", "diff": ["-      _currLocationField.setText(line + \":\" + col +\"\\t\");", "+      _currLocationField.setText(line + \":\" + col +\" \\t\");  // Space before \"\\t\" required on Mac to avoid obscuring"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e04baeaa7f09cb2c58f96252970e9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "bfbbbb34f309b13ef404f393392d7ea8745940cd", "commitAfterChange": "9d671cad5f849049059b2e199aea7279dd398525", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "    public JPanel _mainDocumentSelector()", "signatureAfterChange": "    public JPanel _mainDocumentSelector()", "diff": ["-    chooser.setDialogTitle(\"Select Main Document\");", "+    chooser.setDialogTitle(\"Select Main Class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c168bc2afa664dd36dbfd812c097575", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "4a6b642f3afd5dae71256130cdcaaf4fda509249", "commitAfterChange": "ab1acd6921fa73274023da473a4888d5bdd6b5f2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testWierdFuckup()", "signatureAfterChange": "  \tpublic void testWierdFuckup()", "diff": ["-\t\t\t\tassertEquals(\"0.1\", \"hello\\n\", doc.getText(0, doc.getLength()));\t\t\t", "+\t\t\t\tassertEquals(\"0.1\", \"hello\\n  \", doc.getText(0, doc.getLength()));\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efa81d19b816c22831ce76f6be17dec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testNonTrivialCollectionInForeach() throws ParseException", "signatureAfterChange": "      public void testNonTrivialCollectionInForeach() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceType: String) i) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: List) [(koala.dynamicjava.tree.StringLiteral: \\\"asdf\\\" asdf class java.lang.String), (koala.dynamicjava.tree.StringLiteral: \\\"asfd\\\" asfd class java.lang.String)]) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceTypeName: String) i) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: List) [(koala.dynamicjava.tree.StringLiteral: \\\"asdf\\\" asdf class java.lang.String), (koala.dynamicjava.tree.StringLiteral: \\\"asfd\\\" asfd class java.lang.String)]) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6176c280f9e4817963f9ccc66dd9cba5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-    handleInnerInterfaceDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \"$\" + that.getName().getText());", "+    handleInnerInterfaceDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \".\" + that.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6401c2f384dfd6e3a8edbb9e746cb7ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "555c3f9f770785d516b1e2fbd1fbdabdbbf2eb61", "commitAfterChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "methodNumberBeforeChange": 545, "methodNumberAfterChange": 545, "signatureBeforeChange": "          public void interactionEnded()", "signatureAfterChange": "          public void interactionEnded()", "diff": ["-            if (lastError.startsWith(\"Undefined class '\") && lastError.endsWith(\"'\")) {", "+            if (lastError.startsWith(\"Static Error: Undefined class '\") && lastError.endsWith(\"'\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8894a4fe99aabdad7100d3d5e77611", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "      public void testArrayAllocation() throws InterpreterException", "signatureAfterChange": "      public void testArrayAllocation() throws InterpreterException", "diff": ["-    String sizeExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 5 5 int)]))\";", "+    String sizeExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 5 5 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a47491061aec1ae8b09b1a3b7daa3e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void testNotEquals() throws InterpreterException", "signatureAfterChange": "   public void testNotEquals() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af073478de4a8e576916a4bb24d7edb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public void testComplimentingOneBoolean() throws InterpreterException", "signatureAfterChange": "   public void testComplimentingOneBoolean() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 24 24 int)]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 24 24 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9db63ab683174c011c7f586de0c654", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "009201ea5473f7ca59ef7e83c1f67ec0f1be92b0", "commitAfterChange": "6ca20aa23bdf7506876b7d41215a01a9cd168d71", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "      public void assertInterpreterReadyCount(int i)", "signatureAfterChange": "      public void assertInterpreterReadyCount(int i)", "diff": ["-      assertEquals(\"number of times interactionsReset fired\", i, interpreterReadyCount);", "+      assertEquals(\"number of times interpreterReady fired\", i, interpreterReadyCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c7e4f3de146e00e8a3cb2dc13a6e07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "536c00239bf186b1c81bb087b131d4cbb6302c23", "commitAfterChange": "ed1069955672117b4c9aac0875c5704fb5071788", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r   \r   public String toString()", "signatureAfterChange": "\r   \r   public String toString()", "diff": ["-  public String toString() { return super.toString() + \" at \" + _location + \"\\n\" + bootClassPath(); }\r", "+  public String toString() { return super.toString() + \" at \" + _location + \", boot classpath: \" + bootClassPath(); }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b62165e31317aed6edcd5f867d6099f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/EagerFileListProperty.java", "commitBeforeChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "commitAfterChange": "f88a51007770d2637f5170b66e852db63e500083", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void resetAttributes()", "signatureAfterChange": "   public void resetAttributes()", "diff": ["-    _attributes.put(\"dir\", _dir);", "+    _attributes.put(\"rel\", _dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8400d944f5985f49b4666200053d718", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4fb080a38871d6561e99bfdfdb664ff987fb15c5", "commitAfterChange": "d8298bba22e8675e12094f851d61d88ab6c6f68a", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 592, "signatureBeforeChange": "   void askToIncreaseMasterMaxHeap()", "signatureAfterChange": "   void askToIncreaseMasterMaxHeap()", "diff": ["-                                                     \"Your program ran out of memory. You may try to enter a larger\\n\"+", "+                                                     \"DrJava ran out of memory. You may try to enter a larger\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c3a4756011ea569869c83b2bdd84e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "009201ea5473f7ca59ef7e83c1f67ec0f1be92b0", "commitAfterChange": "6ca20aa23bdf7506876b7d41215a01a9cd168d71", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "      public void assertInterpreterResetFailedCount(int i)", "signatureAfterChange": "      public void assertInterpreterResetFailedCount(int i)", "diff": ["-      assertEquals(\"number of times interactionsResetFailed fired\", i, interpreterResetFailedCount);", "+      assertEquals(\"number of times interpreterResetFailed fired\", i, interpreterResetFailedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc998edb2ebd94f2162bb5488e60d28e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testSimpleFor() throws ParseException", "signatureAfterChange": "    public void testSimpleFor() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntTypeName: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.QualifiedName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntTypeName: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.AmbiguousName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.AmbiguousName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a5151968e8a6987cf357b91567619b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testMinusOperator() throws InterpreterException", "signatureAfterChange": "   public void testMinusOperator() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 10 10 int)]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 10 10 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5a2b155c90116e9a3dd39e250d22cbb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void _notifyLock()", "signatureAfterChange": "   protected void _notifyLock()", "diff": ["-      _log.log(\"notified, count = \"+_pendingNotifies);     ", "+      _log.log(\"notified; count = \" + _pendingNotifies);     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eef6e390f093ed2f42774d9e8f704b9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionHasCharPrecedingOpenBraceTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNoEquals() throws BadLocationException", "signatureAfterChange": "   public void testNoEquals() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\",    ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"At 0.\",    ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38c66d91ede603fbb348a0992e851c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testSmallestInt() throws ParseException", "signatureAfterChange": "   public void testSmallestInt() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4259d32473b19f6abae0d3202c1e2a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "59d5a7ea5784619a931e9fdef9de2a8ec9f89b2b", "commitAfterChange": "aa22056e3e8260253bc014e71a3e1da99c0bc773", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010807-1725\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010807-1835\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d31512677205ec7748ec709bc46db3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "96a09f26e797e5676f0cf2606ce69c3ce24bf921", "commitAfterChange": "17b59cf1640c29fbcc5ed0fdfe96f8053eaa1da0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   \r   private static FullVersion guessVersion(File f)", "signatureAfterChange": "\r   \r   private static FullVersion guessVersion(File f)", "diff": ["-      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d + \")) { result = JavaVersion.parseFullVersion(parsedVersion = name,vendor,vendor); }\r", "+      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\")) { result = JavaVersion.parseFullVersion(parsedVersion = name,vendor,vendor); }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e6fe5370c382318b2a10544999f34a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "f68cf86a7b77c6be6c5664ebc77bddbfe7e5ec96", "commitAfterChange": "b1771db3e25f16df4acd21624b8bb5b835b04c2b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1625\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1834\");"]}], "num": 17340}