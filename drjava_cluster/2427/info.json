{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea1f58b8dc37e1e677b36c9f52b8e5af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ae56b837cf3116e2e7905839efb80c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 257, "methodNumberAfterChange": 257, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-    ", "-    ", "-    ", "+        ", "-    ", "-    // check for new version if desired by user", "-    if (DrJava.getConfig().getSetting(DIALOG_DRJAVA_SURVEY_ENABLED) && !edu.rice.cs.util.swing.Utilities.TEST_MODE) {", "-      int days = DrJava.getConfig().getSetting(DRJAVA_SURVEY_DAYS);", "-      java.util.Date nextCheck = ", "-        new java.util.Date(DrJava.getConfig().getSetting(OptionConstants.LAST_DRJAVA_SURVEY)", "-                             + days * 24L * 60 * 60 * 1000); // x days after last check; 24L ensures long accumulation", "-      if (new java.util.Date().after(nextCheck)) {", "-        SwingUtilities.invokeLater(new Runnable() {", "-          public void run() {", "-            DrJavaSurveyPopup popup = new DrJavaSurveyPopup(MainFrame.this);", "-            popup.setVisible(true);", "-          }", "-        });", "+    else {", "+      // check for new version if desired by user", "+      // but only if we haven't just asked if the user wants to download a new version", "+      // two dialogs on program start is too much clutter", "+      if (DrJava.getConfig().getSetting(DIALOG_DRJAVA_SURVEY_ENABLED) && !edu.rice.cs.util.swing.Utilities.TEST_MODE) {", "+        int days = DrJava.getConfig().getSetting(DRJAVA_SURVEY_DAYS);", "+        java.util.Date nextCheck = ", "+          new java.util.Date(DrJava.getConfig().getSetting(OptionConstants.LAST_DRJAVA_SURVEY)", "+                               + days * 24L * 60 * 60 * 1000); // x days after last check; 24L ensures long accumulation", "+        if (new java.util.Date().after(nextCheck)) {", "+          SwingUtilities.invokeLater(new Runnable() {", "+            public void run() {", "+              DrJavaSurveyPopup popup = new DrJavaSurveyPopup(MainFrame.this);", "+              popup.setVisible(true);", "+            }", "+          });", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4021b2879ff90d1086e70d181d57c3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "commitAfterChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 270, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-    _tabbedPanesFrame = new TabbedPanesFrame(MainFrame.this,_tabbedPane,_mainSplit);", "+    _tabbedPanesFrame = new DetachedFrame(MainFrame.this, new Lambda<Void,DetachedFrame>() {", "+      public Void apply(DetachedFrame frame) {", "+        frame.getContentPane().add(_tabbedPane);", "+        return null;", "+      }", "+    }, new Lambda<Void,DetachedFrame>() {", "+      public Void apply(DetachedFrame frame) {", "+        _mainSplit.setBottomComponent(_tabbedPane);", "+        return null;", "+      }", "+    });", "+    ", "+    // Create detachable debug frame", "+    if (_debugPanel!=null) { // using debugger", "+      _debugFrame = new DetachedFrame(MainFrame.this, new Lambda<Void,DetachedFrame>() {", "+        public Void apply(DetachedFrame frame) {", "+          frame.getContentPane().add(_debugPanel);", "+          return null;", "+        }", "+      }, new Lambda<Void,DetachedFrame>() {", "+        public Void apply(DetachedFrame frame) {", "+          _debugSplitPane.setTopComponent(_docSplitPane);", "+          _debugSplitPane.setBottomComponent(_debugPanel);", "+          _mainSplit.setTopComponent(_debugSplitPane);", "+          return null;", "+        }", "+      });", "+      _debugFrame.addWindowListener(new WindowAdapter() {", "+        public void windowClosing(WindowEvent we) {", "+          if (_debugFrame==null) return; // debugger not used", "+          _detachDebugFrameMenuItem.setSelected(false);", "+          DrJava.getConfig().setSetting(DETACH_DEBUGGER, false);", "+        }", "+      });", "+    }", "+    else { // not using debugger", "+      _debugFrame = null;", "+    }", "+    ", "+    initDebugFrame();", "-        int days = DrJava.getConfig().getSetting(DRJAVA_SURVEY_DAYS);", "-        java.util.Date nextCheck = ", "-          new java.util.Date(DrJava.getConfig().getSetting(OptionConstants.LAST_DRJAVA_SURVEY)", "-                               + days * 24L * 60 * 60 * 1000); // x days after last check; 24L ensures long accumulation", "-        if (new java.util.Date().after(nextCheck)) {", "+        if (DrJavaSurveyPopup.maySubmitSurvey()) {", "+          // either enough days have passed, or the configuration has changed"]}], "num": 2427}