{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c6bbe4182aaa4ac62e23e8db61bf1b7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a88c9a0a3cebb82b362136d699cd462", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testHandParsedGenericClass()", "signatureAfterChange": "      public void testHandParsedGenericClass()", "diff": ["-    FormalParameter param = new FormalParameter(false, t, \"_n\");", "+    FormalParameter param = new FormalParameter(false, t, \"_n\", false);", "+    List<List<? extends Type>> alltargs = new LinkedList<List<? extends Type>>();", "+    alltargs.add(new LinkedList<ReferenceType>());", "+    alltargs.add(new LinkedList<ReferenceType>());", "+    alltargs.add(targs);", "-    Type genericCType = new GenericReferenceType(ids, targs);", "+    Type genericCType = new GenericReferenceType(ids, alltargs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9966a605c028da43728723d90f4f37e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testSimpleAllocation()", "signatureAfterChange": "      public void testSimpleAllocation()", "diff": ["+    List<List<? extends Type>> alltargs = new LinkedList<List<? extends Type>>();", "+    alltargs.add(new LinkedList<ReferenceType>());", "+    alltargs.add(new LinkedList<ReferenceType>());", "+    alltargs.add(targs);", "-    Type genericListType = new GenericReferenceType(ids, targs);", "+    Type genericListType = new GenericReferenceType(ids, alltargs);"]}], "num": 23823}