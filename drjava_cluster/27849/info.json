{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af746fca685429c8d91f23b935f47739", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "219c471eef49a253c93817158d0d1e41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideComment.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) {", "-", "-    int here = doc.getCurrentLocation();", "-    int distToStart = here - doc.getLineStartPos(here);", "-    doc.resetReducedModelLocation();", "-    ReducedModelState state = doc.stateAtRelLocation(-distToStart);", "-    ", "-    return (state.equals(ReducedModelStates.INSIDE_BLOCK_COMMENT));", "+  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) { ", "+    return doc.posInBlockComment(doc.getCurrentLocation()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da6d92ed07cf67f10d63463c4696fcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private int getWhiteSpaceBetween(int relStart, int relEnd) throws BadLocationException", "signatureAfterChange": "   public boolean posInBlockComment(final int pos)", "diff": ["+  public boolean posInBlockComment(final int pos) {", "+    final int here = _currentLocation;", "+    final int distToStart = here - getLineStartPos(here);", "+    _reduced.resetLocation();", "+    ReducedModelState state = stateAtRelLocation(-distToStart);", "+    ", "+    return (state.equals(ReducedModelState.INSIDE_BLOCK_COMMENT));", "+  }", "-    */", "-  private int getWhiteSpaceBetween(int relStart, int relEnd) throws BadLocationException {", "-    String text = this.getText(_currentLocation - relStart, Math.abs(relStart - relEnd));", "-    int length = text.length();", "-    while ((i < length) && (text.charAt(i) == ' '))", "-      i++;", "-    return  i;"]}], "num": 27849}