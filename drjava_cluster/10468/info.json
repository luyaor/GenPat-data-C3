{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "460f01e3633fb2f833b5f9b7d715e0d6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5359777d095415ad265797a53a68e083", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String getText()", "signatureAfterChange": "     public String getText()", "diff": ["-      String image = _rec.getText();  // There is a technical race here; _doc could be set and modified before here", "-      if (image != null) return image;", "-      synchronized(_cacheLock) { // lock the state of this DocManager", "-        if (_doc != null) return _doc.getText(); // _doc may have changed since test outside of _cacheLock", "-        return makeDocument().getText();", "-      }", "+      return _rec.getText();  // There is a technical race here; _doc could be set and modified before here", "+//      if (image != null) return image;", "+//      synchronized(_cacheLock) { // lock the state of this DocManager", "+//        if (_doc != null) return _doc.getText(); // _doc may have changed since test outside of _cacheLock", "+//        return makeDocument().getText();", "+//      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5893d4a03940d0df89ad827661f50e1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "0bcb8da0b79cf218cc2712f201e3771599202c44", "commitAfterChange": "c34979036dca11c3afc06b42fcb087eaf85bc790", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList, boolean together)", "signatureAfterChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList)", "diff": ["-  public boolean closeFiles(List<OpenDefinitionsDocument> docList, boolean together) {", "+  public boolean closeFiles(List<OpenDefinitionsDocument> docList) {", "-", "-    if (together) { // if together then do all prompting at once", "-      for (OpenDefinitionsDocument doc : docList) { if (!doc.canAbandonFile()) return false; }", "-    }", "-    // create new file before you start closing in order to have ", "-    // an active file that's not in the list of closing files.", "-    // If the current active document is closed before the MainFrame", "-    // can switch to a new file, drjava throws some unexpected exceptions", "-    // relating to the document not being found.", "+    /* Force the user to save or discard all modified files in docList */", "+    for (OpenDefinitionsDocument doc : docList) { if (!doc.canAbandonFile()) return false; }", "+    ", "+    // If all files are being closed, create a new file before starTing in order to have ", "+    // an active file that is not in the list of closing files.", "+    ", "+    // Set the active document to the document just after the last document or the document just before the ", "+    // first document in docList.", "-    // Close all files. If together, then don't let it prompt a 2nd time;", "-    // but, if not together, then call closeFile which may prompt the user.", "-    for (OpenDefinitionsDocument doc : docList) {", "-      if (together) closeFileWithoutPrompt(doc);", "-      else if (! closeFileHelper(doc)) {", "-        setActiveDocument(doc);", "-        if (newDoc != null) closeFileHelper(newDoc); // undo previous newFile() ", "-        return false;", "-      }", "-    }  ", "+    // Close the files in docList. ", "+    for (OpenDefinitionsDocument doc : docList) { closeFileWithoutPrompt(doc); }  "]}], "num": 10468}