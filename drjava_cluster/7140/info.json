{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bd9b1b84952303e4fc909b4de60cfe2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b0703ee38ed748772d3639dcf9715bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "commitAfterChange": "6df23b9d947a754084cff460e34d203b0d81fd48", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public FindReplaceMachine createFindReplaceMachine()", "signatureAfterChange": "      private int _getIndexOfDocument(Document doc)", "diff": ["+  ", "+  private int _getIndexOfDocument(Document doc) {", "+    int index = 0;", "+    Enumeration en = _definitionsDocs.elements();", "+    while (en.hasMoreElements()) {", "+      if (doc == ((OpenDefinitionsDocument)en.nextElement()).getDocument()) {", "+        return index;", "+      }", "+      else {", "+        index++;", "+      }", "+    }", "+    return -1;", "+  }", "-    public FindReplaceMachine createFindReplaceMachine() {", "-      return new FindReplaceMachine();", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8714b44ba7fb4cc3b1730723e5f5749", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "commitAfterChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public InternalCellRenderer(JList list)", "signatureAfterChange": "   public boolean selectDocumentAt(int x, int y)", "diff": ["-    ", "-    public InternalCellRenderer(JList list) {", "-      _list = list;", "-      setOpaque(true);", "-    }", "+   */", "+  public boolean selectDocumentAt(int x, int y) {", "+    int idx = locationToIndex(new java.awt.Point(x,y));", "+    java.awt.Rectangle rect = getCellBounds(idx, idx);", "+    ", "+    if(rect.contains(x, y)){", "+      setActiveDoc(_docs.get(idx));", "+      return true;", "+    }else{", "+      return false;", "+    }", "+  }"]}], "num": 7140}