{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad0fb83d230b6fdfbf6d830369aa1d50", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4cfea7136659999e7907c299262546", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "          public void testGetInnerClassOrInterface()", "signatureAfterChange": "          public void testGetInnerClassOrInterface()", "diff": ["-    ", "+      sd5.setInterface(true);", "+      sd7.setIsContinuation(false);", "-                    new NullLiteral(SourceInfo.NO_INFO));", "+                    new NullLiteral(SourceInfo.NONE));", "+      interfaceInner.setIsContinuation(false);", "+      interfaceInner.setInterface(true);", "+", "+      superInner.setIsContinuation(false);", "+      myInterface.setInterface(true);", "+      myInterface.setIsContinuation(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9987f57a6f27fd2ed6782017dadc1719", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "signatureAfterChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "diff": ["-    buf.append(\"/**\\n* \");", "-    buf.append(\"JUnit test class.\");", "-    buf.append(\"\\n*/\\n\");", "+    buf.append(\"/**\\n\");", "+    buf.append(\"* A JUnit test case class.\\n\");", "+    buf.append(\"* Every method starting with the word \\\"test\\\" will be called when running\\n\");", "+    buf.append(\"* the test with JUnit.\\n\");", "+    buf.append(\"*/\\n\");", "-      buf.append(\"/**\\n* \");", "-      buf.append(\"Sets up each test.\");", "-      buf.append(\"\\n*/\\n\");", "+      buf.append(\"/**\\n\");", "+      buf.append(\"* This method is called before each test method, to perform any common\\n\");", "+      buf.append(\"* setup if necessary.\\n\");", "+      buf.append(\"*/\\n\");", "-      buf.append(\"/**\\n* \");", "-      buf.append(\"Cleans up after each test.\");", "-      buf.append(\"\\n*/\\n\");", "+      buf.append(\"/**\\n\");", "+      buf.append(\"* This method is called after each test method, to perform any common\\n\");", "+      buf.append(\"* clean-up if necessary.\\n\");", "+      buf.append(\"*/\\n\");", "-    buf.append(\"/**\\n* \");", "-    buf.append(\"Test method.\");", "-    buf.append(\"\\n*/\\n\");", "-    buf.append(\"public void test() {\\n}\\n\");", "+    buf.append(\"/**\\n\");", "+    buf.append(\"* A test method.\\n\");", "+    buf.append(\"* (Replace \\\"X\\\" with a few words describing the test.  You may write\\n\");", "+    buf.append(\"* as many \\\"testSomething\\\" methods in this class as you wish,\\n\");", "+    buf.append(\"* and each one will be executed when running JUnit over this class.)\\n\");", "+    buf.append(\"*/\\n\");", "+    buf.append(\"public void testX() {\\n}\\n\");"]}], "num": 4057}