{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfd449e61fb3139ca1cde3f0af4e8de3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9813a7835103a73ec61521e071ac0c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "commitAfterChange": "b5f59af8481ed1aa24e82d114a52e3948d4e83f5", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 239, "signatureBeforeChange": "      public void setUpDrJavaProperties()", "signatureAfterChange": "      public void setUpDrJavaProperties()", "diff": ["-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.all.files\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getOpenDefinitionsDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(File.pathSeparator);", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(File.pathSeparator.length());", "-      }", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.all.files\", File.pathSeparator) {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getOpenDefinitionsDocuments(); }", "-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.project.files\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getProjectDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(File.pathSeparator);", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(File.pathSeparator.length());", "-      }", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.project.files\", File.pathSeparator) {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getProjectDocuments(); }", "-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.included.files\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getAuxiliaryDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(File.pathSeparator);", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(File.pathSeparator.length());", "-      }", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.included.files\", File.pathSeparator) {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getAuxiliaryDocuments(); }", "-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.external.files\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getNonProjectDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(File.pathSeparator);", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(File.pathSeparator.length());", "-      }", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.external.files\", File.pathSeparator) {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getNonProjectDocuments(); }", "-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.all.files.space\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getOpenDefinitionsDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(' ');", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(1);", "-      }", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.all.files.space\", \" \") {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getOpenDefinitionsDocuments(); }", "-    ", "-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.project.files.space\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getProjectDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(' ');", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(1);", "-      }", "-    }).listenToInvalidatesOf(PropertyMaps.ONLY.getProperty(\"DrJava\", \"drjava.project.files\"));", "-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.included.files.space\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getAuxiliaryDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(' ');", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(1);", "-      }", "-    }).listenToInvalidatesOf(PropertyMaps.ONLY.getProperty(\"DrJava\", \"drjava.included.files\"));", "-    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.external.files.space\") {", "-      public void update() {", "-        List<OpenDefinitionsDocument> l = _model.getNonProjectDocuments();", "-        StringBuilder sb = new StringBuilder();", "-        for(OpenDefinitionsDocument odd: l) {", "-          sb.append(' ');", "-          String f = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(odd.getRawFile().toString());", "-          sb.append(f);", "-        }", "-        _value = sb.toString().substring(1);", "-      }", "-    }).listenToInvalidatesOf(PropertyMaps.ONLY.getProperty(\"DrJava\", \"drjava.external.files\"));", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.project.files.space\", \" \") {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getProjectDocuments(); }", "+    }).listenToInvalidatesOf(PropertyMaps.ONLY.getProperty(\"DrJava\", \"drjava.all.files\"));", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.included.files.space\", \" \") {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getAuxiliaryDocuments(); }", "+    }).listenToInvalidatesOf(PropertyMaps.ONLY.getProperty(\"DrJava\", \"drjava.all.files\"));", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerFileListProperty(\"drjava.external.files.space\", \" \") {", "+      protected List<OpenDefinitionsDocument> getList() { return _model.getNonProjectDocuments(); }", "+    }).listenToInvalidatesOf(PropertyMaps.ONLY.getProperty(\"DrJava\", \"drjava.all.files\"));    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca5f88d70a4b99b0e3c7ff8b15fef0a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _init(Window owner, File root, boolean allowMultiple, boolean showHidden)", "signatureAfterChange": "   private void _init(Component owner, File root, boolean allowMultiple, boolean showHidden)", "diff": ["-  private void _init(Window owner, File root, boolean allowMultiple, boolean showHidden) {", "-    if (root != null && !root.isDirectory()) {", "-      root = root.getAbsoluteFile().getParentFile();", "-    }", "+  private void _init(Component owner, File root, boolean allowMultiple, boolean showHidden) {", "+    ", "+    if (root != null && ! root.isDirectory()) setCurrentDirectory(root.getAbsoluteFile().getParentFile());", "-    _treeIsGenerated = false;", "-    _forceTreeGenerate = true;", "-    _embedded = false;", "-    _defaultSelectedFile = null;", "-    _allowMultiple = allowMultiple;", "-    _showHidden = showHidden;", "-    _finalResult = ERROR_OPTION;", "-    _choosableDirs = new LinkedList<FileFilter>();", "-    _normalFileFilters = new LinkedList<FileFilter>();", "-    _fileSelectionListeners = new Hashtable<FileSelectionListener, TreeSelectionListener>();", "-    _fdManager = new DefaultFileDisplayManager();", "-    _glassPane = new GlassPane();", "-    _glassPane.setVisible(false);", "-        ", "-    // This sets the root file and generates the tree", "-    setRootFile(root);", "-    ", "-    _offLimits = new HashSet<File>();", "-    File[] shellRoots = (File[])ShellFolder.get(\"fileChooserComboBoxFolders\");", "-    for(File f : shellRoots) {", "-      _offLimits.add(f);", "-    }", "-    ", "-    ", "-    GridBagLayout layout = new GridBagLayout();", "-    GridBagConstraints c = new GridBagConstraints();", "-    c.anchor = GridBagConstraints.SOUTHWEST;", "-    _topComponentPanel = new JPanel(layout);", "-    _topComponentPanel.setBorder(BorderFactory.createEmptyBorder(5,5,0,5));", "-    _topLabel = new JLabel(_topLabelText);", "-    layout.setConstraints(_topLabel, c);", "-    _topComponentPanel.add(_topLabel);", "-        ", "-    _northPanel = new JPanel(new BorderLayout());", "-    _northPanel.setBorder(BorderFactory.createEmptyBorder(5,5,0,5));", "-    _northPanel.add(_topComponentPanel, BorderLayout.WEST);", "-//    _northPanel.add(_newButtonPanel, BorderLayout.EAST);", "-    ", "-    ", "-    _scroller = new JScrollPane();", "-    Border innerBorder = BorderFactory.createBevelBorder(BevelBorder.LOWERED);", "-//    Border outerBorder = BorderFactory.createEmptyBorder(0,10,0,10);", "-//    Border fullBorder = BorderFactory.createCompoundBorder(outerBorder,innerBorder);", "-    _scroller.setBorder(innerBorder);", "-    ", "-    _accessoryPanel = new JPanel(new BorderLayout());", "-    _accessoryPanel.setBorder(BorderFactory.createEmptyBorder(0,10,0,10));", "-    ", "-    _approveButton = new JButton(_approveText);", "-    _approveButton.setEnabled(false);", "-    ", "-    _cancelButton = new JButton(_cancelText);", "-    ", "-    ", "-    JPanel _okCancelPanel = new JPanel(new FlowLayout());", "-    _okCancelPanel.add(_approveButton);", "-    _okCancelPanel.add(_cancelButton);", "-    ", "-    _newFolderButton = new JButton(\"Make New Folder\"/**,_newFolderIcon**/);", "-    _newFolderButton.setEnabled(false);", "-    _newFolderButton.setMargin(new Insets(2,2,2,2));", "-    _newFolderButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startCreateNewDirectory();", "-      }", "+    setMultiSelectionEnabled(allowMultiple);", "+    setFileHidingEnabled(! showHidden);", "+    setFileSelectionMode(DIRECTORIES_ONLY);", "+    setDialogType(CUSTOM_DIALOG);", "+    setApproveButtonText(\"Choose\");", "+    setFileFilter(new FileFilter() {", "+      public boolean accept(File f) { return true; }", "+      public String getDescription() { return \"All Folders\"; }", "-    ", "-    _newButtonPanel = new JPanel();", "-    _newButtonPanel.add(_newFolderButton);", "-    _newButtonPanel.setVisible(false);", "-    ", "-    _buttonPanel = new JPanel(new BorderLayout());", "-    _buttonPanel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));", "-    _buttonPanel.add(_okCancelPanel, BorderLayout.EAST);", "-    _buttonPanel.add(_newButtonPanel, BorderLayout.WEST);", "-    ", "-    ", "-    _southPanel = new JPanel(new BorderLayout());", "-    _southPanel.add(_accessoryPanel, BorderLayout.CENTER);", "-    _southPanel.add(_buttonPanel, BorderLayout.SOUTH);", "-        ", "-    _treePopup = new JPopupMenu();", "-    ", "-    _collapseItem = new JMenuItem(\"Collapse\");", "-    _treePopup.add(_collapseItem);", "-    _collapseItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _tree.collapsePath(_tree.getSelectionPath());", "-      }", "-    });", "-    _expandItem = new JMenuItem(\"Expand\");", "-    _treePopup.add(_expandItem);", "-    _expandItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _tree.expandPath(_tree.getSelectionPath());", "-      }", "-    });", "-    ", "-    _treePopup.addSeparator();", "-    _popSep = (JPopupMenu.Separator)_treePopup.getComponent(2);", "-    ", "-    _refreshItem = new JMenuItem(\"Refresh\");", "-    _treePopup.add(_refreshItem);", "-    _refreshItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startRefreshNode();", "-      }", "-    });", "-    _renameItem = new JMenuItem(\"Rename\");", "-    _treePopup.add(_renameItem);", "-    _renameItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startRename();", "-      }", "-    });", "-    _deleteItem = new JMenuItem(\"Delete\");", "-    _treePopup.add(_deleteItem);", "-    _deleteItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {    ", "-        startDelete();", "-      }", "-    });", "-    _newFolderItem = new JMenuItem(\"New Folder\");", "-    _treePopup.add(_newFolderItem);", "-    _newFolderItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startCreateNewDirectory();", "-      }", "-    });", "-        ", "-    setEditable(false);", "-    this.setLayout(new BorderLayout());", "-    this.add(_scroller, BorderLayout.CENTER);", "-    this.setBackground(Color.blue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d728841dcad8acc9ead2e15e26a5ed96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0c95fc4366bd5654ddd2a4c942b1634c96be89c8", "commitAfterChange": "57576abf3c61a61cbc760b4b0e10c533bcfaab23", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void _newClassFileGUI()", "signatureAfterChange": "   public void _newJavaClass()", "diff": ["- //newclass addition", "-  public void _newClassFileGUI(){", "-    ", "-    final JFrame frame = new JFrame(\"New Java Class\");", "-    final JButton createClass = new JButton(\"Create\");", "-    final JTextField className = new JTextField(20);", "-    final JTextField interfaces = new JTextField(20);", "-    final JTextField superClass = new JTextField(20);", "-    final JLabel classNameLable = new JLabel(\"Class Name: \");", "-    final JLabel superClassLabel = new JLabel(\"SuperClass: \");", "-    final JLabel interfacesLabel = new JLabel(\"InterFaces: \");", "-    final JLabel modifierLabel = new JLabel(\"Modifier: \");", "-    final JLabel blankLabel = new JLabel(\"                \");", "-    ", "-    ", "-    final JLabel errorMessage = new JLabel();", "-    final JRadioButton defaultRadio= new JRadioButton(\"default\", false);", "-    final JRadioButton publicRadio= new JRadioButton(\"public\", true);", "-    final JRadioButton abstractRadio= new JRadioButton(\"abstract\", false);", "-    final JRadioButton finalRadio= new JRadioButton(\"final\", false);", "-    final ButtonGroup group1 = new ButtonGroup();", "-    final ButtonGroup group2 = new ButtonGroup();", "-    final JCheckBox mainMethod = new JCheckBox(\"Include main method\");", "-    final JCheckBox classConstructor = new JCheckBox(\"Include class constructor\");", "-    ", "-    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE );", "-    frame.setSize(250, 350);", "-    frame.setLocationRelativeTo(null);", "-    frame.setVisible(true);", "-    ", "-    frame.setLayout(new FlowLayout());", "-    //the modifiers", "-    frame.add(modifierLabel);", "-    frame.add(publicRadio);", "-    frame.add(defaultRadio);", "-    ", "-    //blankLabel.setSize(150,2);", "-    frame.add(blankLabel);", "-    frame.add(abstractRadio);", "-    frame.add(finalRadio);", "-    ", "-    //grouping the modifiers", "-    group1.add(publicRadio);", "-    group1.add(defaultRadio);", "-    ", "-    group2.add(abstractRadio);", "-    group2.add(finalRadio);", "-    ", "-    frame.add(classNameLable);", "-    frame.add(className);", "-    frame.add(superClassLabel);", "-    frame.add(superClass);", "-    frame.add(interfacesLabel);", "-    frame.add(interfaces);", "-    ", "-    frame.add(errorMessage);", "-    frame.add(mainMethod);", "-    frame.add(classConstructor);", "-    frame.add(createClass);", "-    //listen to the button when it is pressed", "-    //createClass.addActionListener(this);", "-    ", "-    createClass.addActionListener( ", "-                                  new ActionListener() { ", "-      public void actionPerformed(ActionEvent e) { ", "-        JRadioButton selectedRadioButton1 = new JRadioButton();", "-        JRadioButton selectedRadioButton2 = new JRadioButton();", "-        //to check which radio buttom has been choosen", "-        for (Enumeration enu = group1.getElements(); enu.hasMoreElements(); ) {", "-          JRadioButton b = (JRadioButton)enu.nextElement();", "-          if (b.getModel() == group1.getSelection())", "-            selectedRadioButton1 = b;", "-        }//for", "-        ", "-        for (Enumeration enu = group2.getElements(); enu.hasMoreElements(); ) {", "-          JRadioButton b = (JRadioButton)enu.nextElement();", "-          if (b.getModel() == group2.getSelection())", "-            selectedRadioButton2 = b;", "-        }//for", "-        ", "-        NewJavaClass javaClass = new NewJavaClass();", "-        boolean sc = false;", "-        boolean in = false;", "-        ", "-        // probability of entering the 3 variables", "-        String msg = \"\";", "-        ", "-        if(javaClass.classNameMeetsNamingConvention(className.getText())){", "-          ", "-          if(superClass.getText().length() != 0)", "-            if(javaClass.classNameMeetsNamingConvention(superClass.getText())) ", "-            sc = true;", "-          else", "-            msg += \"<html>Enter correct superclass name.<br></html>\";", "-          ", "-          if(interfaces.getText().length() != 0)", "-            if(javaClass.interfacesNameMeetsNamingConvention(interfaces.getText()))", "-            in = true;", "-          else", "-            msg += \"Enter correct interfaces name.\";", "-          ", "-          if( ((superClass.getText().length() == 0 && interfaces.getText().length() == 0)) || ", "-             ((superClass.getText().length() != 0 && sc == true) && (interfaces.getText().length() != 0 && in == true)) ||", "-             ((superClass.getText().length() != 0 && sc == true) && (interfaces.getText().length() == 0)) ||", "-             ((superClass.getText().length() == 0) && (interfaces.getText().length() != 0 && in == true))", "-            ) {", "-            _model.newClass(selectedRadioButton1.getText(), selectedRadioButton2.getText() ,className.getText(), mainMethod.isSelected(), classConstructor.isSelected(), superClass.getText(), interfaces.getText());", "-            frame.setVisible(false);", "-            _save();", "-          } else {", "-            errorMessage.setForeground(Color.RED);", "-            errorMessage.setText(msg);", "-          }", "-          ", "-        } else {", "-          msg += \"Enter correct class name. \";", "-          errorMessage.setForeground(Color.RED);", "-          errorMessage.setText(msg);", "-        }", "-      }", "-    } ", "-    ); ", "-  } ", "+  //newclass addition", "+  public void _newJavaClass(){", "+    NewJavaClassDialog njc = new NewJavaClassDialog(this);", "+    njc.setVisible(true);", "+  }"]}], "num": 6058}