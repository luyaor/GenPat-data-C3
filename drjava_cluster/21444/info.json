{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e6f4b9fc788f2a823e1c709063c605b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3254434b20cb21c84dcc73ad2d4495c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "28f2b1ea23c948581f63408215b04510a86e87f3", "commitAfterChange": "45f11437d24a95250c66e3a94437d7de4d6682c1", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "signatureAfterChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "diff": ["-      _saveChooser.setSelectedFile(selection.getParentFile());", "-      _saveChooser.setSelectedFile(selection);", "-      _saveChooser.setSelectedFile(null);", "+      jfc.setSelectedFile(selection.getParentFile());", "+      jfc.setSelectedFile(selection);", "+      jfc.setSelectedFile(null);", "-    if (active.isUntitled()) { ", "-      jfc.setSelectedFile(new File(active.getClassName()));", "+    ", "+    // Fill in class name if untitled", "+    if (active.isUntitled()) {", "+      String className = active.getClassName();", "+      if (!className.equals(\"\")) {", "+        jfc.setSelectedFile(new File(jfc.getCurrentDirectory(), className));", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef0791930473e63eca2a6e2bdda6fe8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "eef32107e75e031eb7210130ce310e1714e51b91", "commitAfterChange": "7c0f2c9147393f8cef6c7d3001b98a8817827537", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "     @Override public Type visit(SimpleAssignExpression node)", "signatureAfterChange": "     @Override public Type visit(SimpleAssignExpression node)", "diff": ["-      if (!context.inConstructorBody()) {", "-        if (hasVariable(left) && getVariable(left).isFinal()) {", "-          setErrorStrings(node, getVariable(left).declaredName());", "-          throw new ExecutionError(\"cannot.modify\", node);", "-        }", "-        else if (hasField(left) && getField(left).isFinal()) {", "+      if (hasVariable(left) && getVariable(left).isFinal()) {", "+        setErrorStrings(node, getVariable(left).declaredName());", "+        throw new ExecutionError(\"cannot.modify\", node);", "+      }", "+      if (hasField(left) && getField(left).isFinal()) {", "+        DJClass initializing = context.initializingClass();", "+        if (initializing == null || !initializing.equals(getField(left).declaringClass())) {", "-      }", "-      ", "+      }      "]}], "num": 21444}