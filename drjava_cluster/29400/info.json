{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "898856ad3d3ca4288c55ec521c1cb805", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b4c5f56e70cc48e3bdd39795e6c799", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 61, "signatureBeforeChange": "   private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "diff": ["-  private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException {", "+  private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException {", "+      ", "+      // Name the new interpreter based on this thread", "-      ((DefaultGlobalModel)_model).getInteractionsModel().addDebugInterpreter(interpreterName);", "+      _model.getInteractionsModel().addDebugInterpreter(interpreterName);", "-      ObjectReference debugInterpreter = getDebugInterpreter(interpreterName);", "+      ObjectReference debugInterpreter = _getDebugInterpreter(interpreterName);", "+      // Define each variable", "+        // Have to update the frame each time", "-      ", "+", "+      // Update the frame", "-      ", "+", "+      // Define \"this\"", "+      // Set the new interpreter and prompt", "-      ((DefaultGlobalModel)_model).getInteractionsModel().setActiveInterpreter(interpreterName,prompt);", "+      _model.getInteractionsModel().setActiveInterpreter(interpreterName,", "+                                                         prompt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac3156d76dc1e3f282ec0f1bb439626", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fb8ddcbfd71bd75d2b307b4e83f7a834ec364082", "commitAfterChange": "be84679bc73e85f88d6958fbfdf8b35be73855ab", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "diff": ["-  private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException {", "+  private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException {", "-      ", "+ ", "+      ObjectReference debugInterpreter = _getDebugInterpreter(interpreterName);", "-      ObjectReference debugInterpreter = _getDebugInterpreter(interpreterName);", "+      ", "+      if (printMessages) {", "+        System.out.println(\"got visibleVariables\");", "+      }", "-    }    ", "-    catch(AbsentInformationException e2){", "-      throw new DebugException(e2.toString());", "-    catch(IncompatibleThreadStateException e){", "-      throw new DebugException(e.toString());", "+    catch(IncompatibleThreadStateException e2){", "+      throw new DebugException(e2.toString());"]}], "num": 29400}