{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd1b831d76d748be4ba18651364ca4d9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d29ee917e7dcada3aab411817a9d187", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   protected Object interpretMethod(Class<?> c,                                    MethodDescriptor md,                                    Object obj,                                    Object[] params)", "signatureAfterChange": "   protected Object interpretMethod(Class<?> c,                                    MethodDescriptor md,                                    Object obj,                                    Object[] params)", "diff": ["-    Context               context = null;", "+    Context<Object>       context = null;", "-        Context ctx = new StaticContext(this, c, md.importationManager);", "+        Context<Type> ctx = new StaticContext<Type>(this, c, md.importationManager);", "-        NameVisitor nv = new NameVisitor(ctx,checkVisitorContext);", "+        NameVisitor nv = new NameVisitor(ctx, checkVisitorContext);", "-        ctx = new StaticContext(this, c, md.importationManager);", "+        ctx = new StaticContext<Type>(this, c, md.importationManager);", "-      context = new StaticContext(this, c, md.variables);", "+      context = new StaticContext<Object>(this, c, md.variables);", "-        Context ctx1 = new MethodContext(this, c, c, md.importationManager);", "+        Context<Type> ctx1 = new MethodContext<Type>(this, c, c, md.importationManager);", "-        Context ctx2 = new MethodContext(this, c, c, md.importationManager);", "+        Context<Type> ctx2 = new MethodContext<Type>(this, c, c, md.importationManager);", "-              ctx1.defineConstant((String)cell[0], cell[1]);", "+              ctx1.defineConstant((String)cell[0], (Type) cell[1]);  // ?? Is cast to type (Type) OK?", "-        ctx1 = new MethodContext(this, c, c, md.importationManager);", "+        ctx1 = new MethodContext<Type>(this, c, c, md.importationManager);", "-        ctx2 = new MethodContext(this, c, c, md.importationManager);", "+        ctx2 = new MethodContext<Type>(this, c, c, md.importationManager);", "-              ctx1.defineConstant((String)cell[0], cell[1]);", "-            }", "+              ctx1.defineConstant((String)cell[0], (Type) cell[1]); // cast to type Type OK ??", "+            } ", "-      context = new MethodContext(this, c, obj, md.variables);", "+      context = new MethodContext<Object>(this, c, obj, md.variables);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0ad84bd19e18f7051590311503995ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   protected Object interpretMethod(Class<?> c,                                    MethodDescriptor md,                                    Object obj,                                    Object[] params)", "signatureAfterChange": "   protected Object interpretMethod(Class<?> c,                                    MethodDescriptor md,                                    Object obj,                                    Object[] params)", "diff": ["-    Context<Object>       context = null;", "+    Context               context = null;", "-        Context<Type> ctx = new StaticContext<Type>(this, c, md.importationManager);", "+        Context ctx = new StaticContext(this, c, md.importationManager);", "-        NameVisitor nv = new NameVisitor(ctx, checkVisitorContext);", "+        NameVisitor nv = new NameVisitor(ctx,checkVisitorContext);", "-        ctx = new StaticContext<Type>(this, c, md.importationManager);", "+        ctx = new StaticContext(this, c, md.importationManager);", "-      context = new StaticContext<Object>(this, c, md.variables);", "+      context = new StaticContext(this, c, md.variables);", "-        Context<Type> ctx1 = new MethodContext<Type>(this, c, c, md.importationManager);", "+        Context ctx1 = new MethodContext(this, c, c, md.importationManager);", "-        Context<Type> ctx2 = new MethodContext<Type>(this, c, c, md.importationManager);", "+        Context ctx2 = new MethodContext(this, c, c, md.importationManager);", "-              ctx1.defineConstant((String)cell[0], (Type) cell[1]);  // ?? Is cast to type (Type) OK?", "+              ctx1.defineConstant((String)cell[0], cell[1]);", "-        ctx1 = new MethodContext<Type>(this, c, c, md.importationManager);", "+        ctx1 = new MethodContext(this, c, c, md.importationManager);", "-        ctx2 = new MethodContext<Type>(this, c, c, md.importationManager);", "+        ctx2 = new MethodContext(this, c, c, md.importationManager);", "-              ctx1.defineConstant((String)cell[0], (Type) cell[1]); // cast to type Type OK ??", "-            } ", "+              ctx1.defineConstant((String)cell[0], cell[1]);", "+            }", "-      context = new MethodContext<Object>(this, c, obj, md.variables);", "+      context = new MethodContext(this, c, obj, md.variables);"]}], "num": 7496}