{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3609a6fb0d6313d6fc9f3d38b67ca41e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0afb4af5ebeb6c32bbe86f0b873b3353", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public FindReplaceMachine createFindReplaceMachine()", "signatureAfterChange": "     public FindReplaceMachine createFindReplaceMachine()", "diff": ["-   */", "-  public FindReplaceMachine createFindReplaceMachine() {", "-    try {", "-      return new FindReplaceMachine(_definitionsDoc,", "-                                    _definitionsDoc.getCurrentLocation());", "-    }", "-    catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "-  }", "+     */", "+    public FindReplaceMachine createFindReplaceMachine() {", "+      try {", "+        return new FindReplaceMachine(_doc, _doc.getCurrentLocation());", "+      }", "+      catch (BadLocationException e) {", "+        throw new UnexpectedException(e);", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b8f4ac197eeb8563e2c3f8d9222a5e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/ConsoleDocument.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public synchronized String getCurrentInput()", "signatureAfterChange": "   public String getCurrentInput()", "diff": ["-  public synchronized String getCurrentInput() {", "-    try {  return getDocText(_promptPos, getDocLength() - _promptPos); }", "-    catch (DocumentAdapterException e) {  throw new UnexpectedException(e); }", "+  public String getCurrentInput() {", "+    acquireReadLock();", "+    try {", "+      try { return getDocText(_promptPos, _document.getDocLength() - _promptPos); }", "+      catch (DocumentAdapterException e) { throw new UnexpectedException(e); }", "+    }", "+    finally { releaseReadLock(); }"]}], "num": 18989}