{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35f7f9a9b764212f027e9b4da323270f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b0b5b0b93d22e0a1b29f56d07f643e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Step.java", "commitBeforeChange": "45d0a7affd7689ee8a900d941096751c2f95e51f", "commitAfterChange": "2cd89063cbfbf0917c73ab6eef3bf3a4c73e4766", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _createRequests() throws DebugException", "signatureAfterChange": "   protected void _createRequests() throws DebugException", "diff": ["-    boolean stepDrJava = DrJava.getConfig().getSetting(DEBUG_STEP_DRJAVA).booleanValue();  ", "+    boolean stepDrJava = DrJava.getConfig().getSetting(DEBUG_STEP_DRJAVA).booleanValue();", "+    String exclude = DrJava.getConfig().getSetting(DEBUG_STEP_EXCLUDE);", "+    StringTokenizer st = new StringTokenizer(exclude, \",\");", "+    while (st.hasMoreTokens()) {", "+      request.addClassExclusionFilter(st.nextToken().trim());", "+    }", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9e57fbdf10c74d80f60640499e1a975", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Step.java", "commitBeforeChange": "395b2a102021edacb1427340196ea5475967dc87", "commitAfterChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _createRequest() throws DebugException", "signatureAfterChange": "   protected void _createRequest() throws DebugException", "diff": ["+    boolean stepJava = DrJava.CONFIG.getSetting(DEBUG_STEP_JAVA).booleanValue();  ", "+    boolean stepInterpreter = DrJava.CONFIG.getSetting(DEBUG_STEP_INTERPRETER).booleanValue();  ", "-    for (int i=0; i<excludes.length; ++i) {", "-      _request.addClassExclusionFilter(excludes[i]);", "+    if (!stepJava) {", "+      for (int i=0; i<excludes.length; ++i) {", "+        _request.addClassExclusionFilter(excludes[i]);", "+      }", "+    }", "+    if (!stepInterpreter) {", "+      _request.addClassExclusionFilter(\"koala.*\");"]}], "num": 26348}