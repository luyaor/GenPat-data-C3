{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7508323796db1c52708a111b9c30656e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2b3b422b77de4963da3f9baf88f8815", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/CollectUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 70, "signatureBeforeChange": "   public static <K, V> Map<K, V> asMap(final Dictionary<K, V> d)", "signatureAfterChange": "   public static <K, V> Map<K, V> asMap(Dictionary<K, V> d)", "diff": ["+   */", "+  public static <K, V> Map<K, V> asMap(Dictionary<K, V> d) {", "+    // can't cast arbitrary Dictionaries because the dictionary type parameters may", "+    // be unrelated to map parameters -- it might be a Dictionary<K, V> and a Map<K, Foo>", "+    if (d instanceof Hashtable<?, ?>) { return (Hashtable<K, V>) d; }", "+    return new DictionaryMap<K, V>(d);", "-  /** Convert a Dictionary to a Map. */", "-  public static <K, V> Map<K, V> asMap(final Dictionary<K, V> d) {", "-    return new DictionaryMap<K, V>(d);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e5224ef14fce184efc14ae85eb6ba4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/AbstractLog.java", "commitBeforeChange": "af98c13a1c3a122b42ab8357bbb72ee12b455d31", "commitAfterChange": "62e1f47de02306262bb09b756546143a75f1480f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private static SizedIterable<String> processValue(String name, Object value)", "signatureAfterChange": "      private static SizedIterable<String> processValue(String name, Object value)", "diff": ["+      // this check is necessary for Retroweaver compatibility -- the Iterable check fails at run time", "+      // (because java.lang.Iterable becomes com.rc.retroweaver.runtime.Iterable_)", "+      else if (value instanceof Collection<?>) {", "+        valStrings = processText(IterUtil.multilineToString((Collection<?>) value));", "+      }"]}], "num": 19195}