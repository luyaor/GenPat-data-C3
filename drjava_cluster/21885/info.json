{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "759d7ed9b419a9c1c901091cbc04b21b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d06cd7b68ac46628563838e307bed79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 283, "methodNumberAfterChange": 351, "signatureBeforeChange": "           public ConstructorInvocation value(DJConstructor k, SignatureChecker checker)", "signatureAfterChange": "     public Iterable<Type> thrownTypes()", "diff": ["+    public Iterable<VariableType> declaredTypeParameters() { return _tparams; }", "+    public Iterable<Type> thrownTypes() { return IterUtil.relax(substitute(_delegate.thrownTypes(), _sigma)); }", "-          new Lambda2<DJConstructor, SignatureChecker, ConstructorInvocation>() {", "-          public ConstructorInvocation value(DJConstructor k, SignatureChecker checker) {", "-            SubstitutionMap sigma = new SubstitutionMap(checker.typeParameters(),", "-                                                        checker.typeArguments());", "-            // TODO: Handle the thrown types (using sigma)", "-            return new ConstructorInvocation(k, checker.typeArguments(), checker.arguments(), ", "-                                             k.thrownTypes());", "-          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b20b94ba55440d21c4e3cd910c9530ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 360, "signatureBeforeChange": "           public ConstructorInvocation value(DJConstructor k, SignatureChecker checker)", "signatureAfterChange": "     public Iterable<Type> thrownTypes()", "diff": ["+    public Iterable<VariableType> declaredTypeParameters() { return IterUtil.empty(); }", "+    public Iterable<Type> thrownTypes() { return IterUtil.mapSnapshot(_delegate.thrownTypes(), ERASE); }", "-          new Lambda2<DJConstructor, SignatureChecker, ConstructorInvocation>() {", "-          public ConstructorInvocation value(DJConstructor k, SignatureChecker checker) {", "-            // TODO: Handle the thrown types", "-            return new ConstructorInvocation(k, checker.typeArguments(), checker.arguments(), ", "-                                             k.thrownTypes());", "-          }"]}], "num": 21885}