{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acc1c520fae0b1d49a0d803f9fea4e03", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb52a9a3b3c3ccf9b14112daea3b94d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmpty.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    */\r", "-  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) {\r", "-    try {\r", "-      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine\r", "-      int here = doc.getCurrentLocation();\r", "-      int endOfLine = doc.getLineEndPos(here);\r", "-      int firstNonWS = doc.getLineFirstCharPos(here);\r", "-      return (endOfLine == firstNonWS);\r", "-    }\r", "-    catch (BadLocationException e) {\r", "-      // Shouldn't happen\r", "-      throw new UnexpectedException(e);\r", "-    }\r", "-  }\r", "+    */", "+  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) {", "+    try {", "+      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "+      int here = doc.getCurrentLocation();", "+      int endOfLine = doc._getLineEndPos(here);", "+      int firstNonWS = doc._getLineFirstCharPos(here);", "+      return (endOfLine == firstNonWS);", "+    }", "+    catch (BadLocationException e) {", "+      // Shouldn't happen", "+      throw new UnexpectedException(e);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a54e35800b711b96c7ea3637eef391a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmpty.java", "commitBeforeChange": "42669dc5656697beebfecb16842ba181e2bab301", "commitAfterChange": "ab72ce86901addf5fe2a66f48b9dc4c5f7db818b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    // one solution: if startOfLine somehow tells you when ", "-    //   there's no first WS char on this line", "-    //   (i.e. the line is empty), just use that.", "-    // otherwise:", "-    // START = findPrevDelimiter(start of statement)   --START", "-    // END = go forward to find first \\n or EOF", "-    // return true if there's only WS between START and END    ", "-", "-    throw new RuntimeException(\"Not yet implemented!\");", "+    try {", "+      // Determine if there are only whitespace chars by seeing if the", "+      //  first non-WS char is the endOfLine", "+      int here = doc.getCurrentLocation();", "+      int endOfLine = doc.getLineEndPos(here);", "+      int firstNonWS = doc.getLineFirstCharPos(here);", "+      return (endOfLine == firstNonWS);", "+    }", "+    catch (BadLocationException e) {", "+      // Shouldn't happen", "+      throw new UnexpectedException(e);", "+    }"]}], "num": 2999}