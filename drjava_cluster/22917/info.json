{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba21d5525192541b55152c7ee71bdd1f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c2ba4d28a4679f932cfb28c5c7a9e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 378, "methodNumberAfterChange": 378, "signatureBeforeChange": "\r \r   public void forLabeledStatement(LabeledStatement that)", "signatureAfterChange": "    public void forLabeledStatement(LabeledStatement that)", "diff": ["-\r", "-  public void forLabeledStatement(LabeledStatement that) {\r", "-    forLabeledStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLabel().visit(this);\r", "-    that.getStatement().visit(this);\r", "-    forLabeledStatementOnly(that);\r", "-  }\r", "+", "+  public void forLabeledStatement(LabeledStatement that) {", "+    forLabeledStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLabel().visit(this);", "+    that.getStatement().visit(this);", "+    forLabeledStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e4171f01136e6dc4770ecc88a6f226", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 377, "signatureBeforeChange": "\r \r   public void forPackageImportStatement(PackageImportStatement that)", "signatureAfterChange": "    public void forPackageImportStatement(PackageImportStatement that)", "diff": ["-\r", "-  public void forPackageImportStatement(PackageImportStatement that) {\r", "-    forPackageImportStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCWord().visit(this);\r", "-    forPackageImportStatementOnly(that);\r", "-  }\r", "+", "+  public void forPackageImportStatement(PackageImportStatement that) {", "+    forPackageImportStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCWord().visit(this);", "+    forPackageImportStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb68e7d4903fa60c6b1b02c84a97140e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 376, "signatureBeforeChange": "\r \r   public void forClassImportStatement(ClassImportStatement that)", "signatureAfterChange": "    public void forClassImportStatement(ClassImportStatement that)", "diff": ["-\r", "-  public void forClassImportStatement(ClassImportStatement that) {\r", "-    forClassImportStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCWord().visit(this);\r", "-    forClassImportStatementOnly(that);\r", "-  }\r", "+", "+  public void forClassImportStatement(ClassImportStatement that) {", "+    forClassImportStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCWord().visit(this);", "+    forClassImportStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9b0e96f41746724e310726efe370b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 379, "signatureBeforeChange": "\r \r \r   public void forBlock(Block that)", "signatureAfterChange": "     public void forBlock(Block that)", "diff": ["-\r", "-  public void forBlock(Block that) {\r", "-    forBlockDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getStatements().visit(this);\r", "-    forBlockOnly(that);\r", "-  }\r", "+", "+  public void forBlock(Block that) {", "+    forBlockDoFirst(that);", "+    if (prune(that)) return;", "+    that.getStatements().visit(this);", "+    forBlockOnly(that);", "+  }"]}], "num": 22917}