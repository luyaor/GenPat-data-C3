{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96b7df99e79714d500ba98647e40bdde", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ecbd0cb52aa1282972f6fb2085f361", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "f1f97edd57f558d6d34abcd1fe039afc22f7a202", "commitAfterChange": "fc098bf0e8c385557d32ed3c183745582612add6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void _handleClassPrepareEvent(ClassPrepareEvent e)", "signatureAfterChange": "      private void _handleClassPrepareEvent(ClassPrepareEvent e)", "diff": ["-    System.out.println(\"ClassPrepareEvent occured\");", "+    DrJava.consoleOut().println(\"ClassPrepareEvent occured\");", "+    DrJava.consoleOut().println(\"In \" + e.referenceType().name());", "+    try {", "+      DrJava.consoleOut().println(\"sourcename \" + e.referenceType().sourceName());", "+    }", "+    catch(AbsentInformationException aie) {", "+      DrJava.consoleOut().println(\"no info\");", "+    }", "+    try {", "+      _debugManager.getPendingRequestManager().classPrepared(e);", "+    }", "+    catch(DebugException de) {", "+      System.err.println(\"Error preparing action: \" + de);", "+    }", "+    // resumes this thread which was suspended because its ", "+    // suspend policy was SUSPEND_EVENT_THREAD", "+    e.thread().resume();", "+    DrJava.consoleOut().println(\"resumed thread\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcd9ee042f32e63d47258dd4915899ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "   private File[] _loadProject(ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private File[] _loadProject(ProjectFileIR ir) throws IOException", "diff": ["+    // set breakpoints", "+    try { getDebugger().removeAllBreakpoints(); }", "+    catch(DebugException de) { /* ignore, just don't remove old breakpoints */ }", "+    for (DebugBreakpointData dbd: ir.getBreakpoints()) {", "+      try { getDebugger().toggleBreakpoint(getDocumentForFile(dbd.getFile()), dbd.getOffset(), dbd.getLineNumber(), dbd.isEnabled()); }", "+      catch(DebugException de) { /* ignore, just don't add breakpoint */ }", "+    }", "+    ", "+    // set watches", "+    try { getDebugger().removeAllWatches(); }", "+    catch(DebugException de) { /* ignore, just don't remove old watches */ }", "+    for (DebugWatchData dwd: ir.getWatches()) {", "+      try { getDebugger().addWatch(dwd.getName()); }", "+      catch(DebugException de) { /* ignore, just don't add watch */ }", "+    }", "+    "]}], "num": 16815}