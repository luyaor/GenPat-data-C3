{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff5732b65f43ef0281c004cb1a076295", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a599e49c204071b67ee90fc855e387b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "91c1d413252eb1e7be85776805fae91f81fb5449", "commitAfterChange": "cdb52bc430a911dc8f35a8a6303146e507572105", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "   private File getChosenFile(JFileChooser fc, int choice)     throws OperationCanceledException", "signatureAfterChange": "   private File getChosenFile(JFileChooser fc, int choice)     throws OperationCanceledException", "diff": ["-        if (chosen != null)", "-          return chosen;", "+        if (chosen != null) {", "+          //append \".java\" if not written by user", "+          if (fc.getFileFilter() instanceof JavaSourceFilter) {", "+            if (chosen.getName().indexOf(\".\") == -1)", "+              return new File (chosen.getAbsolutePath() + \".java\");", "+          }", "+          return chosen; ", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5966fee81d54e7d0f54eda190f4234", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "19b3a06d9ac0648e70f03e74cf6791231b56bebc", "commitAfterChange": "dc96b8e17de1b9fbcfb0683311d7e482b6fcfcf3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames, boolean isError, List<File> files)", "signatureAfterChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames, boolean isError, List<File> files)", "diff": ["-    ", "+ ", "-    if (failedTest instanceof TestCase) testName = ((TestCase)failedTest).getName();", "+    /*if (failedTest instanceof TestCase) testName = ((TestCase)failedTest).getName();", "+    else */ if(failedTest instanceof JUnit4TestCaseFacade)", "+    {", "+      testName = ((JUnit4TestCaseFacade) failedTest).toString(); ", "+      testName = testName.substring(0,testName.indexOf('(')); //shaves off the class from TestName string", "+    }", "-    ", "+", "-    boolean isFailure = (failure.thrownException() instanceof AssertionFailedError) &&", "+", "+    boolean isFailure = (failure.thrownException() instanceof AssertionError || failure.thrownException() instanceof AssertionFailedError) &&"]}], "num": 20016}