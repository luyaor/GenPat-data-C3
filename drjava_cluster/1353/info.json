{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e98bd1700af032dd69c0168cfb430746", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c485d41d4c76843c705e7f6cf6efeac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 483, "methodNumberAfterChange": 483, "signatureBeforeChange": "\r \r   public void forComplexThisConstructorInvocation(ComplexThisConstructorInvocation that)", "signatureAfterChange": "    public void forComplexThisConstructorInvocation(ComplexThisConstructorInvocation that)", "diff": ["-\r", "-  public void forComplexThisConstructorInvocation(ComplexThisConstructorInvocation that) {\r", "-    forComplexThisConstructorInvocationDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getEnclosing().visit(this);\r", "-    that.getArguments().visit(this);\r", "-    forComplexThisConstructorInvocationOnly(that);\r", "-  }\r", "+", "+  public void forComplexThisConstructorInvocation(ComplexThisConstructorInvocation that) {", "+    forComplexThisConstructorInvocationDoFirst(that);", "+    if (prune(that)) return;", "+    that.getEnclosing().visit(this);", "+    that.getArguments().visit(this);", "+    forComplexThisConstructorInvocationOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f77c5dc161633bfb3edbb5008d0188", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 485, "methodNumberAfterChange": 485, "signatureBeforeChange": "\r \r   public void forComplexSuperConstructorInvocation(ComplexSuperConstructorInvocation that)", "signatureAfterChange": "    public void forComplexSuperConstructorInvocation(ComplexSuperConstructorInvocation that)", "diff": ["-\r", "-  public void forComplexSuperConstructorInvocation(ComplexSuperConstructorInvocation that) {\r", "-    forComplexSuperConstructorInvocationDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getEnclosing().visit(this);\r", "-    that.getArguments().visit(this);\r", "-    forComplexSuperConstructorInvocationOnly(that);\r", "-  }\r", "+", "+  public void forComplexSuperConstructorInvocation(ComplexSuperConstructorInvocation that) {", "+    forComplexSuperConstructorInvocationDoFirst(that);", "+    if (prune(that)) return;", "+    that.getEnclosing().visit(this);", "+    that.getArguments().visit(this);", "+    forComplexSuperConstructorInvocationOnly(that);", "+  }"]}], "num": 1353}