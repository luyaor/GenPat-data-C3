{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9edeef05ddbb3e11d95e57d49d940c68", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc3e15ed765d425b2f48b3b302827a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecursionStack4.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public RecursionStack4()", "signatureAfterChange": "   public RecursionStack4()", "diff": ["-  /** Create an empty recursion stack */", "-  public RecursionStack4() {", "-    _previous = new HashMultiset<IdentityQuad<T1, T2, T3, T4>>();", "-    _stack = new LinkedList<IdentityQuad<T1, T2, T3, T4>>();", "+  /** Create an empty recursion stack with an {@link IdentityQuad} factory */", "+  public RecursionStack4() { this(IdentityQuad.<T1, T2, T3, T4>factory()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9d8f636ba06307f0d13582ea15e403", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecursionStack3.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public RecursionStack3()", "signatureAfterChange": "   public RecursionStack3()", "diff": ["-  /** Create an empty recursion stack */", "-  public RecursionStack3() {", "-    _previous = new HashMultiset<IdentityTriple<T1, T2, T3>>();", "-    _stack = new LinkedList<IdentityTriple<T1, T2, T3>>();", "+  /** Create an empty recursion stack with an {@link IdentityTriple} factory */", "+  public RecursionStack3() { this(IdentityTriple.<T1, T2, T3>factory()); }"]}], "num": 6327}