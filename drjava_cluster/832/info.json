{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c95432f2ec3c63e2fe1e5200dc957cc2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d99611067dca16709817d61830388e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    protected void assertReplThrewSyntaxException(String code) throws EditDocumentException", "signatureAfterChange": "    protected void assertReplThrewSyntaxException(String code) throws EditDocumentException, InterruptedException", "diff": ["-  protected void assertReplThrewSyntaxException(String code) throws EditDocumentException {", "+  protected void assertReplThrewSyntaxException(String code) throws EditDocumentException, InterruptedException {", "-    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+    doc.reset(\"This is a test\");", "+    doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "+    model._logInteractionStart();", "-    try { Thread.sleep(5000); } catch(InterruptedException ie) { }; // allow for the exception to be generated!", "-    assertTrue(\"Code '\"+code+\"' should generate a syntax exception but not a continuation exception\",", "+    model._waitInteractionDone();", "+    assertTrue(\"Code '\" + code +  \"' should generate a syntax exception but not a continuation exception\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6178a8227ae17c086729e841512564df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    protected void assertReplThrewContinuationException(String code) throws EditDocumentException", "signatureAfterChange": "    protected void assertReplThrewContinuationException(String code) throws EditDocumentException, InterruptedException", "diff": ["-  protected void assertReplThrewContinuationException(String code) throws EditDocumentException {", "+  protected void assertReplThrewContinuationException(String code) throws EditDocumentException, InterruptedException {", "-    IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel)_model;", "+    IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel) _model;", "-    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+    doc.reset(\"This is a test\");", "+    doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "+    model._logInteractionStart();", "-    try { Thread.sleep(5000); } catch(InterruptedException ie) { }; // allow for the exception to be generated!", "+    _log.log(\"Waiting for InteractionDone()\");", "+    model._waitInteractionDone();"]}], "num": 832}