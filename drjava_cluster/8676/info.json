{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5cc089fc6c3fcab2138081d98ed8f52", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c35aa4344f79a1ce46a327d1ffd26d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public Void forAnonymousClassInstantiation(AnonymousClassInstantiation e)", "signatureAfterChange": "   public Void forAnonymousClassInstantiation(AnonymousClassInstantiation e)", "diff": ["-    if (_isElementaryFile() || _isIntermediateFile()) {", "-      String className = Data.dollarSignsToDots(e.getType().getName());", "-      writeAccessors(sd, baseIndent);", "-      String valueToStringName = writeValueToString(sd, baseIndent);", "-      String valueEqualsName = writeValueEquals(sd, baseIndent);", "-      String valueHashCodeName = writeValueHashCode(sd, baseIndent, valueEqualsName);", "-      writeToString(sd, baseIndent, valueToStringName);", "-      if (!_safeSupportCode) { writeAnonEquals(baseIndent);}", "-      else { writeEquals(className, sd, baseIndent, valueEqualsName); }", "-      writeHashCode(className, sd, baseIndent, true, valueHashCodeName);", "-      _writeToFileOut(indentString(baseIndent, 0));", "-", "-    }", "+//    if (_isElementaryFile() || _isIntermediateFile()) {", "+    String className = Data.dollarSignsToDots(e.getType().getName());", "+    writeAccessors(sd, baseIndent);", "+    String valueToStringName = writeValueToString(sd, baseIndent);", "+    String valueEqualsName = writeValueEquals(sd, baseIndent);", "+    String valueHashCodeName = writeValueHashCode(sd, baseIndent, valueEqualsName);", "+    writeToString(sd, baseIndent, valueToStringName);", "+    if (!_safeSupportCode) { writeAnonEquals(baseIndent);}", "+    else { writeEquals(className, sd, baseIndent, valueEqualsName); }", "+    writeHashCode(className, sd, baseIndent, true, valueHashCodeName);", "+    _writeToFileOut(indentString(baseIndent, 0));", "+    ", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f82e94eeb8abcfb99e337baad921848", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef cd)", "signatureAfterChange": "   public Void forInnerClassDef(InnerClassDef cd)", "diff": ["-    if (_enclosingData == null) {throw new RuntimeException(\"Internal Program Error: Enclosing Data is null.  Please report this bug.\");}", "+    if (_enclosingData == null) {", "+      throw new RuntimeException(\"Internal Program Error: Enclosing Data is null.  Please report this bug.\");", "+    }", "-      throw new RuntimeException(\"Internal Program Error: Can't find SymbolData for \" + cd.getName().getText() + \". Please report this bug.\");", "+      throw new RuntimeException(\"Internal Program Error: Can't find SymbolData for \" + cd.getName().getText() + ", "+                                 \". Please report this bug.\");", "-    ", "-//    int baseIndent = cd.getSourceInfo().getStartColumn() - 1;", "-//    className = LanguageLevelVisitor.getUnqualifiedClassName(sd.getName());", "-    _readAndWriteThroughIndex(cd.getSourceInfo().getEndLine(), cd.getSourceInfo().getEndColumn() - 1);", "-//    writeConstructor(className, sd, baseIndent);", "-//    writeAccessors(sd, baseIndent);", "-//    String valueToStringName = writeValueToString(sd, baseIndent);", "-//    String valueEqualsName = writeValueEquals(sd, baseIndent);", "-//    String valueHashCodeName = writeValueHashCode(sd, baseIndent, valueEqualsName);", "-//    writeToString(sd, baseIndent, valueToStringName);", "-//    writeEquals(className, sd, baseIndent, valueEqualsName);", "-//    writeHashCode(className, sd, baseIndent, true, valueHashCodeName);", "-//    _writeToFileOut(indentString(baseIndent, 0));", "+", "+    _readAndWriteThroughIndex(cd.getSourceInfo().getEndLine(), cd.getSourceInfo().getEndColumn() - 1);;"]}], "num": 8676}