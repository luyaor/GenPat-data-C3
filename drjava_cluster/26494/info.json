{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e66e04ebd8b9c71c4a0a8688d6fd848b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ff63224229c54d19c8849dc2534ed43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/TigerUtilities.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public static boolean isEnum(Class<?> c)", "signatureAfterChange": "   public static boolean isEnum(Class<?> c)", "diff": ["-  public static boolean isEnum(Class<?> c) {", "-      //    System.out.println(\"enabled: \"+_tigerEnabled+\", \"+c+\".super: \"+c.getSuperclass());", "-    return _tigerEnabled && c.getSuperclass()!=null && (c.getSuperclass().getName().equals(\"java.lang.Enum\"));", "-    ", "-    // The following is what it should be.  The reason why this commented is that", "-    // setting the ENUM modifier in the EnumDeclaration constructor causes some other", "-    // problems when trying to access the elements of the enum using reflection.", "-    // return _tigerEnabled && ((c.getModifiers() & ENUM) != 0); ", "+   */", "+  public static boolean isEnum(Class<?> c) {", "+    // Since the DynamicJava implementation of EnumDeclaration relies on the presence of constructors,", "+    // and the restrictions of the JVM won't allow constructors in classes flagged as ENUM,", "+    // we can't use the ENUM modifier flag here.", "+    ", "+    // Note: we use \"Class.forName\" instead of \"Enum.class\" to avoid Retroweaver conversion of Enum.class", "+    // to its own Enum implementation.", "+    try {", "+      return _tigerEnabled && (c.getSuperclass() != null) && ", "+        (c.getSuperclass().equals(Class.forName(\"java.lang.Enum\")));", "+    }", "+    catch (ClassNotFoundException e) { return false; }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a011424f695b29ff613120129442ddb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/TigerUtilities.java", "commitBeforeChange": "8a844a8f24b61cc57420bdf2211acc634ec89fef", "commitAfterChange": "f22d0a1255bdf1029bb9a8ca3e33cbdaf890f9a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public static boolean isEnum(Class<?> c)", "signatureAfterChange": "   public static boolean isEnum(Class<?> c)", "diff": ["-    try {", "-      return _tigerEnabled && (c.getSuperclass() == Class.forName(\"java.lang.Enum\"));", "-    }", "-    // this try/catch block should in fact not be there, but to use", "-    // c.isEnum() instead if the value of the ENUM flag", "-    // was known (see commented line below)", "-    catch(ClassNotFoundException e){", "-      throw new ExecutionError(\"Tiger is enabled, but cannot find class java.lang.Enum! Please contact the DynamicJava/DrJava team (javaplt@cs.rice.edu).\");", "-    }", "-", "-    //return _tigerEnabled && c.isEnum();", "+    System.out.println(\"enabled: \"+_tigerEnabled+\", \"+c+\".super: \"+c.getSuperclass());", "+    return _tigerEnabled && c.getSuperclass()!=null && (c.getSuperclass().getName().equals(\"java.lang.Enum\"));", "+    ", "+    // The following is what it should be.  The reason why this commented is that", "+    // setting the ENUM modifier in the EnumDeclaration constructor causes some other", "+    // problems when trying to access the elements of the enum using reflection.", "+    // return _tigerEnabled && ((c.getModifiers() & ENUM) != 0); "]}], "num": 26494}