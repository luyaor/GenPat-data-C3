{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e2899713c2caffad734475b37468e79", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eed834f8442c2f31363f26eec5cf79d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 405, "methodNumberAfterChange": 405, "signatureBeforeChange": "\r \r   public void forArrayInitializer(ArrayInitializer that)", "signatureAfterChange": "    public void forArrayInitializer(ArrayInitializer that)", "diff": ["-\r", "-  public void forArrayInitializer(ArrayInitializer that) {\r", "-    forArrayInitializerDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getItems().length; i++) that.getItems()[i].visit(this);\r", "-    forArrayInitializerOnly(that);\r", "-  }\r", "+", "+  public void forArrayInitializer(ArrayInitializer that) {", "+    forArrayInitializerDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getItems().length; i++) that.getItems()[i].visit(this);", "+    forArrayInitializerOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea531d422781383ff1c76da44b0fe7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 406, "methodNumberAfterChange": 406, "signatureBeforeChange": "\r \r   public void forPrimitiveType(PrimitiveType that)", "signatureAfterChange": "    public void forPrimitiveType(PrimitiveType that)", "diff": ["-\r", "-  public void forPrimitiveType(PrimitiveType that) {\r", "-    forPrimitiveTypeDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forPrimitiveTypeOnly(that);\r", "-  }\r", "+", "+  public void forPrimitiveType(PrimitiveType that) {", "+    forPrimitiveTypeDoFirst(that);", "+    if (prune(that)) return;", "+    forPrimitiveTypeOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f886ee4c48dbbacd7ddf00d373a19ae1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 407, "methodNumberAfterChange": 407, "signatureBeforeChange": "\r \r   public void forArrayType(ArrayType that)", "signatureAfterChange": "    public void forArrayType(ArrayType that)", "diff": ["-\r", "-  public void forArrayType(ArrayType that) {\r", "-    forArrayTypeDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getElementType().visit(this);\r", "-    forArrayTypeOnly(that);\r", "-  }\r", "+", "+  public void forArrayType(ArrayType that) {", "+    forArrayTypeDoFirst(that);", "+    if (prune(that)) return;", "+    that.getElementType().visit(this);", "+    forArrayTypeOnly(that);", "+  }"]}], "num": 2137}