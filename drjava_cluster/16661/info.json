{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df1aa6b3f4fa33779fa9c8351d85010c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c373ce6b31530178cf2143c42645dcd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 60, "signatureBeforeChange": "   synchronized void currThreadSuspended()", "signatureAfterChange": "   synchronized void currThreadSuspended()", "diff": ["-//     try {", "-//       /** ", "-//        * copy the variables in scope into an interpreter", "-//        * and switch the current interpreter to that interpreter", "-//        */", "-//        dumpVariablesIntoInterpreterAndSwitch();", "-//     }", "-//     catch(DebugException ex){", "-//       throw new UnexpectedException(ex);", "-//     }", "-    ", "+    // Also uncomment line 334, and the lines in currThreadResumed to make the new functionality work", "+    try{", "+      /** ", "+       * copy the variables in scope into an interpreter", "+       * and switch the current interpreter to that interpreter", "+       */", "+      dumpVariablesIntoInterpreterAndSwitch();", "+    }", "+    catch(DebugException ex){", "+      throw new UnexpectedException(ex);", "+    }    ", "+    _switchToSuspendedThread();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4de80e36523cda38611c72484d0a792", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 64, "signatureBeforeChange": "   synchronized void currThreadSuspended()", "signatureAfterChange": "   synchronized void currThreadSuspended()", "diff": ["-    // Also uncomment line 334, and the lines in currThreadResumed to make the new functionality work", "-    try{", "-      /** ", "-       * copy the variables in scope into an interpreter", "-       * and switch the current interpreter to that interpreter", "-       */", "-      dumpVariablesIntoInterpreterAndSwitch();", "+    try {", "+      // copy the variables in scope into an interpreter", "+      // and switch the current interpreter to that interpreter", "+      _dumpVariablesIntoInterpreterAndSwitch();", "+      _switchToSuspendedThread();", "-    _switchToSuspendedThread();"]}], "num": 16661}