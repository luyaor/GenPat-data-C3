{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6030923bc9eb28b27b1c14f526cfd6a4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eee3976a9f868e8f86ab95e41a9eb55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "   public Void visit(MethodDeclaration node)", "signatureAfterChange": "   public Void visit(MethodDeclaration node)", "diff": ["-    Iterator it = node.getParameters().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getParameters()) {", "+      n.acceptVisitor(this);", "-    it = node.getExceptions().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getExceptions()) {", "+      n.acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4daf37bf22615cba71ac5aefb261386c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "   public Void visit(ClassDeclaration node)", "signatureAfterChange": "   public Void visit(ClassDeclaration node)", "diff": ["-      Iterator it = node.getInterfaces().iterator();", "-      while (it.hasNext()) {", "-        ((Node)it.next()).acceptVisitor(this);", "+      for (Node n : node.getInterfaces()) {", "+        n.acceptVisitor(this);", "-    Iterator it = node.getMembers().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getMembers()) {", "+      n.acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b626402065132c6f2b76b6041dd4bc5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Void visit(ForStatement node)", "signatureAfterChange": "   public Void visit(ForStatement node)", "diff": ["-      Iterator it = node.getInitialization().iterator();", "-      while (it.hasNext()) {", "-        ((Node)it.next()).acceptVisitor(this);", "+      for (Node n : node.getInitialization()) {", "+        n.acceptVisitor(this);", "-      Iterator it = node.getUpdate().iterator();", "-      while (it.hasNext()) {", "-        ((Node)it.next()).acceptVisitor(this);", "+      for (Node n : node.getUpdate()) {", "+        n.acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee14dcc15af75a10065df542180b09ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "   public Void visit(InterfaceDeclaration node)", "signatureAfterChange": "   public Void visit(InterfaceDeclaration node)", "diff": ["-      Iterator it = node.getInterfaces().iterator();", "-      while (it.hasNext()) {", "-        ((Node)it.next()).acceptVisitor(this);", "+      for (Node n : node.getInterfaces()) {", "+        n.acceptVisitor(this);", "-    Iterator it = node.getMembers().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getMembers()) {", "+      n.acceptVisitor(this);"]}], "num": 25025}