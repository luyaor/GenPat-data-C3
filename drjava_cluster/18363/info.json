{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f08973920d7471d5b020c7f31cccaf52", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61b48a02391d9c0edd29d5545b80c3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistry.java", "commitBeforeChange": "321e79b1f242fd0fc2fe88ee000f7a52383c7144", "commitAfterChange": "511e6cd8ca564113db7580e483d49804656e893b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public CompilerInterface[] getAvailableCompilers()", "signatureAfterChange": "   public CompilerInterface[] getAvailableCompilers()", "diff": ["-    Iterator<String> itor = _registeredCompilers.listIterator();", "+//    Iterator<String> itor = _registeredCompilers.listIterator();", "-    while (itor.hasNext()) {", "-      String name = itor.next();", "+//    while (itor.hasNext()) {", "+//    String name = itor.next();", "+    for (int i = 0; i < DEFAULT_COMPILERS.length; i++) {", "-", "-      try {", "-        _createCompiler(name, availableCompilers);", "-      }", "-      catch (Throwable t) {", "+      for (int j = 0; j < DEFAULT_COMPILERS[i].length; j++) {", "+        String name = DEFAULT_COMPILERS[i][j];", "+        try {", "+          if (_createCompiler(name, availableCompilers)) {", "+            break;", "+          }", "+        }", "+        catch (Throwable t) {", "+        }", "-    itor = DrJava.getConfig().getSetting(OptionConstants.EXTRA_COMPILERS).iterator();", "-", "-    while (itor.hasNext()) {", "-      String name = itor.next();", "-      try {", "-        _createCompiler(name, availableCompilers);", "-      }", "-      catch (Throwable t) {", "-        // Custom compiler failed to load.  Signal the user?", "-//        System.err.println(\"Unable to load \" + name);", "-      }", "-    }", "+//    itor = DrJava.getConfig().getSetting(OptionConstants.EXTRA_COMPILERS).iterator();", "+//", "+//    while (itor.hasNext()) {", "+//      String name = itor.next();", "+//      try {", "+//        _createCompiler(name, availableCompilers);", "+//      }", "+//      catch (Throwable t) {", "+//        // Custom compiler failed to load.  Signal the user?", "+////        System.err.println(\"Unable to load \" + name);", "+//      }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc58c234162f7fe3e16aab3dd20576e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistry.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public CompilerInterface[] getAvailableCompilers()", "signatureAfterChange": "   public CompilerInterface[] getAvailableCompilers()", "diff": ["-    ListIterator itor = _registeredCompilers.listIterator();", "+    Iterator<String> itor = _registeredCompilers.listIterator();", "-      String name = (String) itor.next();", "+      String name = itor.next();", "-        CompilerInterface compiler = _instantiateCompiler(name);", "-        if (compiler.isAvailable()) {", "-          //DrJava.consoleOut().println(\"ok.\");", "-", "-          // can't use getActiveCompiler() because it will call back to", "-          // getAvailableCompilers, forming an infinite recursion!!", "-          if (_activeCompiler == NoCompilerAvailable.ONLY) {", "-            //System.err.println(\"\\tset to active.\");", "-            _activeCompiler = compiler;", "-          }", "-", "-          availableCompilers.add(compiler);", "-        }", "-        else {", "-          //DrJava.consoleOut().println(\"not available.\");", "-        }", "+        _createCompiler(name, availableCompilers);", "+    itor = DrJava.getConfig().getSetting(OptionConstants.EXTRA_COMPILERS).iterator();", "+", "+    while (itor.hasNext()) {", "+      String name = itor.next();", "+      try {", "+        _createCompiler(name, availableCompilers);", "+      }", "+      catch (Throwable t) {", "+        // Custom compiler failed to load.  Signal the user?", "+//        System.err.println(\"Unable to load \" + name);", "+      }", "+    }", "+"]}], "num": 18363}