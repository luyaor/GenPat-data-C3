{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffa19a92cd213c5785049a287ea92219", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ca66607ef39f3cfd7bf1b7e20c561b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassSignatureContext.java", "commitBeforeChange": "73d8f0963e3941f0992013e94dd38c610fad8320", "commitAfterChange": "79f5d66e5d12491f568b49d5064798e6d989d102", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public VariableType getTypeVariable(String name, TypeSystem ts)", "signatureAfterChange": "   public VariableType getTypeVariable(String name, TypeSystem ts)", "diff": ["-  /** Return the type variable with the given name, or {@code null} if it does not exist. */", "-  public VariableType getTypeVariable(String name, TypeSystem ts) {", "-    VariableType result = declaredTypeVariable(name, ts);", "-    return (result == null) ? super.getTypeVariable(name, ts) : result;", "+  /** Return the type variable with the given name, or {@code null} if it does not exist. */", "+  public VariableType getTypeVariable(String name, TypeSystem ts) {", "+    VariableType result = declaredTypeVariable(name);", "+    if (result != null) { return result; }", "+    else if (!matchesClass(name)) { return super.getTypeVariable(name, ts); }", "+    else { return null; }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b725442806c9e8c3289e6a4952985498", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "commitAfterChange": "40f75fb9af67065ae22daabe92401f806f2b3766", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start, final int length)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start, final int length)", "diff": ["-   */", "+    */", "-    curLength = ! cursor.atEnd() ? cursor.current().getSize() - rmc.getBlockOffset() : start + length;", "-    curState = ! cursor.atEnd()  ? cursor.current().getHighlightState() : 0;", "+    // NOTE: old code threw an exception if cursor.atStart(); it used wrong value for curLength atEnd too", "+//    curLength = ! cursor.atEnd() ? cursor.current().getSize() - rmc.getBlockOffset() : start + length; ", "+//    curState = ! cursor.atEnd() ? cursor.current().getHighlightState() : 0;", "+    if (cursor.atEnd() || cursor.atStart()) { // cursor is not inside a reduced model token", "+      curLength = length;", "+      curState = 0;", "+    }", "+    else {", "+      curLength = cursor.current().getSize() - rmc.getBlockOffset();", "+      curState = cursor.current().getHighlightState();", "+    }", "-      if(cursor.atEnd())", "-        break;", "+      if (cursor.atEnd()) break;"]}], "num": 15828}