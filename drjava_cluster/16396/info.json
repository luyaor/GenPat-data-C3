{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f614179a28d10fb2e8a6bbabbd5b449", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9a1579267c2f75c560056aafdc79eee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree(int indentLevel)", "signatureAfterChange": "   public void buildTree(int indentLevel)", "diff": ["-        ", "-      rule01 = new QuestionInsideComment(rule02, rule13);  ", "-//      rule44 = new QuestionWingComment(rule43, rule13),  /* intended to replace preceding line so that commented lines are left alone", "-//      rule43 = new ActionDoNothing(),", "-//      rule01 = new QuestionInsideComment(rule02, rule44);", "+", "+      rule43 = new ActionDoNothing(),", "+      rule44 = new QuestionCurrLineIsWingComment(rule43, rule13),", "+      rule01 = new QuestionInsideComment(rule02, rule44);", "+       ", "+//      rule01 = new QuestionInsideComment(rule02, rule13);  /* replaced by preceding three rules */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb60d108307eff4fa451b9c595f610de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "3fa558792f5d2e5d7bf38191f215297d2a1f8954", "commitAfterChange": "ea3de3bd50de8d728bdb5d615bd9b8838d2e94b4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree(int indentLevel)", "signatureAfterChange": "   public void buildTree(int indentLevel)", "diff": ["+      rule60 = new ActionStartPrevLinePlus(\"\"),", "-      rule24 = rule25,", "+      rule24 = new QuestionPrevLineStartsWith(\"@\", rule60, rule25),", "-      rule17 = new QuestionBraceIsCurly(rule18, rule25),  // enclosing block/expr-list opens with '{'?", "+      rule17 = new QuestionBraceIsCurly(rule18, rule24),  // enclosing block/expr-list opens with '{'?"]}], "num": 16396}