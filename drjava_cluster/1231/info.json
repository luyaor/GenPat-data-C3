{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aff9babdb63dcb6de3e20ce605e1e1df", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bd226c0123f1644e1ba831e8f6872d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public Void forClassDefDoFirst(ClassDef that)", "signatureAfterChange": "   public Void forClassDefDoFirst(ClassDef that)", "diff": ["-    String name = that.getName().getText();", "+    String name = that.getName().getText();  // name of defined class", "-      if (s.endsWith(name) && !s.equals(getQualifiedClassName(name))) {", "+      if (s.endsWith(name) && ! s.equals(getQualifiedClassName(name))) {", "-    //top level classes cannot be private.", "+    // top level classes cannot be private.", "+    ", "+    // See if this is a Blacklisted class.  Blacklisted classes are any classes in java.lang or TestCase.", "+    SymbolData javaLangClass = ", "+      getSymbolData(\"java.lang.\" + that.getName().getText(), that.getSourceInfo(), true, false, false, false);", "+    if (that.getName().getText().equals(\"TestCase\") || (javaLangClass != null && ! javaLangClass.isContinuation())) {", "+      _addError(\"You cannot define a class with the name \" + that.getName().getText() + ", "+                \" because that class name is reserved.\" +", "+                \"  Please choose a different name for this class\", that);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c98b33c2bc2f8ef900f332280ae7d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 200, "signatureBeforeChange": "   public void updateFileTitle()", "signatureAfterChange": "   public void updateFileTitle()", "diff": ["+    ", "+    String fileTitle = doc.getDisplayFullPath();", "+    if (DrJava.getConfig().getSetting(LIGHTWEIGHT_PARSING_ENABLED).booleanValue()) {", "+      String temp = _model.getParsingControl().getEnclosingClassName(doc);", "+      if ((temp!=null) && (temp.length()>0)) { fileTitle = fileTitle + \" - \" + temp; }", "+    }", "+", "-    _fileNameField.setText(doc.getDisplayFullPath());", "+    if (!_fileNameField.getText().equals(fileTitle)) { _fileNameField.setText(fileTitle); }"]}], "num": 1231}