{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bad52e13f780ff8908707c43927630ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e8224f7f3fb048b5b5e3590b106208", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "commitAfterChange": "d7bd3eaf7514715e375acabd9bf0f41e4281985a", "methodNumberBeforeChange": 302, "methodNumberAfterChange": 296, "signatureBeforeChange": "          public FunctionInvocationCandidate(Function f, Iterable<? extends Type> targs,                                        Iterable<? extends Expression> args, Option<Type> expected)", "signatureAfterChange": "          public FunctionInvocationCandidate(F f, Iterable<? extends Type> targs,                                        Iterable<? extends Expression> args, Option<Type> expected)", "diff": ["-    public FunctionInvocationCandidate(Function f, Iterable<? extends Type> targs,", "+    public FunctionInvocationCandidate(F f, Iterable<? extends Type> targs,", "-      _matcher = makeMatcher(f.typeParameters(), targs, parameterTypes(), args, f.returnType(), expected);", "+      _matcher = makeMatcher(f.typeParameters(), targs, SymbolUtil.parameterTypes(f), args, f.returnType(), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f67f7995e1784f1bdc53aedec0e170", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 302, "methodNumberAfterChange": 302, "signatureBeforeChange": "          public FunctionInvocationCandidate(Function f, Iterable<? extends Type> targs,                                        Iterable<? extends Expression> args, Option<Type> expected)", "signatureAfterChange": "          public FunctionInvocationCandidate(Function f, Iterable<? extends Type> targs,                                        Iterable<? extends Expression> args, Option<Type> expected)", "diff": ["-      _matcher = makeMatcher(f.declaredTypeParameters(), targs, parameterTypes(), args, f.returnType(), expected);", "+      _matcher = makeMatcher(f.typeParameters(), targs, parameterTypes(), args, f.returnType(), expected);"]}], "num": 28475}