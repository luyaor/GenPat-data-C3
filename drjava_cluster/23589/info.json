{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c766501befcf61aee4fe7dd6876bca4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3de30443f881906bdec0a7fdfed6103", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ae4333c8dd1b54b8a781008188f09b6786d95ae2", "commitAfterChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": "   private synchronized void _updateWatches() throws DebugException", "signatureAfterChange": "   private synchronized void _updateWatches() throws DebugException", "diff": ["-        ", "+", "+          frames = thread.frames();", "+        catch (InvalidStackFrameException isfe) {", "+          currWatch.setNoValue();", "+          currWatch.setNoType();", "+          _log(\"Failed to get local var from stack frame\", isfe);", "+          continue;", "+        }", "-          currWatch.setValue(_getValue(currFrame.getValue(localVar)));", "+          // currWatch.setValue(_getValue(currFrame.getValue(localVar)));", "-            currWatch.setType(String.valueOf(localVar.type()));", "+            Value v = _getValueOfLocalVariable(localVar, thread);", "+            currWatch.setValue(v);", "+            // currWatch.setType(String.valueOf(localVar.type()));", "+            currWatch.setType(v.type().name());", "-          catch (ClassNotLoadedException cnle) {", "+          catch (Exception ex) {", "+            _log(\"Exception when getting the value of a local variable\", ex);", "+            currWatch.setNoValue();", "-        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea6acb621e4be819db97301ada0ec3fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/SyntaxErrorResult.java", "commitBeforeChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "commitAfterChange": "462c4a613a015a2dbcac948815ea1318bb028f22", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public SyntaxErrorResult(TokenMgrError pe, String s)", "signatureAfterChange": "    public SyntaxErrorResult(ParseError pe, String s)", "diff": ["+  public SyntaxErrorResult(ParseError pe, String s)", "+  {", "+    ParseException parseEx = pe.getParseException();", "+    if(parseEx != null) {", "+      _startRow = parseEx.getBeginLine();", "+      _startCol = parseEx.getBeginColumn();", "+      _endRow = parseEx.getEndLine();", "+      _endCol = parseEx.getEndColumn();", "+      _errorMessage = parseEx.getShortMessage();      ", "+    }      ", "+    else {", "+      _startRow = _endRow = pe.getLine();", "+      _startCol = _endCol = pe.getColumn();", "+      _errorMessage = pe.getMessage();", "+    }", "+    ", "+    _interaction = s;", "+  }"]}], "num": 23589}