{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "433a8d014dc928f43afbeb310dbe834e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd13451bdd743b7a0bc71589695afdf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "commitAfterChange": "f631b97f7a46e37b22216cbc1b865ac25185f25a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "signatureAfterChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "diff": ["+    assert(_model instanceof TestInteractionsModel);", "+    TestInteractionsModel model = (TestInteractionsModel)_model;", "-    InteractionsScriptModel ism = _model.loadHistoryAsScript(new FileOpenSelector() {", "+    InteractionsScriptModel ism = model.loadHistoryAsScript(new FileOpenSelector() {", "-    InteractionsDocument doc = _model.getDocument();", "+    InteractionsDocument doc = model.getDocument();", "-    assertEquals(\"Should have \\\"executed\\\" the second interaction.\", line2, _model.toEval);", "+    assertEquals(\"Should have \\\"executed\\\" the second interaction.\", line2, model.toEval);", "-    _model.replReturnedVoid();", "+    model.replReturnedVoid();", "-    assertEquals(\"Should have \\\"executed\\\" the first interaction.\", line1, _model.toEval);", "+    assertEquals(\"Should have \\\"executed\\\" the first interaction.\", line1, model.toEval);", "-    _model.replReturnedVoid();", "+    model.replReturnedVoid();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a1d6f63abcb98e4ecc57d476df8a52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "commitAfterChange": "f631b97f7a46e37b22216cbc1b865ac25185f25a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInterpretCurrentInteraction() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretCurrentInteraction() throws DocumentAdapterException", "diff": ["+    assert(_model instanceof TestInteractionsModel);", "+    TestInteractionsModel model = (TestInteractionsModel)_model;", "-    InteractionsDocument doc = _model.getDocument();", "-    _model.interpretCurrentInteraction();", "+    InteractionsDocument doc = model.getDocument();", "+    model.interpretCurrentInteraction();", "-    _model.replReturnedVoid();", "-    assertEquals(\"string being interpreted\", \"\", _model.toEval);", "+    model.replReturnedVoid();", "+    assertEquals(\"string being interpreted\", \"\", model.toEval);", "-    _model.interpretCurrentInteraction();", "+    model.interpretCurrentInteraction();", "-    _model.replReturnedVoid();", "-    assertEquals(\"string being interpreted\", code, _model.toEval);", "+    model.replReturnedVoid();", "+    assertEquals(\"string being interpreted\", code, model.toEval);"]}], "num": 13837}