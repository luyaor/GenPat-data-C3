{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63b5c9503c262a1f49201f6cb103283b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3558c5f9ddfdb530b99d795daeacdf78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "          public void testForNumericAssignmentExpression()", "signatureAfterChange": "          public void testForNumericAssignmentExpression()", "diff": ["-      assertEquals(\"Error message should be correct\", \"You cannot use Flanders here, because it may not have been given a value\",", "-                   errors.getLast().getFirst());", "+      assertEquals(\"Error message should be correct\", ", "+                   \"You cannot use Flanders here, because it may not have been given a value\",", "+                   errors.get(0).getFirst());", "-      assertEquals(\"Error message should be correct\", \"You cannot assign a new value to Flanders because it is immutable and has already been given a value\",", "-                   errors.getLast().getFirst());", "+      assertEquals(\"Error message should be correct\", ", "+                   \"You cannot assign a new value to Flanders because it is immutable and has already been given a value\",", "+                   errors.get(1).getFirst());", "-      assertEquals(\"There should be 4 errors\", 4, errors.size());", "-      assertEquals(\"The first error message should be correct\", \"You cannot use Flanders here, because it may not have been given a value\", errors.get(2).getFirst());", "-      assertEquals(\"The second error message should be correct\", \"You cannot use Flanders here, because it may not have been given a value\", errors.getLast().getFirst());", "-", "-      ", "+      assertEquals(\"There should still be 2 errors\", 2, errors.size());  // Generated duplicate error message", "+      assertEquals(\"The new error message should be correct\", ", "+                   \"You cannot use Flanders here, because it may not have been given a value\", ", "+                   errors.get(0).getFirst()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff5ac2f8e08b5b9b96b34d6eb326ca02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-      assertEquals(\"The tenth error message should be correct\", \"Hspia extends TestCase and thus must be explicitly declared public\" , errors.get(9).getFirst());", "-      assertEquals(\"The eleventh error message should be correct\", \"Class Hspia does not have any valid test methods.  Test methods must be declared public, must return void, and must start with the word \\\"test\\\"\" , errors.get(10).getFirst());", "+      assertEquals(\"The tenth error message should be correct\", ", "+                   \"Hspia extends TestCase and thus must be explicitly declared public\" , ", "+                   errors.get(9).getFirst());", "+      assertEquals(\"The eleventh error message should be correct\", ", "+                   \"Class Hspia does not have any valid test methods.  Test methods must be declared public, \" +", "+                   \"must return void, and must start with the word \\\"test\\\"\" , ", "+                   errors.get(10).getFirst());", "-      assertEquals(\"There should now be 12 errors\", 12, errors.size());", "-      assertEquals(\"The 12th error message should be correct\", \"Class Hspia does not have any valid test methods.  Test methods must be declared public, must return void, and must start with the word \\\"test\\\"\" , errors.get(11).getFirst());", "+      assertEquals(\"There should still be 11 errors\", 11, errors.size());  // Generated duplicate error message", "+      assertEquals(\"The 12th error message should be correct\", ", "+                   \"Class Hspia does not have any valid test methods.  Test methods must be declared public, \" +", "+                   \"must return void, and must start with the word \\\"test\\\"\" , ", "+                   errors.get(10).getFirst());"]}], "num": 16399}