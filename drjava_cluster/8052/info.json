{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41712f61792b49362ad9614ef3689a83", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4c05c42ce48a586a5c13661c0be041f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelListTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testNextItem()", "signatureAfterChange": "    public void testNextItem()", "diff": ["-    itFull.insert(new Integer(0));", "-    assertEquals(\"#0.2\", new Integer(0), itFull.current());", "-    itFull.insert(new Integer(1));", "-    assertEquals(\"#0.1\", new Integer(1), itFull.current());", "-    assertEquals(\"#0.0\", new Integer(0), itFull.nextItem());", "+    itFull.insert(Integer.valueOf(0));", "+    assertEquals(\"#0.2\", Integer.valueOf(0), itFull.current());", "+    itFull.insert(Integer.valueOf(1));", "+    assertEquals(\"#0.1\", Integer.valueOf(1), itFull.current());", "+    assertEquals(\"#0.0\", Integer.valueOf(0), itFull.nextItem());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f598e7457f50dccf7518b1ef2be11a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelListTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testInsertFront()", "signatureAfterChange": "    public void testInsertFront()", "diff": ["-    fFull.insertFront(new Integer(3));", "-    fFull.insertFront(new Integer(2));", "-    fFull.insertFront(new Integer(1));", "-    fFull.insertFront(new Integer(0));", "+    fFull.insertFront(Integer.valueOf(3));", "+    fFull.insertFront(Integer.valueOf(2));", "+    fFull.insertFront(Integer.valueOf(1));", "+    fFull.insertFront(Integer.valueOf(0));", "-      assertEquals(new Integer(i), itFull.current());", "+      assertEquals(Integer.valueOf(i), itFull.current());"]}], "num": 8052}