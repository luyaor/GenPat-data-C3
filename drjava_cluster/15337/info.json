{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8824695c8f37cbf7a4b1cada6d4be177", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2154adbe1d36776cd1ab67cd30d73ff3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParenDelimsWithText() throws BadLocationException", "signatureAfterChange": "   public void testParenDelimsWithText() throws BadLocationException", "diff": ["-    assertTrue(\"line after paren\", rule.applyRule(_doc, 9, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after comma\", rule.applyRule(_doc, 12, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after semicolon\", rule.applyRule(_doc, 15, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after bracket\", rule.applyRule(_doc, 18, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after close paren\", !rule.applyRule(_doc, 24, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after paren\", rule.testApplyRule(_doc, 9, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after comma\", rule.testApplyRule(_doc, 12, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after semicolon\", rule.testApplyRule(_doc, 15, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after bracket\", rule.testApplyRule(_doc, 18, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after close paren\", !rule.testApplyRule(_doc, 24, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304f1a126aad7ba20924bd935e8c9b33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testParenDelimsNoText() throws BadLocationException", "signatureAfterChange": "   public void testParenDelimsNoText() throws BadLocationException", "diff": ["-    assertTrue(\"line after paren\", rule.applyRule(_doc, 2, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after comma\", rule.applyRule(_doc, 4, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after semicolon\", rule.applyRule(_doc, 6, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after bracket\", rule.applyRule(_doc, 8, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after text\", !rule.applyRule(_doc, 12, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after paren\", rule.testApplyRule(_doc, 2, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after comma\", rule.testApplyRule(_doc, 4, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after semicolon\", rule.testApplyRule(_doc, 6, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after bracket\", rule.testApplyRule(_doc, 8, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after text\", !rule.testApplyRule(_doc, 12, Indenter.IndentReason.OTHER));"]}], "num": 15337}