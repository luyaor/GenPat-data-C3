{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4075f7a5b8c52d5c32fb8ac0107e5e44", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1cf09a9e93ae7570ac9246322706a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testDoubleOps() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testDoubleOps() throws InterpreterException", "diff": ["-    Pair<String,Object>[] cases = new Pair[] {", "+    Pair<String,Object>[] cases = new Pair[]{", "-      Pair.make(\"5.6 < 6.7\", Boolean.valueOf(5.6 < 6.7)),", "+      Pair.make(\"5.6 < 6.7\", (Object) Boolean.valueOf(5.6 < 6.7)),", "-      Pair.make(\"5.6 <= 5.6\", Boolean.valueOf(5.6 <= 5.6)),", "+      Pair.make(\"5.6 <= 5.6\", (Object) Boolean.valueOf(5.6 <= 5.6)),", "-      Pair.make(\"5.6 > 4.5\", Boolean.valueOf(5.6 > 4.5)),", "+      Pair.make(\"5.6 > 4.5\", (Object) Boolean.valueOf(5.6 > 4.5)),", "-      Pair.make(\"5.6 >= 56.4\", Boolean.valueOf(5.6 >= 56.4)),", "+      Pair.make(\"5.6 >= 56.4\", (Object) Boolean.valueOf(5.6 >= 56.4)),", "-      Pair.make(\"5.4 == 5.4\", Boolean.valueOf(5 == 5)),", "+      Pair.make(\"5.4 == 5.4\", (Object) Boolean.valueOf(5 == 5)),", "-      Pair.make(\"5.5 != 5.5\", Boolean.valueOf(5 != 5)),", "+      Pair.make(\"5.5 != 5.5\", (Object) Boolean.valueOf(5 != 5)),", "-      Pair.make(\" + 5.6\", new Double(+5.6)),", "+      Pair.make(\" + 5.6\", (Object) new Double(+5.6)),", "-      Pair.make(\"-5.6\", new Double(-5.6)),", "+      Pair.make(\"-5.6\", (Object) new Double(-5.6)),", "-      Pair.make(\"5.6 * 4.5\", new Double(5.6*4.5)),", "+      Pair.make(\"5.6 * 4.5\", (Object) new Double(5.6*4.5)),", "-      Pair.make(\"5.6 / 3.4\", new Double(5.6/3.4)),", "+      Pair.make(\"5.6 / 3.4\", (Object) new Double(5.6/3.4)),", "-      Pair.make(\"5.6 % 3.4\", new Double(5.6%3.4)),", "+      Pair.make(\"5.6 % 3.4\", (Object) new Double(5.6%3.4)),", "-      Pair.make(\"5.6 + 6.7\", new Double(5.6 + 6.7)),", "+      Pair.make(\"5.6 + 6.7\", (Object) new Double(5.6 + 6.7)),", "-      Pair.make(\"4.5 - 3.4\", new Double(4.5 - 3.4)),", "+      Pair.make(\"4.5 - 3.4\", (Object) new Double(4.5 - 3.4)),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c11541f5d6d8b05ca4d1ab16d706b14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testBooleanOps() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testBooleanOps() throws InterpreterException", "diff": ["-      Pair.make(\"true && false\", Boolean.FALSE), Pair.make(\"true && true\",", "-          Boolean.TRUE),", "+      Pair.make(\"true && false\", (Object) Boolean.FALSE), Pair.make(\"true && true\",", "+          (Object) Boolean.TRUE),", "-      Pair.make(\"true || true\", Boolean.TRUE), Pair.make(\"false || true\", Boolean.TRUE),", "-          Pair.make(\"false || false\", Boolean.FALSE),", "+      Pair.make(\"true || true\", (Object) Boolean.TRUE), Pair.make(\"false || true\", (Object) Boolean.TRUE),", "+          Pair.make(\"false || false\", (Object) Boolean.FALSE),", "-      Pair.make(\"!true\", Boolean.FALSE), Pair.make(\"!false\", Boolean.TRUE),", "+      Pair.make(\"!true\", (Object) Boolean.FALSE), Pair.make(\"!false\", (Object) Boolean.TRUE),", "-      Pair.make(\"true == true\", Boolean.TRUE), Pair.make(\"false == true\", Boolean.FALSE),", "-          Pair.make(\"false == false\", Boolean.TRUE),", "+      Pair.make(\"true == true\", (Object) Boolean.TRUE), Pair.make(\"false == true\", (Object) Boolean.FALSE),", "+          Pair.make(\"false == false\", (Object) Boolean.TRUE),", "-      Pair.make(\"false ^ false\", Boolean.valueOf(false ^ false)), Pair.make(\"false ^ true \",", "-          Boolean.valueOf(false ^ true))", "+      Pair.make(\"false ^ false\", (Object) Boolean.valueOf(false ^ false)), Pair.make(\"false ^ true \",", "+          (Object) Boolean.valueOf(false ^ true))"]}], "num": 6441}