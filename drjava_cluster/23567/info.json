{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "374a0b2d7692aec8c9c347db50f0c738", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e6de455c275671f42eda9420c3e2ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCompileAbortsIfAnyUnsaved() throws Exception", "signatureAfterChange": "   public void testCompileAbortsIfAnyUnsaved() throws BadLocationException, IOException", "diff": ["-  public void testCompileAbortsIfAnyUnsaved() throws Exception {", "+  public void testCompileAbortsIfAnyUnsaved() throws BadLocationException, IOException {", "-    CompileShouldFailListener listener = new CompileShouldFailListener() {", "+    TestListener listener = new TestListener() {", "-    listener.compile(doc);", "+    doc.startCompile();", "-    _log.log(\"testCompileAbortsIfAnyUnsaved complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b556c2d5061525f6a37fd1fe691922", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCompileAbortsIfUnsaved() throws Exception", "signatureAfterChange": "   public void testCompileAbortsIfUnsaved() throws BadLocationException, IOException", "diff": ["-  public void testCompileAbortsIfUnsaved() throws Exception {", "+  public void testCompileAbortsIfUnsaved() throws BadLocationException, IOException {", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener() {", "+    TestListener listener = new TestListener() {", "-    listener.compile(doc);", "-    _log.log(\"critical compile complete\");", "+    doc.startCompile();", "-    _log.log(\"testCompileAbortsIfUnsaved complete\");"]}], "num": 23567}