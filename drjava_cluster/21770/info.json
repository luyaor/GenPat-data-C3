{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ed83516b0ec4881f0a28b3ddfe6289a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1267dba0f38187af831858977865d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private void _initPopup()", "signatureAfterChange": "   private void _initPopup()", "diff": ["-    Action suspendAction", "-      = new AbstractAction() {", "+    Action suspendAction = new AbstractAction(\"Select Thread\") {", "-        try{", "+        try {", "-        catch(DebugException exception){", "+        catch(DebugException exception) {", "-    ", "+", "-    JMenuItem threadSuspendedSelect = new JMenuItem();", "-    threadSuspendedSelect.setAction(suspendAction);", "-    JMenuItem threadSuspendedResume = new JMenuItem();", "-    threadSuspendedResume.setAction(new AbstractAction() {", "+    JMenuItem threadSuspendedSelect = new JMenuItem(suspendAction);", "+    JMenuItem threadSuspendedResume = new JMenuItem(new AbstractAction() {", "-        try{", "+        try {", "-        catch(DebugException dbe){", "+        catch(DebugException dbe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdba05ce8b01b7dbf78bae86f525f648", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/FileFinderTest.java", "commitBeforeChange": "52e75c08548a33d68da52ba945e927947c13bd71", "commitAfterChange": "bc2ff71530c43866f8f779132c88a0e166f012d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testFindFile()", "signatureAfterChange": "      public void testFindFile()", "diff": ["-  public void testFindFile()", "-  {", "+  public void testFindFile() {", "-    try", "-    {", "+    try {", "-    catch(IOException ioe)", "-    {", "+    catch(IOException ioe) {", "+    //When running the ant script for testing this is the relative path to the directory that contains this file", "+    ff.addPath(\"dynamicjava/interpreter\");", "+    ", "+    //Try to find a file that does exist, namely this current file", "+    try {", "+      thisFile = ff.findFile(\"Interpreter.java\");", "+      assertTrue(\"Found This File\", thisFile != null);", "+    }", "+    catch(IOException ioe) {", "+      fail();", "+    }", "+    ", "+    ", "-    try", "-    {", "+    try {", "-    catch(IOException fnf)", "-    {", "+    catch(IOException fnf) {"]}], "num": 21770}