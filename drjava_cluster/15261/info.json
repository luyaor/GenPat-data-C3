{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36effd26f525dbd05a7c23bda193634d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3be69eb364de57f102ab9016e16337", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "     @Override public Type visit(SimpleAllocation node)", "signatureAfterChange": "     @Override public Type visit(SimpleAllocation node)", "diff": ["-      Iterable<? extends Expression> args = IterUtil.empty();", "-      if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }", "+      Iterable<? extends Expression> args = node.getArguments();", "+      checkList(args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0a47e87eb97df94d87d3a065d7671e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "     @Override public Type visit(StaticMethodCall node)", "signatureAfterChange": "     @Override public Type visit(StaticMethodCall node)", "diff": ["-      Iterable<? extends Expression> args = IterUtil.empty();", "-      if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }", "+      Iterable<? extends Expression> args = node.getArguments();", "+      checkList(args);"]}], "num": 15261}