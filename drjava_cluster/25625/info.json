{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e1b9272b26dac2b8e261445ae60fe98", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f7723a18830f56c2f76c00b27f3a5b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "          public void test_variableDeclaration2VariableData()", "signatureAfterChange": "          public void test_variableDeclaration2VariableData()", "diff": ["-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                            new Word(SourceInfo.NO_INFO, \"i\")) };", "-      VariableDeclaration vd1 = new VariableDeclaration(SourceInfo.NO_INFO,PUBLIC_MAV, d1); ", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                            new Word(SourceInfo.NONE, \"i\")) };", "+      VariableDeclaration vd1 = new VariableDeclaration(SourceInfo.NONE,PUBLIC_MAV, d1); ", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                            new Word(SourceInfo.NO_INFO, \"i\")), ", "-        new InitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                          new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "-                                          new Word(SourceInfo.NO_INFO, \"b\"), ", "-                                          new BooleanLiteral(SourceInfo.NO_INFO, true)) };", "-      VariableDeclaration vd2 = new VariableDeclaration(SourceInfo.NO_INFO,PRIVATE_MAV, d2); ", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                            new Word(SourceInfo.NONE, \"i\")), ", "+        new InitializedVariableDeclarator(SourceInfo.NONE, ", "+                                          new PrimitiveType(SourceInfo.NONE, \"boolean\"), ", "+                                          new Word(SourceInfo.NONE, \"b\"), ", "+                                          new BooleanLiteral(SourceInfo.NONE, true)) };", "+      VariableDeclaration vd2 = new VariableDeclaration(SourceInfo.NONE,PRIVATE_MAV, d2); ", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new ClassOrInterfaceType(SourceInfo.NO_INFO, \"LinkedList\", new Type[0]), ", "-                                            new Word(SourceInfo.NO_INFO, \"myList\"))};", "-      VariableDeclaration vd3 = new VariableDeclaration(SourceInfo.NO_INFO, PRIVATE_MAV, d3);", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new ClassOrInterfaceType(SourceInfo.NONE, \"LinkedList\", new Type[0]), ", "+                                            new Word(SourceInfo.NONE, \"myList\"))};", "+      VariableDeclaration vd3 = new VariableDeclaration(SourceInfo.NONE, PRIVATE_MAV, d3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a254a7a7cb6a6f54145ed383a71e17bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "          public void testForPlusAssignmentExpression()", "signatureAfterChange": "          public void testForPlusAssignmentExpression()", "diff": ["-      ComplexNameReference nf = new ComplexNameReference(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"Ned\")), new Word(SourceInfo.NO_INFO, \"Flanders\"));", "-      PlusAssignmentExpression pa = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new IntegerLiteral(SourceInfo.NO_INFO, 5));", "+      ComplexNameReference nf = ", "+        new ComplexNameReference(SourceInfo.NONE, ", "+                                 new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"Ned\")), ", "+                                 new Word(SourceInfo.NONE, \"Flanders\"));", "+      PlusAssignmentExpression pa = ", "+        new PlusAssignmentExpression(SourceInfo.NONE, nf, new IntegerLiteral(SourceInfo.NONE, 5));", "-      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, nf);", "+      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(SourceInfo.NONE, nf, nf);", "-      SimpleNameReference sRef = new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"s\"));", "+      SimpleNameReference sRef = new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"s\"));", "-        new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new BooleanLiteral(SourceInfo.NO_INFO, true));", "+        new PlusAssignmentExpression(SourceInfo.NONE, sRef, new BooleanLiteral(SourceInfo.NONE, true));", "-        new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new StringLiteral(SourceInfo.NO_INFO, \"cat\"));", "+        new PlusAssignmentExpression(SourceInfo.NONE, sRef, new StringLiteral(SourceInfo.NONE, \"cat\"));", "-        new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new StringLiteral(SourceInfo.NO_INFO, \"house \"));", "+        new PlusAssignmentExpression(SourceInfo.NONE, nf, new StringLiteral(SourceInfo.NONE, \"house \"));"]}], "num": 25625}