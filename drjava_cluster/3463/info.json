{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ffcbbc88d4e684428011f59f2c88ce8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71bd3f71f3744ae38f13b372602c113a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 21, "signatureBeforeChange": "    private int _getIndexOfDocument(Document doc)", "signatureAfterChange": "                            public boolean equals(Object obj)", "diff": ["+             ", "+             public boolean equals(Object obj)", "+             {", "+               try", "+               {", "+               ", "+                 INavigatorItem castidoc = (INavigatorItem)obj;", "+                 return this == castidoc;", "+               }", "+               catch(ClassCastException e)", "+               {", "+                 return oddoc.equals(obj);", "+               }", "+             }", "-    Enumeration en = _definitionsDocs.elements();", "-      if (doc == ((OpenDefinitionsDocument)en.nextElement()).getDocument()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a6c2b07b958184d7fd209761b26c062", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _setStackCellFont(Component renderer, int row)", "signatureAfterChange": "   public DebugStackData getSelectedStackItem()", "diff": ["-  private void _setStackCellFont(Component renderer, int row) {", "-    DebugStackData stackData = _stackFrames.elementAt(row);", "-    if (stackData.getMethod().equals(_currentStackMethod) && ", "-        stackData.getLine() == _currentStackLine) {", "-      renderer.setFont(getFont().deriveFont(Font.BOLD));", "-    }", "+   */", "+  public DebugStackData getSelectedStackItem() {", "+    return _stackFrames.elementAt(_stackTable.getSelectedRow());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48832ff5ff2f2479321b9aacdd7e42a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _setThreadCellFont(Component renderer, int row)", "signatureAfterChange": "       private void _setThreadCellFont(int row)", "diff": ["+       */", "+      private void _setThreadCellFont(int row) {", "+        DebugThreadData currThread = _threads.elementAt(row);", "+        if (currThread.getUniqueID() == _currentThreadID &&", "+            currThread.isSuspended()) {", "+          setFont(getFont().deriveFont(Font.BOLD));", "+        }", "-   */", "-  private void _setThreadCellFont(Component renderer, int row) {", "-    DebugThreadData currThread = _threads.elementAt(row);", "-    if (currThread.getUniqueID() == _currentThreadID &&", "-        currThread.isSuspended()) {", "-      renderer.setFont(getFont().deriveFont(Font.BOLD));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d761ee3b3a10ff60ee0f1ed79f6108be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 417, "methodNumberAfterChange": 367, "signatureBeforeChange": "     public void breakpointSet(final Breakpoint bp)", "signatureAfterChange": "         public void regionAdded(final Breakpoint bp)", "diff": ["+        /* Called when a breakpoint is added. Must be executed in event thread. */", "+        public void regionAdded(final Breakpoint bp) {", "+          DefinitionsPane bpPane = getDefPaneGivenODD(bp.getDocument());", "+          _documentRegionHighlights.", "+            put(bp, bpPane.getHighlightManager().", "+                  addHighlight(bp.getStartOffset(), bp.getEndOffset(), ", "+                               bp.isEnabled() ? DefinitionsPane.BREAKPOINT_PAINTER", "+                                 : DefinitionsPane.DISABLED_BREAKPOINT_PAINTER));", "+          _updateDebugStatus();", "+        }", "-    /* Must be executed in event thread. */", "-    public void breakpointSet(final Breakpoint bp) {", "-//      // Only change GUI from event-dispatching thread", "-//      Runnable command = new Runnable() {", "-//        public void run() {", "-          DefinitionsPane bpPane = getDefPaneGivenODD(bp.getDocument());", "-          _breakpointHighlights.", "-            put(bp, bpPane.getHighlightManager().", "-                    addHighlight(bp.getStartOffset(), bp.getEndOffset(), ", "-                                 bp.isEnabled() ? DefinitionsPane.BREAKPOINT_PAINTER", "-                                                : DefinitionsPane.DISABLED_BREAKPOINT_PAINTER));", "-          _updateDebugStatus();", "-//        }", "-//      };", "-//      Utilities.invokeLater(command);", "-    }"]}], "num": 3463}