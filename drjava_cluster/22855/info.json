{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b956002be4ebe96489d95bfe047ee1f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "234d64bf8cd9b9dd8ca9a3a13cf810ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "54139845b7b497599e6df6198987b23e58827d38", "commitAfterChange": "1936e795bc2ab8d34c4602bb0e83d92772acfbeb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public String getVariableType(String var)", "signatureAfterChange": "   public String getVariableType(String var, int... indices)", "diff": ["-  public String getVariableType(String var) {", "+  public String getVariableType(String var, int... indices) {", "-    else { return _interpreterOptions.typeSystem().userRepresentation(lv.type()); }", "+    else {", "+      Type t = lv.type();", "+      for(int i=0; i<indices.length; ++i) {", "+        if (!_interpreterOptions.typeSystem().isArray(t)) { return \"<error: value is not an array>\"; }", "+        t = _interpreterOptions.typeSystem().arrayElementType(t);", "+      }", "+      return _interpreterOptions.typeSystem().userRepresentation(t);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d2cd1e2ea9049b0c639be1919755ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "54139845b7b497599e6df6198987b23e58827d38", "commitAfterChange": "1936e795bc2ab8d34c4602bb0e83d92772acfbeb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public String getVariableToString(String var, int... indices)", "diff": ["-  public String getVariableToString(String var) {", "+  public String getVariableToString(String var, int... indices) {", "-      try { return TextUtil.toString(val[0]); }", "+      Object o = val[0];", "+      for(int i=0; i<indices.length; ++i) {", "+        if (!o.getClass().isArray()) { return \"<error: value is not an array>\"; }", "+        o = Array.get(o, indices[i]);", "+      }", "+      try { return TextUtil.toString(o); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea4b2cb7228887bc967e7e17ebfb5aad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "467e5b5cdd1dcb74e3af8270c3f2ac9d390a6395", "commitAfterChange": "a30a5503c4bed745d3bf75a4b449d026f5c00795", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public String getVariableToString(String var, int... indices)", "signatureAfterChange": "   public String getVariableToString(String var)", "diff": ["-  public String getVariableToString(String var, int... indices) {", "+  public String getVariableToString(String var) {", "+    if (!isValidFieldName(var)) { return \"<error in watch name>\"; }", "-      for(int i = 0; i < indices.length; ++i) {", "-        if (!o.getClass().isArray()) { return \"<error: value is not an array>\"; }", "-        o = Array.get(o, indices[i]);", "-      }"]}], "num": 22855}