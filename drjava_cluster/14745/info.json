{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecbe713b47f83931d82d07809cbbccf5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4409c9dd5584801f3b9ac649686eab63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "commitAfterChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static List<List<List<String>>> commandLineToLists(String cmdline)", "signatureAfterChange": "   public static List<List<List<String>>> commandLineToLists(String cmdline)", "diff": ["-    // also add escaped process separator (':' or ';') as keyword, but treat it differently", "+    // also add escaped process separator ('#') as keyword, but treat it differently", "+    // also add escaped colon (':') as keyword on Windows, but treat it differently", "+    final String ESCAPED_COLON_SEPARATOR = ESCAPE+\":\";", "+    if (!ESCAPED_COLON_SEPARATOR.equals(ESCAPED_PATH_SEPARATOR)) {", "+      tok.addKeyword(ESCAPED_COLON_SEPARATOR); // escaped colon", "+    }", "-                   n.equals(ESCAPED_PIPE_SEPARATOR)) {", "+                   n.equals(ESCAPED_PIPE_SEPARATOR) ||", "+                   n.equals(ESCAPED_COLON_SEPARATOR)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e02db8d87308ad5025c908e8c978c98d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2cd89063cbfbf0917c73ab6eef3bf3a4c73e4766", "commitAfterChange": "b7a80f7ccc058818677874970560634a8628aea6", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private ArrayList extractErrors(LinkedList lines)", "signatureAfterChange": "   private ArrayList extractErrors(LinkedList lines)", "diff": ["+    final String ERROR_INDICATOR = \"Error: \";", "+      // Check for the telltale signs of a thrown exception or error.", "-      // Check for the telltale signs of a thrown exception.", "-      errStart = output.indexOf(EXCEPTION_INDICATOR);", "+      errStart = output.indexOf(ERROR_INDICATOR);", "+      ", "+      // If we haven't found an error, look for an exception.", "+      if (errStart == -1) {", "+        errStart = output.indexOf(EXCEPTION_INDICATOR);", "+      }", "+            ", "-        do {", "-          buf.append(output);", "+        buf.append(output);", "+        while (lines.size() > 0) {", "-        } while (lines.size() > 0);", "+          buf.append('\\n');", "+          buf.append(output);", "+        }"]}], "num": 14745}