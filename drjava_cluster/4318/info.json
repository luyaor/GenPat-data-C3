{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d1d713dc5db59759a8fc2885fcea982", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29fab20c9ca7f7fe34605b3e11e839a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "f835199d645f480bb352cc51cff6dc5ae32e7dc4", "commitAfterChange": "f25bc20d2dd4058b4cf2bf5f693569e62fb40d6b", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 98, "signatureBeforeChange": "          public String toString()", "signatureAfterChange": "               public String toString()", "diff": ["-        result.append(\"{ \");", "-        boolean first = true;", "-        ", "-        for (Map.Entry<VariableType, Type> entry : _lowerBounds.entrySet()) {", "-          if (!first) { result.append(\", \"); }", "-          first = false;", "-          result.append(entry.getKey() + \" :> \" + userRepresentation(entry.getValue()));", "+        boolean firstScenario = true;", "+        for (ConstraintScenario s : scenarios()) {", "+          if (!firstScenario) { result.append(\" | \"); }", "+          firstScenario = false;", "+          result.append(\"{ \");", "+          boolean firstVar = true;", "+          for (VariableType var : s.boundVariables()) {", "+            if (firstVar) { result.append(\", \"); }", "+            firstVar = false;", "+            result.append(userRepresentation(s.lowerBound(var)));", "+            result.append(\" <: \");", "+            result.append(var.symbol().name());", "+            result.append(\" <: \");", "+            result.append(userRepresentation(s.upperBound(var)));", "+          }", "+          result.append(\" }\");", "-        for (Map.Entry<VariableType, Type> entry : _upperBounds.entrySet()) {", "-          if (!first) { result.append(\", \"); }", "-          first = false;", "-          result.append(entry.getKey() + \" <: \" + userRepresentation(entry.getValue()));", "-        }", "-        result.append(\" }\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a777b466781101a0d5dbba371556ef45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "f835199d645f480bb352cc51cff6dc5ae32e7dc4", "commitAfterChange": "f25bc20d2dd4058b4cf2bf5f693569e62fb40d6b", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 106, "signatureBeforeChange": "          public ConstraintSet and(ConstraintSet s)", "signatureAfterChange": "          public Option<ConstraintScenario> and(ConstraintScenario that)", "diff": ["-    ", "-    public ConstraintSet and(ConstraintSet s) {", "-      if (!s.isSatisfiable()) { return s; }", "-      else if (s.isEmpty()) { return this; }", "-      else {", "-        ConstraintSet result = new ConstraintSet(this);", "-        for (Map.Entry<VariableType, Type> entry : s._lowerBounds.entrySet()) {", "-          result = result.andLowerBound(entry.getKey(), entry.getValue());", "-        }", "-        for (Map.Entry<VariableType, Type> entry : s._upperBounds.entrySet()) {", "-          result = result.andUpperBound(entry.getKey(), entry.getValue());", "-        }", "-        return result;", "-      }", "-    }", "+    ", "+    public Option<ConstraintScenario> and(ConstraintScenario that) {", "+      ConstraintScenario result = new ConstraintScenario();", "+      for (VariableType var : union(_lowerBounds.keySet(), that._lowerBounds.keySet())) {", "+        result._lowerBounds.put(var, JOIN_NORM.value(IterUtil.make(lowerBound(var), that.lowerBound(var))));", "+      }", "+      for (VariableType var : union(_upperBounds.keySet(), that._upperBounds.keySet())) {", "+        result._upperBounds.put(var, MEET_NORM.value(IterUtil.make(upperBound(var), that.upperBound(var))));", "+      }", "+      return result.isWellFormed() ? Option.some(result) : Option.<ConstraintScenario>none(); ", "+    }"]}], "num": 4318}