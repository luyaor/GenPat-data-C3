{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6516beaf89c7b91c3185510350f8242c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93440ec369f3cba2e906c44302cb3744", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "3c18a1d03b53a699adfbc2df00845e9d60f9d1f5", "commitAfterChange": "4ec6eda5e5d4bd8e2b6e61afae08eb8548f8c4b5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void junitProject()", "signatureAfterChange": "   public void junitProject()", "diff": ["-//      File d = getProjectFile();", "-//      if(d == null) return;", "-//      d = d.getParentFile();", "-//      File[] files = FileOps.getFilesInDir(d, true);", "-//      for(File f: files){", "-//        try{", "-//          if(_getter.isAlreadyOpen(f)){", "-//            _getter.getDocumentForFile(f);", "-//          }else{", "-//            // assume the ", "-//          }", "-//        }catch(IOException e){", "-//          // error opening the file, so don't inlcude it in testing", "-//        }", "-//      }", "-      ", "-          if (!doc.isUntitled()) {", "+          if (doc.isProjectFile()) {", "-            files.add(f);", "+            if(f.getCanonicalPath().startsWith(_model.getProjectFile().getParentFile().getCanonicalPath())){", "+              files.add(f);", "+            }", "+        }catch(IOException e){", "+          // don't add it to the test"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e52ed1f4f35b89c8b450cad123f0f177", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "bacc5763617209be5cfc431d0c6a4d3d11d90cf0", "commitAfterChange": "cf9808a938fc5315d4aeb4ec51fe1039c1a26dfa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["-  ", "+  private String absp; // absolute path", "-    if (File.separatorChar == '/') { ", "-      absp = \"/home/javaplt/\";", "+    try {", "+      absp=new File(System.getProperty(\"java.io.tmpdir\")).getCanonicalPath() +", "+        File.separator;", "-    else {", "-      absp = \"c:/tmp/\";", "+    catch(IOException e) {", "+      fail(\"could not initialize temp path string\");"]}], "num": 25143}