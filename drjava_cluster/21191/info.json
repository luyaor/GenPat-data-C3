{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "132af84b670b5a5cad5564bc8b4451c0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fdaf875dfc7d400d883794b52399fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "commitAfterChange": "3d97d4e9732e553ec694cfc208cfcad91b929426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void openCommandLineFiles(MainFrame mf, String[] args)", "signatureAfterChange": "   public static void openCommandLineFiles(MainFrame mf, String[] args)", "diff": ["-     */", "-    public static void openCommandLineFiles(MainFrame mf, String[] args) {", "-        int i;", "-        for(i=0; i<args.length; i++) {", "-            final File file = new File(args[i]);", "-            FileOpenSelector command = new FileOpenSelector() {", "-                    public File getFile() {", "-                        return file;", "-                    }", "-                };", "-            try {", "-                OpenDefinitionsDocument doc = mf.getModel().openFile(command);", "-            } catch (FileNotFoundException ex) {", "-                //dialog: file not found", "-            } catch (Exception ex) {", "-        ", "-            }", "-        }", "-    }", "+   */", "+  public static void openCommandLineFiles(MainFrame mf, String[] args) {", "+    int i;", "+    for(i=0; i<args.length; i++) {", "+      final File file = new File(args[i]);", "+      FileOpenSelector command = new FileOpenSelector() {", "+        public File getFile() {", "+          return file;", "+        }", "+      };", "+      try {", "+        OpenDefinitionsDocument doc = mf.getModel().openFile(command);", "+      } catch (FileNotFoundException ex) {", "+        //dialog: file not found", "+      } catch (AlreadyOpenException aoe) {", "+        // This explicitly does nothing to ignore duplicate files.", "+      } catch (Exception ex) {", "+        throw new UnexpectedException(ex);", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6368a27c9ea9af355578c1a4ce9345fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManager.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void removeIfInList(File file)", "signatureAfterChange": "   public void removeIfInList(File file)", "diff": ["-    ", "-    public void removeIfInList(File file) {", "-      int index = _recentFiles.indexOf(file);", "-      ", "-      if (index >= 0) {", "-        _recentFiles.removeElementAt(index);", "-        JMenuItem delItem = _recentMenuItems.elementAt(index);", "-        _fileMenu.remove(delItem);", "-        _recentMenuItems.removeElementAt(index);", "-      }", "-    }", "+   */", "+  public void removeIfInList(File file) {", "+    // Use canonical path if possible", "+    File canonical = null;", "+    try {", "+      canonical = file.getCanonicalFile();", "+    }", "+    catch (IOException ioe) {", "+      // Oh well, compare against the file as is", "+    }", "+    ", "+    for (int i = 0; i < _recentFiles.size(); i++) {", "+      File currFile = _recentFiles.elementAt(i);", "+      boolean match = false;", "+      if (canonical != null) {", "+        try {", "+          match = currFile.getCanonicalFile().equals(canonical);", "+        }", "+        catch (IOException ioe) {", "+          // Oh well, compare the files themselves", "+          match = currFile.equals(file);", "+        }", "+      }", "+      else {", "+        // (couldn't find canonical for file; compare as is)", "+        match = currFile.equals(file);", "+      }", "+      ", "+      if (match) {", "+        _recentFiles.removeElementAt(i);", "+        JMenuItem menuItem = _recentMenuItems.elementAt(i);", "+        _fileMenu.remove(menuItem);", "+        _recentMenuItems.removeElementAt(i);", "+        break;"]}], "num": 21191}