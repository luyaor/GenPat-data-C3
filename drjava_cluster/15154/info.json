{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6bc38daa7565bdab9748948193eced34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c2822ffea3af6190f3c3b4f9400bae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "signatureAfterChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try {", "+//    _doc.acquireReadLock();", "+//    try {", "+    ", "+    ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "+    if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "+    ", "+    for (HighlightStatus stat: stats) {", "+      int location = stat.getLocation();", "+      int length = stat.getLength();", "-      ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "-      if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "+      // If this highlight status extends past p1, end at p1", "+      if (location + length > end) length = end - stat.getLocation();", "-      for (HighlightStatus stat: stats) {", "-        int location = stat.getLocation();", "-        int length = stat.getLength();", "-        ", "-        // If this highlight status extends past p1, end at p1", "-        if (location + length > end) length = end - stat.getLocation();", "-        ", "-        if (! (_doc instanceof InteractionsDJDocument) || ", "-            ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "-          setFormattingForState(g, stat.getState());", "-        Segment text = getLineBuffer(); ", "-        _doc.getText(location, length, text);", "-        x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "-      }", "+      if (! (_doc instanceof InteractionsDJDocument) || ", "+          ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "+        setFormattingForState(g, stat.getState());", "+      Segment text = getLineBuffer(); ", "+      _doc.getText(location, length, text);", "+      x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "-    finally { _doc.releaseReadLock(); }", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84be5a441b663f38b28da4edb27fa116", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "signatureAfterChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try {", "-    ", "-    ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "-    if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "-    ", "-    for (HighlightStatus stat: stats) {", "-      int location = stat.getLocation();", "-      int length = stat.getLength();", "+    _doc.acquireReadLock();", "+    try {", "-      // If this highlight status extends past p1, end at p1", "-      if (location + length > end) length = end - stat.getLocation();", "+      ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "+      if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "-      if (! (_doc instanceof InteractionsDJDocument) || ", "-          ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "-        setFormattingForState(g, stat.getState());", "-      Segment text = getLineBuffer(); ", "-      _doc.getText(location, length, text);", "-      x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "+      for (HighlightStatus stat: stats) {", "+        int location = stat.getLocation();", "+        int length = stat.getLength();", "+        ", "+        // If this highlight status extends past p1, end at p1", "+        if (location + length > end) length = end - stat.getLocation();", "+        ", "+        if (! (_doc instanceof InteractionsDJDocument) || ", "+            ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "+          setFormattingForState(g, stat.getState());", "+        Segment text = getLineBuffer(); ", "+        _doc.getText(location, length, text);", "+        x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "+      }", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2dfc04759d1835b6e408f01554869c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "signatureAfterChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try {", "+//    _doc.acquireReadLock();", "+//    try {", "+    ", "+    ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "+    if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "+    ", "+    for (HighlightStatus stat: stats) {", "+      int location = stat.getLocation();", "+      int length = stat.getLength();", "-      ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "-      if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "+      // If this highlight status extends past p1, end at p1", "+      if (location + length > end) length = end - stat.getLocation();", "-      for (HighlightStatus stat: stats) {", "-        int location = stat.getLocation();", "-        int length = stat.getLength();", "-        ", "-        // If this highlight status extends past p1, end at p1", "-        if (location + length > end) length = end - stat.getLocation();", "-        ", "-        if (! (_doc instanceof InteractionsDJDocument) || ", "-            ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "-          setFormattingForState(g, stat.getState());", "-        Segment text = getLineBuffer(); ", "-        _doc.getText(location, length, text);", "-        x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "-      }", "+      if (! (_doc instanceof InteractionsDJDocument) || ", "+          ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "+        setFormattingForState(g, stat.getState());", "+      Segment text = getLineBuffer(); ", "+      _doc.getText(location, length, text);", "+      x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "-    finally { _doc.releaseReadLock(); }", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}], "num": 15154}