{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7813f4f24a2fbe16d69cbc8084b5969d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141e1af84791a5bd277dfadbdc6e8f56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "7cfeec5d0573a05afa60f045397b7528ba2aa086", "commitAfterChange": "b155114812a8cbcc9237269e7062e3599ab1f574", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected final void invokeSlave(final String[] jvmArgs, final String cp, final File workDir) throws IOException,      RemoteException", "signatureAfterChange": "   protected final void invokeSlave(final String[] jvmArgs, final String cp, final File workDir) throws IOException,      RemoteException", "diff": ["-    if (propagate.containsKey(\"plt.debug.log\") || propagate.containsKey(\"plt.error.log\") || ", "-        propagate.containsKey(\"plt.log.factory\")) {", "+    if (!propagate.containsKey(\"plt.log.working.dir\") &&", "+        (propagate.containsKey(\"plt.debug.log\") || propagate.containsKey(\"plt.error.log\") || ", "+         propagate.containsKey(\"plt.log.factory\"))) {", "+          debug.logValues(\"Starting slave JVM\",", "+                          new String[]{\"RUNNER\", \"args\", \"cp\", \"jvmArgsArray\", \"workDir\"},", "+                          RUNNER, args, cp, jvmArgsArray, workDir);", "+              error.log(\"Slave process died without registering\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc900428a0adecadf0d058222bd7bd1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected final void invokeSlave(final String[] jvmArgs, final String cp, final File workDir) throws IOException,      RemoteException", "signatureAfterChange": "   protected final void invokeSlave(final String[] jvmArgs, final String cp, final File workDir) throws IOException,      RemoteException", "diff": ["+    LinkedList<String> fullJVMArgs = new LinkedList<String>(Arrays.asList(jvmArgs));", "+    Properties propagate = ConcurrentUtil.getProperties(\"plt.\", \"drjava.\", \"edu.rice.cs.\");", "+    if (propagate.containsKey(\"plt.debug.log\") || propagate.containsKey(\"plt.error.log\") || ", "+        propagate.containsKey(\"plt.log.factory\")) {", "+      propagate.put(\"plt.log.working.dir\", System.getProperty(\"user.dir\", \"\"));", "+    }", "+    for (Map.Entry<Object, Object> entry : propagate.entrySet()) {", "+      fullJVMArgs.addFirst(\"-D\" + entry.getKey() + \"=\" + entry.getValue());", "+    }", "+    final String[] jvmArgsArray = fullJVMArgs.toArray(new String[0]);", "+    ", "-          final Process process = ExecJVM.runJVM(RUNNER, args, cp, jvmArgs, workDir);", "+          final Process process = ExecJVM.runJVM(RUNNER, args, cp, jvmArgsArray, workDir);"]}], "num": 22555}