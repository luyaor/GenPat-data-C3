{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "167fecd8d875a00edc688b81f2dcf19e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74148c38be0638d5273f23f2a2a40461", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/swing/AppletComponent.java", "commitBeforeChange": "7f27d4def62ff1bda42279f1d632d1636f2811d4", "commitAfterChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void updateState()", "signatureAfterChange": "      private void updateState()", "diff": ["-      if (_state.equals(State.FRESH)) { _applet.init(); _state = State.PAUSED; }", "-      _applet.start();", "-      _state = State.RUNNING;", "+      if (_state.equals(State.FRESH)) {", "+        _state = State.PAUSED;", "+        // run Applet.init() outside teh event thread, as per bug report 3069101:", "+        // https://sourceforge.net/tracker/?func=detail&atid=438935&aid=3069101&group_id=44253", "+        edu.rice.cs.plt.concurrent.ConcurrentUtil.runInThread(new Runnable() {", "+          public void run() {", "+            _applet.init();", "+            _applet.start();", "+            _state = State.RUNNING;", "+            if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+            validate();", "+          }", "+        });", "+      }", "-    // lazily update size rather than trying to intercept all resizing methods", "-    if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+    if (_state.equals(State.RUNNING)) {", "+      // lazily update size rather than trying to intercept all resizing methods", "+      if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d47a951b421d09c91c30c9f1448bac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 155, "signatureBeforeChange": "          public void currThreadDied()", "signatureAfterChange": "         public void run()", "diff": ["-      if (_currentThreadLocationHighlight != null) {", "-        _currentThreadLocationHighlight.remove();", "-        _currentThreadLocationHighlight = null;", "-        _currentDefPane.revalidate();", "-        _currentDefPane.repaint();", "-      }", "-      if (inDebugMode()) {", "-        _setDebugMenuItemsEnabled(true);", "-        _debugPanel.updateData();", "-      }", "+      Runnable doCommand = new Runnable() {", "+        public void run() {", "+          if (_currentThreadLocationHighlight != null) {", "+            _currentThreadLocationHighlight.remove();", "+            _currentThreadLocationHighlight = null;", "+            //_currentDefPane.revalidate();", "+            //_currentDefPane.repaint();", "+          }", "+          if (inDebugMode()) {", "+            _setDebugMenuItemsEnabled(true);", "+          }", "-      // Make sure we're at the prompt", "-      // (This should really be fixed in InteractionsPane, not here.)", "-      _interactionsPane.setCaretPosition(_model.getInteractionsFrozenPos());", "+          // Make sure we're at the prompt", "+          // (This should really be fixed in InteractionsPane, not here.)", "+          _interactionsPane.setCaretPosition(_model.getInteractionsFrozenPos());", "+        }"]}], "num": 26586}