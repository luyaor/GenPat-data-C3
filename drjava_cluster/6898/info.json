{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ceec8d3c09edb0a6fbb00f815f38226", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f238a54a0f02f541c13134261f9de7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "95027e22cc0cbfaaf79d5f202e24f2763a52eb00", "commitAfterChange": "acb61ff7586f62b61a15637f6576fc3aff67ead1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public int replaceAll()", "signatureAfterChange": "    public int replaceAll()", "diff": ["+   */ ", "-    int found = findNext().getFoundOffset();", "-    while (found >= 0) {", "+    FindResult fr = findNext();", "+    int found = fr.getFoundOffset();", "+    int wrapped = 0; ", "+    if (fr.getWrapped())", "+      wrapped++;", "+    // Checks that the findNext method has found something and has not ", "+    // wrapped once and gone beyond start. ", "+    while (found >= 0 && (wrapped == 0 || found <= _start.getOffset()) && ", "+    wrapped < 2) {", "-      found = findNext().getFoundOffset();", "+      fr = findNext();", "+      found = fr.getFoundOffset();", "+      if (fr.getWrapped())", "+        wrapped++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c69d558a139ee3063e11616dec79367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public int findNext(ContinueCommand startFromTop)", "signatureAfterChange": "   public FindResult findNext()", "diff": ["-  public int findNext(ContinueCommand startFromTop) {", "+  public FindResult findNext() {", "+        _found = true;", "-      else if ((getStartOffset() > 0) && (startFromTop.shouldContinue())) { ", "+      else {", "+        _wrapped = true;", "+      // flag the return value so that they can tell that we had to wrap the file to determine the info.", "+    ", "+      if(foundOffset == -1 && _found) {", "+        _current = _start;", "+        _found = false;", "+        return findNext();", "+      } ", "-        foundOffset = -1;", "+        FindResult fr = new FindResult(foundOffset, _wrapped);", "+        _wrapped = false;", "+        return fr;", "-      return foundOffset;"]}], "num": 6898}