{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1721fc808711dee08cb9b8dd65660bf8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e7a0ba155e7e08506c30d39682b697a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "59806b59ab2c85aaa695cf1cfa11d83de247e9c7", "commitAfterChange": "a3900a56c959c375ad94466aa0351f7bc17ae0c0", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   private JMenu _setUpFileMenu()", "signatureAfterChange": "   private JMenu _setUpFileMenu()", "diff": ["+    ", "+    // New, open", "+    // Save, Save as, Save all", "+    fileMenu.addSeparator();", "+    ", "-", "-", "+    ", "+    tmpItem = fileMenu.add(_saveAllAction);", "+    ", "+    // Close, Close all", "+    fileMenu.addSeparator();", "+    ", "-    tmpItem = fileMenu.add(_saveAllAction);", "-", "-    fileMenu.addSeparator();", "-    tmpItem = fileMenu.add(_compileAction);", "-    tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0));", "-", "-    // keep track of the compile menu item", "-    _compileMenuItem = tmpItem;", "-    //_compileAction.setEnabled(false);", "-", "-    _abortInteractionAction.setEnabled(false);", "-    _abortInteractionMenuItem = fileMenu.add(_abortInteractionAction);", "-    _abortInteractionMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));", "-", "+    // Page setup, print preview, print", "+    ", "+    // Quit"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82e5ddbc3826221981703351f41e0eba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "ad58ba45bb20b5b68be5883e5b408a301633c1b6", "commitAfterChange": "f7fe3d35bd562b548ecea0f3cfa106ec01660447", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void init()", "signatureAfterChange": "   private void init()", "diff": ["-    _errors = DrJavaErrorHandler.getErrors();", "-    if (_errors.size()>0) {", "-      _error = _errors.get(0);", "+    _errorCount = DrJavaErrorHandler.getErrorCount();", "+    if (_errorCount>0) {", "+      _error = DrJavaErrorHandler.getError(0);", "-      System.out.println(\"Errors:\");", "-      for(Throwable t: _errors) System.out.println(\"\\t\"+t);", "-    _nextAction.setEnabled(_errors.size()>1);", "-    _dismissAction.setEnabled(_errors.size()>0);", "-    _copyAction.setEnabled(_errors.size()>0);", "+    _nextAction.setEnabled(_errorCount>1);", "+    _dismissAction.setEnabled(_errorCount>0);", "+    _copyAction.setEnabled(_errorCount>0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8381acd3a7a822fed59f9a2b15caa74f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void add(DocManager dm)", "signatureAfterChange": "     private void add()", "diff": ["-   */", "-  private void add(DocManager dm) {", "-//    Utilities.showDebug(\"add \" + dm + \" to the QUEUE\\n\" + \"QUEUE = \" + _residentQueue);", "-    if (dm == null) throw ", "-      new IllegalArgumentException(\"Cannot add a null document to the DocumentCache\");", "-    if (dm.isUnmanagedOrUntitled() ) return;", "-    DocManager removed = null;", "-    synchronized(_cacheLock) { // lock the cache so that dm can be added if not already present", "-      if (_residentQueue.contains(dm)) return;", "-      _residentQueue.add(dm);", "-      if (_residentQueue.size() > CACHE_SIZE) removed = _residentQueue.remove(0);", "-    }", "-    if (removed != null) removed.kickOut();", "-  }", "+    /** Adds this DocManager to the queue and sets status to IN_QUEUE.  Assumes _cacheLock is already held. */", "+    private void add() {", "+//      Utilities.showDebug(\"add \" + this + \" to the QUEUE\\n\" + \"QUEUE = \" + _residentQueue);", "+      if (! _residentQueue.contains(this)) {", "+        _residentQueue.add(this);", "+        _stat = IN_QUEUE;", "+      }", "+      if (_residentQueue.size() > CACHE_SIZE) _residentQueue.get(0).remove();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e5f18ab5c84a6814b9e4a666b37a9b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   protected SymbolData getSymbolData(File file,                                      String pkg,                                      LinkedList<String> importedFiles,                                      LinkedList<String> importedPackages,                                      String enclosingClassName,                                      String className,                                       SourceInfo si,                                       boolean addError,                                       boolean checkImports)", "signatureAfterChange": "   protected SymbolData getSymbolData(File file,                                      String pkg,                                      LinkedList<String> importedFiles,                                      LinkedList<String> importedPackages,                                      String enclosingClassName,                                      String className,                                       SourceInfo si,                                       boolean addError,                                       boolean checkImports)", "diff": ["-      System.err.println(\"***ERROR*** getSymbolData called with null className\");", "+//      System.err.println(\"***ERROR*** getSymbolData called with null className\");", "-      if (eltClassName.equals(\"String\")) System.err.println(\"getSymbolData called for String[]\");", "+//      if (eltClassName.equals(\"String\")) System.err.println(\"getSymbolData called for String[]\");", "-            if (importSD == null) System.err.println(\"***ALARM*** Imported symbol lookup failed for \" + s);", "+//            if (importSD == null) System.err.println(\"***ALARM*** Imported symbol lookup failed for \" + s);", "-        if (className.equals(\"java.lang.Object\")) System.err.println(\"***ALARM*** Looking up: \" + s);", "+//        if (className.equals(\"java.lang.Object\")) System.err.println(\"***ALARM*** Looking up: \" + s);"]}], "num": 10536}