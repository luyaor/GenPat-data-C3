{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8192a185bf9fad51ee0368b4babd702d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079a5c892c81feb05192c933d013d417", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/ToolsJarClassLoader.java", "commitBeforeChange": "088add2fbe2b148ed5de65332e17119f9cd5c078", "commitAfterChange": "dd87e87bd7504e54354041075b7fdfd1298dfd10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static File[] getToolsJarFiles(File toolsJar)", "signatureAfterChange": "   public static File[] getToolsJarFiles(File toolsJar)", "diff": ["-    String javaHome = System.getProperty(\"java.home\");", "-    File home = new File(javaHome);", "-    ArrayList<File> files = new ArrayList<File>();", "+    File javaHome = FileOps.getCanonicalFile(new File(System.getProperty(\"java.home\")));", "-    // Check JAVAC_LOCATION", "-    if (toolsJar.exists()) files.add(toolsJar);", "-", "-    // Check $JAVA_HOME/lib/tools.jar", "-    File libDir = new File(home, \"lib\");", "-    File jar1 = new File(libDir, \"tools.jar\");", "-    if (jar1.exists()) files.add(jar1);", "-", "-    // Check $JAVA_HOME/../lib/tools.jar", "-    File libDir2 = new File(home.getParentFile(), \"lib\");", "-    File jar2 = new File(libDir2, \"tools.jar\");", "-    if (jar2.exists()) files.add(jar2);", "-", "-    if (javaHome.toLowerCase().indexOf(\"program files\") != -1) {", "-      // Windows: JavaHome is JRE; guess where SDK is", "-      File jar3 = new File(getWindowsToolsJar(javaHome));", "-      if (jar3.exists()) files.add(jar3);", "+    // We must maintain insertion order, so that the first entries have priority;", "+    // at the same time, we want to eliminate duplicates so that the same tools.jar file", "+    // doesn't show up multiple times.", "+    LinkedHashSet<File> javaHomeParents = new LinkedHashSet<File>();", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(javaHome, \"..\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(javaHome, \"../..\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/Program Files/Java/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/Program Files/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/Java/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/java/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/j2se/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/local/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/local/java/\")));", "+    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/local/j2se/\")));", "+    ", "+    LinkedHashSet<File> javaHomes = new LinkedHashSet<File>();", "+    javaHomes.add(javaHome);", "+    String version = System.getProperty(\"java.specification.version\");", "+    final String prefix1 = \"j2sdk\" + version;", "+    final String prefix2 = \"jdk\" + version;", "+    for (File parent : javaHomeParents) {", "+      javaHomes.addAll(FileOps.getFilesInDir(parent, false, new FileFilter() {", "+        public boolean accept(File f) {", "+          String name = f.getName();", "+          return name.startsWith(prefix1) || name.startsWith(prefix2);", "+        }", "+      }));", "+    }", "+    ", "+    LinkedHashSet<File> result = new LinkedHashSet<File>();", "+    if (toolsJar.exists()) result.add(FileOps.getCanonicalFile(toolsJar));", "+    for (File home : javaHomes) {", "+      File tools = new File(home, \"lib/tools.jar\");", "+      if (tools.exists()) { result.add(FileOps.getCanonicalFile(toolsJar)); }", "-    File[] fileArray = new File[files.size()];", "-    files.toArray(fileArray);", "-    return fileArray;", "+    return result.toArray(new File[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b3de07bc84f698b7a5d61791af876c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/ToolsJarClassLoader.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static File[] getToolsJarFiles(File toolsJar)", "signatureAfterChange": "   public static File[] getToolsJarFiles(File toolsJar)", "diff": ["-    File javaHome = FileOps.getCanonicalFile(new File(System.getProperty(\"java.home\")));", "+    File javaHome = IOUtil.attemptCanonicalFile(new File(System.getProperty(\"java.home\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(javaHome, \"..\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(javaHome, \"../..\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(javaHome, \"..\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(javaHome, \"../..\")));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(winPrograms, \"Java\")));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(winPrograms)));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(winPrograms, \"Java\")));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(winPrograms)));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/Program Files/Java/\")));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/Program Files/\")));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/C:/Program Files/Java/\")));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/C:/Program Files/\")));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(winSystem, \"Java\")));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(winSystem)));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(winSystem, \"Java\")));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(winSystem)));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/Java/\")));", "-        javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/C:/\")));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/C:/Java/\")));", "+        javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/C:/\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/java/\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/j2se/\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/local/\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/local/java/\")));", "-    javaHomeParents.add(FileOps.getCanonicalFile(new File(\"/usr/local/j2se/\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/usr/\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/usr/java/\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/usr/j2se/\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/usr/local/\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/usr/local/java/\")));", "+    javaHomeParents.add(IOUtil.attemptCanonicalFile(new File(\"/usr/local/j2se/\")));", "-    try { if (toolsJar.isFile()) result.add(FileOps.getCanonicalFile(toolsJar)); }", "+    try { if (toolsJar.isFile()) result.add(IOUtil.attemptCanonicalFile(toolsJar)); }", "-        if (tools.isFile()) { result.add(FileOps.getCanonicalFile(tools)); }", "+        if (tools.isFile()) { result.add(IOUtil.attemptCanonicalFile(tools)); }"]}], "num": 4704}