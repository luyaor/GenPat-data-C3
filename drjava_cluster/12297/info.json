{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "419c835fb91b6027a029a9f53fcc2017", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6834ef170270c821c023b5ed31728bf5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "commitAfterChange": "1e852b550a8b69787c9e44248d928487d0bf9f6e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException", "diff": ["-  private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException {", "+  private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException {", "-    ", "+    long modDate = df.lastModified();", "+    }", "+    if (hasDate && modDate > 0) {", "+      String s = new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss\").format(new Date(modDate));", "+      ret += \"(mod-date \" + convertToLiteral(s) + \")\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a30f255ed4e5cec44f3d0d81f0982157", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private String encodeBreakpoint(DebugBreakpointData bp, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeBreakpointRelative(DebugBreakpointData bp, String prefix) throws IOException", "diff": ["-  private String encodeBreakpoint(DebugBreakpointData bp, String prefix, boolean relative) throws IOException {", "+  private String encodeBreakpointRelative(DebugBreakpointData bp, String prefix) throws IOException {", "-    String path;", "-    if (relative) path = makeRelative(bp.getFile());", "-    else path = bp.getFile().getCanonicalPath();", "-", "+    String path = makeRelativeTo(bp.getFile(), _projectRoot).getPath();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecfb2c60f059ca4d1e5a973fc25a7ce3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "diff": ["-  private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException {", "+  private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException {", "-    if (relative) path = makeRelative(df);", "+    if (relative) path = makeRelativeTo(df, _projectRoot).getPath();", "-    if (hasDate && modDate > 0) {", "+    if (modDate > 0) {"]}], "num": 12297}