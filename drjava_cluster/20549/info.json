{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a6d28cbe500df84e8f11beb83f03edc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6b3cf0b87eaac72efbf7c030cb8a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "76ce5c1e6d0d42efdd9a8c7d0d65c94a26775711", "commitAfterChange": "a774cfa96f7bd2de025ecfb83980828eab58a972", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void setBreakpoint(OpenDefinitionsDocument doc, int lineNumber)      throws IOException, ClassNotFoundException, DebugException", "signatureAfterChange": "       protected void setBreakpoint(String className, int lineNumber) throws DebugException", "diff": ["- */ ", "-  public void setBreakpoint(OpenDefinitionsDocument doc, int lineNumber) ", "-    throws IOException, ClassNotFoundException, DebugException {", "-    ", "-    try {", "-      bpManager.createBreakpoint(className, lineNumber);", "-    }    ", "-    catch(ClassNotFoundException cnfEx) {", "-      //try {", "-      doc.startCompile();", "-      if(_model.getNumErrors() != 0) {", "-        return;", "-      //}", "-    catch (ResolveException re) {", "-      throw new DebugException();", "-    }", "+  */    ", "+  protected void setBreakpoint(String className, int lineNumber) throws DebugException {", "+    BreakpointManager bpManager = (BreakpointManager)_session.getManager(BreakpointManager.class);", "+    try {", "+      bpManager.createBreakpoint(className, lineNumber);", "+    } catch (ResolveException re) {", "+      throw new DebugException();", "+    } catch (ClassNotFoundException cnfe) {", "+      throw new DebugException();", "+    }", "+    writeToLog(\"Breakpoint added: \" + className + \":\" + lineNumber + \"\\n\");", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e097e80b902c6a2e4095b0ab6dc4412", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _updateButtons()", "signatureAfterChange": "   protected void updateButtons()", "diff": ["-  /** Update button state and text. */", "-  private void _updateButtons() {", "-    try {", "-      Breakpoint bp = _getSelectedBreakpoint();", "-      boolean enable = (bp != null);", "-      _goToButton.setEnabled(enable);", "-      _enableDisableButton.setEnabled(enable);", "-      _removeButton.setEnabled(enable);", "-      if (enable) {", "-        if (bp.isEnabled()) {", "-          _enableDisableButton.setText(\"Disable\");", "-        }", "-        else {", "-          _enableDisableButton.setText(\"Enable\");", "-        }", "-      }", "-    }", "-    catch (DebugException de) {", "-      _goToButton.setEnabled(false);", "-      _enableDisableButton.setEnabled(false);", "-      _removeButton.setEnabled(false);", "-    }", "-    _removeAllButton.setEnabled((_breakpointRootNode!=null) && (_breakpointRootNode.getDepth()>0));", "-  }", "+  /** Update button state and text. */", "+  protected void updateButtons() {", "+    Breakpoint r = getSelectedRegion();", "+    boolean enable = (r != null);", "+    _goToButton.setEnabled(enable);", "+    _enableDisableButton.setEnabled(enable && (r instanceof Breakpoint));", "+    _removeButton.setEnabled(enable);", "+    if (enable && (r instanceof Breakpoint)) {", "+      if (((Breakpoint)r).isEnabled()) {", "+        _enableDisableButton.setText(\"Disable\");", "+      else {", "+        _enableDisableButton.setText(\"Enable\");", "+    _removeAllButton.setEnabled((_regionRootNode!=null) && (_regionRootNode.getDepth()>0));", "+  }"]}], "num": 20549}