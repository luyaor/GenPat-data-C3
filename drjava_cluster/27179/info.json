{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8315524cf6320ae33cf2ac6ab7ab6a66", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74183b5cbd09fc2e4b51a9ac82354292", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public static FullVersion guessVersion(File f, JDKDescriptor desc)", "signatureAfterChange": "      public static FullVersion guessVersion(File f, JDKDescriptor desc)", "diff": ["+    String name;  // promoted outward for logging purposes", "+    String path;  // promoted outward for logging purposes", "-      String name = current.getName();", "-      String path = current.getAbsolutePath();", "-      if (!forceUnknown) {", "-        if (path.startsWith(\"/System/Library/Frameworks/JavaVM.framework\")) vendor = \"apple\";", "+      name = current.getName();", "+      path = current.getAbsolutePath();", "+      if (! forceUnknown) {", "+        if (path.startsWith(\"/System/Library/Frameworks/JavaVM.framework\") || path.startsWith(\"/Library/Java\")) vendor = \"apple\";", "+        else if (path.toLowerCase().contains(\"oracle\")) vendor = \"oracle\";", "-        result = JavaVersion.parseFullVersion(parsedVersion = name.substring(4),vendor,vendor,f);", "+        parsedVersion = name.substring(4);", "+        result = JavaVersion.parseFullVersion(parsedVersion, vendor, vendor, f);", "-        result = JavaVersion.parseFullVersion(parsedVersion = name.substring(3),vendor,vendor,f);", "+        parsedVersion = name.substring(3); ", "+        result = JavaVersion.parseFullVersion(parsedVersion, vendor, vendor, f);", "-      else if (name.startsWith(\"j2sdk\")) {", "-        result = JavaVersion.parseFullVersion(parsedVersion = name.substring(5),vendor,vendor,f);", "+      else if (name.startsWith(\"j2sdk\") || name.startsWith(\"java-\")) {", "+        parsedVersion = name.substring(5);", "+        result = JavaVersion.parseFullVersion(parsedVersion, vendor, vendor, f);", "-      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\")) {", "-        result = JavaVersion.parseFullVersion(parsedVersion = name,vendor,vendor,f);", "+      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+.*\")) {  // The \\d+ fields actually match single digits; .* matches an arbitrary suffix", "+        msg(\"Invoking parseFullVersion on \" + name + \", \" + vendor + \", \" + vendor + \", \" + f);  //Strip off 1.x where x is 6 or 7", "+        parsedVersion = name.substring(0, 5);  // could be generalized to multi-digit matches by using index of first char in .* instead of 5", "+        result = JavaVersion.parseFullVersion(parsedVersion, vendor, vendor, f);", "+        msg(\"Result is: \" + result.versionString());", "+    ", "-            result = JavaVersion.parseFullVersion(parsedVersion = v,vendor,vendor,f);", "+            result = JavaVersion.parseFullVersion(parsedVersion = v, vendor, vendor, f);", "-    if ((result == null) || (result.vendor()==JavaVersion.VendorType.UNKNOWN)) {", "-      if (!forceUnknown) {", "-        if (result.majorVersion().compareTo(JavaVersion.JAVA_6)<0) {", "+    if ((result == null) || (result.vendor() == JavaVersion.VendorType.UNKNOWN)) {", "+      if (! forceUnknown) {", "+        if (result.majorVersion().compareTo(JavaVersion.JAVA_6) < 0) {", "+    msg(\"Guessed version for \" + path + \" is \" + result.versionString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce0400be0005b6ddc49bac47be5f110", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "ecec455630699fb47e48815ed0e8ff7ef49584c1", "commitAfterChange": "09b707cda41d2d3c82d34a50c8dbebc9d7cd95a2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r   \r   private static FullVersion guessVersion(File f)", "signatureAfterChange": "\r   \r   private static FullVersion guessVersion(File f)", "diff": ["-      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d + \")) { result = JavaVersion.parseFullVersion(parsedVersion = name,vendor,vendor); }\r", "+      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\")) { result = JavaVersion.parseFullVersion(parsedVersion = name,vendor,vendor); }\r", "-    \r", "+        parsedVersion = result.versionString();\r", "-    if (result != null &&\r", "-        result.vendor()==JavaVersion.VendorType.UNKNOWN &&\r", "-        result.majorVersion().equals(JavaVersion.JAVA_6)) {\r", "+    if ((result == null) ||\r", "+        (result.vendor()==JavaVersion.VendorType.UNKNOWN &&\r", "+         result.majorVersion().compareTo(JavaVersion.JAVA_6)>=0) ||\r", "+        (f.getAbsolutePath().toLowerCase().contains(\"mint\"))) {\r"]}], "num": 27179}