{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c8a736b05ae234bda697a2144631de2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "457ab0dc6ff62f9027171a025d54455c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/BrainClassLoader.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public URL getResource(String name)", "signatureAfterChange": "   public URL getResource(String name)", "diff": ["-   */", "+  /** Handles getting the resource for loading a class. */", "-    if (resource != null) {", "-      return resource;", "-    }", "+    if (resource != null) return resource;", "+    ", "-    if (resource != null) {", "-      return resource;", "-    }", "+    if (resource != null) return resource;", "+    ", "-    if (resource != null) {", "-      return resource;", "-    }", "+    if (resource != null) return resource;", "+    ", "-    if (resource != null) {", "-      return resource;", "-    }", "+    if (resource != null) return resource;", "+    ", "-    if (resource != null) {", "-      return resource;", "-    }", "+    if (resource != null) return resource;", "+", "-    if (resource != null) {", "-      return resource;", "-    }", "+    if (resource != null) return resource;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80f6f9070e0cb0c31a41ae2f8057b85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-      if (_compileHasOccurred) {", "+      if (_compileHasOccurred) ", "-      }", "-      else {", "-        if (getModel().getCompilerModel().getAvailableCompilers().length == 0) {", "-          message = \"No compiler is available.  Please specify one in\\n\" +", "-            \"the Preferences dialog in the Edit menu.\";", "-        }", "-        else {", "-          if (getModel().getCompilerModel().getActiveCompiler() == NoCompilerAvailable.ONLY) {", "-            message = \"No compiler available.\";", "-          }", "-          else {", "-            message = getModel().getCompilerModel().getActiveCompiler().getName() + \" compiler ready.\";", "-          }", "-        }", "-      }", "+      else if (getModel().getCompilerModel().getAvailableCompilers().length == 0)", "+        message = \"No compiler is available.  Please specify one in\\nthe Preferences dialog in the Edit menu.\";", "+      else if (getModel().getCompilerModel().getActiveCompiler() == NoCompilerAvailable.ONLY)", "+        message = \"No compiler available.\";", "+      else ", "+        message = getModel().getCompilerModel().getActiveCompiler().getName() + \" compiler ready.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b24bdef116bca179a53f509e624a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandlerThread.java", "commitBeforeChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "commitAfterChange": "5aacfadc90765b33349d6f9aff91d50fefd76986", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void handleEvent(Event e) throws DebugException", "signatureAfterChange": "   public void handleEvent(Event e) throws DebugException", "diff": ["-    if (e instanceof BreakpointEvent) {", "-      _handleBreakpointEvent((BreakpointEvent) e);", "-    }", "-    else if (e instanceof StepEvent) {", "-      _handleStepEvent((StepEvent) e);", "-    }", "+    if (e instanceof BreakpointEvent) _handleBreakpointEvent((BreakpointEvent) e);", "+    else if (e instanceof StepEvent) _handleStepEvent((StepEvent) e);", "-    else if (e instanceof ClassPrepareEvent) {", "-      _handleClassPrepareEvent((ClassPrepareEvent) e);", "-    }", "-    else if (e instanceof ThreadStartEvent) {", "-      _handleThreadStartEvent((ThreadStartEvent) e);", "-    }", "-    else if (e instanceof ThreadDeathEvent) {", "-      _handleThreadDeathEvent((ThreadDeathEvent) e);", "-    }", "-    else if (e instanceof VMDeathEvent) {", "-      _handleVMDeathEvent((VMDeathEvent) e);", "-    }", "-    else if (e instanceof VMDisconnectEvent) {", "-      _handleVMDisconnectEvent((VMDisconnectEvent) e);", "-    }", "-    else {", "+    else if (e instanceof ClassPrepareEvent) _handleClassPrepareEvent((ClassPrepareEvent) e);", "+    else if (e instanceof ThreadStartEvent) _handleThreadStartEvent((ThreadStartEvent) e);", "+    else if (e instanceof ThreadDeathEvent) _handleThreadDeathEvent((ThreadDeathEvent) e);", "+    else if (e instanceof VMDeathEvent) _handleVMDeathEvent((VMDeathEvent) e);", "+    else if (e instanceof VMDisconnectEvent) _handleVMDisconnectEvent((VMDisconnectEvent) e);", "+    else", "-    }"]}], "num": 11245}