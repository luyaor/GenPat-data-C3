{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0ce5d2070b77516b8ac78c42715c9ea", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3ca177f0557e2e594c79319d8250fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public File[] getSourceRootSet()", "diff": ["-", "-    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "-    while(odds.hasNext())", "-    {", "-      OpenDefinitionsDocument doc = odds.next();", "-", "-      try {", "-        File root = doc.getSourceRoot();", "-", "-        // Don't add duplicate Files, based on path", "-        if (!roots.contains(root)) {", "-          roots.add(root);", "+    synchronized (_documentsRepos) {", "+      for (OpenDefinitionsDocument doc: _documentsRepos.values()) {", "+        try {", "+          File root = doc.getSourceRoot();", "+          if (!roots.contains(root)) { roots.add(root); } // Don't add duplicate Files, based on path", "+        catch (InvalidPackageException e) { /* file has invalid package statement; ignore it */ }", "-      catch (InvalidPackageException e) {", "-        // oh well, invalid package statement for this one", "-        // can't add it to roots", "-      }", "+      return roots.toArray(new File[0]);", "-", "-//    File workDir = DrJava.getConfig().getSetting(WORKING_DIRECTORY);", "-//", "-//    if (workDir == FileOption.NULL_FILE) {", "-//      workDir = new File( System.getProperty(\"user.dir\"));", "-//    }", "-//    if (workDir.isFile() && workDir.getParent() != null) {", "-//      workDir = workDir.getParentFile();", "-//    }", "-//    roots.add(workDir);", "-", "-    return roots.toArray(new File[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "934885d0eecccf3c261f971e4946e2af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "   public synchronized void saveAllFiles(FileSaveSelector com) throws IOException", "signatureAfterChange": "   public void saveAllFiles(FileSaveSelector com) throws IOException", "diff": ["-  public synchronized void saveAllFiles(FileSaveSelector com) throws IOException {", "+  public void saveAllFiles(FileSaveSelector com) throws IOException {", "-    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "-    while(odds.hasNext())", "-    {", "-      OpenDefinitionsDocument doc = odds.next();", "-      aboutToSaveFromSaveAll(doc);", "-      doc.saveFile(com);", "+    synchronized (_documentsRepos) { ", "+      for (final OpenDefinitionsDocument doc: _documentsRepos.values()) {", "+        aboutToSaveFromSaveAll(doc);", "+        doc.saveFile(com);", "+      }"]}], "num": 18935}