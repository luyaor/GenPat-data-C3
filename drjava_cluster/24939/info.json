{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a3f91142e69f327b35fc90b0f4cb62f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1c9ccdaa5b7f2ad1765140aa3818e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["-  /** Abstracted out since this is called from find and replace/find. */", "+  /** Abstracted out since this is called from findNext and findPrevious. */", "-//      _model.addToBrowserHistory();", "-      _updateMachine();", "+//      _updateMachine();", "-      FindResult fr = _machine.findNext();", "-      OpenDefinitionsDocument doc = fr.getDocument();", "-      OpenDefinitionsDocument matchDoc = _model.getODDForDocument(doc);", "-      OpenDefinitionsDocument openDoc = _defPane.getOpenDefDocument();", "-      final boolean docChanged = ! matchDoc.equals(openDoc);", "-      ", "-      final int pos = fr.getFoundOffset();", "-      ", "-      if (searchAll) {  // if search was global, reset the active document", "-        if (docChanged) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "-        else _model.refreshActiveDocument();  // the unmodified active document may have been kicked out of the cache!", "-      } ", "-      ", "-      if (fr.getWrapped() && ! searchAll) {", "-        Toolkit.getDefaultToolkit().beep();", "-        if (! _machine.isSearchBackwards()) _frame.setStatusMessage(\"Search wrapped to beginning.\");", "-        else _frame.setStatusMessage(\"Search wrapped to end.\");", "-      }", "-      ", "-      if (fr.getAllWrapped() && searchAll) {", "-        Toolkit.getDefaultToolkit().beep();", "-        _frame.setStatusMessage(\"Search wrapped around all documents.\");", "-      }", "-      ", "-      if (pos >= 0) { // found a match", "-        Caret c = _defPane.getCaret();", "-        c.setDot(c.getDot());", "-        _defPane.setCaretPosition(pos);", "-        _caretChanged = true;", "-        _updateMachine();", "+      _frame.hourglassOn();", "+      try {", "+        FindResult fr = _machine.findNext();", "+        OpenDefinitionsDocument matchDoc = fr.getDocument();", "+//      OpenDefinitionsDocument matchDoc = _model.getODDForDocument(doc);", "+        OpenDefinitionsDocument openDoc = _defPane.getOpenDefDocument();", "+        final boolean docChanged = matchDoc != openDoc;", "-        final Runnable command = new Runnable() {", "-          public void run() {", "-            _selectFoundOrReplacedItem(findWord.length());", "-            _replaceAction.setEnabled(true);", "-            _replaceFindNextAction.setEnabled(true);", "-            _replaceFindPreviousAction.setEnabled(true);", "-            _machine.setLastFindWord();", "-            _model.addToBrowserHistory();", "-          } };", "+        final int pos = fr.getFoundOffset();", "-        if (docChanged)", "-          // defer executing this code until after active document switch is complete", "-          SwingUtilities.invokeLater(command);", "-        else command.run();", "+        if (pos >= 0) _model.addToBrowserHistory();  // pos >= 0  <=> search succeeded", "+        ", "+        if (searchAll) {  // if search was global, reset the active document", "+          if (docChanged) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "+          else _model.refreshActiveDocument();  // the unmodified active document may have been kicked out of the cache!", "+        } ", "+        ", "+        if (fr.getWrapped() && ! searchAll) {", "+          Toolkit.getDefaultToolkit().beep();", "+          if (! _machine.isSearchBackwards()) _frame.setStatusMessage(\"Search wrapped to beginning.\");", "+          else _frame.setStatusMessage(\"Search wrapped to end.\");", "+        }", "+        ", "+        if (fr.getAllWrapped() && searchAll) {", "+          Toolkit.getDefaultToolkit().beep();", "+          _frame.setStatusMessage(\"Search wrapped around all documents.\");", "+        }", "+        ", "+        if (pos >= 0) { // found a match", "+//        Caret c = _defPane.getCaret();", "+//        c.setDot(c.getDot());", "+          _defPane.setCaretPosition(pos);", "+          _caretChanged = true;", "+          _updateMachine();", "+          ", "+          final Runnable command = new Runnable() {", "+            public void run() {", "+              _selectFoundOrReplacedItem(findWord.length());", "+              _replaceAction.setEnabled(true);", "+              _replaceFindNextAction.setEnabled(true);", "+              _replaceFindPreviousAction.setEnabled(true);", "+              _machine.setLastFindWord();", "+              _model.addToBrowserHistory();", "+            } };", "+          ", "+          if (docChanged)", "+            // defer executing this code until after active document switch is complete", "+            EventQueue.invokeLater(command);", "+          else command.run();", "+        }", "+        // else the entire document was searched and no instance of the string", "+        // was found. display at most 50 characters of the non-found string", "+        else {", "+          Toolkit.getDefaultToolkit().beep();", "+          final StringBuilder statusMessage = new StringBuilder(\"Search text \\\"\");", "+          if (findWord.length() <= 50) statusMessage.append(findWord);", "+          else statusMessage.append(findWord.substring(0, 49) + \"...\");", "+          statusMessage.append(\"\\\" not found.\");", "+          _frame.setStatusMessage(statusMessage.toString());", "+        }", "-      // else the entire document was searched and no instance of the string", "-      // was found. display at most 50 characters of the non-found string", "-      else {", "-        Toolkit.getDefaultToolkit().beep();", "-        final StringBuilder statusMessage = new StringBuilder(\"Search text \\\"\");", "-        if (findWord.length() <= 50) statusMessage.append(findWord);", "-        else statusMessage.append(findWord.substring(0, 49) + \"...\");", "-        statusMessage.append(\"\\\" not found.\");", "-        _frame.setStatusMessage(statusMessage.toString());", "-      }", "+      finally { _frame.hourglassOff(); }", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "927caf49c7146f0d01432d486ccd0042", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "814284d39419cda17539ef3e84c25f9daceecb37", "commitAfterChange": "64a8c66e035bf38023367affc1e8d913a52663ca", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["-    _updateMachine();", "-    _machine.setFindWord(_findField.getText());", "-    _machine.setReplaceWord(_replaceField.getText());", "-    _mainframe.clearStatusMessage(); // _message.setText(\"\"); // JL", "-    ", "-    // FindResult contains the document that the result was found in, offset to the next occurrence of ", "-    // the string, and a flag indicating whether the end of the document was wrapped around while searching", "-    // for the string.", "-    FindResult fr = _machine.findNext();", "-    AbstractDocumentInterface doc = fr.getDocument();", "-    OpenDefinitionsDocument matchDoc = ((DefaultSingleDisplayModel) _model).getODDForDocument(doc);", "-    OpenDefinitionsDocument openDoc = _defPane.getOpenDefDocument();", "-", "-    final int pos = fr.getFoundOffset();", "-    ", "-    // If there actually *is* a match, then switch active documents. otherwise don't", "-    if (pos != -1) { // found a match", "-      Caret c = _defPane.getCaret();", "-      c.setDot(c.getDot());", "-      ", "-      if (! matchDoc.equals(openDoc)) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "-      else _model.refreshActiveDocument();  // re-establish openDoc (which is the _activeDocument) as active", "-   ", "-      _defPane.setCaretPosition(pos);", "-      _caretChanged = true;", "+    if (_findField.getText().length() > 0) {", "+      _machine.setFindWord(_findField.getText());", "+      _machine.setReplaceWord(_replaceField.getText());", "+      _mainframe.clearStatusMessage(); // _message.setText(\"\"); // JL", "+      ", "+      // FindResult contains the document that the result was found in, offset to the next occurrence of ", "+      // the string, and a flag indicating whether the end of the document was wrapped around while searching", "+      // for the string.", "+      FindResult fr = _machine.findNext();", "+      AbstractDocumentInterface doc = fr.getDocument();", "+      OpenDefinitionsDocument matchDoc = ((DefaultSingleDisplayModel) _model).getODDForDocument(doc);", "+      OpenDefinitionsDocument openDoc = _defPane.getOpenDefDocument();", "+      ", "+      final int pos = fr.getFoundOffset();", "+      ", "+      // If there actually *is* a match, then switch active documents. otherwise don't", "+      if (pos != -1) { // found a match", "+        Caret c = _defPane.getCaret();", "+        c.setDot(c.getDot());", "+        ", "+        if (! matchDoc.equals(openDoc)) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "+        else _model.refreshActiveDocument();  // re-establish openDoc (which is the _activeDocument) as active", "+        ", "+        _defPane.setCaretPosition(pos);", "+        _caretChanged = true;", "+        _updateMachine();", "+      }", "+      ", "+      if (fr.getWrapped() && !_machine.getSearchAllDocuments()) {", "+        Toolkit.getDefaultToolkit().beep();", "+        if (!_machine.getSearchBackwards()) _mainframe.setStatusMessage(\"Search wrapped to beginning.\");", "+        else  _mainframe.setStatusMessage(\"Search wrapped to end.\");", "+      }", "+      ", "+      if (fr.getAllDocsWrapped() && _machine.getSearchAllDocuments()) {", "+        Toolkit.getDefaultToolkit().beep();", "+        _mainframe.setStatusMessage(\"Search wrapped around all documents.\");", "+      }", "+      ", "+      if (pos >= 0) {", "+        _selectFoundItem();", "+        ", "+        _replaceAction.setEnabled(true);", "+        _replaceFindNextAction.setEnabled(true);", "+        _replaceFindPreviousAction.setEnabled(true);", "+        _machine.setLastFindWord();", "+      }", "+      // else the entire document was searched and no instance of the string", "+      // was found. display at most 50 characters of the non-found string", "+      else {", "+        Toolkit.getDefaultToolkit().beep();", "+        StringBuffer statusMessage = new StringBuffer(\"Search text \\\"\");", "+        if (_machine.getFindWord().length() <= 50) statusMessage.append(_machine.getFindWord());", "+        else statusMessage.append(_machine.getFindWord().substring(0, 49) + \"...\");", "+        statusMessage.append(\"\\\" not found.\");", "+        _mainframe.setStatusMessage(statusMessage.toString());", "+      }", "-", "-    if (fr.getWrapped() && !_machine.getSearchAllDocuments()) {", "-      Toolkit.getDefaultToolkit().beep();", "-      if (!_machine.getSearchBackwards()) _mainframe.setStatusMessage(\"Search wrapped to beginning.\");", "-      else  _mainframe.setStatusMessage(\"Search wrapped to end.\");", "-    }", "-    ", "-    if (fr.getAllDocsWrapped() && _machine.getSearchAllDocuments()) {", "-      Toolkit.getDefaultToolkit().beep();", "-      _mainframe.setStatusMessage(\"Search wrapped around all documents.\");", "-    }", "-    ", "-    if (pos >= 0) {", "-      _selectFoundItem();", "-", "-      _replaceAction.setEnabled(true);", "-      _replaceFindNextAction.setEnabled(true);", "-      _replaceFindPreviousAction.setEnabled(true);", "-      _machine.setLastFindWord();", "-    }", "-    // else the entire document was searched and no instance of the string", "-    // was found. display at most 50 characters of the non-found string", "-    else {", "-      Toolkit.getDefaultToolkit().beep();", "-      StringBuffer statusMessage = new StringBuffer(\"Search text \\\"\");", "-      if (_machine.getFindWord().length() <= 50) statusMessage.append(_machine.getFindWord());", "-      else statusMessage.append(_machine.getFindWord().substring(0, 49) + \"...\");", "-      statusMessage.append(\"\\\" not found.\");", "-      _mainframe.setStatusMessage(statusMessage.toString());", "-    }", "+    _findField.requestFocusInWindow();"]}], "num": 24939}