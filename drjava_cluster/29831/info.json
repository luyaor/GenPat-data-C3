{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08e5c887679e2b3a4e132a65661d8ae9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b8ddb4cb1ed37af1ad975ea0d54177", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException", "signatureAfterChange": "   public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException", "diff": ["-  public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException {", "+  // Why do we create a new model (and slave JVM) for each of this trivial tests?", "+  public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException {", "+    _log.log(\"testInterpretCurrentInteractionWithIncompleteInput started\");", "-    _model = new IncompleteInputInteractionsModel(_adapter);", "-    _model = new IncompleteInputInteractionsModel(_adapter);", "-    _model = new IncompleteInputInteractionsModel(_adapter);", "-    _model = new IncompleteInputInteractionsModel(_adapter);", "-    _model = new IncompleteInputInteractionsModel(_adapter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ec3f787966b9eb252714911a5e4a1a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "8a844a8f24b61cc57420bdf2211acc634ec89fef", "commitAfterChange": "f22d0a1255bdf1029bb9a8ca3e33cbdaf890f9a0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "       public static Entry createEntry(int hash, String key, Object value, Entry next)", "signatureAfterChange": "     public void setRevertPoint()", "diff": ["-       */", "-      public static Entry createEntry(int hash, String key, Object value, Entry next) {", "-        return new Entry(hash, key, value, next);", "-      }", "+    public void setRevertPoint() {", "+      _addedKeys.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9e0882ec5ee41388fb9c16e10731bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/GlobalModelTest.java", "commitBeforeChange": "2ec67558fcc2be0c684677fea7ee9feb674b02bc", "commitAfterChange": "a937ccbbfe3e2271b14c781e19a341556df45efe", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 65, "signatureBeforeChange": "          TestReaderCommand(String name, String buf)", "signatureAfterChange": "      public void compileEnded()", "diff": ["-    ", "-    TestReaderCommand(String name, String buf) {", "-      _name = name;", "-      _buf = buf;", "-      _reader = new StringReader(_buf);", "+", "+    public void compileEnded() {", "+      _assertCompileStartCount(1);", "+      _assertInteractionsResetCount(0);", "+      _assertConsoleResetCount(0);", "+      _compileEndCount++;", "+    }"]}], "num": 29831}