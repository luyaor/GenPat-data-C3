{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bfd53aa5845af495368683e6af52c80", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7384b9ac1aef06452f4575121736fcc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "35d9365226ba0771f8b6c75f7ce46695407e7805", "commitAfterChange": "e00a80132d9c599630e60c288ab824f99427e68b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "diff": ["+    ", "+    // Check if this has an anonymous inner class", "+    if (hasAnonymous(_thisClassName)) { ", "+      // Get the class", "+      Class c = _loadClassForThis(context);", "+      Field[] fields = c.getDeclaredFields();    ", "+      int numToWalk;", "+      String outerClassName = null;", "+      // Check for a field that begins with this$", "+      for (int i = 0; i < fields.length; i++) {", "+        if (fields[i].getName().startsWith(\"this$\")) {", "+          String fieldName = fields[i].getName();", "+          int lastIndex = fieldName.lastIndexOf(\"$\");", "+          numDollars = Integer.valueOf(fieldName.substring(lastIndex+1, fieldName.length())).intValue() + 1;", "+          break;", "+        }", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f0d5164ef9460d477bde054dbc5a38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "17285283461a98a54216b38ffd842a9ade691a61", "commitAfterChange": "c5c5f6e584e52b0f1a2d2a9448693aba4f7f3980", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private synchronized void _updateWatches() throws DebugException", "signatureAfterChange": "   private synchronized void _updateWatches() throws DebugException", "diff": ["+            if (hasAnonymous(outerRt)) {", "+              // We don't know the appropriate this$N to look for so we have to", "+              // search for a field that begins with this$.", "+              List fields = outerRt.allFields();", "+              Iterator iter = fields.iterator();", "+              while (iter.hasNext()) {", "+                Field f = (Field)iter.next();", "+                String name = f.name();", "+                if (name.startsWith(\"this$\")) {", "+                  int lastIndex = name.lastIndexOf(\"$\");", "+                  outerIndex = Integer.valueOf(name.substring(lastIndex+1, name.length())).intValue();", "+                  break;", "+                }", "+              }", "+            }", "+            if (field == null) {", "+              // Try concatenating \"val$\" to the beginning of the field in", "+              // case it's a final local variable of the outer class", "+              field = outerRt.fieldByName(\"val$\" + currName);", "+            }", "+            ", "+              if (outer == null) {", "+                // We're probably in the constructor and this$N has", "+                // not yet been initialized. We can't do anything, so just", "+                // break display no value.", "+                break;", "+              }", "-              if (field == null) {", "-                // Enter the loop again with the next outer enclosing class", "-                outerIndex--;", "-                outerThis = outerRt.fieldByName(\"this$\" + outerIndex);", "+              if (field == null) {  ", "+                // Try concatenating \"val$\" to the beginning of the field in", "+                // case it's a final local variable of the outer class", "+                field = outerRt.fieldByName(\"val$\" + currName);", "+                ", "+                if (field == null) {", "+                  // Enter the loop again with the next outer enclosing class", "+                  outerIndex--;", "+                  outerThis = outerRt.fieldByName(\"this$\" + outerIndex);                  ", "+                }"]}], "num": 16395}