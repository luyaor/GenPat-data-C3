{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96d24e44104c719fe9d458e9ecbdf039", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f8af251bcc61aa03b6518b7a07e778e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "commitAfterChange": "6df23b9d947a754084cff460e34d203b0d81fd48", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 243, "signatureBeforeChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-", "-      _switchDefScrollPane();", "-", "-      boolean isModified = active.isModifiedSinceSave();", "-      boolean canCompile = (!isModified && !active.isUntitled());", "-      _saveAction.setEnabled(!canCompile);", "-      _revertAction.setEnabled(!active.isUntitled());", "-", "-      // Update error highlights", "-      int pos = _currentDefPane.getCaretPosition();", "-      _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-", "-      // Update FileChoosers' directory", "-      _setCurrentDirectory(active);", "-", "-      // Update title and position", "-      updateFileTitle();", "-      _currentDefPane.requestFocus();", "-      _posListener.updateLocation();", "-", "-      // Check if modified (but only if we're not closing all files)", "-      if (!_model.isClosingAllFiles()) {", "+      Runnable command = new Runnable() {", "+        public void run(){", "+          ", "+          _switchDefScrollPane();", "+          ", "+          boolean isModified = active.isModifiedSinceSave();", "+          boolean canCompile = (!isModified && !active.isUntitled());", "+          _saveAction.setEnabled(!canCompile);", "+          _revertAction.setEnabled(!active.isUntitled());", "+          ", "+          // Update error highlights", "+          int pos = _currentDefPane.getCaretPosition();", "+          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+          ", "+          // Update FileChoosers' directory", "+          _setCurrentDirectory(active);", "+          ", "+          // Update title and position", "+          updateFileTitle();", "+          _currentDefPane.requestFocus();", "+          _posListener.updateLocation();", "+          ", "+          // Check if modified (but only if we're not closing all files)", "+          if (!_model.isClosingAllFiles()) {", "+            try {", "+              active.revertIfModifiedOnDisk();", "+            }", "+            catch (FileMovedException fme) {", "+              _showFileMovedError(fme);", "+            }", "+            catch (IOException e) {", "+              _showIOError(e);", "+            }", "+          }", "+          ", "+          // Change Find/Replace to the new defpane", "+          if (_findReplace.isDisplayed()) {", "+            _findReplace.stopListening();", "+            _findReplace.beginListeningTo(_currentDefPane);", "+            //uninstallFindReplaceDialog(_findReplace);", "+            //installFindReplaceDialog(_findReplace);", "+          }", "+          //  }", "+          //};", "+          //SwingUtilities.invokeLater(doCommand);", "+        }", "+      };", "+      if ( !SwingUtilities.isEventDispatchThread() && !inDebugMode() ) {", "+        // Can't invokeAndWait while in debug mode:", "+        //  UI thread might not respond, so DrJava locks up) {", "-          active.revertIfModifiedOnDisk();", "+          SwingUtilities.invokeAndWait(command);", "-        catch (FileMovedException fme) {", "-          _showFileMovedError(fme);", "+        catch(InterruptedException e) {", "+          /** we don't expect to be interrupted */", "+          throw new UnexpectedException(e);", "-        catch (IOException e) {", "-          _showIOError(e);", "+        catch(InvocationTargetException e2) {", "+          /** we don't expect _fileOpened() to throw any exceptions */", "+          throw new UnexpectedException(e2);", "-", "-      // Change Find/Replace to the new defpane", "-      if (_findReplace.isDisplayed()) {", "-        _findReplace.stopListening();", "-        _findReplace.beginListeningTo(_currentDefPane);", "-        //uninstallFindReplaceDialog(_findReplace);", "-        //installFindReplaceDialog(_findReplace);", "+      else {", "+        command.run();", "-      //  }", "-      //};", "-      //SwingUtilities.invokeLater(doCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae4c21032661ff29d3e50f8f38d2f814", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 226, "signatureBeforeChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-          _switchDefScrollPane();", "-          ", "-          boolean isModified = active.isModifiedSinceSave();", "-          boolean canCompile = (!isModified && !active.isUntitled());", "-          _saveAction.setEnabled(isModified || active.isUntitled());", "-          _revertAction.setEnabled(!active.isUntitled());", "-          ", "-          // Update error highlights", "-          _compilerErrorPanel.getErrorListPane().selectNothing();", "-          _junitErrorPanel.getErrorListPane().selectNothing();", "-          _javadocErrorPanel.getErrorListPane().selectNothing();", "-          ", "-          int pos = _currentDefPane.getCaretPosition();", "-          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-          _currentDefPane.getJUnitErrorCaretListener().updateHighlight(pos);", "-          _currentDefPane.getJavadocErrorCaretListener().updateHighlight(pos);", "-          ", "-          // Update FileChoosers' directory", "-          _setCurrentDirectory(active);", "-          ", "-          // Update title and position", "-          updateFileTitle();", "-          _currentDefPane.requestFocus();", "-          _posListener.updateLocation();", "-          ", "-          // Check if modified (but only if we're not closing all files)", "-          if (!_model.isClosingAllFiles()) {", "-            try {", "-              active.revertIfModifiedOnDisk();", "-            }", "-            catch (FileMovedException fme) {", "-              _showFileMovedError(fme);", "-            }", "-            catch (IOException e) {", "-              _showIOError(e);", "-            }", "-          }", "-          ", "-          // Change Find/Replace to the new defpane", "-          if (_findReplace.isDisplayed()) {", "-            _findReplace.stopListening();", "-            _findReplace.beginListeningTo(_currentDefPane);", "-            //uninstallFindReplaceDialog(_findReplace);", "-            //installFindReplaceDialog(_findReplace);", "-          }", "+      _switchDefScrollPane();", "+      ", "+      boolean isModified = active.isModifiedSinceSave();", "+      boolean canCompile = (!isModified && !active.isUntitled());", "+      _saveAction.setEnabled(isModified || active.isUntitled());", "+      _revertAction.setEnabled(!active.isUntitled());", "+      ", "+      // Update error highlights          ", "+      int pos = _currentDefPane.getCaretPosition();", "+      _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+      ", "+      // Update FileChoosers' directory", "+      _setCurrentDirectory(active);", "+      ", "+      // Update title and position", "+      updateFileTitle();", "+      _currentDefPane.requestFocus();", "+      _posListener.updateLocation();", "+      ", "+      // Check if modified (but only if we're not closing all files)", "+      if (!_model.isClosingAllFiles()) {", "+        try {", "+          active.revertIfModifiedOnDisk();", "+        }", "+        catch (FileMovedException fme) {", "+          _showFileMovedError(fme);", "+        }", "+        catch (IOException e) {", "+          _showIOError(e);", "+        }", "+      }", "+      ", "+      // Change Find/Replace to the new defpane", "+      if (_findReplace.isDisplayed()) {", "+        _findReplace.stopListening();", "+        _findReplace.beginListeningTo(_currentDefPane);", "+        //uninstallFindReplaceDialog(_findReplace);", "+        //installFindReplaceDialog(_findReplace);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbdec95a4abfa01a0f7ca4add329d38b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 161, "signatureBeforeChange": "     public void activeDocumentChanged(OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-    public void activeDocumentChanged(OpenDefinitionsDocument active) {", "-      _switchDefScrollPane();", "-", "-      boolean isModified = active.isModifiedSinceSave();", "-      boolean canCompile = (!isModified && !active.isUntitled());", "-      _saveAction.setEnabled(isModified);", "-      _revertAction.setEnabled(!active.isUntitled());", "-", "-      // Update error highlights", "-      _errorPanel.getErrorListPane().selectNothing();", "-      _junitPanel.getJUnitErrorListPane().selectNothing();", "-      ", "-      int pos = _currentDefPane.getCaretPosition();", "-      _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-      _currentDefPane.getJUnitErrorCaretListener().updateHighlight(pos);", "-     ", "-      // Update FileChoosers' directory", "-      _setCurrentDirectory(active);", "-", "-      // Update title and position", "-      updateFileTitle();", "-      _currentDefPane.requestFocus();", "-      _posListener.updateLocation();", "-      ", "-      // Check if modified (but only if we're not closing all files)", "-      if (!_model.isClosingAllFiles()) {", "-        try {", "-          active.revertIfModifiedOnDisk();", "-        } catch (IOException e) {", "-          _showIOError(e);", "-        }", "-      }", "-      ", "-      // Change Find/Replace to the new defpane", "-      if (_findReplace.isDisplayed()) {", "-        _findReplace.stopListening();", "-        _findReplace.beginListeningTo(_currentDefPane);", "-        //uninstallFindReplaceDialog(_findReplace);", "-        //installFindReplaceDialog(_findReplace);", "-      }", "+    public void activeDocumentChanged(final OpenDefinitionsDocument active) {", "+      // Only change GUI from event-dispatching thread", "+      // (This can be called from other threads...)", "+      //Runnable doCommand = new Runnable() {", "+      // public void run() {", "+          _switchDefScrollPane();", "+          ", "+          boolean isModified = active.isModifiedSinceSave();", "+          boolean canCompile = (!isModified && !active.isUntitled());", "+          _saveAction.setEnabled(isModified);", "+          _revertAction.setEnabled(!active.isUntitled());", "+          ", "+          // Update error highlights", "+          _errorPanel.getErrorListPane().selectNothing();", "+          _junitPanel.getJUnitErrorListPane().selectNothing();", "+          ", "+          int pos = _currentDefPane.getCaretPosition();", "+          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+          _currentDefPane.getJUnitErrorCaretListener().updateHighlight(pos);", "+          ", "+          // Update FileChoosers' directory", "+          _setCurrentDirectory(active);", "+          ", "+          // Update title and position", "+          updateFileTitle();", "+          _currentDefPane.requestFocus();", "+          _posListener.updateLocation();", "+          ", "+          // Check if modified (but only if we're not closing all files)", "+          if (!_model.isClosingAllFiles()) {", "+            try {", "+              active.revertIfModifiedOnDisk();", "+            } catch (IOException e) {", "+              _showIOError(e);", "+            }", "+          }", "+          ", "+          // Change Find/Replace to the new defpane", "+          if (_findReplace.isDisplayed()) {", "+            _findReplace.stopListening();", "+            _findReplace.beginListeningTo(_currentDefPane);", "+            //uninstallFindReplaceDialog(_findReplace);", "+            //installFindReplaceDialog(_findReplace);", "+          }", "+      //  }", "+      //};", "+      //SwingUtilities.invokeLater(doCommand);"]}], "num": 16631}