{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "215167a79835c6b93b468a2c07b9b82f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "820e20e87cf3fd83f0d10c17bbfb64a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "commitAfterChange": "48e9711d768be0e10f630f8284db4c31a0256844", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testErrorInSuperClass_NOJOIN() throws Exception", "signatureAfterChange": "   public void testErrorInSuperClass_NOJOIN() throws Exception", "diff": ["+    _log.log(\"testErrorInSuperClass_NOJOIN started\");", "-    OpenDefinitionsDocument doc1 = setupDocument(TEST_ONE);", "-    OpenDefinitionsDocument doc2 = setupDocument(TEST_TWO);", "+    final OpenDefinitionsDocument doc1 = setupDocument(TEST_ONE);", "+    final OpenDefinitionsDocument doc2 = setupDocument(TEST_TWO);", "-    saveFile(doc1, new FileSelector(file1));", "-    saveFile(doc2, new FileSelector(file2));", "-    JUnitTestListener listener = new JUnitTestListener();", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try {", "+          saveFile(doc1, new FileSelector(file1));", "+          saveFile(doc2, new FileSelector(file2));", "+        }", "+        catch(Exception e) { fail(\"The following exception was thrown in testErrorInSuperClass_NOJOIN location 1: /n\" + e); }", "+      }", "+    });    ", "+    JUnitTestListener listener = new JUnitTestListener(true);", "-    _model.getCompilerModel().compileAll();", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        try { _model.getCompilerModel().compileAll(); }", "+        catch(Exception e) { fail(\"The following exception was thrown in testErrorInSuperClass_NOJOIN location 12: /n\" + e); }", "+      }", "+    });", "+    ", "+    Utilities.clearEventQueue();", "+    ", "+    ", "+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "+    ", "-    ", "+", "-    _log.log(\"Second document testing should be complete\");", "+    _log.log(\"Second document testing should be complete\");", "+     _log.log(\"testErrorInSuperClass_NOJOIN complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bf3fe933fab67267a52ff422e4c8e26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "commitAfterChange": "48e9711d768be0e10f630f8284db4c31a0256844", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testVerifyErrorHandledCorrectly_NOJOIN() throws Exception", "signatureAfterChange": "   public void testVerifyErrorHandledCorrectly_NOJOIN() throws Exception", "diff": ["-    OpenDefinitionsDocument doc = setupDocument(ABC_CLASS_ONE);", "+    _log.log(\"testVerifyErrorHandledCorrectly_NOJOIN started\");", "+    ", "+    final OpenDefinitionsDocument doc = setupDocument(ABC_CLASS_ONE);", "-    saveFile(doc, new FileSelector(file));", "-    ", "-    Utilities.clearEventQueue();", "-    ", "-    OpenDefinitionsDocument doc2 = setupDocument(ABC_TEST);", "+    final OpenDefinitionsDocument doc2 = setupDocument(ABC_TEST);", "-    saveFile(doc2, new FileSelector(file2));", "-    // Compile the correct ABC and the test", "-//    JUnitTestListener listener = new JUnitTestListener(false);", "-//      System.out.println(\"compiling all\");", "-    _model.getCompilerModel().compileAll();", "-    Utilities.clearEventQueue();", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        try {     ", "+          saveFile(doc, new FileSelector(file));", "+          saveFile(doc2, new FileSelector(file2));", "+          ", "+          // Compile the correct ABC and the test", "+//          JUnitTestListener listener = new JUnitTestListener(false);", "+//          System.out.println(\"compiling all\");", "+          _model.getCompilerModel().compileAll();", "+        }", "+        catch(Exception e) { fail(\"The following exception was thrown in testVerifyErrorHandledCorrectly_NOJOIN location 1: /n\" + e); }", "+      } ", "+    });", "+   _log.log(\"First compile in  testVerifyErrorHandledCorrectly_NOJOIN comlete\");", "+   ", "-    saveFile(doc3, new FileSelector(file3));", "-    JUnitTestListener listener = new JUnitNonTestListener();", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { saveFile(doc3, new FileSelector(file3)); }", "+    });", "+    ", "+    final JUnitTestListener listener = new JUnitNonTestListener();", "-    listener.compile(doc3);", "-", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        try { listener.compile(doc3); }", "+        catch(Exception e) { fail(\"The following exception was thrown in testVerifyErrorHandledCorrectly_NOJOIN location 2: /n\" + e); }", "+      }", "+    });", "+    ", "+    _log.log(\"Second compile complete\");", "+    _log.log(\"JUnit execution complete\");", "+    ", "+    _log.log(\"testVerifyErrorHandledCorrectly_NOJOIN comlete\");"]}], "num": 505}