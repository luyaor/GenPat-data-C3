{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65aaa0829bf11a7ae1db4cb25f718a5c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26de97ca1a75d1f6865470da13b6b895", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "45c1b52040a43258c26d6135dd1fc15a1c6840d2", "commitAfterChange": "ae4333c8dd1b54b8a781008188f09b6786d95ae2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testAccessFieldsOfOuterClasses()      throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessFieldsOfOuterClasses()      throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-    // Set one breakpoints", "+    // Set one breakpoint", "-     ", "-    // Run the main() method, hitting both breakpoints in different threads", "+", "+    // Run the main() method, hitting the breakpoint", "+    ", "+    // Test that IdentityVisitor really does visit all nodes and their subnodes", "+    // by giving it a statement consisting of lots of different syntax components.", "+    // Tests that the debugger has the correct notion of ", "+    interpret(\"foo\");", "+    assertInteractionsContains(\"6\");", "+", "+    interpret(\"foo = 123\");", "+    assertEquals(\"foo should have been modified\" ,", "+                 \"123\",", "+                 interpret(\"MonkeyStuff.this.foo\"));", "+    interpret(\"int foo = 999;\");", "+    assertEquals(\"foo should refer to the foo that was declared\",", "+                 \"999\",", "+                 interpret(\"foo\"));", "+    assertEquals(\"declaring foo should not have changed MonkeyStuff.this.foo\",", "+                 \"123\",", "+                 interpret(\"MonkeyStuff.this.foo\"));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b6c28d828a40e8f882a02f867b55b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "09bec3d114e78a39aad7410d5a4ed3ab2cdf1dc4", "commitAfterChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testAccessStaticFieldsAndMethodsOfOuterClass()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessStaticFieldsAndMethodsOfOuterClass()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-    File file = new File(_tempDir, \"MonkeyStaticStuff.java\");", "+    File dir = new File(_tempDir, \"monkey\");", "+    dir.mkdir();", "+    File file = new File(dir, \"MonkeyStaticStuff.java\");", "-    _debugger.toggleBreakpoint(doc,index,10);", "+    _debugger.toggleBreakpoint(doc,index,11);", "-      interpretIgnoreResult(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.MonkeyThreeDeep.threeDeepMethod();\");", "-       _waitForNotifies(3); // suspended, updated, breakpointReached", "-       _notifierLock.wait();", "-     }", "+      //interpret(\"package monkey;\");", "+      interpretIgnoreResult(\"monkey.MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.MonkeyThreeDeep.threeDeepMethod();\");", "+      _waitForNotifies(3); // suspended, updated, breakpointReached", "+      _notifierLock.wait();", "+    }", "+    assertEquals(\"should have assigned the field of static outer class\",", "+                 \"100\",", "+                 interpret(\"monkey.MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));"]}], "num": 28312}