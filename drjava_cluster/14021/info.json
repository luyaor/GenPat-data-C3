{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10295878e6246a87eb100f9d63085466", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "633ce7f673fb65080c661abf286dae42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "signatureAfterChange": "   public Vector<HighlightStatus> _getHighlightStatus(int start, int end)", "diff": ["+    */", "+  public Vector<HighlightStatus> _getHighlightStatus(int start, int end) {", "+    ", "+    assert isReadLocked();", "-    acquireReadLock();", "-    try {", "-      synchronized(_reduced) {", "-        _setCurrentLocation(start);", "-        /* Now ask reduced model for highlight status for chars till end */", "-        v = _reduced.getHighlightStatus(start, end - start);", "-        ", "-        /* Go through and find any NORMAL blocks. Within them check for keywords. */", "-        for (int i = 0; i < v.size(); i++) {", "-          HighlightStatus stat = v.get(i);", "-          if (stat.getState() == HighlightStatus.NORMAL) i = _highlightKeywords(v, i);", "-        }", "+    synchronized(_reduced) {", "+      _setCurrentLocation(start);", "+      /* Now ask reduced model for highlight status for chars till end */", "+      v = _reduced.getHighlightStatus(start, end - start);", "+      ", "+      /* Go through and find any NORMAL blocks. Within them check for keywords. */", "+      for (int i = 0; i < v.size(); i++) {", "+        HighlightStatus stat = v.get(i);", "+        if (stat.getState() == HighlightStatus.NORMAL) i = _highlightKeywords(v, i);", "-    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb21c0a9d7d051267bcb3933b861f523", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public boolean inParenPhrase(final int pos)", "signatureAfterChange": "   public boolean inParenPhrase(final int pos)", "diff": ["+    ", "+    assert isReadLocked();", "+    ", "-    acquireReadLock();", "-    try {", "-      synchronized(_reduced) {", "-        final int oldPos = _currentLocation;", "-        // assert pos == here if read lock and reduced already held before call", "-        _setCurrentLocation(pos);", "-        inParenPhrase = inParenPhrase();", "-        _setCurrentLocation(oldPos);", "-      }", "-      _storeInCache(key, inParenPhrase, pos - 1);", "+//    acquireReadLock();", "+//    try {", "+    synchronized(_reduced) {", "+      final int oldPos = _currentLocation;", "+      // assert pos == here if read lock and reduced already held before call", "+      _setCurrentLocation(pos);", "+      inParenPhrase = inParenPhrase();", "+      _setCurrentLocation(oldPos);", "-    finally { releaseReadLock(); }", "+    _storeInCache(key, inParenPhrase, pos - 1);", "+//    }", "+//    finally { releaseReadLock(); }"]}], "num": 14021}