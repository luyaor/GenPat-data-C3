{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04af2c8f948ffa7151f6adf614d586ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33ee34b563a732ff3ae2e5dcd8f425fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public TypeData complexSuperConstructorInvocationAllowed(ComplexSuperConstructorInvocation that)", "signatureAfterChange": "   public TypeData complexSuperConstructorInvocationAllowed(ComplexSuperConstructorInvocation that)", "diff": ["-   */", "+    */", "-    ExpressionTypeChecker etc = new ExpressionTypeChecker(_data, _file, _package, _importedFiles, _importedPackages, _vars, _thrown);", "+    ExpressionTypeChecker etc = new ExpressionTypeChecker(_data, _file, _package, _importedFiles, _importedPackages, ", "+                                                          _vars, _thrown);", "-    if (!assertFound(enclosingResult, that)) {return null;};", "+    if (! assertFound(enclosingResult, that)) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c79cac8d16bf8eb6f7e8b40eb6b4e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AWTExceptionHandler.java", "commitBeforeChange": "594758207dac5be05efd3c1f7307cf865ede7afe", "commitAfterChange": "d441fefd8eab1aff683e8a16a46c50a8f6994932", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void handle(Throwable thrown)", "signatureAfterChange": "    public void handle(Throwable thrown)", "diff": ["-    while (true) { }", "+    // causes DrJava to hang when exception is thrown in event thread", "+    // removing it makes the exception window behave non-modally, which is what we want in the future anyway", "+    // while (true) { }"]}], "num": 16363}