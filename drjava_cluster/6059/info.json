{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99739307cafd6eda6f3273f9fa7eca56", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da77857550e347ca46f945591fa0772", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-  public Void forClassDef(ClassDef that) {    ", "+  public Void forClassDef(ClassDef that) { ", "-", "+    ", "+//    System.err.println(\"Processing ClassDef for \" + className);", "-   ", "-    that.getMav().visit(this);", "+    that.getMav().visit(this);", "-      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "-", "+      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, className, _file, _package, _importedFiles, _importedPackages, ", "+                                                        _classNamesInThisFile, continuations));", "+      ", "-       * in case we decide to add augmentation back in.", "-       * createConstructor is called elsewhere.*/", "+        * in case we decide to add augmentation back in.", "+        * createConstructor is called elsewhere.*/", "-", "+      ", "-", "+    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9110e870576c6d1dc016906a87b936", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-  public void forClassDef(ClassDef that) {", "+  public Void forClassDef(ClassDef that) {", "-    if (prune(that)) return;", "+    if (prune(that)) return null;", "-      isTestCase=true;", "+      isTestCase = true;", "-      getSymbolData(\"junit.framework.TestCase\", that.getSourceInfo(), true, false, true, false);   //add this to the symbol table.", "+      getSymbolData(\"junit.framework.TestCase\", that.getSourceInfo(), true, false, true, false);  // add to symbol table", "-    if (sd == null) return;", "+    if (sd == null) return null;", "-      that.getBody().visit(new ClassBodyElementaryVisitor(sd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+      that.getBody().visit(new ClassBodyElementaryVisitor(sd, _file, _package, _importedFiles, _importedPackages, ", "+                                                          _classNamesInThisFile, continuations));", "+    return null;"]}], "num": 6059}