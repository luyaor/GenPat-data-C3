{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "938800f96b0c3e995e8ce03efcb2fb33", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d0f8da5a26129ad77a3d029bec59a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DefaultInteractionsModel.java", "commitBeforeChange": "eb8f1a08f585431afff35aec705cfd9169bfce44", "commitAfterChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public StackTraceElement[] replaceLLException(StackTraceElement[] stackTrace)", "signatureAfterChange": "   public StackTraceElement[] replaceLLException(StackTraceElement[] stackTrace)", "diff": ["-    LanguageLevelStackTraceMapper LLSTM = new LanguageLevelStackTraceMapper(_model);", "-    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "-    List<File> files = new ArrayList<File>();", "-    for(OpenDefinitionsDocument odd: docs){", "-      File f = odd.getRawFile();", "-      if (f.getName().endsWith(\".dj0\") ||", "-          f.getName().endsWith(\".dj1\") ||", "-          f.getName().endsWith(\".dj2\")) files.add(f); ", "-    }", "+    // use LLSTM from compiler model.", "+    LanguageLevelStackTraceMapper LLSTM = _model.getCompilerModel().getLLSTM();", "+    final List<File> files = new ArrayList<File>();", "+    for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()) { files.add(odd.getRawFile()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233dcf433f19878770dd2c8187e0b48a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "eb8f1a08f585431afff35aec705cfd9169bfce44", "commitAfterChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void testSuiteEnded(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteEnded(JUnitError[] errors)", "diff": ["-    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "-    for(OpenDefinitionsDocument odd: docs){", "-      File f = odd.getRawFile();", "-      if (f.getName().endsWith(\".dj0\") ||", "-          f.getName().endsWith(\".dj1\") ||", "-          f.getName().endsWith(\".dj2\")) files.add(f); ", "-    }", "+    for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()){ files.add(odd.getRawFile()); }", "-      if (f.getName().endsWith(\".dj0\") ||", "-          f.getName().endsWith(\".dj1\") ||", "-          f.getName().endsWith(\".dj2\")) {", "+      if (LanguageLevelStackTraceMapper.isLLFile(f)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3686906195256a4ee6dfe0010064613", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "a6ad77fef884f528ddfb31a18f08f168fcd5e3f2", "commitAfterChange": "20e19df5b6c16c841aeff102df396402e35bacf3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void testSuiteEnded(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteEnded(JUnitError[] errors)", "diff": ["+    ", "+    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "+    List<File> files = new ArrayList<File>();", "+    for(OpenDefinitionsDocument odd: docs){", "+      File f = odd.getRawFile();", "+      if (f.getName().endsWith(\".dj0\") ||", "+          f.getName().endsWith(\".dj1\") ||", "+          f.getName().endsWith(\".dj2\")) files.add(f); ", "+    }", "+    for(JUnitError e: errors){", "+      e.setStackTrace(_compilerModel.getLLSTM().replaceStackTrace(e.stackTrace(),files));", "+      File f = e.file();", "+      if (f.getName().endsWith(\".dj0\") ||", "+          f.getName().endsWith(\".dj1\") ||", "+          f.getName().endsWith(\".dj2\")) {", "+        String dn = f.getName();", "+        dn = dn.substring(0, dn.lastIndexOf('.'))+\".java\";", "+        StackTraceElement ste = new StackTraceElement(e.className(), \"\", dn, e.lineNumber());", "+        ste = _compilerModel.getLLSTM().replaceStackTraceElement(ste, f);", "+        e.setLineNumber(ste.getLineNumber());", "+      }", "+    }"]}], "num": 7595}