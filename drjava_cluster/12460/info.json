{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7d7a285790c34cc70f901fe62bb971c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "167e1736663ab733782090d5b1f6dcde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public MethodDeclaration(ModifierSet mods, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body,                            SourceInfo si)", "signatureAfterChange": "   public MethodDeclaration(ModifierSet mods, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body,                            SourceInfo si)", "diff": ["+    this(mods, Option.<List<TypeParameter>>none(), type, name, params, excepts, body, si);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5450854b9c4804c6f11abc53e4e4dae9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public ConstructorDeclaration(ModifierSet mods, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorCall eci, List<Node> stmts,                                 SourceInfo si)", "signatureAfterChange": "   public ConstructorDeclaration(ModifierSet mods, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorCall eci, List<Node> stmts,                                 SourceInfo si)", "diff": ["+    this(mods, Option.<List<TypeParameter>>none(), name, params, excepts, eci, stmts, si);", "+  }", "-    if (name == null)    throw new IllegalArgumentException(\"name == null\");", "-    if (params == null)  throw new IllegalArgumentException(\"params == null\");", "-    if (excepts == null) throw new IllegalArgumentException(\"excepts == null\");", "-    if (stmts == null)   throw new IllegalArgumentException(\"stmts == null\");"]}], "num": 12460}