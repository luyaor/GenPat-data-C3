{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1f7edf1331ec15dda723f465c22de79", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e0db230d23cb64c4c2fd350d367ea2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public synchronized void removeBreakpoint(Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)", "diff": ["-  public synchronized void removeBreakpoint(Breakpoint breakpoint) {", "+  public synchronized void removeBreakpoint(final Breakpoint breakpoint) {", "-    if (breakpoint.getRequest() != null) {", "-      _breakpoints.remove((BreakpointRequest)breakpoint.getRequest());", "+    _breakpoints.removeElement(breakpoint);", "+    ", "+    if ( breakpoint.getRequest() != null && _eventManager != null) {", "+    ", "+    notifyListeners(new EventNotifier() {", "+      public void notifyListener(DebugListener l) {", "+        l.breakpointRemoved(breakpoint);", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a01d8c38d469ade468b1885c431f3e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "68368361f4380d060555d6ff4452e2a0dbbd3540", "commitAfterChange": "c501ef0b570ed4157af804435d399fc27ecf4e4e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigFrame ()", "signatureAfterChange": "   public ConfigFrame ()", "diff": ["-        reset();", "-        ConfigFrame.this.hide();", "+        cancel();", "-    _defaultButton = new JButton(\"Set as default\");", "-    _defaultButton.addActionListener(new ActionListener() {", "+    _saveSettingsButton = new JButton(\"Save Settings\");", "+    _saveSettingsButton.setToolTipText(\"Save all settings to disk for future sessions.\");", "+    _saveSettingsButton.addActionListener(new ActionListener() {", "-        setAsDefault();", "+        saveSettings();", "-    bottom.add(_defaultButton);", "+    bottom.add(_saveSettingsButton);", "+    addWindowListener(new WindowAdapter() { ", "+      public void windowClosing(java.awt.event.WindowEvent e) { ", "+        cancel();}", "+    });", "+    "]}], "num": 14189}