{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0a7b4e78a01737d9701f613e7fa781f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5306c17513180969d36dff85e11e1aaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprivate int _moveLeft(int count, \t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor, \t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "signatureAfterChange": "   private int _moveLeft(int count,                         ModelList<ReducedToken>.Iterator copyCursor,                         int currentOffset)", "diff": ["-\t */", "-\tprivate int _moveLeft(int count,", "-\t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor,", "-\t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd()){", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\tif (!copyCursor.atStart()) //make sure list not empty", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t}", "-\t\t\t", "-\t\t\tif (copyCursor.atStart())", "-\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t", "-\t\t\twhile (count > currentOffset){", "-\t\t\t\tcount = count - currentOffset;", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\t", "-\t\t\t\tif (copyCursor.atStart()){", "-\t\t\t\t\tif (count > 0)", "-\t\t\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t\t\t\telse {", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\tcurrentOffset = 0;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\telse {", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn currentOffset - count;", "-\t\t}\t\t ", "+  */", "+  private int _moveLeft(int count,", "+                        ModelList<ReducedToken>.Iterator copyCursor,", "+                        int currentOffset)", "+  {", "+    if (copyCursor.atEnd()) {", "+      copyCursor.prev();", "+      if (!copyCursor.atStart()) //make sure list not empty", "+        currentOffset = copyCursor.current().getSize();", "+    }", "+    ", "+    if (copyCursor.atStart()) {", "+      throw new IllegalArgumentException(\"At Start\");", "+    }", "+    while (count > currentOffset) {", "+      count = count - currentOffset;", "+      copyCursor.prev();", "+      ", "+      if (copyCursor.atStart()) {", "+        if (count > 0) {", "+          throw new IllegalArgumentException(\"At Start\");", "+        }", "+        else {", "+          copyCursor.next();", "+          currentOffset = 0;", "+        }", "+      }", "+      else {", "+        currentOffset = copyCursor.current().getSize();", "+      }", "+    }", "+    return currentOffset - count;", "+  }     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571039e6f6dac7164238f58e2401d2a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprivate int _moveLeft(int count, \t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor, \t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "signatureAfterChange": "   private int _moveLeft(int count,                         ModelList<ReducedToken>.Iterator copyCursor,                         int currentOffset)", "diff": ["-\t */", "-\tprivate int _moveLeft(int count,", "-\t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor,", "-\t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd()){", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\tif (!copyCursor.atStart()) //make sure list not empty", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t}", "-\t\t\t", "-\t\t\tif (copyCursor.atStart())", "-\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t", "-\t\t\twhile (count > currentOffset){", "-\t\t\t\tcount = count - currentOffset;", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\t", "-\t\t\t\tif (copyCursor.atStart()){", "-\t\t\t\t\tif (count > 0)", "-\t\t\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t\t\t\telse {", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\tcurrentOffset = 0;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\telse {", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn currentOffset - count;", "-\t\t}\t\t ", "+  */", "+  private int _moveLeft(int count,", "+                        ModelList<ReducedToken>.Iterator copyCursor,", "+                        int currentOffset)", "+  {", "+    if (copyCursor.atEnd()) {", "+      copyCursor.prev();", "+      if (!copyCursor.atStart()) //make sure list not empty", "+        currentOffset = copyCursor.current().getSize();", "+    }", "+    ", "+    if (copyCursor.atStart()) {", "+      throw new IllegalArgumentException(\"At Start\");", "+    }", "+    while (count > currentOffset) {", "+      count = count - currentOffset;", "+      copyCursor.prev();", "+      ", "+      if (copyCursor.atStart()) {", "+        if (count > 0) {", "+          throw new IllegalArgumentException(\"At Start\");", "+        }", "+        else {", "+          copyCursor.next();", "+          currentOffset = 0;", "+        }", "+      }", "+      else {", "+        currentOffset = copyCursor.current().getSize();", "+      }", "+    }", "+    return currentOffset - count;", "+  }     "]}], "num": 23744}