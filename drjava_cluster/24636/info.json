{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e254f11260d4ed5d923f2116568be92c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241d5abc56d46eec37e484b75a0eb68a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "          protected void handleSlaveConnected()", "signatureAfterChange": "          @Override protected void handleSlaveConnected(SlaveRemote slave)", "diff": ["-    protected void handleSlaveConnected() {", "-      TestSlaveRemote slave = (TestSlaveRemote) getSlave();", "-      assertTrue(\"slave is set\", slave != null);", "-      assertTrue(\"startUp not in progress\", ! isStartupInProgress());", "+    @Override protected void handleSlaveConnected(SlaveRemote slave) {", "-      synchronized(_connectedLock) { ", "-        _connected = true;", "-        _connectedLock.notify(); ", "+      synchronized(_slaveLock) {", "+        _slave = (TestSlaveRemote) slave;", "+        _slaveLock.notify();", "-      _log.log(\"_handleSlaveConnected() finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8a581a07e536d50725986470db5d26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "          protected void handleSlaveQuit(int status)", "signatureAfterChange": "          @Override protected void handleSlaveQuit(int status)", "diff": ["-    protected void handleSlaveQuit(int status) {", "+    @Override protected void handleSlaveQuit(int status) {", "-      assertTrue(\"slave is not set\", getSlave() == null);", "-      assertTrue(\"startUp not in progress\", ! isStartupInProgress());", "-      ", "-      synchronized(_quitLock) {", "-        _justQuit = true;", "-        _quitLock.notify();", "-      }", "+      _justQuit.signal();"]}], "num": 24636}