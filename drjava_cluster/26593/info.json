{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ebf43b151fd81192187e721c4819371", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8903e8cad9085c99913b6c94a64473b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   protected ThreadReference _getThreadFromDebugThreadData(DebugThreadData d)     throws NoSuchElementException", "signatureAfterChange": "   protected ThreadReference _getThreadFromDebugThreadData(DebugThreadData d)     throws NoSuchElementException", "diff": ["-    List threads = _vm.allThreads(); // Add parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "-    Iterator iterator = threads.iterator();", "+    List<ThreadReference> threads = _vm.allThreads(); // Added parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "+    Iterator<ThreadReference> iterator = threads.iterator();", "-      threadRef = (ThreadReference)iterator.next();", "+      threadRef = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96c51043d27b10830f722f947e98bc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   protected ThreadReference _getThreadFromDebugThreadData(DebugThreadData d)     throws NoSuchElementException", "signatureAfterChange": "   protected ThreadReference _getThreadFromDebugThreadData(DebugThreadData d)     throws NoSuchElementException", "diff": ["-    List threads = _vm.allThreads(); // Add parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "-    Iterator iterator = threads.iterator();", "+    List<ThreadReference> threads = _vm.allThreads(); // Added parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "+    Iterator<ThreadReference> iterator = threads.iterator();", "-      threadRef = (ThreadReference)iterator.next();", "+      threadRef = iterator.next();"]}], "num": 26593}