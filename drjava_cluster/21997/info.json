{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3ca5b416794146d5dd6872622cce69f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3daf613f64b87e2f46d2a415a1f54bc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void _parseStartupClasspath()", "signatureAfterChange": "      private void _parseStartupClassPath()", "diff": ["-  private void _parseStartupClasspath() {", "+  private void _parseStartupClassPath() {", "-    int index = _startupClasspath.indexOf(separator);", "+    int index = _startupClassPath.indexOf(separator);", "-    _startupClasspathVector = new ClasspathVector();", "+    _startupClassPathVector = new ClassPathVector();", "-        _startupClasspathVector.add(new File(_startupClasspath.substring(lastIndex, index)).toURL());", "+        _startupClassPathVector.add(new File(_startupClassPath.substring(lastIndex, index)).toURL());", "-      index = _startupClasspath.indexOf(separator, lastIndex);", "+      index = _startupClassPath.indexOf(separator, lastIndex);", "-    index = _startupClasspath.length();", "+    index = _startupClassPath.length();", "-      _startupClasspathVector.add(new File(_startupClasspath.substring(lastIndex, index)).toURL());", "+      _startupClassPathVector.add(new File(_startupClassPath.substring(lastIndex, index)).toURL());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da3dad8886f3cbee08e07cd954817389", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    private void _parseStartupClasspath()", "signatureAfterChange": "      private void _parseStartupClasspath()", "diff": ["-", "+  ", "-    _startupClasspathVector = new Vector<String>();", "+    _startupClasspathVector = new Vector<URL>();", "-      _startupClasspathVector.add(_startupClasspath.substring(lastIndex, index));", "+      try{", "+        _startupClasspathVector.add(new File(_startupClasspath.substring(lastIndex, index)).toURL());", "+      }catch(MalformedURLException murle){", "+        // just don't add bad classpath entry", "+      }", "-    _startupClasspathVector.add(_startupClasspath.substring(lastIndex, index));", "+    try{", "+      _startupClasspathVector.add(new File(_startupClasspath.substring(lastIndex, index)).toURL());", "+    }catch(MalformedURLException murle){", "+      // fail silently if the classpath entry is bad", "+    }"]}], "num": 21997}