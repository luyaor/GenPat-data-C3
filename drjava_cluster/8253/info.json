{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "224620126d7fc5b97f2395010f251f03", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "549f57419fd171015790aa4520eaeef3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TypeParameter.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TypeParameter(SourceInfo in_sourceInfo, List<IdentifierToken> ids, ReferenceTypeName in_bound, List<ReferenceTypeName> in_interfaceBounds)", "signatureAfterChange": "   public TypeParameter(List<IdentifierToken> ids, ReferenceTypeName in_bound,                        List<ReferenceTypeName> in_interfaceBounds, SourceInfo in_sourceInfo)", "diff": ["-  public TypeParameter(SourceInfo in_sourceInfo, List<IdentifierToken> ids, ReferenceTypeName in_bound, List<ReferenceTypeName> in_interfaceBounds) {", "-    super(ids, in_sourceInfo.getFilename(), in_sourceInfo.getStartLine(),", "-          in_sourceInfo.getStartColumn(), in_sourceInfo.getEndLine(), in_sourceInfo.getEndColumn());", "+  public TypeParameter(List<IdentifierToken> ids, ReferenceTypeName in_bound,", "+                       List<ReferenceTypeName> in_interfaceBounds, SourceInfo in_sourceInfo) {", "+    super(ids, in_sourceInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4fbbada6a8819966f525b5f52ff8821", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/TypeParameter.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TypeParameter(SourceInfo in_sourceInfo, List<IdentifierToken> ids, ReferenceType in_bound)", "signatureAfterChange": "   public TypeParameter(SourceInfo in_sourceInfo, List<IdentifierToken> ids, ReferenceType in_bound)", "diff": ["-    super(ids, in_sourceInfo.getFilename(), in_sourceInfo.getStartLine(),", "-          in_sourceInfo.getStartColumn(), in_sourceInfo.getEndLine(), in_sourceInfo.getEndColumn());", "-", "-    if (in_bound == null) { /**/ // probably not.   A null indicates a normal type used as a parameter", "-      /**///throw new IllegalArgumentException(\"Parameter 'bound' to the TypeParameter constructor was null. This class may not have null field values.\");", "-    }", "-    _bound = in_bound;", "+    this(in_sourceInfo, TreeUtilities.listToName(ids), in_bound);"]}], "num": 8253}