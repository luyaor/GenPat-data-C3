{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb3d467e833cc4fc4a0881cc3140ccb0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20969bdbeb3fdc823713e2a496947cc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 73, "signatureBeforeChange": "     public Object visit(FormalParameter node)", "signatureAfterChange": "   public Node visit(FormalParameter node)", "diff": ["+   */", "+  public Node visit(FormalParameter node) {", "+    if (node.isFinal()) {", "+      context.defineConstant(node.getName(), null);", "+    } else {", "+      context.define(node.getName(), null);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(FormalParameter node) {", "-        if (node.isFinal()) {", "-            context.defineConstant(node.getName(), null);", "-        } else {", "-            context.define(node.getName(), null);", "-        }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d29233fa35fe4927147a7717371fd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeClassInfo.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public Object visit(MethodDeclaration node)", "signatureAfterChange": "     public Void visit(MethodDeclaration node)", "diff": ["+    public Void visit(MethodDeclaration node) {", "+      List<MethodInfo> l = methods.get(node.getName());", "+      if (l == null) {", "+        l = new LinkedList<MethodInfo>();", "+      }", "+      ", "+      l.add(new TreeMethodInfo(node, classFinder, TreeClassInfo.this));", "+      methods.put(node.getName(), l);", "+      methodCount++;", "+      return null;", "-         */", "-        public Object visit(MethodDeclaration node) {", "-\t    List l = (List)methods.get(node.getName());", "-\t    if (l == null) {", "-\t\tl = new LinkedList();", "-\t    }", "-", "-\t    l.add(new TreeMethodInfo(node, classFinder, TreeClassInfo.this));", "-            methods.put(node.getName(), l);", "-\t    methodCount++;", "-            return null;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6436b90bedbfb26ef9d57e8600bbab84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "     public Object visit(FormalParameter node)", "signatureAfterChange": "   public Class visit(FormalParameter node)", "diff": ["+   */", "+  public Class visit(FormalParameter node) {", "+    Class c = (Class)node.getType().acceptVisitor(this);", "+    ", "+    if (node.isFinal()) {", "+      context.defineConstant(node.getName(), c);", "+    } else {", "+      context.define(node.getName(), c);", "+    }", "+    node.setProperty(NodeProperties.TYPE, c);", "+    ", "+    return c;", "+  }", "-     */", "-    public Object visit(FormalParameter node) {", "-        Class c = (Class)node.getType().acceptVisitor(this);", "-", "-        if (node.isFinal()) {", "-            context.defineConstant(node.getName(), c);", "-        } else {", "-            context.define(node.getName(), c);", "-        }", "-        node.setProperty(NodeProperties.TYPE, c);", "-\t", "-        return c;", "-    }"]}], "num": 24368}