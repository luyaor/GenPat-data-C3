{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06ca5b4f0931274728a1cf2c9c98617b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a53e57308d75579a86838f9d2785da8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Bob.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      public void testFindClassReference()", "signatureAfterChange": "      public void testFindClassReference()", "diff": ["-      assertEquals(\"Should return string\", string, _b.findClassReference(null, \"java.lang.String\", new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+      assertEquals(\"Should return string\", string,", "+                   _b.findClassReference(null, \"java.lang.String\", new NullLiteral(SourceInfo.NO_INFO)));", "-      assertEquals(\"Should return null\", null, _b.findClassReference(null, \"non-existant\", new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+      assertEquals(\"Should return null\", null, ", "+                   _b.findClassReference(null, \"non-existant\", new NullLiteral(SourceInfo.NO_INFO)));", "-      assertEquals(\"Should return string\", string, _b.findClassReference(new PackageData(\"java.lang\"), \"String\", new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+      assertEquals(\"Should return string\", string,", "+                   _b.findClassReference(new PackageData(\"java.lang\"), \"String\", new NullLiteral(SourceInfo.NO_INFO)));", "-      assertEquals(\"Should return null\", null, _b.findClassReference(new PackageData(\"nonsense\"), \"non-existant\", new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+      assertEquals(\"Should return null\", null, ", "+                   _b.findClassReference(new PackageData(\"nonsense\"), \"non-existant\", ", "+                                         new NullLiteral(SourceInfo.NO_INFO)));", "-      assertEquals(\"Should return inner\", inner, _b.findClassReference(string, \"Inner\", new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+      assertEquals(\"Should return inner\", inner,", "+                   _b.findClassReference(string, \"Inner\", new NullLiteral(SourceInfo.NO_INFO)));", "-      assertEquals(\"Should return null\", null, _b.findClassReference(string, \"non-existant\", new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+      assertEquals(\"Should return null\", null, ", "+                   _b.findClassReference(string, \"non-existant\", new NullLiteral(SourceInfo.NO_INFO)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c217aea01a530b66ba744d8eeb433516", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      public void testFindClassReference()", "signatureAfterChange": "      public void testFindClassReference()", "diff": ["-                   _stc.findClassReference(null, \"java.lang.String\", new NullLiteral(SourceInfo.NO_INFO)));", "+                   _stc.findClassReference(null, \"java.lang.String\", new NullLiteral(SourceInfo.NONE)));", "-                   _stc.findClassReference(null, \"non-existant\", new NullLiteral(SourceInfo.NO_INFO)));", "+                   _stc.findClassReference(null, \"non-existant\", new NullLiteral(SourceInfo.NONE)));", "-                   _stc.findClassReference(new PackageData(\"java.lang\"), \"String\", new NullLiteral(SourceInfo.NO_INFO)));", "+                   _stc.findClassReference(new PackageData(\"java.lang\"), \"String\", new NullLiteral(SourceInfo.NONE)));", "-                                         new NullLiteral(SourceInfo.NO_INFO)));", "+                                         new NullLiteral(SourceInfo.NONE)));", "-                   _stc.findClassReference(string, \"Inner\", new NullLiteral(SourceInfo.NO_INFO)));", "+                   _stc.findClassReference(string, \"Inner\", new NullLiteral(SourceInfo.NONE)));", "-                   _stc.findClassReference(string, \"non-existant\", new NullLiteral(SourceInfo.NO_INFO)));", "+                   _stc.findClassReference(string, \"non-existant\", new NullLiteral(SourceInfo.NONE)));"]}], "num": 18895}