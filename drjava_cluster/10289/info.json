{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cea76c19bbeb2d007d4b0b292a82f28", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7955e4d004e845895d3b9880d6cd0f04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private List<FormalParameter> getFormalParameterList(String paramString, boolean isVarArgs) throws ParseException", "signatureAfterChange": "      private List<FormalParameter> getFormalParameterList(String paramString, boolean isVarArgs) throws ParseException", "diff": ["-    assertEquals(\"Type of node\", MethodDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of node\", MethodDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afdeef32a91fbb3c1fde8f4d80c8d3d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testSimpleFor() throws ParseException", "signatureAfterChange": "    public void testSimpleFor() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntType: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.QualifiedName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntTypeName: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.QualifiedName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}], "num": 10289}