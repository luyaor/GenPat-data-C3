{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa28883042781903c935031611446f4b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee2251cf217d4736a116faf2616e685", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "8ffb3ce85dd256ff9cb8d7378cb82fb3debde2f9", "commitAfterChange": "0df41f295768b78613155bc47fcd824786200608", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public PreviewFrame(SingleDisplayModel model, MainFrame mainFrame, boolean interactions)      throws IllegalStateException", "signatureAfterChange": "   public PreviewFrame(SingleDisplayModel model, MainFrame mainFrame, boolean interactions)      throws IllegalStateException", "diff": ["+    //zooming modification", "+    cycle = 0;", "-    ", "-    PagePreviewContainer ppc = new PagePreviewContainer();", "-    ppc.add(_pagePreview);", "+    //zooming modification", "+    //PagePreviewContainer ppc = new PagePreviewContainer();", "+    //ppc.add(_pagePreview);", "+    JPanel previewHolder = new JPanel(new BorderLayout());", "+    //zooming modification", "+    _previewScroll = new JScrollPane(previewHolder);", "+    //_previewScroll = new JScrollPane(cp);", "+    _previewScroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "+    _previewScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);", "+    ", "+    //zooming modification", "+    previewHolder.add(_pagePreview, BorderLayout.CENTER);", "+    cp.add(_previewScroll);", "+    ", "+    //setContentPane(_previewScroll);", "+    //cp.add(_pagePreview, BorderLayout.CENTER);", "-    cp.add(ppc, BorderLayout.SOUTH);", "-    ", "+    //zooming modification", "+    //cp.add(ppc, BorderLayout.SOUTH);", "-    ", "-    setSize(PREVIEW_WIDTH, PREVIEW_HEIGHT);", "+    //zooming modification", "+    setExtendedState(Frame.MAXIMIZED_BOTH);", "+    //setSize(screenSize.width, screenSize.height);", "+    //setSize(PREVIEW_WIDTH, PREVIEW_HEIGHT);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57acc8c1f3d7efafb31ed3fc79b6058b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessSequence.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   protected void connectProcess(Process p)", "signatureAfterChange": "   protected void connectProcess(Process p)", "diff": ["-    StreamRedirectThread r = new StreamRedirectThread(\"stdout Redirector \"+_index,", "-                                                      p.getInputStream(),", "-                                                      _combinedStdOutStream,", "-                                                      false,", "-                                                      PROCESS_SEQUENCE_THREAD_GROUP);", "-    _redirectors.add(r);", "-    r.start();", "-    r = new StreamRedirectThread(\"stderr Redirector \"+_index,", "-                                 p.getErrorStream(),", "-                                 _combinedStdErrStream,", "-                                 false,", "-                                 PROCESS_SEQUENCE_THREAD_GROUP);", "-    _redirectors.add(r);", "-    r.start();", "+    if (_stdOutRedirector==null) {", "+      _stdOutRedirector = new StreamRedirectThread(\"stdout Redirector \"+_index,", "+                                                   p.getInputStream(),", "+                                                   _combinedStdOutStream,", "+                                                   false/*close*/,", "+                                                   new ProcessSequenceThreadGroup(_combinedStdErrStream),", "+                                                   true/*keepRunning*/);", "+      _stdOutRedirector.start();", "+    }", "+    else {", "+      _stdOutRedirector.setInputStream(p.getInputStream());", "+    }", "+    if (_stdErrRedirector==null) {", "+      _stdErrRedirector = new StreamRedirectThread(\"stderr Redirector \"+_index,", "+                                                   p.getErrorStream(),", "+                                                   _combinedStdErrStream,", "+                                                   false/*close*/,", "+                                                   new ProcessSequenceThreadGroup(_combinedStdErrStream),", "+                                                   true/*keepRunning*/);", "+      _stdErrRedirector.start();", "+    }", "+    else {", "+      _stdErrRedirector.setInputStream(p.getErrorStream());", "+    }"]}], "num": 17083}