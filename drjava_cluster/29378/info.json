{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5c79be27550b8ff27e0a7fb82966e1d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197b56cc1bb0b71d045fa7ccc0366ee1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a661a8e595eaba533f043d38dbbb891fcd8bf32f", "commitAfterChange": "042ffb6978685c2b793d5124edfd3dfa24636f7c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void setTab(String tab, int pos)", "signatureAfterChange": "   public void setTab(String tab, int pos)", "diff": ["+      int len = firstNonWSPos - startPos;", "-      remove(startPos, firstNonWSPos - startPos);", "-      insertString(startPos, tab, null);", "+      if (!_hasOnlySpaces(tab) || (len != tab.length())) {", "+        remove(startPos, len);", "+        insertString(startPos, tab, null);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c863f4eadcdc40b719c854fb651b47c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0f8e3de4404f31c0be663f53dc9f13f993417600", "commitAfterChange": "a18bb851a57c48dcae2d71fcfc96fdc834ac0245", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "   private synchronized int _findKeywordAtToplevel(String keyword,                                                   String text,                                                   int textOffset)", "signatureAfterChange": "   private synchronized int _findKeywordAtToplevel(String keyword,                                                   String text,                                                   int textOffset)", "diff": ["-        done = true; break;", "-      } else {", "+        done = true;", "+        break;", "+      }", "+      else {", "-        if (rt.getState() == ReducedModelStates.FREE && ", "-            Character.isWhitespace(text.charAt(index + keyword.length()))) {", "-          //if (!_isCommentedOrSpace(index,text)) {", "-          done = true;", "-          if (!posNotInBlock(index)) { //in a paren phrase, gone too far", "-            index = -1;", "+        int indexPastKeyword = index + keyword.length();", "+        if (indexPastKeyword < text.length()) {", "+          if (rt.getState() == ReducedModelStates.FREE &&", "+              Character.isWhitespace(text.charAt(indexPastKeyword))) {", "+            //if (!_isCommentedOrSpace(index,text)) {", "+            done = true;", "+            if (!posNotInBlock(index)) { //in a paren phrase, gone too far", "+              index = -1;", "+            }", "-        } else {", "-          index++;  //move past so we can search again", "+          else {", "+            index++;  //move past so we can search again", "+          }", "+        }", "+        else {", "+          // No space found past the keyword", "+          index = -1;", "+          done = true;"]}], "num": 29378}