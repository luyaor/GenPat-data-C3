{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a343d75a0087a60408ed4e9b06ce56fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3772c631730d5ce19840cda6f73e7599", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "3f81b37285813b52f5c285ae3a68ee4a21753a7e", "commitAfterChange": "844a54657c2f878fc1ea01131f59375a436ab7c8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void notifyListeners(Notifier n)", "signatureAfterChange": "   synchronized public void notifyListeners(Notifier n)", "diff": ["-  public void notifyListeners(Notifier n) {", "-    int listeners = 0;", "-    synchronized(_listeners) {", "-      Enumeration<GlobalModelListener> i = _listeners.elements();", "-      while(i.hasMoreElements()) {", "-        GlobalModelListener cur = i.nextElement();", "-        n.notifyListener(cur);", "-      }", "+  synchronized public void notifyListeners(Notifier n) {", "+    int size = _listeners.size();", "+    for(int i = 0; i < size; i++) {", "+      n.notifyListener(_listeners.get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a21f8e54d7e8bfb02e320bda0868abb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "3f81b37285813b52f5c285ae3a68ee4a21753a7e", "commitAfterChange": "844a54657c2f878fc1ea01131f59375a436ab7c8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public boolean pollListeners(Poller p)", "signatureAfterChange": "   synchronized public boolean pollListeners(Poller p)", "diff": ["-  public boolean pollListeners(Poller p) {", "-    synchronized(_listeners) {", "-      Enumeration<GlobalModelListener> i = _listeners.elements();", "-      boolean poll = true;", "-      ", "-      while(i.hasMoreElements()) {", "-        GlobalModelListener cur = i.nextElement();", "-        poll = poll && p.poll(cur);", "-      }", "-      return poll;", "+  synchronized public boolean pollListeners(Poller p) {", "+    boolean poll = true;", "+    ", "+    int size = _listeners.size();", "+    for(int i = 0; (poll && (i < size)); i++) {", "+      poll = poll && p.poll(_listeners.get(i));", "+    return poll;"]}], "num": 25136}