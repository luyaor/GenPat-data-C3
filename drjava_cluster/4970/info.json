{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92addfea7815aa94461ac12bd20f7f1f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20bf222502aa7bb83da325ceae24d261", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void testTryStatementWithCatchBlock() throws ParseException", "signatureAfterChange": "      public void testTryStatementWithCatchBlock() throws ParseException", "diff": ["-    catchSt.add(new CatchStatement(new FormalParameter(false, new ReferenceTypeName(\"IOException\"), \"ioe\"), new BlockStatement(stmts2), \"\", -1, -1, -1, -1));", "+    catchSt.add(new CatchStatement(new FormalParameter(false, new ReferenceTypeName(\"IOException\"), \"ioe\"), new BlockStatement(stmts2), SourceInfo.NONE));", "-                                     \"\", -1, -1, -1, -1));", "+                                     SourceInfo.NONE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25dc7eb4b56edf813fd012ca39641489", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testForStatement() throws ParseException", "signatureAfterChange": "      public void testForStatement() throws ParseException", "diff": ["-    stmts.add(new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1), true));", "+    stmts.add(new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, SourceInfo.NONE), true));", "-                                     new LessExpression(new AmbiguousName(\"i\"),new SimpleMethodCall(\"sizeof\", args, \"\", -1, -1, -1, -1)),", "+                                     new LessExpression(new AmbiguousName(\"i\"),new SimpleMethodCall(\"sizeof\", args, SourceInfo.NONE)),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37f8b47d247b47914e759f7008c2273", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testSynchronizedStatement() throws ParseException", "signatureAfterChange": "      public void testSynchronizedStatement() throws ParseException", "diff": ["-    stmts.add(new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"lock\"), \"release\", null, \"\", -1, -1, -1, -1), true));", "+    stmts.add(new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"lock\"), \"release\", null, SourceInfo.NONE), true));", "-                                              \"\", -1, -1, -1, -1));", "+                                              SourceInfo.NONE));"]}], "num": 4970}