{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f35d4e36542f6d2651945a22c28d2a7d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98959b96b9f58f6b2bd083f96afa7028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 311, "methodNumberAfterChange": 314, "signatureBeforeChange": "   private OpenDefinitionsDocument _getOpenDocument(File file)", "signatureAfterChange": "   private OpenDefinitionsDocument _getOpenDocument(File file)", "diff": ["-    OpenDefinitionsDocument doc = null;", "-    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "-    while(odds.hasNext() && doc == null)", "-    {", "-      OpenDefinitionsDocument thisDoc = odds.next();", "-      try {", "-        File thisFile = null;", "+    synchronized (_documentsRepos) { ", "+      for (OpenDefinitionsDocument doc: _documentsRepos.values()) {", "-          thisFile = thisDoc.getFile();", "-        }", "-        catch (FileMovedException fme) {", "-          // Ok, file is invalid, but compare anyway", "-          thisFile = fme.getFile();", "-        }", "-        finally {", "-          // Always do the comparison", "-          if (thisFile != null) {", "-            try {", "-              // Compare canonical paths if possible", "-              if (thisFile.getCanonicalFile().equals(file.getCanonicalFile())) {", "-                doc = thisDoc;", "+          File thisFile = null;", "+          try { thisFile = doc.getFile(); }", "+          catch (FileMovedException fme) {", "+            // Ok, file is invalid, but compare anyway", "+            thisFile = fme.getFile();", "+          }", "+          finally {", "+            // Always do the comparison", "+            if (thisFile != null) {", "+              try {", "+                // Compare canonical paths if possible", "+                if (thisFile.getCanonicalFile().equals(file.getCanonicalFile())) return doc;", "-            }", "-            catch (IOException ioe) {", "-              // Can be thrown from getCanonicalFile.", "-              //  If so, compare the files themselves", "-              if (thisFile.equals(file)) {", "-                doc = thisDoc;", "+              catch (IOException ioe) {", "+                // Can be thrown from getCanonicalFile.", "+                //  If so, compare the files themselves", "+                if (thisFile.equals(file)) return doc;", "-      }", "-      catch (IllegalStateException ise) {", "-        // No file in thisDoc", "+        catch (IllegalStateException ise) { /* No file in doc; fail silently */ }", "-", "-    return doc;", "+    return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d28eeb9c6509e118fb89267866e07a9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9c56cd9d9775329b3a5e6a7701ab0c05369850af", "commitAfterChange": "a7a439f9a53360ece86e113cdb8203e5c8b2acda", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 323, "signatureBeforeChange": "   private OpenDefinitionsDocument _getOpenDocument(File file)", "signatureAfterChange": "   private OpenDefinitionsDocument _getOpenDocument(File file)", "diff": ["-", "-    synchronized (_documentsRepos) { ", "-      for (OpenDefinitionsDocument doc: _documentsRepos.values()) {", "-        try {", "-          File thisFile = null;", "-          try { thisFile = doc.getFile(); }", "-          catch (FileMovedException fme) {", "-            // Ok, file is invalid, but compare anyway", "-            thisFile = fme.getFile();", "-          }", "-          finally {", "-            // Always do the comparison", "-            if (thisFile != null) {", "-              try {", "-                // Compare canonical paths if possible", "-                if (thisFile.getCanonicalFile().equals(file.getCanonicalFile())) return doc;", "-              }", "-              catch (IOException ioe) {", "-                // Can be thrown from getCanonicalFile.", "-                //  If so, compare the files themselves", "-                if (thisFile.equals(file)) return doc;", "-              }", "+    ", "+    OpenDefinitionsDocument[] docs;", "+    ", "+    synchronized (_documentsRepos) { docs = _documentsRepos.valuesArray(new OpenDefinitionsDocument[0]); }", "+    for (OpenDefinitionsDocument doc: docs) {", "+      try {", "+        File thisFile = null;", "+        try { thisFile = doc.getFile(); }", "+        catch (FileMovedException fme) { thisFile = fme.getFile(); } // File is invalid, but compare anyway", "+        finally {", "+          // Always do the comparison", "+          if (thisFile != null) {", "+            try {", "+              // Compare canonical paths if possible", "+              if (thisFile.getCanonicalFile().equals(file.getCanonicalFile())) return doc;", "+            }", "+            catch (IOException ioe) {", "+              // Can be thrown from getCanonicalFile.", "+              //  If so, compare the files themselves", "+              if (thisFile.equals(file)) return doc;", "-        catch (IllegalStateException ise) { /* No file in doc; fail silently */ }", "+      catch (IllegalStateException ise) { /* No file in doc; fail silently */ }"]}], "num": 16746}