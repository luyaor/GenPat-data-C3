{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7418af49d6cf8d681261474b37d7e99", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54d669aab86c746a5794e7c93dfaeac6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["-  /** Build the dialog. */\r", "-  private void initComponents() {\r", "-    _dirChooser = new DirectoryChooser(this);\r", "-    _dirChooser.setDialogTitle(\"Select Work Directory\");\r", "-    _dirChooser.setApproveButtonText(\"Select\");\r", "-    _fileChooser = new FileChooser(null);\r", "-    _fileChooser.setDialogTitle(\"Select Enclosing .djapp File\");\r", "-    _fileChooser.setApproveButtonText(\"Select\");\r", "-    \r", "-    super.getContentPane().setLayout(new GridLayout(1,1));\r", "-    \r", "-    if (_editMode) {\r", "-      Action saveCommandAction = new AbstractAction(\"Save\") {\r", "-        public void actionPerformed(ActionEvent e) {\r", "-          _saveCommand();\r", "-        }\r", "-      };\r", "-      _saveCommandButton = new JButton(saveCommandAction);\r", "-    }\r", "-    else {\r", "-      Action runCommandAction = new AbstractAction(\"Run Command Line\") {\r", "-        public void actionPerformed(ActionEvent e) {\r", "-          _runCommand();\r", "-        }\r", "-      };\r", "-      _runCommandButton = new JButton(runCommandAction);\r", "-      _runCommandButton.addFocusListener(new FocusAdapter() {\r", "-        @SuppressWarnings(\"unchecked\")\r", "-        public void focusGained(FocusEvent e) {\r", "-          _insertCommandButton.setEnabled(false);\r", "-        }\r", "-        public void focusLost(FocusEvent e) {\r", "-          if ((e.getOppositeComponent() == _commandLinePreview) || \r", "-              (e.getOppositeComponent() == _commandWorkDirLinePreview) ||\r", "-              (e.getOppositeComponent() == _commandEnclosingFileLinePreview)) {\r", "-            _runCommandButton.requestFocus();\r", "-          }\r", "-        }\r", "-      });\r", "-      \r", "-      Action saveCommandAction = new AbstractAction(\"Save to Menu...\") {\r", "-        public void actionPerformed(ActionEvent e) {\r", "-          _saveCommand();\r", "-        }\r", "-      };\r", "-      _saveCommandButton = new JButton(saveCommandAction);\r", "-    }\r", "-    \r", "-    _insertVarDialog = new InsertVariableDialog(_mainFrame, _insertVarDialogMonitor);\r", "-    Action insertCommandAction = new AbstractAction(\"Insert Variable...\") {\r", "-      public void actionPerformed(ActionEvent e) {\r", "-        _insertVariableCommand();\r", "-      }\r", "-    };\r", "-    _insertCommandButton = new JButton(insertCommandAction);\r", "-    _insertCommandButton.setEnabled(false);\r", "-    \r", "-    Action cancelAction = new AbstractAction(\"Cancel\") {\r", "-      public void actionPerformed(ActionEvent e) {\r", "-        _cancel();\r", "-      }\r", "-    };\r", "-    _cancelCommandButton = new JButton(cancelAction);\r", "-    \r", "-    // set up \"Command Line\" panel\r", "-    _commandPanel = makeCommandPane();\r", "-    \r", "-    super.getContentPane().add(_commandPanel);\r", "-    super.setResizable(false);\r", "-    \r", "-    setSize(FRAME_WIDTH, FRAME_HEIGHT);\r", "-    MainFrame.setPopupLoc(this, _mainFrame);\r", "-    SwingUtilities.invokeLater(new Runnable() {\r", "-      public void run() {\r", "-        _commandLine.requestFocus();\r", "-      }\r", "-    });\r", "-  }\r", "+  /** Build the dialog. */", "+  private void initComponents() {", "+    _dirChooser = new DirectoryChooser(this);", "+    _dirChooser.setDialogTitle(\"Select Work Directory\");", "+    _dirChooser.setApproveButtonText(\"Select\");", "+    _fileChooser = new FileChooser(null);", "+    _fileChooser.setDialogTitle(\"Select Enclosing .djapp File\");", "+    _fileChooser.setApproveButtonText(\"Select\");", "+    ", "+    super.getContentPane().setLayout(new GridLayout(1,1));", "+    ", "+    if (_editMode) {", "+      Action saveCommandAction = new AbstractAction(\"Save\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _saveCommand();", "+        }", "+      };", "+      _saveCommandButton = new JButton(saveCommandAction);", "+    }", "+    else {", "+      Action runCommandAction = new AbstractAction(\"Run Command Line\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _runCommand();", "+        }", "+      };", "+      _runCommandButton = new JButton(runCommandAction);", "+      _runCommandButton.addFocusListener(new FocusAdapter() {", "+        @SuppressWarnings(\"unchecked\")", "+        public void focusGained(FocusEvent e) {", "+          _insertCommandButton.setEnabled(false);", "+        }", "+        public void focusLost(FocusEvent e) {", "+          if ((e.getOppositeComponent() == _commandLinePreview) || ", "+              (e.getOppositeComponent() == _commandWorkDirLinePreview) ||", "+              (e.getOppositeComponent() == _commandEnclosingFileLinePreview)) {", "+            _runCommandButton.requestFocus();", "+          }", "+        }", "+      });", "+      ", "+      Action saveCommandAction = new AbstractAction(\"Save to Menu...\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _saveCommand();", "+        }", "+      };", "+      _saveCommandButton = new JButton(saveCommandAction);", "+    }", "+    ", "+    _insertVarDialog = new InsertVariableDialog(_mainFrame, _insertVarDialogMonitor);", "+    Action insertCommandAction = new AbstractAction(\"Insert Variable...\") {", "+      public void actionPerformed(ActionEvent e) {", "+        _insertVariableCommand();", "+      }", "+    };", "+    _insertCommandButton = new JButton(insertCommandAction);", "+    _insertCommandButton.setEnabled(false);", "+    ", "+    Action cancelAction = new AbstractAction(\"Cancel\") {", "+      public void actionPerformed(ActionEvent e) {", "+        _cancel();", "+      }", "+    };", "+    _cancelCommandButton = new JButton(cancelAction);", "+    ", "+    // set up \"Command Line\" panel", "+    _commandPanel = makeCommandPane();", "+    ", "+    super.getContentPane().add(_commandPanel);", "+    super.setResizable(false);", "+    ", "+    setSize(FRAME_WIDTH, FRAME_HEIGHT);", "+    MainFrame.setPopupLoc(this, _mainFrame);", "+    EventQueue.invokeLater(new Runnable() {", "+      public void run() {", "+        _commandLine.requestFocus();", "+      }", "+    });", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca5f88d70a4b99b0e3c7ff8b15fef0a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _init(Window owner, File root, boolean allowMultiple, boolean showHidden)", "signatureAfterChange": "   private void _init(Component owner, File root, boolean allowMultiple, boolean showHidden)", "diff": ["-  private void _init(Window owner, File root, boolean allowMultiple, boolean showHidden) {", "-    if (root != null && !root.isDirectory()) {", "-      root = root.getAbsoluteFile().getParentFile();", "-    }", "+  private void _init(Component owner, File root, boolean allowMultiple, boolean showHidden) {", "+    ", "+    if (root != null && ! root.isDirectory()) setCurrentDirectory(root.getAbsoluteFile().getParentFile());", "-    _treeIsGenerated = false;", "-    _forceTreeGenerate = true;", "-    _embedded = false;", "-    _defaultSelectedFile = null;", "-    _allowMultiple = allowMultiple;", "-    _showHidden = showHidden;", "-    _finalResult = ERROR_OPTION;", "-    _choosableDirs = new LinkedList<FileFilter>();", "-    _normalFileFilters = new LinkedList<FileFilter>();", "-    _fileSelectionListeners = new Hashtable<FileSelectionListener, TreeSelectionListener>();", "-    _fdManager = new DefaultFileDisplayManager();", "-    _glassPane = new GlassPane();", "-    _glassPane.setVisible(false);", "-        ", "-    // This sets the root file and generates the tree", "-    setRootFile(root);", "-    ", "-    _offLimits = new HashSet<File>();", "-    File[] shellRoots = (File[])ShellFolder.get(\"fileChooserComboBoxFolders\");", "-    for(File f : shellRoots) {", "-      _offLimits.add(f);", "-    }", "-    ", "-    ", "-    GridBagLayout layout = new GridBagLayout();", "-    GridBagConstraints c = new GridBagConstraints();", "-    c.anchor = GridBagConstraints.SOUTHWEST;", "-    _topComponentPanel = new JPanel(layout);", "-    _topComponentPanel.setBorder(BorderFactory.createEmptyBorder(5,5,0,5));", "-    _topLabel = new JLabel(_topLabelText);", "-    layout.setConstraints(_topLabel, c);", "-    _topComponentPanel.add(_topLabel);", "-        ", "-    _northPanel = new JPanel(new BorderLayout());", "-    _northPanel.setBorder(BorderFactory.createEmptyBorder(5,5,0,5));", "-    _northPanel.add(_topComponentPanel, BorderLayout.WEST);", "-//    _northPanel.add(_newButtonPanel, BorderLayout.EAST);", "-    ", "-    ", "-    _scroller = new JScrollPane();", "-    Border innerBorder = BorderFactory.createBevelBorder(BevelBorder.LOWERED);", "-//    Border outerBorder = BorderFactory.createEmptyBorder(0,10,0,10);", "-//    Border fullBorder = BorderFactory.createCompoundBorder(outerBorder,innerBorder);", "-    _scroller.setBorder(innerBorder);", "-    ", "-    _accessoryPanel = new JPanel(new BorderLayout());", "-    _accessoryPanel.setBorder(BorderFactory.createEmptyBorder(0,10,0,10));", "-    ", "-    _approveButton = new JButton(_approveText);", "-    _approveButton.setEnabled(false);", "-    ", "-    _cancelButton = new JButton(_cancelText);", "-    ", "-    ", "-    JPanel _okCancelPanel = new JPanel(new FlowLayout());", "-    _okCancelPanel.add(_approveButton);", "-    _okCancelPanel.add(_cancelButton);", "-    ", "-    _newFolderButton = new JButton(\"Make New Folder\"/**,_newFolderIcon**/);", "-    _newFolderButton.setEnabled(false);", "-    _newFolderButton.setMargin(new Insets(2,2,2,2));", "-    _newFolderButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startCreateNewDirectory();", "-      }", "+    setMultiSelectionEnabled(allowMultiple);", "+    setFileHidingEnabled(! showHidden);", "+    setFileSelectionMode(DIRECTORIES_ONLY);", "+    setDialogType(CUSTOM_DIALOG);", "+    setApproveButtonText(\"Choose\");", "+    setFileFilter(new FileFilter() {", "+      public boolean accept(File f) { return true; }", "+      public String getDescription() { return \"All Folders\"; }", "-    ", "-    _newButtonPanel = new JPanel();", "-    _newButtonPanel.add(_newFolderButton);", "-    _newButtonPanel.setVisible(false);", "-    ", "-    _buttonPanel = new JPanel(new BorderLayout());", "-    _buttonPanel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));", "-    _buttonPanel.add(_okCancelPanel, BorderLayout.EAST);", "-    _buttonPanel.add(_newButtonPanel, BorderLayout.WEST);", "-    ", "-    ", "-    _southPanel = new JPanel(new BorderLayout());", "-    _southPanel.add(_accessoryPanel, BorderLayout.CENTER);", "-    _southPanel.add(_buttonPanel, BorderLayout.SOUTH);", "-        ", "-    _treePopup = new JPopupMenu();", "-    ", "-    _collapseItem = new JMenuItem(\"Collapse\");", "-    _treePopup.add(_collapseItem);", "-    _collapseItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _tree.collapsePath(_tree.getSelectionPath());", "-      }", "-    });", "-    _expandItem = new JMenuItem(\"Expand\");", "-    _treePopup.add(_expandItem);", "-    _expandItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _tree.expandPath(_tree.getSelectionPath());", "-      }", "-    });", "-    ", "-    _treePopup.addSeparator();", "-    _popSep = (JPopupMenu.Separator)_treePopup.getComponent(2);", "-    ", "-    _refreshItem = new JMenuItem(\"Refresh\");", "-    _treePopup.add(_refreshItem);", "-    _refreshItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startRefreshNode();", "-      }", "-    });", "-    _renameItem = new JMenuItem(\"Rename\");", "-    _treePopup.add(_renameItem);", "-    _renameItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startRename();", "-      }", "-    });", "-    _deleteItem = new JMenuItem(\"Delete\");", "-    _treePopup.add(_deleteItem);", "-    _deleteItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {    ", "-        startDelete();", "-      }", "-    });", "-    _newFolderItem = new JMenuItem(\"New Folder\");", "-    _treePopup.add(_newFolderItem);", "-    _newFolderItem.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        startCreateNewDirectory();", "-      }", "-    });", "-        ", "-    setEditable(false);", "-    this.setLayout(new BorderLayout());", "-    this.add(_scroller, BorderLayout.CENTER);", "-    this.setBackground(Color.blue);"]}], "num": 20167}