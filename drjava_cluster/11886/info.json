{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41d9b7b9efaa43b04eef3236155412b7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7b46d48bdfae4cfd283ce5e8d2cd60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setCacheSize(int size)", "signatureAfterChange": "   public void setCacheSize(int size)", "diff": ["-    int dist;", "+    int diff;", "-      dist = _residentQueue.size() - CACHE_SIZE;", "-      if (dist > 0) { ", "-        removed = new DocManager[dist];", "-        for (int i = 0; i < dist; i++) removed[i] = _residentQueue.remove(0);", "+      diff = _residentQueue.size() - CACHE_SIZE;", "+      if (diff > 0) { ", "+        removed = new DocManager[diff];", "+        for (int i = 0; i < diff; i++) removed[i] = _residentQueue.remove(0);", "-      if (dist > 0) kickOut(removed);", "+      if (diff > 0) kickOut(removed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8650feb02e8af7ec9d9555cfc2a997", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "commitAfterChange": "e56c3e65e7bcf825d7bbbc53538aa94699792774", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setCacheSize(int size)", "signatureAfterChange": "   public void setCacheSize(int size)", "diff": ["-    int diff;", "-    DocManager[] removed = null;  // bogus initialization makes javac happy", "-      diff = _residentQueue.size() - CACHE_SIZE;", "-      if (diff > 0) { ", "-        removed = new DocManager[diff];", "-        for (int i = 0; i < diff; i++) removed[i] = _residentQueue.remove(0);", "+      int diff = _residentQueue.size() - CACHE_SIZE;", "+      if (diff > 0) {", "+        Iterable<DocManager> toRemove = IterUtil.snapshot(IterUtil.truncate(_residentQueue, diff));", "+        for (DocManager dm : toRemove) { _residentQueue.remove(dm); dm.kickOut(); }", "-      if (diff > 0) kickOut(removed);", "-  }"]}], "num": 11886}