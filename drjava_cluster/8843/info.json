{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2fefffaaa6894cb27c795868e427369", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a05e5a630d4c6e4ce6669380d56f072", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fb8ddcbfd71bd75d2b307b4e83f7a834ec364082", "commitAfterChange": "be84679bc73e85f88d6958fbfdf8b35be73855ab", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   void debuggerStep(int flag)", "signatureAfterChange": "   void debuggerStep(int flag)", "diff": ["+      catch (IllegalStateException ise) {", "+        // This may happen if the user if stepping very frequently,", "+        // and is even more likely if they are using both hotkeys", "+        // and UI buttons. Ignore it in this case. ", "+        // Hopefully, there are no other situations where", "+        // the user can be trying to step while there are no", "+        // suspended threads.", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ade565f12cd82fb543b42a8eacae87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/TreeLog.java", "commitBeforeChange": "a8bdfee12d75aa9a066652d8f975838df6021bb2", "commitAfterChange": "73b7f0a42ebcf824c132189e958d58c40bbacf0e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public void write(final String time, final String thread, final String location,                       final SizedIterable<? extends String> messages)", "signatureAfterChange": "          public void write(final String time, final String thread, final String location,                       final SizedIterable<? extends String> messages)", "diff": ["+      if (System.currentTimeMillis() - _lastPainted > 200) {", "+        // Ensure that paint events are handled periodically.  Without this check,", "+        // expensive or frequent logging can lead to all paint events being", "+        // coalesced (and placed on the *back* of the queue) before they have a chance", "+        // to run.", "+        SwingUtil.attemptClearEventQueue();", "+      }"]}], "num": 8843}