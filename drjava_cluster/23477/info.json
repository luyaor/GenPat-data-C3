{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e82259cac8c79798d27a1a572526084", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236e279a73be7bf1d5fcd8936ba2441b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testCompose()", "signatureAfterChange": "      public void testCompose()", "diff": ["-    Thunk<String> numToString1 = LambdaUtil.compose(LambdaUtil.valueThunk(23), Lambda.TO_STRING);", "+    Thunk<String> numToString1 = LambdaUtil.compose((Thunk<Integer>) LambdaUtil.valueLambda(23),", "+                                                    LambdaUtil.TO_STRING);", "-    Thunk<String> numToString2 = LambdaUtil.compose(LambdaUtil.valueThunk(22.5f), Lambda.TO_STRING);", "+    Thunk<String> numToString2 = LambdaUtil.compose((Thunk<Float>) LambdaUtil.valueLambda(22.5f),", "+                                                    LambdaUtil.TO_STRING);", "-    Lambda2<Number, Number, String> minusString = LambdaUtil.compose(minus, Lambda.TO_STRING);", "+    Lambda2<Number, Number, String> minusString = LambdaUtil.compose(minus, LambdaUtil.TO_STRING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ff0d86a999ea17a59807f016a72a578", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtilTest.java", "commitBeforeChange": "86cce18ff80f67b178e899650f588fd3636436b4", "commitAfterChange": "ee1b261a9154b045e862f789f0b5716c6b21f09c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testCompose()", "signatureAfterChange": "      public void testCompose()", "diff": ["-    Thunk<String> numToString1 = LambdaUtil.compose(LiteralThunk.make(23), Lambda.TO_STRING);", "+    Thunk<String> numToString1 = LambdaUtil.compose(LambdaUtil.valueThunk(23), Lambda.TO_STRING);", "-    Thunk<String> numToString2 = LambdaUtil.compose(LiteralThunk.make(22.5f), Lambda.TO_STRING);", "+    Thunk<String> numToString2 = LambdaUtil.compose(LambdaUtil.valueThunk(22.5f), Lambda.TO_STRING);"]}], "num": 23477}