{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ab36d05c26ee77114b12b114da32cfd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "855c61b043d4b365d86864803e60ea18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 638, "methodNumberAfterChange": 633, "signatureBeforeChange": "          public void fileSaved(final OpenDefinitionsDocument doc)", "signatureAfterChange": "          public void fileSaved(final OpenDefinitionsDocument doc)", "diff": ["-      Utilities.invokeLater(new Runnable() {", "-        public void run() {", "+//      Utilities.invokeLater(new Runnable() {", "+//        public void run() {", "-        }", "-      });", "+//        }", "+//      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6e9acab8b13fcf54140f0352fd3ebfe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "5523fc1c8420b6c9512186f7b1faddd6cd1960a0", "commitAfterChange": "0e447714063de4343f51d85c5c1b4138c2abd929", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void loadHistory(final FileOpenSelector selector) throws IOException", "signatureAfterChange": "   public void loadHistory(final FileOpenSelector selector) throws IOException", "diff": ["-    Utilities.invokeAndWait(new Runnable() {  // must run in event thread because caret is updated indivisibly", "-      public void run() {", "-        _document.clearCurrentInteraction();", "-        ", "-        // Insert into the document and interpret", "-        final StringBuilder buf = new StringBuilder();", "-        for (String hist: _histories) {", "-          ArrayList<String> interactions = _removeSeparators(hist);", "-          for (String curr: interactions) {", "-            int len = curr.length();", "-            buf.append(curr);", "-            if (len > 0 && curr.charAt(len - 1) != ';')  buf.append(';');", "-            buf.append(StringOps.EOL);", "-          }", "-        }", "-        String text = buf.toString().trim();", "-//          System.err.println(\"Histtory is: '\" + text + \"'\");", "-        append(text, InteractionsDocument.DEFAULT_STYLE);", "-        interpretCurrentInteraction();  // Must be executed in event thread", "+    _document.clearCurrentInteraction();", "+    ", "+    // Insert into the document and interpret", "+    final StringBuilder buf = new StringBuilder();", "+    for (String hist: _histories) {", "+      ArrayList<String> interactions = _removeSeparators(hist);", "+      for (String curr: interactions) {", "+        int len = curr.length();", "+        buf.append(curr);", "+        if (len > 0 && curr.charAt(len - 1) != ';')  buf.append(';');", "+        buf.append(StringOps.EOL);", "-    });", "-    // Wait is necessary because interpretation can only be applied after history is loaded", "+    }", "+    String text = buf.toString().trim();", "+//          System.err.println(\"Histtory is: '\" + text + \"'\");", "+    append(text, InteractionsDocument.DEFAULT_STYLE);", "+    interpretCurrentInteraction();  "]}], "num": 19083}