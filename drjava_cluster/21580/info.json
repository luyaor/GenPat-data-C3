{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d190b92c0b29f0713ea113fb0e3c6a4f", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1512426b9d3a30a82958dea3b8b93f66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 107, "signatureBeforeChange": "   final public Expression allocationExpression() throws ParseException", "signatureAfterChange": "   final public Expression allocationExpression() throws ParseException", "diff": ["-    List<IdentifierToken> ls;", "-    if (jj_2_28(2)) {", "+    if (jj_2_29(2)) {", "-        ls = name();", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case LESS:", "-          typeArgs = TypeArguments();", "-          break;", "-        default:", "-          jj_la1[104] = jj_gen;", "-          ;", "-        }", "-       IdentifierToken f  = ls.get(0);", "-       IdentifierToken l  = ls.get(ls.size()-1);", "-       if( typeArgs == null ){", "-         pt = new ReferenceType(ls,", "-                                filename,", "-                                f.beginLine(), f.beginColumn(),", "-                                l.endLine(),   l.endColumn());", "-       } else {", "-         pt = new GenericReferenceType(ls,", "-                                       filename,", "-                                       f.beginLine(), f.beginColumn(),", "-                                       l.endLine(), l.endColumn(),", "-                                       typeArgs);", "-       }", "+        pt = ReferenceTypeName();", "-            jj_la1[105] = jj_gen;", "+            jj_la1[104] = jj_gen;", "-          jj_la1[106] = jj_gen;", "+          jj_la1[105] = jj_gen;", "-        jj_la1[107] = jj_gen;", "+        jj_la1[106] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faccf7c64a954c4054fc92630155978a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": "   final public Allocation simpleAllocationExpression() throws ParseException", "signatureAfterChange": "   final public Allocation simpleAllocationExpression() throws ParseException", "diff": ["-    List<IdentifierToken> ls;", "-    List<Type> typeArgs = null;", "+    ReferenceType   rt;", "-    ls = name();", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case LESS:", "-      typeArgs = TypeArguments();", "-      break;", "-    default:", "-      jj_la1[99] = jj_gen;", "-      ;", "-    }", "+    rt = ReferenceTypeName();", "-      IdentifierToken f  = ls.get(0);", "-      IdentifierToken l  = ls.get(ls.size()-1);", "-      ReferenceType rt;", "-      if(typeArgs == null){", "-        rt = new ReferenceType(ls,", "-                               filename,", "-                               f.beginLine(), f.beginColumn(),", "-                               l.endLine(),   l.endColumn());", "-      } else {", "-        rt = new GenericReferenceType(ls,", "-                                      filename,", "-                                      f.beginLine(), f.beginColumn(),", "-                                      l.endLine(), l.endColumn(),", "-                                      typeArgs);", "-      }", "-"]}], "num": 21580}