{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffc62a2c76d8b6a3718c784c330fcf80", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2447268eac8e9fc482f9ea2c43ad7ea7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2bf596ca73cc5ea29b240cb67c5f8f67d644ea0a", "commitAfterChange": "df4d53f84d17cf3ec7ad461e0706b30f84e9362b", "methodNumberBeforeChange": 706, "methodNumberAfterChange": 706, "signatureBeforeChange": "      public void nonTestCase(boolean isTestAll)", "signatureAfterChange": "      public void nonTestCase(boolean isTestAll)", "diff": ["-      DrJavaErrorHandler.record(new UnexpectedException(\"NonTestCase should not be called!\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407cecceca8b282c7bf3cea21da99e45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     @Override public Type visit(SimpleFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(SimpleFieldAccess node)", "diff": ["-      catch (InvalidTargetException e) { throw new RuntimeException(\"context produced bad type\"); }"]}], "num": 21190}