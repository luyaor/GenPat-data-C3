{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27738dd5d8a70be57872a8fcc7f94e21", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cf4f805f6cb5098903400b66ef2910e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "f1f97edd57f558d6d34abcd1fe039afc22f7a202", "commitAfterChange": "fc098bf0e8c385557d32ed3c183745582612add6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void removeBreakpoint(Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void removeBreakpoint(Breakpoint breakpoint)", "diff": ["-  public void removeBreakpoint(Breakpoint breakpoint) {", "+  public synchronized void removeBreakpoint(Breakpoint breakpoint) {", "-    _breakpoints.remove(breakpoint.getRequest());", "+    if (breakpoint.getRequest() != null) {", "+      _breakpoints.remove(breakpoint.getRequest());", "+      _eventManager.deleteEventRequest(breakpoint.getRequest());", "+    }", "+    else {", "+      _pendingRequestManager.removePendingRequest(breakpoint);", "+    }", "-    _eventManager.deleteEventRequest(breakpoint.getRequest());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e0db230d23cb64c4c2fd350d367ea2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public synchronized void removeBreakpoint(Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)", "diff": ["-  public synchronized void removeBreakpoint(Breakpoint breakpoint) {", "+  public synchronized void removeBreakpoint(final Breakpoint breakpoint) {", "-    if (breakpoint.getRequest() != null) {", "-      _breakpoints.remove((BreakpointRequest)breakpoint.getRequest());", "+    _breakpoints.removeElement(breakpoint);", "+    ", "+    if ( breakpoint.getRequest() != null && _eventManager != null) {", "+    ", "+    notifyListeners(new EventNotifier() {", "+      public void notifyListener(DebugListener l) {", "+        l.breakpointRemoved(breakpoint);", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b113a4658eed8469fa4f43419efa238", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public synchronized void shutdown()", "signatureAfterChange": "      public synchronized void shutdown()", "diff": ["+      ", "+      removeAllBreakpoints();", "-      _vm.dispose();", "+        _vm.dispose();", "-        Enumeration<Breakpoint> breakpoints = _breakpoints.elements();", "-        while (breakpoints.hasMoreElements()) {", "-          Breakpoint bp = breakpoints.nextElement();", "-          bp.getDocument().removeBreakpoint(bp);", "-        }", "-        _breakpoints.clear();", "-        ", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(DebugListener l) {", "+            l.debuggerShutdown();", "+          }", "+        });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfdb783e0ff34c34edfe671cc68ea257", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "d41b5de79662496f09ec590840d7e35134702a41", "commitAfterChange": "fd26cc12b714205eb66ef1427d78a124c29d57fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void shutdown()", "signatureAfterChange": "      public void shutdown()", "diff": ["-        _vm.dispose();", "+      _vm.dispose();", "+        //VM was shutdown prematurely", "+        _eventManager = null;", "+        //remove all remaining breakpoints", "+        Enumeration<Breakpoint> breakpoints = _breakpoints.elements();", "+        ", "+        while (breakpoints.hasMoreElements()) {", "+          Breakpoint bp = breakpoints.nextElement();", "+          bp.getDocument().removeBreakpoint(bp);", "+        }", "+        _breakpoints.clear();", "+        "]}], "num": 2166}