{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4bb99516ede29b6209c6022c0e2604a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eacf4f691cd7b530b630e5e6157acbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "623dbae8bf369adeb4e3b2a78ab2b5a3f4b29e9b", "commitAfterChange": "d0501f87d274a5806c24d0d105495acde5ccbe13", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void processKeyEvent(KeyEvent e)", "signatureAfterChange": "   public void processKeyEvent(KeyEvent e)", "diff": ["-        // The following conditional fixes bug 676586 by ignoring typed events when the meta key is down", "-        if (((e.getModifiers() & InputEvent.META_MASK) != 0) && e.getKeyCode() == KeyEvent.VK_UNDEFINED) {", "+        // The following conditional fixes bug #676586 by ignoring typed events when the meta key is down", "+        // and fixes bug #905405 \"Undo Alt+Anything Causes Exception\" by ignoring typed events when", "+        // the alt key is down.", "+        if ((((e.getModifiers() & InputEvent.META_MASK) != 0) || ((e.getModifiers() & InputEvent.ALT_MASK) != 0)) ", "+              && e.getKeyCode() == KeyEvent.VK_UNDEFINED) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f2b5ad0166ff99fb38b1dd5dc72d902", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir, FileListVisitor flv) throws IOException", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir, DocFileListVisitor flv) throws IOException", "diff": ["-  private void evaluateExpression(SEList e, ProjectFileIR pfir, FileListVisitor flv) throws IOException {", "+  private void evaluateExpression(SEList e, ProjectFileIR pfir, DocFileListVisitor flv) throws IOException {", "-    Cons exp = (Cons)e; // If it's not empty, it's a cons", "+    Cons exp = (Cons) e; // If it's not empty, it's a cons", "-    if (name.compareToIgnoreCase(\"source\") == 0) {", "-      List<DocFile> dfList = exp.getRest().accept(new FileListVisitor(_srcFileBase));", "+    if ((name.compareToIgnoreCase(\"source\") == 0) || (name.compareToIgnoreCase(\"source-files\") == 0)) {", "+      List<DocFile> dfList = exp.getRest().accept(new DocFileListVisitor(_srcFileBase));"]}], "num": 23970}