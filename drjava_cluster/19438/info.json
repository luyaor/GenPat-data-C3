{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a156a6c05419d71a080e4c03b1e99cd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b49d444b58547af7b684f404535b53ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 38, "signatureBeforeChange": "          ProjectFileGroupingState(File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags)", "signatureAfterChange": "          ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags)", "diff": ["-    ProjectFileGroupingState(File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags) {", "+    ", "+    ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags) {", "+      _projRoot = pr;", "-      try {  for (File file : projectFiles) { _projFilePaths.add(file.getCanonicalPath()); } }", "-      catch(IOException e) { }", "+      if (projectFiles != null) try {  for (File file : projectFiles) { _projFilePaths.add(file.getCanonicalPath()); } }", "+      catch(IOException e) { /*do nothing */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dba8b02761be3f15483cd6b06979f209", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,                    Options opt)", "signatureAfterChange": "   public TreeClass(String fullName, DJClass declaring, Access.Module accessModule, Node ast,                    final TreeClassLoader loader, Options opt)", "diff": ["-  public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,", "-                   Options opt) {", "+  public TreeClass(String fullName, DJClass declaring, Access.Module accessModule, Node ast,", "+                   final TreeClassLoader loader, Options opt) {", "+    _accessModule = (accessModule == null) ? this : accessModule;"]}], "num": 19438}