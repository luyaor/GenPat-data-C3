{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad62d9ab2c84a3bd5a30bdc18bd64bc3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8558a6457f62393c638eb1ab1c5eee47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 396, "methodNumberAfterChange": 396, "signatureBeforeChange": "\r \r   public void forNormalTryCatchStatement(NormalTryCatchStatement that)", "signatureAfterChange": "    public void forNormalTryCatchStatement(NormalTryCatchStatement that)", "diff": ["-\r", "-  public void forNormalTryCatchStatement(NormalTryCatchStatement that) {\r", "-    forNormalTryCatchStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTryBlock().visit(this);\r", "-    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);\r", "-    forNormalTryCatchStatementOnly(that);\r", "-  }\r", "+", "+  public void forNormalTryCatchStatement(NormalTryCatchStatement that) {", "+    forNormalTryCatchStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTryBlock().visit(this);", "+    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);", "+    forNormalTryCatchStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df808e2a7782b23f56a448b8204950a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 381, "signatureBeforeChange": "\r \r   public void forSwitchStatement(SwitchStatement that)", "signatureAfterChange": "    public void forSwitchStatement(SwitchStatement that)", "diff": ["-\r", "-  public void forSwitchStatement(SwitchStatement that) {\r", "-    forSwitchStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTest().visit(this);\r", "-    for (int i = 0; i < that.getCases().length; i++) that.getCases()[i].visit(this);\r", "-    forSwitchStatementOnly(that);\r", "-  }\r", "+", "+  public void forSwitchStatement(SwitchStatement that) {", "+    forSwitchStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTest().visit(this);", "+    for (int i = 0; i < that.getCases().length; i++) that.getCases()[i].visit(this);", "+    forSwitchStatementOnly(that);", "+  }"]}], "num": 27}