{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4a6e757092054cf1f3409313f9c443a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "678b691b6d201b44f60cd8c08b6ccbf9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "041023bab0887f54ed814ccd2037595271522c8d", "commitAfterChange": "67e38f766289e5330a2b4079022fb56c6e08bd49", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testAccessStaticFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessStaticFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-// TEMPORARILY commented out because this test is failing", "-//    interpret(\"twoDeepFoo = 100;\");", "-//    assertEquals(\"should have assigned field of static outer class\",", "-//                 \"100\",", "-//                 interpret(\"twoDeepFoo\"));", "-//    assertEquals(\"should have assigned the field of static outer class\",", "-//                 \"100\",", "-//                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "-//    assertEquals(\"should have assigned the field of static outer class\",", "-//                 \"100\",", "-//                 interpret(\"monkey.MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "-//", "-//    interpret(\"int twoDeepFoo = -10;\");", "-//    assertEquals(\"Should have successfully shadowed field of static outer class\",", "-//                 \"-10\",", "-//                 interpret(\"twoDeepFoo\"));", "-//    assertEquals(\"should have assigned the field of static outer class\",", "-//                 \"100\",", "-//                 interpret(\"MonkeyTwoDeep.twoDeepFoo\"));", "-//    assertEquals(\"should have assigned the field of static outer class\",", "-//                 \"100\",", "-//                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "-//", "-//    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "-//                 \"6\",", "-//                 interpret(\"foo\"));", "-//    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "-//                 \"6\",", "-//                 interpret(\"MonkeyStaticStuff.foo\"));", "-//", "-//    interpret(\"foo = 987;\");", "-//    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "-//                 \"987\",", "-//                 interpret(\"foo\"));", "-//    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "-//                 \"987\",", "-//                 interpret(\"MonkeyStaticStuff.foo\"));", "-//", "-//    interpret(\"int foo = 56;\");", "-//    assertEquals(\"Should have defined a new variable\",", "-//                 \"56\",", "-//                 interpret(\"foo\"));", "-//    assertEquals(\"Should have shadowed the value of a static field of a non-static outer class\",", "-//                 \"987\",", "-//                 interpret(\"MonkeyStaticStuff.foo\"));", "-//", "-//    assertEquals(\"should be able to call method of outer class\",", "-//                 \"-2\",", "-//                 interpret(\"getNegativeTwo()\"));", "-//    assertEquals(\"should be able to call method of outer class\",", "-//                 \"-2\",", "-//                 interpret(\"MonkeyTwoDeep.getNegativeTwo()\"));", "-//    assertEquals(\"should be able to call method of outer class\",", "-//                 \"-2\",", "-//                 interpret(\"MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));", "-//    assertEquals(\"should be able to call method of outer class\",", "-//                 \"-2\",", "-//                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));", "+    interpret(\"twoDeepFoo = 100;\");", "+    assertEquals(\"should have assigned field of static outer class\",", "+                 \"100\",", "+                 interpret(\"twoDeepFoo\"));", "+    assertEquals(\"should have assigned the field of static outer class\",", "+                 \"100\",", "+                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "+    assertEquals(\"should have assigned the field of static outer class\",", "+                 \"100\",", "+                 interpret(\"monkey.MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "+", "+    interpret(\"int twoDeepFoo = -10;\");", "+    assertEquals(\"Should have successfully shadowed field of static outer class\",", "+                 \"-10\",", "+                 interpret(\"twoDeepFoo\"));", "+    assertEquals(\"should have assigned the field of static outer class\",", "+                 \"100\",", "+                 interpret(\"MonkeyTwoDeep.twoDeepFoo\"));", "+    assertEquals(\"should have assigned the field of static outer class\",", "+                 \"100\",", "+                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "+", "+    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "+                 \"6\",", "+                 interpret(\"foo\"));", "+    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "+                 \"6\",", "+                 interpret(\"MonkeyStaticStuff.foo\"));", "+", "+    interpret(\"foo = 987;\");", "+    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "+                 \"987\",", "+                 interpret(\"foo\"));", "+    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "+                 \"987\",", "+                 interpret(\"MonkeyStaticStuff.foo\"));", "+", "+    interpret(\"int foo = 56;\");", "+    assertEquals(\"Should have defined a new variable\",", "+                 \"56\",", "+                 interpret(\"foo\"));", "+    assertEquals(\"Should have shadowed the value of a static field of a non-static outer class\",", "+                 \"987\",", "+                 interpret(\"MonkeyStaticStuff.foo\"));", "+", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"getNegativeTwo()\"));", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"MonkeyTwoDeep.getNegativeTwo()\"));", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912780825c8700e193e80ecfdfc8c291", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "a40073610630d4f516a406059faeaca761da62c1", "commitAfterChange": "cd10122759eccf6c810135d6cad33cd763492317", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testAccessStaticFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessStaticFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-    interpret(\"twoDeepFoo = 100;\");", "-    assertEquals(\"should have assigned field of static outer class\",", "-                 \"100\",", "-                 interpret(\"twoDeepFoo\"));", "-    assertEquals(\"should have assigned the field of static outer class\",", "-                 \"100\",", "-                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "-    assertEquals(\"should have assigned the field of static outer class\",", "-                 \"100\",", "-                 interpret(\"monkey.MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "-", "-    interpret(\"int twoDeepFoo = -10;\");", "-    assertEquals(\"Should have successfully shadowed field of static outer class\",", "-                 \"-10\",", "-                 interpret(\"twoDeepFoo\"));", "-    assertEquals(\"should have assigned the field of static outer class\",", "-                 \"100\",", "-                 interpret(\"MonkeyTwoDeep.twoDeepFoo\"));", "-    assertEquals(\"should have assigned the field of static outer class\",", "-                 \"100\",", "-                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "-", "-    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "-                 \"6\",", "-                 interpret(\"foo\"));", "-    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "-                 \"6\",", "-                 interpret(\"MonkeyStaticStuff.foo\"));", "-", "-    interpret(\"foo = 987;\");", "-    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "-                 \"987\",", "-                 interpret(\"foo\"));", "-    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "-                 \"987\",", "-                 interpret(\"MonkeyStaticStuff.foo\"));", "-", "-    interpret(\"int foo = 56;\");", "-    assertEquals(\"Should have defined a new variable\",", "-                 \"56\",", "-                 interpret(\"foo\"));", "-    assertEquals(\"Should have shadowed the value of a static field of a non-static outer class\",", "-                 \"987\",", "-                 interpret(\"MonkeyStaticStuff.foo\"));", "-", "-    assertEquals(\"should be able to call method of outer class\",", "-                 \"-2\",", "-                 interpret(\"getNegativeTwo()\"));", "-    assertEquals(\"should be able to call method of outer class\",", "-                 \"-2\",", "-                 interpret(\"MonkeyTwoDeep.getNegativeTwo()\"));", "-    assertEquals(\"should be able to call method of outer class\",", "-                 \"-2\",", "-                 interpret(\"MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));", "-    assertEquals(\"should be able to call method of outer class\",", "-                 \"-2\",", "-                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));", "+// TEMPORARILY commented out because this test is failing", "+//    interpret(\"twoDeepFoo = 100;\");", "+//    assertEquals(\"should have assigned field of static outer class\",", "+//                 \"100\",", "+//                 interpret(\"twoDeepFoo\"));", "+//    assertEquals(\"should have assigned the field of static outer class\",", "+//                 \"100\",", "+//                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "+//    assertEquals(\"should have assigned the field of static outer class\",", "+//                 \"100\",", "+//                 interpret(\"monkey.MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "+//", "+//    interpret(\"int twoDeepFoo = -10;\");", "+//    assertEquals(\"Should have successfully shadowed field of static outer class\",", "+//                 \"-10\",", "+//                 interpret(\"twoDeepFoo\"));", "+//    assertEquals(\"should have assigned the field of static outer class\",", "+//                 \"100\",", "+//                 interpret(\"MonkeyTwoDeep.twoDeepFoo\"));", "+//    assertEquals(\"should have assigned the field of static outer class\",", "+//                 \"100\",", "+//                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "+//", "+//    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "+//                 \"6\",", "+//                 interpret(\"foo\"));", "+//    assertEquals(\"Should be able to access a static field of a non-static outer class\",", "+//                 \"6\",", "+//                 interpret(\"MonkeyStaticStuff.foo\"));", "+//", "+//    interpret(\"foo = 987;\");", "+//    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "+//                 \"987\",", "+//                 interpret(\"foo\"));", "+//    assertEquals(\"Should have changed the value of a static field of a non-static outer class\",", "+//                 \"987\",", "+//                 interpret(\"MonkeyStaticStuff.foo\"));", "+//", "+//    interpret(\"int foo = 56;\");", "+//    assertEquals(\"Should have defined a new variable\",", "+//                 \"56\",", "+//                 interpret(\"foo\"));", "+//    assertEquals(\"Should have shadowed the value of a static field of a non-static outer class\",", "+//                 \"987\",", "+//                 interpret(\"MonkeyStaticStuff.foo\"));", "+//", "+//    assertEquals(\"should be able to call method of outer class\",", "+//                 \"-2\",", "+//                 interpret(\"getNegativeTwo()\"));", "+//    assertEquals(\"should be able to call method of outer class\",", "+//                 \"-2\",", "+//                 interpret(\"MonkeyTwoDeep.getNegativeTwo()\"));", "+//    assertEquals(\"should be able to call method of outer class\",", "+//                 \"-2\",", "+//                 interpret(\"MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));", "+//    assertEquals(\"should be able to call method of outer class\",", "+//                 \"-2\",", "+//                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));"]}], "num": 9802}