{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86fd80a2b41b556382f5a9642af6caf4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "669dc9f0fe83e00450a6f4fc2ab9a444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "ff9333e71e149a259aa78828cab4c9a697c57c55", "commitAfterChange": "9063c30c220a374fd05cad2179b7b27d5702591e", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 147, "signatureBeforeChange": "   public static <T1, T2, T3, T4, R> Lambda4<T1, T2, T3, T4, R>      asLambda(final Command4<? super T1, ? super T2, ? super T3, ? super T4> c, final R result)", "signatureAfterChange": "   public static <T1, T2, T3, T4, R> Lambda4<T1, T2, T3, T4, R>      asLambda(final Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r, final R result)", "diff": ["-  /** @return  A lambda that executes the given command, then returns {@code result} */", "+  /** @return  A lambda that executes the given runnable, then returns {@code result} */", "-    asLambda(final Command4<? super T1, ? super T2, ? super T3, ? super T4> c, final R result) {", "+    asLambda(final Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r, final R result) {", "-      public R value(T1 a1, T2 a2, T3 a3, T4 a4) { c.run(a1, a2, a3, a4); return result; }", "+      public R value(T1 a1, T2 a2, T3 a3, T4 a4) { r.run(a1, a2, a3, a4); return result; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a306e626b47526136a530b91fff13883", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "ff9333e71e149a259aa78828cab4c9a697c57c55", "commitAfterChange": "9063c30c220a374fd05cad2179b7b27d5702591e", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 145, "signatureBeforeChange": "   public static <T1, T2, T3, R> Lambda3<T1, T2, T3, R>      asLambda(final Command3<? super T1, ? super T2, ? super T3> c, final R result)", "signatureAfterChange": "   public static <T1, T2, T3, R> Lambda3<T1, T2, T3, R>      asLambda(final Runnable3<? super T1, ? super T2, ? super T3> r, final R result)", "diff": ["-  /** @return  A lambda that executes the given command, then returns {@code result} */", "+  /** @return  A lambda that executes the given runnable, then returns {@code result} */", "-    asLambda(final Command3<? super T1, ? super T2, ? super T3> c, final R result) {", "+    asLambda(final Runnable3<? super T1, ? super T2, ? super T3> r, final R result) {", "-      public R value(T1 arg1, T2 arg2, T3 arg3) { c.run(arg1, arg2, arg3); return result; }", "+      public R value(T1 arg1, T2 arg2, T3 arg3) { r.run(arg1, arg2, arg3); return result; }"]}], "num": 23144}