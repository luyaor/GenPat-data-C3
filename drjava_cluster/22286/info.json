{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9e538d0ef4dc15535a09c3ff39f94d2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47df0516cd50241fca7bb7e77f762463", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "66067a3f1d3a007b2ddad388dba56bb3c6f9df80", "commitAfterChange": "81d6db8320cf4667127c44e5b1de134b58b6f3dc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Object visit(SwitchStatement node)", "signatureAfterChange": "   public Object visit(SwitchStatement node)", "diff": ["-      if (o instanceof Enum){", "-        sel = (Enum) o;", "+      Class<?> EnumClass = (TigerUtilities.isTigerEnabled() ? Class.forName(\"java.lang.Enum\") : null);", "+      if (TigerUtilities.isTigerEnabled() && o.getClass().getSuperclass() == EnumClass){", "+        sel = /*(Enum)*/ o;", "-          if(TigerUtilities.isTigerEnabled() && o instanceof Enum ){", "-            bind = (Enum) o;", "+          if(TigerUtilities.isTigerEnabled() && o.getClass().getSuperclass() == EnumClass){", "+            bind = /*(Enum)*/ o;", "-            (TigerUtilities.isTigerEnabled() && (sel instanceof Enum) && ((Enum)sel).equals((Enum)bind))", "+            (TigerUtilities.isTigerEnabled() && (sel.getClass().getSuperclass() == EnumClass) && (/*(Enum)*/sel).equals(/*(Enum)*/bind))", "+    } catch(ClassNotFoundException e){", "+      throw new ExecutionError(\"Tiger is enabled, but cannot find class java.lang.Enum! Please contact the DynamicJava/DrJava team (javaplt@cs.rice.edu).\");", "+    } catch(NoClassDefFoundError e){", "+      throw new ExecutionError(\"Tiger is enabled, but cannot find class java.lang.Enum! Please contact the DynamicJava/DrJava team (javaplt@cs.rice.edu).\");", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a499be068349af628f0bb600671536e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "8e569af46a88cae172ec5b0bba88bf6a2db601b4", "commitAfterChange": "0e2962e67fbd4bb0610b6df816f609e60a33a28f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-    PropertyMaps.TEMPLATE.setProperty(\"Config\", new DrJavaProperty(\"config.master.jvm.args.combined\",", "-                                                                   \"This property contains all the JVM arguments passed \"+", "-                                                                   \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "-                                                                   \"programs in. The arguments from the \\\"JVM Args for \"+", "-                                                                   \"Main JVM\\\" and the special -X arguments from \\\"Maximum \"+", "-                                                                   \"Heap Size for Main JVM\\\" are combined.\") {", "+    PropertyMaps.TEMPLATE.setProperty(\"Config\", new EagerProperty(\"config.master.jvm.args.combined\",", "+                                                                  \"This property contains all the JVM arguments passed \"+", "+                                                                  \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "+                                                                  \"programs in. The arguments from the \\\"JVM Args for \"+", "+                                                                  \"Main JVM\\\" and the special -X arguments from \\\"Maximum \"+", "+                                                                  \"Heap Size for Main JVM\\\" are combined.\") {", "-        StringBuilder sb = new StringBuilder(DrJava.getConfig().getSetting(MASTER_JVM_XMX));", "-        if (sb.length()>0) { sb.append(\" \"); }", "+        StringBuilder sb = new StringBuilder();", "+        if (!DrJava.getConfig().getSetting(MASTER_JVM_XMX).equals(\"default\") &&", "+            !DrJava.getConfig().getSetting(MASTER_JVM_XMX).equals(\"\")) {", "+          sb.append(\"-Xmx\");", "+          sb.append(DrJava.getConfig().getSetting(MASTER_JVM_XMX));", "+          sb.append(\"M \");", "+        }", "-        _value = \"-Xmx\"+sb.toString().trim();", "+        _value = sb.toString().trim();", "-    PropertyMaps.TEMPLATE.setProperty(\"Config\", new DrJavaProperty(\"config.slave.jvm.args.combined\",", "-                                                                   \"This property contains all the JVM arguments passed \"+", "-                                                                   \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "-                                                                   \"programs in. The arguments from the \\\"JVM Args for \"+", "-                                                                   \"Slave JVM\\\" and the special -X arguments from \\\"Maximum \"+", "-                                                                   \"Heap Size for Main JVM\\\" are combined.\") {", "+    PropertyMaps.TEMPLATE.setProperty(\"Config\", new EagerProperty(\"config.slave.jvm.args.combined\",", "+                                                                  \"This property contains all the JVM arguments passed \"+", "+                                                                  \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "+                                                                  \"programs in. The arguments from the \\\"JVM Args for \"+", "+                                                                  \"Slave JVM\\\" and the special -X arguments from \\\"Maximum \"+", "+                                                                  \"Heap Size for Main JVM\\\" are combined.\") {", "-        StringBuilder sb = new StringBuilder(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "-        if (sb.length()>0) { sb.append(\" \"); }", "+        StringBuilder sb = new StringBuilder();", "+        if (!DrJava.getConfig().getSetting(SLAVE_JVM_XMX).equals(\"default\") &&", "+            !DrJava.getConfig().getSetting(SLAVE_JVM_XMX).equals(\"\")) {", "+          sb.append(\"-Xmx\");", "+          sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "+          sb.append(\"M \");", "+        }", "-        _value = \"-Xmx\"+sb.toString().trim();", "+        _value = sb.toString().trim();"]}], "num": 22286}