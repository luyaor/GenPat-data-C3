{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cfebcb0218463c9f1161770d6538848", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e0143aa52dc5222da5caa20805542a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "5293cb4cfbc2f45d6061ba4101ad60348aa251ed", "commitAfterChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public String getVariableToString(String var)", "diff": ["-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try {", "-      return slave.interpret(var).apply(new InterpretResult.Visitor<String>() {", "-        public String forNoValue() { return \"\"; }", "-        public String forStringValue(String s) { return '\"' + s + '\"'; }", "-        public String forCharValue(Character c) { return \"'\" + c + \"'\"; }", "-        public String forNumberValue(Number n) { return n.toString(); }", "-        public String forBooleanValue(Boolean b) { return b.toString(); }", "-        public String forObjectValue(String valString) { return valString; }", "-        public String forException(String msg) { return \"\"; }", "-        public String forUnexpectedException(Throwable t) { throw new UnexpectedException(t); }", "-        public String forBusy() { return \"\"; }", "-      });", "-    }", "-    catch (RemoteException re) {", "-      _threwException(re);", "-      return null;", "-    }", "+    InterpreterJVMRemoteI interpreter = ensureInterpreterConnected();", "+    try { return interpreter.getVariableToString(var); }", "+    catch (RemoteException e) { _threwException(e); return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72abe736d1ed651b4911bcafa8fdd15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "c0097a428fe48a719763cd02e3388b731264c468", "commitAfterChange": "bd115d85e858b9ca09ebbbacbcf2bcab93ec2746", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-    ", "-    PropertyMaps.TEMPLATE.setProperty(\"Misc\", new DrJavaProperty(\"not\",", "-                                                                 \"If the value is true, returns false; if the \"+", "-                                                                 \"value is false, returns true.\\n\"+", "-                                                                 \"Required attribute:\\n\"+", "-                                                                 \"\\tvalue=\\\"<string evaluating to true of false>\\\"\") {", "-      public void update(PropertyMaps pm) {", "-        if (_attributes.get(\"value\")==null) {", "-          _value = \"(not Error...)\";", "-          return;", "-        }", "-        if (_attributes.get(\"value\").toLowerCase().equals(\"true\")) {", "-          _value = \"false\";", "-        }", "-        else if (_attributes.get(\"value\").toLowerCase().equals(\"false\")) {", "-          _value = \"true\";", "-        }", "-        else {", "-          _value = \"(not Error...)\";", "-          return;", "-        }", "-      }", "-      public String getCurrent(PropertyMaps pm) {", "-        invalidate();", "-        return super.getCurrent(pm);", "-      }", "-      public String getLazy(PropertyMaps pm) { return getCurrent(pm); }", "-      public void resetAttributes() {", "-        _attributes.clear();", "-        _attributes.put(\"value\", null);", "-      }", "-    });", "-    ", "+", "-                                                        \"\\tlist=\\\"<string>\\\"\",", "+                                                        \"\\top=\\\"<string>\\\"\",", "-                                                        \"list\",", "-                                                        null,", "-        return ((double)s.split(TextUtil.regexEscape(sep)).length);", "+        return ((double)s.split(TextUtil.regexEscape(sep),-1).length);", "-        String[] els = s.split(TextUtil.regexEscape(sep));", "+        String[] els = s.split(TextUtil.regexEscape(sep),-1);", "-        for(String el: s.split(TextUtil.regexEscape(oldSep))) {", "+        for(String el: s.split(TextUtil.regexEscape(oldSep),-1)) {", "-          String[] els = list.split(TextUtil.regexEscape(sep));", "+          String[] els = list.split(TextUtil.regexEscape(sep),-1);", "-    String[] cps = System.getProperty(\"java.class.path\").split(TextUtil.regexEscape(File.pathSeparator));", "+    String[] cps = System.getProperty(\"java.class.path\").split(TextUtil.regexEscape(File.pathSeparator),-1);"]}], "num": 6156}