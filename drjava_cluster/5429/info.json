{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65c60626ba9dabaae268543ba8f91226", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62dd390f5cc3f9c932a1548e973c9899", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "commitAfterChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected R getSelectedRegion()", "signatureAfterChange": "   protected ArrayList<R> getSelectedRegions()", "diff": ["-  protected R getSelectedRegion() {", "-    TreePath path = _regTree.getSelectionPath();", "-    if (path == null || path.getPathCount() != 3) {", "-      return null;", "+  protected ArrayList<R> getSelectedRegions() {", "+    ArrayList<R> regs = new ArrayList<R>();", "+    TreePath[] paths = _regTree.getSelectionPaths();", "+    if (paths!=null) {", "+      for (TreePath path: paths) {", "+        if (path != null && path.getPathCount() == 3) {", "+          DefaultMutableTreeNode lineNode = (DefaultMutableTreeNode)path.getLastPathComponent();", "+          @SuppressWarnings(\"unchecked\") R r = ((RegionTreeUserObj<R>) lineNode.getUserObject()).region();", "+          regs.add(r);", "+        }", "+      }", "-    else {", "-      DefaultMutableTreeNode lineNode = (DefaultMutableTreeNode)path.getLastPathComponent();", "-      @SuppressWarnings(\"unchecked\") R r = ((RegionTreeUserObj<R>) lineNode.getUserObject()).region();", "-      return r;", "-    }", "+    return regs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e21faf68d5ece1612bccc7d529b3b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void addTopLevelGroupToRoot(InnerNode parent)", "signatureAfterChange": "      private void addTopLevelGroupToRoot(InnerNode parent)", "diff": ["-  private void addTopLevelGroupToRoot(InnerNode parent){", "-", "-    int indexInRoots = _roots.indexOf(parent);", "-    int num = _model.getChildCount(_model.getRoot());", "-    int i;", "-    for (i = 0; i < num; i++) {", "-      TreeNode n = (TreeNode)_model.getChild(_model.getRoot(), i);", "-      if(_roots.indexOf(n) > indexInRoots) break;", "+  private void addTopLevelGroupToRoot(InnerNode parent) {", "+    ", "+    synchronized(_model) {", "+      ", "+      int indexInRoots = _roots.indexOf(parent);", "+      int num = _model.getChildCount(_model.getRoot());", "+      int i;", "+      for (i = 0; i < num; i++) {", "+        TreeNode n = (TreeNode)_model.getChild(_model.getRoot(), i);", "+        if(_roots.indexOf(n) > indexInRoots) break;", "+      }", "+      _model.insertNodeInto(parent, (MutableTreeNode)_model.getRoot(), i);", "-    _model.insertNodeInto(parent, (MutableTreeNode)_model.getRoot(), i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7673e10cf41460666517d95242e646e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public synchronized boolean isSelectedInGroup(INavigatorItem i)", "signatureAfterChange": "   public boolean isSelectedInGroup(INavigatorItem i)", "diff": ["-   */", "-  public synchronized boolean isSelectedInGroup(INavigatorItem i){", "-    TreePath p = getSelectionPath();", "-    TreeNode n = (TreeNode) p.getLastPathComponent();", "-    TreeNode l = _doc2node.get(i);", "-    ", "-    if (n == _model.getRoot()) return true;", "-    ", "-    while (l.getParent() != _model.getRoot()) {", "-      if(l.getParent() == n) return true;", "-      l = l.getParent();", "+  /** @return true if the INavigatorItem is in the selected group. */", "+  public boolean isSelectedInGroup(INavigatorItem i) {", "+    synchronized (_model) {", "+      TreePath p = getSelectionPath();", "+      TreeNode n = (TreeNode) p.getLastPathComponent();", "+      TreeNode l = _doc2node.get(i);", "+      ", "+      if (n == _model.getRoot()) return true;", "+      ", "+      while (l.getParent() != _model.getRoot()) {", "+        if(l.getParent() == n) return true;", "+        l = l.getParent();", "+      }", "+      ", "+      return false;", "-    ", "-    return false;"]}], "num": 5429}