{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1cd316cb22195f600a0c9a6783e1c7b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb9553f04356de0a6e131a47708611d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "3a27fdcf5b864c5b5279a3c8d8f9dbb297967a71", "commitAfterChange": "69b3a1d533ce4a667d07ab3342b6d3841c2073dd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener() {", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false) {", "-    synchronized(listener) {", "+    //synchronized(listener) {", "-      listener.wait();", "-    }", "+      //listener.wait();", "+    //}", "+    ", "+    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9de7fd4b68a61b883aeb17885a3110e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "3a27fdcf5b864c5b5279a3c8d8f9dbb297967a71", "commitAfterChange": "69b3a1d533ce4a667d07ab3342b6d3841c2073dd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener() {", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false) {", "-    synchronized(listener) {", "+    //synchronized(listener) {", "-      listener.wait();", "-    }", "+      //listener.wait();", "+    //}", "+    ", "+    _model.setResetAfterCompile(true);"]}], "num": 13291}