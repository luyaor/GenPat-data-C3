{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d23058e710d8c44213ad8a6801fc76e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32f3ae518e76193c9779c992ee854a21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "2e0841eedc488bc59bd976576cad4ea91d3f46bd", "commitAfterChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static String replaceVariables(String str, Map<String,Properties> props)", "signatureAfterChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "diff": ["-  public static String replaceVariables(String str, Map<String,Properties> props) {", "+  public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter) {", "-      else if (str.charAt(pos)=='$') {", "+      else if ((str.charAt(pos)=='$')) {", "-        for(Map.Entry<String, Properties> table: props.entrySet()) {", "-          Enumeration<?> e = table.getValue().propertyNames();", "-          while(e.hasMoreElements()) {", "-            String key = (String)e.nextElement();", "-            int endPos = pos + key.length() + 3;", "-            if (str.substring(pos, Math.min(str.length(), endPos)).equals(\"${\"+key+\"}\")) {", "-              // found property name", "-              // replace \"${property.name}\" with the value of the property, e.g. /home/user", "-              String value = table.getValue().getProperty(key);", "-              str = str.substring(0, pos) + value + str.substring(endPos);", "-              // advance to the last character of the value", "-              pos = pos + value.length() - 1;", "-              break;", "+        if ((pos<str.length()-1) && (str.charAt(pos+1)=='{')) {", "+          int nextClose = str.indexOf('}',pos+1);", "+          if (nextClose>=0) {", "+            String key = str.substring(pos+2, nextClose);", "+            // LOG.log(\"\\tkey = '\"+key+\"'\");", "+            for(String category: props.getCategories()) {", "+              // LOG.log(\"\\ttrying category '\"+category+\"'\");", "+              DrJavaProperty p = props.getProperty(category, key);", "+              if (p!=null) {", "+                // found property name", "+                // replace \"${property.name}\" with the value of the property, e.g. /home/user", "+                String s = getter.apply(p);", "+                str = str.substring(0, pos) + s + str.substring(nextClose+1);", "+                // advance to the last character of the value", "+                pos = nextClose;", "+                break;", "+              }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e5ee8d387e08e85fb4b7c9cba46b40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "576713321d388945af9795f8f5bacbafa14cd87f", "commitAfterChange": "b814c7e145dc4411f1437e59c56bc53ee860800f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-      else if ((arg.length() > 1) && (arg.substring(0,2).equals(\"-X\"))) {", "-        if (arg.substring(0,4).equals(\"-Xmx\")) heapSizeGiven = true;", "-        _jvmArgs.add(arg); ", "-      }", "-      ", "-      else if ((arg.length() > 1) && (arg.substring(0,2).equals(\"-D\"))) {", "+      else if (arg.startsWith(\"-X\") || arg.startsWith(\"-D\")) {", "+        if (arg.startsWith(\"-Xmx\")) { heapSizeGiven = true; }", "-    String jvmArgString = getConfig().getSetting(MASTER_JVM_ARGS);", "-    List<String> jvmArgs = ArgumentTokenizer.tokenize(jvmArgString);", "-    if (jvmArgs != null && jvmArgs.size() != 0) _jvmArgs.addAll(jvmArgs);", "+    List<String> configArgs = ArgumentTokenizer.tokenize(getConfig().getSetting(MASTER_JVM_ARGS));", "+    for (String arg : configArgs) {", "+      if (arg.startsWith(\"-Xmx\")) { heapSizeGiven = true; }", "+      _jvmArgs.add(arg);", "+    }", "+", "-      _jvmArgs.add(\"-Dcom.apple.macos.useScreenMenuBar=true\");", "-      _jvmArgs.add(\"-Xdock:name=DrJava\");", "-      _jvmArgs.add(\"-Xdock:icon=/Applications/DrJava.app/Contents/Resources/DrJava.icns\");", "+      String iconLoc = System.getProperty(\"edu.rice.cs.drjava.icon\");", "+      if (iconLoc != null) { // we are running inside the Mac app wrapper", "+        _jvmArgs.add(\"-Xdock:name=DrJava\");", "+        _jvmArgs.add(\"-Xdock:icon=\" + iconLoc);", "+      }", "-    if (! heapSizeGiven && jvmArgString.indexOf(\"-Xmx\")<0) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);", "+    if (!heapSizeGiven) { _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG); }"]}], "num": 11592}