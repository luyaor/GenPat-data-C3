{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdc40faca06c371c30202890d527a71d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "525cbef59bccf4f0c0ea0a70e8db23ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void testInsertNewlineEndQuote()", "signatureAfterChange": "  \tpublic void testInsertNewlineEndQuote()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 3;", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(3);", "-\t\t\tassertTrue(\"#0.1\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#0.2\", \"\\n\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#0.3\", 2, model1._cursor.current().getSize());", "+\t\t\tassertTrue(\"#0.1\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#0.2\", \"\\n\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#0.3\", 2, model1.getCursor().current().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertTrue(\"#1.1\", model1._cursor.prevItem().isGap());", "-\t\t\tassertEquals(\"#1.2\", \"\\n\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.3\", 3, model1._cursor.prevItem().getSize());", "+\t\t\tassertTrue(\"#1.1\", model1.getCursor().prevItem().isGap());", "+\t\t\tassertEquals(\"#1.2\", \"\\n\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.3\", 3, model1.getCursor().prevItem().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e60c363a5eba8f6a693aa4e3993b1413", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void testInsertNewlineEndLineComment()", "signatureAfterChange": "  \tpublic void testInsertNewlineEndLineComment()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 3;", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(3);", "-\t\t\tassertTrue(\"#0.1\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#0.2\", \"\\n\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#0.3\", 2, model1._cursor.current().getSize());", "+\t\t\tassertTrue(\"#0.1\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#0.2\", \"\\n\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#0.3\", 2, model1.getCursor().current().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertTrue(\"#1.1\", model1._cursor.prevItem().isGap());", "-\t\t\tassertEquals(\"#1.2\", \"\\n\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.3\", 3, model1._cursor.prevItem().getSize());", "+\t\t\tassertTrue(\"#1.1\", model1.getCursor().prevItem().isGap());", "+\t\t\tassertEquals(\"#1.2\", \"\\n\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.3\", 3, model1.getCursor().prevItem().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83bf3433506e6927c786fe6216b1967", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void testInsertNewlineEndQuote()", "signatureAfterChange": "  \tpublic void testInsertNewlineEndQuote()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 3;", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(3);", "-\t\t\tassertTrue(\"#0.1\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#0.2\", \"\\n\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#0.3\", 2, model1._cursor.current().getSize());", "+\t\t\tassertTrue(\"#0.1\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#0.2\", \"\\n\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#0.3\", 2, model1.getCursor().current().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertTrue(\"#1.1\", model1._cursor.prevItem().isGap());", "-\t\t\tassertEquals(\"#1.2\", \"\\n\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.3\", 3, model1._cursor.prevItem().getSize());", "+\t\t\tassertTrue(\"#1.1\", model1.getCursor().prevItem().isGap());", "+\t\t\tassertEquals(\"#1.2\", \"\\n\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.3\", 3, model1.getCursor().prevItem().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e85c26249fab04cb44469f80d10fe4aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void testInsertNewlineEndLineComment()", "signatureAfterChange": "  \tpublic void testInsertNewlineEndLineComment()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 3;", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(3);", "-\t\t\tassertTrue(\"#0.1\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#0.2\", \"\\n\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#0.3\", 2, model1._cursor.current().getSize());", "+\t\t\tassertTrue(\"#0.1\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#0.2\", \"\\n\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#0.3\", 2, model1.getCursor().current().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertTrue(\"#1.1\", model1._cursor.prevItem().isGap());", "-\t\t\tassertEquals(\"#1.2\", \"\\n\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.3\", 3, model1._cursor.prevItem().getSize());", "+\t\t\tassertTrue(\"#1.1\", model1.getCursor().prevItem().isGap());", "+\t\t\tassertEquals(\"#1.2\", \"\\n\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.3\", 3, model1.getCursor().prevItem().getSize());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());"]}], "num": 18680}