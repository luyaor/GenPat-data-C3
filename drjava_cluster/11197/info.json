{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10fb0c38e059424490f9143623591bdc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4346318967782c48fe973a27b289f821", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/platform/DefaultPlatform.java", "commitBeforeChange": "e00a80132d9c599630e60c288ab824f99427e68b", "commitAfterChange": "17590567cb9f06269b33249dad955c39164a9028", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public boolean openURL(URL address)", "signatureAfterChange": "   public boolean openURL(URL address)", "diff": ["-    String args = config.getSetting(OptionConstants.BROWSER_STRING);", "+    String command = config.getSetting(OptionConstants.BROWSER_STRING);", "-    if ((exe == FileOption.NULL_FILE) && (args.equals(\"\"))) {", "+    if ((exe == FileOption.NULL_FILE) && (command.equals(\"\"))) {", "+      String addr = address.toString();", "+      if (command.equals(\"\")) {", "+        // If there is no command, simply use the URL.", "+        command = addr;", "+      }", "+      else {", "+        // Otherwise, replace any <URL> tags in the command with the address.", "+        String tag = \"<URL>\";", "+        command = StringOps.replace(command, tag, addr);", "+      }", "+      ", "-      List<String> command = ArgumentTokenizer.tokenize(args);", "-      command.add(0, exe.getAbsolutePath());", "-      command.add(address.toString());", "+      List<String> args = ArgumentTokenizer.tokenize(command);", "+      ", "+      // Prepend the file only if it exists.", "+      if (exe != FileOption.NULL_FILE) {", "+        args.add(0, exe.getAbsolutePath());", "+      }", "-        Runtime.getRuntime().exec(command.toArray(new String[command.size()]));", "+        Runtime.getRuntime().exec(args.toArray(new String[args.size()]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5205a852a0fd3b7f9d0927089c3e078e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessCreator.java", "commitBeforeChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "commitAfterChange": "ec06880aa408b928b2f252538b208a76154d8334", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Process start() throws IOException", "signatureAfterChange": "   public Process start() throws IOException", "diff": ["-   */", "+    */", "-    List<String> cmds = StringOps.commandLineToList(StringOps.replaceVariables(_cmdline, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT));", "-    String[] cmdarray = new String[cmds.size()];", "-    for (int i=0; i<cmds.size(); ++i) {", "-      cmdarray[i] = StringOps.unescapeSpacesWith1bHex(cmds.get(i));", "-    }", "+    // set up work directory", "+    ", "+    // set up environment", "-    // edu.rice.cs.util.Log log = new edu.rice.cs.util.Log(\"process.txt\", true);", "-    // for(String c: cmdarray) { log.log(c); }", "-    // log.log(\"workdir: \"+dir);", "+    // set up command line, if necessary", "+    if (_cmdline!=null) {", "+      String replacedCmdLine = StringOps.replaceVariables(_cmdline, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT);", "+      List<String> cmds = StringOps.commandLineToList(replacedCmdLine);", "+      _cmdarray = new String[cmds.size()];", "+      for (int i=0; i<cmds.size(); ++i) {", "+        _cmdarray[i] = StringOps.unescapeSpacesWith1bHex(cmds.get(i));", "+      }", "+    }", "-    return Runtime.getRuntime().exec(cmdarray,env,dir);", "+    return Runtime.getRuntime().exec(_cmdarray,env,dir);"]}], "num": 11197}