{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6cfcde0711aff7499b06129d581deb3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a20a4d6a72c5515525468562fbd523b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "ad8cf97ed8642a4e981aedeb41e55e32ca82731b", "commitAfterChange": "a4a2af26b6c17a91ead92bae0871adcd6e96d716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   synchronized public void compileAll() throws IOException", "signatureAfterChange": "   synchronized public void compileAll() throws IOException", "diff": ["-      buildDir = _getter.getFileGroupingState().getBuildDirectory();", "+    compile(defDocs);", "+  }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d13b8c973e44668e342a51b5080c80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void compileAll() throws IOException", "signatureAfterChange": "        public void compileEnded()", "diff": ["+", "+      public void compileEnded() {", "+        // Only clear interactions if there were no errors", "+        if ((_compilerModel.getNumErrors() == 0)", "+              && _interactionsModel.interpreterUsed()", "+              /* && _resetAfterCompile */) {", "+          resetInteractions();", "+        }", "+      }", "-   */", "-  public void compileAll() throws IOException {", "-    synchronized(_compilerLock) {", "-      // Only compile if all are saved", "-      if (hasModifiedDocuments()) {", "-        _notifier.saveBeforeCompile();", "-      }", "-", "-      if (hasModifiedDocuments()) {", "-        // if any files haven't been saved after we told our", "-        // listeners to do so, don't proceed with the rest", "-        // of the compile.", "-      }", "-      else {", "-        // Get sourceroots and all files", "-        File[] sourceRoots = getSourceRootSet();", "-        ArrayList<File> filesToCompile = new ArrayList<File>();", "-        for (int i = 0; i < _definitionsDocs.getSize(); i++) {", "-          OpenDefinitionsDocument doc = (OpenDefinitionsDocument)", "-            _definitionsDocs.getElementAt(i);", "-          try {", "-            filesToCompile.add(doc.getFile());", "-          }", "-          catch (IllegalStateException ise) {", "-            // No file for this document; skip it", "-          }", "-        }", "-        File[] files = filesToCompile.toArray(new File[0]);", "-", "-        _notifier.compileStarted();", "-", "-        try {", "-          // Compile the files", "-          _compileFiles(sourceRoots, files);", "-        }", "-        catch (Throwable t) {", "-          CompilerError err = new CompilerError(t.toString(), false);", "-          CompilerError[] errors = new CompilerError[] { err };", "-          _distributeErrors(errors);", "-        }", "-        finally {", "-          // Fire a compileEnded event", "-          _notifier.compileEnded();", "-", "-          // Only clear interactions if there were no errors", "-          if (_numErrors == 0) {", "-            if (/*_resetAfterCompile && */", "-                _interactionsModel.interpreterUsed()) {", "-              resetInteractions();", "-            }", "-          }", "-        }", "-      }", "-    }", "-  }"]}], "num": 30680}