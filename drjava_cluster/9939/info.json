{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ac8c7af98a993fbea9387f4c3b6373d", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96976daccdca8399d8937de70c07dda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "ac55d90528653f74034b709e69818ba05a360584", "commitAfterChange": "603c8744a127b7738a621d0f6b6e698d9647db86", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t\tpublic int findNextText (String fWord, int currentPosition)", "signatureAfterChange": " \t \tprivate boolean _findNextText (String fWord, int start, int end)", "diff": ["-", "-\t\tpublic int findNextText (String fWord, int currentPosition) {", "-\t\t\t\tSystem.out.println(\"findnext \" + fWord);", "-\t\t\t\tString text = \"\";", "-\t\t\t\ttry {", "-\t\t\t\t\t\ttext = _doc().getText(0, _doc().getLength());", "-\t\t\t\t} catch (BadLocationException WillNeverHappen){}", "-\t\t\t\t\t\t", "-\t\t\t\tint place = text.indexOf(fWord, currentPosition);", "-", "-\t\t\t\tif (place == -1) {", "-\t\t\t\t\t\tToolkit.getDefaultToolkit().beep();", "-\t\t\t\t} else {", "-\t\t\t\t\t\t_selectWord(place, fWord.length());", "-\t\t\t\t}", "-\t\t\t\treturn place;", "+\t", "+\tprivate boolean _findNextText (String fWord, int start, int end) {", "+\t\tString text = \"\";", "+\t\ttry {", "+\t\t\ttext = _doc().getText(start, end-start);", "+\t\t} catch (BadLocationException WillNeverHappen){}", "+\t\t", "+\t\t", "+\t\tint place = text.indexOf(fWord);", "+\t\tif (place == -1) {", "+\t\t\treturn false;", "+\t\t} else {", "+\t\t\t_selectWord(start + place, fWord.length());", "+\t\t\treturn true;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd07325f49118bbe9f433351b5d6c2d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsView.java", "commitBeforeChange": "ac55d90528653f74034b709e69818ba05a360584", "commitAfterChange": "603c8744a127b7738a621d0f6b6e698d9647db86", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t\tpublic int findNextText (String fWord, int currentPosition)", "signatureAfterChange": " \t \tprivate boolean _findNextText (String fWord, int start, int end)", "diff": ["-", "-\t\tpublic int findNextText (String fWord, int currentPosition) {", "-\t\t\t\tSystem.out.println(\"findnext \" + fWord);", "-\t\t\t\tString text = \"\";", "-\t\t\t\ttry {", "-\t\t\t\t\t\ttext = _doc().getText(0, _doc().getLength());", "-\t\t\t\t} catch (BadLocationException WillNeverHappen){}", "-\t\t\t\t\t\t", "-\t\t\t\tint place = text.indexOf(fWord, currentPosition);", "-", "-\t\t\t\tif (place == -1) {", "-\t\t\t\t\t\tToolkit.getDefaultToolkit().beep();", "-\t\t\t\t} else {", "-\t\t\t\t\t\t_selectWord(place, fWord.length());", "-\t\t\t\t}", "-\t\t\t\treturn place;", "+\t", "+\tprivate boolean _findNextText (String fWord, int start, int end) {", "+\t\tString text = \"\";", "+\t\ttry {", "+\t\t\ttext = _doc().getText(start, end-start);", "+\t\t} catch (BadLocationException WillNeverHappen){}", "+\t\t", "+\t\t", "+\t\tint place = text.indexOf(fWord);", "+\t\tif (place == -1) {", "+\t\t\treturn false;", "+\t\t} else {", "+\t\t\t_selectWord(start + place, fWord.length());", "+\t\t\treturn true;", "+\t\t}", "+\t}"]}], "num": 9939}