{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12be87233d86e7c887049cedd7e19c2f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b63834862a05ba256c29e54b531a7f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/BackSlashTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testInsideQuoteNext()", "signatureAfterChange": "  \tpublic void testInsideQuoteNext()", "diff": ["-\t\t\tassertEquals(\"#0.0\", \"\\\\\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.getCursor().prevItem().getType());", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertTrue(\"#1.2\", model1.getCursor().prevItem().isClosed());", "-", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertTrue(\"#1.2\", model1.currentToken().isClosed());", "+\t\t\tmodel1.move(1);", "-\t\t\tassertEquals(\"#2.0\", \"\\\\\\\\\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#2.0\", \"\\\\\\\\\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());\t\t\t", "-\t\t\tassertEquals(\"#2.2\", 1, model1.getBlockOffset());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "+\t\t\tassertEquals(\"#2.2\", 6, model1.absOffset());", "-\t\t\tassertEquals(\"#3.0\", \"{\", model1.getCursor().prevItem().getType());", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#3.0\", \"{\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(1);", "-\t\t\tassertEquals(\"#4.0\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#4.1\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertTrue(\"#4.2\", model1.getCursor().prevItem().isClosed());", "-", "+\t\t\tassertEquals(\"#4.0\", \"\\\"\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#4.1\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertTrue(\"#4.2\", model1.currentToken().isClosed());", "+", "-\t\t\tassertEquals(\"#5.0\", \"\\\\\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#5.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());\t\t\t", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426b71828121726ad7254767aaf5f053", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BackSlashTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testInsideQuoteNext()", "signatureAfterChange": "  \tpublic void testInsideQuoteNext()", "diff": ["-\t\t\tassertEquals(\"#0.0\", \"\\\\\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.getCursor().prevItem().getType());", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertTrue(\"#1.2\", model1.getCursor().prevItem().isClosed());", "-", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertTrue(\"#1.2\", model1.currentToken().isClosed());", "+\t\t\tmodel1.move(1);", "-\t\t\tassertEquals(\"#2.0\", \"\\\\\\\\\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#2.0\", \"\\\\\\\\\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());\t\t\t", "-\t\t\tassertEquals(\"#2.2\", 1, model1.getBlockOffset());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "+\t\t\tassertEquals(\"#2.2\", 6, model1.absOffset());", "-\t\t\tassertEquals(\"#3.0\", \"{\", model1.getCursor().prevItem().getType());", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#3.0\", \"{\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(1);", "-\t\t\tassertEquals(\"#4.0\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#4.1\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertTrue(\"#4.2\", model1.getCursor().prevItem().isClosed());", "-", "+\t\t\tassertEquals(\"#4.0\", \"\\\"\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#4.1\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertTrue(\"#4.2\", model1.currentToken().isClosed());", "+", "-\t\t\tassertEquals(\"#5.0\", \"\\\\\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#5.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());\t\t\t", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t"]}], "num": 3040}