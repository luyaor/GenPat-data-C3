{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8da3af9b08adade8c7137009a411a504", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d4f312e8ab6c32d9b2a9039040a68b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "       public boolean isInProjectPath(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean isInProjectPath(File f)", "diff": ["-       */", "-      public boolean isInProjectPath(OpenDefinitionsDocument doc) {", "+     */", "+    public boolean isInProjectPath(File f) {", "+      try {", "-        if (doc.isUntitled()) return false;", "-        ", "-        // If the file does not exist, we still want to tell if it's in the correct", "-        // path.  The file may have been in at one point and had been removed, in which", "-        // case we should treat it as an untitled project file that should be resaved.", "-        try {", "-          File f;", "-          try { f = doc.getFile(); } ", "-          catch(FileMovedException fme) { f = fme.getFile(); }", "-          ", "-          String filePath = f.getParentFile().getCanonicalPath() + File.separator;", "-          String projectPath = projectRoot.getCanonicalPath() + File.separator;", "-          return (filePath.startsWith(projectPath));", "-        }", "-        catch(IOException e) {", "-          //          System.out.println(e); // What should we do in this case?", "-          return false;", "-        }", "+        String filePath = f.getParentFile().getCanonicalPath() + File.separator;", "+        String projectPath = projectRoot.getCanonicalPath() + File.separator;", "+        return (filePath.startsWith(projectPath));", "+      catch(IOException e) { return false; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89afc8d61ff8a997d94780289009530f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManager.java", "commitBeforeChange": "d884ae55e9471d604870827048329b58394dd950", "commitAfterChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean equals( Object o)", "signatureAfterChange": "     public boolean equals(Object o)", "diff": ["-    public boolean equals( Object o) {", "+    public boolean equals(Object o) {", "-      if (o == null) return false;", "+      if (o == null || ! (o instanceof HighlightInfo)) return false;", "-      if (o instanceof HighlightInfo) {", "-        HighlightInfo obj = (HighlightInfo)o;", "-        /*", "-         //System.out.println(\"p0: \"+p0+\"  obj.p0: \"+obj.p0);", "-         //System.out.println(\"p1: \"+p1+\"  obj.p1: \"+obj.p1);", "-         //System.out.println(\"p: \"+p+\"  obj.p: \"+obj.p);", "-         */", "-        boolean result = getStartOffset() == obj.getStartOffset() && ", "-          getEndOffset() == obj.getEndOffset() &&", "-          getPainter() == obj.getPainter();", "-        ", "-        //System.out.println(\"HighlightInfo.equals() = \"+result);", "-        return result;", "-      }", "-      else return false;", "+      HighlightInfo hi = (HighlightInfo)o;", "+      /*", "+       //System.out.println(\"p0: \"+p0+\"  obj.p0: \"+obj.p0);", "+       //System.out.println(\"p1: \"+p1+\"  obj.p1: \"+obj.p1);", "+       //System.out.println(\"p: \"+p+\"  obj.p: \"+obj.p);", "+       */", "+      boolean result = getStartOffset() == hi.getStartOffset() && ", "+        getEndOffset() == hi.getEndOffset() &&", "+        getPainter() == hi.getPainter();", "+      ", "+      //System.out.println(\"HighlightInfo.equals() = \"+result);", "+      return result;"]}], "num": 28294}