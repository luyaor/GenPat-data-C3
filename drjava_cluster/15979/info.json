{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5e87ecdfff2be6444eb0798ddb945cc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "551fa11b49a7b6098dd9aa082824a034", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ea58ebfcec38aad3c446138f5dc29fb9b0bd55b4", "commitAfterChange": "a36f036fed8dd7a9755b2c0fd88168156b516121", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 112, "signatureBeforeChange": "          public Icon getIcon(File f)", "signatureAfterChange": "     public Icon getIcon(File f)", "diff": ["+     */", "+      Icon ret = null;", "-        if (name.endsWith(\".java\")) return _java;", "-        if (name.endsWith(\".dj0\")) return _dj0;", "-        if (name.endsWith(\".dj1\")) return _dj1;", "-        if (name.endsWith(\".dj2\")) return _dj2;", "+        if (name.endsWith(\".java\")) ret = _java;", "+        if (name.endsWith(\".dj0\")) ret = _dj0;", "+        if (name.endsWith(\".dj1\")) ret = _dj1;", "+        if (name.endsWith(\".dj2\")) ret = _dj2;", "-      return super.getIcon(f);", "+      if (ret == null) ", "+        return super.getIcon(f);", "+      else", "+        return ret;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb8547db836b7431e79070a4862c0d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "54a2d5af359edd99cce3e2b74ded93b4c8c0d9e9", "commitAfterChange": "7c8486700bb21647b6fbe2818464471123c8ab80", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   private void _setupKeyBindingsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupKeyBindingsPanel(ConfigPanel panel)", "diff": ["-    // using a treeset because it automatically sorts element upon insertion", "-    TreeSet<VectorKeyStrokeOptionComponent> _comps = new TreeSet<VectorKeyStrokeOptionComponent>();", "+    // using a treemap because it automatically sorts element upon insertion", "+    TreeMap<String,VectorKeyStrokeOptionComponent> _comps = new TreeMap<String,VectorKeyStrokeOptionComponent>();", "-        String desc = (String) a.getValue(Action.SHORT_DESCRIPTION);", "-        if (desc == null || desc.equals(\"\")) desc = ksd.getName();", "-        vksoc = new VectorKeyStrokeOptionComponent(ksd.getOption(), ksd.getName(), this, desc);", "-        if (vksoc != null) _comps.add(vksoc);", "+        // pick the short description as name, if available", "+        String name = (String) a.getValue(Action.SHORT_DESCRIPTION);", "+        // if not available, pick the KeyStrokeData name instead", "+        if (name == null || name.trim().equals(\"\")) name = ksd.getName();", "+        // pick the long description as name, if available", "+        String desc = (String) a.getValue(Action.LONG_DESCRIPTION);", "+        // if not available, pick the name from above instead", "+        if (desc == null || desc.trim().equals(\"\")) desc = name;", "+        // if the map already contains this name, use the description instead", "+        if (_comps.containsKey(name)) {", "+          name = desc;", "+          // if the map already contains the description as well (bad developers!), then use the option's name", "+          if (_comps.containsKey(name)) {", "+            name = ksd.getOption().getName();", "+          }", "+        }", "+        vksoc = new VectorKeyStrokeOptionComponent(ksd.getOption(), name, this, desc);", "+        if (vksoc != null) _comps.put(name, vksoc);", "-    Iterator<VectorKeyStrokeOptionComponent> iter = _comps.iterator();", "+    Iterator<VectorKeyStrokeOptionComponent> iter = _comps.values().iterator();"]}], "num": 15979}