{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de30a42a4b9549d03df44a3224de58f6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db02778362f784a754837b7d0852fb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b18f1653904355c80d15c949af97466afd1bb285", "commitAfterChange": "3f3a8c8fcf83f21f81d279554b4af7fbd0689bb1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testIndentInfoParen() throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoParen() throws BadLocationException", "diff": ["-    IndentInfo ii = _reduced.getIndentInformation();", "-    _assertIndentInfo(ii, openParen, 2, 2, 0);", "+    IndentInfo info = _reduced.getIndentInformation();", "+    _assertIndentInfo(info, OPEN_PAREN, 2, 2, 0);", "-    ii = _reduced.getIndentInformation();", "-    _assertIndentInfo(ii, openParen, 9, 2, 0);", "+    info = _reduced.getIndentInformation();", "+    _assertIndentInfo(info, OPEN_PAREN, 9, 2, 0);", "-    ii = _reduced.getIndentInformation();", "-    _assertIndentInfo(ii, openParen, 11, 2, 0);", "+    info = _reduced.getIndentInformation();", "+    _assertIndentInfo(info, OPEN_PAREN, 11, 2, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54d801120576170cb20406bdc77ca1a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b18f1653904355c80d15c949af97466afd1bb285", "commitAfterChange": "3f3a8c8fcf83f21f81d279554b4af7fbd0689bb1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testIndentInfoBracket() throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBracket() throws BadLocationException", "diff": ["-    IndentInfo ii = _reduced.getIndentInformation();", "-    _assertIndentInfo(ii, openBracket, 2, 2, 0);", "+    IndentInfo info = _reduced.getIndentInformation();", "+    _assertIndentInfo(info, OPEN_BRACKET, 2, 2, 0);", "-    ii = _reduced.getIndentInformation();", "-    _assertIndentInfo(ii, openBracket, 9, 2, 0);", "+    info = _reduced.getIndentInformation();", "+    _assertIndentInfo(info, OPEN_BRACKET, 9, 2, 0);", "-    ii = _reduced.getIndentInformation();", "-    _assertIndentInfo(ii, openBracket, 11, 2, 0);", "+    info = _reduced.getIndentInformation();", "+    _assertIndentInfo(info, OPEN_BRACKET, 11, 2, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d8f66568c89e431db4d9abacf610462", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "b18f1653904355c80d15c949af97466afd1bb285", "commitAfterChange": "3f3a8c8fcf83f21f81d279554b4af7fbd0689bb1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    IndentInfo ii = doc.getIndentInformation();", "+    IndentInfo info = doc.getIndentInformation();", "-    if ((ii.braceType.equals(\"\")) ||", "-        (ii.distToBrace < 0)) {", "+    if ((info.lineEnclosingBraceType.equals(\"\")) ||", "+        (info.distToLineEnclosingBrace < 0)) {", "-    int bracePos = startLine - ii.distToBrace;", "+    int bracePos = startLine - info.distToLineEnclosingBrace;", "-    if (ii.distToNewline >=0) {", "-      braceNewline = startLine - ii.distToNewline;", "+    if (info.distToLineEnclosingBraceStart >=0) {", "+      braceNewline = startLine - info.distToLineEnclosingBraceStart;"]}], "num": 3302}