{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f52b07d06b031f3d2b5e49ce25749c0b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1937c21e60c5354ff92fcbe21df36aab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "fcb52146fe5952d46eb1cf9b67172e0f75de7a52", "commitAfterChange": "fbab2bd705dc6109a68454696cb8f397eb070aa2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private synchronized void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["-  private synchronized void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException {", "+  private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException {", "-    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) {", "-      extraClasspath.add(f);", "-    }", "+    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) extraClasspath.add(f);", "+    ", "-", "-      CompilerError[] compilerErrorsArray = (CompilerError[]) compilerErrors.toArray(new CompilerError[compilerErrors.size()]);", "+      CompilerError[] compilerErrorsArray = null;", "+      ", "+      synchronized(_slaveJVMLock) {", "+        compilerErrorsArray = (CompilerError[]) compilerErrors.toArray(new CompilerError[compilerErrors.size()]);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1829c4323409bd321488b1b44cc48b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private synchronized void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private synchronized void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["+    ClasspathVector extraClasspath = new ClasspathVector();", "+    if (_getter.getFileGroupingState().isProjectActive()) ", "+      extraClasspath.addAll(_getter.getFileGroupingState().getExtraClasspath());", "+    for(File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) {", "+      extraClasspath.add(f);", "+    }", "+//    System.out.println(\"Extra classpath passed to compiler: \" + extraClasspath.toString());", "+    compiler.setExtraClassPath(extraClasspath);", "-      files = javaFileSet.toArray(new File[0]);", "+      files = javaFileSet.toArray(new File[javaFileSet.size()]);", "-      CompilerError[] compilerErrorsArray = (CompilerError[]) compilerErrors.toArray(new CompilerError[0]);", "+      CompilerError[] compilerErrorsArray = (CompilerError[]) compilerErrors.toArray(new CompilerError[compilerErrors.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6eb544b28c75f7f4417ee97f583e02e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["-    ClasspathVector extraClasspath = new ClasspathVector();", "-    if (_model.getFileGroupingState().isProjectActive()) ", "-      extraClasspath.addAll(_model.getFileGroupingState().getExtraClasspath());", "+    ClassPathVector extraClassPath = new ClassPathVector();", "+    if (_model.isProjectActive()) ", "+      extraClassPath.addAll(_model.getExtraClassPath());", "-    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) extraClasspath.add(f);", "+    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) extraClassPath.add(f);", "-    compiler.setExtraClassPath(extraClasspath);", "+    compiler.setExtraClassPath(extraClassPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf73f1c3948ad96754bdbc3d2e1ee6ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   synchronized protected void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private synchronized void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["-  synchronized protected void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException {", "+  private synchronized void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException {", "-      LinkedList<CompilerError> compilerErrors = new LinkedList<CompilerError>();", "-    CompilerInterface compiler", "-      = CompilerRegistry.ONLY.getActiveCompiler();", "+    LinkedList<CompilerError> compilerErrors = new LinkedList<CompilerError>();", "+    CompilerInterface compiler = CompilerRegistry.ONLY.getActiveCompiler();", "-      for (int i = 0; i<files.length; i++) {", "+      for (int i = 0; i < files.length; i++) {", "-          files[i]=new File(fileName.substring(0, lastIndex) + \".java\");", "+          files[i] = new File(fileName.substring(0, lastIndex) + \".java\");", "+      "]}], "num": 12592}