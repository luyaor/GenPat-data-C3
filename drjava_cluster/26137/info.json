{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d93f8b4f6b2cb9881c7100ef2f03c342", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1435f0896f8f383e0c175f0106adfbe2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracketTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testBracketWithArrayComprehension() throws BadLocationException", "signatureAfterChange": "      public void testBracketWithArrayComprehension() throws BadLocationException", "diff": ["-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));", "-      assertTrue(\"START's brace is an open bracket.\", _rule.applyRule(_doc, i, Indenter.OTHER));", "+      assertTrue(\"START's brace is an open bracket.\", _rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));", "-      assertTrue(\"START's brace is an open paren.\", _rule.applyRule(_doc, i, Indenter.OTHER));", "+      assertTrue(\"START's brace is an open paren.\", _rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea8deb5f45eed91ff9c3f49234a8a218", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracketTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testBracketWithArrayComprehension() throws BadLocationException", "signatureAfterChange": "      public void testBracketWithArrayComprehension() throws BadLocationException", "diff": ["-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, i, Indenter.IndentReason.OTHER));", "-      assertTrue(\"START's brace is an open bracket.\", _rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));", "+      assertTrue(\"START's brace is an open bracket.\", _rule.testApplyRule(_doc, i, Indenter.IndentReason.OTHER));", "-      assertTrue(\"START's brace is an open paren.\", _rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));", "+      assertTrue(\"START's brace is an open paren.\", _rule.testApplyRule(_doc, i, Indenter.IndentReason.OTHER));"]}], "num": 26137}