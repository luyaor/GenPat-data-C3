{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e020635cd0dc57865e7e5f932534301", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba1de47b0d3ef38cad71021ff88c9b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "   protected void assertReplThrewSyntaxException(String code) throws EditDocumentException, InterruptedException", "signatureAfterChange": "   protected void assertReplThrewSyntaxException(final String code) throws EditDocumentException, InterruptedException", "diff": ["-  protected void assertReplThrewSyntaxException(String code) throws EditDocumentException, InterruptedException {", "+  protected void assertReplThrewSyntaxException(final String code) throws EditDocumentException, InterruptedException {", "-    IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel)_model;", "-    InteractionsDocument doc = model.getDocument();", "-    doc.reset(\"This is a test\");", "-    doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "-    model._logInteractionStart();", "-    model.interpretCurrentInteraction();", "+    final IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel)_model;", "+    final InteractionsDocument doc = model.getDocument();", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() {", "+        doc.reset(\"This is a test\");", "+        doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "+        model._logInteractionStart();", "+        model.interpretCurrentInteraction();", "+      }", "+    });", "+    Utilities.clearEventQueue();", "+", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9970aa7e6903e7909525d57d7f4c1cb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "   protected void assertReplThrewSyntaxException(String code) throws EditDocumentException, InterruptedException", "signatureAfterChange": "   protected void assertReplThrewSyntaxException(final String code) throws EditDocumentException, InterruptedException", "diff": ["-  protected void assertReplThrewSyntaxException(String code) throws EditDocumentException, InterruptedException {", "+  protected void assertReplThrewSyntaxException(final String code) throws EditDocumentException, InterruptedException {", "-    IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel)_model;", "-    InteractionsDocument doc = model.getDocument();", "-    doc.reset(\"This is a test\");", "-    doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "-    model._logInteractionStart();", "-    model.interpretCurrentInteraction();", "+    final IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel)_model;", "+    final InteractionsDocument doc = model.getDocument();", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() {", "+        doc.reset(\"This is a test\");", "+        doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "+        model._logInteractionStart();", "+        model.interpretCurrentInteraction();", "+      }", "+    });", "+    Utilities.clearEventQueue();", "+", "+    Utilities.clearEventQueue();"]}], "num": 13313}