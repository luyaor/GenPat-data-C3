{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2852e8715dd04b03cdac23ec20a8e835", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8f8e0c54eabc8852de8678f5ff72ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/EventHandlerThread.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _handleClassPrepareEvent(ClassPrepareEvent e) throws DebugException", "signatureAfterChange": "   private void _handleClassPrepareEvent(final ClassPrepareEvent e)", "diff": ["-  private void _handleClassPrepareEvent(ClassPrepareEvent e) throws DebugException {", "-    synchronized(_debugger) {", "-      _debugger.getPendingRequestManager().classPrepared(e);", "-      // resume this thread which was suspended because its", "-      // suspend policy was SUSPEND_EVENT_THREAD", "-      e.thread().resume();", "-    }", "+  private void _handleClassPrepareEvent(final ClassPrepareEvent e) /* throws DebugException */ {", "+//    synchronized(_debugger) {", "+    SwingUtilities.invokeLater(new Runnable() {", "+      public void run() {", "+        try {", "+          _debugger.getPendingRequestManager().classPrepared(e);", "+          // resume this thread which was suspended because its", "+          // suspend policy was SUSPEND_EVENT_THREAD", "+          e.thread().resume();", "+        }", "+        catch(DebugException e) { throw new UnexpectedException(e); }", "+//    }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26812b7c004a384ade8b88ee655b4735", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/EventHandlerThread.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void _handleBreakpointEvent(BreakpointEvent e) throws DebugException", "signatureAfterChange": "   private void _handleBreakpointEvent(final BreakpointEvent e)", "diff": ["-  private void _handleBreakpointEvent(BreakpointEvent e) throws DebugException {", "-    synchronized(_debugger) {", "-      if (_isSuspendedWithFrames(e.thread()) && _debugger.setCurrentThread(e.thread())) {", "+  private void _handleBreakpointEvent(final BreakpointEvent e) /* throws DebugException */ {", "+//    synchronized(_debugger) {", "+    SwingUtilities.invokeLater(new Runnable() {", "+      public void run() {", "+//        System.err.println(\"handleBreakpointEvent(\" + e + \") called\");", "+        try {", "+          if (_isSuspendedWithFrames(e.thread()) && _debugger.setCurrentThread(e.thread())) {", "-        _debugger.currThreadSuspended();", "+            _debugger.currThreadSuspended();", "-        _debugger.reachedBreakpoint((BreakpointRequest) e.request());", "+            _debugger.reachedBreakpoint((BreakpointRequest) e.request());", "+//      }", "+          }", "+        }", "+        catch(DebugException e) { throw new UnexpectedException(e); }", "-    }", "+    });"]}], "num": 9844}