{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8177350abafe916d2f27aff2eb8af34", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39560e257a477ed254ab616736deb630", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void xtestJUnitAllWithNoErrors() throws Exception", "signatureAfterChange": "   public void testJUnitAllWithNoErrors() throws Exception", "diff": ["-   */", "-  public void xtestJUnitAllWithNoErrors() throws Exception {", "-    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "-    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "-    File file = new File(_tempDir, \"NonTestCase.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "-    file = new File(_tempDir, \"MonkeyTestPass.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(0);", "-    listener.assertJUnitSuiteStartedCount(1);", "-    listener.assertJUnitTestStartedCount(1);", "-    listener.assertJUnitTestEndedCount(1);", "-    _model.removeListener(listener);", "-", "-    listener = new JUnitNonTestListener(true);", "-    doc = setupDocument(HAS_MULTIPLE_TESTS_PASS_TEXT);", "-    file = new File(_tempDir, \"HasMultipleTestsPass.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(0);", "-    listener.assertJUnitSuiteStartedCount(1);", "-    listener.assertJUnitTestStartedCount(3);", "-    listener.assertJUnitTestEndedCount(3);", "-    _model.removeListener(listener);", "-  }", "+  /** Tests that junit all works with one or two test cases that should pass. */", "+  public void testJUnitAllWithNoErrors() throws Exception {", "+    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "+    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    File file = new File(_tempDir, \"NonTestCase.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+    ", "+    listener.assertNonTestCaseCount(0);", "+    listener.assertJUnitSuiteStartedCount(1);", "+    listener.assertJUnitTestStartedCount(1);", "+    listener.assertJUnitTestEndedCount(1);", "+    _model.removeListener(listener);", "+", "+    listener = new JUnitNonTestListener(true);", "+    doc = setupDocument(HAS_MULTIPLE_TESTS_PASS_TEXT);", "+    file = new File(_tempDir, \"HasMultipleTestsPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+    ", "+    listener.assertNonTestCaseCount(0);", "+    listener.assertJUnitSuiteStartedCount(1);", "+    listener.assertJUnitTestStartedCount(3);", "+    listener.assertJUnitTestEndedCount(3);", "+    _model.removeListener(listener);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b0deddca82a8ab047547ae29c0570c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "2956623adadc4e9d463894cafecdb1725bf77715", "commitAfterChange": "74ef9fbe03efcd82eb19c1e26298c6b9ada091d1", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 58, "signatureBeforeChange": "   final public List<Node> enumBody(String enumTypeName) throws ParseException", "signatureAfterChange": "   final public EnumDeclaration.EnumBody enumBody() throws ParseException", "diff": ["-  final public List<Node> enumBody(String enumTypeName) throws ParseException {", "-    List<Node>         body = new LinkedList<Node>();", "-    List<EnumConstant> consts = null;", "+  final public EnumDeclaration.EnumBody enumBody() throws ParseException {", "+//    List<Node>         body = new LinkedList<Node>();", "+    List<EnumDeclaration.EnumConstant> consts = null;", "-        body.addAll(makeEnumBodyDeclarationsFromEnumConsts(enumTypeName, consts));", "-        body.addAll(decl);", "-      {if (true) return body;}", "+      {if (true) return new EnumDeclaration.EnumBody(consts, ((decl==null)? new LinkedList<Node>() : decl));}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7688c4b5c46cd9314b4b8f8dc6194c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testJUnitAllWithNoValidTests() throws Exception", "signatureAfterChange": "   public void testJUnitAllWithNoValidTests() throws Exception", "diff": ["-   */", "-  public void testJUnitAllWithNoValidTests() throws Exception {", "-    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(1);", "-    listener.assertJUnitSuiteStartedCount(0);", "-    listener.assertJUnitTestStartedCount(0);", "-    listener.assertJUnitTestEndedCount(0);", "-    _model.removeListener(listener);", "-", "-    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "-    listener = new JUnitNonTestListener(true);", "-    File file = new File(_tempDir, \"NonTestCase.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "-    file = new File(_tempDir, \"MonkeyTestPass.java\");", "-    doc.saveFile(new FileSelector(file));", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(1);", "-    listener.assertJUnitSuiteStartedCount(0);", "-    listener.assertJUnitTestStartedCount(0);", "-    listener.assertJUnitTestEndedCount(0);", "-    _model.removeListener(listener);", "-  }", "+  /** Verifies that we get a nonTestCase event */", "+  public void testJUnitAllWithNoValidTests() throws Exception {", "+    ", "+    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+    ", "+    listener.assertNonTestCaseCount(1);", "+    listener.assertJUnitSuiteStartedCount(0);", "+    listener.assertJUnitTestStartedCount(0);", "+    listener.assertJUnitTestEndedCount(0);", "+    _model.removeListener(listener);", "+", "+    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "+    listener = new JUnitNonTestListener(true);", "+    File file = new File(_tempDir, \"NonTestCase.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+ ", "+    listener.assertNonTestCaseCount(1);", "+    listener.assertJUnitSuiteStartedCount(0);", "+    listener.assertJUnitTestStartedCount(0);", "+    listener.assertJUnitTestEndedCount(0);", "+    _model.removeListener(listener);", "+  }"]}], "num": 10467}