{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75ba0b06d0c0065bf3b9ae92f5127b85", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fdaf875dfc7d400d883794b52399fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "commitAfterChange": "3d97d4e9732e553ec694cfc208cfcad91b929426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void openCommandLineFiles(MainFrame mf, String[] args)", "signatureAfterChange": "   public static void openCommandLineFiles(MainFrame mf, String[] args)", "diff": ["-     */", "-    public static void openCommandLineFiles(MainFrame mf, String[] args) {", "-        int i;", "-        for(i=0; i<args.length; i++) {", "-            final File file = new File(args[i]);", "-            FileOpenSelector command = new FileOpenSelector() {", "-                    public File getFile() {", "-                        return file;", "-                    }", "-                };", "-            try {", "-                OpenDefinitionsDocument doc = mf.getModel().openFile(command);", "-            } catch (FileNotFoundException ex) {", "-                //dialog: file not found", "-            } catch (Exception ex) {", "-        ", "-            }", "-        }", "-    }", "+   */", "+  public static void openCommandLineFiles(MainFrame mf, String[] args) {", "+    int i;", "+    for(i=0; i<args.length; i++) {", "+      final File file = new File(args[i]);", "+      FileOpenSelector command = new FileOpenSelector() {", "+        public File getFile() {", "+          return file;", "+        }", "+      };", "+      try {", "+        OpenDefinitionsDocument doc = mf.getModel().openFile(command);", "+      } catch (FileNotFoundException ex) {", "+        //dialog: file not found", "+      } catch (AlreadyOpenException aoe) {", "+        // This explicitly does nothing to ignore duplicate files.", "+      } catch (Exception ex) {", "+        throw new UnexpectedException(ex);", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7de800242fd32e641c3f21df9416a463", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigurationTool.java", "commitBeforeChange": "a1a6999368e46edb5b90b80c5b3408be4c936842", "commitAfterChange": "4b81226a506453e5fed22484eea7871c6d083330", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       public FileConfiguration evaluate()", "signatureAfterChange": "   public FileConfiguration evaluate()", "diff": ["-    (new Begin<FileConfiguration>() {", "-      public FileConfiguration evaluate() {", "-        try { ", "-          PROPERTIES_FILE.createNewFile(); ", "-          // be nice and ensure a config file ", "-        } catch(IOException e) { // IOException occurred ", "-        } ", "-        FileConfiguration config = ", "-          new FileConfiguration(PROPERTIES_FILE); ", "-        try { ", "-          config.loadConfiguration(); ", "-        }", "-        catch (Exception e) {", "-          // problem parsing the config file.", "-          // Use defaults and remember what happened (for the UI)", "-          config.resetToDefaults();", "-          config.storeStartupException(e);", "-        }", "-        return config;", "-      }", "+class DefaultFileConfig {", "+  public FileConfiguration evaluate() {", "+    try { ", "+      ConfigurationTool.PROPERTIES_FILE.createNewFile(); ", "+      // be nice and ensure a config file ", "+    } catch(IOException e) { // IOException occurred ", "+    } ", "+    FileConfiguration config = ", "+      new FileConfiguration(ConfigurationTool.PROPERTIES_FILE); ", "+    try { ", "+      config.loadConfiguration(); ", "+    }", "+    catch (Exception e) {", "+      // problem parsing the config file.", "+      // Use defaults and remember what happened (for the UI)", "+      config.resetToDefaults();", "+      config.storeStartupException(e);", "+    }", "+    return config;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b877ba450a3a3de2c3647f4a623199", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigurationTool.java", "commitBeforeChange": "2de5de833fec6c0fefce3e0dfbb07764b1900707", "commitAfterChange": "fa036878036cfa9b3fdfb0b92616499d17bb99f7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "             public FileConfiguration evaluate()", "signatureAfterChange": "       public FileConfiguration evaluate()", "diff": ["-        (new Begin<FileConfiguration>() {", "-            public FileConfiguration evaluate() {", "-                try { ", "-                    PROPERTIES_FILE.createNewFile(); ", "-                    // be nice and ensure a config file ", "-                } catch(IOException e) { // IOException occurred ", "-                } ", "-                FileConfiguration config = ", "-                new FileConfiguration(PROPERTIES_FILE); ", "-                try { ", "-                    config.loadConfiguration(); ", "-                } catch(IOException e) { ", "-                }", "-                catch (Exception e) {", "-                  // problem parsing the config file. Just use defaults", "-                }", "-                return config;", "-            }", "+    (new Begin<FileConfiguration>() {", "+      public FileConfiguration evaluate() {", "+        try { ", "+          PROPERTIES_FILE.createNewFile(); ", "+          // be nice and ensure a config file ", "+        } catch(IOException e) { // IOException occurred ", "+        } ", "+        FileConfiguration config = ", "+          new FileConfiguration(PROPERTIES_FILE); ", "+        try { ", "+          config.loadConfiguration(); ", "+        }", "+        catch (Exception e) {", "+          // problem parsing the config file.", "+          // Use defaults and remember what happened (for the UI)", "+          config.resetToDefaults();", "+          config.storeStartupException(e);", "+        }", "+        return config;", "+      }"]}], "num": 20455}