{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02ed08a7fe873cc3234732435b84daf1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201820645d762cb2a9df8f80451f2eab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   final public FormalParameter formalParameter() throws ParseException", "signatureAfterChange": "   final public FormalParameter formalParameter() throws ParseException", "diff": ["-    Token varargs = null;", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case VAR_ARGS:", "-      varargs = jj_consume_token(VAR_ARGS);", "-      id = jj_consume_token(IDENTIFIER);", "-      break;", "-    case IDENTIFIER:", "-      id = jj_consume_token(IDENTIFIER);", "-      label_14:", "-      while (true) {", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case LBRACKET:", "-          ;", "-          break;", "-        default:", "-          jj_la1[32] = jj_gen;", "-          break label_14;", "-        }", "-        jj_consume_token(LBRACKET);", "-        jj_consume_token(RBRACKET);", "-                                    dim++;", "+    id = jj_consume_token(IDENTIFIER);", "+    label_14:", "+    while (true) {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LBRACKET:", "+        ;", "+        break;", "+      default:", "+        jj_la1[32] = jj_gen;", "+        break label_14;", "-      break;", "-    default:", "-      jj_la1[33] = jj_gen;", "-      jj_consume_token(-1);", "-      throw new ParseException();", "+      jj_consume_token(LBRACKET);", "+      jj_consume_token(RBRACKET);", "+                                                         dim++;", "-      {if (true) return new FormalParameter(f != null, typ, id.image, varargs != null,", "+      {if (true) return new FormalParameter(f != null, typ, id.image,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2c938252a973709d1e640c5530049c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "   final public TypeDeclaration typeDeclaration() throws ParseException", "signatureAfterChange": "   final public TypeDeclaration typeDeclaration() throws ParseException", "diff": ["-    if (jj_2_5(2147483647)) {", "+    if (jj_2_6(2147483647)) {", "+    } else if (jj_2_7(2147483647)) {", "+      node = interfaceDeclaration();", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-      case ABSTRACT:", "-      case FINAL:", "-      case INTERFACE:", "-      case NATIVE:", "-      case PRIVATE:", "-      case PROTECTED:", "-      case PUBLIC:", "-      case STATIC:", "-      case SYNCHRONIZED:", "-      case TRANSIENT:", "-      case VOLATILE:", "-        node = interfaceDeclaration();", "-        break;", "-      default:", "-        jj_la1[11] = jj_gen;", "-        jj_consume_token(-1);", "-        throw new ParseException();", "-      }", "+      jj_consume_token(-1);", "+      throw new ParseException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb76e57b30fa64b457f07360de205f9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "    final public ImportStatement ImportStatement() throws ParseException", "signatureAfterChange": "    final public ImportStatement ImportStatement() throws ParseException", "diff": ["+    cw = CompoundWord();", "-      cw = CompoundWord();", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case SEMICOLON:", "-          jj_consume_token(SEMICOLON);", "-          break;", "-        default:", "-          jj_la1[10] = jj_gen;", "-          ;", "-        }", "-        jj_la1[12] = jj_gen;", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case SEMICOLON:", "-          jj_consume_token(SEMICOLON);", "-          break;", "-        default:", "-          jj_la1[11] = jj_gen;", "-          ;", "-        }", "+        jj_la1[8] = jj_gen;"]}], "num": 8582}