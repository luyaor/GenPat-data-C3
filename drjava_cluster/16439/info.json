{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f81412b2fae1c46e81ee52207042e926", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d87ee1f64b56ad40ea4000b1a2da4fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 265, "methodNumberAfterChange": 399, "signatureBeforeChange": "     public MultiVarargChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                Iterable<? extends VariableType> tparams, Iterable<? extends Type> targs)", "signatureAfterChange": "     public MultiVarargMatcher(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                Iterable<? extends VariableType> tparams, Iterable<? extends Type> targs)", "diff": ["-    public MultiVarargChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args, ", "+    public MultiVarargMatcher(Iterable<? extends Type> params, Iterable<? extends Expression> args, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed04448f699c649ed54a504fb848f5c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 257, "methodNumberAfterChange": 391, "signatureBeforeChange": "     public EmptyVarargChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                Iterable<? extends VariableType> tparams, Iterable<? extends Type> targs)", "signatureAfterChange": "     public EmptyVarargMatcher(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                Iterable<? extends VariableType> tparams, Iterable<? extends Type> targs)", "diff": ["-    public EmptyVarargChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args, ", "+    public EmptyVarargMatcher(Iterable<? extends Type> params, Iterable<? extends Expression> args, "]}], "num": 16439}