{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9570fd906e7b5c64fcfbf133f5ead95a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3004738541009667da6d3dc04976cecf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "bffcae721f8dbc844dc8a667963f0caab39047ea", "commitAfterChange": "0af0c72004872701891228fa18659a3204fb6e2f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "diff": ["-            llv = new FullJavaVisitor(f, new LinkedList<Pair<String, JExpressionIF>>(),", "-                                      new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), ", "-                                      languageLevelVisitedFiles);", "+// TODO: Where is FullJavaVisitor?", "+//            llv = new FullJavaVisitor(f, new LinkedList<Pair<String, JExpressionIF>>(),", "+//                                      new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), ", "+//                                      languageLevelVisitedFiles);", "+            llv = null;", "-        LanguageLevelVisitor llv = triple.getFirst();", "-        SourceFile sf = triple.getSecond();", "-        File f = triple.getThird();", "+        LanguageLevelVisitor llv = triple.first();", "+        SourceFile sf = triple.second();", "+        File f = triple.third();", "-      LanguageLevelVisitor llv = triple.getFirst();", "-      SourceFile sf = triple.getSecond();", "-      File f = triple.getThird();", "+      LanguageLevelVisitor llv = triple.first();", "+      SourceFile sf = triple.second();", "+      File f = triple.third();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9981154ad7a51cf01f28742f3c9a53ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable,                              Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations,                              LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles,                              Hashtable<SymbolData, LanguageLevelVisitor> newSDs)", "signatureAfterChange": "   public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors,                              Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations,                              LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles)", "diff": ["-  public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable,", "+  public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors,", "-                             LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles,", "-                             Hashtable<SymbolData, LanguageLevelVisitor> newSDs) {", "+                             LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles) {", "-    this.symbolTable = symbolTable;", "+//    this.symbolTable = symbolTable;", "-    this._newSDs = newSDs;", "-    _hierarchy = new Hashtable<String, TypeDefBase>();//hierarchy;", "+    _hierarchy = new Hashtable<String, TypeDefBase>(); //hierarchy;"]}], "num": 5505}