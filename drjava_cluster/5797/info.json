{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e9fa4d6b231f8d0867f08707664a76f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c34daf0f924a871bda1a2a0957f3dde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 495, "methodNumberAfterChange": 495, "signatureBeforeChange": "\r \r \r   public void forEmptyForCondition(EmptyForCondition that)", "signatureAfterChange": "      public void forEmptyForCondition(EmptyForCondition that)", "diff": ["-\r", "-  public void forEmptyForCondition(EmptyForCondition that) {\r", "-    forEmptyForConditionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forEmptyForConditionOnly(that);\r", "-  }\r", "+  ", "+  public void forEmptyForCondition(EmptyForCondition that) {", "+    forEmptyForConditionDoFirst(that);", "+    if (prune(that)) return;", "+    forEmptyForConditionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aeb1bcfcc12cb3c9807492885444ef3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 365, "signatureBeforeChange": "\r \r   public void forModifiersAndVisibility(ModifiersAndVisibility that)", "signatureAfterChange": "    public void forModifiersAndVisibility(ModifiersAndVisibility that)", "diff": ["-\r", "-  public void forModifiersAndVisibility(ModifiersAndVisibility that) {\r", "-    forModifiersAndVisibilityDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forModifiersAndVisibilityOnly(that);\r", "-  }\r", "+", "+  public void forModifiersAndVisibility(ModifiersAndVisibility that) {", "+    forModifiersAndVisibilityDoFirst(that);", "+    if (prune(that)) return;", "+    forModifiersAndVisibilityOnly(that);", "+  }"]}], "num": 5797}