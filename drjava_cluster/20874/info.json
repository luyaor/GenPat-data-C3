{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ee17acb9436780a4b3b0ad3884357b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78839b898c436028663e842039122343", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-    SymbolData sd = defineSymbolData(that, className);", "+    System.err.println(\"Processing class \" + className);", "-    if (sd != null) {", "+    String superName = that.getSuperclass().getName();", "-      String superName = that.getSuperclass().getName();", "-      if (superName.equals(\"TestCase\") || superName.equals(\"junit.framework.TestCase\")) {", "-        isTestCase = true;", "-        if (! _importedPackages.contains(\"junit.framework\") && ! _importedFiles.contains(\"junit.framework.TestCase\")) {", "-//          System.err.println(\"importing junit.framework.TestCase in file \" + that.getSourceInfo());", "-          _importedFiles.addLast(\"junit.framework.TestCase\");", "-          sd.setHasAutoGeneratedJunitImport(true);", "-        }", "-        // add to symbol table", "-        getSymbolData(\"junit.framework.TestCase\", that.getSourceInfo(), true, false, true, false); ", "-//        assert getSymbolData(\"junit.framework.TestCase\", that.getSourceInfo()) != null;", "+    if (superName.equals(\"TestCase\") || superName.equals(\"junit.framework.TestCase\")) {", "+      isTestCase = true;", "+      if (! _importedPackages.contains(\"junit.framework\") && ! _importedFiles.contains(\"junit.framework.TestCase\")) {", "+        _importedFiles.addLast(\"junit.framework.TestCase\");", "+        createImportedSymbolContinuation(\"junit.framework.TestCase\", that.getSourceInfo());", "+      assert getQualifiedSymbolData(\"junit.framework.TestCase\", that.getSourceInfo()) != null;", "-    ", "+      ", "+    SymbolData sd = defineSymbolData(that, className);", "+    assert getQualifiedSymbolData(className, that.getSourceInfo()) != null;", "+", "-    // Test cases are automatically public; isTestCase => sd != null", "-    if (isTestCase) sd.addModifier(\"public\");", "+    if (sd != null) identifyInnerClasses(that);", "-      that.getBody().visit(new ClassBodyIntermediateVisitor(sd, _file, _package, _importedFiles, _importedPackages,", "-                                                            _classNamesInThisFile, continuations));", "+      if (isTestCase) {", "+        // Test cases are automatically public; isTestCase => sd != null", "+        sd.addModifier(\"public\");", "+        if (! _importedPackages.contains(\"junit.framework\") && ! _importedFiles.contains(\"junit.framework.TestCase\"))", "+          sd.setHasAutoGeneratedJunitImport(true);", "+      }", "+      that.getBody().visit(new ClassBodyIntermediateVisitor(sd, className, _file, _package, _importedFiles, ", "+                                                            _importedPackages, _classesInThisFile, continuations,", "+                                                            fixUps));", "+    ", "-    _classesToBeParsed.remove(className);", "+    _classesInThisFile.remove(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796f3965df9fa7e2efd8bce4a04effa3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-    boolean isTestCase = false;  // flag to support automatic importing of junit.framework.*;", "-    ", "-    if (superName.equals(\"TestCase\") || superName.equals(\"junit.framework.TestCase\")) {", "-      isTestCase = true;", "-      if (! _importedPackages.contains(\"junit.framework\") && ! _importedFiles.contains(\"junit.framework.TestCase\")) {", "-        _importedFiles.addLast(\"junit.framework.TestCase\");", "-        createImportedSymbolContinuation(\"junit.framework.TestCase\", that.getSourceInfo());", "-      }", "-      assert getQualifiedSymbolData(\"junit.framework.TestCase\", that.getSourceInfo()) != null;", "-    }", "-    assert getQualifiedSymbolData(className, that.getSourceInfo()) != null;", "+  ", "+    // Note: sd returns null only if there is an error such as redefining a class", "+//    assert getQualifiedSymbolData(className, that.getSourceInfo()) != null;", "-    // Process fields of this ClassDef (the get method is misnamed!)", "-    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);", "+    // Type parameters are illegal in functional code.", "+//    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);", "-      if (isTestCase) {", "+      // Perform special processing for classes extending TestCase   ", "+      if (superName.equals(\"TestCase\") || superName.equals(\"junit.framework.TestCase\")) {", "-        if (! _importedPackages.contains(\"junit.framework\") && ! _importedFiles.contains(\"junit.framework.TestCase\"))", "+        // Check to see if we need to autognerate an import of TestCase class", "+        if (! _importedPackages.contains(\"junit.framework\") && ! _importedFiles.contains(\"junit.framework.TestCase\")) {", "+          _importedFiles.addLast(\"junit.framework.TestCase\");", "+          createImportedSymbolContinuation(\"junit.framework.TestCase\", that.getSourceInfo());", "+//          System.err.println(\"*********** Imported symbol continuation created for junit.framework.TestCase\");", "+        }", "+        assert getQualifiedSymbolData(\"junit.framework.TestCase\", that.getSourceInfo()) != null;", "+      "]}], "num": 20874}