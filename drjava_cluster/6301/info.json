{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1bbaf2215abfe5a459f9d24adc4c4f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d48853beddfce4f650d6de0a5dbbcbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 449, "signatureBeforeChange": "\r \r   public void forPositivePostfixIncrementExpression(PositivePostfixIncrementExpression that)", "signatureAfterChange": "    public void forPositivePostfixIncrementExpression(PositivePostfixIncrementExpression that)", "diff": ["-\r", "-  public void forPositivePostfixIncrementExpression(PositivePostfixIncrementExpression that) {\r", "-    forPositivePostfixIncrementExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getValue().visit(this);\r", "-    forPositivePostfixIncrementExpressionOnly(that);\r", "-  }\r", "+", "+  public void forPositivePostfixIncrementExpression(PositivePostfixIncrementExpression that) {", "+    forPositivePostfixIncrementExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getValue().visit(this);", "+    forPositivePostfixIncrementExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e5715d09ff2689ca99cb77d21002e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 447, "methodNumberAfterChange": 447, "signatureBeforeChange": "\r \r   public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that)", "signatureAfterChange": "    public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that)", "diff": ["-\r", "-  public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that) {\r", "-    forPositivePrefixIncrementExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getValue().visit(this);\r", "-    forPositivePrefixIncrementExpressionOnly(that);\r", "-  }\r", "+", "+  public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that) {", "+    forPositivePrefixIncrementExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getValue().visit(this);", "+    forPositivePrefixIncrementExpressionOnly(that);", "+  }"]}], "num": 6301}