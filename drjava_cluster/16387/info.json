{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a40e09a78fa5e66e1728de1b63939657", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b540f86d42333b057ff76d0779a9193", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    CompilerError[] errors = _model.getCompileErrors();", "+    //CompilerError[] errors = _model.getCompileErrors();", "+    int numErrors = _model.getNumErrors();", "-    StringBuffer buf = new StringBuffer();", "-    for (int i = 0; i < errors.length; i++) {", "-      buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "-    }", "+    //StringBuffer buf = new StringBuffer();", "+    //for (int i = 0; i < errors.length; i++) {", "+    //  buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "+    //}", "-    assertEquals(name + \"compile errors > 0? errors=\" + buf,", "+    assertEquals(name + \"compile errors > 0? numErrors=\" + numErrors,", "-                 errors.length > 0);", "+                 numErrors > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d128e50ccc9376828d8af5362d4ca83f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected String getCompilerErrorString()", "signatureAfterChange": "   protected String getCompilerErrorString()", "diff": ["-    buf.append(_model.getNumErrors());", "-    CompilerError[] modelErrors = _model.getCompilerErrorsWithoutFiles();", "-    if (modelErrors.length > 0) {", "-      buf.append(\"Without files:\\n\");", "-      for (int i=0; i < modelErrors.length; i++) {", "-        buf.append(modelErrors[i]);", "-        buf.append(\"\\n  \");", "-      }", "-    }", "-    buf.append(\"With files:\\n\");", "-    ListModel docs = _model.getDefinitionsDocuments();", "-    for (int i=0; i < docs.getSize(); i++) {", "-      OpenDefinitionsDocument doc = (OpenDefinitionsDocument) docs.getElementAt(i);", "-      buf.append(doc.getCompilerErrorModel().toString());", "-    }", "+    buf.append(_model.getCompilerErrorModel().toString());"]}], "num": 16387}