{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14eeda5a66c29749cfe3adc5040f9b49", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d620169dd908f1b9840e079d41cb2db6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static AbstractTypeChecker makeTypeChecker(Context ctx)", "signatureAfterChange": "   public static AbstractTypeChecker makeTypeChecker(Context<Type> ctx)", "diff": ["-  public static AbstractTypeChecker makeTypeChecker(Context ctx) {", "-    if(!TigerUtilities.isTigerEnabled()) {", "-      return new TypeChecker14(ctx);", "-    }", "-    else {", "-      return new TypeChecker15(ctx);", "-    }    ", "+  /** Builds an appropriate type checker object. */", "+  public static AbstractTypeChecker makeTypeChecker(Context<Type> ctx) {", "+    if (!TigerUtilities.isTigerEnabled()) return new TypeChecker14(ctx);", "+    return new TypeChecker15(ctx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed09da3fa7984fa3f4f32403c2ead661", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static AbstractTypeChecker makeTypeChecker(Context<Type> ctx)", "signatureAfterChange": "   public static AbstractTypeChecker makeTypeChecker(Context ctx)", "diff": ["-  /** Builds an appropriate type checker object. */", "-  public static AbstractTypeChecker makeTypeChecker(Context<Type> ctx) {", "-    if (!TigerUtilities.isTigerEnabled()) return new TypeChecker14(ctx);", "-    return new TypeChecker15(ctx);", "+   */", "+  public static AbstractTypeChecker makeTypeChecker(Context ctx) {", "+    if(!TigerUtilities.isTigerEnabled()) {", "+      return new TypeChecker14(ctx);", "+    }", "+    else {", "+      return new TypeChecker15(ctx);", "+    }    "]}], "num": 16588}