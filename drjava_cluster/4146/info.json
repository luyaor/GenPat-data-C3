{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c518c4b5868691e33ea298eedc00c6a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98078752da2022439d81d0882daf73dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "f1daacb1f9c546b2b765d3fc6cc41bd412931a0f", "commitAfterChange": "591ec87995880046281596623701cb5a561fc66e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["+    _javadocModel = null;", "+      if (_javadocModel == null && t.javadoc().isAvailable()) { _javadocModel = t.javadoc(); }", "+    if (_javadocModel == null) { _javadocModel = new NoJavadocAvailable(this); }", "-    _javadocModel = new DefaultJavadocModel(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdba05ce8b01b7dbf78bae86f525f648", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/FileFinderTest.java", "commitBeforeChange": "52e75c08548a33d68da52ba945e927947c13bd71", "commitAfterChange": "bc2ff71530c43866f8f779132c88a0e166f012d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testFindFile()", "signatureAfterChange": "      public void testFindFile()", "diff": ["-  public void testFindFile()", "-  {", "+  public void testFindFile() {", "-    try", "-    {", "+    try {", "-    catch(IOException ioe)", "-    {", "+    catch(IOException ioe) {", "+    //When running the ant script for testing this is the relative path to the directory that contains this file", "+    ff.addPath(\"dynamicjava/interpreter\");", "+    ", "+    //Try to find a file that does exist, namely this current file", "+    try {", "+      thisFile = ff.findFile(\"Interpreter.java\");", "+      assertTrue(\"Found This File\", thisFile != null);", "+    }", "+    catch(IOException ioe) {", "+      fail();", "+    }", "+    ", "+    ", "-    try", "-    {", "+    try {", "-    catch(IOException fnf)", "-    {", "+    catch(IOException fnf) {"]}], "num": 4146}