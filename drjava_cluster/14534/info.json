{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a185f541561403e9eade2730a60e1a14", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c2a3577609c0cf49048ebcac87967e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 203, "signatureBeforeChange": "   public static <T> Iterable<T> fourthsOf(Iterable<? extends Quad<?, ?, ?, ? extends T>> iter)", "signatureAfterChange": "   public static <T> Iterable<T> quadFourths(Iterable<? extends Quad<?, ?, ?, ? extends T>> iter)", "diff": ["-  /** @return  An iterable containing the fourth values of the given tuples */", "-  public static <T> Iterable<T> fourthsOf(Iterable<? extends Quad<?, ?, ?, ? extends T>> iter) {", "-    Lambda<Quad<?, ?, ?, ? extends T>, T> getFourth = new Lambda<Quad<?, ?, ?, ? extends T>, T>() {", "-      public T value(Quad<?, ?, ?, ? extends T> arg) { return arg.fourth(); }", "-    };", "-    return new MappedIterable<Quad<?, ?, ?, ? extends T>, T>(iter, getFourth);", "-  }", "+  /** Lazily create an iterable containing the fourth values of the given tuples. */", "+  public static <T> Iterable<T> quadFourths(Iterable<? extends Quad<?, ?, ?, ? extends T>> iter) {", "+    @SuppressWarnings(\"unchecked\") QuadFourth<T> getter = (QuadFourth<T>) QuadFourth.INSTANCE;", "+    return new MappedIterable<Quad<?, ?, ?, ? extends T>, T>(iter, getter);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d33bae1dbbeca06920e61e7477fbb1db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 191, "signatureBeforeChange": "   public static <T> Iterable<T> thirdsOf(Iterable<? extends Triple<?, ?, ? extends T>> iter)", "signatureAfterChange": "   public static <T> Iterable<T> tripleThirds(Iterable<? extends Triple<?, ?, ? extends T>> iter)", "diff": ["-  /** @return  An iterable containing the third values of the given tuples */", "-  public static <T> Iterable<T> thirdsOf(Iterable<? extends Triple<?, ?, ? extends T>> iter) {", "-    Lambda<Triple<?, ?, ? extends T>, T> getThird = new Lambda<Triple<?, ?, ? extends T>, T>() {", "-      public T value(Triple<?, ?, ? extends T> arg) { return arg.third(); }", "-    };", "-    return new MappedIterable<Triple<?, ?, ? extends T>, T>(iter, getThird);", "-  }", "+  /** Lazily create an iterable containing the third values of the given tuples. */", "+  public static <T> Iterable<T> tripleThirds(Iterable<? extends Triple<?, ?, ? extends T>> iter) {", "+    @SuppressWarnings(\"unchecked\") TripleThird<T> getter = (TripleThird<T>) TripleThird.INSTANCE;", "+    return new MappedIterable<Triple<?, ?, ? extends T>, T>(iter, getter);", "+  }"]}], "num": 14534}