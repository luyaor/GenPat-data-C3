{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33706319ed3b83f8da3d3180324529fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58c24200739fcdac7fc5b3899e9411cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ClassAndInterfaceFinder.java", "commitBeforeChange": "816e415ebd3619964409d5b7c5a5d20fa993a7b5", "commitAfterChange": "79e38a44be6c4c379730bdfb5468461330077836", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public String getClassName()", "signatureAfterChange": "   public String getClassName()", "diff": ["-  public String getClassName(){", "-    try{", "+   */", "+  public String getClassName() { return getName(false); }", "-      ", "-      FileReader fr = new FileReader(_file);", "-      StreamTokenizer tokenizer = new StreamTokenizer(fr);", "-      tokenizer.slashSlashComments(true);", "-      tokenizer.slashStarComments(true);", "-      tokenizer.lowerCaseMode(false);", "-      tokenizer.wordChars('_','_');", "-      tokenizer.wordChars('.','.');", "-      ", "-      // find the \"class\" or \"package\" keyword", "-      do{", "-      }while(!foundClassOrInterfaceKeyword(tokenType, tokenizer) && ", "-             !foundPackageKeyword(tokenType, tokenizer));", "-      // find the name of the class or package", "-      do{", "-      }while(!(tokenType == StreamTokenizer.TT_WORD || tokenType == StreamTokenizer.TT_EOF));", "-      ", "-      if(keyword.equals(\"class\")){", "-        // we have just a class defined without a package, so return;", "-        return tokenizer.sval;", "-      }else", "-      if(keyword.equals(\"interface\")){", "-        // we have just an interface without a package, so return;", "-        return tokenizer.sval;", "-      }else", "-      if(keyword.equals(\"package\")){", "-        package_name = tokenizer.sval;", "-      }", "-      do{", "-        tokenType = tokenizer.nextToken();", "-      }while(!foundClassOrInterfaceKeyword(tokenType, tokenizer));", "-      do{", "-        tokenType = tokenizer.nextToken();", "-      }while(!(tokenType == StreamTokenizer.TT_WORD || tokenType == StreamTokenizer.TT_EOF));", "-      if(tokenType != StreamTokenizer.TT_EOF){", "-        if(package_name.length() > 0){", "-          return package_name + \".\" + tokenizer.sval;", "-        }else{", "-          return tokenizer.sval;", "-        }", "-      }else{", "-        return \"\";      ", "-      }", "-    }catch(FileNotFoundException e){", "-      return \"\";", "-    }catch(IOException e){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db8dcd97c2963edaef55caab14201bf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "f1cdd8ab40ec812de32945f859fe4268e830f213", "commitAfterChange": "03b2d2796342d42693cf58d323df575cbd1df053", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   protected static String _testClassCall(String s)", "signatureAfterChange": "   protected static String _testClassCall(String s)", "diff": ["+    StreamTokenizer st = new StreamTokenizer(new StringReader(s));", "+    st.ordinaryChar('\\'');", "+    st.ordinaryChar('\\\\');", "+    st.ordinaryChars('0','9');", "+    st.ordinaryChars('-', '.');", "+    st.wordChars('\\'', '\\'');", "+    st.wordChars('\\\\', '\\\\');", "+    st.wordChars('0', '9');", "+    st.wordChars('-', '.');", "+    ", "+    try {", "+      st.nextToken();             //don't want to get back java", "+      st.nextToken();             //move to second token", "+      String className = st.sval;", "+      StringBuffer mainCall = new StringBuffer(className);", "+      mainCall.append(\".main(new String[]{\");", "+      ", "+      // Add each argument", "+      boolean seenArg = false;", "+      while (st.nextToken() != StreamTokenizer.TT_EOF) {", "+        if ((st.ttype == StreamTokenizer.TT_WORD) ||", "+            (st.ttype == '\"'))", "+        {", "+          if (seenArg) {", "+            mainCall.append(\",\");", "+          }", "+          else {", "+            seenArg = true;", "+          }", "+          mainCall.append(\"\\\"\");", "+          mainCall.append(_escapeQuotesAndBackslashes(st.sval));", "+          mainCall.append(\"\\\"\");", "+        }", "+        else {", "+          throw new IllegalArgumentException(\"Unknown token type: \" + st.ttype);", "+        }", "+      }", "+      mainCall.append(\"});\");", "+      return mainCall.toString();", "+    }", "+    catch (IOException ioe) {", "+      // Can't happen with a StringReader.", "+      throw new UnexpectedException(ioe);", "+    }", "+    ", "+    ", "+    ", "+    ", "+    /*", "+    LinkedList ll = new LinkedList();", "+    if (s.endsWith(\";\"))", "+      s = _deleteSemiColon(s);", "-      argument = argument + \"\\\"\" + (String)(li.next()) + \"\\\"\";", "+      String currArg = (String)li.next();", "+      currArg = _escapeQuotesAndBackslashes(currArg);", "+      ", "+      argument = argument + \"\\\"\" + currArg + \"\\\"\";", "+    */"]}], "num": 23704}