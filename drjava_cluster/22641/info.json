{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebab0466495e88e499107b553bf181af", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ff25d590d27f282991ecb3a9a92abbe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "commitAfterChange": "d73d2cacf79884db0dae830f87bb3795eb5cd6ef", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "   private void _showFindReplaceTab()", "signatureAfterChange": "   private void _showFindReplaceTab(boolean showDetachedWindow)", "diff": ["-  private void _showFindReplaceTab() {", "+  private void _showFindReplaceTab(boolean showDetachedWindow) {", "-    if (! _findReplace.isDisplayed()) {", "-      showTab(_findReplace);", "+    final boolean wasDisplayed = _findReplace.isDisplayed();", "+    showTab(_findReplace, showDetachedWindow);", "+    if (!wasDisplayed) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5021aba927ae67c1128d48799c44be9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "               public void testExceptionsInSymbolTable()", "signatureAfterChange": "               public void testExceptionsInSymbolTable()", "diff": ["-      //make sure that exceptions are being added to symbol table ", "+            ", "+      // Make sure that exceptions are being added to symbol table ", "+      ClassOrInterfaceType exceptionType = new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "+                                                                    \"java.util.prefs.BackingStoreException\", ", "+                                                                    new Type[0]);", "+      ParenthesizedExpressionList expList = new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]);", "+      ", "-                       new BodyItemI[] { ", "-        new ThrowStatement(SourceInfo.NO_INFO, ", "-                           new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "-                                                             new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "-                                                                                      \"java.util.prefs.BackingStoreException\", ", "-                                                                                      new Type[0]),", "-                                                             new ParenthesizedExpressionList(SourceInfo.NO_INFO, ", "-                                                                                             new Expression[0])))});", "-      ", "+                       new BodyItemI[] { new ThrowStatement(SourceInfo.NO_INFO, ", "+                                                            new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "+                                                                                              exceptionType, expList))});", "-                  LanguageLevelConverter.symbolTable.get(\"java.util.prefs.BackingStoreException\")==null);", "+                  LanguageLevelConverter.symbolTable.get(\"java.util.prefs.BackingStoreException\") == null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aaee31c6f7eaa31b13dbbdfed613312", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e6dc20e393a893a5d9ad55d0b971c8d23c8c73e", "commitAfterChange": "94f0a27f33bac9f77c517bf8ab75dfe92afa1ace", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 244, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-//    parsingEnabledListener.optionChanged(new OptionEvent<Boolean>(LIGHTWEIGHT_PARSING_ENABLED, ", "-//                                                                  DrJava.getConfig().getSetting(LIGHTWEIGHT_PARSING_ENABLED).booleanValue()));", "+//    parsingEnabledListener.", "+//      optionChanged(new OptionEvent<Boolean>(LIGHTWEIGHT_PARSING_ENABLED, ", "+//                                             DrJava.getConfig().getSetting(LIGHTWEIGHT_PARSING_ENABLED).booleanValue()));", "-    _recentFileManager = new RecentFileManager(_fileMenu.getItemCount() - 2, _fileMenu, new RecentFileManager.RecentFileAction() { public void actionPerformed(FileOpenSelector selector) { open(selector); } }, OptionConstants.RECENT_FILES);", "+    RecentFileAction fileAct = new RecentFileManager.RecentFileAction() { ", "+      public void actionPerformed(FileOpenSelector selector) { open(selector); }", "+    }; ", "+    _recentFileManager = new RecentFileManager(_fileMenu.getItemCount() - 2, _fileMenu, fileAct, ", "+                                               OptionConstants.RECENT_FILES);", "-    _recentProjectManager = new RecentFileManager(_projectMenu.getItemCount()-2, _projectMenu, new RecentFileManager.RecentFileAction() { public void actionPerformed(FileOpenSelector selector) { openProject(selector); } },  OptionConstants.RECENT_PROJECTS);", "-    ", "+    RecentFileAction projAct = new RecentFileManager.RecentFileAction() { ", "+      public void actionPerformed(FileOpenSelector selector) { openProject(selector); } ", "+    };", "+    _recentProjectManager = new RecentFileManager(_projectMenu.getItemCount() - 2, _projectMenu, projAct, ", "+                                                  OptionConstants.RECENT_PROJECTS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a269a990243f2b72288cacd2cb0be6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "3e39a82bec763ada9f5a933ea34ece6f3d39aa18", "commitAfterChange": "09b2b8159aeebd112917594d3a29e014650ad394", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private PanelTreeNode _createPanel(String t, PanelTreeNode parent)", "signatureAfterChange": "   private PanelTreeNode _createPanel(String t, PanelTreeNode parent)", "diff": ["-    ", "-    _tree.expandPath(new TreePath(ptNode.getPath()));", "+    TreeNode[] pathArray = ptNode.getPath();", "+    TreePath path = new TreePath(pathArray);", "+//     System.out.println(\"path has class \" + pathArray.getClass());", "+//     System.out.println(\"last path compenent has class \" + path.getLastPathComponent().getClass());", "+    _tree.expandPath(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e05f69cd038a3c19d64909b741d33e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void _updateNoErrors() throws BadLocationException", "signatureAfterChange": "     private void _updateNoErrors(boolean haveTestsRun) throws BadLocationException", "diff": ["-    private void _updateNoErrors() throws BadLocationException {", "+    private void _updateNoErrors(boolean haveTestsRun) throws BadLocationException {", "+      ", "+      String msg = (haveTestsRun) ? \"All tests completed successfully.\" : \"\";", "+      ", "-                       \"All tests completed successfully.\",", "+                       msg,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a16e0708400298e228db222fbdea0669", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 422, "methodNumberAfterChange": 422, "signatureBeforeChange": "   private boolean _warnFileOpen(File f)", "signatureAfterChange": "   private boolean _warnFileOpen(File f)", "diff": ["-    if(d == null) return false;", "-    int choice = JOptionPane.showOptionDialog(MainFrame.this,", "-                                              \"This file is already open in DrJava\" + (d.isModifiedSinceSave() ? \" and has been modified\" : \"\") ", "-                                                + \".  Do you wish to overwrite it?\",", "-                                                \"File Open Warning\",", "-                                              JOptionPane.YES_NO_OPTION,", "-                                              JOptionPane.QUESTION_MESSAGE,", "-                                              null,", "-                                              options,", "-                                              options[1]);", "-    if (choice == JOptionPane.YES_OPTION)  return _model.closeFileWithoutPrompt(d);", "+    if (d == null) return false;", "+    boolean dMod = d.isModifiedSinceSave();", "+    String msg = \"This file is already open in DrJava\" + (dMod ? \" and has been modified\" : \"\") + ", "+      \".  Do you wish to overwrite it?\";", "+    int choice = JOptionPane.showOptionDialog(MainFrame.this, msg, \"File Open Warning\", JOptionPane.YES_NO_OPTION,", "+                                              JOptionPane.QUESTION_MESSAGE, null, options, options[1]);", "+    if (choice == JOptionPane.YES_OPTION) return _model.closeFileWithoutPrompt(d);"]}], "num": 22641}