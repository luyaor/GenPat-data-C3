{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b774009b987905cc42417a2414ae2c9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd566de763a4aeb3a1c1acdd26148b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "d933be24919e2ab110f61a795910708e74f868c4", "commitAfterChange": "e58ae584c79a105cf065f585a2d99664f4ef8788", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public TypeData forInterfaceDef(InterfaceDef that)", "signatureAfterChange": "   public TypeData forInterfaceDef(InterfaceDef that)", "diff": ["-", "-    ", "-    //make sure that this does not extend the runnable interface", "-    if (sd.hasInterface(getSymbolData(\"java.lang.Runnable\", that, false, false))) {", "-      _addError(sd.getName() + \" extends the Runnable interface, which is not allowed at any language level\", that);", "-    }", "-", "+//    // Make sure that this does not extend the runnable interface", "+//    if (sd.hasInterface(getSymbolData(\"java.lang.Runnable\", that, false, false))) {", "+//      _addError(sd.getName() + \" extends the Runnable interface, which is not allowed at any language level\", that);", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5942372c9d05668f0ac729bdfa008b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   public void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-   * variables have the same name.*/\r", "-  public void forVariableDeclarationOnly(VariableDeclaration that) {\r", "-    if (!_bodyData.addFinalVars(_variableDeclaration2VariableData(that, _bodyData))) {\r", "-      _addAndIgnoreError(\"You cannot have two variables with the same name.\", that);\r", "-    }\r", "-  }\r", "+   * variables have the same name.*/", "+  public Void forVariableDeclarationOnly(VariableDeclaration that) {", "+    if (!_bodyData.addFinalVars(_variableDeclaration2VariableData(that, _bodyData))) {", "+      _addAndIgnoreError(\"You cannot have two variables with the same name.\", that);", "+    }", "+    return null;", "+  }"]}], "num": 20419}