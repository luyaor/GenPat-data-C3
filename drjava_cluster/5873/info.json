{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c4e342b997aacc7953db6f880c54c1c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36689962f9068ca4f7ac61c17ec57f68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "commitAfterChange": "97f3497fff8964fcbfb5676986b962bdda4668d8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "signatureAfterChange": "   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "diff": ["+    _textArea.addMouseListener(new MouseListener() {", "+      public void mouseClicked(MouseEvent e) {", "+        if ((SwingUtilities.isLeftMouseButton(e)) &&", "+            (e.getClickCount()==2)) {", "+          doubleClicked(e);", "+        }", "+      }", "+      public void mouseEntered(MouseEvent e) { }", "+      public void mouseExited(MouseEvent e) { }", "+      public void mousePressed(MouseEvent e) { }", "+      public void mouseReleased(MouseEvent e) { }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aaa6036ff98b2cfa8687be9c661f59f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "commitAfterChange": "95fa58e53b5e90bde2a488acc329b110ba78e88a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "diff": ["+    int rate = this.getCaret().getBlinkRate();", "+    // Change the caret to one that doesn't remove selection highlighting when focus is lost.", "+    // Fixes bug #788295 \"No highlight when find/replace switches docs\".", "+    this.setCaret(new DefaultCaret() {", "+      public void focusLost(FocusEvent e) {        ", "+        setVisible(false);", "+      }", "+    });", "+    this.getCaret().setBlinkRate(rate);", "+    "]}], "num": 5873}