{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5de851e0faf9c7da29c78803943f7aca", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d96c38505f1149d99585285a935c8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "diff": ["+          _log.log(\"\\nCONTINUATIONS AFTER PHASE 1 PROCESSING OF \" + f + \"\\n\\n\" + llv.continuations + \"\\n\");", "+          _log.log(\"\\nERRORS AFTER PHASE 1 PROCESSING OF \" + f + \"\\n\\n\" + llv.errors + \"\\n\");", "+//          if (! llv.errors.isEmpty()) Utilities.show(\"errors after \" + f + \"\\n\" + llv.errors);", "+//    System.err.println(\"Resolving continuations \" + continuations);", "+//        System.err.println(\"Attempting to resolve \" + className + \"\\n  Result = \" + returnedSd);", "-          LanguageLevelVisitor.errors.add(new Pair<String, JExpressionIF>(\"Could not resolve \" + className, ", "+          LanguageLevelVisitor.errors.add(new Pair<String, JExpressionIF>(\"Converter could not resolve \" + className, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ded0f2d269cd5755a313dd98fdd3e71", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistry.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    private boolean _createCompiler(String name, LinkedList<CompilerInterface> availableCompilers) throws Throwable", "signatureAfterChange": "    private boolean _createCompiler(String name, LinkedList<CompilerInterface> availableCompilers) throws Throwable", "diff": ["+    _log.log(\"CompilerRegistry._createCompiler(\" + name + \", \" + availableCompilers +\") called\");", "-      //DrJava.consoleOut().println(\"ok.\");", "+      _log.log(\"Compiler \" + this + \" is available: added to compile list\");", "-    else return false;", "-      //DrJava.consoleOut().println(\"not available.\");", "+    else {", "+      _log.log(\"Compiler \" + this + \" is NOT available.\");", "+      return false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ac00a93185f4f2b73d9dff3900215c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void dispose() throws RemoteException", "signatureAfterChange": "   public void dispose() throws RemoteException", "diff": ["+    _log.log(this + \".dispose() called; slaveRemote is \" + _slave);", "+    if (_startupInProgress) _log.log(this + \".dispose() is KILLing startup in process; dying slave reference does not yet exist\");", "-    if (dyingSlave != null) dyingSlave.quit();  // unsynchronized; may hasten the death of dyingSlave", "+    if (dyingSlave != null) { ", "+      _log.log(this + \".dispose() QUITing \" + dyingSlave);", "+      dyingSlave.quit();  // unsynchronized; may hasten the death of dyingSlave", "+    }"]}], "num": 29900}