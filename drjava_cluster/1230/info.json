{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "414ea367c5129497775c51702380a6f2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513ad0201bab2c365c3e7aca81f632da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "commitAfterChange": "a0db040e26a6b2489480a68886f9804fd65f5264", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "signatureAfterChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "diff": ["-    // new ScrollableDialog(null, \"JUnitManager.findTestClasses invoked\", \"Candidate classes are = \" + classNames, \"files = \" + files).show();", "+//    new ScrollableDialog(null, \"JUnitManager.findTestClasses invoked\", \"Candidate classes are = \" + classNames, \"files = \" + files).show();", "-        // new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "+//        new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "-            // new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "+//            new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "-          _jmc.classFileError(new ClassFileError(files.get(i).getCanonicalPath(), e));", "+//          new ScrollableDialog(null, \"LinkageError(\" + e + \") encountered in JUnitTestManager\", \"\", \"\").show();", "+          _jmc.classFileError(new ClassFileError(cName, files.get(i).getCanonicalPath(), e));", "-    // new ScrollableDialog(null, \"TestClassNames are: \" + _testClassNames, \"\", \"\").show();", "+//    new ScrollableDialog(null, \"TestClassNames are: \" + _testClassNames, \"\", \"\").show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a09218e9863b5a496d91bff70f2949", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "194b7a090e0ed824f08942e6e6efd976dc158404", "commitAfterChange": "c0f3fda00a0dfdfc7ba1813b053360e729d2a0e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "signatureAfterChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "diff": ["-    _testRunner = new JUnitTestRunner(_jmc);", "+    _testRunner = makeRunner();", "-   //new ScrollableDialog(null, \"JUnitManager.findTestClasses invoked\", \"Candidate classes are = \" + classNames, \"files = \" + files).show();", "-    ", "-    try {", "-      for (i = 0; i < classNames.size(); i++) {", "-        String cName = classNames.get(i);", "-       //new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "-        try {", "-          if (_isTestCase(cName)) {", "-            //new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "-            _testClassNames.add(cName);", "-            _testFiles.add(files.get(i));", "-            _suite.addTest(_testRunner.getTest(cName));", "-          }", "-        }", "-        catch(LinkageError e) { ", "-          //debug.log(e);", "-          _jmc.classFileError(new ClassFileError(cName, files.get(i).getCanonicalPath(), e));", "+    for (Pair<String, File> pair : IterUtil.zip(classNames, files)) {", "+      String cName = pair.first();", "+      try {", "+        if (_isJUnitTest(_testRunner.loadPossibleTest(cName))) {", "+          _testClassNames.add(cName);", "+          _testFiles.add(pair.second());", "+          _suite.addTest(_testRunner.getTest(cName));", "+      catch (ClassNotFoundException e) { error.log(e); }", "+      catch(LinkageError e) {", "+        //debug.log(e);", "+        String path = IOUtil.attemptAbsoluteFile(pair.second()).getPath();", "+        _jmc.classFileError(new ClassFileError(cName, path, e));", "+      }", "-    catch(IOException e) { throw new UnexpectedException(e); }", "-    //new ScrollableDialog(null, \"TestClassNames are: \" + _testClassNames, \"\", \"\").show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea63b290b1440fd65547ea2fddef19a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "310f2e2e5bd03b1be3d582b8bb080b976b35e862", "commitAfterChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "signatureAfterChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "diff": ["-    for (int i = 0; i < classNames.size(); i++) {", "-      String cName = classNames.get(i);", "-      // new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "-      if (_isTestCase(cName)) {", "-        // new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "-        _testClassNames.add(cName);", "-        _testFiles.add(files.get(i));", "-        _suite.addTest(_testRunner.getTest(cName));", "+    int i = 0;", "+    try {", "+      for (i = 0; i < classNames.size(); i++) {", "+        String cName = classNames.get(i);", "+        // new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "+        try {", "+          if (_isTestCase(cName)) {", "+            // new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "+            _testClassNames.add(cName);", "+            _testFiles.add(files.get(i));", "+            _suite.addTest(_testRunner.getTest(cName));", "+          }", "+        }", "+        catch(LinkageError e) { ", "+          _jmc.classFileError(new ClassFileError(files.get(i).getCanonicalPath(), e));", "+        }", "-              ", "+    catch(IOException e) { throw new UnexpectedException(e); }"]}], "num": 1230}