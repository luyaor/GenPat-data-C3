{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f76dcd821d577362a3e6df6342aad032", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e9d572383e7a22b0878cac995c34635", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "d3bb1d993ed8ffd95b42e820e37d6479998a9605", "commitAfterChange": "e9864b9d4feda0aaaa7d286763a6fb9bc57982f2", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Vector<DebugStackData> getCurrentStackFrameData() throws DebugException", "signatureAfterChange": "   public ArrayList<DebugStackData> getCurrentStackFrameData() throws DebugException", "diff": ["-  public /* synchronized */ Vector<DebugStackData> getCurrentStackFrameData() throws DebugException {", "+  public /* synchronized */ ArrayList<DebugStackData> getCurrentStackFrameData() throws DebugException {", "-    if (! isReady()) return new Vector<DebugStackData>();", "+    if (! isReady()) return new ArrayList<DebugStackData>();", "-      Vector<DebugStackData> frames = new Vector<DebugStackData>();", "+      ArrayList<DebugStackData> frames = new ArrayList<DebugStackData>();", "-      return new Vector<DebugStackData>();", "+      return new ArrayList<DebugStackData>();", "-      return new Vector<DebugStackData>();", "+      return new ArrayList<DebugStackData>();", "-      return new Vector<DebugStackData>();", "+      return new ArrayList<DebugStackData>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a812279752412072b5dd3320d524d75e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public synchronized Vector<DebugStackData> getCurrentStackFrameData()", "signatureAfterChange": "   public synchronized Vector<DebugStackData> getCurrentStackFrameData()     throws DebugException", "diff": ["-  public synchronized Vector<DebugStackData> getCurrentStackFrameData() {", "-    if (!isReady()) {", "-      return null;", "+  public synchronized Vector<DebugStackData> getCurrentStackFrameData()", "+    throws DebugException", "+  {", "+    _ensureReady();", "+    ", "+    if (_runningThread != null || _suspendedThreads.size() <= 0) {", "+      throw new DebugException(\"No suspended thread to obtain stack frames.\");", "-    if(_runningThread != null || _suspendedThreads.size() <= 0)", "-    {", "-      return new Vector<DebugStackData>();", "-    }", "-    ", "-    Iterator iter = null;", "-      iter = _suspendedThreads.peek().frames().iterator();", "+      ThreadReference thread = _suspendedThreads.peek();", "+      Iterator iter = thread.frames().iterator();", "-      return null;", "+      throw new DebugException(\"Unable to obtain stack frame: \" + itse);"]}], "num": 8013}