{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7f17821251ceae890fdf2e79bb17cc2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b020a3fc156e379460258684e835028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/SystemOutLog.java", "commitBeforeChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "commitAfterChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected synchronized void write(Date time, Thread thread, StackTraceElement location,                                      SizedIterable<? extends String> messages)", "signatureAfterChange": "      protected synchronized void write(Date time, Thread thread, StackTraceElement location,                                      SizedIterable<? extends String> messages)", "diff": ["-    // We create the writer on each invocation so that we can reflect changes to System.out (via System.setOut())", "-    BufferedWriter w = new BufferedWriter(new OutputStreamWriter(System.out));", "-    writeText(w, time, thread, location, messages);", "+    // Make sure we reflect changes to System.out (via System.setOut())", "+    OutputStream out = System.out;", "+    if (_currentOutput != out) { switchStream(out); _currentOutput = out; }", "+    super.write(time, thread, location, messages);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84a2c6b31fe1c9802e808bb2a4d5887", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/SystemErrLog.java", "commitBeforeChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "commitAfterChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected synchronized void write(Date time, Thread thread, StackTraceElement location,                                      SizedIterable<? extends String> messages)", "signatureAfterChange": "      protected synchronized void write(Date time, Thread thread, StackTraceElement location,                                      SizedIterable<? extends String> messages)", "diff": ["-    // We create the writer on each invocation so that we can reflect changes to System.err (via System.setErr())", "-    BufferedWriter w = new BufferedWriter(new OutputStreamWriter(System.err));", "-    writeText(w, time, thread, location, messages);", "+    // Make sure we reflect changes to System.err (via System.setErr())", "+    OutputStream err = System.err;", "+    if (_currentOutput != err) { switchStream(err); _currentOutput = err; }", "+    super.write(time, thread, location, messages);"]}], "num": 24334}