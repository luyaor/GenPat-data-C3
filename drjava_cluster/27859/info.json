{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4ef66b6312b027f6156f61f330185b7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98a78e81dc61ae445166bc2ec16dad6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "512f2d01a44aebe9e820ea2b6904a7d9ee6beac7", "commitAfterChange": "7f5ff64d986e80db8fa3ceeb1048b991af6a4ea0", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 144, "signatureBeforeChange": "   public static List<JavaAPIListEntry> _generateJavaAPIList(String base,                                                             String stripPrefix,                                                             String suffix)", "signatureAfterChange": "   public static List<JavaAPIListEntry> _generateJavaAPIList(String base,                                                             String stripPrefix,                                                             URL url)", "diff": ["+  /** Generate Java API class list. */", "+  public static List<JavaAPIListEntry> _generateJavaAPIList(String base,", "+                                                            String stripPrefix,", "+                                                            URL url) {", "+    // TODO: put this in an AsyncTask", "+    List<JavaAPIListEntry> l = new ArrayList<JavaAPIListEntry>();", "-      URL url = MainFrame.class.getResource(\"/edu/rice/cs/drjava/docs/javaapi\"+suffix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e570f7ee579c5b1df0ec26095158d70c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void registerConstructorArguments(String             sig, \t\t\t\t\t     List               params, \t\t\t\t\t     List               exprs, \t\t\t\t\t     ImportationManager im)", "signatureAfterChange": "   public void registerConstructorArguments(String                sig,                                            List<FormalParameter> params,                                            List<Expression>      exprs,                                            ImportationManager    im)", "diff": ["-     */", "-    public void registerConstructorArguments(String             sig,", "-\t\t\t\t\t     List               params,", "-\t\t\t\t\t     List               exprs,", "-\t\t\t\t\t     ImportationManager im) {", "-\tlocalConstructorParameters.add(sig);", "-\tconstructorParameters.put(sig, new ConstructorParametersDescriptor", "-\t\t\t\t  (params, exprs, im));", "+   */", "+  public void registerConstructorArguments(String                sig,", "+                                           List<FormalParameter> params,", "+                                           List<Expression>      exprs,", "+                                           ImportationManager    im) {", "+    localConstructorParameters.add(sig);", "+    constructorParameters.put(sig, ", "+                              new ConstructorParametersDescriptor(params, exprs, im));", "+  }"]}], "num": 27859}