{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13be1a9cf1e79a0a7f2c68fed5b836f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ec17a3d9b5a20d46ea61fc2ae67a6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 57, "signatureBeforeChange": "      synchronized void currThreadSet(final DebugThreadData thread)", "signatureAfterChange": "      synchronized void currThreadSet(final DebugThreadData thread)", "diff": ["+  synchronized void currThreadSet(final DebugThreadData thread) {", "+    _model.printDebugMessage(\"The current thread has been set.\");", "+    notifyListeners(new EventNotifier() {", "+      public void notifyListener(DebugListener l) {", "+        l.currThreadSet(thread);", "+      }", "+    });", "+  }", "-  ", "-  synchronized void currThreadSet(final DebugThreadData thread) {", "-    _model.printDebugMessage(\"The current thread is now \" + thread.getName() + \".\");", "-    notifyListeners(new EventNotifier() {", "-      public void notifyListener(DebugListener l) {", "-        l.currThreadSet(thread);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aedfa41ce6098e600e71a6ebc30d2039", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void newFile()", "signatureAfterChange": "   public OpenDefinitionsDocument newFile()", "diff": ["+  public OpenDefinitionsDocument newFile() {", "+    OpenDefinitionsDocument doc = _createOpenDefinitionsDocument();", "+    doc.getDocument().setFile(null);", "+    _definitionsDocs.add(doc);", "+    _notifyListeners(new EventNotifier() {", "+      public void notifyListener(GlobalModelListener l) {", "+        l.newFileCreated();", "+      }", "+    });", "+    return doc;", "-   */", "-  public void newFile() {", "-    boolean canCreateNew = canAbandonFile();", "-    if (canCreateNew) {", "-      _definitionsDoc = (DefinitionsDocument)_editorKit.createDefaultDocument();", "-      _definitionsDoc.setFile(null);", "-      _notifyListeners(new EventNotifier() {", "-        public void notifyListener(GlobalModelListener l) {", "-          l.newFileCreated();", "-        }", "-      });", "-    }", "-  }"]}], "num": 26163}