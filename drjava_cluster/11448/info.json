{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6db47089b56613ef5ade8758fe1d3365", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1acdabafd7d4f8257a9f0b02446224b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/RemoteControlClient.java", "commitBeforeChange": "ec122c42b0ab3c99a1554c09645af9cf8be61ec1", "commitAfterChange": "6db37f3ba52ce47e8942cb0806d8019c4f81cf93", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static boolean isServerRunning()", "signatureAfterChange": "   public static synchronized boolean isServerRunning()", "diff": ["-  public static boolean isServerRunning() { return _serverRunning; }", "+  public static synchronized boolean isServerRunning() {", "+    if (_serverRunning==null) {", "+      try {", "+        openFile(null);", "+      }", "+      catch(IOException e) { _serverRunning = false; }", "+    }", "+    return _serverRunning;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53edaea34349c01c46daa065a6aa4771", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StickyClassLoader.java", "commitBeforeChange": "1315d6a0a86dff003075278cfb7be802b0cc3b67", "commitAfterChange": "8eab9615a55806850da177101ab342e53c8cc842", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected Class loadClass(String name, boolean resolve)    throws ClassNotFoundException", "signatureAfterChange": "   protected Class loadClass(String name, boolean resolve)    throws ClassNotFoundException", "diff": ["+    // check if it's already loaded!", "+    clazz = findLoadedClass(name);", "+    if (clazz != null) {", "+      return clazz;", "+    }", "-        clazz = defineClass(name, data, 0, data.length);", "+        try {", "+          clazz = defineClass(name, data, 0, data.length);", "+        }", "+        catch (Error t) {", "+          /*", "+          System.err.println(\"Sticky \" + this + \" error when loading \" + name +", "+                             \" with resolve=\" + resolve + \":\");", "+          */", "+          //t.printStackTrace();", "+          throw t;", "+        }", "+    /*", "+    System.out.println(\"Sticky loaded OK: \" + name + \" \" + clazz + \" loader=\" +", "+                       clazz.getClassLoader());", "+    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2531c3ee5ae28c39b8a425e6c7e06d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "commitAfterChange": "ec06880aa408b928b2f252538b208a76154d8334", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   protected void readText(final boolean finish)", "signatureAfterChange": "   protected void readText(final boolean finish)", "diff": ["-    if (((_is!=null) || (_erris!=null)) &&", "-        (_updateNowButton.isEnabled())) {", "-      _updateNowButton.setEnabled(false);", "+    if (((_is!=null) || (_erris!=null))) {", "-        _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "+        if (_p!=null) {", "+          try {", "+            _p.exitValue();", "+            // if we get here, process has finished, and we don't display the I/O exception", "+          }", "+          catch(IllegalThreadStateException e) {", "+            // process has NOT finished yet, display the I/O exception", "+            _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "+          }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a73e512e102e29f46f11e231944f0073", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "6310666c1b25e3b678fa3161d36dc614550bad4a", "commitAfterChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void abortActionPerformed(ActionEvent e)", "signatureAfterChange": "   protected void abortActionPerformed(ActionEvent e)", "diff": ["+    if (_erris!=null) {", "+      try {", "+        _erris.close();", "+      }", "+      catch(IOException ioe) { /* ignore, just stop polling */ }", "+      _erris = null;", "+      updateButtons();", "+    }"]}], "num": 11448}