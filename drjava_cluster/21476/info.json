{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e0cca92640de7d4d49a416a160ee744", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0efea1ca6999f65c9a96ed322957eea5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "e98ead987f93ce7eef0e5e0a4057a38d655b464c", "commitAfterChange": "59c9b85f25410de1bbe931e4541c159e667d5d41", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void notifyOfCollapse(int leftPos, int rightPos, Node<T> rightPoint)", "signatureAfterChange": "     private void notifyOfCollapse(int leftPos, int rightPos, Node<T> rightPoint)", "diff": ["+      /*", "+    */", "+      for (Iterator listener : ModelList.this._listeners) {", "+        if ( listener._pos <= leftPos ) {", "+          // do nothing", "+        }", "+        else if (( listener._pos > leftPos ) && ( listener._pos <= rightPos )) {", "+          listener._pos = leftPos + 1;", "+          listener._point = rightPoint;", "+        }", "+        else { // next._pos > rightPos", "+          listener._pos -= (rightPos - leftPos - 1);", "+        }", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5deb9d7ef54bffa8306ab2a4d6a2a989", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "e98ead987f93ce7eef0e5e0a4057a38d655b464c", "commitAfterChange": "59c9b85f25410de1bbe931e4541c159e667d5d41", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void notifyOfRemove(int pos, Node<T> point)", "signatureAfterChange": "     private void notifyOfRemove(int pos, Node<T> point)", "diff": ["-      java.util.Iterator<Iterator> iter =", "+      /*", "+       java.util.Iterator<Iterator> iter =", "+      */", "+      for (Iterator listener : ModelList.this._listeners) {", "+        if ( listener._pos < pos ) {", "+          // do nothing", "+        }", "+        else if ( listener._pos == pos ) {", "+          listener._point = point;", "+        }", "+        else { // next._pos > pos", "+          listener._pos -= 1;", "+        }", "+      }"]}], "num": 21476}