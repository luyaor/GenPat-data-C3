{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "722fccb764876b5e0be1afbf231e7e0b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015f4e7ad2168ed3acf722c28eb7ae3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticMethodCall.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setMethodType(ReferenceType t)", "signatureAfterChange": "   public void setMethodType(ReferenceTypeName t)", "diff": ["-  public void setMethodType(ReferenceType t) {", "+  public void setMethodType(ReferenceTypeName t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02a20a9f112d006ab97e0e7de7d0bfc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 109, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0656300f7a9b8694199896b64d6c8fe8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 169, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0758529b7f5a49897638df086ec3bade", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<? extends ReferenceType> excepts,                                 ConstructorInvocation eci, List<Node> stmts)", "signatureAfterChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorInvocation eci, List<Node> stmts)", "diff": ["-                                List<FormalParameter> params, List<? extends ReferenceType> excepts,", "+                                List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4268ca5d78ebb7f46c105a6edc7e39", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticFieldAccess.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StaticFieldAccess(ReferenceType typ, String fln,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public StaticFieldAccess(ReferenceTypeName typ, String fln,                            String fn, int bl, int bc, int el, int ec)", "diff": ["-  public StaticFieldAccess(ReferenceType typ, String fln,", "+  public StaticFieldAccess(ReferenceTypeName typ, String fln,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11cbcbdabcf220dd4b7c4a1df1ec94f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "   private void visitExprList(List<Expression> l)", "signatureAfterChange": "   private void visitExprList(List<Expression> l)", "diff": ["-        if (o instanceof ReferenceType) {", "+        if (o instanceof ReferenceTypeName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1850924f2a1e704f3a90cae7bf76d483", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public StaticContext(Interpreter i, Class<?> c, ImportationManager im)", "signatureAfterChange": "   public StaticContext(Interpreter i, Class<?> c, ImportationManager im)", "diff": ["-    defaultQualifier   = new ReferenceType(c.getName());", "+    defaultQualifier   = new ReferenceTypeName(c.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19f2a40c62eea8784a341f5f9fa6c892", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticFieldAccess.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public StaticFieldAccess(ReferenceType typ, String fln)", "signatureAfterChange": "   public StaticFieldAccess(ReferenceTypeName typ, String fln)", "diff": ["-  public StaticFieldAccess(ReferenceType typ, String fln) {", "+  public StaticFieldAccess(ReferenceTypeName typ, String fln) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27886d5de2375dc503cfed1c4e4e2528", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "       public void testBlock() throws ParseException", "signatureAfterChange": "       public void testBlock() throws ParseException", "diff": ["-    stmts.add(new SimpleAssignExpression(new QualifiedName(idnt2),new SimpleAllocation(new ReferenceType(\"Vector\"), null)));", "+    stmts.add(new SimpleAssignExpression(new QualifiedName(idnt2),new SimpleAllocation(new ReferenceTypeName(\"Vector\"), null)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d94194466ccc05080427a584da8ed19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/PolymorphicConstructorDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                       List<FormalParameter> params, List<? extends ReferenceType> excepts,                                       ConstructorInvocation eci, List<Node> stmts,                                       String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "signatureAfterChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                       List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                       ConstructorInvocation eci, List<Node> stmts,                                       String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "diff": ["-                                      List<FormalParameter> params, List<? extends ReferenceType> excepts,", "+                                      List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e57f54149879a1a076b8587da5f4b18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "      public void testQualifiedNameClassField() throws ParseException", "signatureAfterChange": "      public void testQualifiedNameClassField() throws ParseException", "diff": ["-    expectedAST.add( new TypeExpression(new ReferenceType(\"java.awt.event.ActionEvent\")));", "+    expectedAST.add( new TypeExpression(new ReferenceTypeName(\"java.awt.event.ActionEvent\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3243e1cff7e81e8f527ac5b11e7055b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 183, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return isFixedCollection(_c); }", "+    public boolean hasFixedSize() { return isFixedSizeCollection(_c); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c7c07d2c2de6f572903ee29a17f025", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 145, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3813eeeff0f9a6ae87a0cf776d947959", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TypeExpression.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setType(ReferenceType t)", "signatureAfterChange": "   public void setType(ReferenceTypeName t)", "diff": ["-  public void setType(ReferenceType t) {", "+  public void setType(ReferenceTypeName t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "411b099b5b91d4169dd54ca05e6255ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/visitor/VisitorObject.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public T visit(ReferenceType node)", "signatureAfterChange": "   public T visit(ReferenceTypeName node)", "diff": ["-  public T visit(ReferenceType node) {", "+  public T visit(ReferenceTypeName node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420127bbb7f44ae8bb9de6432bf66926", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 73, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b50eea8c4678554f62b43a859043e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "     protected void visitUnaryExpression(UnaryExpression node)", "signatureAfterChange": "     protected void visitUnaryExpression(UnaryExpression node)", "diff": ["-        if (o instanceof ReferenceType) {", "+        if (o instanceof ReferenceTypeName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "489f693437b9441c1827b9d9ec7a88d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticFieldAccess.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public ReferenceType getFieldType()", "signatureAfterChange": "   public ReferenceTypeName getFieldType()", "diff": ["-  public ReferenceType getFieldType() {", "+  public ReferenceTypeName getFieldType() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d3f42ab135ea57a623ecb4e48499af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/TypeParameter.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public List<ReferenceType> getInterfaceBounds()", "signatureAfterChange": "    public List<ReferenceTypeName> getInterfaceBounds()", "diff": ["-  public List<ReferenceType> getInterfaceBounds() { return _interfaceBounds; }", "+  public List<ReferenceTypeName> getInterfaceBounds() { return _interfaceBounds; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b27b212e9350f0f1e48f554aaf7cb29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/visitor/Visitor.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   T visit(ReferenceType node);", "signatureAfterChange": "   T visit(ReferenceTypeName node);", "diff": ["-  T visit(ReferenceType node);", "+  T visit(ReferenceTypeName node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "624642d3205e3ca7025ad6166d1a8d49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      public void testThrowStatement() throws ParseException", "signatureAfterChange": "      public void testThrowStatement() throws ParseException", "diff": ["-    expectedAST.add(new ThrowStatement(new SimpleAllocation(new ReferenceType(\"RuntimeException\"), null)));", "+    expectedAST.add(new ThrowStatement(new SimpleAllocation(new ReferenceTypeName(\"RuntimeException\"), null)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a8200ef611387df37e80a41220222f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 85, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640f4bacb97bdb3207e71864a17b680d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "      public void testDotClass() throws ParseException", "signatureAfterChange": "      public void testDotClass() throws ParseException", "diff": ["-    expectedAST.add(new TypeExpression(new ReferenceType(\"List\")));", "+    expectedAST.add(new TypeExpression(new ReferenceTypeName(\"List\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9ea3118dd10c3d4f5ca4fc8b94641b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "      public void testInstanceOfExpression() throws ParseException", "signatureAfterChange": "      public void testInstanceOfExpression() throws ParseException", "diff": ["-    expectedAST.add(new InstanceOfExpression(new QualifiedName(idnt), new ReferenceType(\"String\")));", "+    expectedAST.add(new InstanceOfExpression(new QualifiedName(idnt), new ReferenceTypeName(\"String\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "700139f1bee68a286127d6dd3c581d7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public Class<?> visit(ReferenceType node)", "signatureAfterChange": "   public Class<?> visit(ReferenceTypeName node)", "diff": ["-  public Class<?> visit(ReferenceType node) {", "+  public Class<?> visit(ReferenceTypeName node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b144963a7edc1c2d19af5c4dfb78760", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 133, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1aa02bef6e22879c41b9e47935e9d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public Object visit(ObjectFieldAccess node)", "signatureAfterChange": "     public Object visit(ObjectFieldAccess node)", "diff": ["-          Node result =  new StaticFieldAccess((ReferenceType)o,", "+          Node result =  new StaticFieldAccess((ReferenceTypeName)o,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5e6fe1e8fe271f51ec8e799876bfe8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "      public void testInnerInstanceAllocationExpression() throws ParseException", "signatureAfterChange": "      public void testInnerInstanceAllocationExpression() throws ParseException", "diff": ["-    expectedAST.add(new InnerAllocation(new QualifiedName(idnt), new ReferenceType(\"Iterator\"), args)); ", "+    expectedAST.add(new InnerAllocation(new QualifiedName(idnt), new ReferenceTypeName(\"Iterator\"), args)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f8bab117ca30e7998226b33b7db441", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TypeVisitor.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public ClassInfo visit(ReferenceType node)", "signatureAfterChange": "   public ClassInfo visit(ReferenceTypeName node)", "diff": ["-  public ClassInfo visit(ReferenceType node) {", "+  public ClassInfo visit(ReferenceTypeName node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8befcb663c80ffcadaeea94129053eb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body)", "signatureAfterChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body)", "diff": ["-  public InterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body) {", "+  public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e4aa4556a3ce2d72fceb8e0f0c1c42c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "      public void testMethodInvocation() throws ParseException", "signatureAfterChange": "      public void testMethodInvocation() throws ParseException", "diff": ["-    args.add(new SimpleAllocation(new ReferenceType(\"Object\"), null));", "+    args.add(new SimpleAllocation(new ReferenceTypeName(\"Object\"), null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eded1cd3ea63a408f78ebe1be0b3bcd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 97, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90823c45c4b546203e5a60dcc90910fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Object visit(ReferenceType node)", "signatureAfterChange": "     public Object visit(ReferenceTypeName node)", "diff": ["-    public Object visit(ReferenceType node) {", "+    public Object visit(ReferenceTypeName node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90dc7c454a07127a8eda8e52633b19a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker15.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void checkGenericReferenceType(ReferenceType node)", "signatureAfterChange": "     protected void checkGenericReferenceType(ReferenceTypeName node)", "diff": ["-  protected void checkGenericReferenceType(ReferenceType node) {", "+  protected void checkGenericReferenceType(ReferenceTypeName node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "958dcb03c3d6818296b93eec3b7019b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/error/PossibleExecutionError.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public PossibleExecutionError(String s, Node n, ReferenceType rt)", "signatureAfterChange": "   public PossibleExecutionError(String s, Node n, ReferenceTypeName rt)", "diff": ["-  public PossibleExecutionError(String s, Node n, ReferenceType rt) {", "+  public PossibleExecutionError(String s, Node n, ReferenceTypeName rt) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9609ab0ba7a5e519fe810cdff20f0e5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Method lookupMethod(Node prefix, String mname, Class<?>[] params)     throws NoSuchMethodException", "signatureAfterChange": "   public Method lookupMethod(Node prefix, String mname, Class<?>[] params)     throws NoSuchMethodException", "diff": ["-      if ((prefix instanceof ReferenceType) && c == declaringClass) {", "+      if ((prefix instanceof ReferenceTypeName) && c == declaringClass) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fd2d5b72ad8e73f74b5a37c8dd58951", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticFieldAccess.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setFieldType(ReferenceType t)", "signatureAfterChange": "   public void setFieldType(ReferenceTypeName t)", "diff": ["-  public void setFieldType(ReferenceType t) {", "+  public void setFieldType(ReferenceTypeName t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ace198fb69906e2e33446d95cca596", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     protected abstract void checkGenericReferenceType(ReferenceType node);", "signatureAfterChange": "     protected abstract void checkGenericReferenceType(ReferenceTypeName node);", "diff": ["-  protected abstract void checkGenericReferenceType(ReferenceType node);", "+  protected abstract void checkGenericReferenceType(ReferenceTypeName node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac28b17ed2ecaa3fa2aab745244e7d1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/error/PossibleExecutionError.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public ReferenceType getReferenceType()", "signatureAfterChange": "      public ReferenceTypeName getReferenceType()", "diff": ["-  public ReferenceType getReferenceType() { return referenceType; }", "+  public ReferenceTypeName getReferenceType() { return referenceType; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bfbc9b717b17250ee7ee23f834e76e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testLabeledStatement() throws ParseException", "signatureAfterChange": "      public void testLabeledStatement() throws ParseException", "diff": ["-    expectedAST.add(new LabeledStatement(\"v\", new SimpleAllocation(new ReferenceType(\"Object\"), null)));", "+    expectedAST.add(new LabeledStatement(\"v\", new SimpleAllocation(new ReferenceTypeName(\"Object\"), null)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3f47a81d47c1eeac452fbd54b96d1c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public EnumDeclaration(int flags, String name, List<? extends ReferenceType> impl, EnumBody body)", "signatureAfterChange": "   public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body)", "diff": ["-  public EnumDeclaration(int flags, String name, List<? extends ReferenceType> impl, EnumBody body) {", "+  public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c609bcd82abcb44359e9ba7d8d58fe21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericInterfaceDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body, TypeParameter[] typeParams)", "signatureAfterChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body, TypeParameter[] typeParams)", "diff": ["-  public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body, TypeParameter[] typeParams) {", "+  public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body, TypeParameter[] typeParams) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c616439523c0af341173437f7050b14c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "      public void testInstanceAllocationExpression() throws ParseException", "signatureAfterChange": "      public void testInstanceAllocationExpression() throws ParseException", "diff": ["-    expectedAST.add(new SimpleAllocation(new ReferenceType(\"C\"), args)); ", "+    expectedAST.add(new SimpleAllocation(new ReferenceTypeName(\"C\"), args)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c120856d1cf4950cb858f6ef0236e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "     protected void checkList(List<Expression> l, String s, Node n)", "signatureAfterChange": "     protected void checkList(List<Expression> l, String s, Node n)", "diff": ["-          if (o instanceof ReferenceType) {", "+          if (o instanceof ReferenceTypeName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2b885049eef99f7ffa105cd09e9e56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/PolymorphicConstructorDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                       List<FormalParameter> params, List<? extends ReferenceType> excepts,                                        ConstructorInvocation eci, List<Node> stmts, TypeParameter[] typeParams)", "signatureAfterChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                       List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                        ConstructorInvocation eci, List<Node> stmts, TypeParameter[] typeParams)", "diff": ["-                                      List<FormalParameter> params, List<? extends ReferenceType> excepts, ", "+                                      List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd18e7901b2f7425694b47cfd7bac9bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/TypeParameter.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public ReferenceType getBound()", "signatureAfterChange": "    public ReferenceTypeName getBound()", "diff": ["-  public ReferenceType getBound() { return _bound; }", "+  public ReferenceTypeName getBound() { return _bound; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdff80e4f631e25298cdc36cd8fd8e1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 121, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3af0f8c9a27b884cbd2c8043671b6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StaticContext(Interpreter i, Class<?> c, Set<AbstractVariable> fp)", "signatureAfterChange": "   public StaticContext(Interpreter i, Class<?> c, Set<AbstractVariable> fp)", "diff": ["-    defaultQualifier = new ReferenceType(c.getName());", "+    defaultQualifier = new ReferenceTypeName(c.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24456a327dbf51602d3bb9d4390317e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericInterfaceDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body,                                      String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "signatureAfterChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                                      String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "diff": ["-  public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body,", "+  public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a94f256d6f26fc364c4831a4957be8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body,                               String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                               String fn, int bl, int bc, int el, int ec)", "diff": ["-  public InterfaceDeclaration(int flags, String name, List<? extends ReferenceType> impl, List<Node> body,", "+  public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3bdb1a83c113e716740dbd3a23dfcb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 157, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public boolean hasFixedSize()", "diff": ["-    public boolean isFixed() { return true; }", "+    public boolean hasFixedSize() { return true; }"]}], "num": 576}