{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54060064834c7c8ddbf99cacc406973c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f46381abffe364e2b4b2aae7f2c0398", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 369, "signatureBeforeChange": "      public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "      public Void forInnerClassDef(InnerClassDef that)", "diff": ["-    System.err.println(\"Visiting inner class \" + that.getName() + \" in JExpIfPrunDFV from \" + this);", "+//    System.err.println(\"Visiting inner class \" + that.getName() + \" in JExpIfPrunDFV from \" + this);", "-    System.err.println(\"Passed the prune control point in JEIFPDFV.forInnerClassDef for \" + that.getName());", "+//    System.err.println(\"Passed the prune control point in JEIFPDFV.forInnerClassDef for \" + that.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afd0f186fd1c9ea576c3f3673ff3410", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 369, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "      public Void forInnerClassDef(InnerClassDef that)", "diff": ["+  ", "+    System.err.println(\"Visiting inner class \" + that.getName() + \" in JExpIfPrunDFV from \" + this);", "+    System.err.println(\"Passed the prune control point in JEIFPDFV.forInnerClassDef for \" + that.getName());", "+    ", "-    that.getBody().visit(this); return forInnerClassDefOnly(that); }  public Void forInterfaceDef(InterfaceDef that) {", "+    ", "+    that.getBody().visit(this); ", "+    return forInnerClassDefOnly(that); ", "+  }  "]}], "num": 11238}