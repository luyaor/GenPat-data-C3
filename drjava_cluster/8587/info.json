{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "694d5ef366183d05db8461a8a1addc0f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c89ff627af623c3858acc0735e8f5ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "66e3bf5b9e7c116ff08fb5d237bdd1378cfb618a", "commitAfterChange": "22f4e4d3d8066ee931c35c7ee670d4fd2e8cfd6c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    ", "+    try {", "+      // Jump over {-} region if delimiter was a close brace.", "+      char delim = doc.getText(prevDelimiterPos, 1).charAt(0);", "+      if (delim == '}') {", "+        BraceReduction reduced = doc.getReduced();", "+        reduced.resetLocation();", "+        int dist = prevDelimiterPos - here + 1;", "+        reduced.move(dist);", "+        prevDelimiterPos -= reduced.balanceBackward() - 1;", "+        reduced.move(-dist);", "+      }", "+    }", "+    catch (BadLocationException e) {", "+      throw new UnexpectedException(e);", "+    }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5b22982358ee53d0400c41e68ab712", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "a3941c1000ac76b7c7dfbe2e02df0072cee011b6", "commitAfterChange": "9dde008cc707b0b4af3c382ad06f25fcd30d66ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    ", "+", "+    try {", "+      char delim = doc.getText(prevDelimiterPos, 1).charAt(0);", "+      char[] ws = {' ', '\\t', '\\n', ';'};", "+      if (delim == ';') {", "+        int testPos = doc.findPrevCharPos(prevDelimiterPos, ws);", "+        if (doc.getText(testPos,1).charAt(0) == '}') {", "+          prevDelimiterPos = testPos;", "+        }", "+      }", "+    } catch (BadLocationException e) {", "+      //do nothing", "+    }", "+", "+"]}], "num": 8587}