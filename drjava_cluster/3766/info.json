{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d97740c891bac4a5b61c7317a399a0df", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "592b23c543417e5fcd7817d26112efc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "commitAfterChange": "07096ad0945aff1086f040e03a93769039f16340", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "          ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags)", "signatureAfterChange": "          ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] srcFiles, File[] auxFiles, ClassPathVector cp, File cjf, int cjflags)", "diff": ["-    ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags) {", "+    ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] srcFiles, File[] auxFiles, ClassPathVector cp, File cjf, int cjflags) {", "-      projectFiles = files;", "+      _projectFiles = srcFiles;", "+      _auxFiles = auxFiles;", "-      if (projectFiles != null) try {  for (File file : projectFiles) { _projFilePaths.add( file.getCanonicalPath()); } }", "+      if (_projectFiles != null) try {  for (File file : _projectFiles) { _projFilePaths.add( file.getCanonicalPath()); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b49d444b58547af7b684f404535b53ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 38, "signatureBeforeChange": "          ProjectFileGroupingState(File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags)", "signatureAfterChange": "          ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags)", "diff": ["-    ProjectFileGroupingState(File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags) {", "+    ", "+    ProjectFileGroupingState(File pr, File main, File bd, File wd, File project, File[] files, ClassPathVector cp, File cjf, int cjflags) {", "+      _projRoot = pr;", "-      try {  for (File file : projectFiles) { _projFilePaths.add(file.getCanonicalPath()); } }", "-      catch(IOException e) { }", "+      if (projectFiles != null) try {  for (File file : projectFiles) { _projFilePaths.add(file.getCanonicalPath()); } }", "+      catch(IOException e) { /*do nothing */ }"]}], "num": 3766}