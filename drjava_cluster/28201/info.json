{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a69f10d117b1eba583f6f5ac270b4c1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f04206799b303fb6b1e6191cafeaf20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void remAuxFile(File file)", "signatureAfterChange": "     public void remAuxFile(File file)", "diff": ["-      int newLen = _auxFiles.length - 1;", "-      File[] newAuxFiles = new File[newLen];", "-      try {", "-        int j = 0;", "-        for (File f: _auxFiles) {", "-          if (! f.equals(file)) {", "-            newAuxFiles[j] = file;", "-            j++;", "+      synchronized(_auxFiles) {", "+        int newLen = _auxFiles.length - 1;", "+        File[] newAuxFiles = new File[newLen];", "+        try {", "+          int j = 0;", "+          for (File f: _auxFiles) {", "+            if (! f.equals(file)) {", "+              newAuxFiles[j] = file;", "+              j++;", "+            }", "+          if (j < newLen) throw new IllegalStateException(\"auxFiles list contain two copies of \" + file);", "+          _auxFiles = newAuxFiles;", "-        if (j < newLen) throw new IllegalStateException(\"auxFiles list contain two copies of \" + file);", "-        _auxFiles = newAuxFiles;", "-      }", "-      catch(Exception e) { // negative array size or index out of bounds", "-        throw new UnexpectedException(e);", "+        catch(Exception e) { // negative array size or index out of bounds", "+          throw new UnexpectedException(e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aadcbdfc8745e3748431f04d7427c03a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea3de3bd50de8d728bdb5d615bd9b8838d2e94b4", "commitAfterChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void remAuxFile(File file)", "signatureAfterChange": "     public void remAuxFile(File file)", "diff": ["-     *  UnexpectedException. */", "+    /** Removes File f from _auxFiles list. */", "-      synchronized(_auxFilesLock) {", "-        int newLen = _auxFiles.length - 1;", "-        File[] newAuxFiles = new File[newLen];", "-        try {", "-          int j = 0;", "-          for (File f: _auxFiles) {", "-            if (! f.equals(file)) {", "-              newAuxFiles[j] = file;", "-              j++;", "-            }", "-          }", "-          if (j < newLen) throw new IllegalStateException(\"auxFiles list contain two copies of \" + file);", "-          _auxFiles = newAuxFiles;", "-        }", "-        catch(Exception e) { // negative array size or index out of bounds", "-          throw new UnexpectedException(e);", "+      synchronized(_auxFiles) {", "+        if (_auxFiles.remove(file)) {", "+          setProjectChanged(true);"]}], "num": 28201}