{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7adca6768c4c111b22b48cfff1f1aa5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69467cb68cf97efa15985c89e949b0f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void handleSlaveWontStart(Exception e)", "signatureAfterChange": "   protected void handleSlaveWontStart(Exception e)", "diff": ["-    boolean giveUp;", "-    synchronized (_startupLock) {", "-      _startupAttempts++;", "-      debug.logValue(\"startupFailures\", _startupAttempts);", "-      giveUp = _startupAttempts > MAX_STARTUP_FAILURES;", "-      if (giveUp) {", "-        _restart = false;", "-        _startupAttempts = 0;", "-        _startupComplete.signal();", "-      }", "-    }", "-    if (giveUp) {", "-      debug.log(\"Giving up on restart\");", "-      _interactionsModel.interpreterWontStart(e);", "-    }", "-    else {", "-      debug.logStart(\"trying to start interpreter again\");", "-      _doStartup();", "-      debug.logEnd(\"trying to start interpreter again\");", "-    }", "+    debug.log(\"Slave won't start\", e);", "+    _state.value().startFailed(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3521afced8bb199266d19e5b45ea184", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public boolean isInterpreterRunning()", "signatureAfterChange": "   protected void handleSlaveWontStart(Exception e)", "diff": ["-  public boolean isInterpreterRunning() { return _interpreterJVM() != null; }", "+   */", "+  protected void handleSlaveWontStart(Exception e) {", "+    boolean giveUp;", "+    synchronized (_startupLock) {", "+      _startupAttempts++;", "+      debug.logValue(\"startupFailures\", _startupAttempts);", "+      giveUp = _startupAttempts > MAX_STARTUP_FAILURES;", "+      if (giveUp) {", "+        _restart = false;", "+        _startupAttempts = 0;", "+        _startupComplete.signal();", "+      }", "+    }", "+    if (giveUp) {", "+      debug.log(\"Giving up on restart\");", "+      _interactionsModel.interpreterWontStart(e);", "+    }", "+    else {", "+      debug.logStart(\"trying to start interpreter again\");", "+      _doStartup();", "+      debug.logEnd(\"trying to start interpreter again\");", "+    }", "+  }"]}], "num": 12456}