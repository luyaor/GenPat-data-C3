{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d441597926507d926db24efde4e26fbf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63de7ce08435220611722a5a4a5524ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "72c953c3c4f509998630ec89f0f6ab473b5c78c1", "commitAfterChange": "b04c072cc6c2afa2120f5e98663d5a900c3a128f", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private boolean javadoc_1_3(String[] args)        throws IOException, ClassNotFoundException, InterruptedException", "signatureAfterChange": "   private boolean _javadoc_1_3(String[] args, String[] classpath)      throws IOException, ClassNotFoundException, InterruptedException", "diff": ["-  private boolean javadoc_1_3(String[] args) ", "-      throws IOException, ClassNotFoundException, InterruptedException {", "+  private boolean _javadoc_1_3(String[] args, String[] classpath) ", "+    throws IOException, ClassNotFoundException, InterruptedException {", "+    // We must use this classpath nonsense to make sure our new Javadoc JVM", "+    // can see everything the interactions pane can see.", "-    javadocProcess =  ExecJVM.runJVMPropogateClassPath(JAVADOC_CLASS, args);", "+    ", "+    ", "+    javadocProcess =  ExecJVM.runJVM(JAVADOC_CLASS, args, classpath, new String[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c9889921beed369e1faaeb6be89fe6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "4ec56842cfddc38eb6b984795c24e527fe5df30c", "commitAfterChange": "48cc5099d452791b4ba6da6a0856db4f13cb78f4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private boolean _javadoc_1_3(String[] args, String classpath) throws IOException", "signatureAfterChange": "   private boolean _javadoc_1_3(String[] args, String classpath) throws IOException", "diff": ["-", "+    ", "+    // This was a quick fix in order to get a working jar out.", "+    ", "+    String jsr14path = DrJava.getConfig().getSetting(OptionConstants.JSR14_LOCATION).toString();", "+    double version = Double.valueOf(System.getProperty(\"java.specification.version\"));", "+    String[] jvmArgs = new String[0];", "+    if (version < 1.5 && jsr14path != null && !jsr14path.equals(\"\"))", "+      jvmArgs = new String[]{\"-Xbootclasspath/p:\" + jsr14path};", "+    ", "-    javadocProcess =  ExecJVM.runJVM(JAVADOC_CLASS, args, classpath, new String[0]);", "+    javadocProcess =  ExecJVM.runJVM(JAVADOC_CLASS, args, new String[]{classpath}, jvmArgs);"]}], "num": 27189}