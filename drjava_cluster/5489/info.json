{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfb1a9a2bc8a565d027a0f8261f238b8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d9f2529197143d1c3a4f082758fa00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "d75bb4144501a8419376e0dc8dbe054c7511983f", "commitAfterChange": "a31b2c97ecb1660744788e96501356f9c0219d19", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private boolean _isCurrentBraceMatchable()", "signatureAfterChange": "   private boolean _isCurrentBraceMatchable()", "diff": ["-  private boolean _isCurrentBraceMatchable() {", "-    String type = _cursor.current().getType();", "-    return (((type.equals(\"{\")) ||", "-             (type.equals(\"}\")) ||", "-             (type.equals(\"(\")) ||", "-             (type.equals(\")\")) ||", "-             (type.equals(\"[\")) ||", "-             (type.equals(\"]\"))) &&", "-            (_parent.getStateAtCurrent() == FREE));", "-  }", "+  private boolean _isCurrentBraceMatchable() { return _cursor.current().isMatchable(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "609715cff08ab6173a10ff2f02225b64", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 57, "signatureBeforeChange": "   private String _getValue(Value value)", "signatureAfterChange": "   private String _getValue(Value value) throws DebugException", "diff": ["-  private String _getValue(Value value) {", "+  private String _getValue(Value value) throws DebugException {", "-    /*try {", "-      thread = object.owningThread();", "-    }", "-    catch (IncompatibleThreadStateException itse) {", "-      DrJava.consoleOut().println(\"thread is not suspended\");", "-      return DebugWatchUndefinedValue.ONLY.toString();", "-    }*/", "-    Value stringValue = null;", "-      stringValue = object.invokeMethod(thread, method, new LinkedList(), ObjectReference.INVOKE_SINGLE_THREADED);", "+      Value stringValue = object.invokeMethod(thread, method, new LinkedList(),", "+                                              ObjectReference.INVOKE_SINGLE_THREADED);", "+      return stringValue.toString();", "+      throw new UnexpectedException(ite);", "+      throw new UnexpectedException(cnle);", "-      DrJava.consoleOut().println(\"thread is not suspended\");", "-      return DebugWatchUndefinedValue.ONLY.toString();", "+      throw new DebugException(\"Cannot determine value from thread: \" + itse);", "-      DrJava.consoleOut().println(\"invocation exception\");", "-      return DebugWatchUndefinedValue.ONLY.toString();", "+      throw new DebugException(\"Could not invoke toString: \" + ie);", "-    return stringValue.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eb7a10af9fcd6d0be76b102595ec33f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 69, "signatureBeforeChange": "     public Object forSyntaxErrorResult(SyntaxErrorResult that)", "signatureAfterChange": "          public Void forUnexpectedException(Throwable t)", "diff": ["-     */", "-    public Object forSyntaxErrorResult(SyntaxErrorResult that) {", "-      _interactionsModel.replReturnedSyntaxError(that.getErrorMessage(), that.getInteraction(), that.getStartRow(),", "-                                                 that.getStartCol(), that.getEndRow(), that.getEndCol() );", "+    ", "+    public Void forUnexpectedException(Throwable t) {", "+      throw new UnexpectedException(t);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "752a75abd3d9895bb6ae7a1ede216881", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "97f4d18b1b96ab5f6fef892b2420a830c7869018", "commitAfterChange": "4cff41266c06ea238f993f3d8dac322323994e85", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["-    HashMap<String, Properties> m = new HashMap<String, Properties>();", "-    m.put(\"Java\", System.getProperties());", "-    m.put(\"DrJava\", System.getProperties());", "-    m.put(\"Project\", System.getProperties());", "-    _insertVarDialog = new InsertVariableDialog(_mainFrame, m, _insertVarDialogMonitor);", "+    updateProperties();", "+    ", "+    _insertVarDialog = new InsertVariableDialog(_mainFrame, _props, _insertVarDialogMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f82bec9a82aec3cbc8c62a88edd622b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 410, "methodNumberAfterChange": 410, "signatureBeforeChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "diff": ["-          boolean r = false;", "-          if (notFound) r = _saveAs(); else r = _save();", "+          boolean saved = false;", "+          if (notFound) saved = _saveAs(); ", "+          else saved = _save();", "-          if(r && (doc.isAuxiliaryFile() || ", "-                   (_model.isProjectActive() && doc.isInProjectPath()))) {", "+          if (! saved) return false;", "+          if (doc.isAuxiliaryFile() || (_model.isProjectActive() && doc.isInProjectPath())) {", "-            try{", "-              savedFilename = doc.getFile().getName();", "-            }", "+            try { savedFilename = doc.getFile().getName(); }", "-              //Shouldn't happen because this file was just saved", "+              // Shouldn't happen because this file was just saved", "-            catch(FileMovedException fme) {", "-              savedFilename = \"The current file\";", "+            catch(FileMovedException fme) { ", "+              // Shouldn't happend because this file was just saved", "+              throw new UnexpectedException(fme);", "+//              savedFilename = \"The current file\"; ", "-            rc = JOptionPane.showConfirmDialog(MainFrame.this,", "-                                               savedFilename + ", "-                                               \"  is now in the current project.\\n\" +", "-                                               \"If you close it, it will be permanently removed \"+", "-                                               \"from the project.\\n\" +", "-                                               \"Do you still wish to close it.\",", "-                                               \"Close Project File\",", "-                                               JOptionPane.YES_NO_CANCEL_OPTION);", "-            if(rc != JOptionPane.YES_OPTION)", "-              return false;", "-            else return true;", "+//            rc = JOptionPane.showConfirmDialog(MainFrame.this,", "+//                                               savedFilename + ", "+//                                               \"  is now in the current project.\\n\" +", "+//                                               \"If you close it, it will be permanently removed \"+", "+//                                               \"from the project.\\n\" +", "+//                                               \"Do you still wish to close it.\",", "+//                                               \"Close Project File\",", "+//                                               JOptionPane.YES_NO_CANCEL_OPTION);", "+//            if(rc != JOptionPane.YES_OPTION)", "+//              return false;", "+//            else return true;", "-          return r;", "+          return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8aef8d6dce70783925faa18dbbdb49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 26, "signatureBeforeChange": "    public void testStackTraceEmptyTrace() throws Throwable", "signatureAfterChange": "              public Void forUnexpectedException(Throwable t)", "diff": ["-", "-  public void testStackTraceEmptyTrace() throws Throwable {", "-    _log.log(\"NewJVMTest.testStackTraceEmptyTrace executing\");", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"null.toString()\");", "-", "-      while (_jvm.exceptionClassBuf == null) {", "-        _testLock.wait();", "-      }", "-", "-      assertEquals(\"exception class\",", "-                   \"java.lang.NullPointerException\",", "-                   _jvm.exceptionClassBuf);", "-      assertEquals(\"stack trace\",", "-                   InterpreterJVM.EMPTY_TRACE_TEXT.trim(),", "-                   _jvm.exceptionTraceBuf.trim());", "-    }", "-  }", "+      ", "+      public Void forUnexpectedException(Throwable t) {", "+        debug.log();", "+        throw new UnexpectedException(t);", "+      }"]}], "num": 5489}