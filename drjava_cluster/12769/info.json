{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5df9e929a8179991a6759205f3628494", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07198929a5033c7b79146969d6f7bc8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ce1be4bebdf226da73b0f3a3408c7770e9d93c01", "commitAfterChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 397, "signatureBeforeChange": "   private void _setUpTabs()", "signatureAfterChange": "   private void _setUpTabs()", "diff": ["+", "+    // hook highlighting listener to find results manager", "+    _model.getFindResultsManager().addListener(new RegionManagerListener<DocumentRegion>() {      ", "+      public void regionAdded(DocumentRegion r) {", "+        DefinitionsPane bpPane = getDefPaneGivenODD(r.getDocument());", "+        _documentFindResultsHighlights.", "+          put(r, bpPane.getHighlightManager().", "+                addHighlight(r.getStartOffset(), r.getEndOffset(), DefinitionsPane.FIND_RESULTS_PAINTER));", "+      }", "+      public void regionChanged(DocumentRegion r) { ", "+        regionRemoved(r);", "+        regionAdded(r);", "+      }", "+      public void regionRemoved(DocumentRegion r) {", "+        HighlightManager.HighlightInfo highlight = _documentFindResultsHighlights.get(r);", "+        if (highlight != null) highlight.remove();", "+        _documentFindResultsHighlights.remove(r);", "+      }", "+    });", "+    _tabs.addLast(_findResultsPanel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c56efea7038941ddc45d1459329b138", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractConsoleController.java", "commitBeforeChange": "efc072ede22ea55faaadbf97a73c4466d939ffd3", "commitAfterChange": "0eb7fcb52c65dc5248fffbf667b1fb96b5218a87", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   protected void _setupView()", "signatureAfterChange": "   protected void _setupView()", "diff": ["+    ", "+    _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_CUT), cutAction);", "+    _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_COPY), copyAction);", "+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_CUT, new OptionListener<KeyStroke>() {", "+      public void optionChanged(OptionEvent<KeyStroke> oe) {", "+        _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_CUT), cutAction);", "+     }", "+    });", "+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_COPY, new OptionListener<KeyStroke>() {", "+      public void optionChanged(OptionEvent<KeyStroke> oe) {", "+        _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_COPY), copyAction);", "+     }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65347710e22ed55849e828ddd70cfe9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a64d259eb205583970c69af64c3cca967dd81a0f", "commitAfterChange": "9be84f23a860532e5852c80be2ef2d01c63b33b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DefinitionsDocument(GlobalEventNotifier notifier)", "signatureAfterChange": "   public DefinitionsDocument(GlobalEventNotifier notifier)", "diff": ["-  public DefinitionsDocument(GlobalEventNotifier notifier) {", "-    this(DefaultGlobalModel.INDENTER, notifier);", "+   */", "+  public DefinitionsDocument(GlobalEventNotifier notifier) {", "+", "+    _notifier = notifier;", "+", "+    // Create the indenter from the config values", "+    int ind = DrJava.getConfig().getSetting(INDENT_LEVEL).intValue();", "+    _indenter = new Indenter(ind);", "+    DrJava.getConfig().addOptionListener(INDENT_LEVEL,", "+                                         new OptionListener<Integer>() {", "+      public void optionChanged(OptionEvent<Integer> oce) {", "+        _indenter.buildTree(oce.value.intValue());", "+      }", "+    });", "+    DrJava.getConfig().addOptionListener(AUTO_CLOSE_COMMENTS,", "+                                         new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        _indenter.buildTree(DrJava.getConfig().getSetting(INDENT_LEVEL).intValue());", "+      }", "+    });", "+", "+    _init();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71562e47bbad2b3d610cc4597503a48b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentDocFrame.java", "commitBeforeChange": "fb8effd5772e590820b31b51821dcae05a9e7028", "commitAfterChange": "3cea4dbc55127b1169bfc155262d72f9646d3bb5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public RecentDocFrame(MainFrame f)", "signatureAfterChange": "      public RecentDocFrame(MainFrame f)", "diff": ["-", "+  ", "-    _label = new JLabel(\"...\");", "+    _label = new JLabel(\"...\"){", "+      // Enable anti-aliased text by overriding paintComponent.", "+      protected void paintComponent(Graphics g) {", "+        if (CodeStatus.DEVELOPMENT) {", "+          if (_antiAliasText && g instanceof Graphics2D) {", "+            Graphics2D g2d = (Graphics2D)g;", "+            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,", "+                                 RenderingHints.VALUE_TEXT_ANTIALIAS_ON);", "+            System.out.println(\"anti-alias!\");", "+          }", "+        }", "+        super.paintComponent(g);", "+      }", "+    };", "-", "-    _textpane = new JTextPane();", "+    _textpane = new JTextPane(){", "+      // Enable anti-aliased text by overriding paintComponent.", "+      protected void paintComponent(Graphics g) {", "+        if (CodeStatus.DEVELOPMENT) {", "+          if (_antiAliasText && g instanceof Graphics2D) {", "+            Graphics2D g2d = (Graphics2D)g;", "+            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,", "+                                 RenderingHints.VALUE_TEXT_ANTIALIAS_ON);", "+            System.out.println(\"anti-alias!\");", "+          }", "+        }", "+        super.paintComponent(g);", "+      }", "+    };", "+    _showSource = DrJava.getConfig().getSetting(OptionConstants.SHOW_SOURCE_WHEN_SWITCHING);", "+    DrJava.getConfig().addOptionListener(OptionConstants.TEXT_ANTIALIAS, _antialiasListener);", "+    DrJava.getConfig().addOptionListener(OptionConstants.SHOW_SOURCE_WHEN_SWITCHING, _showSourceListener);"]}], "num": 12769}