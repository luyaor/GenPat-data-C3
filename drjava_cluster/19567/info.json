{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f6778a6d02ff60796d90ab609e95e25", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48e139e1e17ad3fa95abed2469faf69b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 60, "signatureBeforeChange": "   private void _createDebugger()", "signatureAfterChange": "   private void _createDebugger()", "diff": ["-      ", "+", "+      getBreakpointManager().addListener(new RegionManagerListener<Breakpoint>() {", "+        public void regionAdded(final Breakpoint bp) { setProjectChanged(true); }", "+        public void regionChanged(final Breakpoint bp) { setProjectChanged(true); }", "+        public void regionRemoved(final Breakpoint bp) { ", "+          try {", "+            getDebugger().removeBreakpoint(bp);", "+          } catch(DebugException de) { /* just ignore it */ }", "+          setProjectChanged(true);", "+          }", "+      });", "+      getBookmarkManager().addListener(new RegionManagerListener<DocumentRegion>() {", "+        public void regionAdded(DocumentRegion r) { setProjectChanged(true); }", "+        public void regionChanged(DocumentRegion r) { setProjectChanged(true); }", "+        public void regionRemoved(DocumentRegion r) { setProjectChanged(true); }", "+      });", "+      ", "+        public void watchSet(final DebugWatchData w) { setProjectChanged(true); }", "+        public void watchRemoved(final DebugWatchData w) { setProjectChanged(true); }    ", "+        ", "+        public void regionAdded(final Breakpoint bp) { }", "+        public void regionChanged(final Breakpoint bp) { }", "+        public void regionRemoved(final Breakpoint bp) { }", "-        public void breakpointSet(final Breakpoint bp) {", "-          setProjectChanged(true);", "-        }", "-        public void breakpointChanged(final Breakpoint bp) {", "-          setProjectChanged(true);", "-        }    ", "-        public void breakpointRemoved(final Breakpoint bp) {", "-          setProjectChanged(true);", "-        }    ", "-        public void watchSet(final DebugWatchData w) {", "-          setProjectChanged(true);", "-        }", "-        public void watchRemoved(final DebugWatchData w) {", "-          setProjectChanged(true);", "-        }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b0e85f9aadac00549b180a2e942962", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private void _initPopup()", "signatureAfterChange": "   private void _initPopup()", "diff": ["-    _threadPopupMenu = new JPopupMenu(\"Thread Selection\");", "-    _threadMenuItem = new JMenuItem();", "-    _threadPopupMenu.add(_threadMenuItem);", "+    _threadRunningPopupMenu = new JPopupMenu(\"Thread Selection\");", "+    JMenuItem threadRunningSuspend = new JMenuItem();", "+    Action suspendAction = new AbstractAction() {", "+      public void actionPerformed(ActionEvent e) {", "+        _debugger.suspend(getSelectedThread());", "+      }", "+    };", "+    threadRunningSuspend.setAction(suspendAction);", "+    _threadRunningPopupMenu.add(threadRunningSuspend);", "+    threadRunningSuspend.setText(\"Suspend and Select Thread\");", "+    ", "+    _threadSuspendedPopupMenu = new JPopupMenu(\"Thread Selection\");", "+    JMenuItem threadSuspendedSelect = new JMenuItem();", "+    threadSuspendedSelect.setAction(suspendAction);", "+    JMenuItem threadSuspendedResume = new JMenuItem();", "+    threadSuspendedResume.setAction(new AbstractAction() {", "+      public void actionPerformed(ActionEvent e) {", "+        _debugger.resume(getSelectedThread());", "+      }", "+    });", "+    _threadSuspendedPopupMenu.add(threadSuspendedSelect);", "+    _threadSuspendedPopupMenu.add(threadSuspendedResume);", "+    threadSuspendedSelect.setText(\"Select Thread\");", "+    threadSuspendedResume.setText(\"Resume Thread\");", "+    ", "-    _stackMenuItem = new JMenuItem();", "-    _stackPopupMenu.add(_stackMenuItem);", "+    JMenuItem stackMenuItem = new JMenuItem();", "+    stackMenuItem.setAction(new AbstractAction() {", "+      public void actionPerformed(ActionEvent e) {", "+        _debugger.scrollToSource(getSelectedStackItem());", "+      }", "+    });", "+    _stackPopupMenu.add(stackMenuItem);", "+    stackMenuItem.setText(\"Scroll to Source\");"]}], "num": 19567}