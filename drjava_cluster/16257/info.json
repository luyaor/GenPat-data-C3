{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c34540cf35087eaaf878bf8e6baf2e86", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d836b67e93837a7627ba8140aa0420", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void killInterpreterJVM(File wd)", "signatureAfterChange": "   public void restartInterpreterJVM(boolean force)", "diff": ["-   */", "-  public void killInterpreterJVM(File wd) {", "-    debug.logStart();", "-    _startupComplete.attemptEnsureSignaled();", "-    boolean restart = (wd != null);", "-    InterpreterJVMRemoteI current;", "-    synchronized (_startupLock) {", "-      _workingDir = wd;", "-      _restart = restart;", "-      _cleanlyRestarting = true;", "-      current = _interpreterJVM.getAndSet(null);", "-    }", "-    if (current != null) {", "-      if (restart) _interactionsModel.interpreterResetting();", "-      quitSlave();", "-      // new slave JVM is started by in handleSlaveQuit()", "-    }", "-    debug.logEnd();", "-  }", "+   */", "+  public void restartInterpreterJVM(boolean force) { _state.value().restart(force); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3cdbf1b35966de7218c6b62588f431", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void startInterpreterJVM()", "signatureAfterChange": "   public void startInterpreterJVM()", "diff": ["-  public void startInterpreterJVM() {", "-    debug.logStart();", "-", "-    boolean alreadyStarted;", "-    synchronized (_startupLock) {", "-      alreadyStarted = (_interpreterJVM.value() != null || !_startupComplete.isSignaled());", "-      if (!alreadyStarted) {", "-        _startupComplete.reset();", "-        _startupAttempts = 1;", "-      }", "-    }", "-    if (alreadyStarted) { debug.log(\"Already started\"); }", "-    else { _doStartup(); }", "-    debug.logEnd();", "-  }", "+  public void startInterpreterJVM() { _state.value().start(); }"]}], "num": 16257}