{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2949464ad9c1a30c489b0cc2b5389bc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0c526f05786557e39888eceb47cb21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "72303a17e4a44248ba3fe5d5f9c3d69081ba78b5", "commitAfterChange": "1a00210ae1e41be9246fee06894f37a248cf99ce", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public void testGotoFileUnderCursorAppendJava() throws IOException", "signatureAfterChange": "   public void testGotoFileUnderCursorAppendJava() throws IOException", "diff": ["-    String goto1_string = \"GotoFileUnderCursor2\";", "+    final String goto1_string = \"GotoFileUnderCursor2\";", "-    SingleDisplayModel model = _frame.getModel();", "-    OpenDefinitionsDocument goto1_doc = model.getDocumentForFile(goto1_file);", "-    OpenDefinitionsDocument goto2_doc = model.getDocumentForFile(goto2_file);", "-    model.setActiveDocument(model.getDocumentForFile(goto1_file));", "-    assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "-    ", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { _frame._gotoFileUnderCursor(); }", "-    });", "-    ", "-    Utilities.clearEventQueue();", "-    ", "-    assertEquals(\"Incorrect active document; did not go to?\", goto2_doc, model.getActiveDocument());", "-    ", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { _frame._gotoFileUnderCursor(); }", "-    });", "-    ", "-    Utilities.clearEventQueue();", "-    assertEquals(\"Incorrect active document; did not go to?\", goto1_doc, model.getActiveDocument());", "+    Utilities.invokeAndWait(new Runnable() { public void run() {", "+      SingleDisplayModel model = _frame.getModel();", "+      try {", "+        OpenDefinitionsDocument goto1_doc = model.getDocumentForFile(goto1_file);", "+        OpenDefinitionsDocument goto2_doc = model.getDocumentForFile(goto2_file);", "+        model.setActiveDocument(model.getDocumentForFile(goto1_file));", "+        assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "+        ", "+        _frame._gotoFileUnderCursor();", "+        ", "+        assertEquals(\"Incorrect active document; did not go to?\", goto2_doc, model.getActiveDocument());", "+        ", "+        _frame._gotoFileUnderCursor();", "+        ", "+        assertEquals(\"Incorrect active document; did not go to?\", goto1_doc, model.getActiveDocument());", "+      }", "+      catch(IOException ioe) { throw new UnexpectedException(ioe); }", "+    } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e756e48d8a744b24344e42da64c18a24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "72303a17e4a44248ba3fe5d5f9c3d69081ba78b5", "commitAfterChange": "1a00210ae1e41be9246fee06894f37a248cf99ce", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testGotoFileUnderCursor() throws IOException", "signatureAfterChange": "   public void testGotoFileUnderCursor() throws IOException", "diff": ["-    String goto1_string = \"GotoFileUnderCursorTest\";", "+    final String goto1_string = \"GotoFileUnderCursorTest\";", "-    SingleDisplayModel model = _frame.getModel();", "-    OpenDefinitionsDocument goto1_doc = model.getDocumentForFile(goto1_file);", "-    OpenDefinitionsDocument goto2_doc = model.getDocumentForFile(goto2_file);", "-    model.setActiveDocument(model.getDocumentForFile(goto1_file));", "-    assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "-    ", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { _frame._gotoFileUnderCursor(); }", "-    });", "-    ", "-    Utilities.clearEventQueue();", "-    assertEquals(\"Incorrect active document; did not go to?\", goto2_doc, model.getActiveDocument());", "-    ", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { _frame._gotoFileUnderCursor(); }", "-    });", "-    ", "-    Utilities.clearEventQueue();", "-    assertEquals(\"Incorrect active document; did not go to?\", goto1_doc, model.getActiveDocument());", "-    ", "+    Utilities.invokeAndWait(new Runnable() { public void run() {", "+      SingleDisplayModel model = _frame.getModel();", "+      try {", "+        OpenDefinitionsDocument goto1_doc = model.getDocumentForFile(goto1_file);", "+        OpenDefinitionsDocument goto2_doc = model.getDocumentForFile(goto2_file);", "+        model.setActiveDocument(model.getDocumentForFile(goto1_file));", "+        assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "+        ", "+        _frame._gotoFileUnderCursor();", "+        ", "+        assertEquals(\"Incorrect active document; did not go to?\", goto2_doc, model.getActiveDocument());", "+        ", "+        _frame._gotoFileUnderCursor();", "+        ", "+        assertEquals(\"Incorrect active document; did not go to?\", goto1_doc, model.getActiveDocument());", "+      }", "+      catch(IOException ioe) { throw new UnexpectedException(ioe); }", "+    } });", "+"]}], "num": 10924}