{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99827412bb6982fc50a421d2e9a4d948", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9beef79f320936ef0ba8add89f955dfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void testDancingUIFileClosed() throws IOException", "signatureAfterChange": "   public void testDancingUIFileClosed() throws IOException", "diff": ["-    try {", "-      Utilities.invokeAndWait(new Runnable() { public void run() {", "+    _closeDone = false;", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() {", "-        ", "-        ", "-        _closeDone = false;", "-        ", "-        _frame.getCloseButton().doClick();", "-      }});", "-    }", "-    catch(UnexpectedException e) { fail(e.toString()); }", "+      }", "+    });", "+           ", "+    /* Asynchronously close the file */", "+    Utilities.invokeLater(new Runnable() { ", "+      public void run() { _frame.getCloseButton().doClick(); }", "+    });", "-//    _log.log(\"Waiting for file closing\");", "+    _log.log(\"Waiting for file closing\");", "-//    _log.log(\"testDancingUIClosed completed\");", "+    _log.log(\"testDancingUIClosed completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3541f500549d25f68e07f97a88d8aad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 23, "signatureBeforeChange": "            public void run()", "signatureAfterChange": "   DefaultMutableTreeNode getNode(R region)", "diff": ["-        EventQueue.invokeLater(new Runnable() { ", "-          public void run() {", "-            updatePanel();  // resets _tabUpdatePending and _lastChangeTime", "-            updateButtons();", "-          }", "+    /** Gets the tree node for the given region. */", "+  DefaultMutableTreeNode getNode(R region) { return _regionToTreeNode.get(region); }"]}], "num": 24699}