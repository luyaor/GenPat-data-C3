{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1604b4ee9b8f54189090f66f803ab0b6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "431686c1d1784c39f08cccbb0f8254f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-windows/edu/rice/cs/drjava/platform/WindowsPlatform.java", "commitBeforeChange": "df01c8be1037a04090a700d45d88a837db8c2901", "commitAfterChange": "b58fba4c05c7b2fa2ddfeee6a4be5d11082f0498", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private String getCommandLine() throws WindowsRegistry.RegistryException, IOException", "signatureAfterChange": "      private String getCommandLine() throws WindowsRegistry.RegistryException, IOException", "diff": ["-  ", "-  private String getCommandLine() throws WindowsRegistry.RegistryException, IOException {", "-    final File drjavaFile = found;", "+  ", "+  private String getCommandLine() throws WindowsRegistry.RegistryException, IOException {", "+    final File drjavaFile = getDrJavaFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9da486b87f8b9cb82d807760e61c876d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "335e15356f81cc767efd4886353e6890e8c905fa", "commitAfterChange": "8ccb5b5787c23c1ec149415240d859632e14b0eb", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["-    File[] srcFiles = null;", "-      srcFiles = _model.openProject(projectFile);", "-      _setUpContextMenus();", "-      _recentProjectManager.updateOpenFiles(projectFile);", "+      _model.openProject(projectFile);", "-      _showProjectFileParseError(e);", "+      _showProjectFileParseError(e); // add to an error adapter", "-      _showFileNotFoundError(e);", "+      _showFileNotFoundError(e); // add to an error adapter", "-      _showIOError(e);", "+      _showIOError(e); // add to an error adapter", "-", "-    List<OpenDefinitionsDocument> nonProjDocs = _model.getNonProjectDocuments();", "-    List<OpenDefinitionsDocument> projDocs = _model.getProjectDocuments();", "-    File[] projectFiles = _model.getProjectFiles();", "-    ", "-    ", "-    /**", "-     * keep all nonproject files open", "-     */", "-    IDocumentNavigator nav = _model.getDocumentNavigator();", "-", "-    ", "-    // close all project files", "-    List<OpenDefinitionsDocument> docsToClose = new LinkedList<OpenDefinitionsDocument>();", "-    for(OpenDefinitionsDocument d: projDocs){", "-      if(d.isProjectFile()){", "-        docsToClose.add(d);", "-      }else{", "-        try{", "-          nav.refreshDocument(_model.getIDocGivenODD(d), _model.fixPathForNavigator(d.getFile().getCanonicalPath()));", "-        }catch(IOException e){", "-          // noop", "-        }", "-      }", "-    }", "-", "-    for(OpenDefinitionsDocument d: docsToClose){", "-    }", "-    _model.closeFiles(docsToClose);", "-    ", "-    final File[] files = srcFiles;", "-    // project could be empty", "-    if(srcFiles.length > 0){", "-      open(new FileOpenSelector(){", "-        public File[] getFiles() {", "-          return files;", "-        }", "-      });", "-    }", "-    ", "-    _openProjectUpdate();"]}], "num": 23955}