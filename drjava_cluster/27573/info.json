{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ade40b2a309ce247da57465c15db6d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be0c5ccb6fe1d2869992eb1ed60bb59d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "commitAfterChange": "84d383e8fea49389da19c11522947d451646ef3e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 52, "signatureBeforeChange": "   synchronized void currThreadDied()", "signatureAfterChange": "   synchronized void currThreadDied()", "diff": ["+    if( _runningThread != null ){", "+      _deadThreads.add(_runningThread);", "+      _runningThread = null;", "+    }", "+        ", "+    if (_suspendedThreads.size() > 0) {", "+      try{", "+        scrollToSource(_suspendedThreads.peek().frame(0).location());", "+      }catch(IncompatibleThreadStateException e){", "+        throw new UnexpectedException(e);", "+      }", "+      // updates watches and makes buttons in UI active, does this because", "+      // there are suspended threads on the stack", "+      currThreadSuspended();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb43032012ba3be523dc0edd022c8c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 93, "signatureBeforeChange": "   synchronized void currThreadDied() throws DebugException", "signatureAfterChange": "   synchronized void currThreadDied() throws DebugException", "diff": ["-      try{", "+      try {", "-        else {", "-          scrollToSource(thread.frame(0).location());", "-        }", "+        else scrollToSource(thread.frame(0).location());", "-      catch(IncompatibleThreadStateException e) {", "-        throw new UnexpectedException(e);", "-      }", "+      catch(IncompatibleThreadStateException e) { throw new UnexpectedException(e); }", "-    _notifier.currThreadDied();", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.currThreadDied(); } });"]}], "num": 27573}