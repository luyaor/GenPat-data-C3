{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18f09e8525dee2d30789cf31888ba02a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01852fc95198188c8b0684f12cd7a742", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public static void main(final String[] args)", "signatureAfterChange": "   public static void main(final String[] args)", "diff": ["-   */", "+    */", "-    new SplashScreen().flash();", "+    // handleCommandLineArgs will return true if DrJava should be loaded", "+    if (handleCommandLineArgs(args)) {", "+      if (!_forceNewInstance && (_filesToOpen.size()>0)) {", "+        try {", "+          boolean ret = RemoteControlClient.openFile(null);", "+          if (!RemoteControlClient.isServerRunning()) {", "+            // server not running, display splash screen", "+            new SplashScreen().flash();", "+          }", "+        }", "+        catch(IOException ioe) {", "+          // ignore", "+        }", "+      }", "+      else {", "+        // either forcing new instance or no files specified, display splash screen", "+        new SplashScreen().flash();", "+      }", "+      ", "-    configureAndLoadDrJavaRoot(args); ", "+      configureAndLoadDrJavaRoot(args); ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a74fb09db819fbd3e01a9666497b824", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "224d0c84f840f8ce41af8c46df98c9446d0323a9", "commitAfterChange": "23d1c475c29f1525fd3971f7ee4a6f8e9616fd8a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void interpretCurrentInteraction()", "signatureAfterChange": "   public void interpretCurrentInteraction()", "diff": ["-          throw  new RuntimeException(t.toString());", "+          throw new RuntimeException(t.toString());", "+      }", "+", "+      _interactionsDoc.prompt();", "+    }", "+    catch (ExitingNotAllowedException e) {", "+      try {", "+        _interactionsDoc.insertString(_interactionsDoc.getLength(),", "+                                      \"\\n\" + EXIT_CALLED_MESSAGE,", "+                                      null);", "+      }", "+      catch (BadLocationException ble) {", "+        throw new UnexpectedException(ble);", "-      } catch (BadLocationException willNeverHappen) {}", "+      }", "+      catch (BadLocationException ble) {", "+        throw new UnexpectedException(ble);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd8696cefe62672421f3ebfe8e8346a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   private void _switchToSuspendedThread() throws DebugException", "signatureAfterChange": "   private void _switchToSuspendedThread() throws DebugException", "diff": ["+    final ThreadReference currThread = _suspendedThreads.peek();", "-        l.currThreadSet(new DebugThreadData(_suspendedThreads.peek()));", "+        l.currThreadSet(new DebugThreadData(currThread));", "-  ", "+    try {", "+      if (currThread.frameCount() > 0) {", "+        scrollToSource(currThread.frame(0).location());", "+      }", "+    }", "+    catch (IncompatibleThreadStateException itse) {", "+      throw new UnexpectedException(itse);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be0c5ccb6fe1d2869992eb1ed60bb59d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "commitAfterChange": "84d383e8fea49389da19c11522947d451646ef3e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 52, "signatureBeforeChange": "   synchronized void currThreadDied()", "signatureAfterChange": "   synchronized void currThreadDied()", "diff": ["+    if( _runningThread != null ){", "+      _deadThreads.add(_runningThread);", "+      _runningThread = null;", "+    }", "+        ", "+    if (_suspendedThreads.size() > 0) {", "+      try{", "+        scrollToSource(_suspendedThreads.peek().frame(0).location());", "+      }catch(IncompatibleThreadStateException e){", "+        throw new UnexpectedException(e);", "+      }", "+      // updates watches and makes buttons in UI active, does this because", "+      // there are suspended threads on the stack", "+      currThreadSuspended();", "+    }"]}], "num": 15126}