{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c923643ad1de1f4913fd35afb6e5b82", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caa840215b63697447f31c8db74eada8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "0d6a1751a06319b8d446186ea0aafba68239ee0c", "commitAfterChange": "50d54a2cc075d489d4814ce780949e6748ba1350", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-  }", "+    ", "+    JPanel buttonPane = new JPanel();", "+    buttonPane.setLayout(new BorderLayout());", "+    ", "+    _showHighlightsCheckBox = new JCheckBox( \"Highlight source\", true);", "+    _showHighlightsCheckBox.addChangeListener( new ChangeListener() {", "+      public void stateChanged (ChangeEvent ce) {", "+        DefinitionsPane lastDefPane = _errorListPane.getLastDefPane();", "+        ", "+        if (_showHighlightsCheckBox.isSelected()) {", "+          //lastDefPane.setCaretPosition( lastDefPane.getCaretPosition());", "+          _errorListPane.switchToError(_errorListPane.getSelectedIndex());", "+          lastDefPane.requestFocus();", "+        }", "+        else {", "+          lastDefPane.removeErrorHighlight();", "+        }", "+      }", "+    });", "+    ", "+    buttonPane.add(_showHighlightsCheckBox, BorderLayout.SOUTH);", "+    _mainPanel.add(buttonPane, BorderLayout.EAST);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd592d11437a37def5d5e40805baedea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerErrorPanel(DefinitionsPane defPane, GlobalModel model)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-  public CompilerErrorPanel(DefinitionsPane defPane, GlobalModel model) {", "-    _definitionsPane = defPane;", "+  public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame) {", "-", "-    _listener = new DefinitionsCaretListener();", "-    _definitionsPane.addCaretListener(_listener);", "+    _frame = frame;", "-          _switchToError(_errorListPane.getSelectedIndex() + 1);", "+          int index = _errorListPane.getSelectedIndex() + 1;", "+          if (index < _numErrors) {", "+            _errorListPane.switchToError(index);", "+          }", "-          _switchToError(_errorListPane.getSelectedIndex() - 1);", "+          int index = _errorListPane.getSelectedIndex() -1 ;", "+          if (index >= 0) {", "+            _errorListPane.switchToError(index);", "+          }", "-    ", "+", "+", "-    // If we don't, when it pops up it cuts away the right edge of the ", "+    // If we don't, when it pops up it cuts away the right edge of the", "-", "-    resetErrors(new CompilerError[0]);"]}], "num": 16324}