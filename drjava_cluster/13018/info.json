{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bfb94640140953ef7ad8a286ca18540", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18c4a9bb9ac9265154e54a0d82e11603", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "commitAfterChange": "c9b6668252c82575b56cf423d4fca817498241b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testExitInteractions() throws DocumentAdapterException, InterruptedException", "signatureAfterChange": "   public void testExitInteractions() throws DocumentAdapterException, InterruptedException", "diff": ["-   */", "+  /** Checks that System.exit is handled appropriately from interactions pane. */", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interaction Started\");", "-        assertInteractionStartCount(1);", "-        assertInterpreterResettingCount(1);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExited\");", "+//        assertInteractionStartCount(1);", "+//        assertInterpreterResettingCount(0);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExitedCount = \" + interpreterExitedCount);", "-        assertInteractionStartCount(1);", "-        assertInterpreterExitedCount(0);", "-        assertInterpreterReadyCount(0);", "+//        assertInteractionStartCount(1);", "+//        assertInterpreterExitedCount(1);", "+//        assertInterpreterReadyCount(0);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterResetting\");", "-        synchronized(this) {", "-          assertInteractionStartCount(1);", "-          assertInterpreterExitedCount(1);", "-          assertInterpreterResettingCount(1);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterReady\");", "+        synchronized(_resetDoneLock) {", "+//          assertInteractionStartCount(1);", "+//          assertInterpreterExitedCount(1);", "+//          assertInterpreterResettingCount(1);", "-          this.notify();", "+//          Utilities.showDebug(\"GlobalModelOtherTest: notifying resetDone\");", "+          _resetDone = true;", "+          _resetDoneLock.notify();", "+      ", "+//      public void consoleReset() { consoleResetCount++; }", "-    synchronized(listener) {", "+    _resetDone = false;", "+    synchronized(_resetDoneLock) {", "+//      Utilities.showDebug(\"GlobalModelOtherTest: interpreting System.exit(23)\");", "-      listener.wait();", "+//      _model.resetInteractions();", "+//      Utilities.showDebug(\"GlobalModelOtherTest: waiting on resetDone\");", "+      while (! _resetDone) { _resetDoneLock.wait(); }", "-    listener.assertConsoleResetCount(0);", "+//    listener.assertConsoleResetCount(0);", "+//    Utilities.showDebug(\"GlobalModelOtherTest: exitInteractions finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41be88e70410789bd5c22b4c24b6ea3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "diff": ["-    TestListener listener = new TestListener() {", "-      public void interactionStarted() {", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interaction Started\");", "-        interactionStartCount++;", "-      }", "+    InteractionListener listener = new InteractionListener() {", "-      public void interpreterExited(int status) {", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExited\");", "-//        assertInteractionStartCount(1);", "-//        assertInterpreterResettingCount(0);", "-        interpreterExitedCount++;", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExitedCount = \" + interpreterExitedCount);", "-        lastExitStatus = status;", "-      }", "-", "-      public void interpreterResetting() {", "-//        assertInteractionStartCount(1);", "-//        assertInterpreterExitedCount(1);", "-//        assertInterpreterReadyCount(0);", "-        interpreterResettingCount++;", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterResetting\");", "-      }", "-", "-      public void interpreterReady(File wd) {", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterReady\");", "-        synchronized(_resetDoneLock) {", "-//          assertInteractionStartCount(1);", "-//          assertInterpreterExitedCount(1);", "-//          assertInterpreterResettingCount(1);", "-          interpreterReadyCount++;", "-//          Utilities.showDebug(\"GlobalModelOtherTest: notifying resetDone\");", "-          _resetDone = true;", "-          _resetDoneLock.notify();", "-        }", "-      }", "-      ", "-    _resetDone = false;", "-    synchronized(_resetDoneLock) {", "-//      Utilities.showDebug(\"GlobalModelOtherTest: interpreting System.exit(23)\");", "-      interpretIgnoreResult(\"System.exit(23);\");", "-//      _model.resetInteractions();", "-//      Utilities.showDebug(\"GlobalModelOtherTest: waiting on resetDone\");", "-      while (! _resetDone) { _resetDoneLock.wait(); }", "-    }", "+", "+    listener.logInteractionStart();", "+    interpretIgnoreResult(\"System.exit(23);\"); ", "+    listener.waitInteractionDone();", "+    listener.waitResetDone();", "+    Utilities.clearEventQueue();", "+      ", "-    assertEquals(\"exit status\", 23, listener.lastExitStatus);", "-//    Utilities.showDebug(\"GlobalModelOtherTest: exitInteractions finished\");", "+    assertEquals(\"exit status\", 23, listener.getLastExitStatus());", "+"]}], "num": 13018}