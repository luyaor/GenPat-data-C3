{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd517578e96eb3f06bef033a8f60d498", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4373bd759a31b331026a912acbdd6924", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "34f2ea007a9d228268fe51193dea23995f823c51", "commitAfterChange": "fc5097bf3e220739875860f050e455b4fcf1d859", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-                                                  \"Indent Level\", this));", "+                                                  \"Indent Level\", this,", "+                                                  \"Specifies the indentation level DrJava's indenter should use.\"));", "-                               \"Working Directory\", this, _fileOptionChooser);", "+                              \"Working Directory\", this,", "+                              \"Specifies the directory that DrJava should consider the current working directory.\",", "+                              _fileOptionChooser);", "-    panel.addComponent( workDir );", "-    panel.addComponent( new IntegerOptionComponent( OptionConstants.HISTORY_MAX_SIZE, \"Size of Interactions History\", this));", "-    panel.addComponent( new IntegerOptionComponent( OptionConstants.RECENT_FILES_MAX_SIZE, \"Recent Files List Size\", this));", "-    panel.addComponent( new BooleanOptionComponent ( OptionConstants.JAVAC_ALLOW_ASSERT, \"Allow Assert Keyword in Java 1.4\", this));", "-    panel.addComponent( new BooleanOptionComponent( OptionConstants.INTERACTIONS_EXIT_PROMPT, \"Prompt if Interactions Pane Exits Unexpectedly\", this));", "-    panel.addComponent( new BooleanOptionComponent( OptionConstants.QUIT_PROMPT, \"Prompt Before Quit\", this));", "-    panel.addComponent( new BooleanOptionComponent( OptionConstants.BACKUP_FILES, \"Keep emacs style backup files\", this));", "+    panel.addComponent(workDir);", "+    panel.addComponent(new IntegerOptionComponent(OptionConstants.HISTORY_MAX_SIZE, \"Size of Interactions History\", this,", "+                                                  \"Specifies that maximum number of interactions that will be kept in the history.\"));", "+    panel.addComponent(new IntegerOptionComponent(OptionConstants.RECENT_FILES_MAX_SIZE, \"Recent Files List Size\", this,", "+                                                  \"<html>Specifies the number of files to remember<br>\" +", "+                                                  \"in the recently used files list in the File menu.</html>\"));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.JAVAC_ALLOW_ASSERT, \"Allow Assert Keyword in Java 1.4\", this,", "+                                                  \"<html>Specifies that the <code>assert</code> keyword should be allowed under Java 1.4.</html>\"));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.INTERACTIONS_EXIT_PROMPT, \"Prompt if Interactions Pane Exits Unexpectedly\", this,", "+                                                  \"<html>Specifies that DrJava should bring up a dialog<br>\" +", "+                                                  \"if the interactions pane is exits unexpectedly.</html>\"));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.QUIT_PROMPT, \"Prompt Before Quit\", this,", "+                                                  \"Specifies that DrJava should bring up a confirm dialog before exiting.\"));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.BACKUP_FILES, \"Keep emacs style backup files\", this,", "+                                                  \"<html>Specifies that DrJava should keep a backup copy of each<br>\" +", "+                                                  \"open file, named with a tilde (~) at the end of the filename.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81bf6ac8602288176cc11f7d6ccd4330", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "34f2ea007a9d228268fe51193dea23995f823c51", "commitAfterChange": "fc5097bf3e220739875860f050e455b4fcf1d859", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "    private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "    private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-                                \"Sourcepath\", this);", "+                                \"Sourcepath\", this,", "+                                \"<html>Specifies extra locations in which the<br>\" +", "+                                \"debugger should look for java source files.</html>\");", "-    panel.addComponent(sourcePath );", "+    panel.addComponent(sourcePath);", "-                                                  \"Show Current Threads Tab\", this));", "+                                                  \"Show Current Threads Tab\", this,", "+                                                  \"Shows a tab in the debugger displaying the currently running threads.\"));", "-                                                  \"Step Into Java Classes\", this));", "+                                                  \"Step Into Java Classes\", this,", "+                                                  \"<html>Specifies that the debugger should step into java classes,<br>\" +", "+                                                  \"including java.*, javax.*, sun.*, com.sun.*, and com.apple.mrj.*</html>\"));", "-                                                  \"Step Into Interpreter Classes\", this));", "-    panel.addComponent(new BooleanOptionComponent(OptionConstants.DEBUG_STEP_DRJAVA, ", "-                                                  \"Step Into DrJava Classes\", this));", "+                                                  \"Step Into Interpreter Classes\", this,", "+                                                  \"Specifies that the debugger should step into DynamicJava classes.\"));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.DEBUG_STEP_DRJAVA,", "+                                                  \"Step Into DrJava Classes\", this,", "+                                                  \"Specifies that the debugger should step into DrJava classes.\"));", "-                                                 \"Classes/Packages To Exclude\", this));", "+                                                 \"Classes/Packages To Exclude\", this,", "+                                                 \"<html>Specifies classes that the debuggger should not step into.<br>\" +", "+                                                 \"Should be a comma-separated list of fully-qualified classnames.<br>\" +", "+                                                 \"To exclude an entire package, specify packagename.* in the list.</html>\"));"]}], "num": 19844}