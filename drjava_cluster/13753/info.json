{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "276d81d4f3382190a90675358ff4dfb9", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4450a7951589b06d9e097b1c915682", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void threwException(String exceptionClass,                                String message,                                String stackTrace)       throws RemoteException", "signatureAfterChange": "       public Object forValueResult(ValueResult that)", "diff": ["-    public void threwException(String exceptionClass,", "-                               String message,", "-                               String stackTrace)", "-      throws RemoteException", "-    {", "-      synchronized(this) {", "-        exceptionClassBuf = exceptionClass;", "-        exceptionTraceBuf = stackTrace;", "-        exceptionMsgBuf = message;", "-", "-        //System.out.println(\"notify threw\");", "-        this.notify();", "-    }", "+      public Object forValueResult(ValueResult that) {", "+        synchronized(TestJVMExtension.this) {", "+          returnBuf = that.getValueStr();", "+          //System.out.println(\"notify returned\");", "+          TestJVMExtension.this.notify();", "+          return null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a639ac8ff4f2920f458f1c0063d31bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void threwException(String exceptionClass,                              String message,                              String stackTrace) throws RemoteException", "signatureAfterChange": "     public Object forExceptionResult(ExceptionResult that)", "diff": ["-   */", "-  public void threwException(String exceptionClass,", "-                             String message,", "-                             String stackTrace) throws RemoteException", "-  {", "-    _model.replThrewException(exceptionClass, message, stackTrace);", "-  }", "+     */", "+    public Object forExceptionResult(ExceptionResult that) {", "+      _model.replThrewException(that.getExceptionClass(),", "+                                that.getExceptionMessage(),", "+                                that.getStackTrace());", "+      return null;", "+    }"]}], "num": 13753}