{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cc3b534cfd91902f2ac3493dc0a5e5e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0725f61814658739182469165b3e6f58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void setBuildDirectory(File f)", "signatureAfterChange": "   public void setBuildDirectory(File f)", "diff": ["-  /** Sets the class with the project's main method. */", "+  /** Sets the class with the project's main method.  Degenerate version overridden in DefaultGlobalModel. */", "-    if (f != null) {", "-//      //      System.out.println(\"adding: \" + f.getAbsolutePath());", "-//      try {", "-//        _interpreterControl.addBuildDirectoryClassPath(new File(f.getAbsolutePath()).toURL());", "-//      }", "-//      catch(MalformedURLException murle) {", "-//        // this is bad! change this! we should handle this exception better!", "-//        // show a popup like \"invalide build directory\" or something", "-//        throw new RuntimeException(murle);", "-//      }", "+    if (f != null) ", "-    }", "-    ", "-    //        InteractionsDocument iDoc = _interactionsModel.getDocument();", "-    //        synchronized(_interpreterControl) {", "-    //          iDoc.clearCurrentInput();", "-    //          iDoc.insertBeforeLastPrompt(CLASSPATH_OUT_OF_SYNC_MSG, InteractionsDocument.ERROR_STYLE);", "-    //        }", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ed12b758b257765e3fff67ef5eb1500", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b05c72360ee1d1e3de71e0b58a923a7cf06bebf6", "commitAfterChange": "1e64dff50a32582d182c950c323629608db6f054", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   protected static boolean _isEndOfComment(String text, int pos)", "signatureAfterChange": "   protected static boolean _isEndOfComment(String text, int pos)", "diff": ["-    // throwErrorHuh();", "-    if(currChar == '/') {", "+    if (currChar == '/') {", "-        if((beforeCurrChar == '/') || (beforeCurrChar == '*')) {", "-          return true;", "-        }", "+        if ((beforeCurrChar == '/') || (beforeCurrChar == '*'))  return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420f378b2b8acebbd4cb577506e958ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 87, "signatureBeforeChange": "   public void resetInteractionsClasspath()", "signatureAfterChange": "   public void resetInteractionsClasspath()", "diff": ["-    if (projectExtras != null) {", "-      for (URL cpE : projectExtras) { _interactionsModel.addProjectClassPath(cpE); }", "-    }", "+    if (projectExtras != null)  for (URL cpE : projectExtras) { _interactionsModel.addProjectClassPath(cpE); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78785b4392ee416b43ec080cc47785b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void currThreadSuspended()", "signatureAfterChange": "   public void currThreadSuspended()", "diff": ["-   */", "+  /** Called when the current thread is suspended.  */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).currThreadSuspended();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).currThreadSuspended();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92cfe1e14d60f603a0020c036dd63fdc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void stepRequested()", "signatureAfterChange": "   public void stepRequested()", "diff": ["-   */", "+  /** Called when a step is requested on the current thread. Must be executed in event thread. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).stepRequested();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).stepRequested();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42204ab7f13f59c229b3fe9d07b8555", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b05c72360ee1d1e3de71e0b58a923a7cf06bebf6", "commitAfterChange": "1e64dff50a32582d182c950c323629608db6f054", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   protected static boolean _isStartOfComment(String text, int pos)", "signatureAfterChange": "   protected static boolean _isStartOfComment(String text, int pos)", "diff": ["-    // throwErrorHuh();", "-    if(currChar == '/') {", "+    if (currChar == '/') {", "-        if((afterCurrChar == '/') || (afterCurrChar == '*')) {", "-          return true;", "-        }", "-      } catch (StringIndexOutOfBoundsException e) {", "-      }", "+        if ((afterCurrChar == '/') || (afterCurrChar == '*'))  return true;", "+      } catch (StringIndexOutOfBoundsException e) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de191ba06ead04d3c76ab495549c0f98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleWithTrace.java", "commitBeforeChange": "e2dfab60fe06b4a75e9a9d17c0a9c2d622def7c7", "commitAfterChange": "9ee7f82d7f7234787f3748460b46ad8c5d1fc967", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, int pos, int reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, int pos, int reason)", "diff": ["-    if (oldPos > doc.getLength()) {", "-      oldPos = doc.getLength();", "-    }", "+    if (oldPos > doc.getLength()) oldPos = doc.getLength();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e10ecb3b6bfb9dfdbc6741c223114452", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/GroupNode.java", "commitBeforeChange": "1502cfa27280e1c7a53d8bd6dee788f17c33dc23", "commitAfterChange": "f3485582e7c13f9ae164de3e45280fa4f5c05b3e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public GroupNode(String name, INavigatorItemFilter filter)", "signatureAfterChange": "   public GroupNode(String name, INavigatorItemFilter filter)", "diff": ["-  public GroupNode(String name, INavigatorItemFilter filter){", "+  public GroupNode(String name, INavigatorItemFilter filter) {", "-    if (filter == null) {", "-      throw new IllegalArgumentException(\"parameter 'filter' must not be null\");", "-    }", "+    if (filter == null) throw new IllegalArgumentException(\"parameter 'filter' must not be null\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffe93a0240bf053884edb1972c27c4b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void breakpointRemoved(Breakpoint bp)", "signatureAfterChange": "   public void breakpointRemoved(Breakpoint bp)", "diff": ["-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).breakpointRemoved(bp);", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).breakpointRemoved(bp);", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}], "num": 6500}