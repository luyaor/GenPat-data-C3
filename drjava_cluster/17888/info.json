{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c76288a916ebb439ebe63e8a62694ea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a00d5b3b03909461874f0fbb50fe2d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void xtestNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-   */", "-  public void xtestNoJUnitErrors() throws Exception {", "+  /** Tests that a JUnit file with no errors is reported to have no errors. */", "+  public void testNoJUnitErrors() throws Exception {", "-    synchronized(listener) {", "-      doc.startJUnit();", "-      listener.assertJUnitStartCount(1);", "-      listener.wait();", "-    }", "+    _runJUnit(doc);", "+    ", "+    listener.assertJUnitStartCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b69c80038dc0efec6902d284582909", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testErrorsArrayInOrder() throws Exception", "signatureAfterChange": "   public void testErrorsArrayInOrder() throws Exception", "diff": ["-   */", "+  /** Tests that the errors array contains all encountered failures and error in the right order. */", "-    if (_model.getCompilerModel().getNumErrors() > 0) {", "+    if (_model.getCompilerModel().getNumErrors() > 0)", "-    }", "-    synchronized(listener) {", "-      doc.startJUnit();", "-      listener.assertJUnitStartCount(1);", "-      listener.wait();", "-    }", "+    ", "+    _runJUnit(doc);", "+    ", "+    listener.assertJUnitStartCount(1);"]}], "num": 17888}